

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 03 20:03:22 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  0000                     	;# 
   371  0001                     	;# 
   372  0002                     	;# 
   373  0003                     	;# 
   374  0004                     	;# 
   375  0005                     	;# 
   376  0006                     	;# 
   377  0007                     	;# 
   378  0008                     	;# 
   379  0009                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  000E                     	;# 
   386  000F                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0014                     	;# 
   392  0015                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001D                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  0081                     	;# 
   406  0085                     	;# 
   407  0086                     	;# 
   408  0087                     	;# 
   409  0088                     	;# 
   410  0089                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  008E                     	;# 
   414  008F                     	;# 
   415  0090                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0095                     	;# 
   423  0096                     	;# 
   424  0097                     	;# 
   425  0098                     	;# 
   426  0099                     	;# 
   427  009A                     	;# 
   428  009B                     	;# 
   429  009C                     	;# 
   430  009D                     	;# 
   431  009E                     	;# 
   432  009F                     	;# 
   433  0105                     	;# 
   434  0107                     	;# 
   435  0108                     	;# 
   436  0109                     	;# 
   437  010C                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  0185                     	;# 
   443  0187                     	;# 
   444  0188                     	;# 
   445  0189                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  000B                     _INTCON	set	11
   449  001F                     _ADCON0	set	31
   450  0009                     _PORTE	set	9
   451  0007                     _PORTC	set	7
   452  0006                     _PORTB	set	6
   453  0005                     _PORTA	set	5
   454  0001                     _TMR0	set	1
   455  0008                     _PORTD	set	8
   456  0009                     _PORTEbits	set	9
   457  001F                     _ADCON0bits	set	31
   458  001E                     _ADRESH	set	30
   459  000C                     _PIR1bits	set	12
   460  0006                     _PORTBbits	set	6
   461  000B                     _INTCONbits	set	11
   462  0081                     _OPTION_REG	set	129
   463  008C                     _PIE1bits	set	140
   464  0096                     _IOCBbits	set	150
   465  0089                     _TRISE	set	137
   466  0088                     _TRISD	set	136
   467  0087                     _TRISC	set	135
   468  0086                     _TRISB	set	134
   469  0085                     _TRISA	set	133
   470  009E                     _ADRESL	set	158
   471  008F                     _OSCCONbits	set	143
   472  0189                     _ANSELH	set	393
   473  0188                     _ANSEL	set	392
   474                           
   475                           	psect	cinit
   476  0011                     start_initialization:	
   477                           ; #config settings
   478                           
   479  0011                     __initialization:
   480                           
   481                           ; Clear objects allocated to COMMON
   482  0011  01FB               	clrf	__pbssCOMMON& (0+127)
   483  0012  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   484  0013  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   485                           
   486                           ; Clear objects allocated to BANK0
   487  0014  1283               	bcf	3,5	;RP0=0, select bank0
   488  0015  1303               	bcf	3,6	;RP1=0, select bank0
   489  0016  01A0               	clrf	__pbssBANK0& (0+127)
   490  0017  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   491  0018  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   492  0019  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   493  001A  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   494  001B  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   495  001C  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   496  001D  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   497  001E  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   498  001F                     end_of_initialization:	
   499                           ;End of C runtime variable initialization code
   500                           
   501  001F                     __end_of__initialization:
   502  001F  0183               	clrf	3
   503  0020  120A  118A  2A01   	ljmp	_main	;jump to C main() function
   504                           
   505                           	psect	bssCOMMON
   506  007B                     __pbssCOMMON:
   507  007B                     _ADC_NIBBLE2:
   508  007B                     	ds	1
   509  007C                     _ADC_NIBBLE1:
   510  007C                     	ds	1
   511  007D                     _contador:
   512  007D                     	ds	1
   513                           
   514                           	psect	bssBANK0
   515  0020                     __pbssBANK0:
   516  0020                     _ADC_VALOR:
   517  0020                     	ds	2
   518  0022                     _VAL_NIBBLE2:
   519  0022                     	ds	1
   520  0023                     _VAL_NIBBLE1:
   521  0023                     	ds	1
   522  0024                     _VAL_SWAP:
   523  0024                     	ds	1
   524  0025                     _VAL:
   525  0025                     	ds	1
   526  0026                     _cont_multiplex:
   527  0026                     	ds	1
   528  0027                     _ADC_SWAP:
   529  0027                     	ds	1
   530  0028                     _Valor_hex:
   531  0028                     	ds	1
   532                           
   533                           	psect	cstackCOMMON
   534  0070                     __pcstackCOMMON:
   535  0070                     ?_ADC:
   536  0070                     ?_SWAP_ADC:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ??_SWAP_ADC:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_NIBBLE1_ADC:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ??_NIBBLE1_ADC:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_NIBBLE2_ADC:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ??_NIBBLE2_ADC:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_setup:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_ContadorLEDS:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_InitTimer0:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_initOsc:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_display:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ??_display:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_ISR:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_main:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ADC@ADRESL_:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ADC@ADRESH_:	
   582                           ; 1 bytes @ 0x0
   583                           
   584                           
   585                           ; 1 bytes @ 0x0
   586  0070                     	ds	1
   587  0071                     ??_ADC:
   588  0071                     NIBBLE1_ADC@VAL_ADC:	
   589                           ; 1 bytes @ 0x1
   590                           
   591  0071                     NIBBLE2_ADC@VAL_SWAP:	
   592                           ; 1 bytes @ 0x1
   593                           
   594                           
   595                           ; 1 bytes @ 0x1
   596  0071                     	ds	1
   597  0072                     display@ADC_VALOR:
   598                           
   599                           ; 1 bytes @ 0x2
   600  0072                     	ds	2
   601  0074                     SWAP_ADC@VAL_ADC:
   602                           
   603                           ; 1 bytes @ 0x4
   604  0074                     	ds	1
   605  0075                     ??_ISR:
   606                           
   607                           ; 1 bytes @ 0x5
   608  0075                     	ds	6
   609                           
   610                           	psect	cstackBANK0
   611  0029                     __pcstackBANK0:
   612  0029                     ??_ContadorLEDS:
   613  0029                     ??_InitTimer0:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0029                     ??_initOsc:	
   617                           ; 1 bytes @ 0x0
   618                           
   619                           
   620                           ; 1 bytes @ 0x0
   621  0029                     	ds	2
   622  002B                     initOsc@IRCF:
   623                           
   624                           ; 1 bytes @ 0x2
   625  002B                     	ds	1
   626  002C                     ??_setup:
   627  002C                     ??_main:	
   628                           ; 1 bytes @ 0x3
   629                           
   630                           
   631                           ; 1 bytes @ 0x3
   632  002C                     	ds	1
   633                           
   634                           	psect	maintext
   635  0201                     __pmaintext:	
   636 ;;
   637 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   638 ;;
   639 ;; *************** function _main *****************
   640 ;; Defined at:
   641 ;;		line 113 in file "Prueba.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : B00/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   655 ;;      Params:         0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0
   657 ;;      Temps:          0       1       0       0       0
   658 ;;      Totals:         0       1       0       0       0
   659 ;;Total ram usage:        1 bytes
   660 ;; Hardware stack levels required when called:    4
   661 ;; This function calls:
   662 ;;		_ContadorLEDS
   663 ;;		_setup
   664 ;; This function is called by:
   665 ;;		Startup code after reset
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           
   670                           ;psect for function _main
   671  0201                     _main:
   672  0201                     l1181:	
   673                           ;incstack = 0
   674                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   675                           
   676                           
   677                           ;Prueba.c: 114:     setup();
   678  0201  120A  118A  21C5  120A  118A  	fcall	_setup
   679  0206                     l1183:
   680                           
   681                           ;Prueba.c: 115:     contador = 0;
   682  0206  01FD               	clrf	_contador
   683  0207                     l1185:
   684                           
   685                           ;Prueba.c: 116:     cont_multiplex = 0;
   686  0207  1283               	bcf	3,5	;RP0=0, select bank0
   687  0208  1303               	bcf	3,6	;RP1=0, select bank0
   688  0209  01A6               	clrf	_cont_multiplex
   689  020A                     l1187:
   690                           
   691                           ;Prueba.c: 123:         ContadorLEDS();
   692  020A  120A  118A  226F  120A  118A  	fcall	_ContadorLEDS
   693  020F                     l1189:
   694                           
   695                           ;Prueba.c: 125:         if (ADC_VALOR >= contador){
   696  020F  1283               	bcf	3,5	;RP0=0, select bank0
   697  0210  1303               	bcf	3,6	;RP1=0, select bank0
   698  0211  0821               	movf	_ADC_VALOR+1,w
   699  0212  3A80               	xorlw	128
   700  0213  00AC               	movwf	??_main
   701  0214  3080               	movlw	128
   702  0215  022C               	subwf	??_main,w
   703  0216  1D03               	skipz
   704  0217  2A1A               	goto	u205
   705  0218  087D               	movf	_contador,w
   706  0219  0220               	subwf	_ADC_VALOR,w
   707  021A                     u205:
   708  021A  1C03               	skipc
   709  021B  2A1D               	goto	u201
   710  021C  2A1E               	goto	u200
   711  021D                     u201:
   712  021D  2A22               	goto	l144
   713  021E                     u200:
   714  021E                     l1191:
   715                           
   716                           ;Prueba.c: 126:             PORTEbits.RE0 = 1;
   717  021E  1283               	bcf	3,5	;RP0=0, select bank0
   718  021F  1303               	bcf	3,6	;RP1=0, select bank0
   719  0220  1409               	bsf	9,0	;volatile
   720                           
   721                           ;Prueba.c: 127:         }
   722  0221  2A0A               	goto	l1187
   723  0222                     l144:	
   724                           ;Prueba.c: 128:         else {
   725                           
   726                           
   727                           ;Prueba.c: 129:             PORTEbits.RE0 = 0;
   728  0222  1283               	bcf	3,5	;RP0=0, select bank0
   729  0223  1303               	bcf	3,6	;RP1=0, select bank0
   730  0224  1009               	bcf	9,0	;volatile
   731  0225  2A0A               	goto	l1187
   732  0226  120A  118A  280E   	ljmp	start
   733  0229                     __end_of_main:
   734                           
   735                           	psect	text1
   736  01C5                     __ptext1:	
   737 ;; *************** function _setup *****************
   738 ;; Defined at:
   739 ;;		line 139 in file "Prueba.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;		None
   742 ;; Auto vars:     Size  Location     Type
   743 ;;		None
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   753 ;;      Params:         0       0       0       0       0
   754 ;;      Locals:         0       0       0       0       0
   755 ;;      Temps:          0       0       0       0       0
   756 ;;      Totals:         0       0       0       0       0
   757 ;;Total ram usage:        0 bytes
   758 ;; Hardware stack levels used:    1
   759 ;; Hardware stack levels required when called:    3
   760 ;; This function calls:
   761 ;;		_InitTimer0
   762 ;;		_initOsc
   763 ;; This function is called by:
   764 ;;		_main
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           
   769                           ;psect for function _setup
   770  01C5                     _setup:
   771  01C5                     l1091:	
   772                           ;incstack = 0
   773                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   774                           
   775                           
   776                           ;Prueba.c: 140:     initOsc(0b00000110);
   777  01C5  3006               	movlw	6
   778  01C6  120A  118A  2167  120A  118A  	fcall	_initOsc
   779  01CB                     l1093:
   780                           
   781                           ;Prueba.c: 141:     ANSEL = 0b00000001;
   782  01CB  3001               	movlw	1
   783  01CC  1683               	bsf	3,5	;RP0=1, select bank3
   784  01CD  1703               	bsf	3,6	;RP1=1, select bank3
   785  01CE  0088               	movwf	8	;volatile
   786  01CF                     l1095:
   787                           
   788                           ;Prueba.c: 142:     ANSELH = 0;
   789  01CF  0189               	clrf	9	;volatile
   790  01D0                     l1097:
   791                           
   792                           ;Prueba.c: 143:     TRISA = 0b00000001;
   793  01D0  3001               	movlw	1
   794  01D1  1683               	bsf	3,5	;RP0=1, select bank1
   795  01D2  1303               	bcf	3,6	;RP1=0, select bank1
   796  01D3  0085               	movwf	5	;volatile
   797  01D4                     l1099:
   798                           
   799                           ;Prueba.c: 144:     PORTA = 0;
   800  01D4  1283               	bcf	3,5	;RP0=0, select bank0
   801  01D5  1303               	bcf	3,6	;RP1=0, select bank0
   802  01D6  0185               	clrf	5	;volatile
   803  01D7                     l1101:
   804                           
   805                           ;Prueba.c: 145:     TRISB = 0b00000011;
   806  01D7  3003               	movlw	3
   807  01D8  1683               	bsf	3,5	;RP0=1, select bank1
   808  01D9  1303               	bcf	3,6	;RP1=0, select bank1
   809  01DA  0086               	movwf	6	;volatile
   810  01DB                     l1103:
   811                           
   812                           ;Prueba.c: 146:     PORTB = 0;
   813  01DB  1283               	bcf	3,5	;RP0=0, select bank0
   814  01DC  1303               	bcf	3,6	;RP1=0, select bank0
   815  01DD  0186               	clrf	6	;volatile
   816  01DE                     l1105:
   817                           
   818                           ;Prueba.c: 147:     TRISC = 0;
   819  01DE  1683               	bsf	3,5	;RP0=1, select bank1
   820  01DF  1303               	bcf	3,6	;RP1=0, select bank1
   821  01E0  0187               	clrf	7	;volatile
   822  01E1                     l1107:
   823                           
   824                           ;Prueba.c: 148:     PORTC = 0;
   825  01E1  1283               	bcf	3,5	;RP0=0, select bank0
   826  01E2  1303               	bcf	3,6	;RP1=0, select bank0
   827  01E3  0187               	clrf	7	;volatile
   828  01E4                     l1109:
   829                           
   830                           ;Prueba.c: 149:     TRISD = 0;
   831  01E4  1683               	bsf	3,5	;RP0=1, select bank1
   832  01E5  1303               	bcf	3,6	;RP1=0, select bank1
   833  01E6  0188               	clrf	8	;volatile
   834  01E7                     l1111:
   835                           
   836                           ;Prueba.c: 150:     PORTD = 0;
   837  01E7  1283               	bcf	3,5	;RP0=0, select bank0
   838  01E8  1303               	bcf	3,6	;RP1=0, select bank0
   839  01E9  0188               	clrf	8	;volatile
   840  01EA                     l1113:
   841                           
   842                           ;Prueba.c: 151:     TRISE = 0;
   843  01EA  1683               	bsf	3,5	;RP0=1, select bank1
   844  01EB  1303               	bcf	3,6	;RP1=0, select bank1
   845  01EC  0189               	clrf	9	;volatile
   846  01ED                     l1115:
   847                           
   848                           ;Prueba.c: 152:     PORTE = 0;
   849  01ED  1283               	bcf	3,5	;RP0=0, select bank0
   850  01EE  1303               	bcf	3,6	;RP1=0, select bank0
   851  01EF  0189               	clrf	9	;volatile
   852  01F0                     l1117:
   853                           
   854                           ;Prueba.c: 153:     InitTimer0();
   855  01F0  120A  118A  2248  120A  118A  	fcall	_InitTimer0
   856  01F5                     l1119:
   857                           
   858                           ;Prueba.c: 158:     IOCBbits.IOCB0 = 1;
   859  01F5  1683               	bsf	3,5	;RP0=1, select bank1
   860  01F6  1303               	bcf	3,6	;RP1=0, select bank1
   861  01F7  1416               	bsf	22,0	;volatile
   862  01F8                     l1121:
   863                           
   864                           ;Prueba.c: 159:     IOCBbits.IOCB1 = 1;
   865  01F8  1496               	bsf	22,1	;volatile
   866  01F9                     l1123:
   867                           
   868                           ;Prueba.c: 163:     PIE1bits.ADIE = 1;
   869  01F9  170C               	bsf	12,6	;volatile
   870  01FA                     l1125:
   871                           
   872                           ;Prueba.c: 164:     PIR1bits.ADIF = 0;
   873  01FA  1283               	bcf	3,5	;RP0=0, select bank0
   874  01FB  1303               	bcf	3,6	;RP1=0, select bank0
   875  01FC  130C               	bcf	12,6	;volatile
   876  01FD                     l1127:
   877                           
   878                           ;Prueba.c: 165:     ADCON0 = 0b11000001;
   879  01FD  30C1               	movlw	193
   880  01FE  009F               	movwf	31	;volatile
   881  01FF                     l1129:
   882                           
   883                           ;Prueba.c: 166:     ADCON0bits.GO_nDONE = 1;
   884  01FF  149F               	bsf	31,1	;volatile
   885  0200                     l151:
   886  0200  0008               	return
   887  0201                     __end_of_setup:
   888                           
   889                           	psect	text2
   890  0167                     __ptext2:	
   891 ;; *************** function _initOsc *****************
   892 ;; Defined at:
   893 ;;		line 3 in file "Oscilador.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;  IRCF            1    wreg     unsigned char 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  IRCF            1    2[BANK0 ] unsigned char 
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   907 ;;      Params:         0       0       0       0       0
   908 ;;      Locals:         0       1       0       0       0
   909 ;;      Temps:          0       2       0       0       0
   910 ;;      Totals:         0       3       0       0       0
   911 ;;Total ram usage:        3 bytes
   912 ;; Hardware stack levels used:    1
   913 ;; Hardware stack levels required when called:    2
   914 ;; This function calls:
   915 ;;		Nothing
   916 ;; This function is called by:
   917 ;;		_setup
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           
   922                           ;psect for function _initOsc
   923  0167                     _initOsc:
   924                           
   925                           ;incstack = 0
   926                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   927                           ;initOsc@IRCF stored from wreg
   928  0167  1283               	bcf	3,5	;RP0=0, select bank0
   929  0168  1303               	bcf	3,6	;RP1=0, select bank0
   930  0169  00AB               	movwf	initOsc@IRCF
   931  016A                     l1007:
   932                           
   933                           ;Oscilador.c: 5:     switch(IRCF){
   934  016A  29A1               	goto	l1011
   935  016B                     l6:	
   936                           ;Oscilador.c: 6:         case 0:
   937                           
   938                           
   939                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   940  016B  1683               	bsf	3,5	;RP0=1, select bank1
   941  016C  1303               	bcf	3,6	;RP1=0, select bank1
   942  016D  130F               	bcf	15,6	;volatile
   943                           
   944                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   945  016E  128F               	bcf	15,5	;volatile
   946                           
   947                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   948  016F  120F               	bcf	15,4	;volatile
   949                           
   950                           ;Oscilador.c: 10:             break;
   951  0170  29C3               	goto	l7
   952  0171                     l8:	
   953                           ;Oscilador.c: 11:          case 1:
   954                           
   955                           
   956                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   957  0171  1683               	bsf	3,5	;RP0=1, select bank1
   958  0172  1303               	bcf	3,6	;RP1=0, select bank1
   959  0173  130F               	bcf	15,6	;volatile
   960                           
   961                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   962  0174  128F               	bcf	15,5	;volatile
   963                           
   964                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   965  0175  160F               	bsf	15,4	;volatile
   966                           
   967                           ;Oscilador.c: 15:             break;
   968  0176  29C3               	goto	l7
   969  0177                     l9:	
   970                           ;Oscilador.c: 16:         case 2:
   971                           
   972                           
   973                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   974  0177  1683               	bsf	3,5	;RP0=1, select bank1
   975  0178  1303               	bcf	3,6	;RP1=0, select bank1
   976  0179  130F               	bcf	15,6	;volatile
   977                           
   978                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   979  017A  168F               	bsf	15,5	;volatile
   980                           
   981                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   982  017B  120F               	bcf	15,4	;volatile
   983                           
   984                           ;Oscilador.c: 20:             break;
   985  017C  29C3               	goto	l7
   986  017D                     l10:	
   987                           ;Oscilador.c: 21:         case 3:
   988                           
   989                           
   990                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   991  017D  1683               	bsf	3,5	;RP0=1, select bank1
   992  017E  1303               	bcf	3,6	;RP1=0, select bank1
   993  017F  130F               	bcf	15,6	;volatile
   994                           
   995                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   996  0180  168F               	bsf	15,5	;volatile
   997                           
   998                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   999  0181  160F               	bsf	15,4	;volatile
  1000                           
  1001                           ;Oscilador.c: 25:             break;
  1002  0182  29C3               	goto	l7
  1003  0183                     l11:	
  1004                           ;Oscilador.c: 26:         case 4:
  1005                           
  1006                           
  1007                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  1008  0183  1683               	bsf	3,5	;RP0=1, select bank1
  1009  0184  1303               	bcf	3,6	;RP1=0, select bank1
  1010  0185  170F               	bsf	15,6	;volatile
  1011                           
  1012                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  1013  0186  128F               	bcf	15,5	;volatile
  1014                           
  1015                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  1016  0187  120F               	bcf	15,4	;volatile
  1017                           
  1018                           ;Oscilador.c: 30:             break;
  1019  0188  29C3               	goto	l7
  1020  0189                     l12:	
  1021                           ;Oscilador.c: 31:         case 5:
  1022                           
  1023                           
  1024                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1025  0189  1683               	bsf	3,5	;RP0=1, select bank1
  1026  018A  1303               	bcf	3,6	;RP1=0, select bank1
  1027  018B  170F               	bsf	15,6	;volatile
  1028                           
  1029                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1030  018C  128F               	bcf	15,5	;volatile
  1031                           
  1032                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1033  018D  160F               	bsf	15,4	;volatile
  1034                           
  1035                           ;Oscilador.c: 35:             break;
  1036  018E  29C3               	goto	l7
  1037  018F                     l13:	
  1038                           ;Oscilador.c: 36:         case 6:
  1039                           
  1040                           
  1041                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1042  018F  1683               	bsf	3,5	;RP0=1, select bank1
  1043  0190  1303               	bcf	3,6	;RP1=0, select bank1
  1044  0191  170F               	bsf	15,6	;volatile
  1045                           
  1046                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1047  0192  168F               	bsf	15,5	;volatile
  1048                           
  1049                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1050  0193  120F               	bcf	15,4	;volatile
  1051                           
  1052                           ;Oscilador.c: 40:             break;
  1053  0194  29C3               	goto	l7
  1054  0195                     l14:	
  1055                           ;Oscilador.c: 41:         case 7:
  1056                           
  1057                           
  1058                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1059  0195  1683               	bsf	3,5	;RP0=1, select bank1
  1060  0196  1303               	bcf	3,6	;RP1=0, select bank1
  1061  0197  170F               	bsf	15,6	;volatile
  1062                           
  1063                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1064  0198  168F               	bsf	15,5	;volatile
  1065                           
  1066                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1067  0199  160F               	bsf	15,4	;volatile
  1068                           
  1069                           ;Oscilador.c: 45:             break;
  1070  019A  29C3               	goto	l7
  1071  019B                     l15:	
  1072                           ;Oscilador.c: 46:         default:
  1073                           
  1074                           
  1075                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1076  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1077  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1078  019D  170F               	bsf	15,6	;volatile
  1079                           
  1080                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1081  019E  168F               	bsf	15,5	;volatile
  1082                           
  1083                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1084  019F  120F               	bcf	15,4	;volatile
  1085                           
  1086                           ;Oscilador.c: 50:             break;
  1087  01A0  29C3               	goto	l7
  1088  01A1                     l1011:
  1089  01A1  082B               	movf	initOsc@IRCF,w
  1090  01A2  00A9               	movwf	??_initOsc
  1091  01A3  01AA               	clrf	??_initOsc+1
  1092                           
  1093                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1094                           ; Switch size 1, requested type "simple"
  1095                           ; Number of cases is 1, Range of values is 0 to 0
  1096                           ; switch strategies available:
  1097                           ; Name         Instructions Cycles
  1098                           ; simple_byte            4     3 (average)
  1099                           ; direct_byte           11     8 (fixed)
  1100                           ; jumptable            260     6 (fixed)
  1101                           ;	Chosen strategy is simple_byte
  1102  01A4  082A               	movf	??_initOsc+1,w
  1103  01A5  3A00               	xorlw	0	; case 0
  1104  01A6  1903               	skipnz
  1105  01A7  29A9               	goto	l1247
  1106  01A8  299B               	goto	l15
  1107  01A9                     l1247:
  1108                           
  1109                           ; Switch size 1, requested type "simple"
  1110                           ; Number of cases is 8, Range of values is 0 to 7
  1111                           ; switch strategies available:
  1112                           ; Name         Instructions Cycles
  1113                           ; simple_byte           25    13 (average)
  1114                           ; direct_byte           32     8 (fixed)
  1115                           ; jumptable            260     6 (fixed)
  1116                           ;	Chosen strategy is simple_byte
  1117  01A9  0829               	movf	??_initOsc,w
  1118  01AA  3A00               	xorlw	0	; case 0
  1119  01AB  1903               	skipnz
  1120  01AC  296B               	goto	l6
  1121  01AD  3A01               	xorlw	1	; case 1
  1122  01AE  1903               	skipnz
  1123  01AF  2971               	goto	l8
  1124  01B0  3A03               	xorlw	3	; case 2
  1125  01B1  1903               	skipnz
  1126  01B2  2977               	goto	l9
  1127  01B3  3A01               	xorlw	1	; case 3
  1128  01B4  1903               	skipnz
  1129  01B5  297D               	goto	l10
  1130  01B6  3A07               	xorlw	7	; case 4
  1131  01B7  1903               	skipnz
  1132  01B8  2983               	goto	l11
  1133  01B9  3A01               	xorlw	1	; case 5
  1134  01BA  1903               	skipnz
  1135  01BB  2989               	goto	l12
  1136  01BC  3A03               	xorlw	3	; case 6
  1137  01BD  1903               	skipnz
  1138  01BE  298F               	goto	l13
  1139  01BF  3A01               	xorlw	1	; case 7
  1140  01C0  1903               	skipnz
  1141  01C1  2995               	goto	l14
  1142  01C2  299B               	goto	l15
  1143  01C3                     l7:
  1144                           
  1145                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1146  01C3  140F               	bsf	15,0	;volatile
  1147  01C4                     l16:
  1148  01C4  0008               	return
  1149  01C5                     __end_of_initOsc:
  1150                           
  1151                           	psect	text3
  1152  0248                     __ptext3:	
  1153 ;; *************** function _InitTimer0 *****************
  1154 ;; Defined at:
  1155 ;;		line 178 in file "Prueba.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;		None
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1169 ;;      Params:         0       0       0       0       0
  1170 ;;      Locals:         0       0       0       0       0
  1171 ;;      Temps:          0       0       0       0       0
  1172 ;;      Totals:         0       0       0       0       0
  1173 ;;Total ram usage:        0 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; Hardware stack levels required when called:    2
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_setup
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           
  1184                           ;psect for function _InitTimer0
  1185  0248                     _InitTimer0:
  1186  0248                     l1019:	
  1187                           ;incstack = 0
  1188                           ; Regs used in _InitTimer0: [wreg]
  1189                           
  1190                           
  1191                           ;Prueba.c: 179:   OPTION_REG = 0x86;
  1192  0248  3086               	movlw	134
  1193  0249  1683               	bsf	3,5	;RP0=1, select bank1
  1194  024A  1303               	bcf	3,6	;RP1=0, select bank1
  1195  024B  0081               	movwf	1	;volatile
  1196                           
  1197                           ;Prueba.c: 180:   TMR0 = 100;
  1198  024C  3064               	movlw	100
  1199  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1200  024E  1303               	bcf	3,6	;RP1=0, select bank0
  1201  024F  0081               	movwf	1	;volatile
  1202                           
  1203                           ;Prueba.c: 181:   INTCON = 0b1110101;
  1204  0250  3075               	movlw	117
  1205  0251  008B               	movwf	11	;volatile
  1206  0252                     l157:
  1207  0252  0008               	return
  1208  0253                     __end_of_InitTimer0:
  1209                           
  1210                           	psect	text4
  1211  026F                     __ptext4:	
  1212 ;; *************** function _ContadorLEDS *****************
  1213 ;; Defined at:
  1214 ;;		line 173 in file "Prueba.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1228 ;;      Params:         0       0       0       0       0
  1229 ;;      Locals:         0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0
  1231 ;;      Totals:         0       0       0       0       0
  1232 ;;Total ram usage:        0 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    2
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_main
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           
  1243                           ;psect for function _ContadorLEDS
  1244  026F                     _ContadorLEDS:
  1245  026F                     l1131:	
  1246                           ;incstack = 0
  1247                           ; Regs used in _ContadorLEDS: [wreg]
  1248                           
  1249                           
  1250                           ;Prueba.c: 174:     PORTC = contador;
  1251  026F  087D               	movf	_contador,w
  1252  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0272  0087               	movwf	7	;volatile
  1255  0273                     l154:
  1256  0273  0008               	return
  1257  0274                     __end_of_ContadorLEDS:
  1258                           
  1259                           	psect	text5
  1260  00D1                     __ptext5:	
  1261 ;; *************** function _ISR *****************
  1262 ;; Defined at:
  1263 ;;		line 58 in file "Prueba.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;		None
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;		None
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1277 ;;      Params:         0       0       0       0       0
  1278 ;;      Locals:         0       0       0       0       0
  1279 ;;      Temps:          6       0       0       0       0
  1280 ;;      Totals:         6       0       0       0       0
  1281 ;;Total ram usage:        6 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    1
  1284 ;; This function calls:
  1285 ;;		_ADC
  1286 ;;		_NIBBLE1_ADC
  1287 ;;		_NIBBLE2_ADC
  1288 ;;		_SWAP_ADC
  1289 ;;		_display
  1290 ;; This function is called by:
  1291 ;;		Interrupt level 1
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           
  1296                           ;psect for function _ISR
  1297  00D1                     _ISR:
  1298  00D1                     i1l1133:
  1299                           
  1300                           ;Prueba.c: 60:     if (INTCONbits.RBIF == 1){
  1301  00D1  1C0B               	btfss	11,0	;volatile
  1302  00D2  28D4               	goto	u13_21
  1303  00D3  28D5               	goto	u13_20
  1304  00D4                     u13_21:
  1305  00D4  28EE               	goto	i1l1149
  1306  00D5                     u13_20:
  1307  00D5                     i1l1135:
  1308                           
  1309                           ;Prueba.c: 61:         if (PORTBbits.RB0 == 1){
  1310  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1311  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1312  00D7  1C06               	btfss	6,0	;volatile
  1313  00D8  28DA               	goto	u14_21
  1314  00D9  28DB               	goto	u14_20
  1315  00DA                     u14_21:
  1316  00DA  28E3               	goto	i1l1141
  1317  00DB                     u14_20:
  1318  00DB                     i1l129:	
  1319                           ;Prueba.c: 64:             }
  1320                           
  1321                           
  1322                           ;Prueba.c: 62:             while (PORTBbits.RB0 == 1){
  1323  00DB  1806               	btfsc	6,0	;volatile
  1324  00DC  28DE               	goto	u15_21
  1325  00DD  28DF               	goto	u15_20
  1326  00DE                     u15_21:
  1327  00DE  28DB               	goto	i1l129
  1328  00DF                     u15_20:
  1329  00DF                     i1l1139:
  1330                           
  1331                           ;Prueba.c: 65:             contador++;
  1332  00DF  3001               	movlw	1
  1333  00E0  00F5               	movwf	??_ISR
  1334  00E1  0875               	movf	??_ISR,w
  1335  00E2  07FD               	addwf	_contador,f
  1336  00E3                     i1l1141:
  1337                           
  1338                           ;Prueba.c: 67:         if (PORTBbits.RB1 == 1){
  1339  00E3  1C86               	btfss	6,1	;volatile
  1340  00E4  28E6               	goto	u16_21
  1341  00E5  28E7               	goto	u16_20
  1342  00E6                     u16_21:
  1343  00E6  28ED               	goto	i1l1147
  1344  00E7                     u16_20:
  1345  00E7                     i1l133:	
  1346                           ;Prueba.c: 70:             }
  1347                           
  1348                           
  1349                           ;Prueba.c: 68:             while (PORTBbits.RB1 == 1){
  1350  00E7  1886               	btfsc	6,1	;volatile
  1351  00E8  28EA               	goto	u17_21
  1352  00E9  28EB               	goto	u17_20
  1353  00EA                     u17_21:
  1354  00EA  28E7               	goto	i1l133
  1355  00EB                     u17_20:
  1356  00EB                     i1l1145:
  1357                           
  1358                           ;Prueba.c: 71:             contador--;
  1359  00EB  3001               	movlw	1
  1360  00EC  02FD               	subwf	_contador,f
  1361  00ED                     i1l1147:
  1362                           
  1363                           ;Prueba.c: 73:         INTCONbits.RBIF = 0;
  1364  00ED  100B               	bcf	11,0	;volatile
  1365  00EE                     i1l1149:
  1366                           
  1367                           ;Prueba.c: 76:     if (PIR1bits.ADIF == 1){
  1368  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1369  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1370  00F0  1F0C               	btfss	12,6	;volatile
  1371  00F1  28F3               	goto	u18_21
  1372  00F2  28F4               	goto	u18_20
  1373  00F3                     u18_21:
  1374  00F3  2936               	goto	i1l1165
  1375  00F4                     u18_20:
  1376  00F4                     i1l1151:
  1377                           
  1378                           ;Prueba.c: 77:         ADC_VALOR = ADC(ADRESL, ADRESH);
  1379  00F4  081E               	movf	30,w	;volatile
  1380  00F5  00F5               	movwf	??_ISR
  1381  00F6  0875               	movf	??_ISR,w
  1382  00F7  00F0               	movwf	ADC@ADRESH_
  1383  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  1384  00F9  1303               	bcf	3,6	;RP1=0, select bank1
  1385  00FA  081E               	movf	30,w	;volatile
  1386  00FB  120A  118A  2267  120A  118A  	fcall	_ADC
  1387  0100  00F6               	movwf	??_ISR+1
  1388  0101  01F7               	clrf	??_ISR+2
  1389  0102  0876               	movf	??_ISR+1,w
  1390  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1391  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1392  0105  00A0               	movwf	_ADC_VALOR
  1393  0106  0877               	movf	??_ISR+2,w
  1394  0107  00A1               	movwf	_ADC_VALOR+1
  1395  0108                     i1l1153:
  1396                           
  1397                           ;Prueba.c: 78:         ADC_SWAP = SWAP_ADC(ADC_VALOR);
  1398  0108  0820               	movf	_ADC_VALOR,w
  1399  0109  120A  118A  2229  120A  118A  	fcall	_SWAP_ADC
  1400  010E  00F5               	movwf	??_ISR
  1401  010F  0875               	movf	??_ISR,w
  1402  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1403  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1404  0112  00A7               	movwf	_ADC_SWAP
  1405  0113                     i1l1155:
  1406                           
  1407                           ;Prueba.c: 79:         ADC_NIBBLE1 = NIBBLE1_ADC(ADC_VALOR);
  1408  0113  0820               	movf	_ADC_VALOR,w
  1409  0114  120A  118A  225D  120A  118A  	fcall	_NIBBLE1_ADC
  1410  0119  00F5               	movwf	??_ISR
  1411  011A  0875               	movf	??_ISR,w
  1412  011B  00FC               	movwf	_ADC_NIBBLE1
  1413  011C                     i1l1157:
  1414                           
  1415                           ;Prueba.c: 80:         ADC_NIBBLE2 = NIBBLE2_ADC(ADC_SWAP);
  1416  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1417  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1418  011E  0827               	movf	_ADC_SWAP,w
  1419  011F  120A  118A  2253  120A  118A  	fcall	_NIBBLE2_ADC
  1420  0124  00F5               	movwf	??_ISR
  1421  0125  0875               	movf	??_ISR,w
  1422  0126  00FB               	movwf	_ADC_NIBBLE2
  1423  0127                     i1l1159:
  1424                           
  1425                           ;Prueba.c: 81:         PIR1bits.ADIF = 0;
  1426  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1427  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1428  0129  130C               	bcf	12,6	;volatile
  1429  012A                     i1l1161:
  1430                           
  1431                           ;Prueba.c: 82:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1432  012A  301A               	movlw	26
  1433  012B  00F6               	movwf	??_ISR+1
  1434  012C  30F8               	movlw	248
  1435  012D  00F5               	movwf	??_ISR
  1436  012E                     u21_27:
  1437  012E  0BF5               	decfsz	??_ISR,f
  1438  012F  292E               	goto	u21_27
  1439  0130  0BF6               	decfsz	??_ISR+1,f
  1440  0131  292E               	goto	u21_27
  1441  0132  0000               	nop
  1442  0133                     i1l1163:
  1443                           
  1444                           ;Prueba.c: 83:         ADCON0bits.GO_nDONE = 1;
  1445  0133  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0134  1303               	bcf	3,6	;RP1=0, select bank0
  1447  0135  149F               	bsf	31,1	;volatile
  1448  0136                     i1l1165:
  1449                           
  1450                           ;Prueba.c: 86:     if (INTCONbits.TMR0IF == 1){
  1451  0136  1D0B               	btfss	11,2	;volatile
  1452  0137  2939               	goto	u19_21
  1453  0138  293A               	goto	u19_20
  1454  0139                     u19_21:
  1455  0139  295E               	goto	i1l138
  1456  013A                     u19_20:
  1457  013A                     i1l1167:
  1458                           
  1459                           ;Prueba.c: 87:         PORTEbits.RE1 = 1;
  1460  013A  1489               	bsf	9,1	;volatile
  1461                           
  1462                           ;Prueba.c: 88:         PORTEbits.RE2 = 0;
  1463  013B  1109               	bcf	9,2	;volatile
  1464  013C                     i1l1169:
  1465                           
  1466                           ;Prueba.c: 89:         PORTD = display(ADC_NIBBLE1);
  1467  013C  087C               	movf	_ADC_NIBBLE1,w
  1468  013D  120A  118A  2023  120A  118A  	fcall	_display
  1469  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1470  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1471  0144  0088               	movwf	8	;volatile
  1472  0145                     i1l1171:
  1473                           
  1474                           ;Prueba.c: 90:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1475  0145  3003               	movlw	3
  1476  0146  00F6               	movwf	??_ISR+1
  1477  0147  3097               	movlw	151
  1478  0148  00F5               	movwf	??_ISR
  1479  0149                     u22_27:
  1480  0149  0BF5               	decfsz	??_ISR,f
  1481  014A  2949               	goto	u22_27
  1482  014B  0BF6               	decfsz	??_ISR+1,f
  1483  014C  2949               	goto	u22_27
  1484  014D  294E               	nop2
  1485  014E                     i1l1173:
  1486                           
  1487                           ;Prueba.c: 91:         PORTEbits.RE1 = 0;
  1488  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1489  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1490  0150  1089               	bcf	9,1	;volatile
  1491  0151                     i1l1175:
  1492                           
  1493                           ;Prueba.c: 92:         PORTEbits.RE2 = 1;
  1494  0151  1509               	bsf	9,2	;volatile
  1495  0152                     i1l1177:
  1496                           
  1497                           ;Prueba.c: 93:         PORTD = display(ADC_NIBBLE2);
  1498  0152  087B               	movf	_ADC_NIBBLE2,w
  1499  0153  120A  118A  2023  120A  118A  	fcall	_display
  1500  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1501  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1502  015A  0088               	movwf	8	;volatile
  1503                           
  1504                           ;Prueba.c: 94:         TMR0 = 100;
  1505  015B  3064               	movlw	100
  1506  015C  0081               	movwf	1	;volatile
  1507  015D                     i1l1179:
  1508                           
  1509                           ;Prueba.c: 95:         INTCONbits.TMR0IF = 0;
  1510  015D  110B               	bcf	11,2	;volatile
  1511  015E                     i1l138:
  1512  015E  087A               	movf	??_ISR+5,w
  1513  015F  008A               	movwf	10
  1514  0160  0879               	movf	??_ISR+4,w
  1515  0161  0084               	movwf	4
  1516  0162  0E78               	swapf	??_ISR+3,w
  1517  0163  0083               	movwf	3
  1518  0164  0EFE               	swapf	btemp,f
  1519  0165  0E7E               	swapf	btemp,w
  1520  0166  0009               	retfie
  1521  0167                     __end_of_ISR:
  1522                           
  1523                           	psect	intentry
  1524  0004                     __pintentry:	
  1525                           ;incstack = 0
  1526                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1527                           
  1528  0004                     interrupt_function:
  1529  007E                     saved_w	set	btemp
  1530  0004  00FE               	movwf	btemp
  1531  0005  0E03               	swapf	3,w
  1532  0006  00F8               	movwf	??_ISR+3
  1533  0007  0804               	movf	4,w
  1534  0008  00F9               	movwf	??_ISR+4
  1535  0009  080A               	movf	10,w
  1536  000A  00FA               	movwf	??_ISR+5
  1537  000B  120A  118A  28D1   	ljmp	_ISR
  1538                           
  1539                           	psect	text6
  1540  0023                     __ptext6:	
  1541 ;; *************** function _display *****************
  1542 ;; Defined at:
  1543 ;;		line 5 in file "Display.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  ADC_VALOR       1    wreg     unsigned char 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  ADC_VALOR       1    2[COMMON] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      unsigned char 
  1550 ;; Registers used:
  1551 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1557 ;;      Params:         0       0       0       0       0
  1558 ;;      Locals:         1       0       0       0       0
  1559 ;;      Temps:          2       0       0       0       0
  1560 ;;      Totals:         3       0       0       0       0
  1561 ;;Total ram usage:        3 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_ISR
  1567 ;;		_DisplayADC1
  1568 ;;		_DisplayADC2
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function _display
  1574  0023                     _display:
  1575                           
  1576                           ;incstack = 0
  1577                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
  1578                           ;display@ADC_VALOR stored from wreg
  1579  0023  00F2               	movwf	display@ADC_VALOR
  1580  0024                     i1l1021:
  1581                           
  1582                           ;Display.c: 7:     switch(ADC_VALOR){
  1583  0024  2895               	goto	i1l1059
  1584  0025                     i1l1023:
  1585                           
  1586                           ;Display.c: 9:             Valor_hex = 0b00111111;
  1587  0025  303F               	movlw	63
  1588  0026  00F0               	movwf	??_display
  1589  0027  0870               	movf	??_display,w
  1590  0028  1283               	bcf	3,5	;RP0=0, select bank0
  1591  0029  1303               	bcf	3,6	;RP1=0, select bank0
  1592  002A  00A8               	movwf	_Valor_hex
  1593                           
  1594                           ;Display.c: 10:             break;
  1595  002B  28CF               	goto	i1l1061
  1596  002C                     i1l1025:
  1597                           
  1598                           ;Display.c: 12:             Valor_hex = 0b000000110;
  1599  002C  3006               	movlw	6
  1600  002D  00F0               	movwf	??_display
  1601  002E  0870               	movf	??_display,w
  1602  002F  1283               	bcf	3,5	;RP0=0, select bank0
  1603  0030  1303               	bcf	3,6	;RP1=0, select bank0
  1604  0031  00A8               	movwf	_Valor_hex
  1605                           
  1606                           ;Display.c: 13:             break;
  1607  0032  28CF               	goto	i1l1061
  1608  0033                     i1l1027:
  1609                           
  1610                           ;Display.c: 15:             Valor_hex = 0b11011011;
  1611  0033  30DB               	movlw	219
  1612  0034  00F0               	movwf	??_display
  1613  0035  0870               	movf	??_display,w
  1614  0036  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0037  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0038  00A8               	movwf	_Valor_hex
  1617                           
  1618                           ;Display.c: 16:             break;
  1619  0039  28CF               	goto	i1l1061
  1620  003A                     i1l1029:
  1621                           
  1622                           ;Display.c: 18:             Valor_hex = 0b01001111;
  1623  003A  304F               	movlw	79
  1624  003B  00F0               	movwf	??_display
  1625  003C  0870               	movf	??_display,w
  1626  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1627  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1628  003F  00A8               	movwf	_Valor_hex
  1629                           
  1630                           ;Display.c: 19:             break;
  1631  0040  28CF               	goto	i1l1061
  1632  0041                     i1l1031:
  1633                           
  1634                           ;Display.c: 21:             Valor_hex = 0b01100110;
  1635  0041  3066               	movlw	102
  1636  0042  00F0               	movwf	??_display
  1637  0043  0870               	movf	??_display,w
  1638  0044  1283               	bcf	3,5	;RP0=0, select bank0
  1639  0045  1303               	bcf	3,6	;RP1=0, select bank0
  1640  0046  00A8               	movwf	_Valor_hex
  1641                           
  1642                           ;Display.c: 22:             break;
  1643  0047  28CF               	goto	i1l1061
  1644  0048                     i1l1033:
  1645                           
  1646                           ;Display.c: 24:             Valor_hex = 0b01101101;
  1647  0048  306D               	movlw	109
  1648  0049  00F0               	movwf	??_display
  1649  004A  0870               	movf	??_display,w
  1650  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1651  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1652  004D  00A8               	movwf	_Valor_hex
  1653                           
  1654                           ;Display.c: 25:             break;
  1655  004E  28CF               	goto	i1l1061
  1656  004F                     i1l1035:
  1657                           
  1658                           ;Display.c: 27:             Valor_hex = 0b01111101;
  1659  004F  307D               	movlw	125
  1660  0050  00F0               	movwf	??_display
  1661  0051  0870               	movf	??_display,w
  1662  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0054  00A8               	movwf	_Valor_hex
  1665                           
  1666                           ;Display.c: 28:             break;
  1667  0055  28CF               	goto	i1l1061
  1668  0056                     i1l1037:
  1669                           
  1670                           ;Display.c: 30:             Valor_hex = 0b00000111;
  1671  0056  3007               	movlw	7
  1672  0057  00F0               	movwf	??_display
  1673  0058  0870               	movf	??_display,w
  1674  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1675  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1676  005B  00A8               	movwf	_Valor_hex
  1677                           
  1678                           ;Display.c: 31:             break;
  1679  005C  28CF               	goto	i1l1061
  1680  005D                     i1l1039:
  1681                           
  1682                           ;Display.c: 33:             Valor_hex = 0b01111111;
  1683  005D  307F               	movlw	127
  1684  005E  00F0               	movwf	??_display
  1685  005F  0870               	movf	??_display,w
  1686  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1687  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1688  0062  00A8               	movwf	_Valor_hex
  1689                           
  1690                           ;Display.c: 34:             break;
  1691  0063  28CF               	goto	i1l1061
  1692  0064                     i1l1041:
  1693                           
  1694                           ;Display.c: 36:             Valor_hex = 0b01101111;
  1695  0064  306F               	movlw	111
  1696  0065  00F0               	movwf	??_display
  1697  0066  0870               	movf	??_display,w
  1698  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1699  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1700  0069  00A8               	movwf	_Valor_hex
  1701                           
  1702                           ;Display.c: 37:             break;
  1703  006A  28CF               	goto	i1l1061
  1704  006B                     i1l1043:
  1705                           
  1706                           ;Display.c: 39:             Valor_hex = 0b01110111;
  1707  006B  3077               	movlw	119
  1708  006C  00F0               	movwf	??_display
  1709  006D  0870               	movf	??_display,w
  1710  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1711  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1712  0070  00A8               	movwf	_Valor_hex
  1713                           
  1714                           ;Display.c: 40:             break;
  1715  0071  28CF               	goto	i1l1061
  1716  0072                     i1l1045:
  1717                           
  1718                           ;Display.c: 42:             Valor_hex = 0b01111100;
  1719  0072  307C               	movlw	124
  1720  0073  00F0               	movwf	??_display
  1721  0074  0870               	movf	??_display,w
  1722  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1723  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1724  0077  00A8               	movwf	_Valor_hex
  1725                           
  1726                           ;Display.c: 43:             break;
  1727  0078  28CF               	goto	i1l1061
  1728  0079                     i1l1047:
  1729                           
  1730                           ;Display.c: 45:             Valor_hex = 0b00111001;
  1731  0079  3039               	movlw	57
  1732  007A  00F0               	movwf	??_display
  1733  007B  0870               	movf	??_display,w
  1734  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1735  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1736  007E  00A8               	movwf	_Valor_hex
  1737                           
  1738                           ;Display.c: 46:             break;
  1739  007F  28CF               	goto	i1l1061
  1740  0080                     i1l1049:
  1741                           
  1742                           ;Display.c: 48:             Valor_hex = 0b01011110;
  1743  0080  305E               	movlw	94
  1744  0081  00F0               	movwf	??_display
  1745  0082  0870               	movf	??_display,w
  1746  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0085  00A8               	movwf	_Valor_hex
  1749                           
  1750                           ;Display.c: 49:             break;
  1751  0086  28CF               	goto	i1l1061
  1752  0087                     i1l1051:
  1753                           
  1754                           ;Display.c: 51:             Valor_hex = 0b01111001;
  1755  0087  3079               	movlw	121
  1756  0088  00F0               	movwf	??_display
  1757  0089  0870               	movf	??_display,w
  1758  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1759  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1760  008C  00A8               	movwf	_Valor_hex
  1761                           
  1762                           ;Display.c: 52:             break;
  1763  008D  28CF               	goto	i1l1061
  1764  008E                     i1l1053:
  1765                           
  1766                           ;Display.c: 54:             Valor_hex = 0b01110001;
  1767  008E  3071               	movlw	113
  1768  008F  00F0               	movwf	??_display
  1769  0090  0870               	movf	??_display,w
  1770  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1771  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1772  0093  00A8               	movwf	_Valor_hex
  1773                           
  1774                           ;Display.c: 55:             break;
  1775  0094  28CF               	goto	i1l1061
  1776  0095                     i1l1059:
  1777  0095  0872               	movf	display@ADC_VALOR,w
  1778  0096  00F0               	movwf	??_display
  1779  0097  01F1               	clrf	??_display+1
  1780                           
  1781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1782                           ; Switch size 1, requested type "simple"
  1783                           ; Number of cases is 1, Range of values is 0 to 0
  1784                           ; switch strategies available:
  1785                           ; Name         Instructions Cycles
  1786                           ; simple_byte            4     3 (average)
  1787                           ; direct_byte           11     8 (fixed)
  1788                           ; jumptable            260     6 (fixed)
  1789                           ;	Chosen strategy is simple_byte
  1790  0098  0871               	movf	??_display+1,w
  1791  0099  3A00               	xorlw	0	; case 0
  1792  009A  1903               	skipnz
  1793  009B  289D               	goto	i1l1249
  1794  009C  2825               	goto	i1l1023
  1795  009D                     i1l1249:
  1796                           
  1797                           ; Switch size 1, requested type "simple"
  1798                           ; Number of cases is 16, Range of values is 0 to 15
  1799                           ; switch strategies available:
  1800                           ; Name         Instructions Cycles
  1801                           ; simple_byte           49    25 (average)
  1802                           ; direct_byte           56     8 (fixed)
  1803                           ; jumptable            260     6 (fixed)
  1804                           ;	Chosen strategy is simple_byte
  1805  009D  0870               	movf	??_display,w
  1806  009E  3A00               	xorlw	0	; case 0
  1807  009F  1903               	skipnz
  1808  00A0  2825               	goto	i1l1023
  1809  00A1  3A01               	xorlw	1	; case 1
  1810  00A2  1903               	skipnz
  1811  00A3  282C               	goto	i1l1025
  1812  00A4  3A03               	xorlw	3	; case 2
  1813  00A5  1903               	skipnz
  1814  00A6  2833               	goto	i1l1027
  1815  00A7  3A01               	xorlw	1	; case 3
  1816  00A8  1903               	skipnz
  1817  00A9  283A               	goto	i1l1029
  1818  00AA  3A07               	xorlw	7	; case 4
  1819  00AB  1903               	skipnz
  1820  00AC  2841               	goto	i1l1031
  1821  00AD  3A01               	xorlw	1	; case 5
  1822  00AE  1903               	skipnz
  1823  00AF  2848               	goto	i1l1033
  1824  00B0  3A03               	xorlw	3	; case 6
  1825  00B1  1903               	skipnz
  1826  00B2  284F               	goto	i1l1035
  1827  00B3  3A01               	xorlw	1	; case 7
  1828  00B4  1903               	skipnz
  1829  00B5  2856               	goto	i1l1037
  1830  00B6  3A0F               	xorlw	15	; case 8
  1831  00B7  1903               	skipnz
  1832  00B8  285D               	goto	i1l1039
  1833  00B9  3A01               	xorlw	1	; case 9
  1834  00BA  1903               	skipnz
  1835  00BB  2864               	goto	i1l1041
  1836  00BC  3A03               	xorlw	3	; case 10
  1837  00BD  1903               	skipnz
  1838  00BE  286B               	goto	i1l1043
  1839  00BF  3A01               	xorlw	1	; case 11
  1840  00C0  1903               	skipnz
  1841  00C1  2872               	goto	i1l1045
  1842  00C2  3A07               	xorlw	7	; case 12
  1843  00C3  1903               	skipnz
  1844  00C4  2879               	goto	i1l1047
  1845  00C5  3A01               	xorlw	1	; case 13
  1846  00C6  1903               	skipnz
  1847  00C7  2880               	goto	i1l1049
  1848  00C8  3A03               	xorlw	3	; case 14
  1849  00C9  1903               	skipnz
  1850  00CA  2887               	goto	i1l1051
  1851  00CB  3A01               	xorlw	1	; case 15
  1852  00CC  1903               	skipnz
  1853  00CD  288E               	goto	i1l1053
  1854  00CE  2825               	goto	i1l1023
  1855  00CF                     i1l1061:
  1856                           
  1857                           ;Display.c: 60:    return Valor_hex;
  1858  00CF  0828               	movf	_Valor_hex,w
  1859  00D0                     i1l40:
  1860  00D0  0008               	return
  1861  00D1                     __end_of_display:
  1862                           
  1863                           	psect	text7
  1864  0229                     __ptext7:	
  1865 ;; *************** function _SWAP_ADC *****************
  1866 ;; Defined at:
  1867 ;;		line 14 in file "Config_ADC.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  VAL_ADC         1    wreg     unsigned char 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  VAL_ADC         1    4[COMMON] unsigned char 
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      unsigned char 
  1874 ;; Registers used:
  1875 ;;		wreg, status,2, status,0
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1881 ;;      Params:         0       0       0       0       0
  1882 ;;      Locals:         1       0       0       0       0
  1883 ;;      Temps:          4       0       0       0       0
  1884 ;;      Totals:         5       0       0       0       0
  1885 ;;Total ram usage:        5 bytes
  1886 ;; Hardware stack levels used:    1
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_ISR
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           
  1895                           ;psect for function _SWAP_ADC
  1896  0229                     _SWAP_ADC:
  1897                           
  1898                           ;incstack = 0
  1899                           ; Regs used in _SWAP_ADC: [wreg+status,2+status,0]
  1900                           ;SWAP_ADC@VAL_ADC stored from wreg
  1901  0229  00F4               	movwf	SWAP_ADC@VAL_ADC
  1902  022A                     i1l1073:
  1903                           
  1904                           ;Config_ADC.c: 15:     VAL_SWAP = (((VAL_ADC & 0x0F)<<4) | ((VAL_ADC & 0xF0)>>4));
  1905  022A  0874               	movf	SWAP_ADC@VAL_ADC,w
  1906  022B  00F0               	movwf	??_SWAP_ADC
  1907  022C  3004               	movlw	4
  1908  022D                     u11_25:
  1909  022D  1003               	clrc
  1910  022E  0CF0               	rrf	??_SWAP_ADC,f
  1911  022F  3EFF               	addlw	-1
  1912  0230  1D03               	skipz
  1913  0231  2A2D               	goto	u11_25
  1914  0232  300F               	movlw	15
  1915  0233  0570               	andwf	??_SWAP_ADC,w
  1916  0234  00F1               	movwf	??_SWAP_ADC+1
  1917  0235  0874               	movf	SWAP_ADC@VAL_ADC,w
  1918  0236  390F               	andlw	15
  1919  0237  00F2               	movwf	??_SWAP_ADC+2
  1920  0238  3003               	movlw	3
  1921  0239                     u12_25:
  1922  0239  1003               	clrc
  1923  023A  0DF2               	rlf	??_SWAP_ADC+2,f
  1924  023B  3EFF               	addlw	-1
  1925  023C  1D03               	skipz
  1926  023D  2A39               	goto	u12_25
  1927  023E  1003               	clrc
  1928  023F  0D72               	rlf	??_SWAP_ADC+2,w
  1929  0240  0471               	iorwf	??_SWAP_ADC+1,w
  1930  0241  00F3               	movwf	??_SWAP_ADC+3
  1931  0242  0873               	movf	??_SWAP_ADC+3,w
  1932  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0245  00A4               	movwf	_VAL_SWAP
  1935  0246                     i1l1075:
  1936                           
  1937                           ;Config_ADC.c: 16:     return VAL_SWAP;
  1938  0246  0824               	movf	_VAL_SWAP,w
  1939  0247                     i1l181:
  1940  0247  0008               	return
  1941  0248                     __end_of_SWAP_ADC:
  1942                           
  1943                           	psect	text8
  1944  0253                     __ptext8:	
  1945 ;; *************** function _NIBBLE2_ADC *****************
  1946 ;; Defined at:
  1947 ;;		line 24 in file "Config_ADC.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  VAL_SWAP        1    wreg     unsigned char 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  VAL_SWAP        1    1[COMMON] unsigned char 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      unsigned char 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1961 ;;      Params:         0       0       0       0       0
  1962 ;;      Locals:         1       0       0       0       0
  1963 ;;      Temps:          1       0       0       0       0
  1964 ;;      Totals:         2       0       0       0       0
  1965 ;;Total ram usage:        2 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_ISR
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           
  1975                           ;psect for function _NIBBLE2_ADC
  1976  0253                     _NIBBLE2_ADC:
  1977                           
  1978                           ;incstack = 0
  1979                           ; Regs used in _NIBBLE2_ADC: [wreg+status,2]
  1980                           ;NIBBLE2_ADC@VAL_SWAP stored from wreg
  1981  0253  00F1               	movwf	NIBBLE2_ADC@VAL_SWAP
  1982  0254                     i1l1085:
  1983                           
  1984                           ;Config_ADC.c: 25:     VAL_NIBBLE2 = VAL_SWAP & 15;
  1985  0254  0871               	movf	NIBBLE2_ADC@VAL_SWAP,w
  1986  0255  390F               	andlw	15
  1987  0256  00F0               	movwf	??_NIBBLE2_ADC
  1988  0257  0870               	movf	??_NIBBLE2_ADC,w
  1989  0258  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0259  1303               	bcf	3,6	;RP1=0, select bank0
  1991  025A  00A2               	movwf	_VAL_NIBBLE2
  1992  025B                     i1l1087:
  1993                           
  1994                           ;Config_ADC.c: 26:     return VAL_NIBBLE2;
  1995  025B  0822               	movf	_VAL_NIBBLE2,w
  1996  025C                     i1l187:
  1997  025C  0008               	return
  1998  025D                     __end_of_NIBBLE2_ADC:
  1999                           
  2000                           	psect	text9
  2001  025D                     __ptext9:	
  2002 ;; *************** function _NIBBLE1_ADC *****************
  2003 ;; Defined at:
  2004 ;;		line 19 in file "Config_ADC.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  VAL_ADC         1    wreg     unsigned char 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  VAL_ADC         1    1[COMMON] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      unsigned char 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2018 ;;      Params:         0       0       0       0       0
  2019 ;;      Locals:         1       0       0       0       0
  2020 ;;      Temps:          1       0       0       0       0
  2021 ;;      Totals:         2       0       0       0       0
  2022 ;;Total ram usage:        2 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; This function calls:
  2025 ;;		Nothing
  2026 ;; This function is called by:
  2027 ;;		_ISR
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           
  2032                           ;psect for function _NIBBLE1_ADC
  2033  025D                     _NIBBLE1_ADC:
  2034                           
  2035                           ;incstack = 0
  2036                           ; Regs used in _NIBBLE1_ADC: [wreg+status,2]
  2037                           ;NIBBLE1_ADC@VAL_ADC stored from wreg
  2038  025D  00F1               	movwf	NIBBLE1_ADC@VAL_ADC
  2039  025E                     i1l1079:
  2040                           
  2041                           ;Config_ADC.c: 20:     VAL_NIBBLE1 = VAL_ADC & 15;
  2042  025E  0871               	movf	NIBBLE1_ADC@VAL_ADC,w
  2043  025F  390F               	andlw	15
  2044  0260  00F0               	movwf	??_NIBBLE1_ADC
  2045  0261  0870               	movf	??_NIBBLE1_ADC,w
  2046  0262  1283               	bcf	3,5	;RP0=0, select bank0
  2047  0263  1303               	bcf	3,6	;RP1=0, select bank0
  2048  0264  00A3               	movwf	_VAL_NIBBLE1
  2049  0265                     i1l1081:
  2050                           
  2051                           ;Config_ADC.c: 21:     return VAL_NIBBLE1;
  2052  0265  0823               	movf	_VAL_NIBBLE1,w
  2053  0266                     i1l184:
  2054  0266  0008               	return
  2055  0267                     __end_of_NIBBLE1_ADC:
  2056                           
  2057                           	psect	text10
  2058  0267                     __ptext10:	
  2059 ;; *************** function _ADC *****************
  2060 ;; Defined at:
  2061 ;;		line 9 in file "Config_ADC.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  ADRESL_         1    wreg     unsigned char 
  2064 ;;  ADRESH_         1    0[COMMON] unsigned char 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  ADRESL_         1    0[COMMON] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      unsigned char 
  2069 ;; Registers used:
  2070 ;;		wreg
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2076 ;;      Params:         1       0       0       0       0
  2077 ;;      Locals:         0       0       0       0       0
  2078 ;;      Temps:          1       0       0       0       0
  2079 ;;      Totals:         2       0       0       0       0
  2080 ;;Total ram usage:        2 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_ISR
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           
  2090                           ;psect for function _ADC
  2091  0267                     _ADC:
  2092  0267                     i1l1069:	
  2093                           ;incstack = 0
  2094                           ; Regs used in _ADC: [wreg]
  2095                           
  2096                           
  2097                           ;Config_ADC.c: 10:     VAL = (ADRESL << 8) | ADRESH;
  2098  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2100  0269  081E               	movf	30,w	;volatile
  2101  026A  00F1               	movwf	??_ADC
  2102  026B  0871               	movf	??_ADC,w
  2103  026C  00A5               	movwf	_VAL
  2104                           
  2105                           ;Config_ADC.c: 11:     return VAL;
  2106  026D  0825               	movf	_VAL,w
  2107  026E                     i1l178:
  2108  026E  0008               	return
  2109  026F                     __end_of_ADC:
  2110  007E                     btemp	set	126	;btemp
  2111  007E                     wtemp0	set	126
  2112                           
  2113                           	psect	config
  2114                           
  2115                           ;Config register CONFIG1 @ 0x2007
  2116                           ;	Oscillator Selection bits
  2117                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  2118                           ;	Watchdog Timer Enable bit
  2119                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2120                           ;	Power-up Timer Enable bit
  2121                           ;	PWRTE = OFF, PWRT disabled
  2122                           ;	RE3/MCLR pin function select bit
  2123                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2124                           ;	Code Protection bit
  2125                           ;	CP = OFF, Program memory code protection is disabled
  2126                           ;	Data Code Protection bit
  2127                           ;	CPD = OFF, Data memory code protection is disabled
  2128                           ;	Brown Out Reset Selection bits
  2129                           ;	BOREN = OFF, BOR disabled
  2130                           ;	Internal External Switchover bit
  2131                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2132                           ;	Fail-Safe Clock Monitor Enabled bit
  2133                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2134                           ;	Low Voltage Programming Enable bit
  2135                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2136                           ;	In-Circuit Debugger Mode bit
  2137                           ;	DEBUG = 0x1, unprogrammed default
  2138  2007                     	org	8199
  2139  2007  20D1               	dw	8401
  2140                           
  2141                           ;Config register CONFIG2 @ 0x2008
  2142                           ;	Brown-out Reset Selection bit
  2143                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2144                           ;	Flash Program Memory Self Write Enable bits
  2145                           ;	WRT = OFF, Write protection off
  2146  2008                     	org	8200
  2147  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80      4      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_SWAP_ADC

Critical Paths under _main in BANK0

    _setup->_initOsc

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      22
                                              3 BANK0      1     1      0
                       _ContadorLEDS
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                         _InitTimer0
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ContadorLEDS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  6     6      0     186
                                              5 COMMON     6     6      0
                                _ADC
                        _NIBBLE1_ADC
                        _NIBBLE2_ADC
                           _SWAP_ADC
                            _display
 ---------------------------------------------------------------------------------
 (4) _display                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _SWAP_ADC                                             5     5      0      44
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (4) _NIBBLE2_ADC                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _NIBBLE1_ADC                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _ADC                                                  3     2      1      76
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ContadorLEDS
   _setup
     _InitTimer0
     _initOsc

 _ISR (ROOT)
   _ADC
   _NIBBLE1_ADC
   _NIBBLE2_ADC
   _SWAP_ADC
   _display

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       D       5       16.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 03 20:03:22 2021

                      l6 016B                        l7 01C3                        l8 0171  
                      l9 0177                       l10 017D                       l11 0183  
                     l12 0189                       l13 018F                       l14 0195  
                     l15 019B                       l16 01C4           ??_ContadorLEDS 0029  
                    l151 0200                      l144 0222                      l154 0273  
                    l157 0252                      _ADC 0267                      u200 021E  
                    u201 021D                      u205 021A                      _ISR 00D1  
                    _VAL 0025                      fsr0 0004                     ?_ADC 0070  
                   ?_ISR 0070                     l1011 01A1                     l1101 01D7  
                   l1007 016A                     l1111 01E7                     l1103 01DB  
                   l1121 01F8                     l1113 01EA                     l1105 01DE  
                   l1131 026F                     l1019 0248                     l1123 01F9  
                   l1115 01ED                     l1107 01E1                     l1125 01FA  
                   l1117 01F0                     l1109 01E4                     l1127 01FD  
                   l1119 01F5                     l1129 01FF                     l1091 01C5  
                   l1093 01CB                     l1181 0201                     l1247 01A9  
                   l1095 01CF                     l1191 021E                     l1183 0206  
                   l1097 01D0                     l1185 0207                     l1099 01D4  
                   l1187 020A                     l1189 020F                     i1l40 00D0  
                   _TMR0 0001                     _main 0201                     btemp 007E  
                   start 000E                    ??_ADC 0071                    ??_ISR 0075  
         _cont_multiplex 0026                    ?_main 0070                    _ANSEL 0188  
                  i1l133 00E7                    i1l129 00DB                    i1l138 015E  
                  i1l181 0247                    i1l184 0266                    i1l178 026E  
                  i1l187 025C                    u11_25 022D                    u12_25 0239  
                  u13_20 00D5                    u13_21 00D4                    u21_27 012E  
                  u14_20 00DB                    u14_21 00DA                    u22_27 0149  
                  u15_20 00DF                    u15_21 00DE                    u16_20 00E7  
                  u16_21 00E6                    u17_20 00EB                    u17_21 00EA  
                  u18_20 00F4                    u18_21 00F3                    u19_20 013A  
                  u19_21 0139                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089          __end_of_display 00D1  
        __end_of_initOsc 01C5         __end_of_SWAP_ADC 0248                    _setup 01C5  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011               _InitTimer0 0248             __end_of_main 0229  
                 ??_main 002C       NIBBLE1_ADC@VAL_ADC 0071                   _ADCON0 001F  
                 _ADRESH 001E                   _ADRESL 009E              initOsc@IRCF 002B  
                 ?_setup 0070                   _ANSELH 0189                   i1l1021 0024  
                 i1l1031 0041                   i1l1023 0025                   i1l1041 0064  
                 i1l1033 0048                   i1l1025 002C                   i1l1051 0087  
                 i1l1043 006B                   i1l1035 004F                   i1l1027 0033  
                 i1l1053 008E                   i1l1045 0072                   i1l1037 0056  
                 i1l1029 003A                   i1l1061 00CF                   i1l1141 00E3  
                 i1l1133 00D1                   i1l1047 0079                   i1l1039 005D  
                 i1l1151 00F4                   i1l1135 00D5                   i1l1081 0265  
                 i1l1073 022A                   i1l1049 0080                   i1l1161 012A  
                 i1l1153 0108                   i1l1145 00EB                   i1l1075 0246  
                 i1l1059 0095                   i1l1171 0145                   i1l1163 0133  
                 i1l1155 0113                   i1l1147 00ED                   i1l1139 00DF  
                 i1l1069 0267                   i1l1085 0254                   i1l1173 014E  
                 i1l1157 011C                   i1l1165 0136                   i1l1149 00EE  
                 i1l1079 025E                   i1l1087 025B                   i1l1175 0151  
                 i1l1167 013A                   i1l1159 0127                   i1l1249 009D  
                 i1l1177 0152                   i1l1169 013C                   i1l1179 015D  
                 _INTCON 000B     __end_of_ContadorLEDS 0274     __size_of_NIBBLE1_ADC 000A  
   __size_of_NIBBLE2_ADC 000A          SWAP_ADC@VAL_ADC 0074                ??_display 0070  
              ??_initOsc 0029                   saved_w 007E               ADC@ADRESH_ 0070  
             ADC@ADRESL_ 0070  __end_of__initialization 001F              ?_InitTimer0 0070  
         __pcstackCOMMON 0070            __end_of_setup 0201                ?_SWAP_ADC 0070  
       display@ADC_VALOR 0072                  ??_setup 002C               __pbssBANK0 0020  
             __pmaintext 0201               __pintentry 0004               ??_SWAP_ADC 0070  
  __size_of_ContadorLEDS 0005      __size_of_InitTimer0 000B                _ADC_VALOR 0020  
                __ptext1 01C5                  __ptext2 0167                  __ptext3 0248  
                __ptext4 026F                  __ptext5 00D1                  __ptext6 0023  
                __ptext7 0229                  __ptext8 0253                  __ptext9 025D  
           _ContadorLEDS 026F                  _display 0023             __size_of_ADC 0008  
           __size_of_ISR 0096                  _initOsc 0167     end_of_initialization 001F  
    NIBBLE2_ADC@VAL_SWAP 0071                _PORTBbits 0006                _PORTEbits 0009  
          ??_NIBBLE1_ADC 0070            ??_NIBBLE2_ADC 0070              _ADC_NIBBLE1 007C  
            _ADC_NIBBLE2 007B             ??_InitTimer0 0029        __size_of_SWAP_ADC 001F  
    start_initialization 0011              __end_of_ADC 026F              __end_of_ISR 0167  
     __end_of_InitTimer0 0253                _Valor_hex 0028      __end_of_NIBBLE1_ADC 0267  
    __end_of_NIBBLE2_ADC 025D              __pbssCOMMON 007B                ___latbits 0002  
          __pcstackBANK0 0029                 ?_display 0070                 ?_initOsc 0070  
               _ADC_SWAP 0027           __size_of_setup 003C        interrupt_function 0004  
               _IOCBbits 0096              _NIBBLE1_ADC 025D                 _PIE1bits 008C  
            _NIBBLE2_ADC 0253                 _PIR1bits 000C                 _VAL_SWAP 0024  
               _SWAP_ADC 0229               _ADCON0bits 001F         __size_of_display 00AE  
       __size_of_initOsc 005E                 __ptext10 0267                 _contador 007D  
          __size_of_main 0028               _INTCONbits 000B              _VAL_NIBBLE1 0023  
            _VAL_NIBBLE2 0022                 intlevel1 0000               _OSCCONbits 008F  
          ?_ContadorLEDS 0070               _OPTION_REG 0081             ?_NIBBLE1_ADC 0070  
           ?_NIBBLE2_ADC 0070  
