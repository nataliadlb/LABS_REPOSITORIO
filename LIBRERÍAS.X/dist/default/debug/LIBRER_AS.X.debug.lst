

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 06 11:40:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  0000                     	;# 
   371  0001                     	;# 
   372  0002                     	;# 
   373  0003                     	;# 
   374  0004                     	;# 
   375  0005                     	;# 
   376  0006                     	;# 
   377  0007                     	;# 
   378  0008                     	;# 
   379  0009                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  000E                     	;# 
   386  000F                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0014                     	;# 
   392  0015                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001D                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  0081                     	;# 
   406  0085                     	;# 
   407  0086                     	;# 
   408  0087                     	;# 
   409  0088                     	;# 
   410  0089                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  008E                     	;# 
   414  008F                     	;# 
   415  0090                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0095                     	;# 
   423  0096                     	;# 
   424  0097                     	;# 
   425  0098                     	;# 
   426  0099                     	;# 
   427  009A                     	;# 
   428  009B                     	;# 
   429  009C                     	;# 
   430  009D                     	;# 
   431  009E                     	;# 
   432  009F                     	;# 
   433  0105                     	;# 
   434  0107                     	;# 
   435  0108                     	;# 
   436  0109                     	;# 
   437  010C                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  0185                     	;# 
   443  0187                     	;# 
   444  0188                     	;# 
   445  0189                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  001F                     _ADCON0	set	31
   449  000B                     _INTCON	set	11
   450  0006                     _PORTB	set	6
   451  0005                     _PORTA	set	5
   452  0009                     _PORTEbits	set	9
   453  0009                     _PORTE	set	9
   454  0001                     _TMR0	set	1
   455  0008                     _PORTD	set	8
   456  001F                     _ADCON0bits	set	31
   457  000C                     _PIR1bits	set	12
   458  0007                     _PORTC	set	7
   459  0006                     _PORTBbits	set	6
   460  000B                     _INTCONbits	set	11
   461  001E                     _ADRESH	set	30
   462  009F                     _ADCON1	set	159
   463  008C                     _PIE1bits	set	140
   464  0096                     _IOCB	set	150
   465  0081                     _OPTION_REG	set	129
   466  0089                     _TRISE	set	137
   467  0088                     _TRISD	set	136
   468  0087                     _TRISC	set	135
   469  0086                     _TRISB	set	134
   470  0085                     _TRISA	set	133
   471  009E                     _ADRESL	set	158
   472  008F                     _OSCCONbits	set	143
   473  0189                     _ANSELH	set	393
   474  0188                     _ANSEL	set	392
   475                           
   476                           	psect	cinit
   477  0011                     start_initialization:	
   478                           ; #config settings
   479                           
   480  0011                     __initialization:
   481                           
   482                           ; Clear objects allocated to COMMON
   483  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   484  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   485  0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   486  0014  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   487  0015  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   488  0016  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   489                           
   490                           ; Clear objects allocated to BANK0
   491  0017  1383               	bcf	3,7	;select IRP bank0
   492  0018  3020               	movlw	low __pbssBANK0
   493  0019  0084               	movwf	4
   494  001A  3032               	movlw	low (__pbssBANK0+18)
   495  001B  120A  118A  227A  120A  118A  	fcall	clear_ram0
   496  0020                     end_of_initialization:	
   497                           ;End of C runtime variable initialization code
   498                           
   499  0020                     __end_of__initialization:
   500  0020  0183               	clrf	3
   501  0021  120A  118A  29F1   	ljmp	_main	;jump to C main() function
   502                           
   503                           	psect	bssCOMMON
   504  0078                     __pbssCOMMON:
   505  0078                     _contador:
   506  0078                     	ds	2
   507  007A                     _toggle:
   508  007A                     	ds	1
   509  007B                     _debouncing1:
   510  007B                     	ds	1
   511  007C                     _val_1:
   512  007C                     	ds	2
   513                           
   514                           	psect	bssBANK0
   515  0020                     __pbssBANK0:
   516  0020                     _ADC_SWAP:
   517  0020                     	ds	2
   518  0022                     _ADC_VALOR:
   519  0022                     	ds	2
   520  0024                     _ADC_NIBBLE2:
   521  0024                     	ds	2
   522  0026                     _ADC_NIBBLE1:
   523  0026                     	ds	2
   524  0028                     _VAL_NIBBLE2:
   525  0028                     	ds	2
   526  002A                     _VAL_NIBBLE1:
   527  002A                     	ds	2
   528  002C                     _VAL:
   529  002C                     	ds	2
   530  002E                     _cont_timer:
   531  002E                     	ds	1
   532  002F                     _debouncing2:
   533  002F                     	ds	1
   534  0030                     _VAL_SWAP:
   535  0030                     	ds	1
   536  0031                     _Valor_hex:
   537  0031                     	ds	1
   538                           
   539                           	psect	clrtext
   540  027A                     clear_ram0:	
   541                           ;	Called with FSR containing the base address, and
   542                           ;	W with the last address+1
   543                           
   544  027A  0064               	clrwdt	;clear the watchdog before getting into this loop
   545  027B                     clrloop0:
   546  027B  0180               	clrf	0	;clear RAM location pointed to by FSR
   547  027C  0A84               	incf	4,f	;increment pointer
   548  027D  0604               	xorwf	4,w	;XOR with final address
   549  027E  1903               	btfsc	3,2	;have we reached the end yet?
   550  027F  3400               	retlw	0	;all done for this memory range, return
   551  0280  0604               	xorwf	4,w	;XOR again to restore value
   552  0281  2A7B               	goto	clrloop0	;do the next byte
   553                           
   554                           	psect	cstackCOMMON
   555  0070                     __pcstackCOMMON:
   556  0070                     ?_DisplayADC:
   557  0070                     ?_setup:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_Config_INTERRUPT:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_TOGGLE_1:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_CONVERSION_ADC:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_Revision:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_initOsc:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_display:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ??_display:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_ISR:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_main:	
   585                           ; 1 bytes @ 0x0
   586                           
   587                           
   588                           ; 1 bytes @ 0x0
   589  0070                     	ds	2
   590  0072                     display@ADC_VALOR:
   591                           
   592                           ; 1 bytes @ 0x2
   593  0072                     	ds	1
   594  0073                     ??_DisplayADC:
   595  0073                     ??_ISR:	
   596                           ; 1 bytes @ 0x3
   597                           
   598                           
   599                           ; 1 bytes @ 0x3
   600  0073                     	ds	5
   601                           
   602                           	psect	cstackBANK0
   603  0032                     __pcstackBANK0:
   604  0032                     ??_Config_INTERRUPT:
   605  0032                     ??_TOGGLE_1:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0032                     ??_CONVERSION_ADC:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0032                     ??_Revision:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0032                     ??_initOsc:	
   615                           ; 1 bytes @ 0x0
   616                           
   617                           
   618                           ; 1 bytes @ 0x0
   619  0032                     	ds	2
   620  0034                     initOsc@IRCF:
   621                           
   622                           ; 1 bytes @ 0x2
   623  0034                     	ds	1
   624  0035                     ??_setup:
   625  0035                     ??_main:	
   626                           ; 1 bytes @ 0x3
   627                           
   628                           
   629                           	psect	maintext
   630  01F1                     __pmaintext:	
   631                           ; 1 bytes @ 0x3
   632 ;;
   633 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   634 ;;
   635 ;; *************** function _main *****************
   636 ;; Defined at:
   637 ;;		line 98 in file "Prueba2_lab2.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : B00/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         0       0       0       0       0
   652 ;;      Locals:         0       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0
   654 ;;      Totals:         0       0       0       0       0
   655 ;;Total ram usage:        0 bytes
   656 ;; Hardware stack levels required when called:    5
   657 ;; This function calls:
   658 ;;		_CONVERSION_ADC
   659 ;;		_Config_INTERRUPT
   660 ;;		_Revision
   661 ;;		_TOGGLE_1
   662 ;;		_setup
   663 ;; This function is called by:
   664 ;;		Startup code after reset
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           
   669                           ;psect for function _main
   670  01F1                     _main:
   671  01F1                     l1219:	
   672                           ;incstack = 0
   673                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   674                           
   675                           
   676                           ;Prueba2_lab2.c: 99:     setup();
   677  01F1  120A  118A  21A2  120A  118A  	fcall	_setup
   678  01F6                     l1221:
   679                           
   680                           ;Prueba2_lab2.c: 101:     Config_INTERRUPT();
   681  01F6  120A  118A  2253  120A  118A  	fcall	_Config_INTERRUPT
   682  01FB                     l1223:
   683                           
   684                           ;Prueba2_lab2.c: 105:         if (cont_timer >= 1) {
   685  01FB  1283               	bcf	3,5	;RP0=0, select bank0
   686  01FC  1303               	bcf	3,6	;RP1=0, select bank0
   687  01FD  082E               	movf	_cont_timer,w
   688  01FE  1903               	btfsc	3,2
   689  01FF  2A01               	goto	u401
   690  0200  2A02               	goto	u400
   691  0201                     u401:
   692  0201  2A08               	goto	l1229
   693  0202                     u400:
   694  0202                     l1225:
   695                           
   696                           ;Prueba2_lab2.c: 106:             cont_timer = 0;
   697  0202  01AE               	clrf	_cont_timer
   698  0203                     l1227:
   699                           
   700                           ;Prueba2_lab2.c: 107:             TOGGLE_1();
   701  0203  120A  118A  226B  120A  118A  	fcall	_TOGGLE_1
   702  0208                     l1229:
   703                           
   704                           ;Prueba2_lab2.c: 109:         CONVERSION_ADC();
   705  0208  120A  118A  21CA  120A  118A  	fcall	_CONVERSION_ADC
   706  020D                     l1231:
   707                           
   708                           ;Prueba2_lab2.c: 110:         Revision();
   709  020D  120A  118A  2237  120A  118A  	fcall	_Revision
   710  0212  29FB               	goto	l1223
   711  0213  120A  118A  280E   	ljmp	start
   712  0216                     __end_of_main:
   713                           
   714                           	psect	text1
   715  01A2                     __ptext1:	
   716 ;; *************** function _setup *****************
   717 ;; Defined at:
   718 ;;		line 155 in file "Prueba2_lab2.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0
   735 ;;      Totals:         0       0       0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels used:    1
   738 ;; Hardware stack levels required when called:    4
   739 ;; This function calls:
   740 ;;		_initOsc
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           
   747                           ;psect for function _setup
   748  01A2                     _setup:
   749  01A2                     l1103:	
   750                           ;incstack = 0
   751                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   752                           
   753                           
   754                           ;Prueba2_lab2.c: 156:     initOsc(0b00000111);
   755  01A2  3007               	movlw	7
   756  01A3  120A  118A  2144  120A  118A  	fcall	_initOsc
   757  01A8                     l1105:
   758                           
   759                           ;Prueba2_lab2.c: 157:     ANSEL = 0b00000001;
   760  01A8  3001               	movlw	1
   761  01A9  1683               	bsf	3,5	;RP0=1, select bank3
   762  01AA  1703               	bsf	3,6	;RP1=1, select bank3
   763  01AB  0088               	movwf	8	;volatile
   764  01AC                     l1107:
   765                           
   766                           ;Prueba2_lab2.c: 158:     ANSELH = 0;
   767  01AC  0189               	clrf	9	;volatile
   768  01AD                     l1109:
   769                           
   770                           ;Prueba2_lab2.c: 159:     TRISA = 0b00000001;
   771  01AD  3001               	movlw	1
   772  01AE  1683               	bsf	3,5	;RP0=1, select bank1
   773  01AF  1303               	bcf	3,6	;RP1=0, select bank1
   774  01B0  0085               	movwf	5	;volatile
   775  01B1                     l1111:
   776                           
   777                           ;Prueba2_lab2.c: 160:     PORTA = 0;
   778  01B1  1283               	bcf	3,5	;RP0=0, select bank0
   779  01B2  1303               	bcf	3,6	;RP1=0, select bank0
   780  01B3  0185               	clrf	5	;volatile
   781  01B4                     l1113:
   782                           
   783                           ;Prueba2_lab2.c: 161:     TRISB = 0b00000011;
   784  01B4  3003               	movlw	3
   785  01B5  1683               	bsf	3,5	;RP0=1, select bank1
   786  01B6  1303               	bcf	3,6	;RP1=0, select bank1
   787  01B7  0086               	movwf	6	;volatile
   788  01B8                     l1115:
   789                           
   790                           ;Prueba2_lab2.c: 162:     PORTB = 0;
   791  01B8  1283               	bcf	3,5	;RP0=0, select bank0
   792  01B9  1303               	bcf	3,6	;RP1=0, select bank0
   793  01BA  0186               	clrf	6	;volatile
   794  01BB                     l1117:
   795                           
   796                           ;Prueba2_lab2.c: 163:     PORTC = 0;
   797  01BB  0187               	clrf	7	;volatile
   798  01BC                     l1119:
   799                           
   800                           ;Prueba2_lab2.c: 164:     TRISC = 0;
   801  01BC  1683               	bsf	3,5	;RP0=1, select bank1
   802  01BD  1303               	bcf	3,6	;RP1=0, select bank1
   803  01BE  0187               	clrf	7	;volatile
   804  01BF                     l1121:
   805                           
   806                           ;Prueba2_lab2.c: 165:     TRISD = 0;
   807  01BF  0188               	clrf	8	;volatile
   808  01C0                     l1123:
   809                           
   810                           ;Prueba2_lab2.c: 166:     PORTD = 0;
   811  01C0  1283               	bcf	3,5	;RP0=0, select bank0
   812  01C1  1303               	bcf	3,6	;RP1=0, select bank0
   813  01C2  0188               	clrf	8	;volatile
   814  01C3                     l1125:
   815                           
   816                           ;Prueba2_lab2.c: 167:     TRISE = 0;
   817  01C3  1683               	bsf	3,5	;RP0=1, select bank1
   818  01C4  1303               	bcf	3,6	;RP1=0, select bank1
   819  01C5  0189               	clrf	9	;volatile
   820  01C6                     l1127:
   821                           
   822                           ;Prueba2_lab2.c: 168:     PORTE = 0;
   823  01C6  1283               	bcf	3,5	;RP0=0, select bank0
   824  01C7  1303               	bcf	3,6	;RP1=0, select bank0
   825  01C8  0189               	clrf	9	;volatile
   826  01C9                     l200:
   827  01C9  0008               	return
   828  01CA                     __end_of_setup:
   829                           
   830                           	psect	text2
   831  0144                     __ptext2:	
   832 ;; *************** function _initOsc *****************
   833 ;; Defined at:
   834 ;;		line 3 in file "Oscilador.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  IRCF            1    wreg     unsigned char 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  IRCF            1    2[BANK0 ] unsigned char 
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   848 ;;      Params:         0       0       0       0       0
   849 ;;      Locals:         0       1       0       0       0
   850 ;;      Temps:          0       2       0       0       0
   851 ;;      Totals:         0       3       0       0       0
   852 ;;Total ram usage:        3 bytes
   853 ;; Hardware stack levels used:    1
   854 ;; Hardware stack levels required when called:    3
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_setup
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           
   863                           ;psect for function _initOsc
   864  0144                     _initOsc:
   865                           
   866                           ;incstack = 0
   867                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   868                           ;initOsc@IRCF stored from wreg
   869  0144  1283               	bcf	3,5	;RP0=0, select bank0
   870  0145  1303               	bcf	3,6	;RP1=0, select bank0
   871  0146  00B4               	movwf	initOsc@IRCF
   872  0147                     l1033:
   873                           
   874                           ;Oscilador.c: 5:     switch(IRCF){
   875  0147  297E               	goto	l1037
   876  0148                     l6:	
   877                           ;Oscilador.c: 6:         case 0:
   878                           
   879                           
   880                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   881  0148  1683               	bsf	3,5	;RP0=1, select bank1
   882  0149  1303               	bcf	3,6	;RP1=0, select bank1
   883  014A  130F               	bcf	15,6	;volatile
   884                           
   885                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   886  014B  128F               	bcf	15,5	;volatile
   887                           
   888                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   889  014C  120F               	bcf	15,4	;volatile
   890                           
   891                           ;Oscilador.c: 10:             break;
   892  014D  29A0               	goto	l7
   893  014E                     l8:	
   894                           ;Oscilador.c: 11:          case 1:
   895                           
   896                           
   897                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   898  014E  1683               	bsf	3,5	;RP0=1, select bank1
   899  014F  1303               	bcf	3,6	;RP1=0, select bank1
   900  0150  130F               	bcf	15,6	;volatile
   901                           
   902                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   903  0151  128F               	bcf	15,5	;volatile
   904                           
   905                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   906  0152  160F               	bsf	15,4	;volatile
   907                           
   908                           ;Oscilador.c: 15:             break;
   909  0153  29A0               	goto	l7
   910  0154                     l9:	
   911                           ;Oscilador.c: 16:         case 2:
   912                           
   913                           
   914                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   915  0154  1683               	bsf	3,5	;RP0=1, select bank1
   916  0155  1303               	bcf	3,6	;RP1=0, select bank1
   917  0156  130F               	bcf	15,6	;volatile
   918                           
   919                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   920  0157  168F               	bsf	15,5	;volatile
   921                           
   922                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   923  0158  120F               	bcf	15,4	;volatile
   924                           
   925                           ;Oscilador.c: 20:             break;
   926  0159  29A0               	goto	l7
   927  015A                     l10:	
   928                           ;Oscilador.c: 21:         case 3:
   929                           
   930                           
   931                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   932  015A  1683               	bsf	3,5	;RP0=1, select bank1
   933  015B  1303               	bcf	3,6	;RP1=0, select bank1
   934  015C  130F               	bcf	15,6	;volatile
   935                           
   936                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   937  015D  168F               	bsf	15,5	;volatile
   938                           
   939                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   940  015E  160F               	bsf	15,4	;volatile
   941                           
   942                           ;Oscilador.c: 25:             break;
   943  015F  29A0               	goto	l7
   944  0160                     l11:	
   945                           ;Oscilador.c: 26:         case 4:
   946                           
   947                           
   948                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   949  0160  1683               	bsf	3,5	;RP0=1, select bank1
   950  0161  1303               	bcf	3,6	;RP1=0, select bank1
   951  0162  170F               	bsf	15,6	;volatile
   952                           
   953                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   954  0163  128F               	bcf	15,5	;volatile
   955                           
   956                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   957  0164  120F               	bcf	15,4	;volatile
   958                           
   959                           ;Oscilador.c: 30:             break;
   960  0165  29A0               	goto	l7
   961  0166                     l12:	
   962                           ;Oscilador.c: 31:         case 5:
   963                           
   964                           
   965                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   966  0166  1683               	bsf	3,5	;RP0=1, select bank1
   967  0167  1303               	bcf	3,6	;RP1=0, select bank1
   968  0168  170F               	bsf	15,6	;volatile
   969                           
   970                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
   971  0169  128F               	bcf	15,5	;volatile
   972                           
   973                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
   974  016A  160F               	bsf	15,4	;volatile
   975                           
   976                           ;Oscilador.c: 35:             break;
   977  016B  29A0               	goto	l7
   978  016C                     l13:	
   979                           ;Oscilador.c: 36:         case 6:
   980                           
   981                           
   982                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
   983  016C  1683               	bsf	3,5	;RP0=1, select bank1
   984  016D  1303               	bcf	3,6	;RP1=0, select bank1
   985  016E  170F               	bsf	15,6	;volatile
   986                           
   987                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
   988  016F  168F               	bsf	15,5	;volatile
   989                           
   990                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
   991  0170  120F               	bcf	15,4	;volatile
   992                           
   993                           ;Oscilador.c: 40:             break;
   994  0171  29A0               	goto	l7
   995  0172                     l14:	
   996                           ;Oscilador.c: 41:         case 7:
   997                           
   998                           
   999                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1000  0172  1683               	bsf	3,5	;RP0=1, select bank1
  1001  0173  1303               	bcf	3,6	;RP1=0, select bank1
  1002  0174  170F               	bsf	15,6	;volatile
  1003                           
  1004                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1005  0175  168F               	bsf	15,5	;volatile
  1006                           
  1007                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1008  0176  160F               	bsf	15,4	;volatile
  1009                           
  1010                           ;Oscilador.c: 45:             break;
  1011  0177  29A0               	goto	l7
  1012  0178                     l15:	
  1013                           ;Oscilador.c: 46:         default:
  1014                           
  1015                           
  1016                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1017  0178  1683               	bsf	3,5	;RP0=1, select bank1
  1018  0179  1303               	bcf	3,6	;RP1=0, select bank1
  1019  017A  170F               	bsf	15,6	;volatile
  1020                           
  1021                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1022  017B  168F               	bsf	15,5	;volatile
  1023                           
  1024                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1025  017C  120F               	bcf	15,4	;volatile
  1026                           
  1027                           ;Oscilador.c: 50:             break;
  1028  017D  29A0               	goto	l7
  1029  017E                     l1037:
  1030  017E  0834               	movf	initOsc@IRCF,w
  1031  017F  00B2               	movwf	??_initOsc
  1032  0180  01B3               	clrf	??_initOsc+1
  1033                           
  1034                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1035                           ; Switch size 1, requested type "simple"
  1036                           ; Number of cases is 1, Range of values is 0 to 0
  1037                           ; switch strategies available:
  1038                           ; Name         Instructions Cycles
  1039                           ; simple_byte            4     3 (average)
  1040                           ; direct_byte           11     8 (fixed)
  1041                           ; jumptable            260     6 (fixed)
  1042                           ;	Chosen strategy is simple_byte
  1043  0181  0833               	movf	??_initOsc+1,w
  1044  0182  3A00               	xorlw	0	; case 0
  1045  0183  1903               	skipnz
  1046  0184  2986               	goto	l1283
  1047  0185  2978               	goto	l15
  1048  0186                     l1283:
  1049                           
  1050                           ; Switch size 1, requested type "simple"
  1051                           ; Number of cases is 8, Range of values is 0 to 7
  1052                           ; switch strategies available:
  1053                           ; Name         Instructions Cycles
  1054                           ; simple_byte           25    13 (average)
  1055                           ; direct_byte           32     8 (fixed)
  1056                           ; jumptable            260     6 (fixed)
  1057                           ;	Chosen strategy is simple_byte
  1058  0186  0832               	movf	??_initOsc,w
  1059  0187  3A00               	xorlw	0	; case 0
  1060  0188  1903               	skipnz
  1061  0189  2948               	goto	l6
  1062  018A  3A01               	xorlw	1	; case 1
  1063  018B  1903               	skipnz
  1064  018C  294E               	goto	l8
  1065  018D  3A03               	xorlw	3	; case 2
  1066  018E  1903               	skipnz
  1067  018F  2954               	goto	l9
  1068  0190  3A01               	xorlw	1	; case 3
  1069  0191  1903               	skipnz
  1070  0192  295A               	goto	l10
  1071  0193  3A07               	xorlw	7	; case 4
  1072  0194  1903               	skipnz
  1073  0195  2960               	goto	l11
  1074  0196  3A01               	xorlw	1	; case 5
  1075  0197  1903               	skipnz
  1076  0198  2966               	goto	l12
  1077  0199  3A03               	xorlw	3	; case 6
  1078  019A  1903               	skipnz
  1079  019B  296C               	goto	l13
  1080  019C  3A01               	xorlw	1	; case 7
  1081  019D  1903               	skipnz
  1082  019E  2972               	goto	l14
  1083  019F  2978               	goto	l15
  1084  01A0                     l7:
  1085                           
  1086                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1087  01A0  140F               	bsf	15,0	;volatile
  1088  01A1                     l16:
  1089  01A1  0008               	return
  1090  01A2                     __end_of_initOsc:
  1091                           
  1092                           	psect	text3
  1093  026B                     __ptext3:	
  1094 ;; *************** function _TOGGLE_1 *****************
  1095 ;; Defined at:
  1096 ;;		line 116 in file "Prueba2_lab2.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1110 ;;      Params:         0       0       0       0       0
  1111 ;;      Locals:         0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0
  1113 ;;      Totals:         0       0       0       0       0
  1114 ;;Total ram usage:        0 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:    3
  1117 ;; This function calls:
  1118 ;;		Nothing
  1119 ;; This function is called by:
  1120 ;;		_main
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           
  1125                           ;psect for function _TOGGLE_1
  1126  026B                     _TOGGLE_1:
  1127  026B                     l1139:	
  1128                           ;incstack = 0
  1129                           ; Regs used in _TOGGLE_1: [wreg+status,2+status,0]
  1130                           
  1131                           
  1132                           ;Prueba2_lab2.c: 117:     if (toggle == 1) {
  1133  026B  037A               	decf	_toggle,w
  1134  026C  1D03               	btfss	3,2
  1135  026D  2A6F               	goto	u231
  1136  026E  2A70               	goto	u230
  1137  026F                     u231:
  1138  026F  2A72               	goto	l1143
  1139  0270                     u230:
  1140  0270                     l1141:
  1141                           
  1142                           ;Prueba2_lab2.c: 118:         toggle = 0;
  1143  0270  01FA               	clrf	_toggle
  1144                           
  1145                           ;Prueba2_lab2.c: 119:     } else if (toggle == 0) {
  1146  0271  2A79               	goto	l182
  1147  0272                     l1143:
  1148  0272  087A               	movf	_toggle,w
  1149  0273  1D03               	btfss	3,2
  1150  0274  2A76               	goto	u241
  1151  0275  2A77               	goto	u240
  1152  0276                     u241:
  1153  0276  2A79               	goto	l182
  1154  0277                     u240:
  1155  0277                     l1145:
  1156                           
  1157                           ;Prueba2_lab2.c: 120:         toggle = 1;
  1158  0277  01FA               	clrf	_toggle
  1159  0278  0AFA               	incf	_toggle,f
  1160  0279                     l182:
  1161  0279  0008               	return
  1162  027A                     __end_of_TOGGLE_1:
  1163                           
  1164                           	psect	text4
  1165  0237                     __ptext4:	
  1166 ;; *************** function _Revision *****************
  1167 ;; Defined at:
  1168 ;;		line 145 in file "Prueba2_lab2.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1182 ;;      Params:         0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0
  1185 ;;      Totals:         0       0       0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    3
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           
  1197                           ;psect for function _Revision
  1198  0237                     _Revision:
  1199  0237                     l1151:	
  1200                           ;incstack = 0
  1201                           ; Regs used in _Revision: [wreg]
  1202                           
  1203                           
  1204                           ;Prueba2_lab2.c: 146:     if (val_1 > contador) {
  1205  0237  087D               	movf	_val_1+1,w
  1206  0238  0279               	subwf	_contador+1,w
  1207  0239  1D03               	skipz
  1208  023A  2A3D               	goto	u265
  1209  023B  087C               	movf	_val_1,w
  1210  023C  0278               	subwf	_contador,w
  1211  023D                     u265:
  1212  023D  1803               	skipnc
  1213  023E  2A40               	goto	u261
  1214  023F  2A41               	goto	u260
  1215  0240                     u261:
  1216  0240  2A45               	goto	l1155
  1217  0241                     u260:
  1218  0241                     l1153:
  1219                           
  1220                           ;Prueba2_lab2.c: 147:             PORTEbits.RE0 = 1;
  1221  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1222  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0243  1409               	bsf	9,0	;volatile
  1224                           
  1225                           ;Prueba2_lab2.c: 149:         }
  1226  0244  2A52               	goto	l197
  1227  0245                     l1155:
  1228  0245  0879               	movf	_contador+1,w
  1229  0246  027D               	subwf	_val_1+1,w
  1230  0247  1D03               	skipz
  1231  0248  2A4B               	goto	u275
  1232  0249  0878               	movf	_contador,w
  1233  024A  027C               	subwf	_val_1,w
  1234  024B                     u275:
  1235  024B  1803               	skipnc
  1236  024C  2A4E               	goto	u271
  1237  024D  2A4F               	goto	u270
  1238  024E                     u271:
  1239  024E  2A52               	goto	l197
  1240  024F                     u270:
  1241  024F                     l1157:
  1242                           
  1243                           ;Prueba2_lab2.c: 151:             PORTEbits.RE0 = 0;
  1244  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0251  1009               	bcf	9,0	;volatile
  1247  0252                     l197:
  1248  0252  0008               	return
  1249  0253                     __end_of_Revision:
  1250                           
  1251                           	psect	text5
  1252  0253                     __ptext5:	
  1253 ;; *************** function _Config_INTERRUPT *****************
  1254 ;; Defined at:
  1255 ;;		line 171 in file "Prueba2_lab2.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       0       0       0       0
  1270 ;;      Locals:         0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0
  1272 ;;      Totals:         0       0       0       0       0
  1273 ;;Total ram usage:        0 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    3
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function _Config_INTERRUPT
  1285  0253                     _Config_INTERRUPT:
  1286  0253                     l1129:	
  1287                           ;incstack = 0
  1288                           ; Regs used in _Config_INTERRUPT: [wreg+status,2]
  1289                           
  1290                           
  1291                           ;Prueba2_lab2.c: 172:     TMR0 = 4;
  1292  0253  3004               	movlw	4
  1293  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0256  0081               	movwf	1	;volatile
  1296                           
  1297                           ;Prueba2_lab2.c: 173:     OPTION_REG = 0b10000001;
  1298  0257  3081               	movlw	129
  1299  0258  1683               	bsf	3,5	;RP0=1, select bank1
  1300  0259  1303               	bcf	3,6	;RP1=0, select bank1
  1301  025A  0081               	movwf	1	;volatile
  1302                           
  1303                           ;Prueba2_lab2.c: 174:     INTCON = 0b10101001;
  1304  025B  30A9               	movlw	169
  1305  025C  008B               	movwf	11	;volatile
  1306                           
  1307                           ;Prueba2_lab2.c: 175:     IOCB = 0b00000011;
  1308  025D  3003               	movlw	3
  1309  025E  0096               	movwf	22	;volatile
  1310  025F                     l1131:
  1311                           
  1312                           ;Prueba2_lab2.c: 176:     PIE1bits.ADIE = 1;
  1313  025F  170C               	bsf	12,6	;volatile
  1314  0260                     l1133:
  1315                           
  1316                           ;Prueba2_lab2.c: 177:     PIR1bits.ADIF = 1;
  1317  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1319  0262  170C               	bsf	12,6	;volatile
  1320  0263                     l1135:
  1321                           
  1322                           ;Prueba2_lab2.c: 178:     ADCON1 = 0b00000000;
  1323  0263  1683               	bsf	3,5	;RP0=1, select bank1
  1324  0264  1303               	bcf	3,6	;RP1=0, select bank1
  1325  0265  019F               	clrf	31	;volatile
  1326  0266                     l1137:
  1327                           
  1328                           ;Prueba2_lab2.c: 179:     ADCON0 = 0b01000001;
  1329  0266  3041               	movlw	65
  1330  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1331  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1332  0269  009F               	movwf	31	;volatile
  1333  026A                     l203:
  1334  026A  0008               	return
  1335  026B                     __end_of_Config_INTERRUPT:
  1336                           
  1337                           	psect	text6
  1338  01CA                     __ptext6:	
  1339 ;; *************** function _CONVERSION_ADC *****************
  1340 ;; Defined at:
  1341 ;;		line 136 in file "Prueba2_lab2.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, status,2, status,0
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         0       0       0       0       0
  1356 ;;      Locals:         0       0       0       0       0
  1357 ;;      Temps:          0       2       0       0       0
  1358 ;;      Totals:         0       2       0       0       0
  1359 ;;Total ram usage:        2 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; Hardware stack levels required when called:    3
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           
  1370                           ;psect for function _CONVERSION_ADC
  1371  01CA                     _CONVERSION_ADC:
  1372  01CA                     l1147:	
  1373                           ;incstack = 0
  1374                           ; Regs used in _CONVERSION_ADC: [wreg+status,2+status,0]
  1375                           
  1376                           
  1377                           ;Prueba2_lab2.c: 141:     ADC_NIBBLE1 = (0b11110000 & val_1) >> 4;
  1378  01CA  087D               	movf	_val_1+1,w
  1379  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1380  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1381  01CD  00B3               	movwf	??_CONVERSION_ADC+1
  1382  01CE  087C               	movf	_val_1,w
  1383  01CF  00B2               	movwf	??_CONVERSION_ADC
  1384  01D0  3004               	movlw	4
  1385  01D1                     u255:
  1386  01D1  1003               	clrc
  1387  01D2  0CB3               	rrf	??_CONVERSION_ADC+1,f
  1388  01D3  0CB2               	rrf	??_CONVERSION_ADC,f
  1389  01D4  3EFF               	addlw	-1
  1390  01D5  1D03               	skipz
  1391  01D6  29D1               	goto	u255
  1392  01D7  300F               	movlw	15
  1393  01D8  0532               	andwf	??_CONVERSION_ADC,w
  1394  01D9  00A6               	movwf	_ADC_NIBBLE1
  1395  01DA  3000               	movlw	0
  1396  01DB  0533               	andwf	??_CONVERSION_ADC+1,w
  1397  01DC  00A7               	movwf	_ADC_NIBBLE1+1
  1398  01DD                     l1149:
  1399                           
  1400                           ;Prueba2_lab2.c: 142:     ADC_NIBBLE2 = (0b00001111 & val_1) << 4;
  1401  01DD  300F               	movlw	15
  1402  01DE  057C               	andwf	_val_1,w
  1403  01DF  00B2               	movwf	??_CONVERSION_ADC
  1404  01E0  3000               	movlw	0
  1405  01E1  057D               	andwf	_val_1+1,w
  1406  01E2  00B3               	movwf	??_CONVERSION_ADC+1
  1407  01E3  0EB2               	swapf	??_CONVERSION_ADC,f
  1408  01E4  0EB3               	swapf	??_CONVERSION_ADC+1,f
  1409  01E5  30F0               	movlw	240
  1410  01E6  05B3               	andwf	??_CONVERSION_ADC+1,f
  1411  01E7  0832               	movf	??_CONVERSION_ADC,w
  1412  01E8  390F               	andlw	15
  1413  01E9  04B3               	iorwf	??_CONVERSION_ADC+1,f
  1414  01EA  30F0               	movlw	240
  1415  01EB  05B2               	andwf	??_CONVERSION_ADC,f
  1416  01EC  0832               	movf	??_CONVERSION_ADC,w
  1417  01ED  00A4               	movwf	_ADC_NIBBLE2
  1418  01EE  0833               	movf	??_CONVERSION_ADC+1,w
  1419  01EF  00A5               	movwf	_ADC_NIBBLE2+1
  1420  01F0                     l191:
  1421  01F0  0008               	return
  1422  01F1                     __end_of_CONVERSION_ADC:
  1423                           
  1424                           	psect	text7
  1425  00D1                     __ptext7:	
  1426 ;; *************** function _ISR *****************
  1427 ;; Defined at:
  1428 ;;		line 54 in file "Prueba2_lab2.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1442 ;;      Params:         0       0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0
  1444 ;;      Temps:          5       0       0       0       0
  1445 ;;      Totals:         5       0       0       0       0
  1446 ;;Total ram usage:        5 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    2
  1449 ;; This function calls:
  1450 ;;		_DisplayADC
  1451 ;; This function is called by:
  1452 ;;		Interrupt level 1
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           
  1457                           ;psect for function _ISR
  1458  00D1                     _ISR:
  1459  00D1                     i1l1175:
  1460                           
  1461                           ;Prueba2_lab2.c: 56:     if (INTCONbits.RBIF == 1){
  1462  00D1  1C0B               	btfss	11,0	;volatile
  1463  00D2  28D4               	goto	u30_21
  1464  00D3  28D5               	goto	u30_20
  1465  00D4                     u30_21:
  1466  00D4  2908               	goto	i1l1199
  1467  00D5                     u30_20:
  1468  00D5                     i1l1177:
  1469                           
  1470                           ;Prueba2_lab2.c: 58:             if (PORTBbits.RB0 == 1){
  1471  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1472  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1473  00D7  1C06               	btfss	6,0	;volatile
  1474  00D8  28DA               	goto	u31_21
  1475  00D9  28DB               	goto	u31_20
  1476  00DA                     u31_21:
  1477  00DA  28DD               	goto	i1l158
  1478  00DB                     u31_20:
  1479  00DB                     i1l1179:
  1480                           
  1481                           ;Prueba2_lab2.c: 59:                 debouncing1 = 1;
  1482  00DB  01FB               	clrf	_debouncing1
  1483  00DC  0AFB               	incf	_debouncing1,f
  1484  00DD                     i1l158:	
  1485                           ;Prueba2_lab2.c: 61:             }
  1486                           
  1487                           
  1488                           ;Prueba2_lab2.c: 62:             if (PORTBbits.RB1 == 1){
  1489  00DD  1C86               	btfss	6,1	;volatile
  1490  00DE  28E0               	goto	u32_21
  1491  00DF  28E1               	goto	u32_20
  1492  00E0                     u32_21:
  1493  00E0  28E3               	goto	i1l159
  1494  00E1                     u32_20:
  1495  00E1                     i1l1181:
  1496                           
  1497                           ;Prueba2_lab2.c: 63:                 debouncing2 = 1;
  1498  00E1  01AF               	clrf	_debouncing2
  1499  00E2  0AAF               	incf	_debouncing2,f
  1500  00E3                     i1l159:	
  1501                           ;Prueba2_lab2.c: 65:             }
  1502                           
  1503                           
  1504                           ;Prueba2_lab2.c: 66:             if(PORTBbits.RB0 == 0 && debouncing1 == 1){
  1505  00E3  1806               	btfsc	6,0	;volatile
  1506  00E4  28E6               	goto	u33_21
  1507  00E5  28E7               	goto	u33_20
  1508  00E6                     u33_21:
  1509  00E6  28F5               	goto	i1l1189
  1510  00E7                     u33_20:
  1511  00E7                     i1l1183:
  1512  00E7  037B               	decf	_debouncing1,w
  1513  00E8  1D03               	btfss	3,2
  1514  00E9  28EB               	goto	u34_21
  1515  00EA  28EC               	goto	u34_20
  1516  00EB                     u34_21:
  1517  00EB  28F5               	goto	i1l1189
  1518  00EC                     u34_20:
  1519  00EC                     i1l1185:
  1520                           
  1521                           ;Prueba2_lab2.c: 67:                 contador++;
  1522  00EC  3001               	movlw	1
  1523  00ED  07F8               	addwf	_contador,f
  1524  00EE  1803               	skipnc
  1525  00EF  0AF9               	incf	_contador+1,f
  1526  00F0  3000               	movlw	0
  1527  00F1  07F9               	addwf	_contador+1,f
  1528                           
  1529                           ;Prueba2_lab2.c: 68:                 PORTC = contador;
  1530  00F2  0878               	movf	_contador,w
  1531  00F3  0087               	movwf	7	;volatile
  1532  00F4                     i1l1187:
  1533                           
  1534                           ;Prueba2_lab2.c: 69:                 debouncing1 = 0;
  1535  00F4  01FB               	clrf	_debouncing1
  1536  00F5                     i1l1189:
  1537                           
  1538                           ;Prueba2_lab2.c: 71:             if(PORTBbits.RB1 == 0 && debouncing2 == 1){
  1539  00F5  1886               	btfsc	6,1	;volatile
  1540  00F6  28F8               	goto	u35_21
  1541  00F7  28F9               	goto	u35_20
  1542  00F8                     u35_21:
  1543  00F8  2907               	goto	i1l1197
  1544  00F9                     u35_20:
  1545  00F9                     i1l1191:
  1546  00F9  032F               	decf	_debouncing2,w
  1547  00FA  1D03               	btfss	3,2
  1548  00FB  28FD               	goto	u36_21
  1549  00FC  28FE               	goto	u36_20
  1550  00FD                     u36_21:
  1551  00FD  2907               	goto	i1l1197
  1552  00FE                     u36_20:
  1553  00FE                     i1l1193:
  1554                           
  1555                           ;Prueba2_lab2.c: 72:                 contador--;
  1556  00FE  3001               	movlw	1
  1557  00FF  02F8               	subwf	_contador,f
  1558  0100  3000               	movlw	0
  1559  0101  1C03               	skipc
  1560  0102  03F9               	decf	_contador+1,f
  1561  0103  02F9               	subwf	_contador+1,f
  1562                           
  1563                           ;Prueba2_lab2.c: 73:                 PORTC = contador;
  1564  0104  0878               	movf	_contador,w
  1565  0105  0087               	movwf	7	;volatile
  1566  0106                     i1l1195:
  1567                           
  1568                           ;Prueba2_lab2.c: 74:                 debouncing2 = 0;
  1569  0106  01AF               	clrf	_debouncing2
  1570  0107                     i1l1197:
  1571                           
  1572                           ;Prueba2_lab2.c: 76:             INTCONbits.RBIF = 0;
  1573  0107  100B               	bcf	11,0	;volatile
  1574  0108                     i1l1199:
  1575                           
  1576                           ;Prueba2_lab2.c: 79:     if (PIR1bits.ADIF) {
  1577  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1579  010A  1F0C               	btfss	12,6	;volatile
  1580  010B  290D               	goto	u37_21
  1581  010C  290E               	goto	u37_20
  1582  010D                     u37_21:
  1583  010D  2930               	goto	i1l162
  1584  010E                     u37_20:
  1585  010E                     i1l1201:
  1586                           
  1587                           ;Prueba2_lab2.c: 80:         PIR1bits.ADIF = 0;
  1588  010E  130C               	bcf	12,6	;volatile
  1589  010F                     i1l1203:
  1590                           
  1591                           ;Prueba2_lab2.c: 81:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1592  010F  3003               	movlw	3
  1593  0110  00F4               	movwf	??_ISR+1
  1594  0111  3097               	movlw	151
  1595  0112  00F3               	movwf	??_ISR
  1596  0113                     u41_27:
  1597  0113  0BF3               	decfsz	??_ISR,f
  1598  0114  2913               	goto	u41_27
  1599  0115  0BF4               	decfsz	??_ISR+1,f
  1600  0116  2913               	goto	u41_27
  1601  0117  2918               	nop2
  1602  0118                     i1l1205:
  1603                           
  1604                           ;Prueba2_lab2.c: 82:         ADCON0bits.GO = 1;
  1605  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1606  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1607  011A  149F               	bsf	31,1	;volatile
  1608                           
  1609                           ;Prueba2_lab2.c: 83:         while (ADCON0bits.GO != 0) {
  1610  011B  292A               	goto	i1l1211
  1611  011C                     i1l1207:
  1612                           
  1613                           ;Prueba2_lab2.c: 85:             val_1 = ADRESH;
  1614  011C  081E               	movf	30,w	;volatile
  1615  011D  00F3               	movwf	??_ISR
  1616  011E  01F4               	clrf	??_ISR+1
  1617  011F  0873               	movf	??_ISR,w
  1618  0120  00FC               	movwf	_val_1
  1619  0121  0874               	movf	??_ISR+1,w
  1620  0122  00FD               	movwf	_val_1+1
  1621                           
  1622                           ;Prueba2_lab2.c: 86:             PORTD = val_1;
  1623  0123  087C               	movf	_val_1,w
  1624  0124  0088               	movwf	8	;volatile
  1625  0125                     i1l1209:
  1626                           
  1627                           ;Prueba2_lab2.c: 87:             DisplayADC();
  1628  0125  120A  118A  2216  120A  118A  	fcall	_DisplayADC
  1629  012A                     i1l1211:
  1630                           
  1631                           ;Prueba2_lab2.c: 83:         while (ADCON0bits.GO != 0) {
  1632  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1633  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1634  012C  189F               	btfsc	31,1	;volatile
  1635  012D  292F               	goto	u38_21
  1636  012E  2930               	goto	u38_20
  1637  012F                     u38_21:
  1638  012F  291C               	goto	i1l1207
  1639  0130                     u38_20:
  1640  0130                     i1l162:	
  1641                           ;Prueba2_lab2.c: 89:     }
  1642                           
  1643                           
  1644                           ;Prueba2_lab2.c: 91:     if (INTCONbits.TMR0IF == 1) {
  1645  0130  1D0B               	btfss	11,2	;volatile
  1646  0131  2933               	goto	u39_21
  1647  0132  2934               	goto	u39_20
  1648  0133                     u39_21:
  1649  0133  293B               	goto	i1l167
  1650  0134                     u39_20:
  1651  0134                     i1l1213:
  1652                           
  1653                           ;Prueba2_lab2.c: 92:         INTCONbits.TMR0IF = 0;
  1654  0134  110B               	bcf	11,2	;volatile
  1655  0135                     i1l1215:
  1656                           
  1657                           ;Prueba2_lab2.c: 93:         TMR0 = 4;
  1658  0135  3004               	movlw	4
  1659  0136  0081               	movwf	1	;volatile
  1660  0137                     i1l1217:
  1661                           
  1662                           ;Prueba2_lab2.c: 94:         cont_timer++;
  1663  0137  3001               	movlw	1
  1664  0138  00F3               	movwf	??_ISR
  1665  0139  0873               	movf	??_ISR,w
  1666  013A  07AE               	addwf	_cont_timer,f
  1667  013B                     i1l167:
  1668  013B  0877               	movf	??_ISR+4,w
  1669  013C  008A               	movwf	10
  1670  013D  0876               	movf	??_ISR+3,w
  1671  013E  0084               	movwf	4
  1672  013F  0E75               	swapf	??_ISR+2,w
  1673  0140  0083               	movwf	3
  1674  0141  0EFE               	swapf	btemp,f
  1675  0142  0E7E               	swapf	btemp,w
  1676  0143  0009               	retfie
  1677  0144                     __end_of_ISR:
  1678                           
  1679                           	psect	intentry
  1680  0004                     __pintentry:	
  1681                           ;incstack = 0
  1682                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1683                           
  1684  0004                     interrupt_function:
  1685  007E                     saved_w	set	btemp
  1686  0004  00FE               	movwf	btemp
  1687  0005  0E03               	swapf	3,w
  1688  0006  00F5               	movwf	??_ISR+2
  1689  0007  0804               	movf	4,w
  1690  0008  00F6               	movwf	??_ISR+3
  1691  0009  080A               	movf	10,w
  1692  000A  00F7               	movwf	??_ISR+4
  1693  000B  120A  118A  28D1   	ljmp	_ISR
  1694                           
  1695                           	psect	text8
  1696  0216                     __ptext8:	
  1697 ;; *************** function _DisplayADC *****************
  1698 ;; Defined at:
  1699 ;;		line 125 in file "Prueba2_lab2.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1713 ;;      Params:         0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    1
  1720 ;; This function calls:
  1721 ;;		_display
  1722 ;; This function is called by:
  1723 ;;		_ISR
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           
  1728                           ;psect for function _DisplayADC
  1729  0216                     _DisplayADC:
  1730  0216                     i1l1089:	
  1731                           ;incstack = 0
  1732                           ; Regs used in _DisplayADC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1733                           
  1734                           
  1735                           ;Prueba2_lab2.c: 126:     PORTE = 0;
  1736  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0218  0189               	clrf	9	;volatile
  1739  0219                     i1l1091:
  1740                           
  1741                           ;Prueba2_lab2.c: 127:     if (toggle == 0) {
  1742  0219  087A               	movf	_toggle,w
  1743  021A  1D03               	btfss	3,2
  1744  021B  2A1D               	goto	u21_21
  1745  021C  2A1E               	goto	u21_20
  1746  021D                     u21_21:
  1747  021D  2A28               	goto	i1l1097
  1748  021E                     u21_20:
  1749  021E                     i1l1093:
  1750                           
  1751                           ;Prueba2_lab2.c: 128:         display(ADC_NIBBLE2);
  1752  021E  0824               	movf	_ADC_NIBBLE2,w
  1753  021F  120A  118A  2024  120A  118A  	fcall	_display
  1754  0224                     i1l1095:
  1755                           
  1756                           ;Prueba2_lab2.c: 129:         PORTEbits.RE1 = 1;
  1757  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1758  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1759  0226  1489               	bsf	9,1	;volatile
  1760                           
  1761                           ;Prueba2_lab2.c: 130:     } else if (toggle == 1) {
  1762  0227  2A36               	goto	i1l188
  1763  0228                     i1l1097:
  1764  0228  037A               	decf	_toggle,w
  1765  0229  1D03               	btfss	3,2
  1766  022A  2A2C               	goto	u22_21
  1767  022B  2A2D               	goto	u22_20
  1768  022C                     u22_21:
  1769  022C  2A36               	goto	i1l188
  1770  022D                     u22_20:
  1771  022D                     i1l1099:
  1772                           
  1773                           ;Prueba2_lab2.c: 131:         display(ADC_NIBBLE1);
  1774  022D  0826               	movf	_ADC_NIBBLE1,w
  1775  022E  120A  118A  2024  120A  118A  	fcall	_display
  1776  0233                     i1l1101:
  1777                           
  1778                           ;Prueba2_lab2.c: 132:         PORTEbits.RE2 = 1;
  1779  0233  1283               	bcf	3,5	;RP0=0, select bank0
  1780  0234  1303               	bcf	3,6	;RP1=0, select bank0
  1781  0235  1509               	bsf	9,2	;volatile
  1782  0236                     i1l188:
  1783  0236  0008               	return
  1784  0237                     __end_of_DisplayADC:
  1785                           
  1786                           	psect	text9
  1787  0024                     __ptext9:	
  1788 ;; *************** function _display *****************
  1789 ;; Defined at:
  1790 ;;		line 5 in file "Display.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  ADC_VALOR       1    wreg     unsigned char 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  ADC_VALOR       1    2[COMMON] unsigned char 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      unsigned char 
  1797 ;; Registers used:
  1798 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1804 ;;      Params:         0       0       0       0       0
  1805 ;;      Locals:         1       0       0       0       0
  1806 ;;      Temps:          2       0       0       0       0
  1807 ;;      Totals:         3       0       0       0       0
  1808 ;;Total ram usage:        3 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_DisplayADC
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           
  1818                           ;psect for function _display
  1819  0024                     _display:
  1820                           
  1821                           ;incstack = 0
  1822                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
  1823                           ;display@ADC_VALOR stored from wreg
  1824  0024  00F2               	movwf	display@ADC_VALOR
  1825  0025                     i1l1045:
  1826                           
  1827                           ;Display.c: 7:     switch(ADC_VALOR){
  1828  0025  2896               	goto	i1l1083
  1829  0026                     i1l1047:
  1830                           
  1831                           ;Display.c: 9:             Valor_hex = 0b00111111;
  1832  0026  303F               	movlw	63
  1833  0027  00F0               	movwf	??_display
  1834  0028  0870               	movf	??_display,w
  1835  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1836  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1837  002B  00B1               	movwf	_Valor_hex
  1838                           
  1839                           ;Display.c: 10:             break;
  1840  002C  28D0               	goto	i1l40
  1841  002D                     i1l1049:
  1842                           
  1843                           ;Display.c: 12:             Valor_hex = 0b000000110;
  1844  002D  3006               	movlw	6
  1845  002E  00F0               	movwf	??_display
  1846  002F  0870               	movf	??_display,w
  1847  0030  1283               	bcf	3,5	;RP0=0, select bank0
  1848  0031  1303               	bcf	3,6	;RP1=0, select bank0
  1849  0032  00B1               	movwf	_Valor_hex
  1850                           
  1851                           ;Display.c: 13:             break;
  1852  0033  28D0               	goto	i1l40
  1853  0034                     i1l1051:
  1854                           
  1855                           ;Display.c: 15:             Valor_hex = 0b11011011;
  1856  0034  30DB               	movlw	219
  1857  0035  00F0               	movwf	??_display
  1858  0036  0870               	movf	??_display,w
  1859  0037  1283               	bcf	3,5	;RP0=0, select bank0
  1860  0038  1303               	bcf	3,6	;RP1=0, select bank0
  1861  0039  00B1               	movwf	_Valor_hex
  1862                           
  1863                           ;Display.c: 16:             break;
  1864  003A  28D0               	goto	i1l40
  1865  003B                     i1l1053:
  1866                           
  1867                           ;Display.c: 18:             Valor_hex = 0b01001111;
  1868  003B  304F               	movlw	79
  1869  003C  00F0               	movwf	??_display
  1870  003D  0870               	movf	??_display,w
  1871  003E  1283               	bcf	3,5	;RP0=0, select bank0
  1872  003F  1303               	bcf	3,6	;RP1=0, select bank0
  1873  0040  00B1               	movwf	_Valor_hex
  1874                           
  1875                           ;Display.c: 19:             break;
  1876  0041  28D0               	goto	i1l40
  1877  0042                     i1l1055:
  1878                           
  1879                           ;Display.c: 21:             Valor_hex = 0b01100110;
  1880  0042  3066               	movlw	102
  1881  0043  00F0               	movwf	??_display
  1882  0044  0870               	movf	??_display,w
  1883  0045  1283               	bcf	3,5	;RP0=0, select bank0
  1884  0046  1303               	bcf	3,6	;RP1=0, select bank0
  1885  0047  00B1               	movwf	_Valor_hex
  1886                           
  1887                           ;Display.c: 22:             break;
  1888  0048  28D0               	goto	i1l40
  1889  0049                     i1l1057:
  1890                           
  1891                           ;Display.c: 24:             Valor_hex = 0b01101101;
  1892  0049  306D               	movlw	109
  1893  004A  00F0               	movwf	??_display
  1894  004B  0870               	movf	??_display,w
  1895  004C  1283               	bcf	3,5	;RP0=0, select bank0
  1896  004D  1303               	bcf	3,6	;RP1=0, select bank0
  1897  004E  00B1               	movwf	_Valor_hex
  1898                           
  1899                           ;Display.c: 25:             break;
  1900  004F  28D0               	goto	i1l40
  1901  0050                     i1l1059:
  1902                           
  1903                           ;Display.c: 27:             Valor_hex = 0b01111101;
  1904  0050  307D               	movlw	125
  1905  0051  00F0               	movwf	??_display
  1906  0052  0870               	movf	??_display,w
  1907  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0055  00B1               	movwf	_Valor_hex
  1910                           
  1911                           ;Display.c: 28:             break;
  1912  0056  28D0               	goto	i1l40
  1913  0057                     i1l1061:
  1914                           
  1915                           ;Display.c: 30:             Valor_hex = 0b00000111;
  1916  0057  3007               	movlw	7
  1917  0058  00F0               	movwf	??_display
  1918  0059  0870               	movf	??_display,w
  1919  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1920  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1921  005C  00B1               	movwf	_Valor_hex
  1922                           
  1923                           ;Display.c: 31:             break;
  1924  005D  28D0               	goto	i1l40
  1925  005E                     i1l1063:
  1926                           
  1927                           ;Display.c: 33:             Valor_hex = 0b01111111;
  1928  005E  307F               	movlw	127
  1929  005F  00F0               	movwf	??_display
  1930  0060  0870               	movf	??_display,w
  1931  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1932  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1933  0063  00B1               	movwf	_Valor_hex
  1934                           
  1935                           ;Display.c: 34:             break;
  1936  0064  28D0               	goto	i1l40
  1937  0065                     i1l1065:
  1938                           
  1939                           ;Display.c: 36:             Valor_hex = 0b01101111;
  1940  0065  306F               	movlw	111
  1941  0066  00F0               	movwf	??_display
  1942  0067  0870               	movf	??_display,w
  1943  0068  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0069  1303               	bcf	3,6	;RP1=0, select bank0
  1945  006A  00B1               	movwf	_Valor_hex
  1946                           
  1947                           ;Display.c: 37:             break;
  1948  006B  28D0               	goto	i1l40
  1949  006C                     i1l1067:
  1950                           
  1951                           ;Display.c: 39:             Valor_hex = 0b01110111;
  1952  006C  3077               	movlw	119
  1953  006D  00F0               	movwf	??_display
  1954  006E  0870               	movf	??_display,w
  1955  006F  1283               	bcf	3,5	;RP0=0, select bank0
  1956  0070  1303               	bcf	3,6	;RP1=0, select bank0
  1957  0071  00B1               	movwf	_Valor_hex
  1958                           
  1959                           ;Display.c: 40:             break;
  1960  0072  28D0               	goto	i1l40
  1961  0073                     i1l1069:
  1962                           
  1963                           ;Display.c: 42:             Valor_hex = 0b01111100;
  1964  0073  307C               	movlw	124
  1965  0074  00F0               	movwf	??_display
  1966  0075  0870               	movf	??_display,w
  1967  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1969  0078  00B1               	movwf	_Valor_hex
  1970                           
  1971                           ;Display.c: 43:             break;
  1972  0079  28D0               	goto	i1l40
  1973  007A                     i1l1071:
  1974                           
  1975                           ;Display.c: 45:             Valor_hex = 0b00111001;
  1976  007A  3039               	movlw	57
  1977  007B  00F0               	movwf	??_display
  1978  007C  0870               	movf	??_display,w
  1979  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1980  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1981  007F  00B1               	movwf	_Valor_hex
  1982                           
  1983                           ;Display.c: 46:             break;
  1984  0080  28D0               	goto	i1l40
  1985  0081                     i1l1073:
  1986                           
  1987                           ;Display.c: 48:             Valor_hex = 0b01011110;
  1988  0081  305E               	movlw	94
  1989  0082  00F0               	movwf	??_display
  1990  0083  0870               	movf	??_display,w
  1991  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1992  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1993  0086  00B1               	movwf	_Valor_hex
  1994                           
  1995                           ;Display.c: 49:             break;
  1996  0087  28D0               	goto	i1l40
  1997  0088                     i1l1075:
  1998                           
  1999                           ;Display.c: 51:             Valor_hex = 0b01111001;
  2000  0088  3079               	movlw	121
  2001  0089  00F0               	movwf	??_display
  2002  008A  0870               	movf	??_display,w
  2003  008B  1283               	bcf	3,5	;RP0=0, select bank0
  2004  008C  1303               	bcf	3,6	;RP1=0, select bank0
  2005  008D  00B1               	movwf	_Valor_hex
  2006                           
  2007                           ;Display.c: 52:             break;
  2008  008E  28D0               	goto	i1l40
  2009  008F                     i1l1077:
  2010                           
  2011                           ;Display.c: 54:             Valor_hex = 0b01110001;
  2012  008F  3071               	movlw	113
  2013  0090  00F0               	movwf	??_display
  2014  0091  0870               	movf	??_display,w
  2015  0092  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0093  1303               	bcf	3,6	;RP1=0, select bank0
  2017  0094  00B1               	movwf	_Valor_hex
  2018                           
  2019                           ;Display.c: 55:             break;
  2020  0095  28D0               	goto	i1l40
  2021  0096                     i1l1083:
  2022  0096  0872               	movf	display@ADC_VALOR,w
  2023  0097  00F0               	movwf	??_display
  2024  0098  01F1               	clrf	??_display+1
  2025                           
  2026                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2027                           ; Switch size 1, requested type "simple"
  2028                           ; Number of cases is 1, Range of values is 0 to 0
  2029                           ; switch strategies available:
  2030                           ; Name         Instructions Cycles
  2031                           ; simple_byte            4     3 (average)
  2032                           ; direct_byte           11     8 (fixed)
  2033                           ; jumptable            260     6 (fixed)
  2034                           ;	Chosen strategy is simple_byte
  2035  0099  0871               	movf	??_display+1,w
  2036  009A  3A00               	xorlw	0	; case 0
  2037  009B  1903               	skipnz
  2038  009C  289E               	goto	i1l1285
  2039  009D  2826               	goto	i1l1047
  2040  009E                     i1l1285:
  2041                           
  2042                           ; Switch size 1, requested type "simple"
  2043                           ; Number of cases is 16, Range of values is 0 to 15
  2044                           ; switch strategies available:
  2045                           ; Name         Instructions Cycles
  2046                           ; simple_byte           49    25 (average)
  2047                           ; direct_byte           56     8 (fixed)
  2048                           ; jumptable            260     6 (fixed)
  2049                           ;	Chosen strategy is simple_byte
  2050  009E  0870               	movf	??_display,w
  2051  009F  3A00               	xorlw	0	; case 0
  2052  00A0  1903               	skipnz
  2053  00A1  2826               	goto	i1l1047
  2054  00A2  3A01               	xorlw	1	; case 1
  2055  00A3  1903               	skipnz
  2056  00A4  282D               	goto	i1l1049
  2057  00A5  3A03               	xorlw	3	; case 2
  2058  00A6  1903               	skipnz
  2059  00A7  2834               	goto	i1l1051
  2060  00A8  3A01               	xorlw	1	; case 3
  2061  00A9  1903               	skipnz
  2062  00AA  283B               	goto	i1l1053
  2063  00AB  3A07               	xorlw	7	; case 4
  2064  00AC  1903               	skipnz
  2065  00AD  2842               	goto	i1l1055
  2066  00AE  3A01               	xorlw	1	; case 5
  2067  00AF  1903               	skipnz
  2068  00B0  2849               	goto	i1l1057
  2069  00B1  3A03               	xorlw	3	; case 6
  2070  00B2  1903               	skipnz
  2071  00B3  2850               	goto	i1l1059
  2072  00B4  3A01               	xorlw	1	; case 7
  2073  00B5  1903               	skipnz
  2074  00B6  2857               	goto	i1l1061
  2075  00B7  3A0F               	xorlw	15	; case 8
  2076  00B8  1903               	skipnz
  2077  00B9  285E               	goto	i1l1063
  2078  00BA  3A01               	xorlw	1	; case 9
  2079  00BB  1903               	skipnz
  2080  00BC  2865               	goto	i1l1065
  2081  00BD  3A03               	xorlw	3	; case 10
  2082  00BE  1903               	skipnz
  2083  00BF  286C               	goto	i1l1067
  2084  00C0  3A01               	xorlw	1	; case 11
  2085  00C1  1903               	skipnz
  2086  00C2  2873               	goto	i1l1069
  2087  00C3  3A07               	xorlw	7	; case 12
  2088  00C4  1903               	skipnz
  2089  00C5  287A               	goto	i1l1071
  2090  00C6  3A01               	xorlw	1	; case 13
  2091  00C7  1903               	skipnz
  2092  00C8  2881               	goto	i1l1073
  2093  00C9  3A03               	xorlw	3	; case 14
  2094  00CA  1903               	skipnz
  2095  00CB  2888               	goto	i1l1075
  2096  00CC  3A01               	xorlw	1	; case 15
  2097  00CD  1903               	skipnz
  2098  00CE  288F               	goto	i1l1077
  2099  00CF  2826               	goto	i1l1047
  2100  00D0                     i1l40:
  2101  00D0  0008               	return
  2102  00D1                     __end_of_display:
  2103  007E                     btemp	set	126	;btemp
  2104  007E                     wtemp0	set	126
  2105                           
  2106                           	psect	config
  2107                           
  2108                           ;Config register CONFIG1 @ 0x2007
  2109                           ;	Oscillator Selection bits
  2110                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2111                           ;	Watchdog Timer Enable bit
  2112                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2113                           ;	Power-up Timer Enable bit
  2114                           ;	PWRTE = OFF, PWRT disabled
  2115                           ;	RE3/MCLR pin function select bit
  2116                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2117                           ;	Code Protection bit
  2118                           ;	CP = OFF, Program memory code protection is disabled
  2119                           ;	Data Code Protection bit
  2120                           ;	CPD = OFF, Data memory code protection is disabled
  2121                           ;	Brown Out Reset Selection bits
  2122                           ;	BOREN = OFF, BOR disabled
  2123                           ;	Internal External Switchover bit
  2124                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2125                           ;	Fail-Safe Clock Monitor Enabled bit
  2126                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2127                           ;	Low Voltage Programming Enable bit
  2128                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2129                           ;	In-Circuit Debugger Mode bit
  2130                           ;	DEBUG = 0x1, unprogrammed default
  2131  2007                     	org	8199
  2132  2007  20D4               	dw	8404
  2133                           
  2134                           ;Config register CONFIG2 @ 0x2008
  2135                           ;	Brown-out Reset Selection bit
  2136                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2137                           ;	Flash Program Memory Self Write Enable bits
  2138                           ;	WRT = OFF, Write protection off
  2139  2008                     	org	8200
  2140  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      3      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _DisplayADC->_display

Critical Paths under _main in BANK0

    _setup->_initOsc

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      22
                     _CONVERSION_ADC
                   _Config_INTERRUPT
                           _Revision
                           _TOGGLE_1
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _TOGGLE_1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Revision                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONVERSION_ADC                                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0      22
                                              3 COMMON     5     5      0
                         _DisplayADC
 ---------------------------------------------------------------------------------
 (4) _DisplayADC                                           0     0      0      22
                            _display
 ---------------------------------------------------------------------------------
 (5) _display                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVERSION_ADC
   _Config_INTERRUPT
   _Revision
   _TOGGLE_1
   _setup
     _initOsc

 _ISR (ROOT)
   _DisplayADC
     _display

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      23       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3      15       5       26.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      23      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 06 11:40:36 2021

                        l6 0148                          l7 01A0                          l8 014E  
                        l9 0154                         l10 015A                         l11 0160  
                       l12 0166                         l13 016C                         l14 0172  
                       l15 0178                         l16 01A1                         fsr 0004  
                      l200 01C9                        l203 026A                        l182 0279  
                      l191 01F0                        l197 0252                        u230 0270  
                      u231 026F                        u240 0277                        u400 0202  
                      u241 0276                        u401 0201                        u260 0241  
                      u261 0240                        u270 024F                        u255 01D1  
                      u271 024E                        u265 023D                        u275 024B  
                      _ISR 00D1                        _VAL 002C                        fsr0 0004  
                      indf 0000                       ?_ISR 0070                       l1111 01B1  
                     l1103 01A2                       l1033 0147                       l1121 01BF  
                     l1113 01B4                       l1105 01A8                       l1131 025F  
                     l1123 01C0                       l1115 01B8                       l1107 01AC  
                     l1133 0260                       l1141 0270                       l1037 017E  
                     l1125 01C3                       l1117 01BB                       l1109 01AD  
                     l1221 01F6                       l1135 0263                       l1151 0237  
                     l1143 0272                       l1127 01C6                       l1119 01BC  
                     l1231 020D                       l1223 01FB                       l1137 0266  
                     l1129 0253                       l1153 0241                       l1145 0277  
                     l1225 0202                       l1147 01CA                       l1155 0245  
                     l1139 026B                       l1227 0203                       l1219 01F1  
                     l1149 01DD                       l1157 024F                       l1229 0208  
                     l1283 0186                       _IOCB 0096                       i1l40 00D0  
                     _TMR0 0001                       _main 01F1                       btemp 007E  
 __end_of_Config_INTERRUPT 026B                       start 000E                      ??_ISR 0073  
                    ?_main 0070                      _ANSEL 0188                      i1l162 0130  
                    i1l158 00DD                      i1l167 013B                      i1l159 00E3  
                    i1l188 0236                      u21_20 021E                      u21_21 021D  
                    u22_20 022D                      u30_20 00D5                      u22_21 022C  
                    u30_21 00D4                      u31_20 00DB                      u31_21 00DA  
                    u32_20 00E1                      u32_21 00E0                      u33_20 00E7  
                    u33_21 00E6                      u41_27 0113                      u34_20 00EC  
                    u34_21 00EB                      u35_20 00F9                      u35_21 00F8  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u36_20 00FE  
                    u36_21 00FD                      u37_20 010E                      u37_21 010D  
                    u38_20 0130                      u38_21 012F                      u39_20 0134  
                    u39_21 0133                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
               _DisplayADC 0216           __end_of_TOGGLE_1 027A            __end_of_display 00D1  
          __end_of_initOsc 01A2                      _val_1 007C                      _setup 01A2  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 0011               __end_of_main 0216                     ??_main 0035  
         __end_of_Revision 0253                     _ADCON0 001F                     _ADCON1 009F  
                   _ADRESH 001E                     _ADRESL 009E                initOsc@IRCF 0034  
                   ?_setup 0070                     _ANSELH 0189                     i1l1101 0233  
                   i1l1201 010E                     i1l1051 0034                     i1l1211 012A  
                   i1l1203 010F                     i1l1061 0057                     i1l1053 003B  
                   i1l1045 0025                     i1l1213 0134                     i1l1205 0118  
                   i1l1071 007A                     i1l1063 005E                     i1l1055 0042  
                   i1l1047 0026                     i1l1215 0135                     i1l1207 011C  
                   i1l1073 0081                     i1l1065 0065                     i1l1057 0049  
                   i1l1049 002D                     i1l1217 0137                     i1l1209 0125  
                   i1l1075 0088                     i1l1067 006C                     i1l1059 0050  
                   i1l1083 0096                     i1l1091 0219                     i1l1077 008F  
                   i1l1069 0073                     i1l1093 021E                     i1l1181 00E1  
                   i1l1095 0224                     i1l1191 00F9                     i1l1183 00E7  
                   i1l1175 00D1                     i1l1097 0228                     i1l1089 0216  
                   i1l1193 00FE                     i1l1185 00EC                     i1l1177 00D5  
                   i1l1099 022D                     i1l1195 0106                     i1l1187 00F4  
                   i1l1179 00DB                     i1l1285 009E                     i1l1197 0107  
                   i1l1189 00F5                     i1l1199 0108                     _INTCON 000B  
                   _toggle 007A                  ??_display 0070                  ??_initOsc 0032  
              ?_DisplayADC 0070                     saved_w 007E    __end_of__initialization 0020  
           __pcstackCOMMON 0070                  ?_TOGGLE_1 0070              __end_of_setup 01CA  
         display@ADC_VALOR 0072                    ??_setup 0035                 __pbssBANK0 0020  
  __size_of_CONVERSION_ADC 0027          ?_Config_INTERRUPT 0070                 __pmaintext 01F1  
                ?_Revision 0070        __size_of_DisplayADC 0021         ??_Config_INTERRUPT 0032  
               ??_TOGGLE_1 0032                 __pintentry 0004                 _cont_timer 002E  
                _ADC_VALOR 0022                 ??_Revision 0032                    __ptext1 01A2  
                  __ptext2 0144                    __ptext3 026B                    __ptext4 0237  
                  __ptext5 0253                    __ptext6 01CA                    __ptext7 00D1  
                  __ptext8 0216                    __ptext9 0024                    _display 0024  
             __size_of_ISR 0073                    _initOsc 0144                    clrloop0 027B  
     end_of_initialization 0020                  _PORTBbits 0006                  _PORTEbits 0009  
             ??_DisplayADC 0073             _CONVERSION_ADC 01CA                _ADC_NIBBLE1 0026  
              _ADC_NIBBLE2 0024         __end_of_DisplayADC 0237          __size_of_TOGGLE_1 000F  
      start_initialization 0011                __end_of_ISR 0144     __end_of_CONVERSION_ADC 01F1  
                _Valor_hex 0031          __size_of_Revision 001C  __size_of_Config_INTERRUPT 0018  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 0032  
          ?_CONVERSION_ADC 0070                _debouncing1 007B                _debouncing2 002F  
                 ?_display 0070                   ?_initOsc 0070                   _ADC_SWAP 0020  
           __size_of_setup 0028          interrupt_function 0004                  clear_ram0 027A  
                 _PIE1bits 008C                   _PIR1bits 000C                   _TOGGLE_1 026B  
                 _VAL_SWAP 0030                 _ADCON0bits 001F                   _Revision 0237  
         _Config_INTERRUPT 0253           __size_of_display 00AD           __size_of_initOsc 005E  
                 _contador 0078              __size_of_main 0025                 _INTCONbits 000B  
         ??_CONVERSION_ADC 0032                _VAL_NIBBLE1 002A                _VAL_NIBBLE2 0028  
                 intlevel1 0000                 _OSCCONbits 008F                 _OPTION_REG 0081  
