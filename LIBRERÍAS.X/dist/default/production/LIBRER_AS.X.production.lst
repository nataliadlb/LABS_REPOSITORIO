

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 06 11:49:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  008F                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  0105                     	;# 
   438  0107                     	;# 
   439  0108                     	;# 
   440  0109                     	;# 
   441  010C                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  010F                     	;# 
   446  0185                     	;# 
   447  0187                     	;# 
   448  0188                     	;# 
   449  0189                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  001F                     _ADCON0	set	31
   453  000B                     _INTCON	set	11
   454  0006                     _PORTB	set	6
   455  0005                     _PORTA	set	5
   456  0009                     _PORTEbits	set	9
   457  0008                     _PORTD	set	8
   458  0009                     _PORTE	set	9
   459  0001                     _TMR0	set	1
   460  001F                     _ADCON0bits	set	31
   461  000C                     _PIR1bits	set	12
   462  0007                     _PORTC	set	7
   463  0006                     _PORTBbits	set	6
   464  000B                     _INTCONbits	set	11
   465  001E                     _ADRESH	set	30
   466  009F                     _ADCON1	set	159
   467  008C                     _PIE1bits	set	140
   468  0096                     _IOCB	set	150
   469  0081                     _OPTION_REG	set	129
   470  0089                     _TRISE	set	137
   471  0088                     _TRISD	set	136
   472  0087                     _TRISC	set	135
   473  0086                     _TRISB	set	134
   474  0085                     _TRISA	set	133
   475  009E                     _ADRESL	set	158
   476  008F                     _OSCCONbits	set	143
   477  0189                     _ANSELH	set	393
   478  0188                     _ANSEL	set	392
   479                           
   480                           	psect	cinit
   481  0011                     start_initialization:	
   482                           ; #config settings
   483                           
   484  0011                     __initialization:
   485                           
   486                           ; Clear objects allocated to COMMON
   487  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   488  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   489  0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   490  0014  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   491  0015  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   492  0016  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   493                           
   494                           ; Clear objects allocated to BANK0
   495  0017  1383               	bcf	3,7	;select IRP bank0
   496  0018  3020               	movlw	low __pbssBANK0
   497  0019  0084               	movwf	4
   498  001A  3032               	movlw	low (__pbssBANK0+18)
   499  001B  120A  118A  229E  120A  118A  	fcall	clear_ram0
   500  0020                     end_of_initialization:	
   501                           ;End of C runtime variable initialization code
   502                           
   503  0020                     __end_of__initialization:
   504  0020  0183               	clrf	3
   505  0021  120A  118A  29E1   	ljmp	_main	;jump to C main() function
   506                           
   507                           	psect	bssCOMMON
   508  0078                     __pbssCOMMON:
   509  0078                     _toggle:
   510  0078                     	ds	1
   511  0079                     _cont_timer:
   512  0079                     	ds	1
   513  007A                     _debouncing2:
   514  007A                     	ds	1
   515  007B                     _debouncing1:
   516  007B                     	ds	1
   517  007C                     _VAL_SWAP:
   518  007C                     	ds	1
   519  007D                     _Valor_hex:
   520  007D                     	ds	1
   521                           
   522                           	psect	bssBANK0
   523  0020                     __pbssBANK0:
   524  0020                     _ADC_SWAP:
   525  0020                     	ds	2
   526  0022                     _ADC_VALOR:
   527  0022                     	ds	2
   528  0024                     _ADC_NIBBLE2:
   529  0024                     	ds	2
   530  0026                     _ADC_NIBBLE1:
   531  0026                     	ds	2
   532  0028                     _val_1:
   533  0028                     	ds	2
   534  002A                     _contador:
   535  002A                     	ds	2
   536  002C                     _VAL_NIBBLE2:
   537  002C                     	ds	2
   538  002E                     _VAL_NIBBLE1:
   539  002E                     	ds	2
   540  0030                     _VAL:
   541  0030                     	ds	2
   542                           
   543                           	psect	clrtext
   544  029E                     clear_ram0:	
   545                           ;	Called with FSR containing the base address, and
   546                           ;	W with the last address+1
   547                           
   548  029E  0064               	clrwdt	;clear the watchdog before getting into this loop
   549  029F                     clrloop0:
   550  029F  0180               	clrf	0	;clear RAM location pointed to by FSR
   551  02A0  0A84               	incf	4,f	;increment pointer
   552  02A1  0604               	xorwf	4,w	;XOR with final address
   553  02A2  1903               	btfsc	3,2	;have we reached the end yet?
   554  02A3  3400               	retlw	0	;all done for this memory range, return
   555  02A4  0604               	xorwf	4,w	;XOR again to restore value
   556  02A5  2A9F               	goto	clrloop0	;do the next byte
   557                           
   558                           	psect	cstackCOMMON
   559  0070                     __pcstackCOMMON:
   560  0070                     ?_DisplayADC:
   561  0070                     ?_setup:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_Config_INTERRUPT:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_TOGGLE_1:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_CONVERSION_ADC:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_Revision:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_initOsc:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_display:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ??_display:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_SWAP_ADC:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_NIBBLE1_ADC:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_NIBBLE2_ADC:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_ISR:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_main:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_ADC:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ADC@ADRESL_:	
   604                           ; 2 bytes @ 0x0
   605                           
   606  0070                     ADC@ADRESH_:	
   607                           ; 1 bytes @ 0x0
   608                           
   609                           
   610                           ; 1 bytes @ 0x0
   611  0070                     	ds	2
   612  0072                     display@ADC_VALOR:
   613                           
   614                           ; 1 bytes @ 0x2
   615  0072                     	ds	1
   616  0073                     ??_DisplayADC:
   617  0073                     ??_ADC:	
   618                           ; 1 bytes @ 0x3
   619                           
   620  0073                     ??_ISR:	
   621                           ; 1 bytes @ 0x3
   622                           
   623                           
   624                           ; 1 bytes @ 0x3
   625  0073                     	ds	5
   626                           
   627                           	psect	cstackBANK0
   628  0032                     __pcstackBANK0:
   629  0032                     ??_Config_INTERRUPT:
   630  0032                     ??_TOGGLE_1:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0032                     ??_Revision:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0032                     ??_initOsc:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0032                     ??_SWAP_ADC:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0032                     ??_NIBBLE1_ADC:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0032                     ??_NIBBLE2_ADC:	
   646                           ; 1 bytes @ 0x0
   647                           
   648                           
   649                           ; 1 bytes @ 0x0
   650  0032                     	ds	2
   651  0034                     initOsc@IRCF:
   652  0034                     NIBBLE1_ADC@VAL_ADC:	
   653                           ; 1 bytes @ 0x2
   654                           
   655  0034                     NIBBLE2_ADC@VAL_SWAP:	
   656                           ; 1 bytes @ 0x2
   657                           
   658                           
   659                           ; 1 bytes @ 0x2
   660  0034                     	ds	1
   661  0035                     ??_setup:
   662                           
   663                           ; 1 bytes @ 0x3
   664  0035                     	ds	1
   665  0036                     SWAP_ADC@VAL_ADC:
   666                           
   667                           ; 1 bytes @ 0x4
   668  0036                     	ds	1
   669  0037                     ??_CONVERSION_ADC:
   670                           
   671                           ; 1 bytes @ 0x5
   672  0037                     	ds	2
   673  0039                     ??_main:
   674                           
   675                           	psect	maintext
   676  01E1                     __pmaintext:	
   677                           ; 1 bytes @ 0x7
   678 ;;
   679 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   680 ;;
   681 ;; *************** function _main *****************
   682 ;; Defined at:
   683 ;;		line 98 in file "Prueba2_lab2.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;		None
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : B00/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         0       0       0       0       0
   698 ;;      Locals:         0       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0
   700 ;;      Totals:         0       0       0       0       0
   701 ;;Total ram usage:        0 bytes
   702 ;; Hardware stack levels required when called:    5
   703 ;; This function calls:
   704 ;;		_CONVERSION_ADC
   705 ;;		_Config_INTERRUPT
   706 ;;		_Revision
   707 ;;		_TOGGLE_1
   708 ;;		_setup
   709 ;; This function is called by:
   710 ;;		Startup code after reset
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _main
   716  01E1                     _main:
   717  01E1                     l1253:	
   718                           ;incstack = 0
   719                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   720                           
   721                           
   722                           ;Prueba2_lab2.c: 99:     setup();
   723  01E1  120A  118A  21B9  120A  118A  	fcall	_setup
   724  01E6                     l1255:
   725                           
   726                           ;Prueba2_lab2.c: 101:     Config_INTERRUPT();
   727  01E6  120A  118A  2246  120A  118A  	fcall	_Config_INTERRUPT
   728  01EB                     l1257:
   729                           
   730                           ;Prueba2_lab2.c: 105:         if (cont_timer >= 1) {
   731  01EB  0879               	movf	_cont_timer,w
   732  01EC  1903               	btfsc	3,2
   733  01ED  29EF               	goto	u361
   734  01EE  29F0               	goto	u360
   735  01EF                     u361:
   736  01EF  29F6               	goto	l1263
   737  01F0                     u360:
   738  01F0                     l1259:
   739                           
   740                           ;Prueba2_lab2.c: 106:             cont_timer = 0;
   741  01F0  01F9               	clrf	_cont_timer
   742  01F1                     l1261:
   743                           
   744                           ;Prueba2_lab2.c: 107:             TOGGLE_1();
   745  01F1  120A  118A  225E  120A  118A  	fcall	_TOGGLE_1
   746  01F6                     l1263:
   747                           
   748                           ;Prueba2_lab2.c: 109:         CONVERSION_ADC();
   749  01F6  120A  118A  218C  120A  118A  	fcall	_CONVERSION_ADC
   750  01FB                     l1265:
   751                           
   752                           ;Prueba2_lab2.c: 110:         Revision();
   753  01FB  120A  118A  2294  120A  118A  	fcall	_Revision
   754  0200  29EB               	goto	l1257
   755  0201  120A  118A  280E   	ljmp	start
   756  0204                     __end_of_main:
   757                           
   758                           	psect	text1
   759  01B9                     __ptext1:	
   760 ;; *************** function _setup *****************
   761 ;; Defined at:
   762 ;;		line 155 in file "Prueba2_lab2.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;		None
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   776 ;;      Params:         0       0       0       0       0
   777 ;;      Locals:         0       0       0       0       0
   778 ;;      Temps:          0       0       0       0       0
   779 ;;      Totals:         0       0       0       0       0
   780 ;;Total ram usage:        0 bytes
   781 ;; Hardware stack levels used:    1
   782 ;; Hardware stack levels required when called:    4
   783 ;; This function calls:
   784 ;;		_initOsc
   785 ;; This function is called by:
   786 ;;		_main
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           
   791                           ;psect for function _setup
   792  01B9                     _setup:
   793  01B9                     l1151:	
   794                           ;incstack = 0
   795                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   796                           
   797                           
   798                           ;Prueba2_lab2.c: 156:     initOsc(0b00000111);
   799  01B9  3007               	movlw	7
   800  01BA  120A  118A  212E  120A  118A  	fcall	_initOsc
   801  01BF                     l1153:
   802                           
   803                           ;Prueba2_lab2.c: 157:     ANSEL = 0b00000001;
   804  01BF  3001               	movlw	1
   805  01C0  1683               	bsf	3,5	;RP0=1, select bank3
   806  01C1  1703               	bsf	3,6	;RP1=1, select bank3
   807  01C2  0088               	movwf	8	;volatile
   808  01C3                     l1155:
   809                           
   810                           ;Prueba2_lab2.c: 158:     ANSELH = 0;
   811  01C3  0189               	clrf	9	;volatile
   812  01C4                     l1157:
   813                           
   814                           ;Prueba2_lab2.c: 159:     TRISA = 0b00000001;
   815  01C4  3001               	movlw	1
   816  01C5  1683               	bsf	3,5	;RP0=1, select bank1
   817  01C6  1303               	bcf	3,6	;RP1=0, select bank1
   818  01C7  0085               	movwf	5	;volatile
   819  01C8                     l1159:
   820                           
   821                           ;Prueba2_lab2.c: 160:     PORTA = 0;
   822  01C8  1283               	bcf	3,5	;RP0=0, select bank0
   823  01C9  1303               	bcf	3,6	;RP1=0, select bank0
   824  01CA  0185               	clrf	5	;volatile
   825  01CB                     l1161:
   826                           
   827                           ;Prueba2_lab2.c: 161:     TRISB = 0b00000011;
   828  01CB  3003               	movlw	3
   829  01CC  1683               	bsf	3,5	;RP0=1, select bank1
   830  01CD  1303               	bcf	3,6	;RP1=0, select bank1
   831  01CE  0086               	movwf	6	;volatile
   832  01CF                     l1163:
   833                           
   834                           ;Prueba2_lab2.c: 162:     PORTB = 0;
   835  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   836  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   837  01D1  0186               	clrf	6	;volatile
   838  01D2                     l1165:
   839                           
   840                           ;Prueba2_lab2.c: 163:     PORTC = 0;
   841  01D2  0187               	clrf	7	;volatile
   842  01D3                     l1167:
   843                           
   844                           ;Prueba2_lab2.c: 164:     TRISC = 0;
   845  01D3  1683               	bsf	3,5	;RP0=1, select bank1
   846  01D4  1303               	bcf	3,6	;RP1=0, select bank1
   847  01D5  0187               	clrf	7	;volatile
   848  01D6                     l1169:
   849                           
   850                           ;Prueba2_lab2.c: 165:     TRISD = 0;
   851  01D6  0188               	clrf	8	;volatile
   852  01D7                     l1171:
   853                           
   854                           ;Prueba2_lab2.c: 166:     PORTD = 0;
   855  01D7  1283               	bcf	3,5	;RP0=0, select bank0
   856  01D8  1303               	bcf	3,6	;RP1=0, select bank0
   857  01D9  0188               	clrf	8	;volatile
   858  01DA                     l1173:
   859                           
   860                           ;Prueba2_lab2.c: 167:     TRISE = 0;
   861  01DA  1683               	bsf	3,5	;RP0=1, select bank1
   862  01DB  1303               	bcf	3,6	;RP1=0, select bank1
   863  01DC  0189               	clrf	9	;volatile
   864  01DD                     l1175:
   865                           
   866                           ;Prueba2_lab2.c: 168:     PORTE = 0;
   867  01DD  1283               	bcf	3,5	;RP0=0, select bank0
   868  01DE  1303               	bcf	3,6	;RP1=0, select bank0
   869  01DF  0189               	clrf	9	;volatile
   870  01E0                     l210:
   871  01E0  0008               	return
   872  01E1                     __end_of_setup:
   873                           
   874                           	psect	text2
   875  012E                     __ptext2:	
   876 ;; *************** function _initOsc *****************
   877 ;; Defined at:
   878 ;;		line 3 in file "Oscilador.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  IRCF            1    wreg     unsigned char 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  IRCF            1    2[BANK0 ] unsigned char 
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         0       0       0       0       0
   893 ;;      Locals:         0       1       0       0       0
   894 ;;      Temps:          0       2       0       0       0
   895 ;;      Totals:         0       3       0       0       0
   896 ;;Total ram usage:        3 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; Hardware stack levels required when called:    3
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_setup
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           
   907                           ;psect for function _initOsc
   908  012E                     _initOsc:
   909                           
   910                           ;incstack = 0
   911                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   912                           ;initOsc@IRCF stored from wreg
   913  012E  1283               	bcf	3,5	;RP0=0, select bank0
   914  012F  1303               	bcf	3,6	;RP1=0, select bank0
   915  0130  00B4               	movwf	initOsc@IRCF
   916  0131                     l1055:
   917                           
   918                           ;Oscilador.c: 5:     switch(IRCF){
   919  0131  2968               	goto	l1059
   920  0132                     l6:	
   921                           ;Oscilador.c: 6:         case 0:
   922                           
   923                           
   924                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   925  0132  1683               	bsf	3,5	;RP0=1, select bank1
   926  0133  1303               	bcf	3,6	;RP1=0, select bank1
   927  0134  130F               	bcf	15,6	;volatile
   928                           
   929                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   930  0135  128F               	bcf	15,5	;volatile
   931                           
   932                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   933  0136  120F               	bcf	15,4	;volatile
   934                           
   935                           ;Oscilador.c: 10:             break;
   936  0137  298A               	goto	l7
   937  0138                     l8:	
   938                           ;Oscilador.c: 11:          case 1:
   939                           
   940                           
   941                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   942  0138  1683               	bsf	3,5	;RP0=1, select bank1
   943  0139  1303               	bcf	3,6	;RP1=0, select bank1
   944  013A  130F               	bcf	15,6	;volatile
   945                           
   946                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   947  013B  128F               	bcf	15,5	;volatile
   948                           
   949                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   950  013C  160F               	bsf	15,4	;volatile
   951                           
   952                           ;Oscilador.c: 15:             break;
   953  013D  298A               	goto	l7
   954  013E                     l9:	
   955                           ;Oscilador.c: 16:         case 2:
   956                           
   957                           
   958                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   959  013E  1683               	bsf	3,5	;RP0=1, select bank1
   960  013F  1303               	bcf	3,6	;RP1=0, select bank1
   961  0140  130F               	bcf	15,6	;volatile
   962                           
   963                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   964  0141  168F               	bsf	15,5	;volatile
   965                           
   966                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   967  0142  120F               	bcf	15,4	;volatile
   968                           
   969                           ;Oscilador.c: 20:             break;
   970  0143  298A               	goto	l7
   971  0144                     l10:	
   972                           ;Oscilador.c: 21:         case 3:
   973                           
   974                           
   975                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   976  0144  1683               	bsf	3,5	;RP0=1, select bank1
   977  0145  1303               	bcf	3,6	;RP1=0, select bank1
   978  0146  130F               	bcf	15,6	;volatile
   979                           
   980                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   981  0147  168F               	bsf	15,5	;volatile
   982                           
   983                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   984  0148  160F               	bsf	15,4	;volatile
   985                           
   986                           ;Oscilador.c: 25:             break;
   987  0149  298A               	goto	l7
   988  014A                     l11:	
   989                           ;Oscilador.c: 26:         case 4:
   990                           
   991                           
   992                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   993  014A  1683               	bsf	3,5	;RP0=1, select bank1
   994  014B  1303               	bcf	3,6	;RP1=0, select bank1
   995  014C  170F               	bsf	15,6	;volatile
   996                           
   997                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   998  014D  128F               	bcf	15,5	;volatile
   999                           
  1000                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  1001  014E  120F               	bcf	15,4	;volatile
  1002                           
  1003                           ;Oscilador.c: 30:             break;
  1004  014F  298A               	goto	l7
  1005  0150                     l12:	
  1006                           ;Oscilador.c: 31:         case 5:
  1007                           
  1008                           
  1009                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1010  0150  1683               	bsf	3,5	;RP0=1, select bank1
  1011  0151  1303               	bcf	3,6	;RP1=0, select bank1
  1012  0152  170F               	bsf	15,6	;volatile
  1013                           
  1014                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1015  0153  128F               	bcf	15,5	;volatile
  1016                           
  1017                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1018  0154  160F               	bsf	15,4	;volatile
  1019                           
  1020                           ;Oscilador.c: 35:             break;
  1021  0155  298A               	goto	l7
  1022  0156                     l13:	
  1023                           ;Oscilador.c: 36:         case 6:
  1024                           
  1025                           
  1026                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1027  0156  1683               	bsf	3,5	;RP0=1, select bank1
  1028  0157  1303               	bcf	3,6	;RP1=0, select bank1
  1029  0158  170F               	bsf	15,6	;volatile
  1030                           
  1031                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1032  0159  168F               	bsf	15,5	;volatile
  1033                           
  1034                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1035  015A  120F               	bcf	15,4	;volatile
  1036                           
  1037                           ;Oscilador.c: 40:             break;
  1038  015B  298A               	goto	l7
  1039  015C                     l14:	
  1040                           ;Oscilador.c: 41:         case 7:
  1041                           
  1042                           
  1043                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1044  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1045  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1046  015E  170F               	bsf	15,6	;volatile
  1047                           
  1048                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1049  015F  168F               	bsf	15,5	;volatile
  1050                           
  1051                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1052  0160  160F               	bsf	15,4	;volatile
  1053                           
  1054                           ;Oscilador.c: 45:             break;
  1055  0161  298A               	goto	l7
  1056  0162                     l15:	
  1057                           ;Oscilador.c: 46:         default:
  1058                           
  1059                           
  1060                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1061  0162  1683               	bsf	3,5	;RP0=1, select bank1
  1062  0163  1303               	bcf	3,6	;RP1=0, select bank1
  1063  0164  170F               	bsf	15,6	;volatile
  1064                           
  1065                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1066  0165  168F               	bsf	15,5	;volatile
  1067                           
  1068                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1069  0166  120F               	bcf	15,4	;volatile
  1070                           
  1071                           ;Oscilador.c: 50:             break;
  1072  0167  298A               	goto	l7
  1073  0168                     l1059:
  1074  0168  0834               	movf	initOsc@IRCF,w
  1075  0169  00B2               	movwf	??_initOsc
  1076  016A  01B3               	clrf	??_initOsc+1
  1077                           
  1078                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1079                           ; Switch size 1, requested type "simple"
  1080                           ; Number of cases is 1, Range of values is 0 to 0
  1081                           ; switch strategies available:
  1082                           ; Name         Instructions Cycles
  1083                           ; simple_byte            4     3 (average)
  1084                           ; direct_byte           11     8 (fixed)
  1085                           ; jumptable            260     6 (fixed)
  1086                           ;	Chosen strategy is simple_byte
  1087  016B  0833               	movf	??_initOsc+1,w
  1088  016C  3A00               	xorlw	0	; case 0
  1089  016D  1903               	skipnz
  1090  016E  2970               	goto	l1317
  1091  016F  2962               	goto	l15
  1092  0170                     l1317:
  1093                           
  1094                           ; Switch size 1, requested type "simple"
  1095                           ; Number of cases is 8, Range of values is 0 to 7
  1096                           ; switch strategies available:
  1097                           ; Name         Instructions Cycles
  1098                           ; simple_byte           25    13 (average)
  1099                           ; direct_byte           32     8 (fixed)
  1100                           ; jumptable            260     6 (fixed)
  1101                           ;	Chosen strategy is simple_byte
  1102  0170  0832               	movf	??_initOsc,w
  1103  0171  3A00               	xorlw	0	; case 0
  1104  0172  1903               	skipnz
  1105  0173  2932               	goto	l6
  1106  0174  3A01               	xorlw	1	; case 1
  1107  0175  1903               	skipnz
  1108  0176  2938               	goto	l8
  1109  0177  3A03               	xorlw	3	; case 2
  1110  0178  1903               	skipnz
  1111  0179  293E               	goto	l9
  1112  017A  3A01               	xorlw	1	; case 3
  1113  017B  1903               	skipnz
  1114  017C  2944               	goto	l10
  1115  017D  3A07               	xorlw	7	; case 4
  1116  017E  1903               	skipnz
  1117  017F  294A               	goto	l11
  1118  0180  3A01               	xorlw	1	; case 5
  1119  0181  1903               	skipnz
  1120  0182  2950               	goto	l12
  1121  0183  3A03               	xorlw	3	; case 6
  1122  0184  1903               	skipnz
  1123  0185  2956               	goto	l13
  1124  0186  3A01               	xorlw	1	; case 7
  1125  0187  1903               	skipnz
  1126  0188  295C               	goto	l14
  1127  0189  2962               	goto	l15
  1128  018A                     l7:
  1129                           
  1130                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1131  018A  140F               	bsf	15,0	;volatile
  1132  018B                     l16:
  1133  018B  0008               	return
  1134  018C                     __end_of_initOsc:
  1135                           
  1136                           	psect	text3
  1137  025E                     __ptext3:	
  1138 ;; *************** function _TOGGLE_1 *****************
  1139 ;; Defined at:
  1140 ;;		line 116 in file "Prueba2_lab2.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2, status,0
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1154 ;;      Params:         0       0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0
  1157 ;;      Totals:         0       0       0       0       0
  1158 ;;Total ram usage:        0 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    3
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_main
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           
  1169                           ;psect for function _TOGGLE_1
  1170  025E                     _TOGGLE_1:
  1171  025E                     l1187:	
  1172                           ;incstack = 0
  1173                           ; Regs used in _TOGGLE_1: [wreg+status,2+status,0]
  1174                           
  1175                           
  1176                           ;Prueba2_lab2.c: 117:     if (toggle == 1) {
  1177  025E  0378               	decf	_toggle,w
  1178  025F  1D03               	btfss	3,2
  1179  0260  2A62               	goto	u231
  1180  0261  2A63               	goto	u230
  1181  0262                     u231:
  1182  0262  2A65               	goto	l1191
  1183  0263                     u230:
  1184  0263                     l1189:
  1185                           
  1186                           ;Prueba2_lab2.c: 118:         toggle = 0;
  1187  0263  01F8               	clrf	_toggle
  1188                           
  1189                           ;Prueba2_lab2.c: 119:     } else if (toggle == 0) {
  1190  0264  2A6C               	goto	l192
  1191  0265                     l1191:
  1192  0265  0878               	movf	_toggle,w
  1193  0266  1D03               	btfss	3,2
  1194  0267  2A69               	goto	u241
  1195  0268  2A6A               	goto	u240
  1196  0269                     u241:
  1197  0269  2A6C               	goto	l192
  1198  026A                     u240:
  1199  026A                     l1193:
  1200                           
  1201                           ;Prueba2_lab2.c: 120:         toggle = 1;
  1202  026A  01F8               	clrf	_toggle
  1203  026B  0AF8               	incf	_toggle,f
  1204  026C                     l192:
  1205  026C  0008               	return
  1206  026D                     __end_of_TOGGLE_1:
  1207                           
  1208                           	psect	text4
  1209  0294                     __ptext4:	
  1210 ;; *************** function _Revision *****************
  1211 ;; Defined at:
  1212 ;;		line 145 in file "Prueba2_lab2.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    3
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _Revision
  1242  0294                     _Revision:
  1243  0294                     l1201:	
  1244                           ;incstack = 0
  1245                           ; Regs used in _Revision: [wreg+status,2+status,0]
  1246                           
  1247  0294                     l1205:	
  1248                           ;Prueba2_lab2.c: 146:     if (val_1 > contador) {
  1249                           
  1250  0294  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0295  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0296  082A               	movf	_contador,w
  1253  0297  042B               	iorwf	_contador+1,w
  1254  0298  1903               	btfsc	3,2
  1255  0299  2A9B               	goto	u251
  1256  029A  2A9C               	goto	u250
  1257  029B                     u251:
  1258  029B  2A9D               	goto	l207
  1259  029C                     u250:
  1260  029C                     l1207:
  1261                           
  1262                           ;Prueba2_lab2.c: 151:             PORTEbits.RE0 = 0;
  1263  029C  1009               	bcf	9,0	;volatile
  1264  029D                     l207:
  1265  029D  0008               	return
  1266  029E                     __end_of_Revision:
  1267                           
  1268                           	psect	text5
  1269  0246                     __ptext5:	
  1270 ;; *************** function _Config_INTERRUPT *****************
  1271 ;; Defined at:
  1272 ;;		line 171 in file "Prueba2_lab2.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1286 ;;      Params:         0       0       0       0       0
  1287 ;;      Locals:         0       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0
  1289 ;;      Totals:         0       0       0       0       0
  1290 ;;Total ram usage:        0 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; Hardware stack levels required when called:    3
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _Config_INTERRUPT
  1302  0246                     _Config_INTERRUPT:
  1303  0246                     l1177:	
  1304                           ;incstack = 0
  1305                           ; Regs used in _Config_INTERRUPT: [wreg+status,2]
  1306                           
  1307                           
  1308                           ;Prueba2_lab2.c: 172:     TMR0 = 4;
  1309  0246  3004               	movlw	4
  1310  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1311  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1312  0249  0081               	movwf	1	;volatile
  1313                           
  1314                           ;Prueba2_lab2.c: 173:     OPTION_REG = 0b10000001;
  1315  024A  3081               	movlw	129
  1316  024B  1683               	bsf	3,5	;RP0=1, select bank1
  1317  024C  1303               	bcf	3,6	;RP1=0, select bank1
  1318  024D  0081               	movwf	1	;volatile
  1319                           
  1320                           ;Prueba2_lab2.c: 174:     INTCON = 0b10101001;
  1321  024E  30A9               	movlw	169
  1322  024F  008B               	movwf	11	;volatile
  1323                           
  1324                           ;Prueba2_lab2.c: 175:     IOCB = 0b00000011;
  1325  0250  3003               	movlw	3
  1326  0251  0096               	movwf	22	;volatile
  1327  0252                     l1179:
  1328                           
  1329                           ;Prueba2_lab2.c: 176:     PIE1bits.ADIE = 1;
  1330  0252  170C               	bsf	12,6	;volatile
  1331  0253                     l1181:
  1332                           
  1333                           ;Prueba2_lab2.c: 177:     PIR1bits.ADIF = 1;
  1334  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0255  170C               	bsf	12,6	;volatile
  1337  0256                     l1183:
  1338                           
  1339                           ;Prueba2_lab2.c: 178:     ADCON1 = 0b00000000;
  1340  0256  1683               	bsf	3,5	;RP0=1, select bank1
  1341  0257  1303               	bcf	3,6	;RP1=0, select bank1
  1342  0258  019F               	clrf	31	;volatile
  1343  0259                     l1185:
  1344                           
  1345                           ;Prueba2_lab2.c: 179:     ADCON0 = 0b01000001;
  1346  0259  3041               	movlw	65
  1347  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1348  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1349  025C  009F               	movwf	31	;volatile
  1350  025D                     l213:
  1351  025D  0008               	return
  1352  025E                     __end_of_Config_INTERRUPT:
  1353                           
  1354                           	psect	text6
  1355  018C                     __ptext6:	
  1356 ;; *************** function _CONVERSION_ADC *****************
  1357 ;; Defined at:
  1358 ;;		line 136 in file "Prueba2_lab2.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0, pclath, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1372 ;;      Params:         0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0
  1374 ;;      Temps:          0       2       0       0       0
  1375 ;;      Totals:         0       2       0       0       0
  1376 ;;Total ram usage:        2 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    4
  1379 ;; This function calls:
  1380 ;;		_NIBBLE1_ADC
  1381 ;;		_NIBBLE2_ADC
  1382 ;;		_SWAP_ADC
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           
  1389                           ;psect for function _CONVERSION_ADC
  1390  018C                     _CONVERSION_ADC:
  1391  018C                     l1195:	
  1392                           ;incstack = 0
  1393                           ; Regs used in _CONVERSION_ADC: [wreg+status,2+status,0+pclath+cstack]
  1394                           
  1395                           
  1396                           ;Prueba2_lab2.c: 137:     ADC_SWAP = SWAP_ADC(ADC_VALOR);
  1397  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1398  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1399  018E  0822               	movf	_ADC_VALOR,w
  1400  018F  120A  118A  2227  120A  118A  	fcall	_SWAP_ADC
  1401  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0196  00B7               	movwf	??_CONVERSION_ADC
  1404  0197  01B8               	clrf	??_CONVERSION_ADC+1
  1405  0198  0837               	movf	??_CONVERSION_ADC,w
  1406  0199  00A0               	movwf	_ADC_SWAP
  1407  019A  0838               	movf	??_CONVERSION_ADC+1,w
  1408  019B  00A1               	movwf	_ADC_SWAP+1
  1409  019C                     l1197:
  1410                           
  1411                           ;Prueba2_lab2.c: 138:     ADC_NIBBLE1 = NIBBLE1_ADC(ADC_VALOR);
  1412  019C  0822               	movf	_ADC_VALOR,w
  1413  019D  120A  118A  227A  120A  118A  	fcall	_NIBBLE1_ADC
  1414  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1415  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1416  01A4  00B7               	movwf	??_CONVERSION_ADC
  1417  01A5  01B8               	clrf	??_CONVERSION_ADC+1
  1418  01A6  0837               	movf	??_CONVERSION_ADC,w
  1419  01A7  00A6               	movwf	_ADC_NIBBLE1
  1420  01A8  0838               	movf	??_CONVERSION_ADC+1,w
  1421  01A9  00A7               	movwf	_ADC_NIBBLE1+1
  1422  01AA                     l1199:
  1423                           
  1424                           ;Prueba2_lab2.c: 139:     ADC_NIBBLE2 = NIBBLE2_ADC(ADC_SWAP);
  1425  01AA  0820               	movf	_ADC_SWAP,w
  1426  01AB  120A  118A  226D  120A  118A  	fcall	_NIBBLE2_ADC
  1427  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1428  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1429  01B2  00B7               	movwf	??_CONVERSION_ADC
  1430  01B3  01B8               	clrf	??_CONVERSION_ADC+1
  1431  01B4  0837               	movf	??_CONVERSION_ADC,w
  1432  01B5  00A4               	movwf	_ADC_NIBBLE2
  1433  01B6  0838               	movf	??_CONVERSION_ADC+1,w
  1434  01B7  00A5               	movwf	_ADC_NIBBLE2+1
  1435  01B8                     l201:
  1436  01B8  0008               	return
  1437  01B9                     __end_of_CONVERSION_ADC:
  1438                           
  1439                           	psect	text7
  1440  0227                     __ptext7:	
  1441 ;; *************** function _SWAP_ADC *****************
  1442 ;; Defined at:
  1443 ;;		line 14 in file "Config_ADC.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  VAL_ADC         1    wreg     unsigned char 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  VAL_ADC         1    4[BANK0 ] unsigned char 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      unsigned char 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1457 ;;      Params:         0       0       0       0       0
  1458 ;;      Locals:         0       1       0       0       0
  1459 ;;      Temps:          0       4       0       0       0
  1460 ;;      Totals:         0       5       0       0       0
  1461 ;;Total ram usage:        5 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    3
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_CONVERSION_ADC
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _SWAP_ADC
  1473  0227                     _SWAP_ADC:
  1474                           
  1475                           ;incstack = 0
  1476                           ; Regs used in _SWAP_ADC: [wreg+status,2+status,0]
  1477                           ;SWAP_ADC@VAL_ADC stored from wreg
  1478  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1479  0228  1303               	bcf	3,6	;RP1=0, select bank0
  1480  0229  00B6               	movwf	SWAP_ADC@VAL_ADC
  1481  022A                     l1115:
  1482                           
  1483                           ;Config_ADC.c: 15:     VAL_SWAP = (((VAL_ADC & 0x0F)<<4) | ((VAL_ADC & 0xF0)>>4));
  1484  022A  0836               	movf	SWAP_ADC@VAL_ADC,w
  1485  022B  00B2               	movwf	??_SWAP_ADC
  1486  022C  3004               	movlw	4
  1487  022D                     u195:
  1488  022D  1003               	clrc
  1489  022E  0CB2               	rrf	??_SWAP_ADC,f
  1490  022F  3EFF               	addlw	-1
  1491  0230  1D03               	skipz
  1492  0231  2A2D               	goto	u195
  1493  0232  300F               	movlw	15
  1494  0233  0532               	andwf	??_SWAP_ADC,w
  1495  0234  00B3               	movwf	??_SWAP_ADC+1
  1496  0235  0836               	movf	SWAP_ADC@VAL_ADC,w
  1497  0236  390F               	andlw	15
  1498  0237  00B4               	movwf	??_SWAP_ADC+2
  1499  0238  3003               	movlw	3
  1500  0239                     u205:
  1501  0239  1003               	clrc
  1502  023A  0DB4               	rlf	??_SWAP_ADC+2,f
  1503  023B  3EFF               	addlw	-1
  1504  023C  1D03               	skipz
  1505  023D  2A39               	goto	u205
  1506  023E  1003               	clrc
  1507  023F  0D34               	rlf	??_SWAP_ADC+2,w
  1508  0240  0433               	iorwf	??_SWAP_ADC+1,w
  1509  0241  00B5               	movwf	??_SWAP_ADC+3
  1510  0242  0835               	movf	??_SWAP_ADC+3,w
  1511  0243  00FC               	movwf	_VAL_SWAP
  1512  0244                     l1117:
  1513                           
  1514                           ;Config_ADC.c: 16:     return VAL_SWAP;
  1515  0244  087C               	movf	_VAL_SWAP,w
  1516  0245                     l58:
  1517  0245  0008               	return
  1518  0246                     __end_of_SWAP_ADC:
  1519                           
  1520                           	psect	text8
  1521  026D                     __ptext8:	
  1522 ;; *************** function _NIBBLE2_ADC *****************
  1523 ;; Defined at:
  1524 ;;		line 24 in file "Config_ADC.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  VAL_SWAP        1    wreg     unsigned char 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  VAL_SWAP        1    2[BANK0 ] unsigned char 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      unsigned char 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1538 ;;      Params:         0       0       0       0       0
  1539 ;;      Locals:         0       1       0       0       0
  1540 ;;      Temps:          0       2       0       0       0
  1541 ;;      Totals:         0       3       0       0       0
  1542 ;;Total ram usage:        3 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    3
  1545 ;; This function calls:
  1546 ;;		Nothing
  1547 ;; This function is called by:
  1548 ;;		_CONVERSION_ADC
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           
  1553                           ;psect for function _NIBBLE2_ADC
  1554  026D                     _NIBBLE2_ADC:
  1555                           
  1556                           ;incstack = 0
  1557                           ; Regs used in _NIBBLE2_ADC: [wreg+status,2]
  1558                           ;NIBBLE2_ADC@VAL_SWAP stored from wreg
  1559  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1560  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1561  026F  00B4               	movwf	NIBBLE2_ADC@VAL_SWAP
  1562  0270                     l1127:
  1563                           
  1564                           ;Config_ADC.c: 25:     VAL_NIBBLE2 = (VAL_SWAP & 15);
  1565  0270  0834               	movf	NIBBLE2_ADC@VAL_SWAP,w
  1566  0271  390F               	andlw	15
  1567  0272  00B2               	movwf	??_NIBBLE2_ADC
  1568  0273  01B3               	clrf	??_NIBBLE2_ADC+1
  1569  0274  0832               	movf	??_NIBBLE2_ADC,w
  1570  0275  00AC               	movwf	_VAL_NIBBLE2
  1571  0276  0833               	movf	??_NIBBLE2_ADC+1,w
  1572  0277  00AD               	movwf	_VAL_NIBBLE2+1
  1573  0278                     l1129:
  1574                           
  1575                           ;Config_ADC.c: 26:     return VAL_NIBBLE2;
  1576  0278  082C               	movf	_VAL_NIBBLE2,w
  1577  0279                     l64:
  1578  0279  0008               	return
  1579  027A                     __end_of_NIBBLE2_ADC:
  1580                           
  1581                           	psect	text9
  1582  027A                     __ptext9:	
  1583 ;; *************** function _NIBBLE1_ADC *****************
  1584 ;; Defined at:
  1585 ;;		line 19 in file "Config_ADC.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  VAL_ADC         1    wreg     unsigned char 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  VAL_ADC         1    2[BANK0 ] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      unsigned char 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         0       0       0       0       0
  1600 ;;      Locals:         0       1       0       0       0
  1601 ;;      Temps:          0       2       0       0       0
  1602 ;;      Totals:         0       3       0       0       0
  1603 ;;Total ram usage:        3 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:    3
  1606 ;; This function calls:
  1607 ;;		Nothing
  1608 ;; This function is called by:
  1609 ;;		_CONVERSION_ADC
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           
  1614                           ;psect for function _NIBBLE1_ADC
  1615  027A                     _NIBBLE1_ADC:
  1616                           
  1617                           ;incstack = 0
  1618                           ; Regs used in _NIBBLE1_ADC: [wreg+status,2]
  1619                           ;NIBBLE1_ADC@VAL_ADC stored from wreg
  1620  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1621  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1622  027C  00B4               	movwf	NIBBLE1_ADC@VAL_ADC
  1623  027D                     l1121:
  1624                           
  1625                           ;Config_ADC.c: 20:     VAL_NIBBLE1 = (VAL_ADC & 15);
  1626  027D  0834               	movf	NIBBLE1_ADC@VAL_ADC,w
  1627  027E  390F               	andlw	15
  1628  027F  00B2               	movwf	??_NIBBLE1_ADC
  1629  0280  01B3               	clrf	??_NIBBLE1_ADC+1
  1630  0281  0832               	movf	??_NIBBLE1_ADC,w
  1631  0282  00AE               	movwf	_VAL_NIBBLE1
  1632  0283  0833               	movf	??_NIBBLE1_ADC+1,w
  1633  0284  00AF               	movwf	_VAL_NIBBLE1+1
  1634  0285                     l1123:
  1635                           
  1636                           ;Config_ADC.c: 21:     return VAL_NIBBLE1;
  1637  0285  082E               	movf	_VAL_NIBBLE1,w
  1638  0286                     l61:
  1639  0286  0008               	return
  1640  0287                     __end_of_NIBBLE1_ADC:
  1641                           
  1642                           	psect	text10
  1643  00B2                     __ptext10:	
  1644 ;; *************** function _ISR *****************
  1645 ;; Defined at:
  1646 ;;		line 54 in file "Prueba2_lab2.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;		None
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;		None
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1660 ;;      Params:         0       0       0       0       0
  1661 ;;      Locals:         0       0       0       0       0
  1662 ;;      Temps:          5       0       0       0       0
  1663 ;;      Totals:         5       0       0       0       0
  1664 ;;Total ram usage:        5 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; Hardware stack levels required when called:    2
  1667 ;; This function calls:
  1668 ;;		_ADC
  1669 ;;		_DisplayADC
  1670 ;; This function is called by:
  1671 ;;		Interrupt level 1
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           
  1676                           ;psect for function _ISR
  1677  00B2                     _ISR:
  1678  00B2                     i1l1209:
  1679                           
  1680                           ;Prueba2_lab2.c: 56:     if (INTCONbits.RBIF == 1){
  1681  00B2  1C0B               	btfss	11,0	;volatile
  1682  00B3  28B5               	goto	u26_21
  1683  00B4  28B6               	goto	u26_20
  1684  00B5                     u26_21:
  1685  00B5  28E9               	goto	i1l1233
  1686  00B6                     u26_20:
  1687  00B6                     i1l1211:
  1688                           
  1689                           ;Prueba2_lab2.c: 58:             if (PORTBbits.RB0 == 1){
  1690  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1691  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1692  00B8  1C06               	btfss	6,0	;volatile
  1693  00B9  28BB               	goto	u27_21
  1694  00BA  28BC               	goto	u27_20
  1695  00BB                     u27_21:
  1696  00BB  28BE               	goto	i1l168
  1697  00BC                     u27_20:
  1698  00BC                     i1l1213:
  1699                           
  1700                           ;Prueba2_lab2.c: 59:                 debouncing1 = 1;
  1701  00BC  01FB               	clrf	_debouncing1
  1702  00BD  0AFB               	incf	_debouncing1,f
  1703  00BE                     i1l168:	
  1704                           ;Prueba2_lab2.c: 61:             }
  1705                           
  1706                           
  1707                           ;Prueba2_lab2.c: 62:             if (PORTBbits.RB1 == 1){
  1708  00BE  1C86               	btfss	6,1	;volatile
  1709  00BF  28C1               	goto	u28_21
  1710  00C0  28C2               	goto	u28_20
  1711  00C1                     u28_21:
  1712  00C1  28C4               	goto	i1l169
  1713  00C2                     u28_20:
  1714  00C2                     i1l1215:
  1715                           
  1716                           ;Prueba2_lab2.c: 63:                 debouncing2 = 1;
  1717  00C2  01FA               	clrf	_debouncing2
  1718  00C3  0AFA               	incf	_debouncing2,f
  1719  00C4                     i1l169:	
  1720                           ;Prueba2_lab2.c: 65:             }
  1721                           
  1722                           
  1723                           ;Prueba2_lab2.c: 66:             if(PORTBbits.RB0 == 0 && debouncing1 == 1){
  1724  00C4  1806               	btfsc	6,0	;volatile
  1725  00C5  28C7               	goto	u29_21
  1726  00C6  28C8               	goto	u29_20
  1727  00C7                     u29_21:
  1728  00C7  28D6               	goto	i1l1223
  1729  00C8                     u29_20:
  1730  00C8                     i1l1217:
  1731  00C8  037B               	decf	_debouncing1,w
  1732  00C9  1D03               	btfss	3,2
  1733  00CA  28CC               	goto	u30_21
  1734  00CB  28CD               	goto	u30_20
  1735  00CC                     u30_21:
  1736  00CC  28D6               	goto	i1l1223
  1737  00CD                     u30_20:
  1738  00CD                     i1l1219:
  1739                           
  1740                           ;Prueba2_lab2.c: 67:                 contador++;
  1741  00CD  3001               	movlw	1
  1742  00CE  07AA               	addwf	_contador,f
  1743  00CF  1803               	skipnc
  1744  00D0  0AAB               	incf	_contador+1,f
  1745  00D1  3000               	movlw	0
  1746  00D2  07AB               	addwf	_contador+1,f
  1747                           
  1748                           ;Prueba2_lab2.c: 68:                 PORTC = contador;
  1749  00D3  082A               	movf	_contador,w
  1750  00D4  0087               	movwf	7	;volatile
  1751  00D5                     i1l1221:
  1752                           
  1753                           ;Prueba2_lab2.c: 69:                 debouncing1 = 0;
  1754  00D5  01FB               	clrf	_debouncing1
  1755  00D6                     i1l1223:
  1756                           
  1757                           ;Prueba2_lab2.c: 71:             if(PORTBbits.RB1 == 0 && debouncing2 == 1){
  1758  00D6  1886               	btfsc	6,1	;volatile
  1759  00D7  28D9               	goto	u31_21
  1760  00D8  28DA               	goto	u31_20
  1761  00D9                     u31_21:
  1762  00D9  28E8               	goto	i1l1231
  1763  00DA                     u31_20:
  1764  00DA                     i1l1225:
  1765  00DA  037A               	decf	_debouncing2,w
  1766  00DB  1D03               	btfss	3,2
  1767  00DC  28DE               	goto	u32_21
  1768  00DD  28DF               	goto	u32_20
  1769  00DE                     u32_21:
  1770  00DE  28E8               	goto	i1l1231
  1771  00DF                     u32_20:
  1772  00DF                     i1l1227:
  1773                           
  1774                           ;Prueba2_lab2.c: 72:                 contador--;
  1775  00DF  3001               	movlw	1
  1776  00E0  02AA               	subwf	_contador,f
  1777  00E1  3000               	movlw	0
  1778  00E2  1C03               	skipc
  1779  00E3  03AB               	decf	_contador+1,f
  1780  00E4  02AB               	subwf	_contador+1,f
  1781                           
  1782                           ;Prueba2_lab2.c: 73:                 PORTC = contador;
  1783  00E5  082A               	movf	_contador,w
  1784  00E6  0087               	movwf	7	;volatile
  1785  00E7                     i1l1229:
  1786                           
  1787                           ;Prueba2_lab2.c: 74:                 debouncing2 = 0;
  1788  00E7  01FA               	clrf	_debouncing2
  1789  00E8                     i1l1231:
  1790                           
  1791                           ;Prueba2_lab2.c: 76:             INTCONbits.RBIF = 0;
  1792  00E8  100B               	bcf	11,0	;volatile
  1793  00E9                     i1l1233:
  1794                           
  1795                           ;Prueba2_lab2.c: 79:     if (PIR1bits.ADIF) {
  1796  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1797  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1798  00EB  1F0C               	btfss	12,6	;volatile
  1799  00EC  28EE               	goto	u33_21
  1800  00ED  28EF               	goto	u33_20
  1801  00EE                     u33_21:
  1802  00EE  291A               	goto	i1l172
  1803  00EF                     u33_20:
  1804  00EF                     i1l1235:
  1805                           
  1806                           ;Prueba2_lab2.c: 80:         PIR1bits.ADIF = 0;
  1807  00EF  130C               	bcf	12,6	;volatile
  1808  00F0                     i1l1237:
  1809                           
  1810                           ;Prueba2_lab2.c: 81:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1811  00F0  3003               	movlw	3
  1812  00F1  00F4               	movwf	??_ISR+1
  1813  00F2  3097               	movlw	151
  1814  00F3  00F3               	movwf	??_ISR
  1815  00F4                     u37_27:
  1816  00F4  0BF3               	decfsz	??_ISR,f
  1817  00F5  28F4               	goto	u37_27
  1818  00F6  0BF4               	decfsz	??_ISR+1,f
  1819  00F7  28F4               	goto	u37_27
  1820  00F8  28F9               	nop2
  1821  00F9                     i1l1239:
  1822                           
  1823                           ;Prueba2_lab2.c: 82:         ADCON0bits.GO = 1;
  1824  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1825  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1826  00FB  149F               	bsf	31,1	;volatile
  1827                           
  1828                           ;Prueba2_lab2.c: 83:         while (ADCON0bits.GO != 0) {
  1829  00FC  2914               	goto	i1l1245
  1830  00FD                     i1l1241:
  1831                           
  1832                           ;Prueba2_lab2.c: 84:             ADC_VALOR = ADC(ADRESL, ADRESH);
  1833  00FD  081E               	movf	30,w	;volatile
  1834  00FE  00F3               	movwf	??_ISR
  1835  00FF  0873               	movf	??_ISR,w
  1836  0100  00F0               	movwf	ADC@ADRESH_
  1837  0101  1683               	bsf	3,5	;RP0=1, select bank1
  1838  0102  1303               	bcf	3,6	;RP1=0, select bank1
  1839  0103  081E               	movf	30,w	;volatile
  1840  0104  120A  118A  2287  120A  118A  	fcall	_ADC
  1841  0109  0871               	movf	?_ADC+1,w
  1842  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1843  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1844  010C  00A3               	movwf	_ADC_VALOR+1
  1845  010D  0870               	movf	?_ADC,w
  1846  010E  00A2               	movwf	_ADC_VALOR
  1847  010F                     i1l1243:
  1848                           
  1849                           ;Prueba2_lab2.c: 87:             DisplayADC();
  1850  010F  120A  118A  2204  120A  118A  	fcall	_DisplayADC
  1851  0114                     i1l1245:
  1852                           
  1853                           ;Prueba2_lab2.c: 83:         while (ADCON0bits.GO != 0) {
  1854  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1855  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1856  0116  189F               	btfsc	31,1	;volatile
  1857  0117  2919               	goto	u34_21
  1858  0118  291A               	goto	u34_20
  1859  0119                     u34_21:
  1860  0119  28FD               	goto	i1l1241
  1861  011A                     u34_20:
  1862  011A                     i1l172:	
  1863                           ;Prueba2_lab2.c: 89:     }
  1864                           
  1865                           
  1866                           ;Prueba2_lab2.c: 91:     if (INTCONbits.TMR0IF == 1) {
  1867  011A  1D0B               	btfss	11,2	;volatile
  1868  011B  291D               	goto	u35_21
  1869  011C  291E               	goto	u35_20
  1870  011D                     u35_21:
  1871  011D  2925               	goto	i1l177
  1872  011E                     u35_20:
  1873  011E                     i1l1247:
  1874                           
  1875                           ;Prueba2_lab2.c: 92:         INTCONbits.TMR0IF = 0;
  1876  011E  110B               	bcf	11,2	;volatile
  1877  011F                     i1l1249:
  1878                           
  1879                           ;Prueba2_lab2.c: 93:         TMR0 = 4;
  1880  011F  3004               	movlw	4
  1881  0120  0081               	movwf	1	;volatile
  1882  0121                     i1l1251:
  1883                           
  1884                           ;Prueba2_lab2.c: 94:         cont_timer++;
  1885  0121  3001               	movlw	1
  1886  0122  00F3               	movwf	??_ISR
  1887  0123  0873               	movf	??_ISR,w
  1888  0124  07F9               	addwf	_cont_timer,f
  1889  0125                     i1l177:
  1890  0125  0877               	movf	??_ISR+4,w
  1891  0126  008A               	movwf	10
  1892  0127  0876               	movf	??_ISR+3,w
  1893  0128  0084               	movwf	4
  1894  0129  0E75               	swapf	??_ISR+2,w
  1895  012A  0083               	movwf	3
  1896  012B  0EFE               	swapf	btemp,f
  1897  012C  0E7E               	swapf	btemp,w
  1898  012D  0009               	retfie
  1899  012E                     __end_of_ISR:
  1900                           
  1901                           	psect	intentry
  1902  0004                     __pintentry:	
  1903                           ;incstack = 0
  1904                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1905                           
  1906  0004                     interrupt_function:
  1907  007E                     saved_w	set	btemp
  1908  0004  00FE               	movwf	btemp
  1909  0005  0E03               	swapf	3,w
  1910  0006  00F5               	movwf	??_ISR+2
  1911  0007  0804               	movf	4,w
  1912  0008  00F6               	movwf	??_ISR+3
  1913  0009  080A               	movf	10,w
  1914  000A  00F7               	movwf	??_ISR+4
  1915  000B  120A  118A  28B2   	ljmp	_ISR
  1916                           
  1917                           	psect	text11
  1918  0204                     __ptext11:	
  1919 ;; *************** function _DisplayADC *****************
  1920 ;; Defined at:
  1921 ;;		line 125 in file "Prueba2_lab2.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1935 ;;      Params:         0       0       0       0       0
  1936 ;;      Locals:         0       0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0
  1938 ;;      Totals:         0       0       0       0       0
  1939 ;;Total ram usage:        0 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    1
  1942 ;; This function calls:
  1943 ;;		_display
  1944 ;; This function is called by:
  1945 ;;		_ISR
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           
  1950                           ;psect for function _DisplayADC
  1951  0204                     _DisplayADC:
  1952  0204                     i1l1137:	
  1953                           ;incstack = 0
  1954                           ; Regs used in _DisplayADC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1955                           
  1956                           
  1957                           ;Prueba2_lab2.c: 126:     PORTE = 0;
  1958  0204  1283               	bcf	3,5	;RP0=0, select bank0
  1959  0205  1303               	bcf	3,6	;RP1=0, select bank0
  1960  0206  0189               	clrf	9	;volatile
  1961  0207                     i1l1139:
  1962                           
  1963                           ;Prueba2_lab2.c: 127:     if (toggle == 0) {
  1964  0207  0878               	movf	_toggle,w
  1965  0208  1D03               	btfss	3,2
  1966  0209  2A0B               	goto	u21_21
  1967  020A  2A0C               	goto	u21_20
  1968  020B                     u21_21:
  1969  020B  2A17               	goto	i1l1145
  1970  020C                     u21_20:
  1971  020C                     i1l1141:
  1972                           
  1973                           ;Prueba2_lab2.c: 128:         PORTD = display(ADC_NIBBLE2);
  1974  020C  0824               	movf	_ADC_NIBBLE2,w
  1975  020D  120A  118A  2024  120A  118A  	fcall	_display
  1976  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0214  0088               	movwf	8	;volatile
  1979  0215                     i1l1143:
  1980                           
  1981                           ;Prueba2_lab2.c: 129:         PORTEbits.RE1 = 1;
  1982  0215  1489               	bsf	9,1	;volatile
  1983                           
  1984                           ;Prueba2_lab2.c: 130:     } else if (toggle == 1) {
  1985  0216  2A26               	goto	i1l198
  1986  0217                     i1l1145:
  1987  0217  0378               	decf	_toggle,w
  1988  0218  1D03               	btfss	3,2
  1989  0219  2A1B               	goto	u22_21
  1990  021A  2A1C               	goto	u22_20
  1991  021B                     u22_21:
  1992  021B  2A26               	goto	i1l198
  1993  021C                     u22_20:
  1994  021C                     i1l1147:
  1995                           
  1996                           ;Prueba2_lab2.c: 131:         PORTD = display(ADC_NIBBLE1);
  1997  021C  0826               	movf	_ADC_NIBBLE1,w
  1998  021D  120A  118A  2024  120A  118A  	fcall	_display
  1999  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2000  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2001  0224  0088               	movwf	8	;volatile
  2002  0225                     i1l1149:
  2003                           
  2004                           ;Prueba2_lab2.c: 132:         PORTEbits.RE2 = 1;
  2005  0225  1509               	bsf	9,2	;volatile
  2006  0226                     i1l198:
  2007  0226  0008               	return
  2008  0227                     __end_of_DisplayADC:
  2009                           
  2010                           	psect	text12
  2011  0024                     __ptext12:	
  2012 ;; *************** function _display *****************
  2013 ;; Defined at:
  2014 ;;		line 5 in file "Display.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  ADC_VALOR       1    wreg     unsigned char 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  ADC_VALOR       1    2[COMMON] unsigned char 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      unsigned char 
  2021 ;; Registers used:
  2022 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2028 ;;      Params:         0       0       0       0       0
  2029 ;;      Locals:         1       0       0       0       0
  2030 ;;      Temps:          2       0       0       0       0
  2031 ;;      Totals:         3       0       0       0       0
  2032 ;;Total ram usage:        3 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; This function calls:
  2035 ;;		Nothing
  2036 ;; This function is called by:
  2037 ;;		_DisplayADC
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           
  2042                           ;psect for function _display
  2043  0024                     _display:
  2044                           
  2045                           ;incstack = 0
  2046                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
  2047                           ;display@ADC_VALOR stored from wreg
  2048  0024  00F2               	movwf	display@ADC_VALOR
  2049  0025                     i1l1067:
  2050                           
  2051                           ;Display.c: 7:     switch(ADC_VALOR){
  2052  0025  2876               	goto	i1l1105
  2053  0026                     i1l1069:
  2054                           
  2055                           ;Display.c: 9:             Valor_hex = 0b00111111;
  2056  0026  303F               	movlw	63
  2057  0027  00F0               	movwf	??_display
  2058  0028  0870               	movf	??_display,w
  2059  0029  00FD               	movwf	_Valor_hex
  2060                           
  2061                           ;Display.c: 10:             break;
  2062  002A  28B0               	goto	i1l1107
  2063  002B                     i1l1071:
  2064                           
  2065                           ;Display.c: 12:             Valor_hex = 0b000000110;
  2066  002B  3006               	movlw	6
  2067  002C  00F0               	movwf	??_display
  2068  002D  0870               	movf	??_display,w
  2069  002E  00FD               	movwf	_Valor_hex
  2070                           
  2071                           ;Display.c: 13:             break;
  2072  002F  28B0               	goto	i1l1107
  2073  0030                     i1l1073:
  2074                           
  2075                           ;Display.c: 15:             Valor_hex = 0b11011011;
  2076  0030  30DB               	movlw	219
  2077  0031  00F0               	movwf	??_display
  2078  0032  0870               	movf	??_display,w
  2079  0033  00FD               	movwf	_Valor_hex
  2080                           
  2081                           ;Display.c: 16:             break;
  2082  0034  28B0               	goto	i1l1107
  2083  0035                     i1l1075:
  2084                           
  2085                           ;Display.c: 18:             Valor_hex = 0b01001111;
  2086  0035  304F               	movlw	79
  2087  0036  00F0               	movwf	??_display
  2088  0037  0870               	movf	??_display,w
  2089  0038  00FD               	movwf	_Valor_hex
  2090                           
  2091                           ;Display.c: 19:             break;
  2092  0039  28B0               	goto	i1l1107
  2093  003A                     i1l1077:
  2094                           
  2095                           ;Display.c: 21:             Valor_hex = 0b01100110;
  2096  003A  3066               	movlw	102
  2097  003B  00F0               	movwf	??_display
  2098  003C  0870               	movf	??_display,w
  2099  003D  00FD               	movwf	_Valor_hex
  2100                           
  2101                           ;Display.c: 22:             break;
  2102  003E  28B0               	goto	i1l1107
  2103  003F                     i1l1079:
  2104                           
  2105                           ;Display.c: 24:             Valor_hex = 0b01101101;
  2106  003F  306D               	movlw	109
  2107  0040  00F0               	movwf	??_display
  2108  0041  0870               	movf	??_display,w
  2109  0042  00FD               	movwf	_Valor_hex
  2110                           
  2111                           ;Display.c: 25:             break;
  2112  0043  28B0               	goto	i1l1107
  2113  0044                     i1l1081:
  2114                           
  2115                           ;Display.c: 27:             Valor_hex = 0b01111101;
  2116  0044  307D               	movlw	125
  2117  0045  00F0               	movwf	??_display
  2118  0046  0870               	movf	??_display,w
  2119  0047  00FD               	movwf	_Valor_hex
  2120                           
  2121                           ;Display.c: 28:             break;
  2122  0048  28B0               	goto	i1l1107
  2123  0049                     i1l1083:
  2124                           
  2125                           ;Display.c: 30:             Valor_hex = 0b00000111;
  2126  0049  3007               	movlw	7
  2127  004A  00F0               	movwf	??_display
  2128  004B  0870               	movf	??_display,w
  2129  004C  00FD               	movwf	_Valor_hex
  2130                           
  2131                           ;Display.c: 31:             break;
  2132  004D  28B0               	goto	i1l1107
  2133  004E                     i1l1085:
  2134                           
  2135                           ;Display.c: 33:             Valor_hex = 0b01111111;
  2136  004E  307F               	movlw	127
  2137  004F  00F0               	movwf	??_display
  2138  0050  0870               	movf	??_display,w
  2139  0051  00FD               	movwf	_Valor_hex
  2140                           
  2141                           ;Display.c: 34:             break;
  2142  0052  28B0               	goto	i1l1107
  2143  0053                     i1l1087:
  2144                           
  2145                           ;Display.c: 36:             Valor_hex = 0b01101111;
  2146  0053  306F               	movlw	111
  2147  0054  00F0               	movwf	??_display
  2148  0055  0870               	movf	??_display,w
  2149  0056  00FD               	movwf	_Valor_hex
  2150                           
  2151                           ;Display.c: 37:             break;
  2152  0057  28B0               	goto	i1l1107
  2153  0058                     i1l1089:
  2154                           
  2155                           ;Display.c: 39:             Valor_hex = 0b01110111;
  2156  0058  3077               	movlw	119
  2157  0059  00F0               	movwf	??_display
  2158  005A  0870               	movf	??_display,w
  2159  005B  00FD               	movwf	_Valor_hex
  2160                           
  2161                           ;Display.c: 40:             break;
  2162  005C  28B0               	goto	i1l1107
  2163  005D                     i1l1091:
  2164                           
  2165                           ;Display.c: 42:             Valor_hex = 0b01111100;
  2166  005D  307C               	movlw	124
  2167  005E  00F0               	movwf	??_display
  2168  005F  0870               	movf	??_display,w
  2169  0060  00FD               	movwf	_Valor_hex
  2170                           
  2171                           ;Display.c: 43:             break;
  2172  0061  28B0               	goto	i1l1107
  2173  0062                     i1l1093:
  2174                           
  2175                           ;Display.c: 45:             Valor_hex = 0b00111001;
  2176  0062  3039               	movlw	57
  2177  0063  00F0               	movwf	??_display
  2178  0064  0870               	movf	??_display,w
  2179  0065  00FD               	movwf	_Valor_hex
  2180                           
  2181                           ;Display.c: 46:             break;
  2182  0066  28B0               	goto	i1l1107
  2183  0067                     i1l1095:
  2184                           
  2185                           ;Display.c: 48:             Valor_hex = 0b01011110;
  2186  0067  305E               	movlw	94
  2187  0068  00F0               	movwf	??_display
  2188  0069  0870               	movf	??_display,w
  2189  006A  00FD               	movwf	_Valor_hex
  2190                           
  2191                           ;Display.c: 49:             break;
  2192  006B  28B0               	goto	i1l1107
  2193  006C                     i1l1097:
  2194                           
  2195                           ;Display.c: 51:             Valor_hex = 0b01111001;
  2196  006C  3079               	movlw	121
  2197  006D  00F0               	movwf	??_display
  2198  006E  0870               	movf	??_display,w
  2199  006F  00FD               	movwf	_Valor_hex
  2200                           
  2201                           ;Display.c: 52:             break;
  2202  0070  28B0               	goto	i1l1107
  2203  0071                     i1l1099:
  2204                           
  2205                           ;Display.c: 54:             Valor_hex = 0b01110001;
  2206  0071  3071               	movlw	113
  2207  0072  00F0               	movwf	??_display
  2208  0073  0870               	movf	??_display,w
  2209  0074  00FD               	movwf	_Valor_hex
  2210                           
  2211                           ;Display.c: 55:             break;
  2212  0075  28B0               	goto	i1l1107
  2213  0076                     i1l1105:
  2214  0076  0872               	movf	display@ADC_VALOR,w
  2215  0077  00F0               	movwf	??_display
  2216  0078  01F1               	clrf	??_display+1
  2217                           
  2218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2219                           ; Switch size 1, requested type "simple"
  2220                           ; Number of cases is 1, Range of values is 0 to 0
  2221                           ; switch strategies available:
  2222                           ; Name         Instructions Cycles
  2223                           ; simple_byte            4     3 (average)
  2224                           ; direct_byte           11     8 (fixed)
  2225                           ; jumptable            260     6 (fixed)
  2226                           ;	Chosen strategy is simple_byte
  2227  0079  0871               	movf	??_display+1,w
  2228  007A  3A00               	xorlw	0	; case 0
  2229  007B  1903               	skipnz
  2230  007C  287E               	goto	i1l1319
  2231  007D  2826               	goto	i1l1069
  2232  007E                     i1l1319:
  2233                           
  2234                           ; Switch size 1, requested type "simple"
  2235                           ; Number of cases is 16, Range of values is 0 to 15
  2236                           ; switch strategies available:
  2237                           ; Name         Instructions Cycles
  2238                           ; simple_byte           49    25 (average)
  2239                           ; direct_byte           56     8 (fixed)
  2240                           ; jumptable            260     6 (fixed)
  2241                           ;	Chosen strategy is simple_byte
  2242  007E  0870               	movf	??_display,w
  2243  007F  3A00               	xorlw	0	; case 0
  2244  0080  1903               	skipnz
  2245  0081  2826               	goto	i1l1069
  2246  0082  3A01               	xorlw	1	; case 1
  2247  0083  1903               	skipnz
  2248  0084  282B               	goto	i1l1071
  2249  0085  3A03               	xorlw	3	; case 2
  2250  0086  1903               	skipnz
  2251  0087  2830               	goto	i1l1073
  2252  0088  3A01               	xorlw	1	; case 3
  2253  0089  1903               	skipnz
  2254  008A  2835               	goto	i1l1075
  2255  008B  3A07               	xorlw	7	; case 4
  2256  008C  1903               	skipnz
  2257  008D  283A               	goto	i1l1077
  2258  008E  3A01               	xorlw	1	; case 5
  2259  008F  1903               	skipnz
  2260  0090  283F               	goto	i1l1079
  2261  0091  3A03               	xorlw	3	; case 6
  2262  0092  1903               	skipnz
  2263  0093  2844               	goto	i1l1081
  2264  0094  3A01               	xorlw	1	; case 7
  2265  0095  1903               	skipnz
  2266  0096  2849               	goto	i1l1083
  2267  0097  3A0F               	xorlw	15	; case 8
  2268  0098  1903               	skipnz
  2269  0099  284E               	goto	i1l1085
  2270  009A  3A01               	xorlw	1	; case 9
  2271  009B  1903               	skipnz
  2272  009C  2853               	goto	i1l1087
  2273  009D  3A03               	xorlw	3	; case 10
  2274  009E  1903               	skipnz
  2275  009F  2858               	goto	i1l1089
  2276  00A0  3A01               	xorlw	1	; case 11
  2277  00A1  1903               	skipnz
  2278  00A2  285D               	goto	i1l1091
  2279  00A3  3A07               	xorlw	7	; case 12
  2280  00A4  1903               	skipnz
  2281  00A5  2862               	goto	i1l1093
  2282  00A6  3A01               	xorlw	1	; case 13
  2283  00A7  1903               	skipnz
  2284  00A8  2867               	goto	i1l1095
  2285  00A9  3A03               	xorlw	3	; case 14
  2286  00AA  1903               	skipnz
  2287  00AB  286C               	goto	i1l1097
  2288  00AC  3A01               	xorlw	1	; case 15
  2289  00AD  1903               	skipnz
  2290  00AE  2871               	goto	i1l1099
  2291  00AF  2826               	goto	i1l1069
  2292  00B0                     i1l1107:
  2293                           
  2294                           ;Display.c: 60:    return Valor_hex;
  2295  00B0  087D               	movf	_Valor_hex,w
  2296  00B1                     i1l40:
  2297  00B1  0008               	return
  2298  00B2                     __end_of_display:
  2299                           
  2300                           	psect	text13
  2301  0287                     __ptext13:	
  2302 ;; *************** function _ADC *****************
  2303 ;; Defined at:
  2304 ;;		line 9 in file "Config_ADC.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  ADRESL_         1    wreg     unsigned char 
  2307 ;;  ADRESH_         1    0[COMMON] unsigned char 
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  ADRESL_         1    0[COMMON] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  2    0[COMMON] int 
  2312 ;; Registers used:
  2313 ;;		wreg
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2319 ;;      Params:         3       0       0       0       0
  2320 ;;      Locals:         0       0       0       0       0
  2321 ;;      Temps:          0       0       0       0       0
  2322 ;;      Totals:         3       0       0       0       0
  2323 ;;Total ram usage:        3 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; This function calls:
  2326 ;;		Nothing
  2327 ;; This function is called by:
  2328 ;;		_ISR
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           
  2333                           ;psect for function _ADC
  2334  0287                     _ADC:
  2335  0287                     i1l1133:	
  2336                           ;incstack = 0
  2337                           ; Regs used in _ADC: [wreg]
  2338                           
  2339                           
  2340                           ;Config_ADC.c: 10:     VAL = (ADRESL << 8) | ADRESH;
  2341  0287  1683               	bsf	3,5	;RP0=1, select bank1
  2342  0288  1303               	bcf	3,6	;RP1=0, select bank1
  2343  0289  081E               	movf	30,w	;volatile
  2344  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2345  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2346  028C  00B1               	movwf	_VAL+1
  2347  028D  081E               	movf	30,w	;volatile
  2348  028E  00B0               	movwf	_VAL
  2349                           
  2350                           ;Config_ADC.c: 11:     return VAL;
  2351  028F  0831               	movf	_VAL+1,w
  2352  0290  00F1               	movwf	?_ADC+1
  2353  0291  0830               	movf	_VAL,w
  2354  0292  00F0               	movwf	?_ADC
  2355  0293                     i1l55:
  2356  0293  0008               	return
  2357  0294                     __end_of_ADC:
  2358  007E                     btemp	set	126	;btemp
  2359  007E                     wtemp0	set	126
  2360                           
  2361                           	psect	config
  2362                           
  2363                           ;Config register CONFIG1 @ 0x2007
  2364                           ;	Oscillator Selection bits
  2365                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2366                           ;	Watchdog Timer Enable bit
  2367                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2368                           ;	Power-up Timer Enable bit
  2369                           ;	PWRTE = OFF, PWRT disabled
  2370                           ;	RE3/MCLR pin function select bit
  2371                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2372                           ;	Code Protection bit
  2373                           ;	CP = OFF, Program memory code protection is disabled
  2374                           ;	Data Code Protection bit
  2375                           ;	CPD = OFF, Data memory code protection is disabled
  2376                           ;	Brown Out Reset Selection bits
  2377                           ;	BOREN = OFF, BOR disabled
  2378                           ;	Internal External Switchover bit
  2379                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2380                           ;	Fail-Safe Clock Monitor Enabled bit
  2381                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2382                           ;	Low Voltage Programming Enable bit
  2383                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2384                           ;	In-Circuit Debugger Mode bit
  2385                           ;	DEBUG = 0x1, unprogrammed default
  2386  2007                     	org	8199
  2387  2007  20D4               	dw	8404
  2388                           
  2389                           ;Config register CONFIG2 @ 0x2008
  2390                           ;	Brown-out Reset Selection bit
  2391                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2392                           ;	Flash Program Memory Self Write Enable bits
  2393                           ;	WRT = OFF, Write protection off
  2394  2008                     	org	8200
  2395  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      7      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_ADC
    _DisplayADC->_display

Critical Paths under _main in BANK0

    _main->_CONVERSION_ADC
    _setup->_initOsc
    _CONVERSION_ADC->_SWAP_ADC

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     110
                     _CONVERSION_ADC
                   _Config_INTERRUPT
                           _Revision
                           _TOGGLE_1
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _TOGGLE_1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Revision                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONVERSION_ADC                                       2     2      0      88
                                              5 BANK0      2     2      0
                        _NIBBLE1_ADC
                        _NIBBLE2_ADC
                           _SWAP_ADC
 ---------------------------------------------------------------------------------
 (2) _SWAP_ADC                                             5     5      0      44
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _NIBBLE2_ADC                                          3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _NIBBLE1_ADC                                          3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0      98
                                              3 COMMON     5     5      0
                                _ADC
                         _DisplayADC
 ---------------------------------------------------------------------------------
 (4) _DisplayADC                                           0     0      0      22
                            _display
 ---------------------------------------------------------------------------------
 (5) _display                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _ADC                                                  4     1      3      76
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVERSION_ADC
     _NIBBLE1_ADC
     _NIBBLE2_ADC
     _SWAP_ADC
   _Config_INTERRUPT
   _Revision
   _TOGGLE_1
   _setup
     _initOsc

 _ISR (ROOT)
   _ADC
   _DisplayADC
     _display

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 06 11:49:49 2021

                        l6 0132                          l7 018A                          l8 0138  
                        l9 013E                         l10 0144                         l11 014A  
                       l12 0150                         l13 0156                         l14 015C  
                       l15 0162                         l16 018B                         l61 0286  
                       l64 0279                         l58 0245                         fsr 0004  
                      l201 01B8                        l210 01E0                        l213 025D  
                      l207 029D                        _ADC 0287                        l192 026C  
                      u205 0239                        u230 0263                        u231 0262  
                      u240 026A                        u241 0269                        u250 029C  
                      u251 029B                        u360 01F0                        u361 01EF  
                      u195 022D                        _ISR 00B2                        _VAL 0030  
                      fsr0 0004                        indf 0000                       ?_ADC 0070  
                     ?_ISR 0070                       l1121 027D                       l1201 0294  
                     l1123 0285                       l1115 022A                       l1117 0244  
                     l1205 0294                       l1127 0270                       l1207 029C  
                     l1055 0131                       l1151 01B9                       l1129 0278  
                     l1161 01CB                       l1153 01BF                       l1059 0168  
                     l1171 01D7                       l1163 01CF                       l1155 01C3  
                     l1181 0253                       l1317 0170                       l1173 01DA  
                     l1165 01D2                       l1157 01C4                       l1261 01F1  
                     l1253 01E1                       l1183 0256                       l1191 0265  
                     l1175 01DD                       l1167 01D3                       l1159 01C8  
                     l1263 01F6                       l1255 01E6                       l1185 0259  
                     l1177 0246                       l1193 026A                       l1169 01D6  
                     l1265 01FB                       l1257 01EB                       l1195 018C  
                     l1179 0252                       l1187 025E                       l1259 01F0  
                     l1197 019C                       l1189 0263                       l1199 01AA  
                     _IOCB 0096                       i1l40 00B1                       i1l55 0293  
                     _TMR0 0001                       _main 01E1                       btemp 007E  
 __end_of_Config_INTERRUPT 025E                       start 000E                      ??_ADC 0073  
                    ??_ISR 0073                      ?_main 0070                      _ANSEL 0188  
                    i1l172 011A                      i1l168 00BE                      i1l177 0125  
                    i1l169 00C4                      i1l198 0226                      u21_20 020C  
                    u21_21 020B                      u22_20 021C                      u30_20 00CD  
                    u22_21 021B                      u30_21 00CC                      u31_20 00DA  
                    u31_21 00D9                      u32_20 00DF                      u32_21 00DE  
                    u33_20 00EF                      u33_21 00EE                      u34_20 011A  
                    u26_20 00B6                      u34_21 0119                      u26_21 00B5  
                    u35_20 011E                      u27_20 00BC                      u35_21 011D  
                    u27_21 00BB                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    u28_20 00C2                      u28_21 00C1                      u29_20 00C8  
                    u29_21 00C7                      u37_27 00F4                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                 _DisplayADC 0204           __end_of_TOGGLE_1 026D  
          __end_of_display 00B2            __end_of_initOsc 018C                      _val_1 0028  
         __end_of_SWAP_ADC 0246                      _setup 01B9                      pclath 000A  
                    status 0003                      wtemp0 007E            __initialization 0011  
             __end_of_main 0204                     ??_main 0039         NIBBLE1_ADC@VAL_ADC 0034  
         __end_of_Revision 029E                     _ADCON0 001F                     _ADCON1 009F  
                   _ADRESH 001E                     _ADRESL 009E                initOsc@IRCF 0034  
                   ?_setup 0070                     _ANSELH 0189                     i1l1105 0076  
                   i1l1107 00B0                     i1l1211 00B6                     i1l1133 0287  
                   i1l1141 020C                     i1l1221 00D5                     i1l1213 00BC  
                   i1l1071 002B                     i1l1143 0215                     i1l1231 00E8  
                   i1l1223 00D6                     i1l1215 00C2                     i1l1081 0044  
                   i1l1073 0030                     i1l1145 0217                     i1l1137 0204  
                   i1l1241 00FD                     i1l1225 00DA                     i1l1217 00C8  
                   i1l1233 00E9                     i1l1209 00B2                     i1l1091 005D  
                   i1l1083 0049                     i1l1075 0035                     i1l1067 0025  
                   i1l1147 021C                     i1l1139 0207                     i1l1251 0121  
                   i1l1243 010F                     i1l1235 00EF                     i1l1227 00DF  
                   i1l1219 00CD                     i1l1093 0062                     i1l1085 004E  
                   i1l1077 003A                     i1l1069 0026                     i1l1149 0225  
                   i1l1245 0114                     i1l1237 00F0                     i1l1229 00E7  
                   i1l1319 007E                     i1l1095 0067                     i1l1087 0053  
                   i1l1079 003F                     i1l1247 011E                     i1l1239 00F9  
                   i1l1097 006C                     i1l1089 0058                     i1l1249 011F  
                   i1l1099 0071                     _INTCON 000B       __size_of_NIBBLE1_ADC 000D  
     __size_of_NIBBLE2_ADC 000D                     _toggle 0078            SWAP_ADC@VAL_ADC 0036  
                ??_display 0070                  ??_initOsc 0032                ?_DisplayADC 0070  
                   saved_w 007E                 ADC@ADRESH_ 0070                 ADC@ADRESL_ 0070  
  __end_of__initialization 0020             __pcstackCOMMON 0070                  ?_TOGGLE_1 0070  
            __end_of_setup 01E1                  ?_SWAP_ADC 0070           display@ADC_VALOR 0072  
                  ??_setup 0035                 __pbssBANK0 0020    __size_of_CONVERSION_ADC 002D  
        ?_Config_INTERRUPT 0070                 __pmaintext 01E1                  ?_Revision 0070  
      __size_of_DisplayADC 0023         ??_Config_INTERRUPT 0032                 ??_TOGGLE_1 0032  
               __pintentry 0004                 ??_SWAP_ADC 0032                 _cont_timer 0079  
                _ADC_VALOR 0022                 ??_Revision 0032                    __ptext1 01B9  
                  __ptext2 012E                    __ptext3 025E                    __ptext4 0294  
                  __ptext5 0246                    __ptext6 018C                    __ptext7 0227  
                  __ptext8 026D                    __ptext9 027A                    _display 0024  
             __size_of_ADC 000D               __size_of_ISR 007C                    _initOsc 012E  
                  clrloop0 029F       end_of_initialization 0020        NIBBLE2_ADC@VAL_SWAP 0034  
                _PORTBbits 0006                  _PORTEbits 0009               ??_DisplayADC 0073  
           _CONVERSION_ADC 018C              ??_NIBBLE1_ADC 0032              ??_NIBBLE2_ADC 0032  
              _ADC_NIBBLE1 0026                _ADC_NIBBLE2 0024         __end_of_DisplayADC 0227  
        __size_of_TOGGLE_1 000F          __size_of_SWAP_ADC 001F        start_initialization 0011  
              __end_of_ADC 0294                __end_of_ISR 012E     __end_of_CONVERSION_ADC 01B9  
                _Valor_hex 007D        __end_of_NIBBLE1_ADC 0287        __end_of_NIBBLE2_ADC 027A  
        __size_of_Revision 000A  __size_of_Config_INTERRUPT 0018                __pbssCOMMON 0078  
                ___latbits 0002              __pcstackBANK0 0032            ?_CONVERSION_ADC 0070  
              _debouncing1 007B                _debouncing2 007A                   ?_display 0070  
                 ?_initOsc 0070                   _ADC_SWAP 0020             __size_of_setup 0028  
        interrupt_function 0004                  clear_ram0 029E                _NIBBLE1_ADC 027A  
                 _PIE1bits 008C                _NIBBLE2_ADC 026D                   _PIR1bits 000C  
                 _TOGGLE_1 025E                   _VAL_SWAP 007C                   _SWAP_ADC 0227  
               _ADCON0bits 001F                   _Revision 0294           _Config_INTERRUPT 0246  
         __size_of_display 008E           __size_of_initOsc 005E                   __ptext10 00B2  
                 __ptext11 0204                   __ptext12 0024                   __ptext13 0287  
                 _contador 002A              __size_of_main 0023                 _INTCONbits 000B  
         ??_CONVERSION_ADC 0037                _VAL_NIBBLE1 002E                _VAL_NIBBLE2 002C  
                 intlevel1 0000                 _OSCCONbits 008F                 _OPTION_REG 0081  
             ?_NIBBLE1_ADC 0070               ?_NIBBLE2_ADC 0070  
