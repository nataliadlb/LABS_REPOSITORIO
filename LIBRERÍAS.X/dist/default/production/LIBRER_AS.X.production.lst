

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 01 12:03:19 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  001F                     _ADCON0	set	31
   364  0009                     _PORTE	set	9
   365  0008                     _PORTD	set	8
   366  0007                     _PORTC	set	7
   367  0006                     _PORTB	set	6
   368  0005                     _PORTA	set	5
   369  0009                     _PORTEbits	set	9
   370  001F                     _ADCON0bits	set	31
   371  001E                     _ADRESH	set	30
   372  000C                     _PIR1bits	set	12
   373  0006                     _PORTBbits	set	6
   374  000B                     _INTCONbits	set	11
   375  008C                     _PIE1bits	set	140
   376  0096                     _IOCBbits	set	150
   377  0089                     _TRISE	set	137
   378  0088                     _TRISD	set	136
   379  0087                     _TRISC	set	135
   380  0086                     _TRISB	set	134
   381  0085                     _TRISA	set	133
   382  008F                     _OSCCONbits	set	143
   383  0189                     _ANSELH	set	393
   384  0188                     _ANSEL	set	392
   385                           
   386                           	psect	cinit
   387  000F                     start_initialization:	
   388                           ; #config settings
   389                           
   390  000F                     __initialization:
   391                           
   392                           ; Clear objects allocated to COMMON
   393  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   394  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   395  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   396  0012                     end_of_initialization:	
   397                           ;End of C runtime variable initialization code
   398                           
   399  0012                     __end_of__initialization:
   400  0012  0183               	clrf	3
   401  0013  120A  118A  28E8   	ljmp	_main	;jump to C main() function
   402                           
   403                           	psect	bssCOMMON
   404  0077                     __pbssCOMMON:
   405  0077                     _ADC_VALOR:
   406  0077                     	ds	1
   407  0078                     _contador:
   408  0078                     	ds	1
   409  0079                     _Valor_hex:
   410  0079                     	ds	1
   411                           
   412                           	psect	cstackCOMMON
   413  0070                     __pcstackCOMMON:
   414  0070                     ?_setup:
   415  0070                     ?_ContadorLEDS:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_DisplayADC:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_initOsc:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_ISR:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ??_ISR:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_main:	
   431                           ; 1 bytes @ 0x0
   432                           
   433                           
   434                           ; 1 bytes @ 0x0
   435  0070                     	ds	4
   436  0074                     ??_ContadorLEDS:
   437  0074                     ??_DisplayADC:	
   438                           ; 1 bytes @ 0x4
   439                           
   440  0074                     ??_initOsc:	
   441                           ; 1 bytes @ 0x4
   442                           
   443                           
   444                           ; 1 bytes @ 0x4
   445  0074                     	ds	2
   446  0076                     initOsc@IRCF:
   447                           
   448                           ; 1 bytes @ 0x6
   449  0076                     	ds	1
   450  0077                     ??_setup:
   451  0077                     ??_main:	
   452                           ; 1 bytes @ 0x7
   453                           
   454                           
   455                           	psect	maintext
   456  00E8                     __pmaintext:	
   457                           ; 1 bytes @ 0x7
   458 ;;
   459 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   460 ;;
   461 ;; *************** function _main *****************
   462 ;; Defined at:
   463 ;;		line 91 in file "Prueba.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : B00/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   477 ;;      Params:         0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0
   480 ;;      Totals:         0       0       0       0       0
   481 ;;Total ram usage:        0 bytes
   482 ;; Hardware stack levels required when called:    3
   483 ;; This function calls:
   484 ;;		_ContadorLEDS
   485 ;;		_DisplayADC
   486 ;;		_setup
   487 ;; This function is called by:
   488 ;;		Startup code after reset
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           
   493                           ;psect for function _main
   494  00E8                     _main:
   495  00E8                     l856:	
   496                           ;incstack = 0
   497                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   498                           
   499                           
   500                           ;Prueba.c: 92:     contador = 0;
   501  00E8  01F8               	clrf	_contador
   502  00E9                     l858:
   503                           
   504                           ;Prueba.c: 93:     setup();
   505  00E9  120A  118A  2072  120A  118A  	fcall	_setup
   506  00EE                     l860:
   507                           
   508                           ;Prueba.c: 98:         ContadorLEDS();
   509  00EE  120A  118A  210F  120A  118A  	fcall	_ContadorLEDS
   510  00F3                     l862:
   511                           
   512                           ;Prueba.c: 99:         DisplayADC();
   513  00F3  120A  118A  2109  120A  118A  	fcall	_DisplayADC
   514  00F8                     l864:
   515                           
   516                           ;Prueba.c: 100:         if (ADC_VALOR >= contador){
   517  00F8  0878               	movf	_contador,w
   518  00F9  0277               	subwf	_ADC_VALOR,w
   519  00FA  1C03               	skipc
   520  00FB  28FD               	goto	u71
   521  00FC  28FE               	goto	u70
   522  00FD                     u71:
   523  00FD  2902               	goto	l121
   524  00FE                     u70:
   525  00FE                     l866:
   526                           
   527                           ;Prueba.c: 101:             PORTEbits.RE0 = 1;
   528  00FE  1283               	bcf	3,5	;RP0=0, select bank0
   529  00FF  1303               	bcf	3,6	;RP1=0, select bank0
   530  0100  1409               	bsf	9,0	;volatile
   531                           
   532                           ;Prueba.c: 102:         }
   533  0101  28EE               	goto	l860
   534  0102                     l121:	
   535                           ;Prueba.c: 103:         else {
   536                           
   537                           
   538                           ;Prueba.c: 104:             PORTEbits.RE0 = 0;
   539  0102  1283               	bcf	3,5	;RP0=0, select bank0
   540  0103  1303               	bcf	3,6	;RP1=0, select bank0
   541  0104  1009               	bcf	9,0	;volatile
   542  0105  28EE               	goto	l860
   543  0106  120A  118A  280C   	ljmp	start
   544  0109                     __end_of_main:
   545                           
   546                           	psect	text1
   547  0072                     __ptext1:	
   548 ;; *************** function _setup *****************
   549 ;; Defined at:
   550 ;;		line 114 in file "Prueba.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   564 ;;      Params:         0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0
   567 ;;      Totals:         0       0       0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; Hardware stack levels required when called:    2
   571 ;; This function calls:
   572 ;;		_initOsc
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _setup
   580  0072                     _setup:
   581  0072                     l736:	
   582                           ;incstack = 0
   583                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   584                           
   585                           
   586                           ;Prueba.c: 115:     initOsc(0b00000110);
   587  0072  3006               	movlw	6
   588  0073  120A  118A  2016  120A  118A  	fcall	_initOsc
   589  0078                     l738:
   590                           
   591                           ;Prueba.c: 116:     ANSEL = 0b00000001;
   592  0078  3001               	movlw	1
   593  0079  1683               	bsf	3,5	;RP0=1, select bank3
   594  007A  1703               	bsf	3,6	;RP1=1, select bank3
   595  007B  0088               	movwf	8	;volatile
   596  007C                     l740:
   597                           
   598                           ;Prueba.c: 117:     ANSELH = 0;
   599  007C  0189               	clrf	9	;volatile
   600  007D                     l742:
   601                           
   602                           ;Prueba.c: 118:     TRISA = 0b00000001;
   603  007D  3001               	movlw	1
   604  007E  1683               	bsf	3,5	;RP0=1, select bank1
   605  007F  1303               	bcf	3,6	;RP1=0, select bank1
   606  0080  0085               	movwf	5	;volatile
   607  0081                     l744:
   608                           
   609                           ;Prueba.c: 119:     PORTA = 0;
   610  0081  1283               	bcf	3,5	;RP0=0, select bank0
   611  0082  1303               	bcf	3,6	;RP1=0, select bank0
   612  0083  0185               	clrf	5	;volatile
   613  0084                     l746:
   614                           
   615                           ;Prueba.c: 120:     TRISB = 0b00000011;
   616  0084  3003               	movlw	3
   617  0085  1683               	bsf	3,5	;RP0=1, select bank1
   618  0086  1303               	bcf	3,6	;RP1=0, select bank1
   619  0087  0086               	movwf	6	;volatile
   620  0088                     l748:
   621                           
   622                           ;Prueba.c: 121:     PORTB = 0;
   623  0088  1283               	bcf	3,5	;RP0=0, select bank0
   624  0089  1303               	bcf	3,6	;RP1=0, select bank0
   625  008A  0186               	clrf	6	;volatile
   626  008B                     l750:
   627                           
   628                           ;Prueba.c: 122:     TRISC = 0;
   629  008B  1683               	bsf	3,5	;RP0=1, select bank1
   630  008C  1303               	bcf	3,6	;RP1=0, select bank1
   631  008D  0187               	clrf	7	;volatile
   632  008E                     l752:
   633                           
   634                           ;Prueba.c: 123:     PORTC = 0;
   635  008E  1283               	bcf	3,5	;RP0=0, select bank0
   636  008F  1303               	bcf	3,6	;RP1=0, select bank0
   637  0090  0187               	clrf	7	;volatile
   638  0091                     l754:
   639                           
   640                           ;Prueba.c: 124:     TRISD = 0;
   641  0091  1683               	bsf	3,5	;RP0=1, select bank1
   642  0092  1303               	bcf	3,6	;RP1=0, select bank1
   643  0093  0188               	clrf	8	;volatile
   644  0094                     l756:
   645                           
   646                           ;Prueba.c: 125:     PORTD = 0;
   647  0094  1283               	bcf	3,5	;RP0=0, select bank0
   648  0095  1303               	bcf	3,6	;RP1=0, select bank0
   649  0096  0188               	clrf	8	;volatile
   650  0097                     l758:
   651                           
   652                           ;Prueba.c: 126:     TRISE = 0;
   653  0097  1683               	bsf	3,5	;RP0=1, select bank1
   654  0098  1303               	bcf	3,6	;RP1=0, select bank1
   655  0099  0189               	clrf	9	;volatile
   656  009A                     l760:
   657                           
   658                           ;Prueba.c: 127:     PORTE = 0;
   659  009A  1283               	bcf	3,5	;RP0=0, select bank0
   660  009B  1303               	bcf	3,6	;RP1=0, select bank0
   661  009C  0189               	clrf	9	;volatile
   662  009D                     l762:
   663                           
   664                           ;Prueba.c: 128:     INTCONbits.GIE = 1;
   665  009D  178B               	bsf	11,7	;volatile
   666  009E                     l764:
   667                           
   668                           ;Prueba.c: 129:     INTCONbits.RBIE = 1;
   669  009E  158B               	bsf	11,3	;volatile
   670  009F                     l766:
   671                           
   672                           ;Prueba.c: 130:     INTCONbits.RBIF = 0;
   673  009F  100B               	bcf	11,0	;volatile
   674  00A0                     l768:
   675                           
   676                           ;Prueba.c: 131:     IOCBbits.IOCB0 = 1;
   677  00A0  1683               	bsf	3,5	;RP0=1, select bank1
   678  00A1  1303               	bcf	3,6	;RP1=0, select bank1
   679  00A2  1416               	bsf	22,0	;volatile
   680  00A3                     l770:
   681                           
   682                           ;Prueba.c: 132:     IOCBbits.IOCB1 = 1;
   683  00A3  1496               	bsf	22,1	;volatile
   684  00A4                     l772:
   685                           
   686                           ;Prueba.c: 133:     INTCONbits.PEIE = 1;
   687  00A4  170B               	bsf	11,6	;volatile
   688  00A5                     l774:
   689                           
   690                           ;Prueba.c: 134:     PIE1bits.ADIE = 1;
   691  00A5  170C               	bsf	12,6	;volatile
   692  00A6                     l776:
   693                           
   694                           ;Prueba.c: 135:     PIR1bits.ADIF = 0;
   695  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   696  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   697  00A8  130C               	bcf	12,6	;volatile
   698  00A9                     l778:
   699                           
   700                           ;Prueba.c: 136:     ADCON0 = 0b11000001;
   701  00A9  30C1               	movlw	193
   702  00AA  009F               	movwf	31	;volatile
   703  00AB                     l780:
   704                           
   705                           ;Prueba.c: 137:     ADCON0bits.GO_nDONE = 1;
   706  00AB  149F               	bsf	31,1	;volatile
   707  00AC                     l128:
   708  00AC  0008               	return
   709  00AD                     __end_of_setup:
   710                           
   711                           	psect	text2
   712  0016                     __ptext2:	
   713 ;; *************** function _initOsc *****************
   714 ;; Defined at:
   715 ;;		line 3 in file "Oscilador.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  IRCF            1    wreg     unsigned char 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  IRCF            1    6[COMMON] unsigned char 
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   729 ;;      Params:         0       0       0       0       0
   730 ;;      Locals:         1       0       0       0       0
   731 ;;      Temps:          2       0       0       0       0
   732 ;;      Totals:         3       0       0       0       0
   733 ;;Total ram usage:        3 bytes
   734 ;; Hardware stack levels used:    1
   735 ;; Hardware stack levels required when called:    1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_setup
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           
   744                           ;psect for function _initOsc
   745  0016                     _initOsc:
   746                           
   747                           ;incstack = 0
   748                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   749                           ;initOsc@IRCF stored from wreg
   750  0016  00F6               	movwf	initOsc@IRCF
   751  0017                     l726:
   752                           
   753                           ;Oscilador.c: 5:     switch(IRCF){
   754  0017  284E               	goto	l730
   755  0018                     l6:	
   756                           ;Oscilador.c: 6:         case 0:
   757                           
   758                           
   759                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   760  0018  1683               	bsf	3,5	;RP0=1, select bank1
   761  0019  1303               	bcf	3,6	;RP1=0, select bank1
   762  001A  130F               	bcf	15,6	;volatile
   763                           
   764                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   765  001B  128F               	bcf	15,5	;volatile
   766                           
   767                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   768  001C  120F               	bcf	15,4	;volatile
   769                           
   770                           ;Oscilador.c: 10:             break;
   771  001D  2870               	goto	l7
   772  001E                     l8:	
   773                           ;Oscilador.c: 11:          case 1:
   774                           
   775                           
   776                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   777  001E  1683               	bsf	3,5	;RP0=1, select bank1
   778  001F  1303               	bcf	3,6	;RP1=0, select bank1
   779  0020  130F               	bcf	15,6	;volatile
   780                           
   781                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   782  0021  128F               	bcf	15,5	;volatile
   783                           
   784                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   785  0022  160F               	bsf	15,4	;volatile
   786                           
   787                           ;Oscilador.c: 15:             break;
   788  0023  2870               	goto	l7
   789  0024                     l9:	
   790                           ;Oscilador.c: 16:         case 2:
   791                           
   792                           
   793                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   794  0024  1683               	bsf	3,5	;RP0=1, select bank1
   795  0025  1303               	bcf	3,6	;RP1=0, select bank1
   796  0026  130F               	bcf	15,6	;volatile
   797                           
   798                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   799  0027  168F               	bsf	15,5	;volatile
   800                           
   801                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   802  0028  120F               	bcf	15,4	;volatile
   803                           
   804                           ;Oscilador.c: 20:             break;
   805  0029  2870               	goto	l7
   806  002A                     l10:	
   807                           ;Oscilador.c: 21:         case 3:
   808                           
   809                           
   810                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   811  002A  1683               	bsf	3,5	;RP0=1, select bank1
   812  002B  1303               	bcf	3,6	;RP1=0, select bank1
   813  002C  130F               	bcf	15,6	;volatile
   814                           
   815                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   816  002D  168F               	bsf	15,5	;volatile
   817                           
   818                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   819  002E  160F               	bsf	15,4	;volatile
   820                           
   821                           ;Oscilador.c: 25:             break;
   822  002F  2870               	goto	l7
   823  0030                     l11:	
   824                           ;Oscilador.c: 26:         case 4:
   825                           
   826                           
   827                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   828  0030  1683               	bsf	3,5	;RP0=1, select bank1
   829  0031  1303               	bcf	3,6	;RP1=0, select bank1
   830  0032  170F               	bsf	15,6	;volatile
   831                           
   832                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   833  0033  128F               	bcf	15,5	;volatile
   834                           
   835                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   836  0034  120F               	bcf	15,4	;volatile
   837                           
   838                           ;Oscilador.c: 30:             break;
   839  0035  2870               	goto	l7
   840  0036                     l12:	
   841                           ;Oscilador.c: 31:         case 5:
   842                           
   843                           
   844                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   845  0036  1683               	bsf	3,5	;RP0=1, select bank1
   846  0037  1303               	bcf	3,6	;RP1=0, select bank1
   847  0038  170F               	bsf	15,6	;volatile
   848                           
   849                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
   850  0039  128F               	bcf	15,5	;volatile
   851                           
   852                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
   853  003A  160F               	bsf	15,4	;volatile
   854                           
   855                           ;Oscilador.c: 35:             break;
   856  003B  2870               	goto	l7
   857  003C                     l13:	
   858                           ;Oscilador.c: 36:         case 6:
   859                           
   860                           
   861                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
   862  003C  1683               	bsf	3,5	;RP0=1, select bank1
   863  003D  1303               	bcf	3,6	;RP1=0, select bank1
   864  003E  170F               	bsf	15,6	;volatile
   865                           
   866                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
   867  003F  168F               	bsf	15,5	;volatile
   868                           
   869                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
   870  0040  120F               	bcf	15,4	;volatile
   871                           
   872                           ;Oscilador.c: 40:             break;
   873  0041  2870               	goto	l7
   874  0042                     l14:	
   875                           ;Oscilador.c: 41:         case 7:
   876                           
   877                           
   878                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
   879  0042  1683               	bsf	3,5	;RP0=1, select bank1
   880  0043  1303               	bcf	3,6	;RP1=0, select bank1
   881  0044  170F               	bsf	15,6	;volatile
   882                           
   883                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
   884  0045  168F               	bsf	15,5	;volatile
   885                           
   886                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
   887  0046  160F               	bsf	15,4	;volatile
   888                           
   889                           ;Oscilador.c: 45:             break;
   890  0047  2870               	goto	l7
   891  0048                     l15:	
   892                           ;Oscilador.c: 46:         default:
   893                           
   894                           
   895                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
   896  0048  1683               	bsf	3,5	;RP0=1, select bank1
   897  0049  1303               	bcf	3,6	;RP1=0, select bank1
   898  004A  170F               	bsf	15,6	;volatile
   899                           
   900                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
   901  004B  168F               	bsf	15,5	;volatile
   902                           
   903                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
   904  004C  120F               	bcf	15,4	;volatile
   905                           
   906                           ;Oscilador.c: 50:             break;
   907  004D  2870               	goto	l7
   908  004E                     l730:
   909  004E  0876               	movf	initOsc@IRCF,w
   910  004F  00F4               	movwf	??_initOsc
   911  0050  01F5               	clrf	??_initOsc+1
   912                           
   913                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   914                           ; Switch size 1, requested type "simple"
   915                           ; Number of cases is 1, Range of values is 0 to 0
   916                           ; switch strategies available:
   917                           ; Name         Instructions Cycles
   918                           ; simple_byte            4     3 (average)
   919                           ; direct_byte           11     8 (fixed)
   920                           ; jumptable            260     6 (fixed)
   921                           ;	Chosen strategy is simple_byte
   922  0051  0875               	movf	??_initOsc+1,w
   923  0052  3A00               	xorlw	0	; case 0
   924  0053  1903               	skipnz
   925  0054  2856               	goto	l888
   926  0055  2848               	goto	l15
   927  0056                     l888:
   928                           
   929                           ; Switch size 1, requested type "simple"
   930                           ; Number of cases is 8, Range of values is 0 to 7
   931                           ; switch strategies available:
   932                           ; Name         Instructions Cycles
   933                           ; simple_byte           25    13 (average)
   934                           ; direct_byte           32     8 (fixed)
   935                           ; jumptable            260     6 (fixed)
   936                           ;	Chosen strategy is simple_byte
   937  0056  0874               	movf	??_initOsc,w
   938  0057  3A00               	xorlw	0	; case 0
   939  0058  1903               	skipnz
   940  0059  2818               	goto	l6
   941  005A  3A01               	xorlw	1	; case 1
   942  005B  1903               	skipnz
   943  005C  281E               	goto	l8
   944  005D  3A03               	xorlw	3	; case 2
   945  005E  1903               	skipnz
   946  005F  2824               	goto	l9
   947  0060  3A01               	xorlw	1	; case 3
   948  0061  1903               	skipnz
   949  0062  282A               	goto	l10
   950  0063  3A07               	xorlw	7	; case 4
   951  0064  1903               	skipnz
   952  0065  2830               	goto	l11
   953  0066  3A01               	xorlw	1	; case 5
   954  0067  1903               	skipnz
   955  0068  2836               	goto	l12
   956  0069  3A03               	xorlw	3	; case 6
   957  006A  1903               	skipnz
   958  006B  283C               	goto	l13
   959  006C  3A01               	xorlw	1	; case 7
   960  006D  1903               	skipnz
   961  006E  2842               	goto	l14
   962  006F  2848               	goto	l15
   963  0070                     l7:
   964                           
   965                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
   966  0070  140F               	bsf	15,0	;volatile
   967  0071                     l16:
   968  0071  0008               	return
   969  0072                     __end_of_initOsc:
   970                           
   971                           	psect	text3
   972  0109                     __ptext3:	
   973 ;; *************** function _DisplayADC *****************
   974 ;; Defined at:
   975 ;;		line 147 in file "Prueba.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;		None
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         0       0       0       0       0
   990 ;;      Locals:         0       0       0       0       0
   991 ;;      Temps:          0       0       0       0       0
   992 ;;      Totals:         0       0       0       0       0
   993 ;;Total ram usage:        0 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; Hardware stack levels required when called:    1
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function _DisplayADC
  1005  0109                     _DisplayADC:
  1006  0109                     l784:	
  1007                           ;incstack = 0
  1008                           ; Regs used in _DisplayADC: [wreg]
  1009                           
  1010                           
  1011                           ;Prueba.c: 148:     PORTEbits.RE1 = 1;
  1012  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1013  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1014  010B  1489               	bsf	9,1	;volatile
  1015  010C                     l786:
  1016                           
  1017                           ;Prueba.c: 149:     PORTD = ADC_VALOR;
  1018  010C  0877               	movf	_ADC_VALOR,w
  1019  010D  0088               	movwf	8	;volatile
  1020  010E                     l134:
  1021  010E  0008               	return
  1022  010F                     __end_of_DisplayADC:
  1023                           
  1024                           	psect	text4
  1025  010F                     __ptext4:	
  1026 ;; *************** function _ContadorLEDS *****************
  1027 ;; Defined at:
  1028 ;;		line 143 in file "Prueba.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1042 ;;      Params:         0       0       0       0       0
  1043 ;;      Locals:         0       0       0       0       0
  1044 ;;      Temps:          0       0       0       0       0
  1045 ;;      Totals:         0       0       0       0       0
  1046 ;;Total ram usage:        0 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_main
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _ContadorLEDS
  1058  010F                     _ContadorLEDS:
  1059  010F                     l782:	
  1060                           ;incstack = 0
  1061                           ; Regs used in _ContadorLEDS: [wreg]
  1062                           
  1063                           
  1064                           ;Prueba.c: 144:     PORTC = contador;
  1065  010F  0878               	movf	_contador,w
  1066  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0112  0087               	movwf	7	;volatile
  1069  0113                     l131:
  1070  0113  0008               	return
  1071  0114                     __end_of_ContadorLEDS:
  1072                           
  1073                           	psect	text5
  1074  00AD                     __ptext5:	
  1075 ;; *************** function _ISR *****************
  1076 ;; Defined at:
  1077 ;;		line 54 in file "Prueba.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0
  1093 ;;      Temps:          4       0       0       0       0
  1094 ;;      Totals:         4       0       0       0       0
  1095 ;;Total ram usage:        4 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		Interrupt level 1
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           
  1105                           ;psect for function _ISR
  1106  00AD                     _ISR:
  1107  00AD                     i1l832:
  1108                           
  1109                           ;Prueba.c: 56:     if (INTCONbits.RBIF == 1){
  1110  00AD  1C0B               	btfss	11,0	;volatile
  1111  00AE  28B0               	goto	u1_21
  1112  00AF  28B1               	goto	u1_20
  1113  00B0                     u1_21:
  1114  00B0  28CA               	goto	i1l848
  1115  00B1                     u1_20:
  1116  00B1                     i1l834:
  1117                           
  1118                           ;Prueba.c: 57:         if (PORTBbits.RB0 == 1){
  1119  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1120  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1121  00B3  1C06               	btfss	6,0	;volatile
  1122  00B4  28B6               	goto	u2_21
  1123  00B5  28B7               	goto	u2_20
  1124  00B6                     u2_21:
  1125  00B6  28BF               	goto	i1l840
  1126  00B7                     u2_20:
  1127  00B7                     i1l107:	
  1128                           ;Prueba.c: 60:             }
  1129                           
  1130                           
  1131                           ;Prueba.c: 58:             while (PORTBbits.RB0 == 1){
  1132  00B7  1806               	btfsc	6,0	;volatile
  1133  00B8  28BA               	goto	u3_21
  1134  00B9  28BB               	goto	u3_20
  1135  00BA                     u3_21:
  1136  00BA  28B7               	goto	i1l107
  1137  00BB                     u3_20:
  1138  00BB                     i1l838:
  1139                           
  1140                           ;Prueba.c: 61:             contador++;
  1141  00BB  3001               	movlw	1
  1142  00BC  00F0               	movwf	??_ISR
  1143  00BD  0870               	movf	??_ISR,w
  1144  00BE  07F8               	addwf	_contador,f
  1145  00BF                     i1l840:
  1146                           
  1147                           ;Prueba.c: 63:         if (PORTBbits.RB1 == 1){
  1148  00BF  1C86               	btfss	6,1	;volatile
  1149  00C0  28C2               	goto	u4_21
  1150  00C1  28C3               	goto	u4_20
  1151  00C2                     u4_21:
  1152  00C2  28C9               	goto	i1l846
  1153  00C3                     u4_20:
  1154  00C3                     i1l111:	
  1155                           ;Prueba.c: 66:             }
  1156                           
  1157                           
  1158                           ;Prueba.c: 64:             while (PORTBbits.RB1 == 1){
  1159  00C3  1886               	btfsc	6,1	;volatile
  1160  00C4  28C6               	goto	u5_21
  1161  00C5  28C7               	goto	u5_20
  1162  00C6                     u5_21:
  1163  00C6  28C3               	goto	i1l111
  1164  00C7                     u5_20:
  1165  00C7                     i1l844:
  1166                           
  1167                           ;Prueba.c: 67:             contador--;
  1168  00C7  3001               	movlw	1
  1169  00C8  02F8               	subwf	_contador,f
  1170  00C9                     i1l846:
  1171                           
  1172                           ;Prueba.c: 69:         INTCONbits.RBIF = 0;
  1173  00C9  100B               	bcf	11,0	;volatile
  1174  00CA                     i1l848:
  1175                           
  1176                           ;Prueba.c: 72:     if (PIR1bits.ADIF == 1){
  1177  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1178  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1179  00CC  1F0C               	btfss	12,6	;volatile
  1180  00CD  28CF               	goto	u6_21
  1181  00CE  28D0               	goto	u6_20
  1182  00CF                     u6_21:
  1183  00CF  28E1               	goto	i1l115
  1184  00D0                     u6_20:
  1185  00D0                     i1l850:
  1186                           
  1187                           ;Prueba.c: 73:         ADC_VALOR = (ADRESL << 8) | ADRESH;
  1188  00D0  081E               	movf	30,w	;volatile
  1189  00D1  00F0               	movwf	??_ISR
  1190  00D2  0870               	movf	??_ISR,w
  1191  00D3  00F7               	movwf	_ADC_VALOR
  1192  00D4                     i1l852:
  1193                           
  1194                           ;Prueba.c: 74:         PIR1bits.ADIF = 0;
  1195  00D4  130C               	bcf	12,6	;volatile
  1196                           
  1197                           ;Prueba.c: 75:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1198  00D5  301A               	movlw	26
  1199  00D6  00F1               	movwf	??_ISR+1
  1200  00D7  30F8               	movlw	248
  1201  00D8  00F0               	movwf	??_ISR
  1202  00D9                     u8_27:
  1203  00D9  0BF0               	decfsz	??_ISR,f
  1204  00DA  28D9               	goto	u8_27
  1205  00DB  0BF1               	decfsz	??_ISR+1,f
  1206  00DC  28D9               	goto	u8_27
  1207  00DD  0000               	nop
  1208  00DE                     i1l854:
  1209                           
  1210                           ;Prueba.c: 76:         ADCON0bits.GO_nDONE = 1;
  1211  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1212  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1213  00E0  149F               	bsf	31,1	;volatile
  1214  00E1                     i1l115:
  1215  00E1  0873               	movf	??_ISR+3,w
  1216  00E2  008A               	movwf	10
  1217  00E3  0E72               	swapf	??_ISR+2,w
  1218  00E4  0083               	movwf	3
  1219  00E5  0EFE               	swapf	btemp,f
  1220  00E6  0E7E               	swapf	btemp,w
  1221  00E7  0009               	retfie
  1222  00E8                     __end_of_ISR:
  1223  007E                     btemp	set	126	;btemp
  1224  007E                     wtemp0	set	126
  1225                           
  1226                           	psect	intentry
  1227  0004                     __pintentry:	
  1228                           ;incstack = 0
  1229                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1230                           
  1231  0004                     interrupt_function:
  1232  007E                     saved_w	set	btemp
  1233  0004  00FE               	movwf	btemp
  1234  0005  0E03               	swapf	3,w
  1235  0006  00F2               	movwf	??_ISR+2
  1236  0007  080A               	movf	10,w
  1237  0008  00F3               	movwf	??_ISR+3
  1238  0009  120A  118A  28AD   	ljmp	_ISR
  1239                           
  1240                           	psect	config
  1241                           
  1242                           ;Config register CONFIG1 @ 0x2007
  1243                           ;	Oscillator Selection bits
  1244                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1245                           ;	Watchdog Timer Enable bit
  1246                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1247                           ;	Power-up Timer Enable bit
  1248                           ;	PWRTE = OFF, PWRT disabled
  1249                           ;	RE3/MCLR pin function select bit
  1250                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1251                           ;	Code Protection bit
  1252                           ;	CP = OFF, Program memory code protection is disabled
  1253                           ;	Data Code Protection bit
  1254                           ;	CPD = OFF, Data memory code protection is disabled
  1255                           ;	Brown Out Reset Selection bits
  1256                           ;	BOREN = OFF, BOR disabled
  1257                           ;	Internal External Switchover bit
  1258                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1259                           ;	Fail-Safe Clock Monitor Enabled bit
  1260                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1261                           ;	Low Voltage Programming Enable bit
  1262                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1263                           ;	In-Circuit Debugger Mode bit
  1264                           ;	DEBUG = 0x1, unprogrammed default
  1265  2007                     	org	8199
  1266  2007  20D1               	dw	8401
  1267                           
  1268                           ;Config register CONFIG2 @ 0x2008
  1269                           ;	Brown-out Reset Selection bit
  1270                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1271                           ;	Flash Program Memory Self Write Enable bits
  1272                           ;	WRT = OFF, Write protection off
  1273  2008                     	org	8200
  1274  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_initOsc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                       _ContadorLEDS
                         _DisplayADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DisplayADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ContadorLEDS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ContadorLEDS
   _DisplayADC
   _setup
     _initOsc

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 01 12:03:19 2021

                      l6 0018                        l7 0070                        l8 001E  
                      l9 0024                       l10 002A                       l11 0030  
                     l12 0036                       l13 003C                       l14 0042  
                     l15 0048                       l16 0071                       u70 00FE  
                     u71 00FD           ??_ContadorLEDS 0074                      l121 0102  
                    l131 0113                      l134 010E                      l128 00AC  
                    l730 004E                      l740 007C                      l726 0017  
                    l750 008B                      l742 007D                      l760 009A  
                    l752 008E                      l744 0081                      l736 0072  
                    l770 00A3                      l762 009D                      l754 0091  
                    l746 0084                      l738 0078                      l780 00AB  
                    l772 00A4                      l764 009E                      l756 0094  
                    l748 0088                      l860 00EE                      l782 010F  
                    l774 00A5                      l766 009F                      l758 0097  
                    l862 00F3                      l784 0109                      l776 00A6  
                    l768 00A0                      l864 00F8                      l856 00E8  
                    l786 010C                      l778 00A9                      l866 00FE  
                    l858 00E9                      l888 0056                      _ISR 00AD  
                   ?_ISR 0070                     u1_20 00B1                     u1_21 00B0  
                   u2_20 00B7                     u2_21 00B6                     u3_20 00BB  
                   u3_21 00BA                     u4_20 00C3                     u4_21 00C2  
                   u5_20 00C7                     u5_21 00C6                     u6_20 00D0  
                   u6_21 00CF                     u8_27 00D9                     _main 00E8  
                   btemp 007E                     start 000C                    ??_ISR 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l111 00C3  
                  i1l115 00E1                    i1l107 00B7                    i1l840 00BF  
                  i1l832 00AD                    i1l850 00D0                    i1l834 00B1  
                  i1l852 00D4                    i1l844 00C7                    i1l854 00DE  
                  i1l846 00C9                    i1l838 00BB                    i1l848 00CA  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089               _DisplayADC 0109          __end_of_initOsc 0072  
                  _setup 0072                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0109  
                 ??_main 0077                   _ADCON0 001F                   _ADRESH 001E  
            initOsc@IRCF 0076                   ?_setup 0070                   _ANSELH 0189  
   __end_of_ContadorLEDS 0114                ??_initOsc 0074              ?_DisplayADC 0070  
                 saved_w 007E  __end_of__initialization 0012           __pcstackCOMMON 0070  
          __end_of_setup 00AD                  ??_setup 0077               __pmaintext 00E8  
    __size_of_DisplayADC 0006               __pintentry 0004    __size_of_ContadorLEDS 0005  
              _ADC_VALOR 0077                  __ptext1 0072                  __ptext2 0016  
                __ptext3 0109                  __ptext4 010F                  __ptext5 00AD  
           _ContadorLEDS 010F             __size_of_ISR 003B                  _initOsc 0016  
   end_of_initialization 0012                _PORTBbits 0006                _PORTEbits 0009  
           ??_DisplayADC 0074       __end_of_DisplayADC 010F      start_initialization 000F  
            __end_of_ISR 00E8                _Valor_hex 0079              __pbssCOMMON 0077  
              ___latbits 0002                 ?_initOsc 0070           __size_of_setup 003B  
      interrupt_function 0004                 _IOCBbits 0096                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F         __size_of_initOsc 005C  
               _contador 0078            __size_of_main 0021               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F            ?_ContadorLEDS 0070  
