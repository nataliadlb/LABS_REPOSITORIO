

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 18:26:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  008F                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  0105                     	;# 
   438  0107                     	;# 
   439  0108                     	;# 
   440  0109                     	;# 
   441  010C                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  010F                     	;# 
   446  0185                     	;# 
   447  0187                     	;# 
   448  0188                     	;# 
   449  0189                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  001F                     _ADCON0	set	31
   453  000B                     _INTCON	set	11
   454  0006                     _PORTB	set	6
   455  0005                     _PORTA	set	5
   456  0008                     _PORTD	set	8
   457  0009                     _PORTEbits	set	9
   458  0009                     _PORTE	set	9
   459  0001                     _TMR0	set	1
   460  001F                     _ADCON0bits	set	31
   461  000C                     _PIR1bits	set	12
   462  0007                     _PORTC	set	7
   463  0006                     _PORTBbits	set	6
   464  000B                     _INTCONbits	set	11
   465  001E                     _ADRESH	set	30
   466  009F                     _ADCON1	set	159
   467  008C                     _PIE1bits	set	140
   468  0096                     _IOCB	set	150
   469  0081                     _OPTION_REG	set	129
   470  0089                     _TRISE	set	137
   471  0088                     _TRISD	set	136
   472  0087                     _TRISC	set	135
   473  0086                     _TRISB	set	134
   474  0085                     _TRISA	set	133
   475  009E                     _ADRESL	set	158
   476  008F                     _OSCCONbits	set	143
   477  0189                     _ANSELH	set	393
   478  0188                     _ANSEL	set	392
   479                           
   480                           	psect	cinit
   481  0011                     start_initialization:	
   482                           ; #config settings
   483                           
   484  0011                     __initialization:
   485                           
   486                           ; Clear objects allocated to COMMON
   487  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   488  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   489  0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   490  0014  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   491  0015  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   492                           
   493                           ; Clear objects allocated to BANK0
   494  0016  1383               	bcf	3,7	;select IRP bank0
   495  0017  3020               	movlw	low __pbssBANK0
   496  0018  0084               	movwf	4
   497  0019  3033               	movlw	low (__pbssBANK0+19)
   498  001A  120A  118A  22C4  120A  118A  	fcall	clear_ram0
   499  001F                     end_of_initialization:	
   500                           ;End of C runtime variable initialization code
   501                           
   502  001F                     __end_of__initialization:
   503  001F  0183               	clrf	3
   504  0020  120A  118A  2A50   	ljmp	_main	;jump to C main() function
   505                           
   506                           	psect	bssCOMMON
   507  0078                     __pbssCOMMON:
   508  0078                     _toggle:
   509  0078                     	ds	1
   510  0079                     _debouncing2:
   511  0079                     	ds	1
   512  007A                     _debouncing1:
   513  007A                     	ds	1
   514  007B                     _contador:
   515  007B                     	ds	1
   516  007C                     _Valor_hex:
   517  007C                     	ds	1
   518                           
   519                           	psect	bssBANK0
   520  0020                     __pbssBANK0:
   521  0020                     _ADC_SWAP:
   522  0020                     	ds	2
   523  0022                     _ADC_VALOR:
   524  0022                     	ds	2
   525  0024                     _ADC_NIBBLE2:
   526  0024                     	ds	2
   527  0026                     _ADC_NIBBLE1:
   528  0026                     	ds	2
   529  0028                     _val_1:
   530  0028                     	ds	2
   531  002A                     _VAL_NIBBLE2:
   532  002A                     	ds	2
   533  002C                     _VAL_NIBBLE1:
   534  002C                     	ds	2
   535  002E                     _VAL_SWAP:
   536  002E                     	ds	2
   537  0030                     _VAL:
   538  0030                     	ds	2
   539  0032                     _cont_timer:
   540  0032                     	ds	1
   541                           
   542                           	psect	clrtext
   543  02C4                     clear_ram0:	
   544                           ;	Called with FSR containing the base address, and
   545                           ;	W with the last address+1
   546                           
   547  02C4  0064               	clrwdt	;clear the watchdog before getting into this loop
   548  02C5                     clrloop0:
   549  02C5  0180               	clrf	0	;clear RAM location pointed to by FSR
   550  02C6  0A84               	incf	4,f	;increment pointer
   551  02C7  0604               	xorwf	4,w	;XOR with final address
   552  02C8  1903               	btfsc	3,2	;have we reached the end yet?
   553  02C9  3400               	retlw	0	;all done for this memory range, return
   554  02CA  0604               	xorwf	4,w	;XOR again to restore value
   555  02CB  2AC5               	goto	clrloop0	;do the next byte
   556                           
   557                           	psect	cstackCOMMON
   558  0070                     __pcstackCOMMON:
   559  0070                     ?_Revision:
   560  0070                     ??_Revision:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_DisplayADC:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_setup:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_Config_INTERRUPT:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_TOGGLE_1:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_CONVERSION_ADC:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_initOsc:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_display:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ??_display:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_ISR:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_main:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_ADC:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ADC@ADRESL_:	
   597                           ; 2 bytes @ 0x0
   598                           
   599  0070                     ADC@ADRESH_:	
   600                           ; 1 bytes @ 0x0
   601                           
   602                           
   603                           ; 1 bytes @ 0x0
   604  0070                     	ds	2
   605  0072                     display@ADC_VALOR:
   606                           
   607                           ; 1 bytes @ 0x2
   608  0072                     	ds	1
   609  0073                     ??_DisplayADC:
   610  0073                     ??_ADC:	
   611                           ; 1 bytes @ 0x3
   612                           
   613  0073                     ??_ISR:	
   614                           ; 1 bytes @ 0x3
   615                           
   616                           
   617                           ; 1 bytes @ 0x3
   618  0073                     	ds	5
   619                           
   620                           	psect	cstackBANK0
   621  0033                     __pcstackBANK0:
   622  0033                     ??_Config_INTERRUPT:
   623  0033                     ??_TOGGLE_1:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0033                     ??_initOsc:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0033                     ?_SWAP_ADC:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0033                     ?_NIBBLE1_ADC:	
   633                           ; 2 bytes @ 0x0
   634                           
   635  0033                     ?_NIBBLE2_ADC:	
   636                           ; 2 bytes @ 0x0
   637                           
   638                           
   639                           ; 2 bytes @ 0x0
   640  0033                     	ds	2
   641  0035                     ??_SWAP_ADC:
   642  0035                     ??_NIBBLE1_ADC:	
   643                           ; 1 bytes @ 0x2
   644                           
   645  0035                     ??_NIBBLE2_ADC:	
   646                           ; 1 bytes @ 0x2
   647                           
   648  0035                     initOsc@IRCF:	
   649                           ; 1 bytes @ 0x2
   650                           
   651                           
   652                           ; 1 bytes @ 0x2
   653  0035                     	ds	1
   654  0036                     ??_setup:
   655                           
   656                           ; 1 bytes @ 0x3
   657  0036                     	ds	1
   658  0037                     NIBBLE1_ADC@VAL_ADC:
   659  0037                     NIBBLE2_ADC@VAL_SWAP:	
   660                           ; 1 bytes @ 0x4
   661                           
   662                           
   663                           ; 1 bytes @ 0x4
   664  0037                     	ds	3
   665  003A                     SWAP_ADC@VAL_ADC:
   666                           
   667                           ; 1 bytes @ 0x7
   668  003A                     	ds	1
   669  003B                     ??_CONVERSION_ADC:
   670  003B                     ??_main:	
   671                           ; 1 bytes @ 0x8
   672                           
   673                           
   674                           	psect	maintext
   675  0250                     __pmaintext:	
   676                           ; 1 bytes @ 0x8
   677 ;;
   678 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   679 ;;
   680 ;; *************** function _main *****************
   681 ;; Defined at:
   682 ;;		line 97 in file "Prueba2_lab2.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : B00/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   696 ;;      Params:         0       0       0       0       0
   697 ;;      Locals:         0       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0
   699 ;;      Totals:         0       0       0       0       0
   700 ;;Total ram usage:        0 bytes
   701 ;; Hardware stack levels required when called:    5
   702 ;; This function calls:
   703 ;;		_CONVERSION_ADC
   704 ;;		_Config_INTERRUPT
   705 ;;		_TOGGLE_1
   706 ;;		_setup
   707 ;; This function is called by:
   708 ;;		Startup code after reset
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           
   713                           ;psect for function _main
   714  0250                     _main:
   715  0250                     l1267:	
   716                           ;incstack = 0
   717                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   718                           
   719                           
   720                           ;Prueba2_lab2.c: 98:     setup();
   721  0250  120A  118A  2191  120A  118A  	fcall	_setup
   722  0255                     l1269:
   723                           
   724                           ;Prueba2_lab2.c: 99:     Config_INTERRUPT();
   725  0255  120A  118A  2270  120A  118A  	fcall	_Config_INTERRUPT
   726  025A                     l1271:
   727                           
   728                           ;Prueba2_lab2.c: 103:         if (cont_timer >= 1) {
   729  025A  1283               	bcf	3,5	;RP0=0, select bank0
   730  025B  1303               	bcf	3,6	;RP1=0, select bank0
   731  025C  0832               	movf	_cont_timer,w
   732  025D  1903               	btfsc	3,2
   733  025E  2A60               	goto	u361
   734  025F  2A61               	goto	u360
   735  0260                     u361:
   736  0260  2A67               	goto	l1277
   737  0261                     u360:
   738  0261                     l1273:
   739                           
   740                           ;Prueba2_lab2.c: 104:             cont_timer = 0;
   741  0261  01B2               	clrf	_cont_timer
   742  0262                     l1275:
   743                           
   744                           ;Prueba2_lab2.c: 105:             TOGGLE_1();
   745  0262  120A  118A  22A8  120A  118A  	fcall	_TOGGLE_1
   746  0267                     l1277:
   747                           
   748                           ;Prueba2_lab2.c: 107:         CONVERSION_ADC();
   749  0267  120A  118A  21B9  120A  118A  	fcall	_CONVERSION_ADC
   750  026C  2A5A               	goto	l1271
   751  026D  120A  118A  280E   	ljmp	start
   752  0270                     __end_of_main:
   753                           
   754                           	psect	text1
   755  0191                     __ptext1:	
   756 ;; *************** function _setup *****************
   757 ;; Defined at:
   758 ;;		line 157 in file "Prueba2_lab2.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   772 ;;      Params:         0       0       0       0       0
   773 ;;      Locals:         0       0       0       0       0
   774 ;;      Temps:          0       0       0       0       0
   775 ;;      Totals:         0       0       0       0       0
   776 ;;Total ram usage:        0 bytes
   777 ;; Hardware stack levels used:    1
   778 ;; Hardware stack levels required when called:    4
   779 ;; This function calls:
   780 ;;		_initOsc
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           
   787                           ;psect for function _setup
   788  0191                     _setup:
   789  0191                     l1165:	
   790                           ;incstack = 0
   791                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   792                           
   793                           
   794                           ;Prueba2_lab2.c: 158:     initOsc(0b00000110);
   795  0191  3006               	movlw	6
   796  0192  120A  118A  2133  120A  118A  	fcall	_initOsc
   797  0197                     l1167:
   798                           
   799                           ;Prueba2_lab2.c: 159:     ANSEL = 0b00000001;
   800  0197  3001               	movlw	1
   801  0198  1683               	bsf	3,5	;RP0=1, select bank3
   802  0199  1703               	bsf	3,6	;RP1=1, select bank3
   803  019A  0088               	movwf	8	;volatile
   804  019B                     l1169:
   805                           
   806                           ;Prueba2_lab2.c: 160:     ANSELH = 0;
   807  019B  0189               	clrf	9	;volatile
   808  019C                     l1171:
   809                           
   810                           ;Prueba2_lab2.c: 161:     TRISA = 0b00000001;
   811  019C  3001               	movlw	1
   812  019D  1683               	bsf	3,5	;RP0=1, select bank1
   813  019E  1303               	bcf	3,6	;RP1=0, select bank1
   814  019F  0085               	movwf	5	;volatile
   815  01A0                     l1173:
   816                           
   817                           ;Prueba2_lab2.c: 162:     PORTA = 0;
   818  01A0  1283               	bcf	3,5	;RP0=0, select bank0
   819  01A1  1303               	bcf	3,6	;RP1=0, select bank0
   820  01A2  0185               	clrf	5	;volatile
   821  01A3                     l1175:
   822                           
   823                           ;Prueba2_lab2.c: 163:     TRISB = 0b00000011;
   824  01A3  3003               	movlw	3
   825  01A4  1683               	bsf	3,5	;RP0=1, select bank1
   826  01A5  1303               	bcf	3,6	;RP1=0, select bank1
   827  01A6  0086               	movwf	6	;volatile
   828  01A7                     l1177:
   829                           
   830                           ;Prueba2_lab2.c: 164:     PORTB = 0;
   831  01A7  1283               	bcf	3,5	;RP0=0, select bank0
   832  01A8  1303               	bcf	3,6	;RP1=0, select bank0
   833  01A9  0186               	clrf	6	;volatile
   834  01AA                     l1179:
   835                           
   836                           ;Prueba2_lab2.c: 165:     PORTC = 0;
   837  01AA  0187               	clrf	7	;volatile
   838  01AB                     l1181:
   839                           
   840                           ;Prueba2_lab2.c: 166:     TRISC = 0;
   841  01AB  1683               	bsf	3,5	;RP0=1, select bank1
   842  01AC  1303               	bcf	3,6	;RP1=0, select bank1
   843  01AD  0187               	clrf	7	;volatile
   844  01AE                     l1183:
   845                           
   846                           ;Prueba2_lab2.c: 167:     TRISD = 0;
   847  01AE  0188               	clrf	8	;volatile
   848  01AF                     l1185:
   849                           
   850                           ;Prueba2_lab2.c: 168:     PORTD = 0;
   851  01AF  1283               	bcf	3,5	;RP0=0, select bank0
   852  01B0  1303               	bcf	3,6	;RP1=0, select bank0
   853  01B1  0188               	clrf	8	;volatile
   854  01B2                     l1187:
   855                           
   856                           ;Prueba2_lab2.c: 169:     TRISE = 0;
   857  01B2  1683               	bsf	3,5	;RP0=1, select bank1
   858  01B3  1303               	bcf	3,6	;RP1=0, select bank1
   859  01B4  0189               	clrf	9	;volatile
   860  01B5                     l1189:
   861                           
   862                           ;Prueba2_lab2.c: 170:     PORTE = 0;
   863  01B5  1283               	bcf	3,5	;RP0=0, select bank0
   864  01B6  1303               	bcf	3,6	;RP1=0, select bank0
   865  01B7  0189               	clrf	9	;volatile
   866  01B8                     l210:
   867  01B8  0008               	return
   868  01B9                     __end_of_setup:
   869                           
   870                           	psect	text2
   871  0133                     __ptext2:	
   872 ;; *************** function _initOsc *****************
   873 ;; Defined at:
   874 ;;		line 3 in file "Oscilador.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;  IRCF            1    wreg     unsigned char 
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  IRCF            1    2[BANK0 ] unsigned char 
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0       1       0       0       0
   890 ;;      Temps:          0       2       0       0       0
   891 ;;      Totals:         0       3       0       0       0
   892 ;;Total ram usage:        3 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    3
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_setup
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _initOsc
   904  0133                     _initOsc:
   905                           
   906                           ;incstack = 0
   907                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   908                           ;initOsc@IRCF stored from wreg
   909  0133  1283               	bcf	3,5	;RP0=0, select bank0
   910  0134  1303               	bcf	3,6	;RP1=0, select bank0
   911  0135  00B5               	movwf	initOsc@IRCF
   912  0136                     l1061:
   913                           
   914                           ;Oscilador.c: 5:     switch(IRCF){
   915  0136  296D               	goto	l1065
   916  0137                     l6:	
   917                           ;Oscilador.c: 6:         case 0:
   918                           
   919                           
   920                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   921  0137  1683               	bsf	3,5	;RP0=1, select bank1
   922  0138  1303               	bcf	3,6	;RP1=0, select bank1
   923  0139  130F               	bcf	15,6	;volatile
   924                           
   925                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   926  013A  128F               	bcf	15,5	;volatile
   927                           
   928                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   929  013B  120F               	bcf	15,4	;volatile
   930                           
   931                           ;Oscilador.c: 10:             break;
   932  013C  298F               	goto	l7
   933  013D                     l8:	
   934                           ;Oscilador.c: 11:          case 1:
   935                           
   936                           
   937                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   938  013D  1683               	bsf	3,5	;RP0=1, select bank1
   939  013E  1303               	bcf	3,6	;RP1=0, select bank1
   940  013F  130F               	bcf	15,6	;volatile
   941                           
   942                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   943  0140  128F               	bcf	15,5	;volatile
   944                           
   945                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   946  0141  160F               	bsf	15,4	;volatile
   947                           
   948                           ;Oscilador.c: 15:             break;
   949  0142  298F               	goto	l7
   950  0143                     l9:	
   951                           ;Oscilador.c: 16:         case 2:
   952                           
   953                           
   954                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   955  0143  1683               	bsf	3,5	;RP0=1, select bank1
   956  0144  1303               	bcf	3,6	;RP1=0, select bank1
   957  0145  130F               	bcf	15,6	;volatile
   958                           
   959                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   960  0146  168F               	bsf	15,5	;volatile
   961                           
   962                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   963  0147  120F               	bcf	15,4	;volatile
   964                           
   965                           ;Oscilador.c: 20:             break;
   966  0148  298F               	goto	l7
   967  0149                     l10:	
   968                           ;Oscilador.c: 21:         case 3:
   969                           
   970                           
   971                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   972  0149  1683               	bsf	3,5	;RP0=1, select bank1
   973  014A  1303               	bcf	3,6	;RP1=0, select bank1
   974  014B  130F               	bcf	15,6	;volatile
   975                           
   976                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   977  014C  168F               	bsf	15,5	;volatile
   978                           
   979                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   980  014D  160F               	bsf	15,4	;volatile
   981                           
   982                           ;Oscilador.c: 25:             break;
   983  014E  298F               	goto	l7
   984  014F                     l11:	
   985                           ;Oscilador.c: 26:         case 4:
   986                           
   987                           
   988                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   989  014F  1683               	bsf	3,5	;RP0=1, select bank1
   990  0150  1303               	bcf	3,6	;RP1=0, select bank1
   991  0151  170F               	bsf	15,6	;volatile
   992                           
   993                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   994  0152  128F               	bcf	15,5	;volatile
   995                           
   996                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   997  0153  120F               	bcf	15,4	;volatile
   998                           
   999                           ;Oscilador.c: 30:             break;
  1000  0154  298F               	goto	l7
  1001  0155                     l12:	
  1002                           ;Oscilador.c: 31:         case 5:
  1003                           
  1004                           
  1005                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1006  0155  1683               	bsf	3,5	;RP0=1, select bank1
  1007  0156  1303               	bcf	3,6	;RP1=0, select bank1
  1008  0157  170F               	bsf	15,6	;volatile
  1009                           
  1010                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1011  0158  128F               	bcf	15,5	;volatile
  1012                           
  1013                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1014  0159  160F               	bsf	15,4	;volatile
  1015                           
  1016                           ;Oscilador.c: 35:             break;
  1017  015A  298F               	goto	l7
  1018  015B                     l13:	
  1019                           ;Oscilador.c: 36:         case 6:
  1020                           
  1021                           
  1022                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1023  015B  1683               	bsf	3,5	;RP0=1, select bank1
  1024  015C  1303               	bcf	3,6	;RP1=0, select bank1
  1025  015D  170F               	bsf	15,6	;volatile
  1026                           
  1027                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1028  015E  168F               	bsf	15,5	;volatile
  1029                           
  1030                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1031  015F  120F               	bcf	15,4	;volatile
  1032                           
  1033                           ;Oscilador.c: 40:             break;
  1034  0160  298F               	goto	l7
  1035  0161                     l14:	
  1036                           ;Oscilador.c: 41:         case 7:
  1037                           
  1038                           
  1039                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1040  0161  1683               	bsf	3,5	;RP0=1, select bank1
  1041  0162  1303               	bcf	3,6	;RP1=0, select bank1
  1042  0163  170F               	bsf	15,6	;volatile
  1043                           
  1044                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1045  0164  168F               	bsf	15,5	;volatile
  1046                           
  1047                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1048  0165  160F               	bsf	15,4	;volatile
  1049                           
  1050                           ;Oscilador.c: 45:             break;
  1051  0166  298F               	goto	l7
  1052  0167                     l15:	
  1053                           ;Oscilador.c: 46:         default:
  1054                           
  1055                           
  1056                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1057  0167  1683               	bsf	3,5	;RP0=1, select bank1
  1058  0168  1303               	bcf	3,6	;RP1=0, select bank1
  1059  0169  170F               	bsf	15,6	;volatile
  1060                           
  1061                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1062  016A  168F               	bsf	15,5	;volatile
  1063                           
  1064                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1065  016B  120F               	bcf	15,4	;volatile
  1066                           
  1067                           ;Oscilador.c: 50:             break;
  1068  016C  298F               	goto	l7
  1069  016D                     l1065:
  1070  016D  0835               	movf	initOsc@IRCF,w
  1071  016E  00B3               	movwf	??_initOsc
  1072  016F  01B4               	clrf	??_initOsc+1
  1073                           
  1074                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1075                           ; Switch size 1, requested type "simple"
  1076                           ; Number of cases is 1, Range of values is 0 to 0
  1077                           ; switch strategies available:
  1078                           ; Name         Instructions Cycles
  1079                           ; simple_byte            4     3 (average)
  1080                           ; direct_byte           11     8 (fixed)
  1081                           ; jumptable            260     6 (fixed)
  1082                           ;	Chosen strategy is simple_byte
  1083  0170  0834               	movf	??_initOsc+1,w
  1084  0171  3A00               	xorlw	0	; case 0
  1085  0172  1903               	skipnz
  1086  0173  2975               	goto	l1329
  1087  0174  2967               	goto	l15
  1088  0175                     l1329:
  1089                           
  1090                           ; Switch size 1, requested type "simple"
  1091                           ; Number of cases is 8, Range of values is 0 to 7
  1092                           ; switch strategies available:
  1093                           ; Name         Instructions Cycles
  1094                           ; simple_byte           25    13 (average)
  1095                           ; direct_byte           32     8 (fixed)
  1096                           ; jumptable            260     6 (fixed)
  1097                           ;	Chosen strategy is simple_byte
  1098  0175  0833               	movf	??_initOsc,w
  1099  0176  3A00               	xorlw	0	; case 0
  1100  0177  1903               	skipnz
  1101  0178  2937               	goto	l6
  1102  0179  3A01               	xorlw	1	; case 1
  1103  017A  1903               	skipnz
  1104  017B  293D               	goto	l8
  1105  017C  3A03               	xorlw	3	; case 2
  1106  017D  1903               	skipnz
  1107  017E  2943               	goto	l9
  1108  017F  3A01               	xorlw	1	; case 3
  1109  0180  1903               	skipnz
  1110  0181  2949               	goto	l10
  1111  0182  3A07               	xorlw	7	; case 4
  1112  0183  1903               	skipnz
  1113  0184  294F               	goto	l11
  1114  0185  3A01               	xorlw	1	; case 5
  1115  0186  1903               	skipnz
  1116  0187  2955               	goto	l12
  1117  0188  3A03               	xorlw	3	; case 6
  1118  0189  1903               	skipnz
  1119  018A  295B               	goto	l13
  1120  018B  3A01               	xorlw	1	; case 7
  1121  018C  1903               	skipnz
  1122  018D  2961               	goto	l14
  1123  018E  2967               	goto	l15
  1124  018F                     l7:
  1125                           
  1126                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1127  018F  140F               	bsf	15,0	;volatile
  1128  0190                     l16:
  1129  0190  0008               	return
  1130  0191                     __end_of_initOsc:
  1131                           
  1132                           	psect	text3
  1133  02A8                     __ptext3:	
  1134 ;; *************** function _TOGGLE_1 *****************
  1135 ;; Defined at:
  1136 ;;		line 114 in file "Prueba2_lab2.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0
  1153 ;;      Totals:         0       0       0       0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    3
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function _TOGGLE_1
  1166  02A8                     _TOGGLE_1:
  1167  02A8                     l1201:	
  1168                           ;incstack = 0
  1169                           ; Regs used in _TOGGLE_1: [wreg+status,2+status,0]
  1170                           
  1171                           
  1172                           ;Prueba2_lab2.c: 115:     if (toggle == 1) {
  1173  02A8  0378               	decf	_toggle,w
  1174  02A9  1D03               	btfss	3,2
  1175  02AA  2AAC               	goto	u241
  1176  02AB  2AAD               	goto	u240
  1177  02AC                     u241:
  1178  02AC  2AAF               	goto	l1205
  1179  02AD                     u240:
  1180  02AD                     l1203:
  1181                           
  1182                           ;Prueba2_lab2.c: 116:         toggle = 0;
  1183  02AD  01F8               	clrf	_toggle
  1184                           
  1185                           ;Prueba2_lab2.c: 117:     } else if (toggle == 0) {
  1186  02AE  2AB6               	goto	l192
  1187  02AF                     l1205:
  1188  02AF  0878               	movf	_toggle,w
  1189  02B0  1D03               	btfss	3,2
  1190  02B1  2AB3               	goto	u251
  1191  02B2  2AB4               	goto	u250
  1192  02B3                     u251:
  1193  02B3  2AB6               	goto	l192
  1194  02B4                     u250:
  1195  02B4                     l1207:
  1196                           
  1197                           ;Prueba2_lab2.c: 118:         toggle = 1;
  1198  02B4  01F8               	clrf	_toggle
  1199  02B5  0AF8               	incf	_toggle,f
  1200  02B6                     l192:
  1201  02B6  0008               	return
  1202  02B7                     __end_of_TOGGLE_1:
  1203                           
  1204                           	psect	text4
  1205  0270                     __ptext4:	
  1206 ;; *************** function _Config_INTERRUPT *****************
  1207 ;; Defined at:
  1208 ;;		line 173 in file "Prueba2_lab2.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;		None
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;		None
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		wreg, status,2
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1222 ;;      Params:         0       0       0       0       0
  1223 ;;      Locals:         0       0       0       0       0
  1224 ;;      Temps:          0       0       0       0       0
  1225 ;;      Totals:         0       0       0       0       0
  1226 ;;Total ram usage:        0 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; Hardware stack levels required when called:    3
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_main
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           
  1237                           ;psect for function _Config_INTERRUPT
  1238  0270                     _Config_INTERRUPT:
  1239  0270                     l1191:	
  1240                           ;incstack = 0
  1241                           ; Regs used in _Config_INTERRUPT: [wreg+status,2]
  1242                           
  1243                           
  1244                           ;Prueba2_lab2.c: 174:     TMR0 = 6;
  1245  0270  3006               	movlw	6
  1246  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0273  0081               	movwf	1	;volatile
  1249                           
  1250                           ;Prueba2_lab2.c: 175:     OPTION_REG = 0b10001000;
  1251  0274  3088               	movlw	136
  1252  0275  1683               	bsf	3,5	;RP0=1, select bank1
  1253  0276  1303               	bcf	3,6	;RP1=0, select bank1
  1254  0277  0081               	movwf	1	;volatile
  1255                           
  1256                           ;Prueba2_lab2.c: 176:     INTCON = 0b10101001;
  1257  0278  30A9               	movlw	169
  1258  0279  008B               	movwf	11	;volatile
  1259                           
  1260                           ;Prueba2_lab2.c: 177:     IOCB = 0b00000011;
  1261  027A  3003               	movlw	3
  1262  027B  0096               	movwf	22	;volatile
  1263  027C                     l1193:
  1264                           
  1265                           ;Prueba2_lab2.c: 178:     PIE1bits.ADIE = 1;
  1266  027C  170C               	bsf	12,6	;volatile
  1267  027D                     l1195:
  1268                           
  1269                           ;Prueba2_lab2.c: 179:     PIR1bits.ADIF = 1;
  1270  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1271  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1272  027F  170C               	bsf	12,6	;volatile
  1273  0280                     l1197:
  1274                           
  1275                           ;Prueba2_lab2.c: 180:     ADCON1 = 0b00000000;
  1276  0280  1683               	bsf	3,5	;RP0=1, select bank1
  1277  0281  1303               	bcf	3,6	;RP1=0, select bank1
  1278  0282  019F               	clrf	31	;volatile
  1279  0283                     l1199:
  1280                           
  1281                           ;Prueba2_lab2.c: 181:     ADCON0 = 0b01000001;
  1282  0283  3041               	movlw	65
  1283  0284  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0285  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0286  009F               	movwf	31	;volatile
  1286  0287                     l213:
  1287  0287  0008               	return
  1288  0288                     __end_of_Config_INTERRUPT:
  1289                           
  1290                           	psect	text5
  1291  01B9                     __ptext5:	
  1292 ;; *************** function _CONVERSION_ADC *****************
  1293 ;; Defined at:
  1294 ;;		line 140 in file "Prueba2_lab2.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2, status,0, pclath, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1308 ;;      Params:         0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0
  1311 ;;      Totals:         0       0       0       0       0
  1312 ;;Total ram usage:        0 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    4
  1315 ;; This function calls:
  1316 ;;		_NIBBLE1_ADC
  1317 ;;		_NIBBLE2_ADC
  1318 ;;		_SWAP_ADC
  1319 ;; This function is called by:
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           
  1325                           ;psect for function _CONVERSION_ADC
  1326  01B9                     _CONVERSION_ADC:
  1327  01B9                     l1209:	
  1328                           ;incstack = 0
  1329                           ; Regs used in _CONVERSION_ADC: [wreg+status,2+status,0+pclath+cstack]
  1330                           
  1331                           
  1332                           ;Prueba2_lab2.c: 141:     ADC_SWAP = SWAP_ADC(ADC_VALOR);
  1333  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1334  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1335  01BB  0822               	movf	_ADC_VALOR,w
  1336  01BC  120A  118A  21E0  120A  118A  	fcall	_SWAP_ADC
  1337  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1338  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1339  01C3  0834               	movf	?_SWAP_ADC+1,w
  1340  01C4  00A1               	movwf	_ADC_SWAP+1
  1341  01C5  0833               	movf	?_SWAP_ADC,w
  1342  01C6  00A0               	movwf	_ADC_SWAP
  1343  01C7                     l1211:
  1344                           
  1345                           ;Prueba2_lab2.c: 142:     ADC_NIBBLE1 = NIBBLE1_ADC(ADC_VALOR);
  1346  01C7  0822               	movf	_ADC_VALOR,w
  1347  01C8  120A  118A  2298  120A  118A  	fcall	_NIBBLE1_ADC
  1348  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1349  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1350  01CF  0834               	movf	?_NIBBLE1_ADC+1,w
  1351  01D0  00A7               	movwf	_ADC_NIBBLE1+1
  1352  01D1  0833               	movf	?_NIBBLE1_ADC,w
  1353  01D2  00A6               	movwf	_ADC_NIBBLE1
  1354  01D3                     l1213:
  1355                           
  1356                           ;Prueba2_lab2.c: 143:     ADC_NIBBLE2 = NIBBLE2_ADC(ADC_SWAP);
  1357  01D3  0820               	movf	_ADC_SWAP,w
  1358  01D4  120A  118A  2288  120A  118A  	fcall	_NIBBLE2_ADC
  1359  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1360  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1361  01DB  0834               	movf	?_NIBBLE2_ADC+1,w
  1362  01DC  00A5               	movwf	_ADC_NIBBLE2+1
  1363  01DD  0833               	movf	?_NIBBLE2_ADC,w
  1364  01DE  00A4               	movwf	_ADC_NIBBLE2
  1365  01DF                     l201:
  1366  01DF  0008               	return
  1367  01E0                     __end_of_CONVERSION_ADC:
  1368                           
  1369                           	psect	text6
  1370  01E0                     __ptext6:	
  1371 ;; *************** function _SWAP_ADC *****************
  1372 ;; Defined at:
  1373 ;;		line 14 in file "Config_ADC.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  VAL_ADC         1    wreg     unsigned char 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  VAL_ADC         1    7[BANK0 ] unsigned char 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  2    0[BANK0 ] int 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2, status,0
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       2       0       0       0
  1388 ;;      Locals:         0       1       0       0       0
  1389 ;;      Temps:          0       5       0       0       0
  1390 ;;      Totals:         0       8       0       0       0
  1391 ;;Total ram usage:        8 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    3
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_CONVERSION_ADC
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function _SWAP_ADC
  1403  01E0                     _SWAP_ADC:
  1404                           
  1405                           ;incstack = 0
  1406                           ; Regs used in _SWAP_ADC: [wreg+status,2+status,0]
  1407                           ;SWAP_ADC@VAL_ADC stored from wreg
  1408  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1409  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1410  01E2  00BA               	movwf	SWAP_ADC@VAL_ADC
  1411  01E3                     l1121:
  1412                           
  1413                           ;Config_ADC.c: 15:     VAL_SWAP = (((VAL_ADC & 0x0F)<<4) | ((VAL_ADC & 0xF0)>>4));
  1414  01E3  083A               	movf	SWAP_ADC@VAL_ADC,w
  1415  01E4  00B5               	movwf	??_SWAP_ADC
  1416  01E5  3004               	movlw	4
  1417  01E6                     u195:
  1418  01E6  1003               	clrc
  1419  01E7  0CB5               	rrf	??_SWAP_ADC,f
  1420  01E8  3EFF               	addlw	-1
  1421  01E9  1D03               	skipz
  1422  01EA  29E6               	goto	u195
  1423  01EB  0835               	movf	??_SWAP_ADC,w
  1424  01EC  390F               	andlw	15
  1425  01ED  00B6               	movwf	??_SWAP_ADC+1
  1426  01EE  01B7               	clrf	??_SWAP_ADC+2
  1427  01EF  083A               	movf	SWAP_ADC@VAL_ADC,w
  1428  01F0  390F               	andlw	15
  1429  01F1  00B8               	movwf	??_SWAP_ADC+3
  1430  01F2  01B9               	clrf	??_SWAP_ADC+4
  1431  01F3  0EB8               	swapf	??_SWAP_ADC+3,f
  1432  01F4  0EB9               	swapf	??_SWAP_ADC+4,f
  1433  01F5  30F0               	movlw	240
  1434  01F6  05B9               	andwf	??_SWAP_ADC+4,f
  1435  01F7  0838               	movf	??_SWAP_ADC+3,w
  1436  01F8  390F               	andlw	15
  1437  01F9  04B9               	iorwf	??_SWAP_ADC+4,f
  1438  01FA  30F0               	movlw	240
  1439  01FB  05B8               	andwf	??_SWAP_ADC+3,f
  1440  01FC  0836               	movf	??_SWAP_ADC+1,w
  1441  01FD  0438               	iorwf	??_SWAP_ADC+3,w
  1442  01FE  00AE               	movwf	_VAL_SWAP
  1443  01FF  0837               	movf	??_SWAP_ADC+2,w
  1444  0200  0439               	iorwf	??_SWAP_ADC+4,w
  1445  0201  00AF               	movwf	_VAL_SWAP+1
  1446  0202                     l1123:
  1447                           
  1448                           ;Config_ADC.c: 16:     return VAL_SWAP;
  1449  0202  082F               	movf	_VAL_SWAP+1,w
  1450  0203  00B4               	movwf	?_SWAP_ADC+1
  1451  0204  082E               	movf	_VAL_SWAP,w
  1452  0205  00B3               	movwf	?_SWAP_ADC
  1453  0206                     l58:
  1454  0206  0008               	return
  1455  0207                     __end_of_SWAP_ADC:
  1456                           
  1457                           	psect	text7
  1458  0288                     __ptext7:	
  1459 ;; *************** function _NIBBLE2_ADC *****************
  1460 ;; Defined at:
  1461 ;;		line 24 in file "Config_ADC.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  VAL_SWAP        1    wreg     unsigned char 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  VAL_SWAP        1    4[BANK0 ] unsigned char 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  2    0[BANK0 ] int 
  1468 ;; Registers used:
  1469 ;;		wreg, status,2
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1475 ;;      Params:         0       2       0       0       0
  1476 ;;      Locals:         0       1       0       0       0
  1477 ;;      Temps:          0       2       0       0       0
  1478 ;;      Totals:         0       5       0       0       0
  1479 ;;Total ram usage:        5 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    3
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_CONVERSION_ADC
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           
  1490                           ;psect for function _NIBBLE2_ADC
  1491  0288                     _NIBBLE2_ADC:
  1492                           
  1493                           ;incstack = 0
  1494                           ; Regs used in _NIBBLE2_ADC: [wreg+status,2]
  1495                           ;NIBBLE2_ADC@VAL_SWAP stored from wreg
  1496  0288  1283               	bcf	3,5	;RP0=0, select bank0
  1497  0289  1303               	bcf	3,6	;RP1=0, select bank0
  1498  028A  00B7               	movwf	NIBBLE2_ADC@VAL_SWAP
  1499  028B                     l1133:
  1500                           
  1501                           ;Config_ADC.c: 25:     VAL_NIBBLE2 = (VAL_SWAP & 15);
  1502  028B  0837               	movf	NIBBLE2_ADC@VAL_SWAP,w
  1503  028C  390F               	andlw	15
  1504  028D  00B5               	movwf	??_NIBBLE2_ADC
  1505  028E  01B6               	clrf	??_NIBBLE2_ADC+1
  1506  028F  0835               	movf	??_NIBBLE2_ADC,w
  1507  0290  00AA               	movwf	_VAL_NIBBLE2
  1508  0291  0836               	movf	??_NIBBLE2_ADC+1,w
  1509  0292  00AB               	movwf	_VAL_NIBBLE2+1
  1510  0293                     l1135:
  1511                           
  1512                           ;Config_ADC.c: 26:     return VAL_NIBBLE2;
  1513  0293  082B               	movf	_VAL_NIBBLE2+1,w
  1514  0294  00B4               	movwf	?_NIBBLE2_ADC+1
  1515  0295  082A               	movf	_VAL_NIBBLE2,w
  1516  0296  00B3               	movwf	?_NIBBLE2_ADC
  1517  0297                     l64:
  1518  0297  0008               	return
  1519  0298                     __end_of_NIBBLE2_ADC:
  1520                           
  1521                           	psect	text8
  1522  0298                     __ptext8:	
  1523 ;; *************** function _NIBBLE1_ADC *****************
  1524 ;; Defined at:
  1525 ;;		line 19 in file "Config_ADC.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  VAL_ADC         1    wreg     unsigned char 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  VAL_ADC         1    4[BANK0 ] unsigned char 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  2    0[BANK0 ] int 
  1532 ;; Registers used:
  1533 ;;		wreg, status,2
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1539 ;;      Params:         0       2       0       0       0
  1540 ;;      Locals:         0       1       0       0       0
  1541 ;;      Temps:          0       2       0       0       0
  1542 ;;      Totals:         0       5       0       0       0
  1543 ;;Total ram usage:        5 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; Hardware stack levels required when called:    3
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_CONVERSION_ADC
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           
  1554                           ;psect for function _NIBBLE1_ADC
  1555  0298                     _NIBBLE1_ADC:
  1556                           
  1557                           ;incstack = 0
  1558                           ; Regs used in _NIBBLE1_ADC: [wreg+status,2]
  1559                           ;NIBBLE1_ADC@VAL_ADC stored from wreg
  1560  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0299  1303               	bcf	3,6	;RP1=0, select bank0
  1562  029A  00B7               	movwf	NIBBLE1_ADC@VAL_ADC
  1563  029B                     l1127:
  1564                           
  1565                           ;Config_ADC.c: 20:     VAL_NIBBLE1 = (VAL_ADC & 15);
  1566  029B  0837               	movf	NIBBLE1_ADC@VAL_ADC,w
  1567  029C  390F               	andlw	15
  1568  029D  00B5               	movwf	??_NIBBLE1_ADC
  1569  029E  01B6               	clrf	??_NIBBLE1_ADC+1
  1570  029F  0835               	movf	??_NIBBLE1_ADC,w
  1571  02A0  00AC               	movwf	_VAL_NIBBLE1
  1572  02A1  0836               	movf	??_NIBBLE1_ADC+1,w
  1573  02A2  00AD               	movwf	_VAL_NIBBLE1+1
  1574  02A3                     l1129:
  1575                           
  1576                           ;Config_ADC.c: 21:     return VAL_NIBBLE1;
  1577  02A3  082D               	movf	_VAL_NIBBLE1+1,w
  1578  02A4  00B4               	movwf	?_NIBBLE1_ADC+1
  1579  02A5  082C               	movf	_VAL_NIBBLE1,w
  1580  02A6  00B3               	movwf	?_NIBBLE1_ADC
  1581  02A7                     l61:
  1582  02A7  0008               	return
  1583  02A8                     __end_of_NIBBLE1_ADC:
  1584                           
  1585                           	psect	text9
  1586  00B1                     __ptext9:	
  1587 ;; *************** function _ISR *****************
  1588 ;; Defined at:
  1589 ;;		line 52 in file "Prueba2_lab2.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1603 ;;      Params:         0       0       0       0       0
  1604 ;;      Locals:         0       0       0       0       0
  1605 ;;      Temps:          5       0       0       0       0
  1606 ;;      Totals:         5       0       0       0       0
  1607 ;;Total ram usage:        5 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:    2
  1610 ;; This function calls:
  1611 ;;		_ADC
  1612 ;;		_DisplayADC
  1613 ;;		_Revision
  1614 ;; This function is called by:
  1615 ;;		Interrupt level 1
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           
  1620                           ;psect for function _ISR
  1621  00B1                     _ISR:
  1622  00B1                     i1l1215:
  1623                           
  1624                           ;Prueba2_lab2.c: 54:     if (INTCONbits.RBIF == 1){
  1625  00B1  1C0B               	btfss	11,0	;volatile
  1626  00B2  28B4               	goto	u26_21
  1627  00B3  28B5               	goto	u26_20
  1628  00B4                     u26_21:
  1629  00B4  28E2               	goto	i1l1243
  1630  00B5                     u26_20:
  1631  00B5                     i1l1217:
  1632                           
  1633                           ;Prueba2_lab2.c: 56:             if (PORTBbits.RB0 == 1){
  1634  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1635  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1636  00B7  1C06               	btfss	6,0	;volatile
  1637  00B8  28BA               	goto	u27_21
  1638  00B9  28BB               	goto	u27_20
  1639  00BA                     u27_21:
  1640  00BA  28BD               	goto	i1l168
  1641  00BB                     u27_20:
  1642  00BB                     i1l1219:
  1643                           
  1644                           ;Prueba2_lab2.c: 57:                 debouncing1 = 1;
  1645  00BB  01FA               	clrf	_debouncing1
  1646  00BC  0AFA               	incf	_debouncing1,f
  1647  00BD                     i1l168:	
  1648                           ;Prueba2_lab2.c: 59:             }
  1649                           
  1650                           
  1651                           ;Prueba2_lab2.c: 60:             if (PORTBbits.RB1 == 1){
  1652  00BD  1C86               	btfss	6,1	;volatile
  1653  00BE  28C0               	goto	u28_21
  1654  00BF  28C1               	goto	u28_20
  1655  00C0                     u28_21:
  1656  00C0  28C3               	goto	i1l169
  1657  00C1                     u28_20:
  1658  00C1                     i1l1221:
  1659                           
  1660                           ;Prueba2_lab2.c: 61:                 debouncing2 = 1;
  1661  00C1  01F9               	clrf	_debouncing2
  1662  00C2  0AF9               	incf	_debouncing2,f
  1663  00C3                     i1l169:	
  1664                           ;Prueba2_lab2.c: 63:             }
  1665                           
  1666                           
  1667                           ;Prueba2_lab2.c: 64:             if(PORTBbits.RB0 == 0 && debouncing1 == 1){
  1668  00C3  1806               	btfsc	6,0	;volatile
  1669  00C4  28C6               	goto	u29_21
  1670  00C5  28C7               	goto	u29_20
  1671  00C6                     u29_21:
  1672  00C6  28D3               	goto	i1l1231
  1673  00C7                     u29_20:
  1674  00C7                     i1l1223:
  1675  00C7  037A               	decf	_debouncing1,w
  1676  00C8  1D03               	btfss	3,2
  1677  00C9  28CB               	goto	u30_21
  1678  00CA  28CC               	goto	u30_20
  1679  00CB                     u30_21:
  1680  00CB  28D3               	goto	i1l1231
  1681  00CC                     u30_20:
  1682  00CC                     i1l1225:
  1683                           
  1684                           ;Prueba2_lab2.c: 65:                 contador++;
  1685  00CC  3001               	movlw	1
  1686  00CD  00F3               	movwf	??_ISR
  1687  00CE  0873               	movf	??_ISR,w
  1688  00CF  07FB               	addwf	_contador,f
  1689  00D0                     i1l1227:
  1690                           
  1691                           ;Prueba2_lab2.c: 66:                 PORTC = contador;
  1692  00D0  087B               	movf	_contador,w
  1693  00D1  0087               	movwf	7	;volatile
  1694  00D2                     i1l1229:
  1695                           
  1696                           ;Prueba2_lab2.c: 67:                 debouncing1 = 0;
  1697  00D2  01FA               	clrf	_debouncing1
  1698  00D3                     i1l1231:
  1699                           
  1700                           ;Prueba2_lab2.c: 69:             if(PORTBbits.RB1 == 0 && debouncing2 == 1){
  1701  00D3  1886               	btfsc	6,1	;volatile
  1702  00D4  28D6               	goto	u31_21
  1703  00D5  28D7               	goto	u31_20
  1704  00D6                     u31_21:
  1705  00D6  28E1               	goto	i1l1241
  1706  00D7                     u31_20:
  1707  00D7                     i1l1233:
  1708  00D7  0379               	decf	_debouncing2,w
  1709  00D8  1D03               	btfss	3,2
  1710  00D9  28DB               	goto	u32_21
  1711  00DA  28DC               	goto	u32_20
  1712  00DB                     u32_21:
  1713  00DB  28E1               	goto	i1l1241
  1714  00DC                     u32_20:
  1715  00DC                     i1l1235:
  1716                           
  1717                           ;Prueba2_lab2.c: 70:                 contador--;
  1718  00DC  3001               	movlw	1
  1719  00DD  02FB               	subwf	_contador,f
  1720  00DE                     i1l1237:
  1721                           
  1722                           ;Prueba2_lab2.c: 71:                 PORTC = contador;
  1723  00DE  087B               	movf	_contador,w
  1724  00DF  0087               	movwf	7	;volatile
  1725  00E0                     i1l1239:
  1726                           
  1727                           ;Prueba2_lab2.c: 72:                 debouncing2 = 0;
  1728  00E0  01F9               	clrf	_debouncing2
  1729  00E1                     i1l1241:
  1730                           
  1731                           ;Prueba2_lab2.c: 74:             INTCONbits.RBIF = 0;
  1732  00E1  100B               	bcf	11,0	;volatile
  1733  00E2                     i1l1243:
  1734                           
  1735                           ;Prueba2_lab2.c: 77:     if (PIR1bits.ADIF) {
  1736  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1737  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1738  00E4  1F0C               	btfss	12,6	;volatile
  1739  00E5  28E7               	goto	u33_21
  1740  00E6  28E8               	goto	u33_20
  1741  00E7                     u33_21:
  1742  00E7  2918               	goto	i1l172
  1743  00E8                     u33_20:
  1744  00E8                     i1l1245:
  1745                           
  1746                           ;Prueba2_lab2.c: 78:         PIR1bits.ADIF = 0;
  1747  00E8  130C               	bcf	12,6	;volatile
  1748  00E9                     i1l1247:
  1749                           
  1750                           ;Prueba2_lab2.c: 79:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1751  00E9  3003               	movlw	3
  1752  00EA  00F4               	movwf	??_ISR+1
  1753  00EB  3097               	movlw	151
  1754  00EC  00F3               	movwf	??_ISR
  1755  00ED                     u37_27:
  1756  00ED  0BF3               	decfsz	??_ISR,f
  1757  00EE  28ED               	goto	u37_27
  1758  00EF  0BF4               	decfsz	??_ISR+1,f
  1759  00F0  28ED               	goto	u37_27
  1760  00F1  28F2               	nop2
  1761  00F2                     i1l1249:
  1762                           
  1763                           ;Prueba2_lab2.c: 80:         ADCON0bits.GO = 1;
  1764  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1765  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1766  00F4  149F               	bsf	31,1	;volatile
  1767                           
  1768                           ;Prueba2_lab2.c: 81:         while (ADCON0bits.GO != 0) {
  1769  00F5  2912               	goto	i1l1257
  1770  00F6                     i1l1251:
  1771                           
  1772                           ;Prueba2_lab2.c: 82:             ADC_VALOR = ADC(ADRESL, ADRESH);
  1773  00F6  081E               	movf	30,w	;volatile
  1774  00F7  00F3               	movwf	??_ISR
  1775  00F8  0873               	movf	??_ISR,w
  1776  00F9  00F0               	movwf	ADC@ADRESH_
  1777  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  1778  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  1779  00FC  081E               	movf	30,w	;volatile
  1780  00FD  120A  118A  22B7  120A  118A  	fcall	_ADC
  1781  0102  0871               	movf	?_ADC+1,w
  1782  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1783  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1784  0105  00A3               	movwf	_ADC_VALOR+1
  1785  0106  0870               	movf	?_ADC,w
  1786  0107  00A2               	movwf	_ADC_VALOR
  1787  0108                     i1l1253:
  1788                           
  1789                           ;Prueba2_lab2.c: 83:             Revision();
  1790  0108  120A  118A  2207  120A  118A  	fcall	_Revision
  1791  010D                     i1l1255:
  1792                           
  1793                           ;Prueba2_lab2.c: 84:             DisplayADC();
  1794  010D  120A  118A  222D  120A  118A  	fcall	_DisplayADC
  1795  0112                     i1l1257:
  1796                           
  1797                           ;Prueba2_lab2.c: 81:         while (ADCON0bits.GO != 0) {
  1798  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1800  0114  189F               	btfsc	31,1	;volatile
  1801  0115  2917               	goto	u34_21
  1802  0116  2918               	goto	u34_20
  1803  0117                     u34_21:
  1804  0117  28F6               	goto	i1l1251
  1805  0118                     u34_20:
  1806  0118                     i1l172:	
  1807                           ;Prueba2_lab2.c: 86:     }
  1808                           
  1809                           
  1810                           ;Prueba2_lab2.c: 88:     if (INTCONbits.TMR0IF == 1) {
  1811  0118  1D0B               	btfss	11,2	;volatile
  1812  0119  291B               	goto	u35_21
  1813  011A  291C               	goto	u35_20
  1814  011B                     u35_21:
  1815  011B  292A               	goto	i1l177
  1816  011C                     u35_20:
  1817  011C                     i1l1259:
  1818                           
  1819                           ;Prueba2_lab2.c: 89:         INTCONbits.TMR0IF = 0;
  1820  011C  110B               	bcf	11,2	;volatile
  1821  011D                     i1l1261:
  1822                           
  1823                           ;Prueba2_lab2.c: 90:         TMR0 = 6;
  1824  011D  3006               	movlw	6
  1825  011E  0081               	movwf	1	;volatile
  1826  011F                     i1l1263:
  1827                           
  1828                           ;Prueba2_lab2.c: 91:         Revision();
  1829  011F  120A  118A  2207  120A  118A  	fcall	_Revision
  1830  0124                     i1l1265:
  1831                           
  1832                           ;Prueba2_lab2.c: 92:         cont_timer++;
  1833  0124  3001               	movlw	1
  1834  0125  00F3               	movwf	??_ISR
  1835  0126  0873               	movf	??_ISR,w
  1836  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1837  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1838  0129  07B2               	addwf	_cont_timer,f
  1839  012A                     i1l177:
  1840  012A  0877               	movf	??_ISR+4,w
  1841  012B  008A               	movwf	10
  1842  012C  0876               	movf	??_ISR+3,w
  1843  012D  0084               	movwf	4
  1844  012E  0E75               	swapf	??_ISR+2,w
  1845  012F  0083               	movwf	3
  1846  0130  0EFE               	swapf	btemp,f
  1847  0131  0E7E               	swapf	btemp,w
  1848  0132  0009               	retfie
  1849  0133                     __end_of_ISR:
  1850                           
  1851                           	psect	intentry
  1852  0004                     __pintentry:	
  1853                           ;incstack = 0
  1854                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1855                           
  1856  0004                     interrupt_function:
  1857  007E                     saved_w	set	btemp
  1858  0004  00FE               	movwf	btemp
  1859  0005  0E03               	swapf	3,w
  1860  0006  00F5               	movwf	??_ISR+2
  1861  0007  0804               	movf	4,w
  1862  0008  00F6               	movwf	??_ISR+3
  1863  0009  080A               	movf	10,w
  1864  000A  00F7               	movwf	??_ISR+4
  1865  000B  120A  118A  28B1   	ljmp	_ISR
  1866                           
  1867                           	psect	text10
  1868  0207                     __ptext10:	
  1869 ;; *************** function _Revision *****************
  1870 ;; Defined at:
  1871 ;;		line 147 in file "Prueba2_lab2.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       0       0       0       0
  1886 ;;      Locals:         0       0       0       0       0
  1887 ;;      Temps:          1       0       0       0       0
  1888 ;;      Totals:         1       0       0       0       0
  1889 ;;Total ram usage:        1 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_ISR
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           
  1899                           ;psect for function _Revision
  1900  0207                     _Revision:
  1901  0207                     i1l1143:	
  1902                           ;incstack = 0
  1903                           ; Regs used in _Revision: [wreg]
  1904                           
  1905                           
  1906                           ;Prueba2_lab2.c: 148:     if (ADC_VALOR >= contador) {
  1907  0207  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0208  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0209  0823               	movf	_ADC_VALOR+1,w
  1910  020A  3A80               	xorlw	128
  1911  020B  00F0               	movwf	??_Revision
  1912  020C  3080               	movlw	128
  1913  020D  0270               	subwf	??_Revision,w
  1914  020E  1D03               	skipz
  1915  020F  2A12               	goto	u20_25
  1916  0210  087B               	movf	_contador,w
  1917  0211  0222               	subwf	_ADC_VALOR,w
  1918  0212                     u20_25:
  1919  0212  1C03               	skipc
  1920  0213  2A15               	goto	u20_21
  1921  0214  2A16               	goto	u20_20
  1922  0215                     u20_21:
  1923  0215  2A1A               	goto	i1l1147
  1924  0216                     u20_20:
  1925  0216                     i1l1145:
  1926                           
  1927                           ;Prueba2_lab2.c: 149:             PORTEbits.RE0 = 1;
  1928  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1930  0218  1409               	bsf	9,0	;volatile
  1931                           
  1932                           ;Prueba2_lab2.c: 151:         }
  1933  0219  2A2C               	goto	i1l207
  1934  021A                     i1l1147:
  1935  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1936  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1937  021C  0823               	movf	_ADC_VALOR+1,w
  1938  021D  3A80               	xorlw	128
  1939  021E  00F0               	movwf	??_Revision
  1940  021F  3080               	movlw	128
  1941  0220  0270               	subwf	??_Revision,w
  1942  0221  1D03               	skipz
  1943  0222  2A25               	goto	u21_25
  1944  0223  087B               	movf	_contador,w
  1945  0224  0222               	subwf	_ADC_VALOR,w
  1946  0225                     u21_25:
  1947  0225  1803               	skipnc
  1948  0226  2A28               	goto	u21_21
  1949  0227  2A29               	goto	u21_20
  1950  0228                     u21_21:
  1951  0228  2A2C               	goto	i1l207
  1952  0229                     u21_20:
  1953  0229                     i1l1149:
  1954                           
  1955                           ;Prueba2_lab2.c: 153:             PORTEbits.RE0 = 0;
  1956  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1957  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1958  022B  1009               	bcf	9,0	;volatile
  1959  022C                     i1l207:
  1960  022C  0008               	return
  1961  022D                     __end_of_Revision:
  1962                           
  1963                           	psect	text11
  1964  022D                     __ptext11:	
  1965 ;; *************** function _DisplayADC *****************
  1966 ;; Defined at:
  1967 ;;		line 123 in file "Prueba2_lab2.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1981 ;;      Params:         0       0       0       0       0
  1982 ;;      Locals:         0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0
  1984 ;;      Totals:         0       0       0       0       0
  1985 ;;Total ram usage:        0 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    1
  1988 ;; This function calls:
  1989 ;;		_display
  1990 ;; This function is called by:
  1991 ;;		_ISR
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           
  1996                           ;psect for function _DisplayADC
  1997  022D                     _DisplayADC:
  1998  022D                     i1l1151:	
  1999                           ;incstack = 0
  2000                           ; Regs used in _DisplayADC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2001                           
  2002                           
  2003                           ;Prueba2_lab2.c: 124:     PORTE = 0;
  2004  022D  1283               	bcf	3,5	;RP0=0, select bank0
  2005  022E  1303               	bcf	3,6	;RP1=0, select bank0
  2006  022F  0189               	clrf	9	;volatile
  2007  0230                     i1l1153:
  2008                           
  2009                           ;Prueba2_lab2.c: 125:     if (toggle == 0) {
  2010  0230  0878               	movf	_toggle,w
  2011  0231  1D03               	btfss	3,2
  2012  0232  2A34               	goto	u22_21
  2013  0233  2A35               	goto	u22_20
  2014  0234                     u22_21:
  2015  0234  2A40               	goto	i1l1159
  2016  0235                     u22_20:
  2017  0235                     i1l1155:
  2018                           
  2019                           ;Prueba2_lab2.c: 126:         PORTEbits.RE1 = 1;
  2020  0235  1489               	bsf	9,1	;volatile
  2021  0236                     i1l1157:
  2022                           
  2023                           ;Prueba2_lab2.c: 127:         PORTD = display(ADC_NIBBLE2);
  2024  0236  0824               	movf	_ADC_NIBBLE2,w
  2025  0237  120A  118A  2023  120A  118A  	fcall	_display
  2026  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2027  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2028  023E  0088               	movwf	8	;volatile
  2029                           
  2030                           ;Prueba2_lab2.c: 131:     } else if (toggle == 1) {
  2031  023F  2A4F               	goto	i1l198
  2032  0240                     i1l1159:
  2033  0240  0378               	decf	_toggle,w
  2034  0241  1D03               	btfss	3,2
  2035  0242  2A44               	goto	u23_21
  2036  0243  2A45               	goto	u23_20
  2037  0244                     u23_21:
  2038  0244  2A4F               	goto	i1l198
  2039  0245                     u23_20:
  2040  0245                     i1l1161:
  2041                           
  2042                           ;Prueba2_lab2.c: 132:         PORTEbits.RE2 = 1;
  2043  0245  1509               	bsf	9,2	;volatile
  2044  0246                     i1l1163:
  2045                           
  2046                           ;Prueba2_lab2.c: 133:         PORTD = display(ADC_NIBBLE1);
  2047  0246  0826               	movf	_ADC_NIBBLE1,w
  2048  0247  120A  118A  2023  120A  118A  	fcall	_display
  2049  024C  1283               	bcf	3,5	;RP0=0, select bank0
  2050  024D  1303               	bcf	3,6	;RP1=0, select bank0
  2051  024E  0088               	movwf	8	;volatile
  2052  024F                     i1l198:
  2053  024F  0008               	return
  2054  0250                     __end_of_DisplayADC:
  2055                           
  2056                           	psect	text12
  2057  0023                     __ptext12:	
  2058 ;; *************** function _display *****************
  2059 ;; Defined at:
  2060 ;;		line 5 in file "Display.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  ADC_VALOR       1    wreg     unsigned char 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;  ADC_VALOR       1    2[COMMON] unsigned char 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      unsigned char 
  2067 ;; Registers used:
  2068 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2074 ;;      Params:         0       0       0       0       0
  2075 ;;      Locals:         1       0       0       0       0
  2076 ;;      Temps:          2       0       0       0       0
  2077 ;;      Totals:         3       0       0       0       0
  2078 ;;Total ram usage:        3 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_DisplayADC
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           
  2088                           ;psect for function _display
  2089  0023                     _display:
  2090                           
  2091                           ;incstack = 0
  2092                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
  2093                           ;display@ADC_VALOR stored from wreg
  2094  0023  00F2               	movwf	display@ADC_VALOR
  2095  0024                     i1l1073:
  2096                           
  2097                           ;Display.c: 7:     switch(ADC_VALOR){
  2098  0024  2875               	goto	i1l1111
  2099  0025                     i1l1075:
  2100                           
  2101                           ;Display.c: 9:             Valor_hex = 0b00111111;
  2102  0025  303F               	movlw	63
  2103  0026  00F0               	movwf	??_display
  2104  0027  0870               	movf	??_display,w
  2105  0028  00FC               	movwf	_Valor_hex
  2106                           
  2107                           ;Display.c: 10:             break;
  2108  0029  28AF               	goto	i1l1113
  2109  002A                     i1l1077:
  2110                           
  2111                           ;Display.c: 12:             Valor_hex = 0b000000110;
  2112  002A  3006               	movlw	6
  2113  002B  00F0               	movwf	??_display
  2114  002C  0870               	movf	??_display,w
  2115  002D  00FC               	movwf	_Valor_hex
  2116                           
  2117                           ;Display.c: 13:             break;
  2118  002E  28AF               	goto	i1l1113
  2119  002F                     i1l1079:
  2120                           
  2121                           ;Display.c: 15:             Valor_hex = 0b11011011;
  2122  002F  30DB               	movlw	219
  2123  0030  00F0               	movwf	??_display
  2124  0031  0870               	movf	??_display,w
  2125  0032  00FC               	movwf	_Valor_hex
  2126                           
  2127                           ;Display.c: 16:             break;
  2128  0033  28AF               	goto	i1l1113
  2129  0034                     i1l1081:
  2130                           
  2131                           ;Display.c: 18:             Valor_hex = 0b01001111;
  2132  0034  304F               	movlw	79
  2133  0035  00F0               	movwf	??_display
  2134  0036  0870               	movf	??_display,w
  2135  0037  00FC               	movwf	_Valor_hex
  2136                           
  2137                           ;Display.c: 19:             break;
  2138  0038  28AF               	goto	i1l1113
  2139  0039                     i1l1083:
  2140                           
  2141                           ;Display.c: 21:             Valor_hex = 0b01100110;
  2142  0039  3066               	movlw	102
  2143  003A  00F0               	movwf	??_display
  2144  003B  0870               	movf	??_display,w
  2145  003C  00FC               	movwf	_Valor_hex
  2146                           
  2147                           ;Display.c: 22:             break;
  2148  003D  28AF               	goto	i1l1113
  2149  003E                     i1l1085:
  2150                           
  2151                           ;Display.c: 24:             Valor_hex = 0b01101101;
  2152  003E  306D               	movlw	109
  2153  003F  00F0               	movwf	??_display
  2154  0040  0870               	movf	??_display,w
  2155  0041  00FC               	movwf	_Valor_hex
  2156                           
  2157                           ;Display.c: 25:             break;
  2158  0042  28AF               	goto	i1l1113
  2159  0043                     i1l1087:
  2160                           
  2161                           ;Display.c: 27:             Valor_hex = 0b01111101;
  2162  0043  307D               	movlw	125
  2163  0044  00F0               	movwf	??_display
  2164  0045  0870               	movf	??_display,w
  2165  0046  00FC               	movwf	_Valor_hex
  2166                           
  2167                           ;Display.c: 28:             break;
  2168  0047  28AF               	goto	i1l1113
  2169  0048                     i1l1089:
  2170                           
  2171                           ;Display.c: 30:             Valor_hex = 0b00000111;
  2172  0048  3007               	movlw	7
  2173  0049  00F0               	movwf	??_display
  2174  004A  0870               	movf	??_display,w
  2175  004B  00FC               	movwf	_Valor_hex
  2176                           
  2177                           ;Display.c: 31:             break;
  2178  004C  28AF               	goto	i1l1113
  2179  004D                     i1l1091:
  2180                           
  2181                           ;Display.c: 33:             Valor_hex = 0b01111111;
  2182  004D  307F               	movlw	127
  2183  004E  00F0               	movwf	??_display
  2184  004F  0870               	movf	??_display,w
  2185  0050  00FC               	movwf	_Valor_hex
  2186                           
  2187                           ;Display.c: 34:             break;
  2188  0051  28AF               	goto	i1l1113
  2189  0052                     i1l1093:
  2190                           
  2191                           ;Display.c: 36:             Valor_hex = 0b01101111;
  2192  0052  306F               	movlw	111
  2193  0053  00F0               	movwf	??_display
  2194  0054  0870               	movf	??_display,w
  2195  0055  00FC               	movwf	_Valor_hex
  2196                           
  2197                           ;Display.c: 37:             break;
  2198  0056  28AF               	goto	i1l1113
  2199  0057                     i1l1095:
  2200                           
  2201                           ;Display.c: 39:             Valor_hex = 0b01110111;
  2202  0057  3077               	movlw	119
  2203  0058  00F0               	movwf	??_display
  2204  0059  0870               	movf	??_display,w
  2205  005A  00FC               	movwf	_Valor_hex
  2206                           
  2207                           ;Display.c: 40:             break;
  2208  005B  28AF               	goto	i1l1113
  2209  005C                     i1l1097:
  2210                           
  2211                           ;Display.c: 42:             Valor_hex = 0b01111100;
  2212  005C  307C               	movlw	124
  2213  005D  00F0               	movwf	??_display
  2214  005E  0870               	movf	??_display,w
  2215  005F  00FC               	movwf	_Valor_hex
  2216                           
  2217                           ;Display.c: 43:             break;
  2218  0060  28AF               	goto	i1l1113
  2219  0061                     i1l1099:
  2220                           
  2221                           ;Display.c: 45:             Valor_hex = 0b00111001;
  2222  0061  3039               	movlw	57
  2223  0062  00F0               	movwf	??_display
  2224  0063  0870               	movf	??_display,w
  2225  0064  00FC               	movwf	_Valor_hex
  2226                           
  2227                           ;Display.c: 46:             break;
  2228  0065  28AF               	goto	i1l1113
  2229  0066                     i1l1101:
  2230                           
  2231                           ;Display.c: 48:             Valor_hex = 0b01011110;
  2232  0066  305E               	movlw	94
  2233  0067  00F0               	movwf	??_display
  2234  0068  0870               	movf	??_display,w
  2235  0069  00FC               	movwf	_Valor_hex
  2236                           
  2237                           ;Display.c: 49:             break;
  2238  006A  28AF               	goto	i1l1113
  2239  006B                     i1l1103:
  2240                           
  2241                           ;Display.c: 51:             Valor_hex = 0b01111001;
  2242  006B  3079               	movlw	121
  2243  006C  00F0               	movwf	??_display
  2244  006D  0870               	movf	??_display,w
  2245  006E  00FC               	movwf	_Valor_hex
  2246                           
  2247                           ;Display.c: 52:             break;
  2248  006F  28AF               	goto	i1l1113
  2249  0070                     i1l1105:
  2250                           
  2251                           ;Display.c: 54:             Valor_hex = 0b01110001;
  2252  0070  3071               	movlw	113
  2253  0071  00F0               	movwf	??_display
  2254  0072  0870               	movf	??_display,w
  2255  0073  00FC               	movwf	_Valor_hex
  2256                           
  2257                           ;Display.c: 55:             break;
  2258  0074  28AF               	goto	i1l1113
  2259  0075                     i1l1111:
  2260  0075  0872               	movf	display@ADC_VALOR,w
  2261  0076  00F0               	movwf	??_display
  2262  0077  01F1               	clrf	??_display+1
  2263                           
  2264                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2265                           ; Switch size 1, requested type "simple"
  2266                           ; Number of cases is 1, Range of values is 0 to 0
  2267                           ; switch strategies available:
  2268                           ; Name         Instructions Cycles
  2269                           ; simple_byte            4     3 (average)
  2270                           ; direct_byte           11     8 (fixed)
  2271                           ; jumptable            260     6 (fixed)
  2272                           ;	Chosen strategy is simple_byte
  2273  0078  0871               	movf	??_display+1,w
  2274  0079  3A00               	xorlw	0	; case 0
  2275  007A  1903               	skipnz
  2276  007B  287D               	goto	i1l1331
  2277  007C  2825               	goto	i1l1075
  2278  007D                     i1l1331:
  2279                           
  2280                           ; Switch size 1, requested type "simple"
  2281                           ; Number of cases is 16, Range of values is 0 to 15
  2282                           ; switch strategies available:
  2283                           ; Name         Instructions Cycles
  2284                           ; simple_byte           49    25 (average)
  2285                           ; direct_byte           56     8 (fixed)
  2286                           ; jumptable            260     6 (fixed)
  2287                           ;	Chosen strategy is simple_byte
  2288  007D  0870               	movf	??_display,w
  2289  007E  3A00               	xorlw	0	; case 0
  2290  007F  1903               	skipnz
  2291  0080  2825               	goto	i1l1075
  2292  0081  3A01               	xorlw	1	; case 1
  2293  0082  1903               	skipnz
  2294  0083  282A               	goto	i1l1077
  2295  0084  3A03               	xorlw	3	; case 2
  2296  0085  1903               	skipnz
  2297  0086  282F               	goto	i1l1079
  2298  0087  3A01               	xorlw	1	; case 3
  2299  0088  1903               	skipnz
  2300  0089  2834               	goto	i1l1081
  2301  008A  3A07               	xorlw	7	; case 4
  2302  008B  1903               	skipnz
  2303  008C  2839               	goto	i1l1083
  2304  008D  3A01               	xorlw	1	; case 5
  2305  008E  1903               	skipnz
  2306  008F  283E               	goto	i1l1085
  2307  0090  3A03               	xorlw	3	; case 6
  2308  0091  1903               	skipnz
  2309  0092  2843               	goto	i1l1087
  2310  0093  3A01               	xorlw	1	; case 7
  2311  0094  1903               	skipnz
  2312  0095  2848               	goto	i1l1089
  2313  0096  3A0F               	xorlw	15	; case 8
  2314  0097  1903               	skipnz
  2315  0098  284D               	goto	i1l1091
  2316  0099  3A01               	xorlw	1	; case 9
  2317  009A  1903               	skipnz
  2318  009B  2852               	goto	i1l1093
  2319  009C  3A03               	xorlw	3	; case 10
  2320  009D  1903               	skipnz
  2321  009E  2857               	goto	i1l1095
  2322  009F  3A01               	xorlw	1	; case 11
  2323  00A0  1903               	skipnz
  2324  00A1  285C               	goto	i1l1097
  2325  00A2  3A07               	xorlw	7	; case 12
  2326  00A3  1903               	skipnz
  2327  00A4  2861               	goto	i1l1099
  2328  00A5  3A01               	xorlw	1	; case 13
  2329  00A6  1903               	skipnz
  2330  00A7  2866               	goto	i1l1101
  2331  00A8  3A03               	xorlw	3	; case 14
  2332  00A9  1903               	skipnz
  2333  00AA  286B               	goto	i1l1103
  2334  00AB  3A01               	xorlw	1	; case 15
  2335  00AC  1903               	skipnz
  2336  00AD  2870               	goto	i1l1105
  2337  00AE  2825               	goto	i1l1075
  2338  00AF                     i1l1113:
  2339                           
  2340                           ;Display.c: 60:    return Valor_hex;
  2341  00AF  087C               	movf	_Valor_hex,w
  2342  00B0                     i1l40:
  2343  00B0  0008               	return
  2344  00B1                     __end_of_display:
  2345                           
  2346                           	psect	text13
  2347  02B7                     __ptext13:	
  2348 ;; *************** function _ADC *****************
  2349 ;; Defined at:
  2350 ;;		line 9 in file "Config_ADC.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  ADRESL_         1    wreg     unsigned char 
  2353 ;;  ADRESH_         1    0[COMMON] unsigned char 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  ADRESL_         1    0[COMMON] unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  2    0[COMMON] int 
  2358 ;; Registers used:
  2359 ;;		wreg
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2365 ;;      Params:         3       0       0       0       0
  2366 ;;      Locals:         0       0       0       0       0
  2367 ;;      Temps:          0       0       0       0       0
  2368 ;;      Totals:         3       0       0       0       0
  2369 ;;Total ram usage:        3 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_ISR
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function _ADC
  2380  02B7                     _ADC:
  2381  02B7                     i1l1139:	
  2382                           ;incstack = 0
  2383                           ; Regs used in _ADC: [wreg]
  2384                           
  2385                           
  2386                           ;Config_ADC.c: 10:     VAL = (ADRESL << 8) | ADRESH;
  2387  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  2388  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  2389  02B9  081E               	movf	30,w	;volatile
  2390  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2391  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2392  02BC  00B1               	movwf	_VAL+1
  2393  02BD  081E               	movf	30,w	;volatile
  2394  02BE  00B0               	movwf	_VAL
  2395                           
  2396                           ;Config_ADC.c: 11:     return VAL;
  2397  02BF  0831               	movf	_VAL+1,w
  2398  02C0  00F1               	movwf	?_ADC+1
  2399  02C1  0830               	movf	_VAL,w
  2400  02C2  00F0               	movwf	?_ADC
  2401  02C3                     i1l55:
  2402  02C3  0008               	return
  2403  02C4                     __end_of_ADC:
  2404  007E                     btemp	set	126	;btemp
  2405  007E                     wtemp0	set	126
  2406                           
  2407                           	psect	config
  2408                           
  2409                           ;Config register CONFIG1 @ 0x2007
  2410                           ;	Oscillator Selection bits
  2411                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2412                           ;	Watchdog Timer Enable bit
  2413                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2414                           ;	Power-up Timer Enable bit
  2415                           ;	PWRTE = OFF, PWRT disabled
  2416                           ;	RE3/MCLR pin function select bit
  2417                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2418                           ;	Code Protection bit
  2419                           ;	CP = OFF, Program memory code protection is disabled
  2420                           ;	Data Code Protection bit
  2421                           ;	CPD = OFF, Data memory code protection is disabled
  2422                           ;	Brown Out Reset Selection bits
  2423                           ;	BOREN = OFF, BOR disabled
  2424                           ;	Internal External Switchover bit
  2425                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2426                           ;	Fail-Safe Clock Monitor Enabled bit
  2427                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2428                           ;	Low Voltage Programming Enable bit
  2429                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2430                           ;	In-Circuit Debugger Mode bit
  2431                           ;	DEBUG = 0x1, unprogrammed default
  2432  2007                     	org	8199
  2433  2007  20D4               	dw	8404
  2434                           
  2435                           ;Config register CONFIG2 @ 0x2008
  2436                           ;	Brown-out Reset Selection bit
  2437                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2438                           ;	Flash Program Memory Self Write Enable bits
  2439                           ;	WRT = OFF, Write protection off
  2440  2008                     	org	8200
  2441  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80      8      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_ADC
    _DisplayADC->_display

Critical Paths under _main in BANK0

    _setup->_initOsc
    _CONVERSION_ADC->_SWAP_ADC

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     110
                     _CONVERSION_ADC
                   _Config_INTERRUPT
                           _TOGGLE_1
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _TOGGLE_1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONVERSION_ADC                                       0     0      0      88
                        _NIBBLE1_ADC
                        _NIBBLE2_ADC
                           _SWAP_ADC
 ---------------------------------------------------------------------------------
 (2) _SWAP_ADC                                             8     6      2      44
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _NIBBLE2_ADC                                          5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _NIBBLE1_ADC                                          5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0      98
                                              3 COMMON     5     5      0
                                _ADC
                         _DisplayADC
                           _Revision
 ---------------------------------------------------------------------------------
 (4) _Revision                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _DisplayADC                                           0     0      0      22
                            _display
 ---------------------------------------------------------------------------------
 (5) _display                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _ADC                                                  4     1      3      76
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVERSION_ADC
     _NIBBLE1_ADC
     _NIBBLE2_ADC
     _SWAP_ADC
   _Config_INTERRUPT
   _TOGGLE_1
   _setup
     _initOsc

 _ISR (ROOT)
   _ADC
   _DisplayADC
     _display
   _Revision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      28       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8      1B       5       33.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      28      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 18:26:27 2021

                        l6 0137                          l7 018F                          l8 013D  
                        l9 0143                         l10 0149                         l11 014F  
                       l12 0155                         l13 015B                         l14 0161  
                       l15 0167                         l16 0190                         l61 02A7  
                       l64 0297                         l58 0206                         fsr 0004  
                      l201 01DF                        l210 01B8                        l213 0287  
                      _ADC 02B7                        l192 02B6                        u240 02AD  
                      u241 02AC                        u250 02B4                        u251 02B3  
                      u360 0261                        u361 0260                        u195 01E6  
                      _ISR 00B1                        _VAL 0030                        fsr0 0004  
                      indf 0000                       ?_ADC 0070                       ?_ISR 0070  
                     l1121 01E3                       l1201 02A8                       l1123 0202  
                     l1211 01C7                       l1203 02AD                       l1133 028B  
                     l1213 01D3                       l1205 02AF                       l1061 0136  
                     l1127 029B                       l1135 0293                       l1207 02B4  
                     l1129 02A3                       l1209 01B9                       l1065 016D  
                     l1171 019C                       l1181 01AB                       l1173 01A0  
                     l1165 0191                       l1191 0270                       l1183 01AE  
                     l1175 01A3                       l1167 0197                       l1271 025A  
                     l1193 027C                       l1329 0175                       l1185 01AF  
                     l1177 01A7                       l1169 019B                       l1273 0261  
                     l1195 027D                       l1187 01B2                       l1179 01AA  
                     l1275 0262                       l1267 0250                       l1197 0280  
                     l1189 01B5                       l1277 0267                       l1269 0255  
                     l1199 0283                       _IOCB 0096                       i1l40 00B0  
                     i1l55 02C3                       _TMR0 0001                       _main 0250  
                     btemp 007E   __end_of_Config_INTERRUPT 0288                       start 000E  
                    ??_ADC 0073                      ??_ISR 0073                      ?_main 0070  
                    _ANSEL 0188                      i1l207 022C                      i1l172 0118  
                    i1l168 00BD                      i1l177 012A                      i1l169 00C3  
                    i1l198 024F                      u20_20 0216                      u20_21 0215  
                    u20_25 0212                      u21_20 0229                      u21_21 0228  
                    u21_25 0225                      u22_20 0235                      u30_20 00CC  
                    u22_21 0234                      u30_21 00CB                      u23_20 0245  
                    u31_20 00D7                      u23_21 0244                      u31_21 00D6  
                    u32_20 00DC                      u32_21 00DB                      u33_20 00E8  
                    u33_21 00E7                      u34_20 0118                      u26_20 00B5  
                    u34_21 0117                      u26_21 00B4                      u35_20 011C  
                    u27_20 00BB                      u35_21 011B                      u27_21 00BA  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u28_20 00C1  
                    u28_21 00C0                      u29_20 00C7                      u29_21 00C6  
                    u37_27 00ED                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
               _DisplayADC 022D           __end_of_TOGGLE_1 02B7            __end_of_display 00B1  
          __end_of_initOsc 0191                      _val_1 0028           __end_of_SWAP_ADC 0207  
                    _setup 0191                      pclath 000A                      status 0003  
                    wtemp0 007E            __initialization 0011               __end_of_main 0270  
                   ??_main 003B         NIBBLE1_ADC@VAL_ADC 0037           __end_of_Revision 022D  
                   _ADCON0 001F                     _ADCON1 009F                     _ADRESH 001E  
                   _ADRESL 009E                initOsc@IRCF 0035                     ?_setup 0070  
                   _ANSELH 0189                     i1l1101 0066                     i1l1103 006B  
                   i1l1111 0075                     i1l1105 0070                     i1l1113 00AF  
                   i1l1221 00C1                     i1l1151 022D                     i1l1143 0207  
                   i1l1223 00C7                     i1l1231 00D3                     i1l1215 00B1  
                   i1l1081 0034                     i1l1073 0024                     i1l1161 0245  
                   i1l1153 0230                     i1l1145 0216                     i1l1233 00D7  
                   i1l1241 00E1                     i1l1225 00CC                     i1l1217 00B5  
                   i1l1139 02B7                     i1l1331 007D                     i1l1091 004D  
                   i1l1083 0039                     i1l1075 0025                     i1l1163 0246  
                   i1l1155 0235                     i1l1147 021A                     i1l1251 00F6  
                   i1l1235 00DC                     i1l1227 00D0                     i1l1219 00BB  
                   i1l1243 00E2                     i1l1093 0052                     i1l1085 003E  
                   i1l1077 002A                     i1l1157 0236                     i1l1149 0229  
                   i1l1261 011D                     i1l1253 0108                     i1l1245 00E8  
                   i1l1237 00DE                     i1l1229 00D2                     i1l1095 0057  
                   i1l1087 0043                     i1l1079 002F                     i1l1159 0240  
                   i1l1263 011F                     i1l1255 010D                     i1l1247 00E9  
                   i1l1239 00E0                     i1l1097 005C                     i1l1089 0048  
                   i1l1265 0124                     i1l1257 0112                     i1l1249 00F2  
                   i1l1099 0061                     i1l1259 011C                     _INTCON 000B  
     __size_of_NIBBLE1_ADC 0010       __size_of_NIBBLE2_ADC 0010                     _toggle 0078  
          SWAP_ADC@VAL_ADC 003A                  ??_display 0070                  ??_initOsc 0033  
              ?_DisplayADC 0070                     saved_w 007E                 ADC@ADRESH_ 0070  
               ADC@ADRESL_ 0070    __end_of__initialization 001F             __pcstackCOMMON 0070  
                ?_TOGGLE_1 0070              __end_of_setup 01B9                  ?_SWAP_ADC 0033  
         display@ADC_VALOR 0072                    ??_setup 0036                 __pbssBANK0 0020  
  __size_of_CONVERSION_ADC 0027          ?_Config_INTERRUPT 0070                 __pmaintext 0250  
                ?_Revision 0070        __size_of_DisplayADC 0023         ??_Config_INTERRUPT 0033  
               ??_TOGGLE_1 0033                 __pintentry 0004                 ??_SWAP_ADC 0035  
               _cont_timer 0032                  _ADC_VALOR 0022                 ??_Revision 0070  
                  __ptext1 0191                    __ptext2 0133                    __ptext3 02A8  
                  __ptext4 0270                    __ptext5 01B9                    __ptext6 01E0  
                  __ptext7 0288                    __ptext8 0298                    __ptext9 00B1  
                  _display 0023               __size_of_ADC 000D               __size_of_ISR 0082  
                  _initOsc 0133                    clrloop0 02C5       end_of_initialization 001F  
      NIBBLE2_ADC@VAL_SWAP 0037                  _PORTBbits 0006                  _PORTEbits 0009  
             ??_DisplayADC 0073             _CONVERSION_ADC 01B9              ??_NIBBLE1_ADC 0035  
            ??_NIBBLE2_ADC 0035                _ADC_NIBBLE1 0026                _ADC_NIBBLE2 0024  
       __end_of_DisplayADC 0250          __size_of_TOGGLE_1 000F          __size_of_SWAP_ADC 0027  
      start_initialization 0011                __end_of_ADC 02C4                __end_of_ISR 0133  
   __end_of_CONVERSION_ADC 01E0                  _Valor_hex 007C        __end_of_NIBBLE1_ADC 02A8  
      __end_of_NIBBLE2_ADC 0298          __size_of_Revision 0026  __size_of_Config_INTERRUPT 0018  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 0033  
          ?_CONVERSION_ADC 0070                _debouncing1 007A                _debouncing2 0079  
                 ?_display 0070                   ?_initOsc 0070                   _ADC_SWAP 0020  
           __size_of_setup 0028          interrupt_function 0004                  clear_ram0 02C4  
              _NIBBLE1_ADC 0298                   _PIE1bits 008C                _NIBBLE2_ADC 0288  
                 _PIR1bits 000C                   _TOGGLE_1 02A8                   _VAL_SWAP 002E  
                 _SWAP_ADC 01E0                 _ADCON0bits 001F                   _Revision 0207  
         _Config_INTERRUPT 0270           __size_of_display 008E           __size_of_initOsc 005E  
                 __ptext10 0207                   __ptext11 022D                   __ptext12 0023  
                 __ptext13 02B7                   _contador 007B              __size_of_main 0020  
               _INTCONbits 000B           ??_CONVERSION_ADC 003B                _VAL_NIBBLE1 002C  
              _VAL_NIBBLE2 002A                   intlevel1 0000                 _OSCCONbits 008F  
               _OPTION_REG 0081               ?_NIBBLE1_ADC 0033               ?_NIBBLE2_ADC 0033  
