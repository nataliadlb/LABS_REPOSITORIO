

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 01 11:59:44 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  001F                     _ADCON0	set	31
   364  0009                     _PORTE	set	9
   365  0008                     _PORTD	set	8
   366  0007                     _PORTC	set	7
   367  0006                     _PORTB	set	6
   368  0005                     _PORTA	set	5
   369  001F                     _ADCON0bits	set	31
   370  001E                     _ADRESH	set	30
   371  0009                     _PORTEbits	set	9
   372  000C                     _PIR1bits	set	12
   373  0006                     _PORTBbits	set	6
   374  000B                     _INTCONbits	set	11
   375  008C                     _PIE1bits	set	140
   376  0096                     _IOCBbits	set	150
   377  0089                     _TRISE	set	137
   378  0088                     _TRISD	set	136
   379  0087                     _TRISC	set	135
   380  0086                     _TRISB	set	134
   381  0085                     _TRISA	set	133
   382  008F                     _OSCCONbits	set	143
   383  0189                     _ANSELH	set	393
   384  0188                     _ANSEL	set	392
   385                           
   386                           	psect	cinit
   387  000F                     start_initialization:	
   388                           ; #config settings
   389                           
   390  000F                     __initialization:
   391                           
   392                           ; Clear objects allocated to COMMON
   393  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   394  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   395  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   396  0012                     end_of_initialization:	
   397                           ;End of C runtime variable initialization code
   398                           
   399  0012                     __end_of__initialization:
   400  0012  0183               	clrf	3
   401  0013  120A  118A  28E9   	ljmp	_main	;jump to C main() function
   402                           
   403                           	psect	bssCOMMON
   404  0077                     __pbssCOMMON:
   405  0077                     _ADC_VALOR:
   406  0077                     	ds	1
   407  0078                     _contador:
   408  0078                     	ds	1
   409  0079                     _Valor_hex:
   410  0079                     	ds	1
   411                           
   412                           	psect	cstackCOMMON
   413  0070                     __pcstackCOMMON:
   414  0070                     ?_setup:
   415  0070                     ?_ContadorLEDS:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_DisplayADC:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_initOsc:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_ISR:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ??_ISR:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_main:	
   431                           ; 1 bytes @ 0x0
   432                           
   433                           
   434                           ; 1 bytes @ 0x0
   435  0070                     	ds	4
   436  0074                     ??_ContadorLEDS:
   437  0074                     ??_DisplayADC:	
   438                           ; 1 bytes @ 0x4
   439                           
   440  0074                     ??_initOsc:	
   441                           ; 1 bytes @ 0x4
   442                           
   443                           
   444                           ; 1 bytes @ 0x4
   445  0074                     	ds	2
   446  0076                     initOsc@IRCF:
   447                           
   448                           ; 1 bytes @ 0x6
   449  0076                     	ds	1
   450  0077                     ??_setup:
   451  0077                     ??_main:	
   452                           ; 1 bytes @ 0x7
   453                           
   454                           
   455                           	psect	maintext
   456  00E9                     __pmaintext:	
   457                           ; 1 bytes @ 0x7
   458 ;;
   459 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   460 ;;
   461 ;; *************** function _main *****************
   462 ;; Defined at:
   463 ;;		line 92 in file "Prueba.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : B00/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   477 ;;      Params:         0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0
   480 ;;      Totals:         0       0       0       0       0
   481 ;;Total ram usage:        0 bytes
   482 ;; Hardware stack levels required when called:    3
   483 ;; This function calls:
   484 ;;		_ContadorLEDS
   485 ;;		_DisplayADC
   486 ;;		_setup
   487 ;; This function is called by:
   488 ;;		Startup code after reset
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           
   493                           ;psect for function _main
   494  00E9                     _main:
   495  00E9                     l856:	
   496                           ;incstack = 0
   497                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   498                           
   499                           
   500                           ;Prueba.c: 93:     contador = 0;
   501  00E9  01F8               	clrf	_contador
   502  00EA                     l858:
   503                           
   504                           ;Prueba.c: 94:     setup();
   505  00EA  120A  118A  20AE  120A  118A  	fcall	_setup
   506  00EF                     l860:
   507                           
   508                           ;Prueba.c: 99:         ContadorLEDS();
   509  00EF  120A  118A  2103  120A  118A  	fcall	_ContadorLEDS
   510  00F4                     l862:
   511                           
   512                           ;Prueba.c: 100:         DisplayADC();
   513  00F4  120A  118A  20FD  120A  118A  	fcall	_DisplayADC
   514  00F9  28EF               	goto	l860
   515  00FA  120A  118A  280C   	ljmp	start
   516  00FD                     __end_of_main:
   517                           
   518                           	psect	text1
   519  00AE                     __ptext1:	
   520 ;; *************** function _setup *****************
   521 ;; Defined at:
   522 ;;		line 109 in file "Prueba.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   536 ;;      Params:         0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0
   538 ;;      Temps:          0       0       0       0       0
   539 ;;      Totals:         0       0       0       0       0
   540 ;;Total ram usage:        0 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    2
   543 ;; This function calls:
   544 ;;		_initOsc
   545 ;; This function is called by:
   546 ;;		_main
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           
   551                           ;psect for function _setup
   552  00AE                     _setup:
   553  00AE                     l734:	
   554                           ;incstack = 0
   555                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   556                           
   557                           
   558                           ;Prueba.c: 110:     initOsc(0b00000110);
   559  00AE  3006               	movlw	6
   560  00AF  120A  118A  2016  120A  118A  	fcall	_initOsc
   561  00B4                     l736:
   562                           
   563                           ;Prueba.c: 111:     ANSEL = 0b00000001;
   564  00B4  3001               	movlw	1
   565  00B5  1683               	bsf	3,5	;RP0=1, select bank3
   566  00B6  1703               	bsf	3,6	;RP1=1, select bank3
   567  00B7  0088               	movwf	8	;volatile
   568  00B8                     l738:
   569                           
   570                           ;Prueba.c: 112:     ANSELH = 0;
   571  00B8  0189               	clrf	9	;volatile
   572  00B9                     l740:
   573                           
   574                           ;Prueba.c: 113:     TRISA = 0b00000001;
   575  00B9  3001               	movlw	1
   576  00BA  1683               	bsf	3,5	;RP0=1, select bank1
   577  00BB  1303               	bcf	3,6	;RP1=0, select bank1
   578  00BC  0085               	movwf	5	;volatile
   579  00BD                     l742:
   580                           
   581                           ;Prueba.c: 114:     PORTA = 0;
   582  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   583  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   584  00BF  0185               	clrf	5	;volatile
   585  00C0                     l744:
   586                           
   587                           ;Prueba.c: 115:     TRISB = 0b00000011;
   588  00C0  3003               	movlw	3
   589  00C1  1683               	bsf	3,5	;RP0=1, select bank1
   590  00C2  1303               	bcf	3,6	;RP1=0, select bank1
   591  00C3  0086               	movwf	6	;volatile
   592  00C4                     l746:
   593                           
   594                           ;Prueba.c: 116:     PORTB = 0;
   595  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   596  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   597  00C6  0186               	clrf	6	;volatile
   598  00C7                     l748:
   599                           
   600                           ;Prueba.c: 117:     TRISC = 0;
   601  00C7  1683               	bsf	3,5	;RP0=1, select bank1
   602  00C8  1303               	bcf	3,6	;RP1=0, select bank1
   603  00C9  0187               	clrf	7	;volatile
   604  00CA                     l750:
   605                           
   606                           ;Prueba.c: 118:     PORTC = 0;
   607  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   608  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   609  00CC  0187               	clrf	7	;volatile
   610  00CD                     l752:
   611                           
   612                           ;Prueba.c: 119:     TRISD = 0;
   613  00CD  1683               	bsf	3,5	;RP0=1, select bank1
   614  00CE  1303               	bcf	3,6	;RP1=0, select bank1
   615  00CF  0188               	clrf	8	;volatile
   616  00D0                     l754:
   617                           
   618                           ;Prueba.c: 120:     PORTD = 0;
   619  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   620  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   621  00D2  0188               	clrf	8	;volatile
   622  00D3                     l756:
   623                           
   624                           ;Prueba.c: 121:     TRISE = 0;
   625  00D3  1683               	bsf	3,5	;RP0=1, select bank1
   626  00D4  1303               	bcf	3,6	;RP1=0, select bank1
   627  00D5  0189               	clrf	9	;volatile
   628  00D6                     l758:
   629                           
   630                           ;Prueba.c: 122:     PORTE = 0;
   631  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   632  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   633  00D8  0189               	clrf	9	;volatile
   634  00D9                     l760:
   635                           
   636                           ;Prueba.c: 123:     INTCONbits.GIE = 1;
   637  00D9  178B               	bsf	11,7	;volatile
   638  00DA                     l762:
   639                           
   640                           ;Prueba.c: 124:     INTCONbits.RBIE = 1;
   641  00DA  158B               	bsf	11,3	;volatile
   642  00DB                     l764:
   643                           
   644                           ;Prueba.c: 125:     INTCONbits.RBIF = 0;
   645  00DB  100B               	bcf	11,0	;volatile
   646  00DC                     l766:
   647                           
   648                           ;Prueba.c: 126:     IOCBbits.IOCB0 = 1;
   649  00DC  1683               	bsf	3,5	;RP0=1, select bank1
   650  00DD  1303               	bcf	3,6	;RP1=0, select bank1
   651  00DE  1416               	bsf	22,0	;volatile
   652  00DF                     l768:
   653                           
   654                           ;Prueba.c: 127:     IOCBbits.IOCB1 = 1;
   655  00DF  1496               	bsf	22,1	;volatile
   656  00E0                     l770:
   657                           
   658                           ;Prueba.c: 128:     INTCONbits.PEIE = 1;
   659  00E0  170B               	bsf	11,6	;volatile
   660  00E1                     l772:
   661                           
   662                           ;Prueba.c: 129:     PIE1bits.ADIE = 1;
   663  00E1  170C               	bsf	12,6	;volatile
   664  00E2                     l774:
   665                           
   666                           ;Prueba.c: 130:     PIR1bits.ADIF = 0;
   667  00E2  1283               	bcf	3,5	;RP0=0, select bank0
   668  00E3  1303               	bcf	3,6	;RP1=0, select bank0
   669  00E4  130C               	bcf	12,6	;volatile
   670  00E5                     l776:
   671                           
   672                           ;Prueba.c: 131:     ADCON0 = 0b11000001;
   673  00E5  30C1               	movlw	193
   674  00E6  009F               	movwf	31	;volatile
   675  00E7                     l778:
   676                           
   677                           ;Prueba.c: 132:     ADCON0bits.GO_nDONE = 1;
   678  00E7  149F               	bsf	31,1	;volatile
   679  00E8                     l126:
   680  00E8  0008               	return
   681  00E9                     __end_of_setup:
   682                           
   683                           	psect	text2
   684  0016                     __ptext2:	
   685 ;; *************** function _initOsc *****************
   686 ;; Defined at:
   687 ;;		line 3 in file "Oscilador.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;  IRCF            1    wreg     unsigned char 
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  IRCF            1    6[COMMON] unsigned char 
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   701 ;;      Params:         0       0       0       0       0
   702 ;;      Locals:         1       0       0       0       0
   703 ;;      Temps:          2       0       0       0       0
   704 ;;      Totals:         3       0       0       0       0
   705 ;;Total ram usage:        3 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    1
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_setup
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _initOsc
   717  0016                     _initOsc:
   718                           
   719                           ;incstack = 0
   720                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   721                           ;initOsc@IRCF stored from wreg
   722  0016  00F6               	movwf	initOsc@IRCF
   723  0017                     l724:
   724                           
   725                           ;Oscilador.c: 5:     switch(IRCF){
   726  0017  284E               	goto	l728
   727  0018                     l6:	
   728                           ;Oscilador.c: 6:         case 0:
   729                           
   730                           
   731                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   732  0018  1683               	bsf	3,5	;RP0=1, select bank1
   733  0019  1303               	bcf	3,6	;RP1=0, select bank1
   734  001A  130F               	bcf	15,6	;volatile
   735                           
   736                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   737  001B  128F               	bcf	15,5	;volatile
   738                           
   739                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   740  001C  120F               	bcf	15,4	;volatile
   741                           
   742                           ;Oscilador.c: 10:             break;
   743  001D  2870               	goto	l7
   744  001E                     l8:	
   745                           ;Oscilador.c: 11:          case 1:
   746                           
   747                           
   748                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   749  001E  1683               	bsf	3,5	;RP0=1, select bank1
   750  001F  1303               	bcf	3,6	;RP1=0, select bank1
   751  0020  130F               	bcf	15,6	;volatile
   752                           
   753                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   754  0021  128F               	bcf	15,5	;volatile
   755                           
   756                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   757  0022  160F               	bsf	15,4	;volatile
   758                           
   759                           ;Oscilador.c: 15:             break;
   760  0023  2870               	goto	l7
   761  0024                     l9:	
   762                           ;Oscilador.c: 16:         case 2:
   763                           
   764                           
   765                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   766  0024  1683               	bsf	3,5	;RP0=1, select bank1
   767  0025  1303               	bcf	3,6	;RP1=0, select bank1
   768  0026  130F               	bcf	15,6	;volatile
   769                           
   770                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   771  0027  168F               	bsf	15,5	;volatile
   772                           
   773                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   774  0028  120F               	bcf	15,4	;volatile
   775                           
   776                           ;Oscilador.c: 20:             break;
   777  0029  2870               	goto	l7
   778  002A                     l10:	
   779                           ;Oscilador.c: 21:         case 3:
   780                           
   781                           
   782                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   783  002A  1683               	bsf	3,5	;RP0=1, select bank1
   784  002B  1303               	bcf	3,6	;RP1=0, select bank1
   785  002C  130F               	bcf	15,6	;volatile
   786                           
   787                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   788  002D  168F               	bsf	15,5	;volatile
   789                           
   790                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   791  002E  160F               	bsf	15,4	;volatile
   792                           
   793                           ;Oscilador.c: 25:             break;
   794  002F  2870               	goto	l7
   795  0030                     l11:	
   796                           ;Oscilador.c: 26:         case 4:
   797                           
   798                           
   799                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   800  0030  1683               	bsf	3,5	;RP0=1, select bank1
   801  0031  1303               	bcf	3,6	;RP1=0, select bank1
   802  0032  170F               	bsf	15,6	;volatile
   803                           
   804                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   805  0033  128F               	bcf	15,5	;volatile
   806                           
   807                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   808  0034  120F               	bcf	15,4	;volatile
   809                           
   810                           ;Oscilador.c: 30:             break;
   811  0035  2870               	goto	l7
   812  0036                     l12:	
   813                           ;Oscilador.c: 31:         case 5:
   814                           
   815                           
   816                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   817  0036  1683               	bsf	3,5	;RP0=1, select bank1
   818  0037  1303               	bcf	3,6	;RP1=0, select bank1
   819  0038  170F               	bsf	15,6	;volatile
   820                           
   821                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
   822  0039  128F               	bcf	15,5	;volatile
   823                           
   824                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
   825  003A  160F               	bsf	15,4	;volatile
   826                           
   827                           ;Oscilador.c: 35:             break;
   828  003B  2870               	goto	l7
   829  003C                     l13:	
   830                           ;Oscilador.c: 36:         case 6:
   831                           
   832                           
   833                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
   834  003C  1683               	bsf	3,5	;RP0=1, select bank1
   835  003D  1303               	bcf	3,6	;RP1=0, select bank1
   836  003E  170F               	bsf	15,6	;volatile
   837                           
   838                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
   839  003F  168F               	bsf	15,5	;volatile
   840                           
   841                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
   842  0040  120F               	bcf	15,4	;volatile
   843                           
   844                           ;Oscilador.c: 40:             break;
   845  0041  2870               	goto	l7
   846  0042                     l14:	
   847                           ;Oscilador.c: 41:         case 7:
   848                           
   849                           
   850                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
   851  0042  1683               	bsf	3,5	;RP0=1, select bank1
   852  0043  1303               	bcf	3,6	;RP1=0, select bank1
   853  0044  170F               	bsf	15,6	;volatile
   854                           
   855                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
   856  0045  168F               	bsf	15,5	;volatile
   857                           
   858                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
   859  0046  160F               	bsf	15,4	;volatile
   860                           
   861                           ;Oscilador.c: 45:             break;
   862  0047  2870               	goto	l7
   863  0048                     l15:	
   864                           ;Oscilador.c: 46:         default:
   865                           
   866                           
   867                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
   868  0048  1683               	bsf	3,5	;RP0=1, select bank1
   869  0049  1303               	bcf	3,6	;RP1=0, select bank1
   870  004A  170F               	bsf	15,6	;volatile
   871                           
   872                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
   873  004B  168F               	bsf	15,5	;volatile
   874                           
   875                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
   876  004C  120F               	bcf	15,4	;volatile
   877                           
   878                           ;Oscilador.c: 50:             break;
   879  004D  2870               	goto	l7
   880  004E                     l728:
   881  004E  0876               	movf	initOsc@IRCF,w
   882  004F  00F4               	movwf	??_initOsc
   883  0050  01F5               	clrf	??_initOsc+1
   884                           
   885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   886                           ; Switch size 1, requested type "simple"
   887                           ; Number of cases is 1, Range of values is 0 to 0
   888                           ; switch strategies available:
   889                           ; Name         Instructions Cycles
   890                           ; simple_byte            4     3 (average)
   891                           ; direct_byte           11     8 (fixed)
   892                           ; jumptable            260     6 (fixed)
   893                           ;	Chosen strategy is simple_byte
   894  0051  0875               	movf	??_initOsc+1,w
   895  0052  3A00               	xorlw	0	; case 0
   896  0053  1903               	skipnz
   897  0054  2856               	goto	l884
   898  0055  2848               	goto	l15
   899  0056                     l884:
   900                           
   901                           ; Switch size 1, requested type "simple"
   902                           ; Number of cases is 8, Range of values is 0 to 7
   903                           ; switch strategies available:
   904                           ; Name         Instructions Cycles
   905                           ; simple_byte           25    13 (average)
   906                           ; direct_byte           32     8 (fixed)
   907                           ; jumptable            260     6 (fixed)
   908                           ;	Chosen strategy is simple_byte
   909  0056  0874               	movf	??_initOsc,w
   910  0057  3A00               	xorlw	0	; case 0
   911  0058  1903               	skipnz
   912  0059  2818               	goto	l6
   913  005A  3A01               	xorlw	1	; case 1
   914  005B  1903               	skipnz
   915  005C  281E               	goto	l8
   916  005D  3A03               	xorlw	3	; case 2
   917  005E  1903               	skipnz
   918  005F  2824               	goto	l9
   919  0060  3A01               	xorlw	1	; case 3
   920  0061  1903               	skipnz
   921  0062  282A               	goto	l10
   922  0063  3A07               	xorlw	7	; case 4
   923  0064  1903               	skipnz
   924  0065  2830               	goto	l11
   925  0066  3A01               	xorlw	1	; case 5
   926  0067  1903               	skipnz
   927  0068  2836               	goto	l12
   928  0069  3A03               	xorlw	3	; case 6
   929  006A  1903               	skipnz
   930  006B  283C               	goto	l13
   931  006C  3A01               	xorlw	1	; case 7
   932  006D  1903               	skipnz
   933  006E  2842               	goto	l14
   934  006F  2848               	goto	l15
   935  0070                     l7:
   936                           
   937                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
   938  0070  140F               	bsf	15,0	;volatile
   939  0071                     l16:
   940  0071  0008               	return
   941  0072                     __end_of_initOsc:
   942                           
   943                           	psect	text3
   944  00FD                     __ptext3:	
   945 ;; *************** function _DisplayADC *****************
   946 ;; Defined at:
   947 ;;		line 142 in file "Prueba.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0
   964 ;;      Totals:         0       0       0       0       0
   965 ;;Total ram usage:        0 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; Hardware stack levels required when called:    1
   968 ;; This function calls:
   969 ;;		Nothing
   970 ;; This function is called by:
   971 ;;		_main
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           
   976                           ;psect for function _DisplayADC
   977  00FD                     _DisplayADC:
   978  00FD                     l782:	
   979                           ;incstack = 0
   980                           ; Regs used in _DisplayADC: [wreg]
   981                           
   982                           
   983                           ;Prueba.c: 143:     PORTEbits.RE1 = 1;
   984  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   985  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   986  00FF  1489               	bsf	9,1	;volatile
   987  0100                     l784:
   988                           
   989                           ;Prueba.c: 144:     PORTD = ADC_VALOR;
   990  0100  0877               	movf	_ADC_VALOR,w
   991  0101  0088               	movwf	8	;volatile
   992  0102                     l132:
   993  0102  0008               	return
   994  0103                     __end_of_DisplayADC:
   995                           
   996                           	psect	text4
   997  0103                     __ptext4:	
   998 ;; *************** function _ContadorLEDS *****************
   999 ;; Defined at:
  1000 ;;		line 138 in file "Prueba.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1014 ;;      Params:         0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0
  1017 ;;      Totals:         0       0       0       0       0
  1018 ;;Total ram usage:        0 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    1
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           
  1029                           ;psect for function _ContadorLEDS
  1030  0103                     _ContadorLEDS:
  1031  0103                     l780:	
  1032                           ;incstack = 0
  1033                           ; Regs used in _ContadorLEDS: [wreg]
  1034                           
  1035                           
  1036                           ;Prueba.c: 139:     PORTC = contador;
  1037  0103  0878               	movf	_contador,w
  1038  0104  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0105  1303               	bcf	3,6	;RP1=0, select bank0
  1040  0106  0087               	movwf	7	;volatile
  1041  0107                     l129:
  1042  0107  0008               	return
  1043  0108                     __end_of_ContadorLEDS:
  1044                           
  1045                           	psect	text5
  1046  0072                     __ptext5:	
  1047 ;; *************** function _ISR *****************
  1048 ;; Defined at:
  1049 ;;		line 54 in file "Prueba.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1063 ;;      Params:         0       0       0       0       0
  1064 ;;      Locals:         0       0       0       0       0
  1065 ;;      Temps:          4       0       0       0       0
  1066 ;;      Totals:         4       0       0       0       0
  1067 ;;Total ram usage:        4 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		Interrupt level 1
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           
  1077                           ;psect for function _ISR
  1078  0072                     _ISR:
  1079  0072                     i1l830:
  1080                           
  1081                           ;Prueba.c: 56:     if (INTCONbits.RBIF == 1){
  1082  0072  1C0B               	btfss	11,0	;volatile
  1083  0073  2875               	goto	u1_21
  1084  0074  2876               	goto	u1_20
  1085  0075                     u1_21:
  1086  0075  288F               	goto	i1l846
  1087  0076                     u1_20:
  1088  0076                     i1l832:
  1089                           
  1090                           ;Prueba.c: 57:         if (PORTBbits.RB0 == 1){
  1091  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1093  0078  1C06               	btfss	6,0	;volatile
  1094  0079  287B               	goto	u2_21
  1095  007A  287C               	goto	u2_20
  1096  007B                     u2_21:
  1097  007B  2884               	goto	i1l838
  1098  007C                     u2_20:
  1099  007C                     i1l107:	
  1100                           ;Prueba.c: 60:             }
  1101                           
  1102                           
  1103                           ;Prueba.c: 58:             while (PORTBbits.RB0 == 1){
  1104  007C  1806               	btfsc	6,0	;volatile
  1105  007D  287F               	goto	u3_21
  1106  007E  2880               	goto	u3_20
  1107  007F                     u3_21:
  1108  007F  287C               	goto	i1l107
  1109  0080                     u3_20:
  1110  0080                     i1l836:
  1111                           
  1112                           ;Prueba.c: 61:             contador++;
  1113  0080  3001               	movlw	1
  1114  0081  00F0               	movwf	??_ISR
  1115  0082  0870               	movf	??_ISR,w
  1116  0083  07F8               	addwf	_contador,f
  1117  0084                     i1l838:
  1118                           
  1119                           ;Prueba.c: 63:         if (PORTBbits.RB1 == 1){
  1120  0084  1C86               	btfss	6,1	;volatile
  1121  0085  2887               	goto	u4_21
  1122  0086  2888               	goto	u4_20
  1123  0087                     u4_21:
  1124  0087  288E               	goto	i1l844
  1125  0088                     u4_20:
  1126  0088                     i1l111:	
  1127                           ;Prueba.c: 66:             }
  1128                           
  1129                           
  1130                           ;Prueba.c: 64:             while (PORTBbits.RB1 == 1){
  1131  0088  1886               	btfsc	6,1	;volatile
  1132  0089  288B               	goto	u5_21
  1133  008A  288C               	goto	u5_20
  1134  008B                     u5_21:
  1135  008B  2888               	goto	i1l111
  1136  008C                     u5_20:
  1137  008C                     i1l842:
  1138                           
  1139                           ;Prueba.c: 67:             contador--;
  1140  008C  3001               	movlw	1
  1141  008D  02F8               	subwf	_contador,f
  1142  008E                     i1l844:
  1143                           
  1144                           ;Prueba.c: 69:         INTCONbits.RBIF = 0;
  1145  008E  100B               	bcf	11,0	;volatile
  1146  008F                     i1l846:
  1147                           
  1148                           ;Prueba.c: 72:     if (PIR1bits.ADIF == 1){
  1149  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0091  1F0C               	btfss	12,6	;volatile
  1152  0092  2894               	goto	u6_21
  1153  0093  2895               	goto	u6_20
  1154  0094                     u6_21:
  1155  0094  28A7               	goto	i1l115
  1156  0095                     u6_20:
  1157  0095                     i1l848:
  1158                           
  1159                           ;Prueba.c: 73:         PORTEbits.RE0 = 1;
  1160  0095  1409               	bsf	9,0	;volatile
  1161  0096                     i1l850:
  1162                           
  1163                           ;Prueba.c: 74:         ADC_VALOR = (ADRESL << 8) | ADRESH;
  1164  0096  081E               	movf	30,w	;volatile
  1165  0097  00F0               	movwf	??_ISR
  1166  0098  0870               	movf	??_ISR,w
  1167  0099  00F7               	movwf	_ADC_VALOR
  1168  009A                     i1l852:
  1169                           
  1170                           ;Prueba.c: 75:         PIR1bits.ADIF = 0;
  1171  009A  130C               	bcf	12,6	;volatile
  1172                           
  1173                           ;Prueba.c: 76:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1174  009B  301A               	movlw	26
  1175  009C  00F1               	movwf	??_ISR+1
  1176  009D  30F8               	movlw	248
  1177  009E  00F0               	movwf	??_ISR
  1178  009F                     u7_27:
  1179  009F  0BF0               	decfsz	??_ISR,f
  1180  00A0  289F               	goto	u7_27
  1181  00A1  0BF1               	decfsz	??_ISR+1,f
  1182  00A2  289F               	goto	u7_27
  1183  00A3  0000               	nop
  1184  00A4                     i1l854:
  1185                           
  1186                           ;Prueba.c: 77:         ADCON0bits.GO_nDONE = 1;
  1187  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1188  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1189  00A6  149F               	bsf	31,1	;volatile
  1190  00A7                     i1l115:
  1191  00A7  0873               	movf	??_ISR+3,w
  1192  00A8  008A               	movwf	10
  1193  00A9  0E72               	swapf	??_ISR+2,w
  1194  00AA  0083               	movwf	3
  1195  00AB  0EFE               	swapf	btemp,f
  1196  00AC  0E7E               	swapf	btemp,w
  1197  00AD  0009               	retfie
  1198  00AE                     __end_of_ISR:
  1199  007E                     btemp	set	126	;btemp
  1200  007E                     wtemp0	set	126
  1201                           
  1202                           	psect	intentry
  1203  0004                     __pintentry:	
  1204                           ;incstack = 0
  1205                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1206                           
  1207  0004                     interrupt_function:
  1208  007E                     saved_w	set	btemp
  1209  0004  00FE               	movwf	btemp
  1210  0005  0E03               	swapf	3,w
  1211  0006  00F2               	movwf	??_ISR+2
  1212  0007  080A               	movf	10,w
  1213  0008  00F3               	movwf	??_ISR+3
  1214  0009  120A  118A  2872   	ljmp	_ISR
  1215                           
  1216                           	psect	config
  1217                           
  1218                           ;Config register CONFIG1 @ 0x2007
  1219                           ;	Oscillator Selection bits
  1220                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1221                           ;	Watchdog Timer Enable bit
  1222                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1223                           ;	Power-up Timer Enable bit
  1224                           ;	PWRTE = OFF, PWRT disabled
  1225                           ;	RE3/MCLR pin function select bit
  1226                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1227                           ;	Code Protection bit
  1228                           ;	CP = OFF, Program memory code protection is disabled
  1229                           ;	Data Code Protection bit
  1230                           ;	CPD = OFF, Data memory code protection is disabled
  1231                           ;	Brown Out Reset Selection bits
  1232                           ;	BOREN = OFF, BOR disabled
  1233                           ;	Internal External Switchover bit
  1234                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1235                           ;	Fail-Safe Clock Monitor Enabled bit
  1236                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1237                           ;	Low Voltage Programming Enable bit
  1238                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1239                           ;	In-Circuit Debugger Mode bit
  1240                           ;	DEBUG = 0x1, unprogrammed default
  1241  2007                     	org	8199
  1242  2007  20D1               	dw	8401
  1243                           
  1244                           ;Config register CONFIG2 @ 0x2008
  1245                           ;	Brown-out Reset Selection bit
  1246                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1247                           ;	Flash Program Memory Self Write Enable bits
  1248                           ;	WRT = OFF, Write protection off
  1249  2008                     	org	8200
  1250  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_initOsc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                       _ContadorLEDS
                         _DisplayADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DisplayADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ContadorLEDS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ContadorLEDS
   _DisplayADC
   _setup
     _initOsc

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 01 11:59:44 2021

                      l6 0018                        l7 0070                        l8 001E  
                      l9 0024                       l10 002A                       l11 0030  
                     l12 0036                       l13 003C                       l14 0042  
                     l15 0048                       l16 0071           ??_ContadorLEDS 0074  
                    l132 0102                      l126 00E8                      l129 0107  
                    l724 0017                      l740 00B9                      l750 00CA  
                    l742 00BD                      l734 00AE                      l728 004E  
                    l760 00D9                      l752 00CD                      l744 00C0  
                    l736 00B4                      l770 00E0                      l762 00DA  
                    l754 00D0                      l746 00C4                      l738 00B8  
                    l780 0103                      l772 00E1                      l764 00DB  
                    l756 00D3                      l748 00C7                      l860 00EF  
                    l782 00FD                      l774 00E2                      l766 00DC  
                    l758 00D6                      l862 00F4                      l784 0100  
                    l776 00E5                      l768 00DF                      l856 00E9  
                    l778 00E7                      l858 00EA                      l884 0056  
                    _ISR 0072                     ?_ISR 0070                     u1_20 0076  
                   u1_21 0075                     u2_20 007C                     u2_21 007B  
                   u3_20 0080                     u3_21 007F                     u4_20 0088  
                   u4_21 0087                     u5_20 008C                     u5_21 008B  
                   u6_20 0095                     u6_21 0094                     u7_27 009F  
                   _main 00E9                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l111 0088                    i1l115 00A7                    i1l107 007C  
                  i1l830 0072                    i1l832 0076                    i1l850 0096  
                  i1l842 008C                    i1l852 009A                    i1l844 008E  
                  i1l836 0080                    i1l854 00A4                    i1l838 0084  
                  i1l846 008F                    i1l848 0095                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
             _DisplayADC 00FD          __end_of_initOsc 0072                    _setup 00AE  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00FD                   ??_main 0077  
                 _ADCON0 001F                   _ADRESH 001E              initOsc@IRCF 0076  
                 ?_setup 0070                   _ANSELH 0189     __end_of_ContadorLEDS 0108  
              ??_initOsc 0074              ?_DisplayADC 0070                   saved_w 007E  
__end_of__initialization 0012           __pcstackCOMMON 0070            __end_of_setup 00E9  
                ??_setup 0077               __pmaintext 00E9      __size_of_DisplayADC 0006  
             __pintentry 0004    __size_of_ContadorLEDS 0005                _ADC_VALOR 0077  
                __ptext1 00AE                  __ptext2 0016                  __ptext3 00FD  
                __ptext4 0103                  __ptext5 0072             _ContadorLEDS 0103  
           __size_of_ISR 003C                  _initOsc 0016     end_of_initialization 0012  
              _PORTBbits 0006                _PORTEbits 0009             ??_DisplayADC 0074  
     __end_of_DisplayADC 0103      start_initialization 000F              __end_of_ISR 00AE  
              _Valor_hex 0079              __pbssCOMMON 0077                ___latbits 0002  
               ?_initOsc 0070           __size_of_setup 003B        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F         __size_of_initOsc 005C                 _contador 0078  
          __size_of_main 0014               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F            ?_ContadorLEDS 0070  
