

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 03 20:47:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  0088                     	;# 
   409  0089                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0094                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009A                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  009F                     	;# 
   432  0105                     	;# 
   433  0107                     	;# 
   434  0108                     	;# 
   435  0109                     	;# 
   436  010C                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  010F                     	;# 
   441  0185                     	;# 
   442  0187                     	;# 
   443  0188                     	;# 
   444  0189                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447  000B                     _INTCON	set	11
   448  001F                     _ADCON0	set	31
   449  0009                     _PORTE	set	9
   450  0007                     _PORTC	set	7
   451  0006                     _PORTB	set	6
   452  0005                     _PORTA	set	5
   453  0008                     _PORTD	set	8
   454  0009                     _PORTEbits	set	9
   455  0001                     _TMR0	set	1
   456  001F                     _ADCON0bits	set	31
   457  001E                     _ADRESH	set	30
   458  000C                     _PIR1bits	set	12
   459  0006                     _PORTBbits	set	6
   460  000B                     _INTCONbits	set	11
   461  0081                     _OPTION_REG	set	129
   462  008C                     _PIE1bits	set	140
   463  0096                     _IOCBbits	set	150
   464  0081                     _OPTION_REGbits	set	129
   465  0089                     _TRISE	set	137
   466  0088                     _TRISD	set	136
   467  0087                     _TRISC	set	135
   468  0086                     _TRISB	set	134
   469  0085                     _TRISA	set	133
   470  009E                     _ADRESL	set	158
   471  008F                     _OSCCONbits	set	143
   472  0189                     _ANSELH	set	393
   473  0188                     _ANSEL	set	392
   474                           
   475                           	psect	cinit
   476  000F                     start_initialization:	
   477                           ; #config settings
   478                           
   479  000F                     __initialization:
   480                           
   481                           ; Clear objects allocated to COMMON
   482  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   483  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   484  0011  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   485  0012  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   486                           
   487                           ; Clear objects allocated to BANK0
   488  0013  1283               	bcf	3,5	;RP0=0, select bank0
   489  0014  1303               	bcf	3,6	;RP1=0, select bank0
   490  0015  01A0               	clrf	__pbssBANK0& (0+127)
   491  0016  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   492  0017  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   493  0018  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   494  0019  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   495  001A  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   496  001B  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   497  001C  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   498  001D                     end_of_initialization:	
   499                           ;End of C runtime variable initialization code
   500                           
   501  001D                     __end_of__initialization:
   502  001D  0183               	clrf	3
   503  001E  120A  118A  293F   	ljmp	_main	;jump to C main() function
   504                           
   505                           	psect	bssCOMMON
   506  007A                     __pbssCOMMON:
   507  007A                     _ADC_NIBBLE1:
   508  007A                     	ds	1
   509  007B                     _ADC_SWAP:
   510  007B                     	ds	1
   511  007C                     _contador:
   512  007C                     	ds	1
   513  007D                     _Valor_hex:
   514  007D                     	ds	1
   515                           
   516                           	psect	bssBANK0
   517  0020                     __pbssBANK0:
   518  0020                     _ADC_VALOR:
   519  0020                     	ds	2
   520  0022                     _VAL_NIBBLE2:
   521  0022                     	ds	1
   522  0023                     _VAL_NIBBLE1:
   523  0023                     	ds	1
   524  0024                     _VAL_SWAP:
   525  0024                     	ds	1
   526  0025                     _VAL:
   527  0025                     	ds	1
   528  0026                     _cont_multiplex:
   529  0026                     	ds	1
   530  0027                     _ADC_NIBBLE2:
   531  0027                     	ds	1
   532                           
   533                           	psect	cstackCOMMON
   534  0070                     __pcstackCOMMON:
   535  0070                     ?_ADC:
   536  0070                     ?_SWAP_ADC:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ??_SWAP_ADC:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_NIBBLE1_ADC:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ??_NIBBLE1_ADC:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_NIBBLE2_ADC:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ??_NIBBLE2_ADC:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_setup:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_ContadorLEDS:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_InitTimer0:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_initOsc:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_ISR:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_main:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ADC@ADRESL_:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ADC@ADRESH_:	
   576                           ; 1 bytes @ 0x0
   577                           
   578                           
   579                           ; 1 bytes @ 0x0
   580  0070                     	ds	1
   581  0071                     ??_ADC:
   582  0071                     NIBBLE1_ADC@VAL_ADC:	
   583                           ; 1 bytes @ 0x1
   584                           
   585  0071                     NIBBLE2_ADC@VAL_SWAP:	
   586                           ; 1 bytes @ 0x1
   587                           
   588                           
   589                           ; 1 bytes @ 0x1
   590  0071                     	ds	3
   591  0074                     SWAP_ADC@VAL_ADC:
   592                           
   593                           ; 1 bytes @ 0x4
   594  0074                     	ds	1
   595  0075                     ??_ISR:
   596                           
   597                           ; 1 bytes @ 0x5
   598  0075                     	ds	5
   599                           
   600                           	psect	cstackBANK0
   601  0028                     __pcstackBANK0:
   602  0028                     ??_ContadorLEDS:
   603  0028                     ??_InitTimer0:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0028                     ??_initOsc:	
   607                           ; 1 bytes @ 0x0
   608                           
   609                           
   610                           ; 1 bytes @ 0x0
   611  0028                     	ds	2
   612  002A                     initOsc@IRCF:
   613                           
   614                           ; 1 bytes @ 0x2
   615  002A                     	ds	1
   616  002B                     ??_setup:
   617  002B                     ??_main:	
   618                           ; 1 bytes @ 0x3
   619                           
   620                           
   621                           ; 1 bytes @ 0x3
   622  002B                     	ds	1
   623                           
   624                           	psect	maintext
   625  013F                     __pmaintext:	
   626 ;;
   627 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   628 ;;
   629 ;; *************** function _main *****************
   630 ;; Defined at:
   631 ;;		line 107 in file "Prueba.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : B00/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   645 ;;      Params:         0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0
   647 ;;      Temps:          0       1       0       0       0
   648 ;;      Totals:         0       1       0       0       0
   649 ;;Total ram usage:        1 bytes
   650 ;; Hardware stack levels required when called:    4
   651 ;; This function calls:
   652 ;;		_ContadorLEDS
   653 ;;		_setup
   654 ;; This function is called by:
   655 ;;		Startup code after reset
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           
   660                           ;psect for function _main
   661  013F                     _main:
   662  013F                     l1190:	
   663                           ;incstack = 0
   664                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   665                           
   666                           
   667                           ;Prueba.c: 108:     setup();
   668  013F  120A  118A  20F4  120A  118A  	fcall	_setup
   669  0144                     l1192:
   670                           
   671                           ;Prueba.c: 109:     contador = 0;
   672  0144  01FC               	clrf	_contador
   673  0145                     l1194:
   674                           
   675                           ;Prueba.c: 110:     cont_multiplex = 0;
   676  0145  1283               	bcf	3,5	;RP0=0, select bank0
   677  0146  1303               	bcf	3,6	;RP1=0, select bank0
   678  0147  01A6               	clrf	_cont_multiplex
   679  0148                     l1196:
   680                           
   681                           ;Prueba.c: 111:     PORTEbits.RE1 = 1;
   682  0148  1489               	bsf	9,1	;volatile
   683  0149                     l1198:
   684                           
   685                           ;Prueba.c: 117:         ContadorLEDS();
   686  0149  120A  118A  21A5  120A  118A  	fcall	_ContadorLEDS
   687  014E                     l1200:
   688                           
   689                           ;Prueba.c: 118:         if (cont_multiplex == 20){
   690  014E  3014               	movlw	20
   691  014F  1283               	bcf	3,5	;RP0=0, select bank0
   692  0150  1303               	bcf	3,6	;RP1=0, select bank0
   693  0151  0626               	xorwf	_cont_multiplex,w
   694  0152  1D03               	btfss	3,2
   695  0153  2955               	goto	u201
   696  0154  2956               	goto	u200
   697  0155                     u201:
   698  0155  2949               	goto	l1198
   699  0156                     u200:
   700  0156                     l1202:
   701                           
   702                           ;Prueba.c: 119:             PORTD++;
   703  0156  3001               	movlw	1
   704  0157  00AB               	movwf	??_main
   705  0158  082B               	movf	??_main,w
   706  0159  0788               	addwf	8,f	;volatile
   707  015A                     l1204:
   708                           
   709                           ;Prueba.c: 120:             cont_multiplex = 0;
   710  015A  01A6               	clrf	_cont_multiplex
   711  015B  2949               	goto	l1198
   712  015C  120A  118A  280C   	ljmp	start
   713  015F                     __end_of_main:
   714                           
   715                           	psect	text1
   716  00F4                     __ptext1:	
   717 ;; *************** function _setup *****************
   718 ;; Defined at:
   719 ;;		line 137 in file "Prueba.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0
   736 ;;      Totals:         0       0       0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    3
   740 ;; This function calls:
   741 ;;		_InitTimer0
   742 ;;		_initOsc
   743 ;; This function is called by:
   744 ;;		_main
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           
   749                           ;psect for function _setup
   750  00F4                     _setup:
   751  00F4                     l1088:	
   752                           ;incstack = 0
   753                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   754                           
   755                           
   756                           ;Prueba.c: 138:     initOsc(0b00000110);
   757  00F4  3006               	movlw	6
   758  00F5  120A  118A  2096  120A  118A  	fcall	_initOsc
   759  00FA                     l1090:
   760                           
   761                           ;Prueba.c: 139:     ANSEL = 0b00000001;
   762  00FA  3001               	movlw	1
   763  00FB  1683               	bsf	3,5	;RP0=1, select bank3
   764  00FC  1703               	bsf	3,6	;RP1=1, select bank3
   765  00FD  0088               	movwf	8	;volatile
   766  00FE                     l1092:
   767                           
   768                           ;Prueba.c: 140:     ANSELH = 0;
   769  00FE  0189               	clrf	9	;volatile
   770  00FF                     l1094:
   771                           
   772                           ;Prueba.c: 141:     TRISA = 0b00000001;
   773  00FF  3001               	movlw	1
   774  0100  1683               	bsf	3,5	;RP0=1, select bank1
   775  0101  1303               	bcf	3,6	;RP1=0, select bank1
   776  0102  0085               	movwf	5	;volatile
   777  0103                     l1096:
   778                           
   779                           ;Prueba.c: 142:     PORTA = 0;
   780  0103  1283               	bcf	3,5	;RP0=0, select bank0
   781  0104  1303               	bcf	3,6	;RP1=0, select bank0
   782  0105  0185               	clrf	5	;volatile
   783  0106                     l1098:
   784                           
   785                           ;Prueba.c: 143:     TRISB = 0b00000011;
   786  0106  3003               	movlw	3
   787  0107  1683               	bsf	3,5	;RP0=1, select bank1
   788  0108  1303               	bcf	3,6	;RP1=0, select bank1
   789  0109  0086               	movwf	6	;volatile
   790  010A                     l1100:
   791                           
   792                           ;Prueba.c: 144:     PORTB = 0;
   793  010A  1283               	bcf	3,5	;RP0=0, select bank0
   794  010B  1303               	bcf	3,6	;RP1=0, select bank0
   795  010C  0186               	clrf	6	;volatile
   796  010D                     l1102:
   797                           
   798                           ;Prueba.c: 145:     TRISC = 0;
   799  010D  1683               	bsf	3,5	;RP0=1, select bank1
   800  010E  1303               	bcf	3,6	;RP1=0, select bank1
   801  010F  0187               	clrf	7	;volatile
   802  0110                     l1104:
   803                           
   804                           ;Prueba.c: 146:     PORTC = 0;
   805  0110  1283               	bcf	3,5	;RP0=0, select bank0
   806  0111  1303               	bcf	3,6	;RP1=0, select bank0
   807  0112  0187               	clrf	7	;volatile
   808  0113                     l1106:
   809                           
   810                           ;Prueba.c: 147:     TRISD = 0;
   811  0113  1683               	bsf	3,5	;RP0=1, select bank1
   812  0114  1303               	bcf	3,6	;RP1=0, select bank1
   813  0115  0188               	clrf	8	;volatile
   814  0116                     l1108:
   815                           
   816                           ;Prueba.c: 148:     PORTD = 0;
   817  0116  1283               	bcf	3,5	;RP0=0, select bank0
   818  0117  1303               	bcf	3,6	;RP1=0, select bank0
   819  0118  0188               	clrf	8	;volatile
   820  0119                     l1110:
   821                           
   822                           ;Prueba.c: 149:     TRISE = 0;
   823  0119  1683               	bsf	3,5	;RP0=1, select bank1
   824  011A  1303               	bcf	3,6	;RP1=0, select bank1
   825  011B  0189               	clrf	9	;volatile
   826  011C                     l1112:
   827                           
   828                           ;Prueba.c: 150:     PORTE = 0;
   829  011C  1283               	bcf	3,5	;RP0=0, select bank0
   830  011D  1303               	bcf	3,6	;RP1=0, select bank0
   831  011E  0189               	clrf	9	;volatile
   832  011F                     l1114:
   833                           
   834                           ;Prueba.c: 151:     INTCONbits.GIE = 1;
   835  011F  178B               	bsf	11,7	;volatile
   836  0120                     l1116:
   837                           
   838                           ;Prueba.c: 152:     INTCONbits.T0IE = 1;
   839  0120  168B               	bsf	11,5	;volatile
   840  0121                     l1118:
   841                           
   842                           ;Prueba.c: 153:     OPTION_REGbits.nRBPU =1;
   843  0121  1683               	bsf	3,5	;RP0=1, select bank1
   844  0122  1303               	bcf	3,6	;RP1=0, select bank1
   845  0123  1781               	bsf	1,7	;volatile
   846  0124                     l1120:
   847                           
   848                           ;Prueba.c: 154:     OPTION_REGbits.PS0 = 1;
   849  0124  1401               	bsf	1,0	;volatile
   850  0125                     l1122:
   851                           
   852                           ;Prueba.c: 155:     OPTION_REGbits.PS1 = 1;
   853  0125  1481               	bsf	1,1	;volatile
   854  0126                     l1124:
   855                           
   856                           ;Prueba.c: 156:     OPTION_REGbits.PS2 = 1;
   857  0126  1501               	bsf	1,2	;volatile
   858  0127                     l1126:
   859                           
   860                           ;Prueba.c: 157:     TMR0 = 61;
   861  0127  303D               	movlw	61
   862  0128  1283               	bcf	3,5	;RP0=0, select bank0
   863  0129  1303               	bcf	3,6	;RP1=0, select bank0
   864  012A  0081               	movwf	1	;volatile
   865  012B                     l1128:
   866                           
   867                           ;Prueba.c: 158:     InitTimer0();
   868  012B  120A  118A  217E  120A  118A  	fcall	_InitTimer0
   869  0130                     l1130:
   870                           
   871                           ;Prueba.c: 161:     INTCONbits.RBIE = 1;
   872  0130  158B               	bsf	11,3	;volatile
   873  0131                     l1132:
   874                           
   875                           ;Prueba.c: 162:     INTCONbits.RBIF = 0;
   876  0131  100B               	bcf	11,0	;volatile
   877  0132                     l1134:
   878                           
   879                           ;Prueba.c: 163:     IOCBbits.IOCB0 = 1;
   880  0132  1683               	bsf	3,5	;RP0=1, select bank1
   881  0133  1303               	bcf	3,6	;RP1=0, select bank1
   882  0134  1416               	bsf	22,0	;volatile
   883  0135                     l1136:
   884                           
   885                           ;Prueba.c: 164:     IOCBbits.IOCB1 = 1;
   886  0135  1496               	bsf	22,1	;volatile
   887  0136                     l1138:
   888                           
   889                           ;Prueba.c: 167:     INTCONbits.PEIE = 1;
   890  0136  170B               	bsf	11,6	;volatile
   891  0137                     l1140:
   892                           
   893                           ;Prueba.c: 168:     PIE1bits.ADIE = 1;
   894  0137  170C               	bsf	12,6	;volatile
   895  0138                     l1142:
   896                           
   897                           ;Prueba.c: 169:     PIR1bits.ADIF = 0;
   898  0138  1283               	bcf	3,5	;RP0=0, select bank0
   899  0139  1303               	bcf	3,6	;RP1=0, select bank0
   900  013A  130C               	bcf	12,6	;volatile
   901  013B                     l1144:
   902                           
   903                           ;Prueba.c: 170:     ADCON0 = 0b11000001;
   904  013B  30C1               	movlw	193
   905  013C  009F               	movwf	31	;volatile
   906  013D                     l1146:
   907                           
   908                           ;Prueba.c: 171:     ADCON0bits.GO_nDONE = 1;
   909  013D  149F               	bsf	31,1	;volatile
   910  013E                     l152:
   911  013E  0008               	return
   912  013F                     __end_of_setup:
   913                           
   914                           	psect	text2
   915  0096                     __ptext2:	
   916 ;; *************** function _initOsc *****************
   917 ;; Defined at:
   918 ;;		line 3 in file "Oscilador.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  IRCF            1    wreg     unsigned char 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  IRCF            1    2[BANK0 ] unsigned char 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   932 ;;      Params:         0       0       0       0       0
   933 ;;      Locals:         0       1       0       0       0
   934 ;;      Temps:          0       2       0       0       0
   935 ;;      Totals:         0       3       0       0       0
   936 ;;Total ram usage:        3 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; Hardware stack levels required when called:    2
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_setup
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function _initOsc
   948  0096                     _initOsc:
   949                           
   950                           ;incstack = 0
   951                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   952                           ;initOsc@IRCF stored from wreg
   953  0096  1283               	bcf	3,5	;RP0=0, select bank0
   954  0097  1303               	bcf	3,6	;RP1=0, select bank0
   955  0098  00AA               	movwf	initOsc@IRCF
   956  0099                     l1004:
   957                           
   958                           ;Oscilador.c: 5:     switch(IRCF){
   959  0099  28D0               	goto	l1008
   960  009A                     l6:	
   961                           ;Oscilador.c: 6:         case 0:
   962                           
   963                           
   964                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   965  009A  1683               	bsf	3,5	;RP0=1, select bank1
   966  009B  1303               	bcf	3,6	;RP1=0, select bank1
   967  009C  130F               	bcf	15,6	;volatile
   968                           
   969                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   970  009D  128F               	bcf	15,5	;volatile
   971                           
   972                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   973  009E  120F               	bcf	15,4	;volatile
   974                           
   975                           ;Oscilador.c: 10:             break;
   976  009F  28F2               	goto	l7
   977  00A0                     l8:	
   978                           ;Oscilador.c: 11:          case 1:
   979                           
   980                           
   981                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   982  00A0  1683               	bsf	3,5	;RP0=1, select bank1
   983  00A1  1303               	bcf	3,6	;RP1=0, select bank1
   984  00A2  130F               	bcf	15,6	;volatile
   985                           
   986                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   987  00A3  128F               	bcf	15,5	;volatile
   988                           
   989                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   990  00A4  160F               	bsf	15,4	;volatile
   991                           
   992                           ;Oscilador.c: 15:             break;
   993  00A5  28F2               	goto	l7
   994  00A6                     l9:	
   995                           ;Oscilador.c: 16:         case 2:
   996                           
   997                           
   998                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   999  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  1000  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  1001  00A8  130F               	bcf	15,6	;volatile
  1002                           
  1003                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  1004  00A9  168F               	bsf	15,5	;volatile
  1005                           
  1006                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  1007  00AA  120F               	bcf	15,4	;volatile
  1008                           
  1009                           ;Oscilador.c: 20:             break;
  1010  00AB  28F2               	goto	l7
  1011  00AC                     l10:	
  1012                           ;Oscilador.c: 21:         case 3:
  1013                           
  1014                           
  1015                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  1016  00AC  1683               	bsf	3,5	;RP0=1, select bank1
  1017  00AD  1303               	bcf	3,6	;RP1=0, select bank1
  1018  00AE  130F               	bcf	15,6	;volatile
  1019                           
  1020                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  1021  00AF  168F               	bsf	15,5	;volatile
  1022                           
  1023                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  1024  00B0  160F               	bsf	15,4	;volatile
  1025                           
  1026                           ;Oscilador.c: 25:             break;
  1027  00B1  28F2               	goto	l7
  1028  00B2                     l11:	
  1029                           ;Oscilador.c: 26:         case 4:
  1030                           
  1031                           
  1032                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  1033  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  1034  00B3  1303               	bcf	3,6	;RP1=0, select bank1
  1035  00B4  170F               	bsf	15,6	;volatile
  1036                           
  1037                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  1038  00B5  128F               	bcf	15,5	;volatile
  1039                           
  1040                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  1041  00B6  120F               	bcf	15,4	;volatile
  1042                           
  1043                           ;Oscilador.c: 30:             break;
  1044  00B7  28F2               	goto	l7
  1045  00B8                     l12:	
  1046                           ;Oscilador.c: 31:         case 5:
  1047                           
  1048                           
  1049                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1050  00B8  1683               	bsf	3,5	;RP0=1, select bank1
  1051  00B9  1303               	bcf	3,6	;RP1=0, select bank1
  1052  00BA  170F               	bsf	15,6	;volatile
  1053                           
  1054                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1055  00BB  128F               	bcf	15,5	;volatile
  1056                           
  1057                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1058  00BC  160F               	bsf	15,4	;volatile
  1059                           
  1060                           ;Oscilador.c: 35:             break;
  1061  00BD  28F2               	goto	l7
  1062  00BE                     l13:	
  1063                           ;Oscilador.c: 36:         case 6:
  1064                           
  1065                           
  1066                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1067  00BE  1683               	bsf	3,5	;RP0=1, select bank1
  1068  00BF  1303               	bcf	3,6	;RP1=0, select bank1
  1069  00C0  170F               	bsf	15,6	;volatile
  1070                           
  1071                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1072  00C1  168F               	bsf	15,5	;volatile
  1073                           
  1074                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1075  00C2  120F               	bcf	15,4	;volatile
  1076                           
  1077                           ;Oscilador.c: 40:             break;
  1078  00C3  28F2               	goto	l7
  1079  00C4                     l14:	
  1080                           ;Oscilador.c: 41:         case 7:
  1081                           
  1082                           
  1083                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1084  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  1085  00C5  1303               	bcf	3,6	;RP1=0, select bank1
  1086  00C6  170F               	bsf	15,6	;volatile
  1087                           
  1088                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1089  00C7  168F               	bsf	15,5	;volatile
  1090                           
  1091                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1092  00C8  160F               	bsf	15,4	;volatile
  1093                           
  1094                           ;Oscilador.c: 45:             break;
  1095  00C9  28F2               	goto	l7
  1096  00CA                     l15:	
  1097                           ;Oscilador.c: 46:         default:
  1098                           
  1099                           
  1100                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1101  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1102  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  1103  00CC  170F               	bsf	15,6	;volatile
  1104                           
  1105                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1106  00CD  168F               	bsf	15,5	;volatile
  1107                           
  1108                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1109  00CE  120F               	bcf	15,4	;volatile
  1110                           
  1111                           ;Oscilador.c: 50:             break;
  1112  00CF  28F2               	goto	l7
  1113  00D0                     l1008:
  1114  00D0  082A               	movf	initOsc@IRCF,w
  1115  00D1  00A8               	movwf	??_initOsc
  1116  00D2  01A9               	clrf	??_initOsc+1
  1117                           
  1118                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1119                           ; Switch size 1, requested type "simple"
  1120                           ; Number of cases is 1, Range of values is 0 to 0
  1121                           ; switch strategies available:
  1122                           ; Name         Instructions Cycles
  1123                           ; simple_byte            4     3 (average)
  1124                           ; direct_byte           11     8 (fixed)
  1125                           ; jumptable            260     6 (fixed)
  1126                           ;	Chosen strategy is simple_byte
  1127  00D3  0829               	movf	??_initOsc+1,w
  1128  00D4  3A00               	xorlw	0	; case 0
  1129  00D5  1903               	skipnz
  1130  00D6  28D8               	goto	l1240
  1131  00D7  28CA               	goto	l15
  1132  00D8                     l1240:
  1133                           
  1134                           ; Switch size 1, requested type "simple"
  1135                           ; Number of cases is 8, Range of values is 0 to 7
  1136                           ; switch strategies available:
  1137                           ; Name         Instructions Cycles
  1138                           ; simple_byte           25    13 (average)
  1139                           ; direct_byte           32     8 (fixed)
  1140                           ; jumptable            260     6 (fixed)
  1141                           ;	Chosen strategy is simple_byte
  1142  00D8  0828               	movf	??_initOsc,w
  1143  00D9  3A00               	xorlw	0	; case 0
  1144  00DA  1903               	skipnz
  1145  00DB  289A               	goto	l6
  1146  00DC  3A01               	xorlw	1	; case 1
  1147  00DD  1903               	skipnz
  1148  00DE  28A0               	goto	l8
  1149  00DF  3A03               	xorlw	3	; case 2
  1150  00E0  1903               	skipnz
  1151  00E1  28A6               	goto	l9
  1152  00E2  3A01               	xorlw	1	; case 3
  1153  00E3  1903               	skipnz
  1154  00E4  28AC               	goto	l10
  1155  00E5  3A07               	xorlw	7	; case 4
  1156  00E6  1903               	skipnz
  1157  00E7  28B2               	goto	l11
  1158  00E8  3A01               	xorlw	1	; case 5
  1159  00E9  1903               	skipnz
  1160  00EA  28B8               	goto	l12
  1161  00EB  3A03               	xorlw	3	; case 6
  1162  00EC  1903               	skipnz
  1163  00ED  28BE               	goto	l13
  1164  00EE  3A01               	xorlw	1	; case 7
  1165  00EF  1903               	skipnz
  1166  00F0  28C4               	goto	l14
  1167  00F1  28CA               	goto	l15
  1168  00F2                     l7:
  1169                           
  1170                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1171  00F2  140F               	bsf	15,0	;volatile
  1172  00F3                     l16:
  1173  00F3  0008               	return
  1174  00F4                     __end_of_initOsc:
  1175                           
  1176                           	psect	text3
  1177  017E                     __ptext3:	
  1178 ;; *************** function _InitTimer0 *****************
  1179 ;; Defined at:
  1180 ;;		line 183 in file "Prueba.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1194 ;;      Params:         0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0
  1196 ;;      Temps:          0       0       0       0       0
  1197 ;;      Totals:         0       0       0       0       0
  1198 ;;Total ram usage:        0 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    2
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_setup
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           
  1209                           ;psect for function _InitTimer0
  1210  017E                     _InitTimer0:
  1211  017E                     l1016:	
  1212                           ;incstack = 0
  1213                           ; Regs used in _InitTimer0: [wreg]
  1214                           
  1215                           
  1216                           ;Prueba.c: 184:   OPTION_REG = 0x87;
  1217  017E  3087               	movlw	135
  1218  017F  1683               	bsf	3,5	;RP0=1, select bank1
  1219  0180  1303               	bcf	3,6	;RP1=0, select bank1
  1220  0181  0081               	movwf	1	;volatile
  1221                           
  1222                           ;Prueba.c: 185:   TMR0 = 61;
  1223  0182  303D               	movlw	61
  1224  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1226  0185  0081               	movwf	1	;volatile
  1227                           
  1228                           ;Prueba.c: 186:   INTCON = 0xA0;
  1229  0186  30A0               	movlw	160
  1230  0187  008B               	movwf	11	;volatile
  1231  0188                     l158:
  1232  0188  0008               	return
  1233  0189                     __end_of_InitTimer0:
  1234                           
  1235                           	psect	text4
  1236  01A5                     __ptext4:	
  1237 ;; *************** function _ContadorLEDS *****************
  1238 ;; Defined at:
  1239 ;;		line 178 in file "Prueba.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1253 ;;      Params:         0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0
  1256 ;;      Totals:         0       0       0       0       0
  1257 ;;Total ram usage:        0 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    2
  1260 ;; This function calls:
  1261 ;;		Nothing
  1262 ;; This function is called by:
  1263 ;;		_main
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           
  1268                           ;psect for function _ContadorLEDS
  1269  01A5                     _ContadorLEDS:
  1270  01A5                     l1148:	
  1271                           ;incstack = 0
  1272                           ; Regs used in _ContadorLEDS: [wreg]
  1273                           
  1274                           
  1275                           ;Prueba.c: 179:     PORTC = contador;
  1276  01A5  087C               	movf	_contador,w
  1277  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1278  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1279  01A8  0087               	movwf	7	;volatile
  1280  01A9                     l155:
  1281  01A9  0008               	return
  1282  01AA                     __end_of_ContadorLEDS:
  1283                           
  1284                           	psect	text5
  1285  0021                     __ptext5:	
  1286 ;; *************** function _ISR *****************
  1287 ;; Defined at:
  1288 ;;		line 58 in file "Prueba.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2, status,0, pclath, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1302 ;;      Params:         0       0       0       0       0
  1303 ;;      Locals:         0       0       0       0       0
  1304 ;;      Temps:          5       0       0       0       0
  1305 ;;      Totals:         5       0       0       0       0
  1306 ;;Total ram usage:        5 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    1
  1309 ;; This function calls:
  1310 ;;		_ADC
  1311 ;;		_NIBBLE1_ADC
  1312 ;;		_NIBBLE2_ADC
  1313 ;;		_SWAP_ADC
  1314 ;; This function is called by:
  1315 ;;		Interrupt level 1
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           
  1320                           ;psect for function _ISR
  1321  0021                     _ISR:
  1322  0021                     i1l1150:
  1323                           
  1324                           ;Prueba.c: 60:     if (INTCONbits.RBIF == 1){
  1325  0021  1C0B               	btfss	11,0	;volatile
  1326  0022  2824               	goto	u13_21
  1327  0023  2825               	goto	u13_20
  1328  0024                     u13_21:
  1329  0024  283E               	goto	i1l1166
  1330  0025                     u13_20:
  1331  0025                     i1l1152:
  1332                           
  1333                           ;Prueba.c: 61:         if (PORTBbits.RB0 == 1){
  1334  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0027  1C06               	btfss	6,0	;volatile
  1337  0028  282A               	goto	u14_21
  1338  0029  282B               	goto	u14_20
  1339  002A                     u14_21:
  1340  002A  2833               	goto	i1l1158
  1341  002B                     u14_20:
  1342  002B                     i1l131:	
  1343                           ;Prueba.c: 64:             }
  1344                           
  1345                           
  1346                           ;Prueba.c: 62:             while (PORTBbits.RB0 == 1){
  1347  002B  1806               	btfsc	6,0	;volatile
  1348  002C  282E               	goto	u15_21
  1349  002D  282F               	goto	u15_20
  1350  002E                     u15_21:
  1351  002E  282B               	goto	i1l131
  1352  002F                     u15_20:
  1353  002F                     i1l1156:
  1354                           
  1355                           ;Prueba.c: 65:             contador++;
  1356  002F  3001               	movlw	1
  1357  0030  00F5               	movwf	??_ISR
  1358  0031  0875               	movf	??_ISR,w
  1359  0032  07FC               	addwf	_contador,f
  1360  0033                     i1l1158:
  1361                           
  1362                           ;Prueba.c: 67:         if (PORTBbits.RB1 == 1){
  1363  0033  1C86               	btfss	6,1	;volatile
  1364  0034  2836               	goto	u16_21
  1365  0035  2837               	goto	u16_20
  1366  0036                     u16_21:
  1367  0036  283D               	goto	i1l1164
  1368  0037                     u16_20:
  1369  0037                     i1l135:	
  1370                           ;Prueba.c: 70:             }
  1371                           
  1372                           
  1373                           ;Prueba.c: 68:             while (PORTBbits.RB1 == 1){
  1374  0037  1886               	btfsc	6,1	;volatile
  1375  0038  283A               	goto	u17_21
  1376  0039  283B               	goto	u17_20
  1377  003A                     u17_21:
  1378  003A  2837               	goto	i1l135
  1379  003B                     u17_20:
  1380  003B                     i1l1162:
  1381                           
  1382                           ;Prueba.c: 71:             contador--;
  1383  003B  3001               	movlw	1
  1384  003C  02FC               	subwf	_contador,f
  1385  003D                     i1l1164:
  1386                           
  1387                           ;Prueba.c: 73:         INTCONbits.RBIF = 0;
  1388  003D  100B               	bcf	11,0	;volatile
  1389  003E                     i1l1166:
  1390                           
  1391                           ;Prueba.c: 76:     if (PIR1bits.ADIF == 1){
  1392  003E  1283               	bcf	3,5	;RP0=0, select bank0
  1393  003F  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0040  1F0C               	btfss	12,6	;volatile
  1395  0041  2843               	goto	u18_21
  1396  0042  2844               	goto	u18_20
  1397  0043                     u18_21:
  1398  0043  2884               	goto	i1l1182
  1399  0044                     u18_20:
  1400  0044                     i1l1168:
  1401                           
  1402                           ;Prueba.c: 77:         ADC_VALOR = ADC(ADRESL, ADRESH);
  1403  0044  081E               	movf	30,w	;volatile
  1404  0045  00F5               	movwf	??_ISR
  1405  0046  0875               	movf	??_ISR,w
  1406  0047  00F0               	movwf	ADC@ADRESH_
  1407  0048  1683               	bsf	3,5	;RP0=1, select bank1
  1408  0049  1303               	bcf	3,6	;RP1=0, select bank1
  1409  004A  081E               	movf	30,w	;volatile
  1410  004B  120A  118A  219D  120A  118A  	fcall	_ADC
  1411  0050  00F6               	movwf	??_ISR+1
  1412  0051  01F7               	clrf	??_ISR+2
  1413  0052  0876               	movf	??_ISR+1,w
  1414  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0055  00A0               	movwf	_ADC_VALOR
  1417  0056  0877               	movf	??_ISR+2,w
  1418  0057  00A1               	movwf	_ADC_VALOR+1
  1419  0058                     i1l1170:
  1420                           
  1421                           ;Prueba.c: 78:         ADC_SWAP = SWAP_ADC(ADC_VALOR);
  1422  0058  0820               	movf	_ADC_VALOR,w
  1423  0059  120A  118A  215F  120A  118A  	fcall	_SWAP_ADC
  1424  005E  00F5               	movwf	??_ISR
  1425  005F  0875               	movf	??_ISR,w
  1426  0060  00FB               	movwf	_ADC_SWAP
  1427  0061                     i1l1172:
  1428                           
  1429                           ;Prueba.c: 79:         ADC_NIBBLE1 = NIBBLE1_ADC(ADC_VALOR);
  1430  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0063  0820               	movf	_ADC_VALOR,w
  1433  0064  120A  118A  2193  120A  118A  	fcall	_NIBBLE1_ADC
  1434  0069  00F5               	movwf	??_ISR
  1435  006A  0875               	movf	??_ISR,w
  1436  006B  00FA               	movwf	_ADC_NIBBLE1
  1437  006C                     i1l1174:
  1438                           
  1439                           ;Prueba.c: 80:         ADC_NIBBLE2 = NIBBLE2_ADC(ADC_SWAP);
  1440  006C  087B               	movf	_ADC_SWAP,w
  1441  006D  120A  118A  2189  120A  118A  	fcall	_NIBBLE2_ADC
  1442  0072  00F5               	movwf	??_ISR
  1443  0073  0875               	movf	??_ISR,w
  1444  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0076  00A7               	movwf	_ADC_NIBBLE2
  1447  0077                     i1l1176:
  1448                           
  1449                           ;Prueba.c: 81:         PIR1bits.ADIF = 0;
  1450  0077  130C               	bcf	12,6	;volatile
  1451  0078                     i1l1178:
  1452                           
  1453                           ;Prueba.c: 82:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1454  0078  301A               	movlw	26
  1455  0079  00F6               	movwf	??_ISR+1
  1456  007A  30F8               	movlw	248
  1457  007B  00F5               	movwf	??_ISR
  1458  007C                     u21_27:
  1459  007C  0BF5               	decfsz	??_ISR,f
  1460  007D  287C               	goto	u21_27
  1461  007E  0BF6               	decfsz	??_ISR+1,f
  1462  007F  287C               	goto	u21_27
  1463  0080  0000               	nop
  1464  0081                     i1l1180:
  1465                           
  1466                           ;Prueba.c: 83:         ADCON0bits.GO_nDONE = 1;
  1467  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1469  0083  149F               	bsf	31,1	;volatile
  1470  0084                     i1l1182:
  1471                           
  1472                           ;Prueba.c: 86:     if (INTCONbits.TMR0IF == 1){
  1473  0084  1D0B               	btfss	11,2	;volatile
  1474  0085  2887               	goto	u19_21
  1475  0086  2888               	goto	u19_20
  1476  0087                     u19_21:
  1477  0087  288F               	goto	i1l140
  1478  0088                     u19_20:
  1479  0088                     i1l1184:
  1480                           
  1481                           ;Prueba.c: 87:         cont_multiplex++;
  1482  0088  3001               	movlw	1
  1483  0089  00F5               	movwf	??_ISR
  1484  008A  0875               	movf	??_ISR,w
  1485  008B  07A6               	addwf	_cont_multiplex,f
  1486  008C                     i1l1186:
  1487                           
  1488                           ;Prueba.c: 88:         TMR0 = 61;
  1489  008C  303D               	movlw	61
  1490  008D  0081               	movwf	1	;volatile
  1491  008E                     i1l1188:
  1492                           
  1493                           ;Prueba.c: 89:         INTCONbits.TMR0IF = 0;
  1494  008E  110B               	bcf	11,2	;volatile
  1495  008F                     i1l140:
  1496  008F  0879               	movf	??_ISR+4,w
  1497  0090  008A               	movwf	10
  1498  0091  0E78               	swapf	??_ISR+3,w
  1499  0092  0083               	movwf	3
  1500  0093  0EFE               	swapf	btemp,f
  1501  0094  0E7E               	swapf	btemp,w
  1502  0095  0009               	retfie
  1503  0096                     __end_of_ISR:
  1504                           
  1505                           	psect	intentry
  1506  0004                     __pintentry:	
  1507                           ;incstack = 0
  1508                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1509                           
  1510  0004                     interrupt_function:
  1511  007E                     saved_w	set	btemp
  1512  0004  00FE               	movwf	btemp
  1513  0005  0E03               	swapf	3,w
  1514  0006  00F8               	movwf	??_ISR+3
  1515  0007  080A               	movf	10,w
  1516  0008  00F9               	movwf	??_ISR+4
  1517  0009  120A  118A  2821   	ljmp	_ISR
  1518                           
  1519                           	psect	text6
  1520  015F                     __ptext6:	
  1521 ;; *************** function _SWAP_ADC *****************
  1522 ;; Defined at:
  1523 ;;		line 14 in file "Config_ADC.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  VAL_ADC         1    wreg     unsigned char 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  VAL_ADC         1    4[COMMON] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      unsigned char 
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1537 ;;      Params:         0       0       0       0       0
  1538 ;;      Locals:         1       0       0       0       0
  1539 ;;      Temps:          4       0       0       0       0
  1540 ;;      Totals:         5       0       0       0       0
  1541 ;;Total ram usage:        5 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; This function calls:
  1544 ;;		Nothing
  1545 ;; This function is called by:
  1546 ;;		_ISR
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           
  1551                           ;psect for function _SWAP_ADC
  1552  015F                     _SWAP_ADC:
  1553                           
  1554                           ;incstack = 0
  1555                           ; Regs used in _SWAP_ADC: [wreg+status,2+status,0]
  1556                           ;SWAP_ADC@VAL_ADC stored from wreg
  1557  015F  00F4               	movwf	SWAP_ADC@VAL_ADC
  1558  0160                     i1l1070:
  1559                           
  1560                           ;Config_ADC.c: 15:     VAL_SWAP = (((VAL_ADC & 0x0F)<<4) | ((VAL_ADC & 0xF0)>>4));
  1561  0160  0874               	movf	SWAP_ADC@VAL_ADC,w
  1562  0161  00F0               	movwf	??_SWAP_ADC
  1563  0162  3004               	movlw	4
  1564  0163                     u11_25:
  1565  0163  1003               	clrc
  1566  0164  0CF0               	rrf	??_SWAP_ADC,f
  1567  0165  3EFF               	addlw	-1
  1568  0166  1D03               	skipz
  1569  0167  2963               	goto	u11_25
  1570  0168  300F               	movlw	15
  1571  0169  0570               	andwf	??_SWAP_ADC,w
  1572  016A  00F1               	movwf	??_SWAP_ADC+1
  1573  016B  0874               	movf	SWAP_ADC@VAL_ADC,w
  1574  016C  390F               	andlw	15
  1575  016D  00F2               	movwf	??_SWAP_ADC+2
  1576  016E  3003               	movlw	3
  1577  016F                     u12_25:
  1578  016F  1003               	clrc
  1579  0170  0DF2               	rlf	??_SWAP_ADC+2,f
  1580  0171  3EFF               	addlw	-1
  1581  0172  1D03               	skipz
  1582  0173  296F               	goto	u12_25
  1583  0174  1003               	clrc
  1584  0175  0D72               	rlf	??_SWAP_ADC+2,w
  1585  0176  0471               	iorwf	??_SWAP_ADC+1,w
  1586  0177  00F3               	movwf	??_SWAP_ADC+3
  1587  0178  0873               	movf	??_SWAP_ADC+3,w
  1588  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1589  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1590  017B  00A4               	movwf	_VAL_SWAP
  1591  017C                     i1l1072:
  1592                           
  1593                           ;Config_ADC.c: 16:     return VAL_SWAP;
  1594  017C  0824               	movf	_VAL_SWAP,w
  1595  017D                     i1l182:
  1596  017D  0008               	return
  1597  017E                     __end_of_SWAP_ADC:
  1598                           
  1599                           	psect	text7
  1600  0189                     __ptext7:	
  1601 ;; *************** function _NIBBLE2_ADC *****************
  1602 ;; Defined at:
  1603 ;;		line 24 in file "Config_ADC.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  VAL_SWAP        1    wreg     unsigned char 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  VAL_SWAP        1    1[COMMON] unsigned char 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      unsigned char 
  1610 ;; Registers used:
  1611 ;;		wreg, status,2
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1617 ;;      Params:         0       0       0       0       0
  1618 ;;      Locals:         1       0       0       0       0
  1619 ;;      Temps:          1       0       0       0       0
  1620 ;;      Totals:         2       0       0       0       0
  1621 ;;Total ram usage:        2 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_ISR
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           
  1631                           ;psect for function _NIBBLE2_ADC
  1632  0189                     _NIBBLE2_ADC:
  1633                           
  1634                           ;incstack = 0
  1635                           ; Regs used in _NIBBLE2_ADC: [wreg+status,2]
  1636                           ;NIBBLE2_ADC@VAL_SWAP stored from wreg
  1637  0189  00F1               	movwf	NIBBLE2_ADC@VAL_SWAP
  1638  018A                     i1l1082:
  1639                           
  1640                           ;Config_ADC.c: 25:     VAL_NIBBLE2 = VAL_SWAP & 15;
  1641  018A  0871               	movf	NIBBLE2_ADC@VAL_SWAP,w
  1642  018B  390F               	andlw	15
  1643  018C  00F0               	movwf	??_NIBBLE2_ADC
  1644  018D  0870               	movf	??_NIBBLE2_ADC,w
  1645  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1646  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1647  0190  00A2               	movwf	_VAL_NIBBLE2
  1648  0191                     i1l1084:
  1649                           
  1650                           ;Config_ADC.c: 26:     return VAL_NIBBLE2;
  1651  0191  0822               	movf	_VAL_NIBBLE2,w
  1652  0192                     i1l188:
  1653  0192  0008               	return
  1654  0193                     __end_of_NIBBLE2_ADC:
  1655                           
  1656                           	psect	text8
  1657  0193                     __ptext8:	
  1658 ;; *************** function _NIBBLE1_ADC *****************
  1659 ;; Defined at:
  1660 ;;		line 19 in file "Config_ADC.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  VAL_ADC         1    wreg     unsigned char 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  VAL_ADC         1    1[COMMON] unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      unsigned char 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1674 ;;      Params:         0       0       0       0       0
  1675 ;;      Locals:         1       0       0       0       0
  1676 ;;      Temps:          1       0       0       0       0
  1677 ;;      Totals:         2       0       0       0       0
  1678 ;;Total ram usage:        2 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_ISR
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function _NIBBLE1_ADC
  1689  0193                     _NIBBLE1_ADC:
  1690                           
  1691                           ;incstack = 0
  1692                           ; Regs used in _NIBBLE1_ADC: [wreg+status,2]
  1693                           ;NIBBLE1_ADC@VAL_ADC stored from wreg
  1694  0193  00F1               	movwf	NIBBLE1_ADC@VAL_ADC
  1695  0194                     i1l1076:
  1696                           
  1697                           ;Config_ADC.c: 20:     VAL_NIBBLE1 = VAL_ADC & 15;
  1698  0194  0871               	movf	NIBBLE1_ADC@VAL_ADC,w
  1699  0195  390F               	andlw	15
  1700  0196  00F0               	movwf	??_NIBBLE1_ADC
  1701  0197  0870               	movf	??_NIBBLE1_ADC,w
  1702  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1703  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1704  019A  00A3               	movwf	_VAL_NIBBLE1
  1705  019B                     i1l1078:
  1706                           
  1707                           ;Config_ADC.c: 21:     return VAL_NIBBLE1;
  1708  019B  0823               	movf	_VAL_NIBBLE1,w
  1709  019C                     i1l185:
  1710  019C  0008               	return
  1711  019D                     __end_of_NIBBLE1_ADC:
  1712                           
  1713                           	psect	text9
  1714  019D                     __ptext9:	
  1715 ;; *************** function _ADC *****************
  1716 ;; Defined at:
  1717 ;;		line 9 in file "Config_ADC.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  ADRESL_         1    wreg     unsigned char 
  1720 ;;  ADRESH_         1    0[COMMON] unsigned char 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  ADRESL_         1    0[COMMON] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      unsigned char 
  1725 ;; Registers used:
  1726 ;;		wreg
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1732 ;;      Params:         1       0       0       0       0
  1733 ;;      Locals:         0       0       0       0       0
  1734 ;;      Temps:          1       0       0       0       0
  1735 ;;      Totals:         2       0       0       0       0
  1736 ;;Total ram usage:        2 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_ISR
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           
  1746                           ;psect for function _ADC
  1747  019D                     _ADC:
  1748  019D                     i1l1066:	
  1749                           ;incstack = 0
  1750                           ; Regs used in _ADC: [wreg]
  1751                           
  1752                           
  1753                           ;Config_ADC.c: 10:     VAL = (ADRESL << 8) | ADRESH;
  1754  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1755  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1756  019F  081E               	movf	30,w	;volatile
  1757  01A0  00F1               	movwf	??_ADC
  1758  01A1  0871               	movf	??_ADC,w
  1759  01A2  00A5               	movwf	_VAL
  1760                           
  1761                           ;Config_ADC.c: 11:     return VAL;
  1762  01A3  0825               	movf	_VAL,w
  1763  01A4                     i1l179:
  1764  01A4  0008               	return
  1765  01A5                     __end_of_ADC:
  1766  007E                     btemp	set	126	;btemp
  1767  007E                     wtemp0	set	126
  1768                           
  1769                           	psect	config
  1770                           
  1771                           ;Config register CONFIG1 @ 0x2007
  1772                           ;	Oscillator Selection bits
  1773                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1774                           ;	Watchdog Timer Enable bit
  1775                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1776                           ;	Power-up Timer Enable bit
  1777                           ;	PWRTE = OFF, PWRT disabled
  1778                           ;	RE3/MCLR pin function select bit
  1779                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1780                           ;	Code Protection bit
  1781                           ;	CP = OFF, Program memory code protection is disabled
  1782                           ;	Data Code Protection bit
  1783                           ;	CPD = OFF, Data memory code protection is disabled
  1784                           ;	Brown Out Reset Selection bits
  1785                           ;	BOREN = OFF, BOR disabled
  1786                           ;	Internal External Switchover bit
  1787                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1788                           ;	Fail-Safe Clock Monitor Enabled bit
  1789                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1790                           ;	Low Voltage Programming Enable bit
  1791                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1792                           ;	In-Circuit Debugger Mode bit
  1793                           ;	DEBUG = 0x1, unprogrammed default
  1794  2007                     	org	8199
  1795  2007  20D1               	dw	8401
  1796                           
  1797                           ;Config register CONFIG2 @ 0x2008
  1798                           ;	Brown-out Reset Selection bit
  1799                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1800                           ;	Flash Program Memory Self Write Enable bits
  1801                           ;	WRT = OFF, Write protection off
  1802  2008                     	org	8200
  1803  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      4      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_SWAP_ADC

Critical Paths under _main in BANK0

    _setup->_initOsc

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      22
                                              3 BANK0      1     1      0
                       _ContadorLEDS
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                         _InitTimer0
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _InitTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ContadorLEDS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0     164
                                              5 COMMON     5     5      0
                                _ADC
                        _NIBBLE1_ADC
                        _NIBBLE2_ADC
                           _SWAP_ADC
 ---------------------------------------------------------------------------------
 (4) _SWAP_ADC                                             5     5      0      44
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (4) _NIBBLE2_ADC                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _NIBBLE1_ADC                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _ADC                                                  3     2      1      76
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ContadorLEDS
   _setup
     _InitTimer0
     _initOsc

 _ISR (ROOT)
   _ADC
   _NIBBLE1_ADC
   _NIBBLE2_ADC
   _SWAP_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 03 20:47:34 2021

                      l6 009A                        l7 00F2                        l8 00A0  
                      l9 00A6                       l10 00AC                       l11 00B2  
                     l12 00B8                       l13 00BE                       l14 00C4  
                     l15 00CA                       l16 00F3           ??_ContadorLEDS 0028  
                    l152 013E                      l155 01A9                      l158 0188  
                    _ADC 019D                      u200 0156                      u201 0155  
                    _ISR 0021                      _VAL 0025                     ?_ADC 0070  
                   ?_ISR 0070                     l1004 0099                     l1100 010A  
                   l1110 0119                     l1102 010D                     l1016 017E  
                   l1008 00D0                     l1120 0124                     l1112 011C  
                   l1104 0110                     l1200 014E                     l1130 0130  
                   l1122 0125                     l1114 011F                     l1106 0113  
                   l1202 0156                     l1140 0137                     l1132 0131  
                   l1124 0126                     l1116 0120                     l1108 0116  
                   l1204 015A                     l1142 0138                     l1134 0132  
                   l1126 0127                     l1118 0121                     l1240 00D8  
                   l1144 013B                     l1136 0135                     l1128 012B  
                   l1146 013D                     l1138 0136                     l1090 00FA  
                   l1148 01A5                     l1092 00FE                     l1094 00FF  
                   l1190 013F                     l1096 0103                     l1088 00F4  
                   l1192 0144                     l1098 0106                     l1194 0145  
                   l1196 0148                     l1198 0149                     _TMR0 0001  
                   _main 013F                     btemp 007E                     start 000C  
                  ??_ADC 0071                    ??_ISR 0075           _cont_multiplex 0026  
                  ?_main 0070                    _ANSEL 0188                    i1l131 002B  
                  i1l140 008F                    i1l135 0037                    i1l182 017D  
                  i1l185 019C                    i1l179 01A4                    i1l188 0192  
                  u11_25 0163                    u12_25 016F                    u13_20 0025  
                  u13_21 0024                    u21_27 007C                    u14_20 002B  
                  u14_21 002A                    u15_20 002F                    u15_21 002E  
                  u16_20 0037                    u16_21 0036                    u17_20 003B  
                  u17_21 003A                    u18_20 0044                    u18_21 0043  
                  u19_20 0088                    u19_21 0087                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
        __end_of_initOsc 00F4         __end_of_SWAP_ADC 017E                    _setup 00F4  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F               _InitTimer0 017E             __end_of_main 015F  
                 ??_main 002B       NIBBLE1_ADC@VAL_ADC 0071                   _ADCON0 001F  
                 _ADRESH 001E                   _ADRESL 009E              initOsc@IRCF 002A  
                 ?_setup 0070                   _ANSELH 0189                   i1l1070 0160  
                 i1l1150 0021                   i1l1072 017C                   i1l1152 0025  
                 i1l1066 019D                   i1l1082 018A                   i1l1170 0058  
                 i1l1162 003B                   i1l1076 0194                   i1l1084 0191  
                 i1l1180 0081                   i1l1172 0061                   i1l1164 003D  
                 i1l1156 002F                   i1l1078 019B                   i1l1174 006C  
                 i1l1182 0084                   i1l1158 0033                   i1l1166 003E  
                 i1l1184 0088                   i1l1176 0077                   i1l1168 0044  
                 i1l1186 008C                   i1l1178 0078                   i1l1188 008E  
                 _INTCON 000B     __end_of_ContadorLEDS 01AA     __size_of_NIBBLE1_ADC 000A  
   __size_of_NIBBLE2_ADC 000A          SWAP_ADC@VAL_ADC 0074                ??_initOsc 0028  
                 saved_w 007E               ADC@ADRESH_ 0070               ADC@ADRESL_ 0070  
__end_of__initialization 001D              ?_InitTimer0 0070           __pcstackCOMMON 0070  
          __end_of_setup 013F                ?_SWAP_ADC 0070           _OPTION_REGbits 0081  
                ??_setup 002B               __pbssBANK0 0020               __pmaintext 013F  
             __pintentry 0004               ??_SWAP_ADC 0070    __size_of_ContadorLEDS 0005  
    __size_of_InitTimer0 000B                _ADC_VALOR 0020                  __ptext1 00F4  
                __ptext2 0096                  __ptext3 017E                  __ptext4 01A5  
                __ptext5 0021                  __ptext6 015F                  __ptext7 0189  
                __ptext8 0193                  __ptext9 019D             _ContadorLEDS 01A5  
           __size_of_ADC 0008             __size_of_ISR 0075                  _initOsc 0096  
   end_of_initialization 001D      NIBBLE2_ADC@VAL_SWAP 0071                _PORTBbits 0006  
              _PORTEbits 0009            ??_NIBBLE1_ADC 0070            ??_NIBBLE2_ADC 0070  
            _ADC_NIBBLE1 007A              _ADC_NIBBLE2 0027             ??_InitTimer0 0028  
      __size_of_SWAP_ADC 001F      start_initialization 000F              __end_of_ADC 01A5  
            __end_of_ISR 0096       __end_of_InitTimer0 0189                _Valor_hex 007D  
    __end_of_NIBBLE1_ADC 019D      __end_of_NIBBLE2_ADC 0193              __pbssCOMMON 007A  
              ___latbits 0002            __pcstackBANK0 0028                 ?_initOsc 0070  
               _ADC_SWAP 007B           __size_of_setup 004B        interrupt_function 0004  
               _IOCBbits 0096              _NIBBLE1_ADC 0193                 _PIE1bits 008C  
            _NIBBLE2_ADC 0189                 _PIR1bits 000C                 _VAL_SWAP 0024  
               _SWAP_ADC 015F               _ADCON0bits 001F         __size_of_initOsc 005E  
               _contador 007C            __size_of_main 0020               _INTCONbits 000B  
            _VAL_NIBBLE1 0023              _VAL_NIBBLE2 0022                 intlevel1 0000  
             _OSCCONbits 008F            ?_ContadorLEDS 0070               _OPTION_REG 0081  
           ?_NIBBLE1_ADC 0070             ?_NIBBLE2_ADC 0070  
