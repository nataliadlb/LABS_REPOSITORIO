

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 01 10:55:35 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0088                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  001F                     _ADCON0	set	31
   363  000C                     _PIR1bits	set	12
   364  0009                     _PORTE	set	9
   365  0008                     _PORTD	set	8
   366  0007                     _PORTC	set	7
   367  0006                     _PORTB	set	6
   368  0005                     _PORTA	set	5
   369  0006                     _PORTBbits	set	6
   370  000B                     _INTCONbits	set	11
   371  008C                     _PIE1bits	set	140
   372  0096                     _IOCBbits	set	150
   373  0089                     _TRISE	set	137
   374  0088                     _TRISD	set	136
   375  0087                     _TRISC	set	135
   376  0086                     _TRISB	set	134
   377  0085                     _TRISA	set	133
   378  008F                     _OSCCONbits	set	143
   379  0189                     _ANSELH	set	393
   380  0188                     _ANSEL	set	392
   381                           
   382                           	psect	cinit
   383  000F                     start_initialization:	
   384                           ; #config settings
   385                           
   386  000F                     __initialization:
   387                           
   388                           ; Clear objects allocated to COMMON
   389  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   390  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   391  0011                     end_of_initialization:	
   392                           ;End of C runtime variable initialization code
   393                           
   394  0011                     __end_of__initialization:
   395  0011  0183               	clrf	3
   396  0012  120A  118A  28CF   	ljmp	_main	;jump to C main() function
   397                           
   398                           	psect	bssCOMMON
   399  0076                     __pbssCOMMON:
   400  0076                     _contador:
   401  0076                     	ds	1
   402  0077                     _Valor_hex:
   403  0077                     	ds	1
   404                           
   405                           	psect	cstackCOMMON
   406  0070                     __pcstackCOMMON:
   407  0070                     ?_setup:
   408  0070                     ?_ContadorLEDS:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_initOsc:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_ISR:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ??_ISR:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_main:	
   421                           ; 1 bytes @ 0x0
   422                           
   423                           
   424                           ; 1 bytes @ 0x0
   425  0070                     	ds	3
   426  0073                     ??_ContadorLEDS:
   427  0073                     ??_initOsc:	
   428                           ; 1 bytes @ 0x3
   429                           
   430                           
   431                           ; 1 bytes @ 0x3
   432  0073                     	ds	2
   433  0075                     initOsc@IRCF:
   434                           
   435                           ; 1 bytes @ 0x5
   436  0075                     	ds	1
   437  0076                     ??_setup:
   438  0076                     ??_main:	
   439                           ; 1 bytes @ 0x6
   440                           
   441                           
   442                           	psect	maintext
   443  00CF                     __pmaintext:	
   444                           ; 1 bytes @ 0x6
   445 ;;
   446 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   447 ;;
   448 ;; *************** function _main *****************
   449 ;; Defined at:
   450 ;;		line 83 in file "Prueba.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   459 ;; Tracked objects:
   460 ;;		On entry : B00/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   464 ;;      Params:         0       0       0       0       0
   465 ;;      Locals:         0       0       0       0       0
   466 ;;      Temps:          0       0       0       0       0
   467 ;;      Totals:         0       0       0       0       0
   468 ;;Total ram usage:        0 bytes
   469 ;; Hardware stack levels required when called:    3
   470 ;; This function calls:
   471 ;;		_ContadorLEDS
   472 ;;		_setup
   473 ;; This function is called by:
   474 ;;		Startup code after reset
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           
   479                           ;psect for function _main
   480  00CF                     _main:
   481  00CF                     l822:	
   482                           ;incstack = 0
   483                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   484                           
   485                           
   486                           ;Prueba.c: 84:     contador = 0;
   487  00CF  01F6               	clrf	_contador
   488  00D0                     l824:
   489                           
   490                           ;Prueba.c: 85:     setup();
   491  00D0  120A  118A  2071  120A  118A  	fcall	_setup
   492  00D5                     l826:
   493                           
   494                           ;Prueba.c: 90:         ContadorLEDS();
   495  00D5  120A  118A  20DE  120A  118A  	fcall	_ContadorLEDS
   496  00DA  28D5               	goto	l826
   497  00DB  120A  118A  280C   	ljmp	start
   498  00DE                     __end_of_main:
   499                           
   500                           	psect	text1
   501  0071                     __ptext1:	
   502 ;; *************** function _setup *****************
   503 ;; Defined at:
   504 ;;		line 100 in file "Prueba.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0
   521 ;;      Totals:         0       0       0       0       0
   522 ;;Total ram usage:        0 bytes
   523 ;; Hardware stack levels used:    1
   524 ;; Hardware stack levels required when called:    2
   525 ;; This function calls:
   526 ;;		_initOsc
   527 ;; This function is called by:
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           
   533                           ;psect for function _setup
   534  0071                     _setup:
   535  0071                     l716:	
   536                           ;incstack = 0
   537                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   538                           
   539                           
   540                           ;Prueba.c: 101:     initOsc(0b00000110);
   541  0071  3006               	movlw	6
   542  0072  120A  118A  2015  120A  118A  	fcall	_initOsc
   543  0077                     l718:
   544                           
   545                           ;Prueba.c: 102:     ANSEL = 0b00000001;
   546  0077  3001               	movlw	1
   547  0078  1683               	bsf	3,5	;RP0=1, select bank3
   548  0079  1703               	bsf	3,6	;RP1=1, select bank3
   549  007A  0088               	movwf	8	;volatile
   550  007B                     l720:
   551                           
   552                           ;Prueba.c: 103:     ANSELH = 0;
   553  007B  0189               	clrf	9	;volatile
   554  007C                     l722:
   555                           
   556                           ;Prueba.c: 104:     TRISA = 0b00000001;
   557  007C  3001               	movlw	1
   558  007D  1683               	bsf	3,5	;RP0=1, select bank1
   559  007E  1303               	bcf	3,6	;RP1=0, select bank1
   560  007F  0085               	movwf	5	;volatile
   561  0080                     l724:
   562                           
   563                           ;Prueba.c: 105:     PORTA = 0;
   564  0080  1283               	bcf	3,5	;RP0=0, select bank0
   565  0081  1303               	bcf	3,6	;RP1=0, select bank0
   566  0082  0185               	clrf	5	;volatile
   567  0083                     l726:
   568                           
   569                           ;Prueba.c: 106:     TRISB = 0b00000011;
   570  0083  3003               	movlw	3
   571  0084  1683               	bsf	3,5	;RP0=1, select bank1
   572  0085  1303               	bcf	3,6	;RP1=0, select bank1
   573  0086  0086               	movwf	6	;volatile
   574  0087                     l728:
   575                           
   576                           ;Prueba.c: 107:     PORTB = 0;
   577  0087  1283               	bcf	3,5	;RP0=0, select bank0
   578  0088  1303               	bcf	3,6	;RP1=0, select bank0
   579  0089  0186               	clrf	6	;volatile
   580  008A                     l730:
   581                           
   582                           ;Prueba.c: 108:     TRISC = 0;
   583  008A  1683               	bsf	3,5	;RP0=1, select bank1
   584  008B  1303               	bcf	3,6	;RP1=0, select bank1
   585  008C  0187               	clrf	7	;volatile
   586  008D                     l732:
   587                           
   588                           ;Prueba.c: 109:     PORTC = 0;
   589  008D  1283               	bcf	3,5	;RP0=0, select bank0
   590  008E  1303               	bcf	3,6	;RP1=0, select bank0
   591  008F  0187               	clrf	7	;volatile
   592  0090                     l734:
   593                           
   594                           ;Prueba.c: 110:     TRISD = 0;
   595  0090  1683               	bsf	3,5	;RP0=1, select bank1
   596  0091  1303               	bcf	3,6	;RP1=0, select bank1
   597  0092  0188               	clrf	8	;volatile
   598  0093                     l736:
   599                           
   600                           ;Prueba.c: 111:     PORTD = 0;
   601  0093  1283               	bcf	3,5	;RP0=0, select bank0
   602  0094  1303               	bcf	3,6	;RP1=0, select bank0
   603  0095  0188               	clrf	8	;volatile
   604  0096                     l738:
   605                           
   606                           ;Prueba.c: 112:     TRISE = 0;
   607  0096  1683               	bsf	3,5	;RP0=1, select bank1
   608  0097  1303               	bcf	3,6	;RP1=0, select bank1
   609  0098  0189               	clrf	9	;volatile
   610  0099                     l740:
   611                           
   612                           ;Prueba.c: 113:     PORTE = 0;
   613  0099  1283               	bcf	3,5	;RP0=0, select bank0
   614  009A  1303               	bcf	3,6	;RP1=0, select bank0
   615  009B  0189               	clrf	9	;volatile
   616  009C                     l742:
   617                           
   618                           ;Prueba.c: 114:     INTCONbits.GIE = 1;
   619  009C  178B               	bsf	11,7	;volatile
   620  009D                     l744:
   621                           
   622                           ;Prueba.c: 115:     INTCONbits.RBIE = 1;
   623  009D  158B               	bsf	11,3	;volatile
   624  009E                     l746:
   625                           
   626                           ;Prueba.c: 116:     INTCONbits.RBIF = 0;
   627  009E  100B               	bcf	11,0	;volatile
   628  009F                     l748:
   629                           
   630                           ;Prueba.c: 117:     IOCBbits.IOCB0 = 1;
   631  009F  1683               	bsf	3,5	;RP0=1, select bank1
   632  00A0  1303               	bcf	3,6	;RP1=0, select bank1
   633  00A1  1416               	bsf	22,0	;volatile
   634  00A2                     l750:
   635                           
   636                           ;Prueba.c: 118:     IOCBbits.IOCB1 = 1;
   637  00A2  1496               	bsf	22,1	;volatile
   638  00A3                     l752:
   639                           
   640                           ;Prueba.c: 119:     INTCONbits.PEIE = 1;
   641  00A3  170B               	bsf	11,6	;volatile
   642  00A4                     l754:
   643                           
   644                           ;Prueba.c: 120:     PIE1bits.ADIE = 1;
   645  00A4  170C               	bsf	12,6	;volatile
   646  00A5                     l756:
   647                           
   648                           ;Prueba.c: 121:     PIR1bits.ADIF = 0;
   649  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   650  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   651  00A7  130C               	bcf	12,6	;volatile
   652  00A8                     l758:
   653                           
   654                           ;Prueba.c: 122:     ADCON0 = 0b01000001;
   655  00A8  3041               	movlw	65
   656  00A9  009F               	movwf	31	;volatile
   657  00AA                     l111:
   658  00AA  0008               	return
   659  00AB                     __end_of_setup:
   660                           
   661                           	psect	text2
   662  0015                     __ptext2:	
   663 ;; *************** function _initOsc *****************
   664 ;; Defined at:
   665 ;;		line 3 in file "Oscilador.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;  IRCF            1    wreg     unsigned char 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  IRCF            1    5[COMMON] unsigned char 
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   679 ;;      Params:         0       0       0       0       0
   680 ;;      Locals:         1       0       0       0       0
   681 ;;      Temps:          2       0       0       0       0
   682 ;;      Totals:         3       0       0       0       0
   683 ;;Total ram usage:        3 bytes
   684 ;; Hardware stack levels used:    1
   685 ;; Hardware stack levels required when called:    1
   686 ;; This function calls:
   687 ;;		Nothing
   688 ;; This function is called by:
   689 ;;		_setup
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           
   694                           ;psect for function _initOsc
   695  0015                     _initOsc:
   696                           
   697                           ;incstack = 0
   698                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   699                           ;initOsc@IRCF stored from wreg
   700  0015  00F5               	movwf	initOsc@IRCF
   701  0016                     l706:
   702                           
   703                           ;Oscilador.c: 5:     switch(IRCF){
   704  0016  284D               	goto	l710
   705  0017                     l6:	
   706                           ;Oscilador.c: 6:         case 0:
   707                           
   708                           
   709                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   710  0017  1683               	bsf	3,5	;RP0=1, select bank1
   711  0018  1303               	bcf	3,6	;RP1=0, select bank1
   712  0019  130F               	bcf	15,6	;volatile
   713                           
   714                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   715  001A  128F               	bcf	15,5	;volatile
   716                           
   717                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   718  001B  120F               	bcf	15,4	;volatile
   719                           
   720                           ;Oscilador.c: 10:             break;
   721  001C  286F               	goto	l7
   722  001D                     l8:	
   723                           ;Oscilador.c: 11:          case 1:
   724                           
   725                           
   726                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   727  001D  1683               	bsf	3,5	;RP0=1, select bank1
   728  001E  1303               	bcf	3,6	;RP1=0, select bank1
   729  001F  130F               	bcf	15,6	;volatile
   730                           
   731                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   732  0020  128F               	bcf	15,5	;volatile
   733                           
   734                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   735  0021  160F               	bsf	15,4	;volatile
   736                           
   737                           ;Oscilador.c: 15:             break;
   738  0022  286F               	goto	l7
   739  0023                     l9:	
   740                           ;Oscilador.c: 16:         case 2:
   741                           
   742                           
   743                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   744  0023  1683               	bsf	3,5	;RP0=1, select bank1
   745  0024  1303               	bcf	3,6	;RP1=0, select bank1
   746  0025  130F               	bcf	15,6	;volatile
   747                           
   748                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   749  0026  168F               	bsf	15,5	;volatile
   750                           
   751                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   752  0027  120F               	bcf	15,4	;volatile
   753                           
   754                           ;Oscilador.c: 20:             break;
   755  0028  286F               	goto	l7
   756  0029                     l10:	
   757                           ;Oscilador.c: 21:         case 3:
   758                           
   759                           
   760                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   761  0029  1683               	bsf	3,5	;RP0=1, select bank1
   762  002A  1303               	bcf	3,6	;RP1=0, select bank1
   763  002B  130F               	bcf	15,6	;volatile
   764                           
   765                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   766  002C  168F               	bsf	15,5	;volatile
   767                           
   768                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   769  002D  160F               	bsf	15,4	;volatile
   770                           
   771                           ;Oscilador.c: 25:             break;
   772  002E  286F               	goto	l7
   773  002F                     l11:	
   774                           ;Oscilador.c: 26:         case 4:
   775                           
   776                           
   777                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   778  002F  1683               	bsf	3,5	;RP0=1, select bank1
   779  0030  1303               	bcf	3,6	;RP1=0, select bank1
   780  0031  170F               	bsf	15,6	;volatile
   781                           
   782                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   783  0032  128F               	bcf	15,5	;volatile
   784                           
   785                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   786  0033  120F               	bcf	15,4	;volatile
   787                           
   788                           ;Oscilador.c: 30:             break;
   789  0034  286F               	goto	l7
   790  0035                     l12:	
   791                           ;Oscilador.c: 31:         case 5:
   792                           
   793                           
   794                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   795  0035  1683               	bsf	3,5	;RP0=1, select bank1
   796  0036  1303               	bcf	3,6	;RP1=0, select bank1
   797  0037  170F               	bsf	15,6	;volatile
   798                           
   799                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
   800  0038  128F               	bcf	15,5	;volatile
   801                           
   802                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
   803  0039  160F               	bsf	15,4	;volatile
   804                           
   805                           ;Oscilador.c: 35:             break;
   806  003A  286F               	goto	l7
   807  003B                     l13:	
   808                           ;Oscilador.c: 36:         case 6:
   809                           
   810                           
   811                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
   812  003B  1683               	bsf	3,5	;RP0=1, select bank1
   813  003C  1303               	bcf	3,6	;RP1=0, select bank1
   814  003D  170F               	bsf	15,6	;volatile
   815                           
   816                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
   817  003E  168F               	bsf	15,5	;volatile
   818                           
   819                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
   820  003F  120F               	bcf	15,4	;volatile
   821                           
   822                           ;Oscilador.c: 40:             break;
   823  0040  286F               	goto	l7
   824  0041                     l14:	
   825                           ;Oscilador.c: 41:         case 7:
   826                           
   827                           
   828                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
   829  0041  1683               	bsf	3,5	;RP0=1, select bank1
   830  0042  1303               	bcf	3,6	;RP1=0, select bank1
   831  0043  170F               	bsf	15,6	;volatile
   832                           
   833                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
   834  0044  168F               	bsf	15,5	;volatile
   835                           
   836                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
   837  0045  160F               	bsf	15,4	;volatile
   838                           
   839                           ;Oscilador.c: 45:             break;
   840  0046  286F               	goto	l7
   841  0047                     l15:	
   842                           ;Oscilador.c: 46:         default:
   843                           
   844                           
   845                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
   846  0047  1683               	bsf	3,5	;RP0=1, select bank1
   847  0048  1303               	bcf	3,6	;RP1=0, select bank1
   848  0049  170F               	bsf	15,6	;volatile
   849                           
   850                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
   851  004A  168F               	bsf	15,5	;volatile
   852                           
   853                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
   854  004B  120F               	bcf	15,4	;volatile
   855                           
   856                           ;Oscilador.c: 50:             break;
   857  004C  286F               	goto	l7
   858  004D                     l710:
   859  004D  0875               	movf	initOsc@IRCF,w
   860  004E  00F3               	movwf	??_initOsc
   861  004F  01F4               	clrf	??_initOsc+1
   862                           
   863                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   864                           ; Switch size 1, requested type "simple"
   865                           ; Number of cases is 1, Range of values is 0 to 0
   866                           ; switch strategies available:
   867                           ; Name         Instructions Cycles
   868                           ; simple_byte            4     3 (average)
   869                           ; direct_byte           11     8 (fixed)
   870                           ; jumptable            260     6 (fixed)
   871                           ;	Chosen strategy is simple_byte
   872  0050  0874               	movf	??_initOsc+1,w
   873  0051  3A00               	xorlw	0	; case 0
   874  0052  1903               	skipnz
   875  0053  2855               	goto	l848
   876  0054  2847               	goto	l15
   877  0055                     l848:
   878                           
   879                           ; Switch size 1, requested type "simple"
   880                           ; Number of cases is 8, Range of values is 0 to 7
   881                           ; switch strategies available:
   882                           ; Name         Instructions Cycles
   883                           ; simple_byte           25    13 (average)
   884                           ; direct_byte           32     8 (fixed)
   885                           ; jumptable            260     6 (fixed)
   886                           ;	Chosen strategy is simple_byte
   887  0055  0873               	movf	??_initOsc,w
   888  0056  3A00               	xorlw	0	; case 0
   889  0057  1903               	skipnz
   890  0058  2817               	goto	l6
   891  0059  3A01               	xorlw	1	; case 1
   892  005A  1903               	skipnz
   893  005B  281D               	goto	l8
   894  005C  3A03               	xorlw	3	; case 2
   895  005D  1903               	skipnz
   896  005E  2823               	goto	l9
   897  005F  3A01               	xorlw	1	; case 3
   898  0060  1903               	skipnz
   899  0061  2829               	goto	l10
   900  0062  3A07               	xorlw	7	; case 4
   901  0063  1903               	skipnz
   902  0064  282F               	goto	l11
   903  0065  3A01               	xorlw	1	; case 5
   904  0066  1903               	skipnz
   905  0067  2835               	goto	l12
   906  0068  3A03               	xorlw	3	; case 6
   907  0069  1903               	skipnz
   908  006A  283B               	goto	l13
   909  006B  3A01               	xorlw	1	; case 7
   910  006C  1903               	skipnz
   911  006D  2841               	goto	l14
   912  006E  2847               	goto	l15
   913  006F                     l7:
   914                           
   915                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
   916  006F  140F               	bsf	15,0	;volatile
   917  0070                     l16:
   918  0070  0008               	return
   919  0071                     __end_of_initOsc:
   920                           
   921                           	psect	text3
   922  00DE                     __ptext3:	
   923 ;; *************** function _ContadorLEDS *****************
   924 ;; Defined at:
   925 ;;		line 128 in file "Prueba.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		wreg
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   939 ;;      Params:         0       0       0       0       0
   940 ;;      Locals:         0       0       0       0       0
   941 ;;      Temps:          0       0       0       0       0
   942 ;;      Totals:         0       0       0       0       0
   943 ;;Total ram usage:        0 bytes
   944 ;; Hardware stack levels used:    1
   945 ;; Hardware stack levels required when called:    1
   946 ;; This function calls:
   947 ;;		Nothing
   948 ;; This function is called by:
   949 ;;		_main
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           
   954                           ;psect for function _ContadorLEDS
   955  00DE                     _ContadorLEDS:
   956  00DE                     l760:	
   957                           ;incstack = 0
   958                           ; Regs used in _ContadorLEDS: [wreg]
   959                           
   960                           
   961                           ;Prueba.c: 129:     PORTC = contador;
   962  00DE  0876               	movf	_contador,w
   963  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   964  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   965  00E1  0087               	movwf	7	;volatile
   966  00E2                     l114:
   967  00E2  0008               	return
   968  00E3                     __end_of_ContadorLEDS:
   969                           
   970                           	psect	text4
   971  00AB                     __ptext4:	
   972 ;; *************** function _ISR *****************
   973 ;; Defined at:
   974 ;;		line 53 in file "Prueba.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   988 ;;      Params:         0       0       0       0       0
   989 ;;      Locals:         0       0       0       0       0
   990 ;;      Temps:          3       0       0       0       0
   991 ;;      Totals:         3       0       0       0       0
   992 ;;Total ram usage:        3 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		Interrupt level 1
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           
  1002                           ;psect for function _ISR
  1003  00AB                     _ISR:
  1004  00AB                     i1l806:
  1005                           
  1006                           ;Prueba.c: 55:     if (INTCONbits.RBIF == 1){
  1007  00AB  1C0B               	btfss	11,0	;volatile
  1008  00AC  28AE               	goto	u1_21
  1009  00AD  28AF               	goto	u1_20
  1010  00AE                     u1_21:
  1011  00AE  28C8               	goto	i1l100
  1012  00AF                     u1_20:
  1013  00AF                     i1l808:
  1014                           
  1015                           ;Prueba.c: 56:         if (PORTBbits.RB0 == 1){
  1016  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1017  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1018  00B1  1C06               	btfss	6,0	;volatile
  1019  00B2  28B4               	goto	u2_21
  1020  00B3  28B5               	goto	u2_20
  1021  00B4                     u2_21:
  1022  00B4  28BD               	goto	i1l814
  1023  00B5                     u2_20:
  1024  00B5                     i1l93:	
  1025                           ;Prueba.c: 59:             }
  1026                           
  1027                           
  1028                           ;Prueba.c: 57:             while (PORTBbits.RB0 == 1){
  1029  00B5  1806               	btfsc	6,0	;volatile
  1030  00B6  28B8               	goto	u3_21
  1031  00B7  28B9               	goto	u3_20
  1032  00B8                     u3_21:
  1033  00B8  28B5               	goto	i1l93
  1034  00B9                     u3_20:
  1035  00B9                     i1l812:
  1036                           
  1037                           ;Prueba.c: 60:             contador++;
  1038  00B9  3001               	movlw	1
  1039  00BA  00F0               	movwf	??_ISR
  1040  00BB  0870               	movf	??_ISR,w
  1041  00BC  07F6               	addwf	_contador,f
  1042  00BD                     i1l814:
  1043                           
  1044                           ;Prueba.c: 62:         if (PORTBbits.RB1 == 1){
  1045  00BD  1C86               	btfss	6,1	;volatile
  1046  00BE  28C0               	goto	u4_21
  1047  00BF  28C1               	goto	u4_20
  1048  00C0                     u4_21:
  1049  00C0  28C7               	goto	i1l820
  1050  00C1                     u4_20:
  1051  00C1                     i1l97:	
  1052                           ;Prueba.c: 65:             }
  1053                           
  1054                           
  1055                           ;Prueba.c: 63:             while (PORTBbits.RB1 == 1){
  1056  00C1  1886               	btfsc	6,1	;volatile
  1057  00C2  28C4               	goto	u5_21
  1058  00C3  28C5               	goto	u5_20
  1059  00C4                     u5_21:
  1060  00C4  28C1               	goto	i1l97
  1061  00C5                     u5_20:
  1062  00C5                     i1l818:
  1063                           
  1064                           ;Prueba.c: 66:             contador--;
  1065  00C5  3001               	movlw	1
  1066  00C6  02F6               	subwf	_contador,f
  1067  00C7                     i1l820:
  1068                           
  1069                           ;Prueba.c: 68:         INTCONbits.RBIF = 0;
  1070  00C7  100B               	bcf	11,0	;volatile
  1071  00C8                     i1l100:
  1072  00C8  0872               	movf	??_ISR+2,w
  1073  00C9  008A               	movwf	10
  1074  00CA  0E71               	swapf	??_ISR+1,w
  1075  00CB  0083               	movwf	3
  1076  00CC  0EFE               	swapf	btemp,f
  1077  00CD  0E7E               	swapf	btemp,w
  1078  00CE  0009               	retfie
  1079  00CF                     __end_of_ISR:
  1080  007E                     btemp	set	126	;btemp
  1081  007E                     wtemp0	set	126
  1082                           
  1083                           	psect	intentry
  1084  0004                     __pintentry:	
  1085                           ;incstack = 0
  1086                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1087                           
  1088  0004                     interrupt_function:
  1089  007E                     saved_w	set	btemp
  1090  0004  00FE               	movwf	btemp
  1091  0005  0E03               	swapf	3,w
  1092  0006  00F1               	movwf	??_ISR+1
  1093  0007  080A               	movf	10,w
  1094  0008  00F2               	movwf	??_ISR+2
  1095  0009  120A  118A  28AB   	ljmp	_ISR
  1096                           
  1097                           	psect	config
  1098                           
  1099                           ;Config register CONFIG1 @ 0x2007
  1100                           ;	Oscillator Selection bits
  1101                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1102                           ;	Watchdog Timer Enable bit
  1103                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1104                           ;	Power-up Timer Enable bit
  1105                           ;	PWRTE = OFF, PWRT disabled
  1106                           ;	RE3/MCLR pin function select bit
  1107                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1108                           ;	Code Protection bit
  1109                           ;	CP = OFF, Program memory code protection is disabled
  1110                           ;	Data Code Protection bit
  1111                           ;	CPD = OFF, Data memory code protection is disabled
  1112                           ;	Brown Out Reset Selection bits
  1113                           ;	BOREN = OFF, BOR disabled
  1114                           ;	Internal External Switchover bit
  1115                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1116                           ;	Fail-Safe Clock Monitor Enabled bit
  1117                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1118                           ;	Low Voltage Programming Enable bit
  1119                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1120                           ;	In-Circuit Debugger Mode bit
  1121                           ;	DEBUG = 0x1, unprogrammed default
  1122  2007                     	org	8199
  1123  2007  20D1               	dw	8401
  1124                           
  1125                           ;Config register CONFIG2 @ 0x2008
  1126                           ;	Brown-out Reset Selection bit
  1127                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1128                           ;	Flash Program Memory Self Write Enable bits
  1129                           ;	WRT = OFF, Write protection off
  1130  2008                     	org	8200
  1131  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_initOsc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                       _ContadorLEDS
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ContadorLEDS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ContadorLEDS
   _setup
     _initOsc

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 01 10:55:35 2021

                      l6 0017                        l7 006F                        l8 001D  
                      l9 0023                       l10 0029                       l11 002F  
                     l12 0035                       l13 003B                       l14 0041  
                     l15 0047                       l16 0070           ??_ContadorLEDS 0073  
                    l111 00AA                      l114 00E2                      l710 004D  
                    l720 007B                      l706 0016                      l730 008A  
                    l722 007C                      l740 0099                      l732 008D  
                    l724 0080                      l716 0071                      l750 00A2  
                    l742 009C                      l734 0090                      l726 0083  
                    l718 0077                      l822 00CF                      l760 00DE  
                    l752 00A3                      l744 009D                      l736 0093  
                    l728 0087                      l824 00D0                      l754 00A4  
                    l746 009E                      l738 0096                      l826 00D5  
                    l756 00A5                      l748 009F                      l758 00A8  
                    l848 0055                      _ISR 00AB                     ?_ISR 0070  
                   i1l93 00B5                     i1l97 00C1                     u1_20 00AF  
                   u1_21 00AE                     u2_20 00B5                     u2_21 00B4  
                   u3_20 00B9                     u3_21 00B8                     u4_20 00C1  
                   u4_21 00C0                     u5_20 00C5                     u5_21 00C4  
                   _main 00CF                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l100 00C8                    i1l820 00C7                    i1l812 00B9  
                  i1l814 00BD                    i1l806 00AB                    i1l808 00AF  
                  i1l818 00C5                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089          __end_of_initOsc 0071  
                  _setup 0071                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00DE  
                 ??_main 0076                   _ADCON0 001F              initOsc@IRCF 0075  
                 ?_setup 0070                   _ANSELH 0189     __end_of_ContadorLEDS 00E3  
              ??_initOsc 0073                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0070            __end_of_setup 00AB                  ??_setup 0076  
             __pmaintext 00CF               __pintentry 0004    __size_of_ContadorLEDS 0005  
                __ptext1 0071                  __ptext2 0015                  __ptext3 00DE  
                __ptext4 00AB             _ContadorLEDS 00DE             __size_of_ISR 0024  
                _initOsc 0015     end_of_initialization 0011                _PORTBbits 0006  
    start_initialization 000F              __end_of_ISR 00CF                _Valor_hex 0077  
            __pbssCOMMON 0076                ___latbits 0002                 ?_initOsc 0070  
         __size_of_setup 003A        interrupt_function 0004                 _IOCBbits 0096  
               _PIE1bits 008C                 _PIR1bits 000C         __size_of_initOsc 005C  
               _contador 0076            __size_of_main 000F               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F            ?_ContadorLEDS 0070  
