

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 12:05:11 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  001F                     _ADCON0	set	31
   285  000B                     _INTCONbits	set	11
   286  0009                     _PORTE	set	9
   287  0008                     _PORTD	set	8
   288  0006                     _PORTB	set	6
   289  0005                     _PORTA	set	5
   290  0007                     _PORTC	set	7
   291  001E                     _ADRESH	set	30
   292  001F                     _ADCON0bits	set	31
   293  000C                     _PIR1bits	set	12
   294  008F                     _OSCCONbits	set	143
   295  009F                     _ADCON1	set	159
   296  008C                     _PIE1bits	set	140
   297  0089                     _TRISE	set	137
   298  0088                     _TRISD	set	136
   299  0087                     _TRISC	set	135
   300  0086                     _TRISB	set	134
   301  0085                     _TRISA	set	133
   302  0189                     _ANSELH	set	393
   303  0188                     _ANSEL	set	392
   304                           
   305                           	psect	cinit
   306  000F                     start_initialization:	
   307                           ; #config settings
   308                           
   309  000F                     __initialization:
   310                           
   311                           ; Clear objects allocated to COMMON
   312  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   313  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   314  0011                     end_of_initialization:	
   315                           ;End of C runtime variable initialization code
   316                           
   317  0011                     __end_of__initialization:
   318  0011  0183               	clrf	3
   319  0012  120A  118A  28C4   	ljmp	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMMON
   322  0077                     __pbssCOMMON:
   323  0077                     _ADC_val:
   324  0077                     	ds	2
   325                           
   326                           	psect	cstackCOMMON
   327  0070                     __pcstackCOMMON:
   328  0070                     ?_setup:
   329  0070                     ?_Config_INTERRUPT:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_initOsc:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_ISR:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ??_ISR:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 1 bytes @ 0x0
   346  0070                     	ds	4
   347  0074                     ??_Config_INTERRUPT:
   348  0074                     ??_initOsc:	
   349                           ; 1 bytes @ 0x4
   350                           
   351                           
   352                           ; 1 bytes @ 0x4
   353  0074                     	ds	2
   354  0076                     initOsc@IRCF:
   355                           
   356                           ; 1 bytes @ 0x6
   357  0076                     	ds	1
   358  0077                     ??_setup:
   359  0077                     ??_main:	
   360                           ; 1 bytes @ 0x7
   361                           
   362                           
   363                           	psect	maintext
   364  00C4                     __pmaintext:	
   365                           ; 1 bytes @ 0x7
   366 ;;
   367 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   368 ;;
   369 ;; *************** function _main *****************
   370 ;; Defined at:
   371 ;;		line 77 in file "main_ADC.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;		None
   374 ;; Auto vars:     Size  Location     Type
   375 ;;		None
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   380 ;; Tracked objects:
   381 ;;		On entry : B00/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   385 ;;      Params:         0       0       0       0       0
   386 ;;      Locals:         0       0       0       0       0
   387 ;;      Temps:          0       0       0       0       0
   388 ;;      Totals:         0       0       0       0       0
   389 ;;Total ram usage:        0 bytes
   390 ;; Hardware stack levels required when called:    3
   391 ;; This function calls:
   392 ;;		_Config_INTERRUPT
   393 ;;		_setup
   394 ;; This function is called by:
   395 ;;		Startup code after reset
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           
   400                           ;psect for function _main
   401  00C4                     _main:
   402  00C4                     l733:	
   403                           ;incstack = 0
   404                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   405                           
   406                           
   407                           ;main_ADC.c: 78:     setup();
   408  00C4  120A  118A  2099  120A  118A  	fcall	_setup
   409  00C9                     l735:
   410                           
   411                           ;main_ADC.c: 79:     Config_INTERRUPT();
   412  00C9  120A  118A  20B4  120A  118A  	fcall	_Config_INTERRUPT
   413  00CE                     l62:	
   414                           ;main_ADC.c: 84:     while (1) {
   415                           
   416  00CE                     l63:	
   417                           ;main_ADC.c: 86:     }
   418                           
   419  00CE  28CE               	goto	l62
   420  00CF  120A  118A  280C   	ljmp	start
   421  00D2                     __end_of_main:
   422                           
   423                           	psect	text1
   424  0099                     __ptext1:	
   425 ;; *************** function _setup *****************
   426 ;; Defined at:
   427 ;;		line 95 in file "main_ADC.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;		None
   432 ;; Return value:  Size  Location     Type
   433 ;;                  1    wreg      void 
   434 ;; Registers used:
   435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   436 ;; Tracked objects:
   437 ;;		On entry : 0/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   441 ;;      Params:         0       0       0       0       0
   442 ;;      Locals:         0       0       0       0       0
   443 ;;      Temps:          0       0       0       0       0
   444 ;;      Totals:         0       0       0       0       0
   445 ;;Total ram usage:        0 bytes
   446 ;; Hardware stack levels used:    1
   447 ;; Hardware stack levels required when called:    2
   448 ;; This function calls:
   449 ;;		_initOsc
   450 ;; This function is called by:
   451 ;;		_main
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           
   456                           ;psect for function _setup
   457  0099                     _setup:
   458  0099                     l689:	
   459                           ;incstack = 0
   460                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   461                           
   462                           
   463                           ;main_ADC.c: 96:     initOsc(0b00000111);
   464  0099  3007               	movlw	7
   465  009A  120A  118A  2015  120A  118A  	fcall	_initOsc
   466  009F                     l691:
   467                           
   468                           ;main_ADC.c: 97:     ANSEL = 0b00000001;
   469  009F  3001               	movlw	1
   470  00A0  1683               	bsf	3,5	;RP0=1, select bank3
   471  00A1  1703               	bsf	3,6	;RP1=1, select bank3
   472  00A2  0088               	movwf	8	;volatile
   473  00A3                     l693:
   474                           
   475                           ;main_ADC.c: 98:     ANSELH = 0;
   476  00A3  0189               	clrf	9	;volatile
   477  00A4                     l695:
   478                           
   479                           ;main_ADC.c: 99:     TRISA = 0b00000001;
   480  00A4  3001               	movlw	1
   481  00A5  1683               	bsf	3,5	;RP0=1, select bank1
   482  00A6  1303               	bcf	3,6	;RP1=0, select bank1
   483  00A7  0085               	movwf	5	;volatile
   484  00A8                     l697:
   485                           
   486                           ;main_ADC.c: 100:     TRISB = 0;
   487  00A8  0186               	clrf	6	;volatile
   488  00A9                     l699:
   489                           
   490                           ;main_ADC.c: 101:     TRISC = 0;
   491  00A9  0187               	clrf	7	;volatile
   492  00AA                     l701:
   493                           
   494                           ;main_ADC.c: 102:     TRISD = 0;
   495  00AA  0188               	clrf	8	;volatile
   496  00AB                     l703:
   497                           
   498                           ;main_ADC.c: 103:     TRISE = 0;
   499  00AB  0189               	clrf	9	;volatile
   500  00AC                     l705:
   501                           
   502                           ;main_ADC.c: 104:     PORTA = 0;
   503  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   504  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   505  00AE  0185               	clrf	5	;volatile
   506  00AF                     l707:
   507                           
   508                           ;main_ADC.c: 105:     PORTB = 0;
   509  00AF  0186               	clrf	6	;volatile
   510  00B0                     l709:
   511                           
   512                           ;main_ADC.c: 106:     PORTC = 0;
   513  00B0  0187               	clrf	7	;volatile
   514  00B1                     l711:
   515                           
   516                           ;main_ADC.c: 107:     PORTD = 0;
   517  00B1  0188               	clrf	8	;volatile
   518  00B2                     l713:
   519                           
   520                           ;main_ADC.c: 108:     PORTE = 0;
   521  00B2  0189               	clrf	9	;volatile
   522  00B3                     l68:
   523  00B3  0008               	return
   524  00B4                     __end_of_setup:
   525                           
   526                           	psect	text2
   527  0015                     __ptext2:	
   528 ;; *************** function _initOsc *****************
   529 ;; Defined at:
   530 ;;		line 3 in file "Oscilador.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;  IRCF            1    wreg     unsigned char 
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  IRCF            1    6[COMMON] unsigned char 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         0       0       0       0       0
   545 ;;      Locals:         1       0       0       0       0
   546 ;;      Temps:          2       0       0       0       0
   547 ;;      Totals:         3       0       0       0       0
   548 ;;Total ram usage:        3 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; Hardware stack levels required when called:    1
   551 ;; This function calls:
   552 ;;		Nothing
   553 ;; This function is called by:
   554 ;;		_setup
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           
   559                           ;psect for function _initOsc
   560  0015                     _initOsc:
   561                           
   562                           ;incstack = 0
   563                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   564                           ;initOsc@IRCF stored from wreg
   565  0015  00F6               	movwf	initOsc@IRCF
   566  0016                     l679:
   567                           
   568                           ;Oscilador.c: 5:     switch(IRCF){
   569  0016  284D               	goto	l683
   570  0017                     l77:	
   571                           ;Oscilador.c: 6:         case 0:
   572                           
   573                           
   574                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   575  0017  1683               	bsf	3,5	;RP0=1, select bank1
   576  0018  1303               	bcf	3,6	;RP1=0, select bank1
   577  0019  130F               	bcf	15,6	;volatile
   578                           
   579                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   580  001A  128F               	bcf	15,5	;volatile
   581                           
   582                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   583  001B  120F               	bcf	15,4	;volatile
   584                           
   585                           ;Oscilador.c: 10:             break;
   586  001C  286F               	goto	l78
   587  001D                     l79:	
   588                           ;Oscilador.c: 11:          case 1:
   589                           
   590                           
   591                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   592  001D  1683               	bsf	3,5	;RP0=1, select bank1
   593  001E  1303               	bcf	3,6	;RP1=0, select bank1
   594  001F  130F               	bcf	15,6	;volatile
   595                           
   596                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   597  0020  128F               	bcf	15,5	;volatile
   598                           
   599                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   600  0021  160F               	bsf	15,4	;volatile
   601                           
   602                           ;Oscilador.c: 15:             break;
   603  0022  286F               	goto	l78
   604  0023                     l80:	
   605                           ;Oscilador.c: 16:         case 2:
   606                           
   607                           
   608                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   609  0023  1683               	bsf	3,5	;RP0=1, select bank1
   610  0024  1303               	bcf	3,6	;RP1=0, select bank1
   611  0025  130F               	bcf	15,6	;volatile
   612                           
   613                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   614  0026  168F               	bsf	15,5	;volatile
   615                           
   616                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   617  0027  120F               	bcf	15,4	;volatile
   618                           
   619                           ;Oscilador.c: 20:             break;
   620  0028  286F               	goto	l78
   621  0029                     l81:	
   622                           ;Oscilador.c: 21:         case 3:
   623                           
   624                           
   625                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   626  0029  1683               	bsf	3,5	;RP0=1, select bank1
   627  002A  1303               	bcf	3,6	;RP1=0, select bank1
   628  002B  130F               	bcf	15,6	;volatile
   629                           
   630                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   631  002C  168F               	bsf	15,5	;volatile
   632                           
   633                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   634  002D  160F               	bsf	15,4	;volatile
   635                           
   636                           ;Oscilador.c: 25:             break;
   637  002E  286F               	goto	l78
   638  002F                     l82:	
   639                           ;Oscilador.c: 26:         case 4:
   640                           
   641                           
   642                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   643  002F  1683               	bsf	3,5	;RP0=1, select bank1
   644  0030  1303               	bcf	3,6	;RP1=0, select bank1
   645  0031  170F               	bsf	15,6	;volatile
   646                           
   647                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   648  0032  128F               	bcf	15,5	;volatile
   649                           
   650                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   651  0033  120F               	bcf	15,4	;volatile
   652                           
   653                           ;Oscilador.c: 30:             break;
   654  0034  286F               	goto	l78
   655  0035                     l83:	
   656                           ;Oscilador.c: 31:         case 5:
   657                           
   658                           
   659                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   660  0035  1683               	bsf	3,5	;RP0=1, select bank1
   661  0036  1303               	bcf	3,6	;RP1=0, select bank1
   662  0037  170F               	bsf	15,6	;volatile
   663                           
   664                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
   665  0038  128F               	bcf	15,5	;volatile
   666                           
   667                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
   668  0039  160F               	bsf	15,4	;volatile
   669                           
   670                           ;Oscilador.c: 35:             break;
   671  003A  286F               	goto	l78
   672  003B                     l84:	
   673                           ;Oscilador.c: 36:         case 6:
   674                           
   675                           
   676                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
   677  003B  1683               	bsf	3,5	;RP0=1, select bank1
   678  003C  1303               	bcf	3,6	;RP1=0, select bank1
   679  003D  170F               	bsf	15,6	;volatile
   680                           
   681                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
   682  003E  168F               	bsf	15,5	;volatile
   683                           
   684                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
   685  003F  120F               	bcf	15,4	;volatile
   686                           
   687                           ;Oscilador.c: 40:             break;
   688  0040  286F               	goto	l78
   689  0041                     l85:	
   690                           ;Oscilador.c: 41:         case 7:
   691                           
   692                           
   693                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
   694  0041  1683               	bsf	3,5	;RP0=1, select bank1
   695  0042  1303               	bcf	3,6	;RP1=0, select bank1
   696  0043  170F               	bsf	15,6	;volatile
   697                           
   698                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
   699  0044  168F               	bsf	15,5	;volatile
   700                           
   701                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
   702  0045  160F               	bsf	15,4	;volatile
   703                           
   704                           ;Oscilador.c: 45:             break;
   705  0046  286F               	goto	l78
   706  0047                     l86:	
   707                           ;Oscilador.c: 46:         default:
   708                           
   709                           
   710                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
   711  0047  1683               	bsf	3,5	;RP0=1, select bank1
   712  0048  1303               	bcf	3,6	;RP1=0, select bank1
   713  0049  170F               	bsf	15,6	;volatile
   714                           
   715                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
   716  004A  168F               	bsf	15,5	;volatile
   717                           
   718                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
   719  004B  120F               	bcf	15,4	;volatile
   720                           
   721                           ;Oscilador.c: 50:             break;
   722  004C  286F               	goto	l78
   723  004D                     l683:
   724  004D  0876               	movf	initOsc@IRCF,w
   725  004E  00F4               	movwf	??_initOsc
   726  004F  01F5               	clrf	??_initOsc+1
   727                           
   728                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   729                           ; Switch size 1, requested type "simple"
   730                           ; Number of cases is 1, Range of values is 0 to 0
   731                           ; switch strategies available:
   732                           ; Name         Instructions Cycles
   733                           ; simple_byte            4     3 (average)
   734                           ; direct_byte           11     8 (fixed)
   735                           ; jumptable            260     6 (fixed)
   736                           ;	Chosen strategy is simple_byte
   737  0050  0875               	movf	??_initOsc+1,w
   738  0051  3A00               	xorlw	0	; case 0
   739  0052  1903               	skipnz
   740  0053  2855               	goto	l757
   741  0054  2847               	goto	l86
   742  0055                     l757:
   743                           
   744                           ; Switch size 1, requested type "simple"
   745                           ; Number of cases is 8, Range of values is 0 to 7
   746                           ; switch strategies available:
   747                           ; Name         Instructions Cycles
   748                           ; simple_byte           25    13 (average)
   749                           ; direct_byte           32     8 (fixed)
   750                           ; jumptable            260     6 (fixed)
   751                           ;	Chosen strategy is simple_byte
   752  0055  0874               	movf	??_initOsc,w
   753  0056  3A00               	xorlw	0	; case 0
   754  0057  1903               	skipnz
   755  0058  2817               	goto	l77
   756  0059  3A01               	xorlw	1	; case 1
   757  005A  1903               	skipnz
   758  005B  281D               	goto	l79
   759  005C  3A03               	xorlw	3	; case 2
   760  005D  1903               	skipnz
   761  005E  2823               	goto	l80
   762  005F  3A01               	xorlw	1	; case 3
   763  0060  1903               	skipnz
   764  0061  2829               	goto	l81
   765  0062  3A07               	xorlw	7	; case 4
   766  0063  1903               	skipnz
   767  0064  282F               	goto	l82
   768  0065  3A01               	xorlw	1	; case 5
   769  0066  1903               	skipnz
   770  0067  2835               	goto	l83
   771  0068  3A03               	xorlw	3	; case 6
   772  0069  1903               	skipnz
   773  006A  283B               	goto	l84
   774  006B  3A01               	xorlw	1	; case 7
   775  006C  1903               	skipnz
   776  006D  2841               	goto	l85
   777  006E  2847               	goto	l86
   778  006F                     l78:
   779                           
   780                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
   781  006F  140F               	bsf	15,0	;volatile
   782  0070                     l87:
   783  0070  0008               	return
   784  0071                     __end_of_initOsc:
   785                           
   786                           	psect	text3
   787  00B4                     __ptext3:	
   788 ;; *************** function _Config_INTERRUPT *****************
   789 ;; Defined at:
   790 ;;		line 113 in file "main_ADC.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;		None
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, status,2
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   804 ;;      Params:         0       0       0       0       0
   805 ;;      Locals:         0       0       0       0       0
   806 ;;      Temps:          0       0       0       0       0
   807 ;;      Totals:         0       0       0       0       0
   808 ;;Total ram usage:        0 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; Hardware stack levels required when called:    1
   811 ;; This function calls:
   812 ;;		Nothing
   813 ;; This function is called by:
   814 ;;		_main
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           
   819                           ;psect for function _Config_INTERRUPT
   820  00B4                     _Config_INTERRUPT:
   821  00B4                     l715:	
   822                           ;incstack = 0
   823                           ; Regs used in _Config_INTERRUPT: [wreg+status,2]
   824                           
   825                           
   826                           ;main_ADC.c: 114:     INTCONbits.GIE = 1;
   827  00B4  178B               	bsf	11,7	;volatile
   828                           
   829                           ;main_ADC.c: 115:     INTCONbits.PEIE = 1;
   830  00B5  170B               	bsf	11,6	;volatile
   831                           
   832                           ;main_ADC.c: 116:     PIE1bits.ADIE = 1;
   833  00B6  1683               	bsf	3,5	;RP0=1, select bank1
   834  00B7  1303               	bcf	3,6	;RP1=0, select bank1
   835  00B8  170C               	bsf	12,6	;volatile
   836                           
   837                           ;main_ADC.c: 117:     PIR1bits.ADIF = 1;
   838  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   839  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   840  00BB  170C               	bsf	12,6	;volatile
   841  00BC                     l717:
   842                           
   843                           ;main_ADC.c: 118:     ADCON1 = 0b00000000;
   844  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   845  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   846  00BE  019F               	clrf	31	;volatile
   847  00BF                     l719:
   848                           
   849                           ;main_ADC.c: 119:     ADCON0 = 0b01000001;
   850  00BF  3041               	movlw	65
   851  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   852  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   853  00C2  009F               	movwf	31	;volatile
   854  00C3                     l71:
   855  00C3  0008               	return
   856  00C4                     __end_of_Config_INTERRUPT:
   857                           
   858                           	psect	text4
   859  0071                     __ptext4:	
   860 ;; *************** function _ISR *****************
   861 ;; Defined at:
   862 ;;		line 60 in file "main_ADC.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   876 ;;      Params:         0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0
   878 ;;      Temps:          4       0       0       0       0
   879 ;;      Totals:         4       0       0       0       0
   880 ;;Total ram usage:        4 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		Interrupt level 1
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           
   890                           ;psect for function _ISR
   891  0071                     _ISR:
   892  0071                     i1l721:
   893                           
   894                           ;main_ADC.c: 62:     if (PIR1bits.ADIF) {
   895  0071  1283               	bcf	3,5	;RP0=0, select bank0
   896  0072  1303               	bcf	3,6	;RP1=0, select bank0
   897  0073  1F0C               	btfss	12,6	;volatile
   898  0074  2876               	goto	u1_21
   899  0075  2877               	goto	u1_20
   900  0076                     u1_21:
   901  0076  2892               	goto	i1l57
   902  0077                     u1_20:
   903  0077                     i1l723:
   904                           
   905                           ;main_ADC.c: 63:         PIR1bits.ADIF = 0;
   906  0077  130C               	bcf	12,6	;volatile
   907  0078                     i1l725:
   908                           
   909                           ;main_ADC.c: 64:         _delay((unsigned long)((2)*(8000000/4000.0)));
   910  0078  3006               	movlw	6
   911  0079  00F1               	movwf	??_ISR+1
   912  007A  3030               	movlw	48
   913  007B  00F0               	movwf	??_ISR
   914  007C                     u3_27:
   915  007C  0BF0               	decfsz	??_ISR,f
   916  007D  287C               	goto	u3_27
   917  007E  0BF1               	decfsz	??_ISR+1,f
   918  007F  287C               	goto	u3_27
   919  0080  0000               	nop
   920  0081                     i1l727:
   921                           
   922                           ;main_ADC.c: 65:         ADCON0bits.GO = 1;
   923  0081  1283               	bcf	3,5	;RP0=0, select bank0
   924  0082  1303               	bcf	3,6	;RP1=0, select bank0
   925  0083  149F               	bsf	31,1	;volatile
   926                           
   927                           ;main_ADC.c: 66:         while (ADCON0bits.GO != 0) {
   928  0084  288E               	goto	i1l731
   929  0085                     i1l729:
   930                           
   931                           ;main_ADC.c: 67:             ADC_val = ADRESH;
   932  0085  081E               	movf	30,w	;volatile
   933  0086  00F0               	movwf	??_ISR
   934  0087  01F1               	clrf	??_ISR+1
   935  0088  0870               	movf	??_ISR,w
   936  0089  00F7               	movwf	_ADC_val
   937  008A  0871               	movf	??_ISR+1,w
   938  008B  00F8               	movwf	_ADC_val+1
   939                           
   940                           ;main_ADC.c: 68:             PORTC = ADC_val;
   941  008C  0877               	movf	_ADC_val,w
   942  008D  0087               	movwf	7	;volatile
   943  008E                     i1l731:
   944                           
   945                           ;main_ADC.c: 66:         while (ADCON0bits.GO != 0) {
   946  008E  189F               	btfsc	31,1	;volatile
   947  008F  2891               	goto	u2_21
   948  0090  2892               	goto	u2_20
   949  0091                     u2_21:
   950  0091  2885               	goto	i1l729
   951  0092                     u2_20:
   952  0092                     i1l57:
   953  0092  0873               	movf	??_ISR+3,w
   954  0093  008A               	movwf	10
   955  0094  0E72               	swapf	??_ISR+2,w
   956  0095  0083               	movwf	3
   957  0096  0EFE               	swapf	btemp,f
   958  0097  0E7E               	swapf	btemp,w
   959  0098  0009               	retfie
   960  0099                     __end_of_ISR:
   961  007E                     btemp	set	126	;btemp
   962  007E                     wtemp0	set	126
   963                           
   964                           	psect	intentry
   965  0004                     __pintentry:	
   966                           ;incstack = 0
   967                           ; Regs used in _ISR: [wreg]
   968                           
   969  0004                     interrupt_function:
   970  007E                     saved_w	set	btemp
   971  0004  00FE               	movwf	btemp
   972  0005  0E03               	swapf	3,w
   973  0006  00F2               	movwf	??_ISR+2
   974  0007  080A               	movf	10,w
   975  0008  00F3               	movwf	??_ISR+3
   976  0009  120A  118A  2871   	ljmp	_ISR
   977                           
   978                           	psect	config
   979                           
   980                           ;Config register CONFIG1 @ 0x2007
   981                           ;	Oscillator Selection bits
   982                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   983                           ;	Watchdog Timer Enable bit
   984                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   985                           ;	Power-up Timer Enable bit
   986                           ;	PWRTE = OFF, PWRT disabled
   987                           ;	RE3/MCLR pin function select bit
   988                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   989                           ;	Code Protection bit
   990                           ;	CP = OFF, Program memory code protection is disabled
   991                           ;	Data Code Protection bit
   992                           ;	CPD = OFF, Data memory code protection is disabled
   993                           ;	Brown Out Reset Selection bits
   994                           ;	BOREN = OFF, BOR disabled
   995                           ;	Internal External Switchover bit
   996                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   997                           ;	Fail-Safe Clock Monitor Enabled bit
   998                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   999                           ;	Low Voltage Programming Enable bit
  1000                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1001                           ;	In-Circuit Debugger Mode bit
  1002                           ;	DEBUG = 0x1, unprogrammed default
  1003  2007                     	org	8199
  1004  2007  20D4               	dw	8404
  1005                           
  1006                           ;Config register CONFIG2 @ 0x2008
  1007                           ;	Brown-out Reset Selection bit
  1008                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1009                           ;	Flash Program Memory Self Write Enable bits
  1010                           ;	WRT = OFF, Write protection off
  1011  2008                     	org	8200
  1012  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_initOsc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                   _Config_INTERRUPT
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_INTERRUPT
   _setup
     _initOsc

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 12:05:11 2021

                       l62 00CE                         l71 00C3                         l63 00CE  
                       l80 0023                         l81 0029                         l82 002F  
                       l83 0035                         l84 003B                         l68 00B3  
                       l85 0041                         l77 0017                         l86 0047  
                       l78 006F                         l87 0070                         l79 001D  
                      l701 00AA                        l711 00B1                        l703 00AB  
                      l713 00B2                        l705 00AC                        l715 00B4  
                      l707 00AF                        l717 00BC                        l709 00B0  
                      l733 00C4                        l719 00BF                        l735 00C9  
                      l683 004D                        l691 009F                        l757 0055  
                      l693 00A3                        l679 0016                        l695 00A4  
                      l697 00A8                        l689 0099                        l699 00A9  
                      _ISR 0071                       ?_ISR 0070                       i1l57 0092  
                     u1_20 0077                       u1_21 0076                       u2_20 0092  
                     u2_21 0091                       u3_27 007C                       _main 00C4  
                     btemp 007E   __end_of_Config_INTERRUPT 00C4                       start 000C  
                    ??_ISR 0070                      ?_main 0070                      _ANSEL 0188  
                    i1l721 0071                      i1l731 008E                      i1l723 0077  
                    i1l725 0078                      i1l727 0081                      i1l729 0085  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089            __end_of_initOsc 0071                      _setup 0099  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 000F               __end_of_main 00D2                     ??_main 0077  
                   _ADCON0 001F                     _ADCON1 009F                     _ADRESH 001E  
              initOsc@IRCF 0076                     ?_setup 0070                     _ANSELH 0189  
                ??_initOsc 0074                     saved_w 007E    __end_of__initialization 0011  
           __pcstackCOMMON 0070              __end_of_setup 00B4                    ??_setup 0077  
        ?_Config_INTERRUPT 0070                 __pmaintext 00C4         ??_Config_INTERRUPT 0074  
               __pintentry 0004                    _ADC_val 0077                    __ptext1 0099  
                  __ptext2 0015                    __ptext3 00B4                    __ptext4 0071  
             __size_of_ISR 0028                    _initOsc 0015       end_of_initialization 0011  
      start_initialization 000F                __end_of_ISR 0099  __size_of_Config_INTERRUPT 0010  
              __pbssCOMMON 0077                  ___latbits 0002                   ?_initOsc 0070  
           __size_of_setup 001B          interrupt_function 0004                   _PIE1bits 008C  
                 _PIR1bits 000C                 _ADCON0bits 001F           _Config_INTERRUPT 00B4  
         __size_of_initOsc 005C              __size_of_main 000E                 _INTCONbits 000B  
                 intlevel1 0000                 _OSCCONbits 008F  
