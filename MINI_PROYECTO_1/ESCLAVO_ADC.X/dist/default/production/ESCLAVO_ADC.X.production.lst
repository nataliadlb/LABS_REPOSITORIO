

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 12:21:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  001F                     _ADCON0	set	31
   285  0009                     _PORTE	set	9
   286  0008                     _PORTD	set	8
   287  0006                     _PORTB	set	6
   288  0005                     _PORTA	set	5
   289  0007                     _PORTC	set	7
   290  001E                     _ADRESH	set	30
   291  001F                     _ADCON0bits	set	31
   292  008F                     _OSCCONbits	set	143
   293  009F                     _ADCON1	set	159
   294  0089                     _TRISE	set	137
   295  0088                     _TRISD	set	136
   296  0087                     _TRISC	set	135
   297  0086                     _TRISB	set	134
   298  0085                     _TRISA	set	133
   299  0189                     _ANSELH	set	393
   300  0188                     _ANSEL	set	392
   301                           
   302                           	psect	cinit
   303  000F                     start_initialization:	
   304                           ; #config settings
   305                           
   306  000F                     __initialization:
   307                           
   308                           ; Clear objects allocated to COMMON
   309  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   310  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   311  0011                     end_of_initialization:	
   312                           ;End of C runtime variable initialization code
   313                           
   314  0011                     __end_of__initialization:
   315  0011  0183               	clrf	3
   316  0012  120A  118A  2871   	ljmp	_main	;jump to C main() function
   317                           
   318                           	psect	bssCOMMON
   319  0077                     __pbssCOMMON:
   320  0077                     _ADC_val:
   321  0077                     	ds	2
   322                           
   323                           	psect	cstackCOMMON
   324  0070                     __pcstackCOMMON:
   325  0070                     ?_setup:
   326  0070                     ?_Config_INTERRUPT:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_initOsc:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_ISR:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ??_ISR:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_main:	
   339                           ; 1 bytes @ 0x0
   340                           
   341                           
   342                           ; 1 bytes @ 0x0
   343  0070                     	ds	2
   344  0072                     ??_Config_INTERRUPT:
   345  0072                     ??_initOsc:	
   346                           ; 1 bytes @ 0x2
   347                           
   348                           
   349                           ; 1 bytes @ 0x2
   350  0072                     	ds	2
   351  0074                     initOsc@IRCF:
   352                           
   353                           ; 1 bytes @ 0x4
   354  0074                     	ds	1
   355  0075                     ??_setup:
   356  0075                     ??_main:	
   357                           ; 1 bytes @ 0x5
   358                           
   359                           
   360                           ; 1 bytes @ 0x5
   361  0075                     	ds	2
   362                           
   363                           	psect	maintext
   364  0071                     __pmaintext:	
   365 ;;
   366 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   367 ;;
   368 ;; *************** function _main *****************
   369 ;; Defined at:
   370 ;;		line 67 in file "main_ADC.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   379 ;; Tracked objects:
   380 ;;		On entry : B00/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   384 ;;      Params:         0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0
   386 ;;      Temps:          2       0       0       0       0
   387 ;;      Totals:         2       0       0       0       0
   388 ;;Total ram usage:        2 bytes
   389 ;; Hardware stack levels required when called:    3
   390 ;; This function calls:
   391 ;;		_Config_INTERRUPT
   392 ;;		_setup
   393 ;; This function is called by:
   394 ;;		Startup code after reset
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           
   399                           ;psect for function _main
   400  0071                     _main:
   401  0071                     l710:	
   402                           ;incstack = 0
   403                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   404                           
   405                           
   406                           ;main_ADC.c: 68:     setup();
   407  0071  120A  118A  2090  120A  118A  	fcall	_setup
   408  0076                     l712:
   409                           
   410                           ;main_ADC.c: 69:     Config_INTERRUPT();
   411  0076  120A  118A  20AB  120A  118A  	fcall	_Config_INTERRUPT
   412  007B                     l714:
   413                           
   414                           ;main_ADC.c: 75:         ADCON0bits.GO = 1;
   415  007B  1283               	bcf	3,5	;RP0=0, select bank0
   416  007C  1303               	bcf	3,6	;RP1=0, select bank0
   417  007D  149F               	bsf	31,1	;volatile
   418                           
   419                           ;main_ADC.c: 76:         while (ADCON0bits.GO != 0) {
   420  007E  2888               	goto	l718
   421  007F                     l716:
   422                           
   423                           ;main_ADC.c: 77:         ADC_val = ADRESH;
   424  007F  081E               	movf	30,w	;volatile
   425  0080  00F5               	movwf	??_main
   426  0081  01F6               	clrf	??_main+1
   427  0082  0875               	movf	??_main,w
   428  0083  00F7               	movwf	_ADC_val
   429  0084  0876               	movf	??_main+1,w
   430  0085  00F8               	movwf	_ADC_val+1
   431                           
   432                           ;main_ADC.c: 78:         PORTC = ADC_val;
   433  0086  0877               	movf	_ADC_val,w
   434  0087  0087               	movwf	7	;volatile
   435  0088                     l718:
   436                           
   437                           ;main_ADC.c: 76:         while (ADCON0bits.GO != 0) {
   438  0088  189F               	btfsc	31,1	;volatile
   439  0089  288B               	goto	u11
   440  008A  288C               	goto	u10
   441  008B                     u11:
   442  008B  287F               	goto	l716
   443  008C                     u10:
   444  008C  287B               	goto	l714
   445  008D  120A  118A  280C   	ljmp	start
   446  0090                     __end_of_main:
   447                           
   448                           	psect	text1
   449  0090                     __ptext1:	
   450 ;; *************** function _setup *****************
   451 ;; Defined at:
   452 ;;		line 89 in file "main_ADC.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   466 ;;      Params:         0       0       0       0       0
   467 ;;      Locals:         0       0       0       0       0
   468 ;;      Temps:          0       0       0       0       0
   469 ;;      Totals:         0       0       0       0       0
   470 ;;Total ram usage:        0 bytes
   471 ;; Hardware stack levels used:    1
   472 ;; Hardware stack levels required when called:    2
   473 ;; This function calls:
   474 ;;		_initOsc
   475 ;; This function is called by:
   476 ;;		_main
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           
   481                           ;psect for function _setup
   482  0090                     _setup:
   483  0090                     l680:	
   484                           ;incstack = 0
   485                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   486                           
   487                           
   488                           ;main_ADC.c: 90:     initOsc(0b00000111);
   489  0090  3007               	movlw	7
   490  0091  120A  118A  2015  120A  118A  	fcall	_initOsc
   491  0096                     l682:
   492                           
   493                           ;main_ADC.c: 91:     ANSEL = 0b00000001;
   494  0096  3001               	movlw	1
   495  0097  1683               	bsf	3,5	;RP0=1, select bank3
   496  0098  1703               	bsf	3,6	;RP1=1, select bank3
   497  0099  0088               	movwf	8	;volatile
   498  009A                     l684:
   499                           
   500                           ;main_ADC.c: 92:     ANSELH = 0;
   501  009A  0189               	clrf	9	;volatile
   502  009B                     l686:
   503                           
   504                           ;main_ADC.c: 93:     TRISA = 0b00000001;
   505  009B  3001               	movlw	1
   506  009C  1683               	bsf	3,5	;RP0=1, select bank1
   507  009D  1303               	bcf	3,6	;RP1=0, select bank1
   508  009E  0085               	movwf	5	;volatile
   509  009F                     l688:
   510                           
   511                           ;main_ADC.c: 94:     TRISB = 0;
   512  009F  0186               	clrf	6	;volatile
   513  00A0                     l690:
   514                           
   515                           ;main_ADC.c: 95:     TRISC = 0;
   516  00A0  0187               	clrf	7	;volatile
   517  00A1                     l692:
   518                           
   519                           ;main_ADC.c: 96:     TRISD = 0;
   520  00A1  0188               	clrf	8	;volatile
   521  00A2                     l694:
   522                           
   523                           ;main_ADC.c: 97:     TRISE = 0;
   524  00A2  0189               	clrf	9	;volatile
   525  00A3                     l696:
   526                           
   527                           ;main_ADC.c: 98:     PORTA = 0;
   528  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   529  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   530  00A5  0185               	clrf	5	;volatile
   531  00A6                     l698:
   532                           
   533                           ;main_ADC.c: 99:     PORTB = 0;
   534  00A6  0186               	clrf	6	;volatile
   535  00A7                     l700:
   536                           
   537                           ;main_ADC.c: 100:     PORTC = 0;
   538  00A7  0187               	clrf	7	;volatile
   539  00A8                     l702:
   540                           
   541                           ;main_ADC.c: 101:     PORTD = 0;
   542  00A8  0188               	clrf	8	;volatile
   543  00A9                     l704:
   544                           
   545                           ;main_ADC.c: 102:     PORTE = 0;
   546  00A9  0189               	clrf	9	;volatile
   547  00AA                     l59:
   548  00AA  0008               	return
   549  00AB                     __end_of_setup:
   550                           
   551                           	psect	text2
   552  0015                     __ptext2:	
   553 ;; *************** function _initOsc *****************
   554 ;; Defined at:
   555 ;;		line 3 in file "Oscilador.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;  IRCF            1    wreg     unsigned char 
   558 ;; Auto vars:     Size  Location     Type
   559 ;;  IRCF            1    4[COMMON] unsigned char 
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   569 ;;      Params:         0       0       0       0       0
   570 ;;      Locals:         1       0       0       0       0
   571 ;;      Temps:          2       0       0       0       0
   572 ;;      Totals:         3       0       0       0       0
   573 ;;Total ram usage:        3 bytes
   574 ;; Hardware stack levels used:    1
   575 ;; Hardware stack levels required when called:    1
   576 ;; This function calls:
   577 ;;		Nothing
   578 ;; This function is called by:
   579 ;;		_setup
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           
   584                           ;psect for function _initOsc
   585  0015                     _initOsc:
   586                           
   587                           ;incstack = 0
   588                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   589                           ;initOsc@IRCF stored from wreg
   590  0015  00F4               	movwf	initOsc@IRCF
   591  0016                     l670:
   592                           
   593                           ;Oscilador.c: 5:     switch(IRCF){
   594  0016  284D               	goto	l674
   595  0017                     l68:	
   596                           ;Oscilador.c: 6:         case 0:
   597                           
   598                           
   599                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   600  0017  1683               	bsf	3,5	;RP0=1, select bank1
   601  0018  1303               	bcf	3,6	;RP1=0, select bank1
   602  0019  130F               	bcf	15,6	;volatile
   603                           
   604                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   605  001A  128F               	bcf	15,5	;volatile
   606                           
   607                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   608  001B  120F               	bcf	15,4	;volatile
   609                           
   610                           ;Oscilador.c: 10:             break;
   611  001C  286F               	goto	l69
   612  001D                     l70:	
   613                           ;Oscilador.c: 11:          case 1:
   614                           
   615                           
   616                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   617  001D  1683               	bsf	3,5	;RP0=1, select bank1
   618  001E  1303               	bcf	3,6	;RP1=0, select bank1
   619  001F  130F               	bcf	15,6	;volatile
   620                           
   621                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   622  0020  128F               	bcf	15,5	;volatile
   623                           
   624                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   625  0021  160F               	bsf	15,4	;volatile
   626                           
   627                           ;Oscilador.c: 15:             break;
   628  0022  286F               	goto	l69
   629  0023                     l71:	
   630                           ;Oscilador.c: 16:         case 2:
   631                           
   632                           
   633                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   634  0023  1683               	bsf	3,5	;RP0=1, select bank1
   635  0024  1303               	bcf	3,6	;RP1=0, select bank1
   636  0025  130F               	bcf	15,6	;volatile
   637                           
   638                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   639  0026  168F               	bsf	15,5	;volatile
   640                           
   641                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   642  0027  120F               	bcf	15,4	;volatile
   643                           
   644                           ;Oscilador.c: 20:             break;
   645  0028  286F               	goto	l69
   646  0029                     l72:	
   647                           ;Oscilador.c: 21:         case 3:
   648                           
   649                           
   650                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   651  0029  1683               	bsf	3,5	;RP0=1, select bank1
   652  002A  1303               	bcf	3,6	;RP1=0, select bank1
   653  002B  130F               	bcf	15,6	;volatile
   654                           
   655                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   656  002C  168F               	bsf	15,5	;volatile
   657                           
   658                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   659  002D  160F               	bsf	15,4	;volatile
   660                           
   661                           ;Oscilador.c: 25:             break;
   662  002E  286F               	goto	l69
   663  002F                     l73:	
   664                           ;Oscilador.c: 26:         case 4:
   665                           
   666                           
   667                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   668  002F  1683               	bsf	3,5	;RP0=1, select bank1
   669  0030  1303               	bcf	3,6	;RP1=0, select bank1
   670  0031  170F               	bsf	15,6	;volatile
   671                           
   672                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   673  0032  128F               	bcf	15,5	;volatile
   674                           
   675                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   676  0033  120F               	bcf	15,4	;volatile
   677                           
   678                           ;Oscilador.c: 30:             break;
   679  0034  286F               	goto	l69
   680  0035                     l74:	
   681                           ;Oscilador.c: 31:         case 5:
   682                           
   683                           
   684                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   685  0035  1683               	bsf	3,5	;RP0=1, select bank1
   686  0036  1303               	bcf	3,6	;RP1=0, select bank1
   687  0037  170F               	bsf	15,6	;volatile
   688                           
   689                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
   690  0038  128F               	bcf	15,5	;volatile
   691                           
   692                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
   693  0039  160F               	bsf	15,4	;volatile
   694                           
   695                           ;Oscilador.c: 35:             break;
   696  003A  286F               	goto	l69
   697  003B                     l75:	
   698                           ;Oscilador.c: 36:         case 6:
   699                           
   700                           
   701                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
   702  003B  1683               	bsf	3,5	;RP0=1, select bank1
   703  003C  1303               	bcf	3,6	;RP1=0, select bank1
   704  003D  170F               	bsf	15,6	;volatile
   705                           
   706                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
   707  003E  168F               	bsf	15,5	;volatile
   708                           
   709                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
   710  003F  120F               	bcf	15,4	;volatile
   711                           
   712                           ;Oscilador.c: 40:             break;
   713  0040  286F               	goto	l69
   714  0041                     l76:	
   715                           ;Oscilador.c: 41:         case 7:
   716                           
   717                           
   718                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
   719  0041  1683               	bsf	3,5	;RP0=1, select bank1
   720  0042  1303               	bcf	3,6	;RP1=0, select bank1
   721  0043  170F               	bsf	15,6	;volatile
   722                           
   723                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
   724  0044  168F               	bsf	15,5	;volatile
   725                           
   726                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
   727  0045  160F               	bsf	15,4	;volatile
   728                           
   729                           ;Oscilador.c: 45:             break;
   730  0046  286F               	goto	l69
   731  0047                     l77:	
   732                           ;Oscilador.c: 46:         default:
   733                           
   734                           
   735                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
   736  0047  1683               	bsf	3,5	;RP0=1, select bank1
   737  0048  1303               	bcf	3,6	;RP1=0, select bank1
   738  0049  170F               	bsf	15,6	;volatile
   739                           
   740                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
   741  004A  168F               	bsf	15,5	;volatile
   742                           
   743                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
   744  004B  120F               	bcf	15,4	;volatile
   745                           
   746                           ;Oscilador.c: 50:             break;
   747  004C  286F               	goto	l69
   748  004D                     l674:
   749  004D  0874               	movf	initOsc@IRCF,w
   750  004E  00F2               	movwf	??_initOsc
   751  004F  01F3               	clrf	??_initOsc+1
   752                           
   753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   754                           ; Switch size 1, requested type "simple"
   755                           ; Number of cases is 1, Range of values is 0 to 0
   756                           ; switch strategies available:
   757                           ; Name         Instructions Cycles
   758                           ; simple_byte            4     3 (average)
   759                           ; direct_byte           11     8 (fixed)
   760                           ; jumptable            260     6 (fixed)
   761                           ;	Chosen strategy is simple_byte
   762  0050  0873               	movf	??_initOsc+1,w
   763  0051  3A00               	xorlw	0	; case 0
   764  0052  1903               	skipnz
   765  0053  2855               	goto	l740
   766  0054  2847               	goto	l77
   767  0055                     l740:
   768                           
   769                           ; Switch size 1, requested type "simple"
   770                           ; Number of cases is 8, Range of values is 0 to 7
   771                           ; switch strategies available:
   772                           ; Name         Instructions Cycles
   773                           ; simple_byte           25    13 (average)
   774                           ; direct_byte           32     8 (fixed)
   775                           ; jumptable            260     6 (fixed)
   776                           ;	Chosen strategy is simple_byte
   777  0055  0872               	movf	??_initOsc,w
   778  0056  3A00               	xorlw	0	; case 0
   779  0057  1903               	skipnz
   780  0058  2817               	goto	l68
   781  0059  3A01               	xorlw	1	; case 1
   782  005A  1903               	skipnz
   783  005B  281D               	goto	l70
   784  005C  3A03               	xorlw	3	; case 2
   785  005D  1903               	skipnz
   786  005E  2823               	goto	l71
   787  005F  3A01               	xorlw	1	; case 3
   788  0060  1903               	skipnz
   789  0061  2829               	goto	l72
   790  0062  3A07               	xorlw	7	; case 4
   791  0063  1903               	skipnz
   792  0064  282F               	goto	l73
   793  0065  3A01               	xorlw	1	; case 5
   794  0066  1903               	skipnz
   795  0067  2835               	goto	l74
   796  0068  3A03               	xorlw	3	; case 6
   797  0069  1903               	skipnz
   798  006A  283B               	goto	l75
   799  006B  3A01               	xorlw	1	; case 7
   800  006C  1903               	skipnz
   801  006D  2841               	goto	l76
   802  006E  2847               	goto	l77
   803  006F                     l69:
   804                           
   805                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
   806  006F  140F               	bsf	15,0	;volatile
   807  0070                     l78:
   808  0070  0008               	return
   809  0071                     __end_of_initOsc:
   810                           
   811                           	psect	text3
   812  00AB                     __ptext3:	
   813 ;; *************** function _Config_INTERRUPT *****************
   814 ;; Defined at:
   815 ;;		line 107 in file "main_ADC.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, status,2
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   829 ;;      Params:         0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0
   832 ;;      Totals:         0       0       0       0       0
   833 ;;Total ram usage:        0 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    1
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _Config_INTERRUPT
   845  00AB                     _Config_INTERRUPT:
   846  00AB                     l706:	
   847                           ;incstack = 0
   848                           ; Regs used in _Config_INTERRUPT: [wreg+status,2]
   849                           
   850                           
   851                           ;main_ADC.c: 112:     ADCON1 = 0b00000000;
   852  00AB  1683               	bsf	3,5	;RP0=1, select bank1
   853  00AC  1303               	bcf	3,6	;RP1=0, select bank1
   854  00AD  019F               	clrf	31	;volatile
   855  00AE                     l708:
   856                           
   857                           ;main_ADC.c: 113:     ADCON0 = 0b01000001;
   858  00AE  3041               	movlw	65
   859  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   860  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   861  00B1  009F               	movwf	31	;volatile
   862  00B2                     l62:
   863  00B2  0008               	return
   864  00B3                     __end_of_Config_INTERRUPT:
   865                           
   866                           	psect	text4
   867  00B3                     __ptext4:	
   868 ;; *************** function _ISR *****************
   869 ;; Defined at:
   870 ;;		line 60 in file "main_ADC.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		None
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   884 ;;      Params:         0       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0
   886 ;;      Temps:          2       0       0       0       0
   887 ;;      Totals:         2       0       0       0       0
   888 ;;Total ram usage:        2 bytes
   889 ;; Hardware stack levels used:    1
   890 ;; This function calls:
   891 ;;		Nothing
   892 ;; This function is called by:
   893 ;;		Interrupt level 1
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           
   898                           ;psect for function _ISR
   899  00B3                     _ISR:
   900  00B3                     i1l45:
   901  00B3  0871               	movf	??_ISR+1,w
   902  00B4  008A               	movwf	10
   903  00B5  0E70               	swapf	??_ISR,w
   904  00B6  0083               	movwf	3
   905  00B7  0EFE               	swapf	btemp,f
   906  00B8  0E7E               	swapf	btemp,w
   907  00B9  0009               	retfie
   908  00BA                     __end_of_ISR:
   909  007E                     btemp	set	126	;btemp
   910  007E                     wtemp0	set	126
   911                           
   912                           	psect	intentry
   913  0004                     __pintentry:	
   914                           ;incstack = 0
   915                           ; Regs used in _ISR: []
   916                           
   917  0004                     interrupt_function:
   918  007E                     saved_w	set	btemp
   919  0004  00FE               	movwf	btemp
   920  0005  0E03               	swapf	3,w
   921  0006  00F0               	movwf	??_ISR
   922  0007  080A               	movf	10,w
   923  0008  00F1               	movwf	??_ISR+1
   924  0009  120A  118A  28B3   	ljmp	_ISR
   925                           
   926                           	psect	config
   927                           
   928                           ;Config register CONFIG1 @ 0x2007
   929                           ;	Oscillator Selection bits
   930                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   931                           ;	Watchdog Timer Enable bit
   932                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   933                           ;	Power-up Timer Enable bit
   934                           ;	PWRTE = OFF, PWRT disabled
   935                           ;	RE3/MCLR pin function select bit
   936                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   937                           ;	Code Protection bit
   938                           ;	CP = OFF, Program memory code protection is disabled
   939                           ;	Data Code Protection bit
   940                           ;	CPD = OFF, Data memory code protection is disabled
   941                           ;	Brown Out Reset Selection bits
   942                           ;	BOREN = OFF, BOR disabled
   943                           ;	Internal External Switchover bit
   944                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   945                           ;	Fail-Safe Clock Monitor Enabled bit
   946                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   947                           ;	Low Voltage Programming Enable bit
   948                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   949                           ;	In-Circuit Debugger Mode bit
   950                           ;	DEBUG = 0x1, unprogrammed default
   951  2007                     	org	8199
   952  2007  20D4               	dw	8404
   953                           
   954                           ;Config register CONFIG2 @ 0x2008
   955                           ;	Brown-out Reset Selection bit
   956                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   957                           ;	Flash Program Memory Self Write Enable bits
   958                           ;	WRT = OFF, Write protection off
   959  2008                     	org	8200
   960  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_initOsc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      15
                                              5 COMMON     2     2      0
                   _Config_INTERRUPT
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_INTERRUPT
   _setup
     _initOsc

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 12:21:47 2021

                       l62 00B2                         l70 001D                         l71 0023  
                       l72 0029                         l73 002F                         l74 0035  
                       l75 003B                         l59 00AA                         l76 0041  
                       l68 0017                         l77 0047                         l69 006F  
                       l78 0070                         u10 008C                         u11 008B  
                      l700 00A7                        l702 00A8                        l710 0071  
                      l704 00A9                        l712 0076                        l706 00AB  
                      l714 007B                        l708 00AE                        l740 0055  
                      l716 007F                        l670 0016                        l718 0088  
                      l680 0090                        l674 004D                        l690 00A0  
                      l682 0096                        l692 00A1                        l684 009A  
                      l694 00A2                        l686 009B                        l696 00A3  
                      l688 009F                        l698 00A6                        _ISR 00B3  
                     ?_ISR 0070                       i1l45 00B3                       _main 0071  
                     btemp 007E   __end_of_Config_INTERRUPT 00B3                       start 000C  
                    ??_ISR 0070                      ?_main 0070                      _ANSEL 0188  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089            __end_of_initOsc 0071                      _setup 0090  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 000F               __end_of_main 0090                     ??_main 0075  
                   _ADCON0 001F                     _ADCON1 009F                     _ADRESH 001E  
              initOsc@IRCF 0074                     ?_setup 0070                     _ANSELH 0189  
                ??_initOsc 0072                     saved_w 007E    __end_of__initialization 0011  
           __pcstackCOMMON 0070              __end_of_setup 00AB                    ??_setup 0075  
        ?_Config_INTERRUPT 0070                 __pmaintext 0071         ??_Config_INTERRUPT 0072  
               __pintentry 0004                    _ADC_val 0077                    __ptext1 0090  
                  __ptext2 0015                    __ptext3 00AB                    __ptext4 00B3  
             __size_of_ISR 0007                    _initOsc 0015       end_of_initialization 0011  
      start_initialization 000F                __end_of_ISR 00BA  __size_of_Config_INTERRUPT 0008  
              __pbssCOMMON 0077                  ___latbits 0002                   ?_initOsc 0070  
           __size_of_setup 001B          interrupt_function 0004                 _ADCON0bits 001F  
         _Config_INTERRUPT 00AB           __size_of_initOsc 005C              __size_of_main 001F  
                 intlevel1 0000                 _OSCCONbits 008F  
