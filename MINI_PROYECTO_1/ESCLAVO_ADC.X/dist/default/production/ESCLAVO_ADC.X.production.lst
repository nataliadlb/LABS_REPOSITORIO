

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 18 12:17:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0013                     _SSPBUF	set	19
   367  0014                     _SSPCON	set	20
   368  000C                     _PIR1bits	set	12
   369  000B                     _INTCONbits	set	11
   370  001F                     _ADCON0	set	31
   371  0009                     _PORTE	set	9
   372  0005                     _PORTA	set	5
   373  0007                     _PORTC	set	7
   374  001E                     _ADRESH	set	30
   375  001F                     _ADCON0bits	set	31
   376  0006                     _PORTB	set	6
   377  0008                     _PORTD	set	8
   378  0063                     _SSPIF	set	99
   379  0094                     _SSPSTATbits	set	148
   380  0094                     _SSPSTAT	set	148
   381  008F                     _OSCCONbits	set	143
   382  008C                     _PIE1bits	set	140
   383  009F                     _ADCON1	set	159
   384  0089                     _TRISE	set	137
   385  0088                     _TRISD	set	136
   386  0087                     _TRISC	set	135
   387  0086                     _TRISB	set	134
   388  0085                     _TRISA	set	133
   389  043B                     _TRISC3	set	1083
   390  043D                     _TRISC5	set	1085
   391  0189                     _ANSELH	set	393
   392  0188                     _ANSEL	set	392
   393                           
   394                           	psect	cinit
   395  000F                     start_initialization:	
   396                           ; #config settings
   397                           
   398  000F                     __initialization:
   399                           
   400                           ; Clear objects allocated to COMMON
   401  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   402  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   403  0011                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406  0011                     __end_of__initialization:
   407  0011  0183               	clrf	3
   408  0012  120A  118A  28BF   	ljmp	_main	;jump to C main() function
   409                           
   410                           	psect	bssCOMMON
   411  0079                     __pbssCOMMON:
   412  0079                     _ADC_val:
   413  0079                     	ds	2
   414                           
   415                           	psect	cstackCOMMON
   416  0070                     __pcstackCOMMON:
   417  0070                     ?_spiRead:
   418  0070                     ??_spiRead:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_spiWrite:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ??_spiWrite:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_setup:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_initOsc:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_Config_INTERRUPT:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_ISR:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_main:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_spiReceiveWait:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ??_spiReceiveWait:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     spiWrite@dat:	
   449                           ; 1 bytes @ 0x0
   450                           
   451                           
   452                           ; 1 bytes @ 0x0
   453  0070                     	ds	1
   454  0071                     ??_ISR:
   455                           
   456                           ; 1 bytes @ 0x1
   457  0071                     	ds	2
   458  0073                     ??_initOsc:
   459  0073                     ??_Config_INTERRUPT:	
   460                           ; 1 bytes @ 0x3
   461                           
   462  0073                     ?_spiInit:	
   463                           ; 1 bytes @ 0x3
   464                           
   465  0073                     spiInit@sDataSample:	
   466                           ; 1 bytes @ 0x3
   467                           
   468                           
   469                           ; 1 bytes @ 0x3
   470  0073                     	ds	1
   471  0074                     spiInit@sClockIdle:
   472                           
   473                           ; 1 bytes @ 0x4
   474  0074                     	ds	1
   475  0075                     initOsc@IRCF:
   476  0075                     spiInit@sTransmitEdge:	
   477                           ; 1 bytes @ 0x5
   478                           
   479                           
   480                           ; 1 bytes @ 0x5
   481  0075                     	ds	1
   482  0076                     ??_spiInit:
   483  0076                     spiInit@sType:	
   484                           ; 1 bytes @ 0x6
   485                           
   486                           
   487                           ; 1 bytes @ 0x6
   488  0076                     	ds	1
   489  0077                     ??_setup:
   490  0077                     ??_main:	
   491                           ; 1 bytes @ 0x7
   492                           
   493                           
   494                           ; 1 bytes @ 0x7
   495  0077                     	ds	2
   496                           
   497                           	psect	maintext
   498  00BF                     __pmaintext:	
   499 ;;
   500 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   501 ;;
   502 ;; *************** function _main *****************
   503 ;; Defined at:
   504 ;;		line 73 in file "main_ADC.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : B00/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0
   520 ;;      Temps:          2       0       0       0       0
   521 ;;      Totals:         2       0       0       0       0
   522 ;;Total ram usage:        2 bytes
   523 ;; Hardware stack levels required when called:    5
   524 ;; This function calls:
   525 ;;		_setup
   526 ;; This function is called by:
   527 ;;		Startup code after reset
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           
   532                           ;psect for function _main
   533  00BF                     _main:
   534  00BF                     l869:	
   535                           ;incstack = 0
   536                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   537                           
   538                           
   539                           ;main_ADC.c: 74:     setup();
   540  00BF  120A  118A  2071  120A  118A  	fcall	_setup
   541  00C4                     l871:
   542                           
   543                           ;main_ADC.c: 82:         ADCON0bits.GO = 1;
   544  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   545  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   546  00C6  149F               	bsf	31,1	;volatile
   547                           
   548                           ;main_ADC.c: 83:         while (ADCON0bits.GO != 0) {
   549  00C7  28D1               	goto	l875
   550  00C8                     l873:
   551                           
   552                           ;main_ADC.c: 84:         ADC_val = ADRESH;
   553  00C8  081E               	movf	30,w	;volatile
   554  00C9  00F7               	movwf	??_main
   555  00CA  01F8               	clrf	??_main+1
   556  00CB  0877               	movf	??_main,w
   557  00CC  00F9               	movwf	_ADC_val
   558  00CD  0878               	movf	??_main+1,w
   559  00CE  00FA               	movwf	_ADC_val+1
   560                           
   561                           ;main_ADC.c: 85:         PORTC = ADC_val;
   562  00CF  0879               	movf	_ADC_val,w
   563  00D0  0087               	movwf	7	;volatile
   564  00D1                     l875:
   565                           
   566                           ;main_ADC.c: 83:         while (ADCON0bits.GO != 0) {
   567  00D1  189F               	btfsc	31,1	;volatile
   568  00D2  28D4               	goto	u61
   569  00D3  28D5               	goto	u60
   570  00D4                     u61:
   571  00D4  28C8               	goto	l873
   572  00D5                     u60:
   573  00D5  28C4               	goto	l871
   574  00D6  120A  118A  280C   	ljmp	start
   575  00D9                     __end_of_main:
   576                           
   577                           	psect	text1
   578  0071                     __ptext1:	
   579 ;; *************** function _setup *****************
   580 ;; Defined at:
   581 ;;		line 96 in file "main_ADC.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   595 ;;      Params:         0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0
   598 ;;      Totals:         0       0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; Hardware stack levels required when called:    4
   602 ;; This function calls:
   603 ;;		_Config_INTERRUPT
   604 ;;		_initOsc
   605 ;;		_spiInit
   606 ;; This function is called by:
   607 ;;		_main
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           
   612                           ;psect for function _setup
   613  0071                     _setup:
   614  0071                     l835:	
   615                           ;incstack = 0
   616                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   617                           
   618                           
   619                           ;main_ADC.c: 97:     initOsc(0b00000111);
   620  0071  3007               	movlw	7
   621  0072  120A  118A  2015  120A  118A  	fcall	_initOsc
   622  0077                     l837:
   623                           
   624                           ;main_ADC.c: 98:     ANSEL = 0b00000001;
   625  0077  3001               	movlw	1
   626  0078  1683               	bsf	3,5	;RP0=1, select bank3
   627  0079  1703               	bsf	3,6	;RP1=1, select bank3
   628  007A  0088               	movwf	8	;volatile
   629  007B                     l839:
   630                           
   631                           ;main_ADC.c: 99:     ANSELH = 0;
   632  007B  0189               	clrf	9	;volatile
   633  007C                     l841:
   634                           
   635                           ;main_ADC.c: 100:     TRISA = 0b00000001;
   636  007C  3001               	movlw	1
   637  007D  1683               	bsf	3,5	;RP0=1, select bank1
   638  007E  1303               	bcf	3,6	;RP1=0, select bank1
   639  007F  0085               	movwf	5	;volatile
   640  0080                     l843:
   641                           
   642                           ;main_ADC.c: 101:     TRISB = 0;
   643  0080  0186               	clrf	6	;volatile
   644  0081                     l845:
   645                           
   646                           ;main_ADC.c: 102:     TRISC = 0;
   647  0081  0187               	clrf	7	;volatile
   648  0082                     l847:
   649                           
   650                           ;main_ADC.c: 103:     TRISD = 0;
   651  0082  0188               	clrf	8	;volatile
   652  0083                     l849:
   653                           
   654                           ;main_ADC.c: 104:     TRISE = 0;
   655  0083  0189               	clrf	9	;volatile
   656  0084                     l851:
   657                           
   658                           ;main_ADC.c: 105:     PORTA = 0;
   659  0084  1283               	bcf	3,5	;RP0=0, select bank0
   660  0085  1303               	bcf	3,6	;RP1=0, select bank0
   661  0086  0185               	clrf	5	;volatile
   662  0087                     l853:
   663                           
   664                           ;main_ADC.c: 106:     PORTB = 0;
   665  0087  0186               	clrf	6	;volatile
   666  0088                     l855:
   667                           
   668                           ;main_ADC.c: 107:     PORTC = 0;
   669  0088  0187               	clrf	7	;volatile
   670  0089                     l857:
   671                           
   672                           ;main_ADC.c: 108:     PORTD = 0;
   673  0089  0188               	clrf	8	;volatile
   674  008A                     l859:
   675                           
   676                           ;main_ADC.c: 109:     PORTE = 0;
   677  008A  0189               	clrf	9	;volatile
   678  008B                     l861:
   679                           
   680                           ;main_ADC.c: 110:     ADCON1 = 0b00000000;
   681  008B  1683               	bsf	3,5	;RP0=1, select bank1
   682  008C  1303               	bcf	3,6	;RP1=0, select bank1
   683  008D  019F               	clrf	31	;volatile
   684  008E                     l863:
   685                           
   686                           ;main_ADC.c: 111:     ADCON0 = 0b01000001;
   687  008E  3041               	movlw	65
   688  008F  1283               	bcf	3,5	;RP0=0, select bank0
   689  0090  1303               	bcf	3,6	;RP1=0, select bank0
   690  0091  009F               	movwf	31	;volatile
   691  0092                     l865:
   692                           
   693                           ;main_ADC.c: 112:     Config_INTERRUPT();
   694  0092  120A  118A  20EF  120A  118A  	fcall	_Config_INTERRUPT
   695  0097                     l867:
   696                           
   697                           ;main_ADC.c: 113:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
   698  0097  01F3               	clrf	spiInit@sDataSample
   699  0098  01F4               	clrf	spiInit@sClockIdle
   700  0099  01F5               	clrf	spiInit@sTransmitEdge
   701  009A  3024               	movlw	36
   702  009B  120A  118A  20D9  120A  118A  	fcall	_spiInit
   703  00A0                     l74:
   704  00A0  0008               	return
   705  00A1                     __end_of_setup:
   706                           
   707                           	psect	text2
   708  00D9                     __ptext2:	
   709 ;; *************** function _spiInit *****************
   710 ;; Defined at:
   711 ;;		line 14 in file "SPI.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  sType           1    wreg     enum E1264
   714 ;;  sDataSample     1    3[COMMON] enum E1272
   715 ;;  sClockIdle      1    4[COMMON] enum E1276
   716 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  sType           1    6[COMMON] enum E1264
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, status,2, status,0
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   728 ;;      Params:         3       0       0       0       0
   729 ;;      Locals:         1       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0
   731 ;;      Totals:         4       0       0       0       0
   732 ;;Total ram usage:        4 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:    3
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_setup
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           
   743                           ;psect for function _spiInit
   744  00D9                     _spiInit:
   745                           
   746                           ;incstack = 0
   747                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   748                           ;spiInit@sType stored from wreg
   749  00D9  00F6               	movwf	spiInit@sType
   750  00DA                     l825:
   751                           
   752                           ;SPI.c: 14: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 15: {;SPI.c: 16:     TRISC5 = 0;
   753  00DA  1683               	bsf	3,5	;RP0=1, select bank1
   754  00DB  1303               	bcf	3,6	;RP1=0, select bank1
   755  00DC  1287               	bcf	7,5	;volatile
   756                           
   757                           ;SPI.c: 17:     if(sType & 0b00000100)
   758  00DD  1D76               	btfss	spiInit@sType,2
   759  00DE  28E0               	goto	u51
   760  00DF  28E1               	goto	u50
   761  00E0                     u51:
   762  00E0  28E5               	goto	l831
   763  00E1                     u50:
   764  00E1                     l827:
   765                           
   766                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sTransmitEdge;
   767  00E1  0875               	movf	spiInit@sTransmitEdge,w
   768  00E2  0094               	movwf	20	;volatile
   769  00E3                     l829:
   770                           
   771                           ;SPI.c: 20:         TRISC3 = 1;
   772  00E3  1587               	bsf	7,3	;volatile
   773                           
   774                           ;SPI.c: 21:     }
   775  00E4  28E9               	goto	l109
   776  00E5                     l831:
   777                           
   778                           ;SPI.c: 23:     {;SPI.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
   779  00E5  0873               	movf	spiInit@sDataSample,w
   780  00E6  0475               	iorwf	spiInit@sTransmitEdge,w
   781  00E7  0094               	movwf	20	;volatile
   782  00E8                     l833:
   783                           
   784                           ;SPI.c: 25:         TRISC3 = 0;
   785  00E8  1187               	bcf	7,3	;volatile
   786  00E9                     l109:	
   787                           ;SPI.c: 26:     }
   788                           
   789                           
   790                           ;SPI.c: 28:     SSPCON = sType | sClockIdle;
   791  00E9  0876               	movf	spiInit@sType,w
   792  00EA  0474               	iorwf	spiInit@sClockIdle,w
   793  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   794  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   795  00ED  0094               	movwf	20	;volatile
   796  00EE                     l110:
   797  00EE  0008               	return
   798  00EF                     __end_of_spiInit:
   799                           
   800                           	psect	text3
   801  0015                     __ptext3:	
   802 ;; *************** function _initOsc *****************
   803 ;; Defined at:
   804 ;;		line 3 in file "Oscilador.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  IRCF            1    wreg     unsigned char 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  IRCF            1    5[COMMON] unsigned char 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       0       0       0       0
   819 ;;      Locals:         1       0       0       0       0
   820 ;;      Temps:          2       0       0       0       0
   821 ;;      Totals:         3       0       0       0       0
   822 ;;Total ram usage:        3 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; Hardware stack levels required when called:    3
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_setup
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           
   833                           ;psect for function _initOsc
   834  0015                     _initOsc:
   835                           
   836                           ;incstack = 0
   837                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   838                           ;initOsc@IRCF stored from wreg
   839  0015  00F5               	movwf	initOsc@IRCF
   840  0016                     l719:
   841                           
   842                           ;Oscilador.c: 5:     switch(IRCF){
   843  0016  284D               	goto	l723
   844  0017                     l83:	
   845                           ;Oscilador.c: 6:         case 0:
   846                           
   847                           
   848                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   849  0017  1683               	bsf	3,5	;RP0=1, select bank1
   850  0018  1303               	bcf	3,6	;RP1=0, select bank1
   851  0019  130F               	bcf	15,6	;volatile
   852                           
   853                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   854  001A  128F               	bcf	15,5	;volatile
   855                           
   856                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   857  001B  120F               	bcf	15,4	;volatile
   858                           
   859                           ;Oscilador.c: 10:             break;
   860  001C  286F               	goto	l84
   861  001D                     l85:	
   862                           ;Oscilador.c: 11:          case 1:
   863                           
   864                           
   865                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   866  001D  1683               	bsf	3,5	;RP0=1, select bank1
   867  001E  1303               	bcf	3,6	;RP1=0, select bank1
   868  001F  130F               	bcf	15,6	;volatile
   869                           
   870                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   871  0020  128F               	bcf	15,5	;volatile
   872                           
   873                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   874  0021  160F               	bsf	15,4	;volatile
   875                           
   876                           ;Oscilador.c: 15:             break;
   877  0022  286F               	goto	l84
   878  0023                     l86:	
   879                           ;Oscilador.c: 16:         case 2:
   880                           
   881                           
   882                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   883  0023  1683               	bsf	3,5	;RP0=1, select bank1
   884  0024  1303               	bcf	3,6	;RP1=0, select bank1
   885  0025  130F               	bcf	15,6	;volatile
   886                           
   887                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   888  0026  168F               	bsf	15,5	;volatile
   889                           
   890                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   891  0027  120F               	bcf	15,4	;volatile
   892                           
   893                           ;Oscilador.c: 20:             break;
   894  0028  286F               	goto	l84
   895  0029                     l87:	
   896                           ;Oscilador.c: 21:         case 3:
   897                           
   898                           
   899                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   900  0029  1683               	bsf	3,5	;RP0=1, select bank1
   901  002A  1303               	bcf	3,6	;RP1=0, select bank1
   902  002B  130F               	bcf	15,6	;volatile
   903                           
   904                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   905  002C  168F               	bsf	15,5	;volatile
   906                           
   907                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   908  002D  160F               	bsf	15,4	;volatile
   909                           
   910                           ;Oscilador.c: 25:             break;
   911  002E  286F               	goto	l84
   912  002F                     l88:	
   913                           ;Oscilador.c: 26:         case 4:
   914                           
   915                           
   916                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   917  002F  1683               	bsf	3,5	;RP0=1, select bank1
   918  0030  1303               	bcf	3,6	;RP1=0, select bank1
   919  0031  170F               	bsf	15,6	;volatile
   920                           
   921                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   922  0032  128F               	bcf	15,5	;volatile
   923                           
   924                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   925  0033  120F               	bcf	15,4	;volatile
   926                           
   927                           ;Oscilador.c: 30:             break;
   928  0034  286F               	goto	l84
   929  0035                     l89:	
   930                           ;Oscilador.c: 31:         case 5:
   931                           
   932                           
   933                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   934  0035  1683               	bsf	3,5	;RP0=1, select bank1
   935  0036  1303               	bcf	3,6	;RP1=0, select bank1
   936  0037  170F               	bsf	15,6	;volatile
   937                           
   938                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
   939  0038  128F               	bcf	15,5	;volatile
   940                           
   941                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
   942  0039  160F               	bsf	15,4	;volatile
   943                           
   944                           ;Oscilador.c: 35:             break;
   945  003A  286F               	goto	l84
   946  003B                     l90:	
   947                           ;Oscilador.c: 36:         case 6:
   948                           
   949                           
   950                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
   951  003B  1683               	bsf	3,5	;RP0=1, select bank1
   952  003C  1303               	bcf	3,6	;RP1=0, select bank1
   953  003D  170F               	bsf	15,6	;volatile
   954                           
   955                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
   956  003E  168F               	bsf	15,5	;volatile
   957                           
   958                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
   959  003F  120F               	bcf	15,4	;volatile
   960                           
   961                           ;Oscilador.c: 40:             break;
   962  0040  286F               	goto	l84
   963  0041                     l91:	
   964                           ;Oscilador.c: 41:         case 7:
   965                           
   966                           
   967                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
   968  0041  1683               	bsf	3,5	;RP0=1, select bank1
   969  0042  1303               	bcf	3,6	;RP1=0, select bank1
   970  0043  170F               	bsf	15,6	;volatile
   971                           
   972                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
   973  0044  168F               	bsf	15,5	;volatile
   974                           
   975                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
   976  0045  160F               	bsf	15,4	;volatile
   977                           
   978                           ;Oscilador.c: 45:             break;
   979  0046  286F               	goto	l84
   980  0047                     l92:	
   981                           ;Oscilador.c: 46:         default:
   982                           
   983                           
   984                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
   985  0047  1683               	bsf	3,5	;RP0=1, select bank1
   986  0048  1303               	bcf	3,6	;RP1=0, select bank1
   987  0049  170F               	bsf	15,6	;volatile
   988                           
   989                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
   990  004A  168F               	bsf	15,5	;volatile
   991                           
   992                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
   993  004B  120F               	bcf	15,4	;volatile
   994                           
   995                           ;Oscilador.c: 50:             break;
   996  004C  286F               	goto	l84
   997  004D                     l723:
   998  004D  0875               	movf	initOsc@IRCF,w
   999  004E  00F3               	movwf	??_initOsc
  1000  004F  01F4               	clrf	??_initOsc+1
  1001                           
  1002                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1003                           ; Switch size 1, requested type "simple"
  1004                           ; Number of cases is 1, Range of values is 0 to 0
  1005                           ; switch strategies available:
  1006                           ; Name         Instructions Cycles
  1007                           ; simple_byte            4     3 (average)
  1008                           ; direct_byte           11     8 (fixed)
  1009                           ; jumptable            260     6 (fixed)
  1010                           ;	Chosen strategy is simple_byte
  1011  0050  0874               	movf	??_initOsc+1,w
  1012  0051  3A00               	xorlw	0	; case 0
  1013  0052  1903               	skipnz
  1014  0053  2855               	goto	l897
  1015  0054  2847               	goto	l92
  1016  0055                     l897:
  1017                           
  1018                           ; Switch size 1, requested type "simple"
  1019                           ; Number of cases is 8, Range of values is 0 to 7
  1020                           ; switch strategies available:
  1021                           ; Name         Instructions Cycles
  1022                           ; simple_byte           25    13 (average)
  1023                           ; direct_byte           32     8 (fixed)
  1024                           ; jumptable            260     6 (fixed)
  1025                           ;	Chosen strategy is simple_byte
  1026  0055  0873               	movf	??_initOsc,w
  1027  0056  3A00               	xorlw	0	; case 0
  1028  0057  1903               	skipnz
  1029  0058  2817               	goto	l83
  1030  0059  3A01               	xorlw	1	; case 1
  1031  005A  1903               	skipnz
  1032  005B  281D               	goto	l85
  1033  005C  3A03               	xorlw	3	; case 2
  1034  005D  1903               	skipnz
  1035  005E  2823               	goto	l86
  1036  005F  3A01               	xorlw	1	; case 3
  1037  0060  1903               	skipnz
  1038  0061  2829               	goto	l87
  1039  0062  3A07               	xorlw	7	; case 4
  1040  0063  1903               	skipnz
  1041  0064  282F               	goto	l88
  1042  0065  3A01               	xorlw	1	; case 5
  1043  0066  1903               	skipnz
  1044  0067  2835               	goto	l89
  1045  0068  3A03               	xorlw	3	; case 6
  1046  0069  1903               	skipnz
  1047  006A  283B               	goto	l90
  1048  006B  3A01               	xorlw	1	; case 7
  1049  006C  1903               	skipnz
  1050  006D  2841               	goto	l91
  1051  006E  2847               	goto	l92
  1052  006F                     l84:
  1053                           
  1054                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1055  006F  140F               	bsf	15,0	;volatile
  1056  0070                     l93:
  1057  0070  0008               	return
  1058  0071                     __end_of_initOsc:
  1059                           
  1060                           	psect	text4
  1061  00EF                     __ptext4:	
  1062 ;; *************** function _Config_INTERRUPT *****************
  1063 ;; Defined at:
  1064 ;;		line 118 in file "main_ADC.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		None
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1078 ;;      Params:         0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0
  1081 ;;      Totals:         0       0       0       0       0
  1082 ;;Total ram usage:        0 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    3
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_setup
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           
  1093                           ;psect for function _Config_INTERRUPT
  1094  00EF                     _Config_INTERRUPT:
  1095  00EF                     l729:	
  1096                           ;incstack = 0
  1097                           ; Regs used in _Config_INTERRUPT: []
  1098                           
  1099                           
  1100                           ;main_ADC.c: 119:     INTCONbits.GIE = 1;
  1101  00EF  178B               	bsf	11,7	;volatile
  1102                           
  1103                           ;main_ADC.c: 120:     INTCONbits.PEIE = 1;
  1104  00F0  170B               	bsf	11,6	;volatile
  1105                           
  1106                           ;main_ADC.c: 121:     PIR1bits.SSPIF = 0;
  1107  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1108  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1109  00F3  118C               	bcf	12,3	;volatile
  1110                           
  1111                           ;main_ADC.c: 122:     PIE1bits.SSPIE = 1;
  1112  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  1113  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  1114  00F6  158C               	bsf	12,3	;volatile
  1115  00F7                     l77:
  1116  00F7  0008               	return
  1117  00F8                     __end_of_Config_INTERRUPT:
  1118                           
  1119                           	psect	text5
  1120  00A1                     __ptext5:	
  1121 ;; *************** function _ISR *****************
  1122 ;; Defined at:
  1123 ;;		line 61 in file "main_ADC.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2, status,0, pclath, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0
  1139 ;;      Temps:          2       0       0       0       0
  1140 ;;      Totals:         2       0       0       0       0
  1141 ;;Total ram usage:        2 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    2
  1144 ;; This function calls:
  1145 ;;		_spiRead
  1146 ;;		_spiWrite
  1147 ;; This function is called by:
  1148 ;;		Interrupt level 1
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           
  1153                           ;psect for function _ISR
  1154  00A1                     _ISR:
  1155  00A1                     i1l785:
  1156                           
  1157                           ;main_ADC.c: 62:     if(SSPIF == 1){
  1158  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1159  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1160  00A3  1D8C               	btfss	12,3	;volatile
  1161  00A4  28A6               	goto	u3_21
  1162  00A5  28A7               	goto	u3_20
  1163  00A6                     u3_21:
  1164  00A6  28B8               	goto	i1l60
  1165  00A7                     u3_20:
  1166  00A7                     i1l787:
  1167                           
  1168                           ;main_ADC.c: 63:         PORTD = spiRead();
  1169  00A7  120A  118A  20F8  120A  118A  	fcall	_spiRead
  1170  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1171  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1172  00AE  0088               	movwf	8	;volatile
  1173                           
  1174                           ;main_ADC.c: 64:         spiWrite(PORTB);
  1175  00AF  0806               	movf	6,w	;volatile
  1176  00B0  120A  118A  2108  120A  118A  	fcall	_spiWrite
  1177  00B5                     i1l789:
  1178                           
  1179                           ;main_ADC.c: 65:         SSPIF = 0;
  1180  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1181  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1182  00B7  118C               	bcf	12,3	;volatile
  1183  00B8                     i1l60:
  1184  00B8  0872               	movf	??_ISR+1,w
  1185  00B9  008A               	movwf	10
  1186  00BA  0E71               	swapf	??_ISR,w
  1187  00BB  0083               	movwf	3
  1188  00BC  0EFE               	swapf	btemp,f
  1189  00BD  0E7E               	swapf	btemp,w
  1190  00BE  0009               	retfie
  1191  00BF                     __end_of_ISR:
  1192                           
  1193                           	psect	intentry
  1194  0004                     __pintentry:	
  1195                           ;incstack = 0
  1196                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1197                           
  1198  0004                     interrupt_function:
  1199  007E                     saved_w	set	btemp
  1200  0004  00FE               	movwf	btemp
  1201  0005  0E03               	swapf	3,w
  1202  0006  00F1               	movwf	??_ISR
  1203  0007  080A               	movf	10,w
  1204  0008  00F2               	movwf	??_ISR+1
  1205  0009  120A  118A  28A1   	ljmp	_ISR
  1206                           
  1207                           	psect	text6
  1208  0108                     __ptext6:	
  1209 ;; *************** function _spiWrite *****************
  1210 ;; Defined at:
  1211 ;;		line 36 in file "SPI.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  dat             1    wreg     unsigned char 
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;  dat             1    0[COMMON] unsigned char 
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1225 ;;      Params:         0       0       0       0       0
  1226 ;;      Locals:         1       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0
  1228 ;;      Totals:         1       0       0       0       0
  1229 ;;Total ram usage:        1 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; This function calls:
  1232 ;;		Nothing
  1233 ;; This function is called by:
  1234 ;;		_ISR
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function _spiWrite
  1240  0108                     _spiWrite:
  1241                           
  1242                           ;incstack = 0
  1243                           ; Regs used in _spiWrite: [wreg]
  1244                           ;spiWrite@dat stored from wreg
  1245  0108  00F0               	movwf	spiWrite@dat
  1246  0109                     i1l749:
  1247                           
  1248                           ;SPI.c: 36: void spiWrite(char dat);SPI.c: 37: {;SPI.c: 38:     SSPBUF = dat;
  1249  0109  0870               	movf	spiWrite@dat,w
  1250  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1251  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1252  010C  0093               	movwf	19	;volatile
  1253  010D                     i1l119:
  1254  010D  0008               	return
  1255  010E                     __end_of_spiWrite:
  1256                           
  1257                           	psect	text7
  1258  00F8                     __ptext7:	
  1259 ;; *************** function _spiRead *****************
  1260 ;; Defined at:
  1261 ;;		line 49 in file "SPI.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      unsigned char 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, status,0, pclath, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1275 ;;      Params:         0       0       0       0       0
  1276 ;;      Locals:         0       0       0       0       0
  1277 ;;      Temps:          0       0       0       0       0
  1278 ;;      Totals:         0       0       0       0       0
  1279 ;;Total ram usage:        0 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; Hardware stack levels required when called:    1
  1282 ;; This function calls:
  1283 ;;		_spiReceiveWait
  1284 ;; This function is called by:
  1285 ;;		_ISR
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           
  1290                           ;psect for function _spiRead
  1291  00F8                     _spiRead:
  1292  00F8                     i1l743:	
  1293                           ;incstack = 0
  1294                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1295                           
  1296                           
  1297                           ;SPI.c: 51:     spiReceiveWait();
  1298  00F8  120A  118A  2101  120A  118A  	fcall	_spiReceiveWait
  1299  00FD                     i1l745:
  1300                           
  1301                           ;SPI.c: 52:     return(SSPBUF);
  1302  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1303  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1304  00FF  0813               	movf	19,w	;volatile
  1305  0100                     i1l127:
  1306  0100  0008               	return
  1307  0101                     __end_of_spiRead:
  1308                           
  1309                           	psect	text8
  1310  0101                     __ptext8:	
  1311 ;; *************** function _spiReceiveWait *****************
  1312 ;; Defined at:
  1313 ;;		line 31 in file "SPI.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		None
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0
  1330 ;;      Totals:         0       0       0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_spiRead
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           
  1341                           ;psect for function _spiReceiveWait
  1342  0101                     _spiReceiveWait:
  1343  0101                     i1l741:	
  1344                           ;incstack = 0
  1345                           ; Regs used in _spiReceiveWait: []
  1346                           
  1347  0101                     i1l113:	
  1348                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
  1349                           
  1350  0101  1683               	bsf	3,5	;RP0=1, select bank1
  1351  0102  1303               	bcf	3,6	;RP1=0, select bank1
  1352  0103  1C14               	btfss	20,0	;volatile
  1353  0104  2906               	goto	u2_21
  1354  0105  2907               	goto	u2_20
  1355  0106                     u2_21:
  1356  0106  2901               	goto	i1l113
  1357  0107                     u2_20:
  1358  0107                     i1l116:
  1359  0107  0008               	return
  1360  0108                     __end_of_spiReceiveWait:
  1361  007E                     btemp	set	126	;btemp
  1362  007E                     wtemp0	set	126
  1363                           
  1364                           	psect	config
  1365                           
  1366                           ;Config register CONFIG1 @ 0x2007
  1367                           ;	Oscillator Selection bits
  1368                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1369                           ;	Watchdog Timer Enable bit
  1370                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1371                           ;	Power-up Timer Enable bit
  1372                           ;	PWRTE = OFF, PWRT disabled
  1373                           ;	RE3/MCLR pin function select bit
  1374                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1375                           ;	Code Protection bit
  1376                           ;	CP = OFF, Program memory code protection is disabled
  1377                           ;	Data Code Protection bit
  1378                           ;	CPD = OFF, Data memory code protection is disabled
  1379                           ;	Brown Out Reset Selection bits
  1380                           ;	BOREN = OFF, BOR disabled
  1381                           ;	Internal External Switchover bit
  1382                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1383                           ;	Fail-Safe Clock Monitor Enabled bit
  1384                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1385                           ;	Low Voltage Programming Enable bit
  1386                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1387                           ;	In-Circuit Debugger Mode bit
  1388                           ;	DEBUG = 0x1, unprogrammed default
  1389  2007                     	org	8199
  1390  2007  20D6               	dw	8406
  1391                           
  1392                           ;Config register CONFIG2 @ 0x2008
  1393                           ;	Brown-out Reset Selection bit
  1394                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1395                           ;	Flash Program Memory Self Write Enable bits
  1396                           ;	WRT = OFF, Write protection off
  1397  2008                     	org	8200
  1398  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              7 COMMON     2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     375
                   _Config_INTERRUPT
                            _initOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _Config_INTERRUPT
     _initOsc
     _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 18 12:17:28 2021

              _SSPSTATbits 0094                         l90 003B                         l74 00A0  
                       l91 0041                         l83 0017                         l92 0047  
                       l84 006F                         l77 00F7                         l93 0070  
                       l85 001D                         l86 0023                         l87 0029  
                       l88 002F                         l89 0035                         u50 00E1  
                       u51 00E0                         u60 00D5                         u61 00D4  
                      l110 00EE                        l109 00E9                        l723 004D  
                      l719 0016                        l831 00E5                        l729 00EF  
                      l833 00E8                        l825 00DA                        l841 007C  
                      l827 00E1                        l851 0084                        l843 0080  
                      l835 0071                        l829 00E3                        l861 008B  
                      l853 0087                        l845 0081                        l837 0077  
                      l863 008E                        l855 0088                        l847 0082  
                      l839 007B                        l871 00C4                        l865 0092  
                      l857 0089                        l849 0083                        l873 00C8  
                      l867 0097                        l859 008A                        l875 00D1  
                      l869 00BF                        l897 0055                        _ISR 00A1  
                     ?_ISR 0070                       i1l60 00B8                       u2_20 0107  
                     u2_21 0106                       u3_20 00A7                       u3_21 00A6  
                     _main 00BF                       btemp 007E   __end_of_Config_INTERRUPT 00F8  
                     start 000C                      ??_ISR 0071                      ?_main 0070  
                    _ANSEL 0188                      i1l113 0101                      i1l116 0107  
                    i1l127 0100                      i1l119 010D                      i1l741 0101  
                    i1l743 00F8                      i1l745 00FD                      i1l749 0109  
                    i1l785 00A1                      i1l787 00A7                      i1l789 00B5  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _SSPIF 0063            __end_of_initOsc 0071  
                    _setup 0071                      pclath 000A            __end_of_spiInit 00EF  
          __end_of_spiRead 0101                      status 0003                      wtemp0 007E  
          __initialization 000F               __end_of_main 00D9                     ??_main 0077  
                   _ADCON0 001F                     _ADCON1 009F                     _ADRESH 001E  
              initOsc@IRCF 0075                     ?_setup 0070                     _ANSELH 0189  
                   _TRISC3 043B                     _TRISC5 043D                     _SSPCON 0014  
                   _SSPBUF 0013                  ??_initOsc 0073                     saved_w 007E  
         __end_of_spiWrite 010E                  ??_spiInit 0076                  ??_spiRead 0070  
  __end_of__initialization 0011             __pcstackCOMMON 0070              __end_of_setup 00A1  
                  ??_setup 0077          ?_Config_INTERRUPT 0070                 __pmaintext 00BF  
       ??_Config_INTERRUPT 0073                 __pintentry 0004    __size_of_spiReceiveWait 0007  
                  _ADC_val 0079                    _SSPSTAT 0094                  ?_spiWrite 0070  
                  __ptext1 0071                    __ptext2 00D9                    __ptext3 0015  
                  __ptext4 00EF                    __ptext5 00A1                    __ptext6 0108  
                  __ptext7 00F8                    __ptext8 0101               __size_of_ISR 001E  
                  _initOsc 0015                    _spiInit 00D9                    _spiRead 00F8  
     end_of_initialization 0011                 ??_spiWrite 0070                spiWrite@dat 0070  
           _spiReceiveWait 0101        start_initialization 000F                __end_of_ISR 00BF  
   __end_of_spiReceiveWait 0108  __size_of_Config_INTERRUPT 0009                __pbssCOMMON 0079  
                ___latbits 0002            ?_spiReceiveWait 0070          __size_of_spiWrite 0006  
                 ?_initOsc 0070                   ?_spiInit 0073                   ?_spiRead 0070  
           __size_of_setup 0030       spiInit@sTransmitEdge 0075          interrupt_function 0004  
                 _PIE1bits 008C         spiInit@sDataSample 0073                   _PIR1bits 000C  
               _ADCON0bits 001F           _Config_INTERRUPT 00EF           __size_of_initOsc 005C  
         __size_of_spiInit 0016           __size_of_spiRead 0009              __size_of_main 001A  
                 _spiWrite 0108               spiInit@sType 0076          spiInit@sClockIdle 0074  
               _INTCONbits 000B                   intlevel1 0000           ??_spiReceiveWait 0070  
               _OSCCONbits 008F  
