

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 11:52:24 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0013                     _SSPBUF	set	19
   365  0014                     _SSPCON	set	20
   366  000C                     _PIR1bits	set	12
   367  000B                     _INTCONbits	set	11
   368  001F                     _ADCON0	set	31
   369  0009                     _PORTE	set	9
   370  0007                     _PORTC	set	7
   371  0006                     _PORTB	set	6
   372  0005                     _PORTA	set	5
   373  0008                     _PORTD	set	8
   374  001E                     _ADRESH	set	30
   375  001F                     _ADCON0bits	set	31
   376  0063                     _SSPIF	set	99
   377  0094                     _SSPSTATbits	set	148
   378  0094                     _SSPSTAT	set	148
   379  008F                     _OSCCONbits	set	143
   380  008C                     _PIE1bits	set	140
   381  0085                     _TRISAbits	set	133
   382  009F                     _ADCON1	set	159
   383  0089                     _TRISE	set	137
   384  0088                     _TRISD	set	136
   385  0087                     _TRISC	set	135
   386  0086                     _TRISB	set	134
   387  0085                     _TRISA	set	133
   388  043B                     _TRISC3	set	1083
   389  043D                     _TRISC5	set	1085
   390  040F                     _nRBPU	set	1039
   391  0189                     _ANSELH	set	393
   392  0188                     _ANSEL	set	392
   393                           
   394                           	psect	cinit
   395  000F                     start_initialization:	
   396                           ; #config settings
   397                           
   398  000F                     __initialization:
   399                           
   400                           ; Clear objects allocated to COMMON
   401  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   402  0010                     end_of_initialization:	
   403                           ;End of C runtime variable initialization code
   404                           
   405  0010                     __end_of__initialization:
   406  0010  0183               	clrf	3
   407  0011  120A  118A  28A5   	ljmp	_main	;jump to C main() function
   408                           
   409                           	psect	bssCOMMON
   410  0079                     __pbssCOMMON:
   411  0079                     _ADC_val:
   412  0079                     	ds	1
   413                           
   414                           	psect	cstackCOMMON
   415  0070                     __pcstackCOMMON:
   416  0070                     ?_spiWrite:
   417  0070                     ??_spiWrite:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_setup:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_initOsc:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_Config_INTERRUPT:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_ISR:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_main:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     spiWrite@dat:	
   436                           ; 1 bytes @ 0x0
   437                           
   438                           
   439                           ; 1 bytes @ 0x0
   440  0070                     	ds	1
   441  0071                     ??_ISR:
   442                           
   443                           ; 1 bytes @ 0x1
   444  0071                     	ds	2
   445  0073                     ??_initOsc:
   446  0073                     ??_Config_INTERRUPT:	
   447                           ; 1 bytes @ 0x3
   448                           
   449  0073                     ?_spiInit:	
   450                           ; 1 bytes @ 0x3
   451                           
   452  0073                     spiInit@sDataSample:	
   453                           ; 1 bytes @ 0x3
   454                           
   455                           
   456                           ; 1 bytes @ 0x3
   457  0073                     	ds	1
   458  0074                     spiInit@sClockIdle:
   459                           
   460                           ; 1 bytes @ 0x4
   461  0074                     	ds	1
   462  0075                     initOsc@IRCF:
   463  0075                     spiInit@sTransmitEdge:	
   464                           ; 1 bytes @ 0x5
   465                           
   466                           
   467                           ; 1 bytes @ 0x5
   468  0075                     	ds	1
   469  0076                     ??_spiInit:
   470  0076                     spiInit@sType:	
   471                           ; 1 bytes @ 0x6
   472                           
   473                           
   474                           ; 1 bytes @ 0x6
   475  0076                     	ds	1
   476  0077                     ??_setup:
   477  0077                     ??_main:	
   478                           ; 1 bytes @ 0x7
   479                           
   480                           
   481                           ; 1 bytes @ 0x7
   482  0077                     	ds	2
   483                           
   484                           	psect	maintext
   485  00A5                     __pmaintext:	
   486 ;;
   487 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   488 ;;
   489 ;; *************** function _main *****************
   490 ;; Defined at:
   491 ;;		line 71 in file "main_ADC.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : B00/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0
   507 ;;      Temps:          2       0       0       0       0
   508 ;;      Totals:         2       0       0       0       0
   509 ;;Total ram usage:        2 bytes
   510 ;; Hardware stack levels required when called:    4
   511 ;; This function calls:
   512 ;;		_setup
   513 ;; This function is called by:
   514 ;;		Startup code after reset
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           
   519                           ;psect for function _main
   520  00A5                     _main:
   521  00A5                     l883:	
   522                           ;incstack = 0
   523                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   524                           
   525                           
   526                           ;main_ADC.c: 72:     setup();
   527  00A5  120A  118A  2070  120A  118A  	fcall	_setup
   528  00AA                     l885:
   529                           
   530                           ;main_ADC.c: 83:          _delay((unsigned long)((2)*(8000000/4000.0)));
   531  00AA  3006               	movlw	6
   532  00AB  00F8               	movwf	??_main+1
   533  00AC  3030               	movlw	48
   534  00AD  00F7               	movwf	??_main
   535  00AE                     u77:
   536  00AE  0BF7               	decfsz	??_main,f
   537  00AF  28AE               	goto	u77
   538  00B0  0BF8               	decfsz	??_main+1,f
   539  00B1  28AE               	goto	u77
   540  00B2  0000               	nop
   541  00B3                     l887:
   542                           
   543                           ;main_ADC.c: 84:         ADCON0bits.GO = 1;
   544  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   545  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   546  00B5  149F               	bsf	31,1	;volatile
   547                           
   548                           ;main_ADC.c: 85:         while (ADCON0bits.GO != 0) {
   549  00B6  28BD               	goto	l891
   550  00B7                     l889:
   551                           
   552                           ;main_ADC.c: 86:         ADC_val = ADRESH;
   553  00B7  081E               	movf	30,w	;volatile
   554  00B8  00F7               	movwf	??_main
   555  00B9  0877               	movf	??_main,w
   556  00BA  00F9               	movwf	_ADC_val
   557                           
   558                           ;main_ADC.c: 87:         PORTD = ADC_val;
   559  00BB  0879               	movf	_ADC_val,w
   560  00BC  0088               	movwf	8	;volatile
   561  00BD                     l891:
   562                           
   563                           ;main_ADC.c: 85:         while (ADCON0bits.GO != 0) {
   564  00BD  189F               	btfsc	31,1	;volatile
   565  00BE  28C0               	goto	u61
   566  00BF  28C1               	goto	u60
   567  00C0                     u61:
   568  00C0  28B7               	goto	l889
   569  00C1                     u60:
   570  00C1  28AA               	goto	l885
   571  00C2  120A  118A  280C   	ljmp	start
   572  00C5                     __end_of_main:
   573                           
   574                           	psect	text1
   575  0070                     __ptext1:	
   576 ;; *************** function _setup *****************
   577 ;; Defined at:
   578 ;;		line 97 in file "main_ADC.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   592 ;;      Params:         0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0
   595 ;;      Totals:         0       0       0       0       0
   596 ;;Total ram usage:        0 bytes
   597 ;; Hardware stack levels used:    1
   598 ;; Hardware stack levels required when called:    3
   599 ;; This function calls:
   600 ;;		_Config_INTERRUPT
   601 ;;		_initOsc
   602 ;;		_spiInit
   603 ;; This function is called by:
   604 ;;		_main
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           
   609                           ;psect for function _setup
   610  0070                     _setup:
   611  0070                     l845:	
   612                           ;incstack = 0
   613                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   614                           
   615                           
   616                           ;main_ADC.c: 98:     initOsc(0b00000111);
   617  0070  3007               	movlw	7
   618  0071  120A  118A  2014  120A  118A  	fcall	_initOsc
   619  0076                     l847:
   620                           
   621                           ;main_ADC.c: 99:     nRBPU = 0;
   622  0076  1683               	bsf	3,5	;RP0=1, select bank1
   623  0077  1303               	bcf	3,6	;RP1=0, select bank1
   624  0078  1381               	bcf	1,7	;volatile
   625  0079                     l849:
   626                           
   627                           ;main_ADC.c: 101:     ANSEL = 0b00000001;
   628  0079  3001               	movlw	1
   629  007A  1683               	bsf	3,5	;RP0=1, select bank3
   630  007B  1703               	bsf	3,6	;RP1=1, select bank3
   631  007C  0088               	movwf	8	;volatile
   632  007D                     l851:
   633                           
   634                           ;main_ADC.c: 102:     ANSELH = 0;
   635  007D  0189               	clrf	9	;volatile
   636  007E                     l853:
   637                           
   638                           ;main_ADC.c: 104:     TRISA = 0b00000001;
   639  007E  3001               	movlw	1
   640  007F  1683               	bsf	3,5	;RP0=1, select bank1
   641  0080  1303               	bcf	3,6	;RP1=0, select bank1
   642  0081  0085               	movwf	5	;volatile
   643  0082                     l855:
   644                           
   645                           ;main_ADC.c: 105:     TRISB = 0;
   646  0082  0186               	clrf	6	;volatile
   647  0083                     l857:
   648                           
   649                           ;main_ADC.c: 106:     TRISC = 0;
   650  0083  0187               	clrf	7	;volatile
   651  0084                     l859:
   652                           
   653                           ;main_ADC.c: 107:     TRISD = 0;
   654  0084  0188               	clrf	8	;volatile
   655  0085                     l861:
   656                           
   657                           ;main_ADC.c: 108:     TRISE = 0;
   658  0085  0189               	clrf	9	;volatile
   659  0086                     l863:
   660                           
   661                           ;main_ADC.c: 110:     PORTA = 0;
   662  0086  1283               	bcf	3,5	;RP0=0, select bank0
   663  0087  1303               	bcf	3,6	;RP1=0, select bank0
   664  0088  0185               	clrf	5	;volatile
   665  0089                     l865:
   666                           
   667                           ;main_ADC.c: 111:     PORTB = 0;
   668  0089  0186               	clrf	6	;volatile
   669  008A                     l867:
   670                           
   671                           ;main_ADC.c: 112:     PORTC = 0;
   672  008A  0187               	clrf	7	;volatile
   673  008B                     l869:
   674                           
   675                           ;main_ADC.c: 113:     PORTD = 0;
   676  008B  0188               	clrf	8	;volatile
   677  008C                     l871:
   678                           
   679                           ;main_ADC.c: 114:     PORTE = 0;
   680  008C  0189               	clrf	9	;volatile
   681  008D                     l873:
   682                           
   683                           ;main_ADC.c: 116:     ADCON0 = 0b01000001;
   684  008D  3041               	movlw	65
   685  008E  009F               	movwf	31	;volatile
   686  008F                     l875:
   687                           
   688                           ;main_ADC.c: 117:     ADCON1 = 0x07;
   689  008F  3007               	movlw	7
   690  0090  1683               	bsf	3,5	;RP0=1, select bank1
   691  0091  1303               	bcf	3,6	;RP1=0, select bank1
   692  0092  009F               	movwf	31	;volatile
   693  0093                     l877:
   694                           
   695                           ;main_ADC.c: 118:     Config_INTERRUPT();
   696  0093  120A  118A  20F1  120A  118A  	fcall	_Config_INTERRUPT
   697  0098                     l879:
   698                           
   699                           ;main_ADC.c: 119:     TRISAbits.TRISA5 = 1;
   700  0098  1683               	bsf	3,5	;RP0=1, select bank1
   701  0099  1303               	bcf	3,6	;RP1=0, select bank1
   702  009A  1685               	bsf	5,5	;volatile
   703  009B                     l881:
   704                           
   705                           ;main_ADC.c: 120:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
   706  009B  01F3               	clrf	spiInit@sDataSample
   707  009C  01F4               	clrf	spiInit@sClockIdle
   708  009D  01F5               	clrf	spiInit@sTransmitEdge
   709  009E  3024               	movlw	36
   710  009F  120A  118A  20C5  120A  118A  	fcall	_spiInit
   711  00A4                     l78:
   712  00A4  0008               	return
   713  00A5                     __end_of_setup:
   714                           
   715                           	psect	text2
   716  00C5                     __ptext2:	
   717 ;; *************** function _spiInit *****************
   718 ;; Defined at:
   719 ;;		line 14 in file "SPI.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  sType           1    wreg     enum E1264
   722 ;;  sDataSample     1    3[COMMON] enum E1272
   723 ;;  sClockIdle      1    4[COMMON] enum E1276
   724 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  sType           1    6[COMMON] enum E1264
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         3       0       0       0       0
   737 ;;      Locals:         1       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0
   739 ;;      Totals:         4       0       0       0       0
   740 ;;Total ram usage:        4 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    2
   743 ;; This function calls:
   744 ;;		Nothing
   745 ;; This function is called by:
   746 ;;		_setup
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function _spiInit
   752  00C5                     _spiInit:
   753                           
   754                           ;incstack = 0
   755                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   756                           ;spiInit@sType stored from wreg
   757  00C5  00F6               	movwf	spiInit@sType
   758  00C6                     l835:
   759                           
   760                           ;SPI.c: 14: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 15: {;SPI.c: 16:     TRISC5 = 0;
   761  00C6  1683               	bsf	3,5	;RP0=1, select bank1
   762  00C7  1303               	bcf	3,6	;RP1=0, select bank1
   763  00C8  1287               	bcf	7,5	;volatile
   764                           
   765                           ;SPI.c: 17:     if(sType & 0b00000100)
   766  00C9  1D76               	btfss	spiInit@sType,2
   767  00CA  28CC               	goto	u51
   768  00CB  28CD               	goto	u50
   769  00CC                     u51:
   770  00CC  28D1               	goto	l841
   771  00CD                     u50:
   772  00CD                     l837:
   773                           
   774                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sTransmitEdge;
   775  00CD  0875               	movf	spiInit@sTransmitEdge,w
   776  00CE  0094               	movwf	20	;volatile
   777  00CF                     l839:
   778                           
   779                           ;SPI.c: 20:         TRISC3 = 1;
   780  00CF  1587               	bsf	7,3	;volatile
   781                           
   782                           ;SPI.c: 21:     }
   783  00D0  28D5               	goto	l113
   784  00D1                     l841:
   785                           
   786                           ;SPI.c: 23:     {;SPI.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
   787  00D1  0873               	movf	spiInit@sDataSample,w
   788  00D2  0475               	iorwf	spiInit@sTransmitEdge,w
   789  00D3  0094               	movwf	20	;volatile
   790  00D4                     l843:
   791                           
   792                           ;SPI.c: 25:         TRISC3 = 0;
   793  00D4  1187               	bcf	7,3	;volatile
   794  00D5                     l113:	
   795                           ;SPI.c: 26:     }
   796                           
   797                           
   798                           ;SPI.c: 28:     SSPCON = sType | sClockIdle;
   799  00D5  0876               	movf	spiInit@sType,w
   800  00D6  0474               	iorwf	spiInit@sClockIdle,w
   801  00D7  1283               	bcf	3,5	;RP0=0, select bank0
   802  00D8  1303               	bcf	3,6	;RP1=0, select bank0
   803  00D9  0094               	movwf	20	;volatile
   804  00DA                     l114:
   805  00DA  0008               	return
   806  00DB                     __end_of_spiInit:
   807                           
   808                           	psect	text3
   809  0014                     __ptext3:	
   810 ;; *************** function _initOsc *****************
   811 ;; Defined at:
   812 ;;		line 3 in file "Oscilador.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  IRCF            1    wreg     unsigned char 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  IRCF            1    5[COMMON] unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         1       0       0       0       0
   828 ;;      Temps:          2       0       0       0       0
   829 ;;      Totals:         3       0       0       0       0
   830 ;;Total ram usage:        3 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    2
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_setup
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           
   841                           ;psect for function _initOsc
   842  0014                     _initOsc:
   843                           
   844                           ;incstack = 0
   845                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   846                           ;initOsc@IRCF stored from wreg
   847  0014  00F5               	movwf	initOsc@IRCF
   848  0015                     l723:
   849                           
   850                           ;Oscilador.c: 5:     switch(IRCF){
   851  0015  284C               	goto	l727
   852  0016                     l87:	
   853                           ;Oscilador.c: 6:         case 0:
   854                           
   855                           
   856                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   857  0016  1683               	bsf	3,5	;RP0=1, select bank1
   858  0017  1303               	bcf	3,6	;RP1=0, select bank1
   859  0018  130F               	bcf	15,6	;volatile
   860                           
   861                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   862  0019  128F               	bcf	15,5	;volatile
   863                           
   864                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   865  001A  120F               	bcf	15,4	;volatile
   866                           
   867                           ;Oscilador.c: 10:             break;
   868  001B  286E               	goto	l88
   869  001C                     l89:	
   870                           ;Oscilador.c: 11:          case 1:
   871                           
   872                           
   873                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   874  001C  1683               	bsf	3,5	;RP0=1, select bank1
   875  001D  1303               	bcf	3,6	;RP1=0, select bank1
   876  001E  130F               	bcf	15,6	;volatile
   877                           
   878                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   879  001F  128F               	bcf	15,5	;volatile
   880                           
   881                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   882  0020  160F               	bsf	15,4	;volatile
   883                           
   884                           ;Oscilador.c: 15:             break;
   885  0021  286E               	goto	l88
   886  0022                     l90:	
   887                           ;Oscilador.c: 16:         case 2:
   888                           
   889                           
   890                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   891  0022  1683               	bsf	3,5	;RP0=1, select bank1
   892  0023  1303               	bcf	3,6	;RP1=0, select bank1
   893  0024  130F               	bcf	15,6	;volatile
   894                           
   895                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   896  0025  168F               	bsf	15,5	;volatile
   897                           
   898                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   899  0026  120F               	bcf	15,4	;volatile
   900                           
   901                           ;Oscilador.c: 20:             break;
   902  0027  286E               	goto	l88
   903  0028                     l91:	
   904                           ;Oscilador.c: 21:         case 3:
   905                           
   906                           
   907                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   908  0028  1683               	bsf	3,5	;RP0=1, select bank1
   909  0029  1303               	bcf	3,6	;RP1=0, select bank1
   910  002A  130F               	bcf	15,6	;volatile
   911                           
   912                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   913  002B  168F               	bsf	15,5	;volatile
   914                           
   915                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   916  002C  160F               	bsf	15,4	;volatile
   917                           
   918                           ;Oscilador.c: 25:             break;
   919  002D  286E               	goto	l88
   920  002E                     l92:	
   921                           ;Oscilador.c: 26:         case 4:
   922                           
   923                           
   924                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   925  002E  1683               	bsf	3,5	;RP0=1, select bank1
   926  002F  1303               	bcf	3,6	;RP1=0, select bank1
   927  0030  170F               	bsf	15,6	;volatile
   928                           
   929                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   930  0031  128F               	bcf	15,5	;volatile
   931                           
   932                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   933  0032  120F               	bcf	15,4	;volatile
   934                           
   935                           ;Oscilador.c: 30:             break;
   936  0033  286E               	goto	l88
   937  0034                     l93:	
   938                           ;Oscilador.c: 31:         case 5:
   939                           
   940                           
   941                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   942  0034  1683               	bsf	3,5	;RP0=1, select bank1
   943  0035  1303               	bcf	3,6	;RP1=0, select bank1
   944  0036  170F               	bsf	15,6	;volatile
   945                           
   946                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
   947  0037  128F               	bcf	15,5	;volatile
   948                           
   949                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
   950  0038  160F               	bsf	15,4	;volatile
   951                           
   952                           ;Oscilador.c: 35:             break;
   953  0039  286E               	goto	l88
   954  003A                     l94:	
   955                           ;Oscilador.c: 36:         case 6:
   956                           
   957                           
   958                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
   959  003A  1683               	bsf	3,5	;RP0=1, select bank1
   960  003B  1303               	bcf	3,6	;RP1=0, select bank1
   961  003C  170F               	bsf	15,6	;volatile
   962                           
   963                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
   964  003D  168F               	bsf	15,5	;volatile
   965                           
   966                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
   967  003E  120F               	bcf	15,4	;volatile
   968                           
   969                           ;Oscilador.c: 40:             break;
   970  003F  286E               	goto	l88
   971  0040                     l95:	
   972                           ;Oscilador.c: 41:         case 7:
   973                           
   974                           
   975                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
   976  0040  1683               	bsf	3,5	;RP0=1, select bank1
   977  0041  1303               	bcf	3,6	;RP1=0, select bank1
   978  0042  170F               	bsf	15,6	;volatile
   979                           
   980                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
   981  0043  168F               	bsf	15,5	;volatile
   982                           
   983                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
   984  0044  160F               	bsf	15,4	;volatile
   985                           
   986                           ;Oscilador.c: 45:             break;
   987  0045  286E               	goto	l88
   988  0046                     l96:	
   989                           ;Oscilador.c: 46:         default:
   990                           
   991                           
   992                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
   993  0046  1683               	bsf	3,5	;RP0=1, select bank1
   994  0047  1303               	bcf	3,6	;RP1=0, select bank1
   995  0048  170F               	bsf	15,6	;volatile
   996                           
   997                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
   998  0049  168F               	bsf	15,5	;volatile
   999                           
  1000                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1001  004A  120F               	bcf	15,4	;volatile
  1002                           
  1003                           ;Oscilador.c: 50:             break;
  1004  004B  286E               	goto	l88
  1005  004C                     l727:
  1006  004C  0875               	movf	initOsc@IRCF,w
  1007  004D  00F3               	movwf	??_initOsc
  1008  004E  01F4               	clrf	??_initOsc+1
  1009                           
  1010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1011                           ; Switch size 1, requested type "simple"
  1012                           ; Number of cases is 1, Range of values is 0 to 0
  1013                           ; switch strategies available:
  1014                           ; Name         Instructions Cycles
  1015                           ; simple_byte            4     3 (average)
  1016                           ; direct_byte           11     8 (fixed)
  1017                           ; jumptable            260     6 (fixed)
  1018                           ;	Chosen strategy is simple_byte
  1019  004F  0874               	movf	??_initOsc+1,w
  1020  0050  3A00               	xorlw	0	; case 0
  1021  0051  1903               	skipnz
  1022  0052  2854               	goto	l913
  1023  0053  2846               	goto	l96
  1024  0054                     l913:
  1025                           
  1026                           ; Switch size 1, requested type "simple"
  1027                           ; Number of cases is 8, Range of values is 0 to 7
  1028                           ; switch strategies available:
  1029                           ; Name         Instructions Cycles
  1030                           ; simple_byte           25    13 (average)
  1031                           ; direct_byte           32     8 (fixed)
  1032                           ; jumptable            260     6 (fixed)
  1033                           ;	Chosen strategy is simple_byte
  1034  0054  0873               	movf	??_initOsc,w
  1035  0055  3A00               	xorlw	0	; case 0
  1036  0056  1903               	skipnz
  1037  0057  2816               	goto	l87
  1038  0058  3A01               	xorlw	1	; case 1
  1039  0059  1903               	skipnz
  1040  005A  281C               	goto	l89
  1041  005B  3A03               	xorlw	3	; case 2
  1042  005C  1903               	skipnz
  1043  005D  2822               	goto	l90
  1044  005E  3A01               	xorlw	1	; case 3
  1045  005F  1903               	skipnz
  1046  0060  2828               	goto	l91
  1047  0061  3A07               	xorlw	7	; case 4
  1048  0062  1903               	skipnz
  1049  0063  282E               	goto	l92
  1050  0064  3A01               	xorlw	1	; case 5
  1051  0065  1903               	skipnz
  1052  0066  2834               	goto	l93
  1053  0067  3A03               	xorlw	3	; case 6
  1054  0068  1903               	skipnz
  1055  0069  283A               	goto	l94
  1056  006A  3A01               	xorlw	1	; case 7
  1057  006B  1903               	skipnz
  1058  006C  2840               	goto	l95
  1059  006D  2846               	goto	l96
  1060  006E                     l88:
  1061                           
  1062                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1063  006E  140F               	bsf	15,0	;volatile
  1064  006F                     l97:
  1065  006F  0008               	return
  1066  0070                     __end_of_initOsc:
  1067                           
  1068                           	psect	text4
  1069  00F1                     __ptext4:	
  1070 ;; *************** function _Config_INTERRUPT *****************
  1071 ;; Defined at:
  1072 ;;		line 125 in file "main_ADC.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		None
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         0       0       0       0       0
  1087 ;;      Locals:         0       0       0       0       0
  1088 ;;      Temps:          0       0       0       0       0
  1089 ;;      Totals:         0       0       0       0       0
  1090 ;;Total ram usage:        0 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; Hardware stack levels required when called:    2
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_setup
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           
  1101                           ;psect for function _Config_INTERRUPT
  1102  00F1                     _Config_INTERRUPT:
  1103  00F1                     l733:	
  1104                           ;incstack = 0
  1105                           ; Regs used in _Config_INTERRUPT: []
  1106                           
  1107                           
  1108                           ;main_ADC.c: 126:     INTCONbits.GIE = 1;
  1109  00F1  178B               	bsf	11,7	;volatile
  1110                           
  1111                           ;main_ADC.c: 127:     INTCONbits.PEIE = 1;
  1112  00F2  170B               	bsf	11,6	;volatile
  1113                           
  1114                           ;main_ADC.c: 128:     PIR1bits.SSPIF = 0;
  1115  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1116  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1117  00F5  118C               	bcf	12,3	;volatile
  1118                           
  1119                           ;main_ADC.c: 129:     PIE1bits.SSPIE = 1;
  1120  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  1121  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  1122  00F8  158C               	bsf	12,3	;volatile
  1123  00F9                     l81:
  1124  00F9  0008               	return
  1125  00FA                     __end_of_Config_INTERRUPT:
  1126                           
  1127                           	psect	text5
  1128  00DB                     __ptext5:	
  1129 ;; *************** function _ISR *****************
  1130 ;; Defined at:
  1131 ;;		line 60 in file "main_ADC.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0, pclath, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0
  1147 ;;      Temps:          2       0       0       0       0
  1148 ;;      Totals:         2       0       0       0       0
  1149 ;;Total ram usage:        2 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    1
  1152 ;; This function calls:
  1153 ;;		_spiWrite
  1154 ;; This function is called by:
  1155 ;;		Interrupt level 1
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           
  1160                           ;psect for function _ISR
  1161  00DB                     _ISR:
  1162  00DB                     i1l787:
  1163                           
  1164                           ;main_ADC.c: 62:     if(SSPIF == 1){
  1165  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1166  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1167  00DD  1D8C               	btfss	12,3	;volatile
  1168  00DE  28E0               	goto	u3_21
  1169  00DF  28E1               	goto	u3_20
  1170  00E0                     u3_21:
  1171  00E0  28EA               	goto	i1l64
  1172  00E1                     u3_20:
  1173  00E1                     i1l789:
  1174                           
  1175                           ;main_ADC.c: 63:         spiWrite(ADC_val);
  1176  00E1  0879               	movf	_ADC_val,w
  1177  00E2  120A  118A  20FA  120A  118A  	fcall	_spiWrite
  1178  00E7                     i1l791:
  1179                           
  1180                           ;main_ADC.c: 64:         SSPIF = 0;
  1181  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1182  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  1183  00E9  118C               	bcf	12,3	;volatile
  1184  00EA                     i1l64:
  1185  00EA  0872               	movf	??_ISR+1,w
  1186  00EB  008A               	movwf	10
  1187  00EC  0E71               	swapf	??_ISR,w
  1188  00ED  0083               	movwf	3
  1189  00EE  0EFE               	swapf	btemp,f
  1190  00EF  0E7E               	swapf	btemp,w
  1191  00F0  0009               	retfie
  1192  00F1                     __end_of_ISR:
  1193                           
  1194                           	psect	intentry
  1195  0004                     __pintentry:	
  1196                           ;incstack = 0
  1197                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1198                           
  1199  0004                     interrupt_function:
  1200  007E                     saved_w	set	btemp
  1201  0004  00FE               	movwf	btemp
  1202  0005  0E03               	swapf	3,w
  1203  0006  00F1               	movwf	??_ISR
  1204  0007  080A               	movf	10,w
  1205  0008  00F2               	movwf	??_ISR+1
  1206  0009  120A  118A  28DB   	ljmp	_ISR
  1207                           
  1208                           	psect	text6
  1209  00FA                     __ptext6:	
  1210 ;; *************** function _spiWrite *****************
  1211 ;; Defined at:
  1212 ;;		line 36 in file "SPI.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  dat             1    wreg     unsigned char 
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;  dat             1    0[COMMON] unsigned char 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         1       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0
  1229 ;;      Totals:         1       0       0       0       0
  1230 ;;Total ram usage:        1 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_ISR
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           
  1240                           ;psect for function _spiWrite
  1241  00FA                     _spiWrite:
  1242                           
  1243                           ;incstack = 0
  1244                           ; Regs used in _spiWrite: [wreg]
  1245                           ;spiWrite@dat stored from wreg
  1246  00FA  00F0               	movwf	spiWrite@dat
  1247  00FB                     i1l745:
  1248                           
  1249                           ;SPI.c: 36: void spiWrite(char dat);SPI.c: 37: {;SPI.c: 38:     SSPBUF = dat;
  1250  00FB  0870               	movf	spiWrite@dat,w
  1251  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1252  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1253  00FE  0093               	movwf	19	;volatile
  1254  00FF                     i1l123:
  1255  00FF  0008               	return
  1256  0100                     __end_of_spiWrite:
  1257  007E                     btemp	set	126	;btemp
  1258  007E                     wtemp0	set	126
  1259                           
  1260                           	psect	config
  1261                           
  1262                           ;Config register CONFIG1 @ 0x2007
  1263                           ;	Oscillator Selection bits
  1264                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1265                           ;	Watchdog Timer Enable bit
  1266                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1267                           ;	Power-up Timer Enable bit
  1268                           ;	PWRTE = OFF, PWRT disabled
  1269                           ;	RE3/MCLR pin function select bit
  1270                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1271                           ;	Code Protection bit
  1272                           ;	CP = OFF, Program memory code protection is disabled
  1273                           ;	Data Code Protection bit
  1274                           ;	CPD = OFF, Data memory code protection is disabled
  1275                           ;	Brown Out Reset Selection bits
  1276                           ;	BOREN = OFF, BOR disabled
  1277                           ;	Internal External Switchover bit
  1278                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1279                           ;	Fail-Safe Clock Monitor Enabled bit
  1280                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1281                           ;	Low Voltage Programming Enable bit
  1282                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1283                           ;	In-Circuit Debugger Mode bit
  1284                           ;	DEBUG = 0x1, unprogrammed default
  1285  2007                     	org	8199
  1286  2007  20D6               	dw	8406
  1287                           
  1288                           ;Config register CONFIG2 @ 0x2008
  1289                           ;	Brown-out Reset Selection bit
  1290                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1291                           ;	Flash Program Memory Self Write Enable bits
  1292                           ;	WRT = OFF, Write protection off
  1293  2008                     	org	8200
  1294  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              7 COMMON     2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     375
                   _Config_INTERRUPT
                            _initOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _Config_INTERRUPT
     _initOsc
     _spiInit

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 11:52:24 2021

              _SSPSTATbits 0094                         l81 00F9                         l90 0022  
                       l91 0028                         l92 002E                         l93 0034  
                       l94 003A                         l78 00A4                         l95 0040  
                       l87 0016                         l96 0046                         l88 006E  
                       l97 006F                         l89 001C                         u50 00CD  
                       u51 00CC                         u60 00C1                         u61 00C0  
                       u77 00AE                        l113 00D5                        l114 00DA  
                      l723 0015                        l733 00F1                        l727 004C  
                      l913 0054                        l841 00D1                        l843 00D4  
                      l835 00C6                        l851 007D                        l837 00CD  
                      l861 0085                        l853 007E                        l845 0070  
                      l839 00CF                        l871 008C                        l863 0086  
                      l855 0082                        l847 0076                        l881 009B  
                      l873 008D                        l865 0089                        l857 0083  
                      l849 0079                        l875 008F                        l867 008A  
                      l859 0084                        l891 00BD                        l883 00A5  
                      l877 0093                        l869 008B                        l885 00AA  
                      l879 0098                        l887 00B3                        l889 00B7  
                      _ISR 00DB                       ?_ISR 0070                       i1l64 00EA  
                     u3_20 00E1                       u3_21 00E0                       _main 00A5  
                     btemp 007E   __end_of_Config_INTERRUPT 00FA                       start 000C  
                    ??_ISR 0071                      ?_main 0070                      _ANSEL 0188  
                    i1l123 00FF                      i1l745 00FB                      i1l791 00E7  
                    i1l787 00DB                      i1l789 00E1                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _SSPIF 0063                      _nRBPU 040F            __end_of_initOsc 0070  
                    _setup 0070                      pclath 000A            __end_of_spiInit 00DB  
                    status 0003                      wtemp0 007E            __initialization 000F  
             __end_of_main 00C5                     ??_main 0077                     _ADCON0 001F  
                   _ADCON1 009F                     _ADRESH 001E                initOsc@IRCF 0075  
                   ?_setup 0070                     _ANSELH 0189                     _TRISC3 043B  
                   _TRISC5 043D                     _SSPCON 0014                     _SSPBUF 0013  
                ??_initOsc 0073                     saved_w 007E           __end_of_spiWrite 0100  
                ??_spiInit 0076    __end_of__initialization 0010             __pcstackCOMMON 0070  
            __end_of_setup 00A5                    ??_setup 0077          ?_Config_INTERRUPT 0070  
               __pmaintext 00A5         ??_Config_INTERRUPT 0073                 __pintentry 0004  
                  _ADC_val 0079                    _SSPSTAT 0094                  ?_spiWrite 0070  
                  __ptext1 0070                    __ptext2 00C5                    __ptext3 0014  
                  __ptext4 00F1                    __ptext5 00DB                    __ptext6 00FA  
             __size_of_ISR 0016                    _initOsc 0014                    _spiInit 00C5  
     end_of_initialization 0010                 ??_spiWrite 0070                  _TRISAbits 0085  
              spiWrite@dat 0070        start_initialization 000F                __end_of_ISR 00F1  
__size_of_Config_INTERRUPT 0009                __pbssCOMMON 0079                  ___latbits 0002  
        __size_of_spiWrite 0006                   ?_initOsc 0070                   ?_spiInit 0073  
           __size_of_setup 0035       spiInit@sTransmitEdge 0075          interrupt_function 0004  
                 _PIE1bits 008C         spiInit@sDataSample 0073                   _PIR1bits 000C  
               _ADCON0bits 001F           _Config_INTERRUPT 00F1           __size_of_initOsc 005C  
         __size_of_spiInit 0016              __size_of_main 0020                   _spiWrite 00FA  
             spiInit@sType 0076          spiInit@sClockIdle 0074                 _INTCONbits 000B  
                 intlevel1 0000                 _OSCCONbits 008F  
