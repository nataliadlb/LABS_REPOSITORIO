

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 20 23:25:44 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0088                     	;# 
   408  0089                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  008F                     	;# 
   413  0090                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0094                     	;# 
   420  0095                     	;# 
   421  0096                     	;# 
   422  0097                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  009F                     	;# 
   431  0105                     	;# 
   432  0107                     	;# 
   433  0108                     	;# 
   434  0109                     	;# 
   435  010C                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  010F                     	;# 
   440  0185                     	;# 
   441  0187                     	;# 
   442  0188                     	;# 
   443  0189                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  0000                     	;# 
   447  0001                     	;# 
   448  0002                     	;# 
   449  0003                     	;# 
   450  0004                     	;# 
   451  0005                     	;# 
   452  0006                     	;# 
   453  0007                     	;# 
   454  0008                     	;# 
   455  0009                     	;# 
   456  000A                     	;# 
   457  000B                     	;# 
   458  000C                     	;# 
   459  000D                     	;# 
   460  000E                     	;# 
   461  000E                     	;# 
   462  000F                     	;# 
   463  0010                     	;# 
   464  0011                     	;# 
   465  0012                     	;# 
   466  0013                     	;# 
   467  0014                     	;# 
   468  0015                     	;# 
   469  0015                     	;# 
   470  0016                     	;# 
   471  0017                     	;# 
   472  0018                     	;# 
   473  0019                     	;# 
   474  001A                     	;# 
   475  001B                     	;# 
   476  001B                     	;# 
   477  001C                     	;# 
   478  001D                     	;# 
   479  001E                     	;# 
   480  001F                     	;# 
   481  0081                     	;# 
   482  0085                     	;# 
   483  0086                     	;# 
   484  0087                     	;# 
   485  0088                     	;# 
   486  0089                     	;# 
   487  008C                     	;# 
   488  008D                     	;# 
   489  008E                     	;# 
   490  008F                     	;# 
   491  0090                     	;# 
   492  0091                     	;# 
   493  0092                     	;# 
   494  0093                     	;# 
   495  0093                     	;# 
   496  0093                     	;# 
   497  0094                     	;# 
   498  0095                     	;# 
   499  0096                     	;# 
   500  0097                     	;# 
   501  0098                     	;# 
   502  0099                     	;# 
   503  009A                     	;# 
   504  009B                     	;# 
   505  009C                     	;# 
   506  009D                     	;# 
   507  009E                     	;# 
   508  009F                     	;# 
   509  0105                     	;# 
   510  0107                     	;# 
   511  0108                     	;# 
   512  0109                     	;# 
   513  010C                     	;# 
   514  010C                     	;# 
   515  010D                     	;# 
   516  010E                     	;# 
   517  010F                     	;# 
   518  0185                     	;# 
   519  0187                     	;# 
   520  0188                     	;# 
   521  0189                     	;# 
   522  018C                     	;# 
   523  018D                     	;# 
   524  0013                     _SSPBUF	set	19
   525  0014                     _SSPCON	set	20
   526  001A                     _RCREG	set	26
   527  0019                     _TXREG	set	25
   528  000B                     _INTCONbits	set	11
   529  0018                     _RCSTAbits	set	24
   530  0009                     _PORTEbits	set	9
   531  0007                     _PORTCbits	set	7
   532  0009                     _PORTE	set	9
   533  0008                     _PORTD	set	8
   534  0007                     _PORTC	set	7
   535  0005                     _PORTA	set	5
   536  0006                     _PORTB	set	6
   537  0065                     _RCIF	set	101
   538  003A                     _RC2	set	58
   539  0094                     _SSPSTATbits	set	148
   540  0094                     _SSPSTAT	set	148
   541  008C                     _PIE1bits	set	140
   542  0099                     _SPBRG	set	153
   543  009A                     _SPBRGH	set	154
   544  0098                     _TXSTAbits	set	152
   545  008F                     _OSCCONbits	set	143
   546  0089                     _TRISE	set	137
   547  0088                     _TRISD	set	136
   548  0086                     _TRISB	set	134
   549  0085                     _TRISA	set	133
   550  043B                     _TRISC3	set	1083
   551  043D                     _TRISC5	set	1085
   552  04C1                     _TRMT	set	1217
   553  043A                     _TRISC2	set	1082
   554  0189                     _ANSELH	set	393
   555  0188                     _ANSEL	set	392
   556                           
   557                           	psect	strings
   558  00E0                     __pstrings:
   559  00E0                     stringtab:
   560  00E0                     __stringtab:
   561  00E0                     stringcode:	
   562                           ;	String table - string pointers are 1 byte each
   563                           
   564  00E0                     stringdir:
   565  00E0  3000               	movlw	high stringdir
   566  00E1  008A               	movwf	10
   567  00E2  0804               	movf	4,w
   568  00E3  0A84               	incf	4,f
   569  00E4  0782               	addwf	2,f
   570  00E5                     __stringbase:
   571  00E5  3400               	retlw	0
   572  00E6                     __end_of__stringtab:
   573  00E6                     STR_1:
   574  00E6  3453               	retlw	83	;'S'
   575  00E7  3431               	retlw	49	;'1'
   576  00E8  343A               	retlw	58	;':'
   577  00E9  3420               	retlw	32	;' '
   578  00EA  3420               	retlw	32	;' '
   579  00EB  3420               	retlw	32	;' '
   580  00EC  3453               	retlw	83	;'S'
   581  00ED  3432               	retlw	50	;'2'
   582  00EE  343A               	retlw	58	;':'
   583  00EF  3420               	retlw	32	;' '
   584  00F0  3420               	retlw	32	;' '
   585  00F1  3420               	retlw	32	;' '
   586  00F2  3453               	retlw	83	;'S'
   587  00F3  3433               	retlw	51	;'3'
   588  00F4  343A               	retlw	58	;':'
   589  00F5  3400               	retlw	0
   590                           
   591                           	psect	cinit
   592  000F                     start_initialization:	
   593                           ; #config settings
   594                           
   595  000F                     __initialization:
   596                           
   597                           ; Clear objects allocated to COMMON
   598  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   599                           
   600                           ; Clear objects allocated to BANK0
   601  0010  1383               	bcf	3,7	;select IRP bank0
   602  0011  3020               	movlw	low __pbssBANK0
   603  0012  0084               	movwf	4
   604  0013  3034               	movlw	low (__pbssBANK0+20)
   605  0014  120A  118A  2115  120A  118A  	fcall	clear_ram0
   606  0019                     end_of_initialization:	
   607                           ;End of C runtime variable initialization code
   608                           
   609  0019                     __end_of__initialization:
   610  0019  0183               	clrf	3
   611  001A  120A  118A  2879   	ljmp	_main	;jump to C main() function
   612                           
   613                           	psect	bssCOMMON
   614  0079                     __pbssCOMMON:
   615  0079                     _hola_esclavo:
   616  0079                     	ds	1
   617                           
   618                           	psect	bssBANK0
   619  0020                     __pbssBANK0:
   620  0020                     _data_total:
   621  0020                     	ds	20
   622                           
   623                           	psect	clrtext
   624  0115                     clear_ram0:	
   625                           ;	Called with FSR containing the base address, and
   626                           ;	W with the last address+1
   627                           
   628  0115  0064               	clrwdt	;clear the watchdog before getting into this loop
   629  0116                     clrloop0:
   630  0116  0180               	clrf	0	;clear RAM location pointed to by FSR
   631  0117  0A84               	incf	4,f	;increment pointer
   632  0118  0604               	xorwf	4,w	;XOR with final address
   633  0119  1903               	btfsc	3,2	;have we reached the end yet?
   634  011A  3400               	retlw	0	;all done for this memory range, return
   635  011B  0604               	xorwf	4,w	;XOR again to restore value
   636  011C  2916               	goto	clrloop0	;do the next byte
   637                           
   638                           	psect	cstackCOMMON
   639  0070                     __pcstackCOMMON:
   640  0070                     ?_setup:
   641  0070                     ?_spiWrite:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_spiRead:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_initOsc:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_ISR:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ??_ISR:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_main:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_spiReceiveWait:	
   660                           ; 1 bytes @ 0x0
   661                           
   662                           
   663                           ; 1 bytes @ 0x0
   664  0070                     	ds	2
   665  0072                     ??_spiWrite:
   666  0072                     ??_spiRead:	
   667                           ; 1 bytes @ 0x2
   668                           
   669  0072                     ??_initOsc:	
   670                           ; 1 bytes @ 0x2
   671                           
   672  0072                     ?_spiInit:	
   673                           ; 1 bytes @ 0x2
   674                           
   675  0072                     ??_spiReceiveWait:	
   676                           ; 1 bytes @ 0x2
   677                           
   678  0072                     spiInit@sDataSample:	
   679                           ; 1 bytes @ 0x2
   680                           
   681  0072                     spiWrite@dat:	
   682                           ; 1 bytes @ 0x2
   683                           
   684                           
   685                           ; 1 bytes @ 0x2
   686  0072                     	ds	1
   687  0073                     spiInit@sClockIdle:
   688                           
   689                           ; 1 bytes @ 0x3
   690  0073                     	ds	1
   691  0074                     initOsc@IRCF:
   692  0074                     spiInit@sTransmitEdge:	
   693                           ; 1 bytes @ 0x4
   694                           
   695                           
   696                           ; 1 bytes @ 0x4
   697  0074                     	ds	1
   698  0075                     ??_spiInit:
   699  0075                     spiInit@sType:	
   700                           ; 1 bytes @ 0x5
   701                           
   702                           
   703                           ; 1 bytes @ 0x5
   704  0075                     	ds	1
   705  0076                     ??_setup:
   706  0076                     ??_main:	
   707                           ; 1 bytes @ 0x6
   708                           
   709                           
   710                           ; 1 bytes @ 0x6
   711  0076                     	ds	3
   712                           
   713                           	psect	maintext
   714  0079                     __pmaintext:	
   715 ;;
   716 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   717 ;;
   718 ;; *************** function _main *****************
   719 ;; Defined at:
   720 ;;		line 83 in file "main_maestro.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : B00/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       0       0       0
   735 ;;      Locals:         0       0       0       0       0
   736 ;;      Temps:          3       0       0       0       0
   737 ;;      Totals:         3       0       0       0       0
   738 ;;Total ram usage:        3 bytes
   739 ;; Hardware stack levels required when called:    3
   740 ;; This function calls:
   741 ;;		_setup
   742 ;;		_spiRead
   743 ;;		_spiWrite
   744 ;; This function is called by:
   745 ;;		Startup code after reset
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _main
   751  0079                     _main:
   752  0079                     l972:	
   753                           ;incstack = 0
   754                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   755                           
   756                           
   757                           ;main_maestro.c: 84:     setup();
   758  0079  120A  118A  20B9  120A  118A  	fcall	_setup
   759  007E                     l974:
   760                           
   761                           ;main_maestro.c: 85:     PORTB = 0;
   762  007E  1283               	bcf	3,5	;RP0=0, select bank0
   763  007F  1303               	bcf	3,6	;RP1=0, select bank0
   764  0080  0186               	clrf	6	;volatile
   765  0081                     l976:
   766                           
   767                           ;main_maestro.c: 95:         PORTB = 0;
   768  0081  1283               	bcf	3,5	;RP0=0, select bank0
   769  0082  1303               	bcf	3,6	;RP1=0, select bank0
   770  0083  0186               	clrf	6	;volatile
   771  0084                     l978:
   772                           
   773                           ;main_maestro.c: 96:         RC2 = 0;
   774  0084  1107               	bcf	7,2	;volatile
   775  0085                     l980:
   776                           
   777                           ;main_maestro.c: 97:        _delay((unsigned long)((1)*(8000000/4000.0)));
   778  0085  3003               	movlw	3
   779  0086  00F7               	movwf	??_main+1
   780  0087  3097               	movlw	151
   781  0088  00F6               	movwf	??_main
   782  0089                     u117:
   783  0089  0BF6               	decfsz	??_main,f
   784  008A  2889               	goto	u117
   785  008B  0BF7               	decfsz	??_main+1,f
   786  008C  2889               	goto	u117
   787  008D  288E               	nop2
   788  008E                     l982:
   789                           
   790                           ;main_maestro.c: 99:        spiWrite(hola_esclavo);
   791  008E  3000               	movlw	0
   792  008F  120A  118A  212B  120A  118A  	fcall	_spiWrite
   793  0094                     l984:
   794                           
   795                           ;main_maestro.c: 100:        PORTB = spiRead();
   796  0094  120A  118A  210C  120A  118A  	fcall	_spiRead
   797  0099  1283               	bcf	3,5	;RP0=0, select bank0
   798  009A  1303               	bcf	3,6	;RP1=0, select bank0
   799  009B  0086               	movwf	6	;volatile
   800  009C                     l986:
   801                           
   802                           ;main_maestro.c: 102:        _delay((unsigned long)((1)*(8000000/4000.0)));
   803  009C  3003               	movlw	3
   804  009D  00F7               	movwf	??_main+1
   805  009E  3097               	movlw	151
   806  009F  00F6               	movwf	??_main
   807  00A0                     u127:
   808  00A0  0BF6               	decfsz	??_main,f
   809  00A1  28A0               	goto	u127
   810  00A2  0BF7               	decfsz	??_main+1,f
   811  00A3  28A0               	goto	u127
   812  00A4  28A5               	nop2
   813  00A5                     l988:
   814                           
   815                           ;main_maestro.c: 103:        RC2 = 1;
   816  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   817  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   818  00A7  1507               	bsf	7,2	;volatile
   819  00A8                     l990:
   820                           
   821                           ;main_maestro.c: 105:        _delay((unsigned long)((100)*(8000000/4000.0)));
   822  00A8  3002               	movlw	2
   823  00A9  00F8               	movwf	??_main+2
   824  00AA  3004               	movlw	4
   825  00AB  00F7               	movwf	??_main+1
   826  00AC  30BA               	movlw	186
   827  00AD  00F6               	movwf	??_main
   828  00AE                     u137:
   829  00AE  0BF6               	decfsz	??_main,f
   830  00AF  28AE               	goto	u137
   831  00B0  0BF7               	decfsz	??_main+1,f
   832  00B1  28AE               	goto	u137
   833  00B2  0BF8               	decfsz	??_main+2,f
   834  00B3  28AE               	goto	u137
   835  00B4  0000               	nop
   836  00B5  2881               	goto	l976
   837  00B6  120A  118A  280C   	ljmp	start
   838  00B9                     __end_of_main:
   839                           
   840                           	psect	text1
   841  012B                     __ptext1:	
   842 ;; *************** function _spiWrite *****************
   843 ;; Defined at:
   844 ;;		line 36 in file "SPI.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  dat             1    wreg     unsigned char 
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  dat             1    2[COMMON] unsigned char 
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   858 ;;      Params:         0       0       0       0       0
   859 ;;      Locals:         1       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0
   861 ;;      Totals:         1       0       0       0       0
   862 ;;Total ram usage:        1 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; Hardware stack levels required when called:    1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           
   873                           ;psect for function _spiWrite
   874  012B                     _spiWrite:
   875                           
   876                           ;incstack = 0
   877                           ; Regs used in _spiWrite: [wreg]
   878                           ;spiWrite@dat stored from wreg
   879  012B  00F2               	movwf	spiWrite@dat
   880  012C                     l794:
   881                           
   882                           ;SPI.c: 36: void spiWrite(char dat);SPI.c: 37: {;SPI.c: 38:     SSPBUF = dat;
   883  012C  0872               	movf	spiWrite@dat,w
   884  012D  1283               	bcf	3,5	;RP0=0, select bank0
   885  012E  1303               	bcf	3,6	;RP1=0, select bank0
   886  012F  0093               	movwf	19	;volatile
   887  0130                     l201:
   888  0130  0008               	return
   889  0131                     __end_of_spiWrite:
   890                           
   891                           	psect	text2
   892  010C                     __ptext2:	
   893 ;; *************** function _spiRead *****************
   894 ;; Defined at:
   895 ;;		line 49 in file "SPI.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      unsigned char 
   902 ;; Registers used:
   903 ;;		wreg, status,2, status,0, pclath, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         0       0       0       0       0
   910 ;;      Locals:         0       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0
   912 ;;      Totals:         0       0       0       0       0
   913 ;;Total ram usage:        0 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; Hardware stack levels required when called:    2
   916 ;; This function calls:
   917 ;;		_spiReceiveWait
   918 ;; This function is called by:
   919 ;;		_main
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           
   924                           ;psect for function _spiRead
   925  010C                     _spiRead:
   926  010C                     l796:	
   927                           ;incstack = 0
   928                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   929                           
   930                           
   931                           ;SPI.c: 51:     spiReceiveWait();
   932  010C  120A  118A  211D  120A  118A  	fcall	_spiReceiveWait
   933  0111                     l798:
   934                           
   935                           ;SPI.c: 52:     return(SSPBUF);
   936  0111  1283               	bcf	3,5	;RP0=0, select bank0
   937  0112  1303               	bcf	3,6	;RP1=0, select bank0
   938  0113  0813               	movf	19,w	;volatile
   939  0114                     l209:
   940  0114  0008               	return
   941  0115                     __end_of_spiRead:
   942                           
   943                           	psect	text3
   944  011D                     __ptext3:	
   945 ;; *************** function _spiReceiveWait *****************
   946 ;; Defined at:
   947 ;;		line 31 in file "SPI.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;		None
   950 ;; Auto vars:     Size  Location     Type
   951 ;;		None
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		None
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0
   964 ;;      Totals:         0       0       0       0       0
   965 ;;Total ram usage:        0 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; Hardware stack levels required when called:    1
   968 ;; This function calls:
   969 ;;		Nothing
   970 ;; This function is called by:
   971 ;;		_spiRead
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           
   976                           ;psect for function _spiReceiveWait
   977  011D                     _spiReceiveWait:
   978  011D                     l762:	
   979                           ;incstack = 0
   980                           ; Regs used in _spiReceiveWait: []
   981                           
   982  011D                     l195:	
   983                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
   984                           
   985  011D  1683               	bsf	3,5	;RP0=1, select bank1
   986  011E  1303               	bcf	3,6	;RP1=0, select bank1
   987  011F  1C14               	btfss	20,0	;volatile
   988  0120  2922               	goto	u21
   989  0121  2923               	goto	u20
   990  0122                     u21:
   991  0122  291D               	goto	l195
   992  0123                     u20:
   993  0123                     l198:
   994  0123  0008               	return
   995  0124                     __end_of_spiReceiveWait:
   996                           
   997                           	psect	text4
   998  00B9                     __ptext4:	
   999 ;; *************** function _setup *****************
  1000 ;; Defined at:
  1001 ;;		line 124 in file "main_maestro.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;		None
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1015 ;;      Params:         0       0       0       0       0
  1016 ;;      Locals:         0       0       0       0       0
  1017 ;;      Temps:          0       0       0       0       0
  1018 ;;      Totals:         0       0       0       0       0
  1019 ;;Total ram usage:        0 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; Hardware stack levels required when called:    2
  1022 ;; This function calls:
  1023 ;;		_initOsc
  1024 ;;		_spiInit
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           
  1031                           ;psect for function _setup
  1032  00B9                     _setup:
  1033  00B9                     l942:	
  1034                           ;incstack = 0
  1035                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1036                           
  1037                           
  1038                           ;main_maestro.c: 125:     initOsc(7);
  1039  00B9  3007               	movlw	7
  1040  00BA  120A  118A  201D  120A  118A  	fcall	_initOsc
  1041  00BF                     l944:
  1042                           
  1043                           ;main_maestro.c: 126:     ANSEL = 0;
  1044  00BF  1683               	bsf	3,5	;RP0=1, select bank3
  1045  00C0  1703               	bsf	3,6	;RP1=1, select bank3
  1046  00C1  0188               	clrf	8	;volatile
  1047  00C2                     l946:
  1048                           
  1049                           ;main_maestro.c: 127:     ANSELH = 0;
  1050  00C2  0189               	clrf	9	;volatile
  1051  00C3                     l948:
  1052                           
  1053                           ;main_maestro.c: 129:     TRISA = 0;
  1054  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1055  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  1056  00C5  0185               	clrf	5	;volatile
  1057  00C6                     l950:
  1058                           
  1059                           ;main_maestro.c: 130:     TRISB = 0;
  1060  00C6  0186               	clrf	6	;volatile
  1061  00C7                     l952:
  1062                           
  1063                           ;main_maestro.c: 134:     TRISD = 0;
  1064  00C7  0188               	clrf	8	;volatile
  1065  00C8                     l954:
  1066                           
  1067                           ;main_maestro.c: 135:     TRISE = 0;
  1068  00C8  0189               	clrf	9	;volatile
  1069  00C9                     l956:
  1070                           
  1071                           ;main_maestro.c: 137:     PORTA = 0;
  1072  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1073  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1074  00CB  0185               	clrf	5	;volatile
  1075  00CC                     l958:
  1076                           
  1077                           ;main_maestro.c: 138:     PORTB = 0;
  1078  00CC  0186               	clrf	6	;volatile
  1079  00CD                     l960:
  1080                           
  1081                           ;main_maestro.c: 139:     PORTC = 0;
  1082  00CD  0187               	clrf	7	;volatile
  1083  00CE                     l962:
  1084                           
  1085                           ;main_maestro.c: 140:     PORTD = 0;
  1086  00CE  0188               	clrf	8	;volatile
  1087  00CF                     l964:
  1088                           
  1089                           ;main_maestro.c: 141:     PORTE = 0;
  1090  00CF  0189               	clrf	9	;volatile
  1091  00D0                     l966:
  1092                           
  1093                           ;main_maestro.c: 145:     TRISC2 = 0;
  1094  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  1095  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  1096  00D2  1107               	bcf	7,2	;volatile
  1097  00D3                     l968:
  1098                           
  1099                           ;main_maestro.c: 146:     PORTCbits.RC2 = 1;
  1100  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1101  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1102  00D5  1507               	bsf	7,2	;volatile
  1103  00D6                     l970:
  1104                           
  1105                           ;main_maestro.c: 154:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK
      +                          _IDLE_LOW, SPI_IDLE_2_ACTIVE);
  1106  00D6  01F2               	clrf	spiInit@sDataSample
  1107  00D7  01F3               	clrf	spiInit@sClockIdle
  1108  00D8  01F4               	clrf	spiInit@sTransmitEdge
  1109  00D9  3020               	movlw	32
  1110  00DA  120A  118A  20F6  120A  118A  	fcall	_spiInit
  1111  00DF                     l66:
  1112  00DF  0008               	return
  1113  00E0                     __end_of_setup:
  1114                           
  1115                           	psect	text5
  1116  00F6                     __ptext5:	
  1117 ;; *************** function _spiInit *****************
  1118 ;; Defined at:
  1119 ;;		line 14 in file "SPI.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  sType           1    wreg     enum E1264
  1122 ;;  sDataSample     1    2[COMMON] enum E1272
  1123 ;;  sClockIdle      1    3[COMMON] enum E1276
  1124 ;;  sTransmitEdg    1    4[COMMON] enum E1280
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  sType           1    5[COMMON] enum E1264
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, status,2, status,0
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1136 ;;      Params:         3       0       0       0       0
  1137 ;;      Locals:         1       0       0       0       0
  1138 ;;      Temps:          0       0       0       0       0
  1139 ;;      Totals:         4       0       0       0       0
  1140 ;;Total ram usage:        4 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:    1
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_setup
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           
  1151                           ;psect for function _spiInit
  1152  00F6                     _spiInit:
  1153                           
  1154                           ;incstack = 0
  1155                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1156                           ;spiInit@sType stored from wreg
  1157  00F6  00F5               	movwf	spiInit@sType
  1158  00F7                     l932:
  1159                           
  1160                           ;SPI.c: 14: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 15: {;SPI.c: 16:     TRISC5 = 0;
  1161  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  1162  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  1163  00F9  1287               	bcf	7,5	;volatile
  1164                           
  1165                           ;SPI.c: 17:     if(sType & 0b00000100)
  1166  00FA  1D75               	btfss	spiInit@sType,2
  1167  00FB  28FD               	goto	u91
  1168  00FC  28FE               	goto	u90
  1169  00FD                     u91:
  1170  00FD  2902               	goto	l938
  1171  00FE                     u90:
  1172  00FE                     l934:
  1173                           
  1174                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sTransmitEdge;
  1175  00FE  0874               	movf	spiInit@sTransmitEdge,w
  1176  00FF  0094               	movwf	20	;volatile
  1177  0100                     l936:
  1178                           
  1179                           ;SPI.c: 20:         TRISC3 = 1;
  1180  0100  1587               	bsf	7,3	;volatile
  1181                           
  1182                           ;SPI.c: 21:     }
  1183  0101  2906               	goto	l191
  1184  0102                     l938:
  1185                           
  1186                           ;SPI.c: 23:     {;SPI.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
  1187  0102  0872               	movf	spiInit@sDataSample,w
  1188  0103  0474               	iorwf	spiInit@sTransmitEdge,w
  1189  0104  0094               	movwf	20	;volatile
  1190  0105                     l940:
  1191                           
  1192                           ;SPI.c: 25:         TRISC3 = 0;
  1193  0105  1187               	bcf	7,3	;volatile
  1194  0106                     l191:	
  1195                           ;SPI.c: 26:     }
  1196                           
  1197                           
  1198                           ;SPI.c: 28:     SSPCON = sType | sClockIdle;
  1199  0106  0875               	movf	spiInit@sType,w
  1200  0107  0473               	iorwf	spiInit@sClockIdle,w
  1201  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1202  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1203  010A  0094               	movwf	20	;volatile
  1204  010B                     l192:
  1205  010B  0008               	return
  1206  010C                     __end_of_spiInit:
  1207                           
  1208                           	psect	text6
  1209  001D                     __ptext6:	
  1210 ;; *************** function _initOsc *****************
  1211 ;; Defined at:
  1212 ;;		line 3 in file "Oscilador.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  IRCF            1    wreg     unsigned char 
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;  IRCF            1    4[COMMON] unsigned char 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         1       0       0       0       0
  1228 ;;      Temps:          2       0       0       0       0
  1229 ;;      Totals:         3       0       0       0       0
  1230 ;;Total ram usage:        3 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    1
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		_setup
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _initOsc
  1242  001D                     _initOsc:
  1243                           
  1244                           ;incstack = 0
  1245                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1246                           ;initOsc@IRCF stored from wreg
  1247  001D  00F4               	movwf	initOsc@IRCF
  1248  001E                     l740:
  1249                           
  1250                           ;Oscilador.c: 5:     switch(IRCF){
  1251  001E  2855               	goto	l744
  1252  001F                     l75:	
  1253                           ;Oscilador.c: 6:         case 0:
  1254                           
  1255                           
  1256                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  1257  001F  1683               	bsf	3,5	;RP0=1, select bank1
  1258  0020  1303               	bcf	3,6	;RP1=0, select bank1
  1259  0021  130F               	bcf	15,6	;volatile
  1260                           
  1261                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  1262  0022  128F               	bcf	15,5	;volatile
  1263                           
  1264                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  1265  0023  120F               	bcf	15,4	;volatile
  1266                           
  1267                           ;Oscilador.c: 10:             break;
  1268  0024  2877               	goto	l76
  1269  0025                     l77:	
  1270                           ;Oscilador.c: 11:          case 1:
  1271                           
  1272                           
  1273                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  1274  0025  1683               	bsf	3,5	;RP0=1, select bank1
  1275  0026  1303               	bcf	3,6	;RP1=0, select bank1
  1276  0027  130F               	bcf	15,6	;volatile
  1277                           
  1278                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  1279  0028  128F               	bcf	15,5	;volatile
  1280                           
  1281                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  1282  0029  160F               	bsf	15,4	;volatile
  1283                           
  1284                           ;Oscilador.c: 15:             break;
  1285  002A  2877               	goto	l76
  1286  002B                     l78:	
  1287                           ;Oscilador.c: 16:         case 2:
  1288                           
  1289                           
  1290                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  1291  002B  1683               	bsf	3,5	;RP0=1, select bank1
  1292  002C  1303               	bcf	3,6	;RP1=0, select bank1
  1293  002D  130F               	bcf	15,6	;volatile
  1294                           
  1295                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  1296  002E  168F               	bsf	15,5	;volatile
  1297                           
  1298                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  1299  002F  120F               	bcf	15,4	;volatile
  1300                           
  1301                           ;Oscilador.c: 20:             break;
  1302  0030  2877               	goto	l76
  1303  0031                     l79:	
  1304                           ;Oscilador.c: 21:         case 3:
  1305                           
  1306                           
  1307                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  1308  0031  1683               	bsf	3,5	;RP0=1, select bank1
  1309  0032  1303               	bcf	3,6	;RP1=0, select bank1
  1310  0033  130F               	bcf	15,6	;volatile
  1311                           
  1312                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  1313  0034  168F               	bsf	15,5	;volatile
  1314                           
  1315                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  1316  0035  160F               	bsf	15,4	;volatile
  1317                           
  1318                           ;Oscilador.c: 25:             break;
  1319  0036  2877               	goto	l76
  1320  0037                     l80:	
  1321                           ;Oscilador.c: 26:         case 4:
  1322                           
  1323                           
  1324                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  1325  0037  1683               	bsf	3,5	;RP0=1, select bank1
  1326  0038  1303               	bcf	3,6	;RP1=0, select bank1
  1327  0039  170F               	bsf	15,6	;volatile
  1328                           
  1329                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  1330  003A  128F               	bcf	15,5	;volatile
  1331                           
  1332                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  1333  003B  120F               	bcf	15,4	;volatile
  1334                           
  1335                           ;Oscilador.c: 30:             break;
  1336  003C  2877               	goto	l76
  1337  003D                     l81:	
  1338                           ;Oscilador.c: 31:         case 5:
  1339                           
  1340                           
  1341                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1342  003D  1683               	bsf	3,5	;RP0=1, select bank1
  1343  003E  1303               	bcf	3,6	;RP1=0, select bank1
  1344  003F  170F               	bsf	15,6	;volatile
  1345                           
  1346                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1347  0040  128F               	bcf	15,5	;volatile
  1348                           
  1349                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1350  0041  160F               	bsf	15,4	;volatile
  1351                           
  1352                           ;Oscilador.c: 35:             break;
  1353  0042  2877               	goto	l76
  1354  0043                     l82:	
  1355                           ;Oscilador.c: 36:         case 6:
  1356                           
  1357                           
  1358                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1359  0043  1683               	bsf	3,5	;RP0=1, select bank1
  1360  0044  1303               	bcf	3,6	;RP1=0, select bank1
  1361  0045  170F               	bsf	15,6	;volatile
  1362                           
  1363                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1364  0046  168F               	bsf	15,5	;volatile
  1365                           
  1366                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1367  0047  120F               	bcf	15,4	;volatile
  1368                           
  1369                           ;Oscilador.c: 40:             break;
  1370  0048  2877               	goto	l76
  1371  0049                     l83:	
  1372                           ;Oscilador.c: 41:         case 7:
  1373                           
  1374                           
  1375                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1376  0049  1683               	bsf	3,5	;RP0=1, select bank1
  1377  004A  1303               	bcf	3,6	;RP1=0, select bank1
  1378  004B  170F               	bsf	15,6	;volatile
  1379                           
  1380                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1381  004C  168F               	bsf	15,5	;volatile
  1382                           
  1383                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1384  004D  160F               	bsf	15,4	;volatile
  1385                           
  1386                           ;Oscilador.c: 45:             break;
  1387  004E  2877               	goto	l76
  1388  004F                     l84:	
  1389                           ;Oscilador.c: 46:         default:
  1390                           
  1391                           
  1392                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1393  004F  1683               	bsf	3,5	;RP0=1, select bank1
  1394  0050  1303               	bcf	3,6	;RP1=0, select bank1
  1395  0051  170F               	bsf	15,6	;volatile
  1396                           
  1397                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1398  0052  168F               	bsf	15,5	;volatile
  1399                           
  1400                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1401  0053  120F               	bcf	15,4	;volatile
  1402                           
  1403                           ;Oscilador.c: 50:             break;
  1404  0054  2877               	goto	l76
  1405  0055                     l744:
  1406  0055  0874               	movf	initOsc@IRCF,w
  1407  0056  00F2               	movwf	??_initOsc
  1408  0057  01F3               	clrf	??_initOsc+1
  1409                           
  1410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1411                           ; Switch size 1, requested type "simple"
  1412                           ; Number of cases is 1, Range of values is 0 to 0
  1413                           ; switch strategies available:
  1414                           ; Name         Instructions Cycles
  1415                           ; simple_byte            4     3 (average)
  1416                           ; direct_byte           11     8 (fixed)
  1417                           ; jumptable            260     6 (fixed)
  1418                           ;	Chosen strategy is simple_byte
  1419  0058  0873               	movf	??_initOsc+1,w
  1420  0059  3A00               	xorlw	0	; case 0
  1421  005A  1903               	skipnz
  1422  005B  285D               	goto	l1024
  1423  005C  284F               	goto	l84
  1424  005D                     l1024:
  1425                           
  1426                           ; Switch size 1, requested type "simple"
  1427                           ; Number of cases is 8, Range of values is 0 to 7
  1428                           ; switch strategies available:
  1429                           ; Name         Instructions Cycles
  1430                           ; simple_byte           25    13 (average)
  1431                           ; direct_byte           32     8 (fixed)
  1432                           ; jumptable            260     6 (fixed)
  1433                           ;	Chosen strategy is simple_byte
  1434  005D  0872               	movf	??_initOsc,w
  1435  005E  3A00               	xorlw	0	; case 0
  1436  005F  1903               	skipnz
  1437  0060  281F               	goto	l75
  1438  0061  3A01               	xorlw	1	; case 1
  1439  0062  1903               	skipnz
  1440  0063  2825               	goto	l77
  1441  0064  3A03               	xorlw	3	; case 2
  1442  0065  1903               	skipnz
  1443  0066  282B               	goto	l78
  1444  0067  3A01               	xorlw	1	; case 3
  1445  0068  1903               	skipnz
  1446  0069  2831               	goto	l79
  1447  006A  3A07               	xorlw	7	; case 4
  1448  006B  1903               	skipnz
  1449  006C  2837               	goto	l80
  1450  006D  3A01               	xorlw	1	; case 5
  1451  006E  1903               	skipnz
  1452  006F  283D               	goto	l81
  1453  0070  3A03               	xorlw	3	; case 6
  1454  0071  1903               	skipnz
  1455  0072  2843               	goto	l82
  1456  0073  3A01               	xorlw	1	; case 7
  1457  0074  1903               	skipnz
  1458  0075  2849               	goto	l83
  1459  0076  284F               	goto	l84
  1460  0077                     l76:
  1461                           
  1462                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1463  0077  140F               	bsf	15,0	;volatile
  1464  0078                     l85:
  1465  0078  0008               	return
  1466  0079                     __end_of_initOsc:
  1467                           
  1468                           	psect	text7
  1469  0124                     __ptext7:	
  1470 ;; *************** function _ISR *****************
  1471 ;; Defined at:
  1472 ;;		line 76 in file "main_maestro.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		None
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0
  1488 ;;      Temps:          2       0       0       0       0
  1489 ;;      Totals:         2       0       0       0       0
  1490 ;;Total ram usage:        2 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		Interrupt level 1
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _ISR
  1501  0124                     _ISR:
  1502  0124                     i1l55:
  1503  0124  0871               	movf	??_ISR+1,w
  1504  0125  008A               	movwf	10
  1505  0126  0E70               	swapf	??_ISR,w
  1506  0127  0083               	movwf	3
  1507  0128  0EFE               	swapf	btemp,f
  1508  0129  0E7E               	swapf	btemp,w
  1509  012A  0009               	retfie
  1510  012B                     __end_of_ISR:
  1511  007E                     btemp	set	126	;btemp
  1512  007E                     wtemp0	set	126
  1513                           
  1514                           	psect	intentry
  1515  0004                     __pintentry:	
  1516                           ;incstack = 0
  1517                           ; Regs used in _ISR: []
  1518                           
  1519  0004                     interrupt_function:
  1520  007E                     saved_w	set	btemp
  1521  0004  00FE               	movwf	btemp
  1522  0005  0E03               	swapf	3,w
  1523  0006  00F0               	movwf	??_ISR
  1524  0007  080A               	movf	10,w
  1525  0008  00F1               	movwf	??_ISR+1
  1526  0009  120A  118A  2924   	ljmp	_ISR
  1527                           
  1528                           	psect	config
  1529                           
  1530                           ;Config register CONFIG1 @ 0x2007
  1531                           ;	Oscillator Selection bits
  1532                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1533                           ;	Watchdog Timer Enable bit
  1534                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1535                           ;	Power-up Timer Enable bit
  1536                           ;	PWRTE = OFF, PWRT disabled
  1537                           ;	RE3/MCLR pin function select bit
  1538                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1539                           ;	Code Protection bit
  1540                           ;	CP = OFF, Program memory code protection is disabled
  1541                           ;	Data Code Protection bit
  1542                           ;	CPD = OFF, Data memory code protection is disabled
  1543                           ;	Brown Out Reset Selection bits
  1544                           ;	BOREN = OFF, BOR disabled
  1545                           ;	Internal External Switchover bit
  1546                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1547                           ;	Fail-Safe Clock Monitor Enabled bit
  1548                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1549                           ;	Low Voltage Programming Enable bit
  1550                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1551                           ;	In-Circuit Debugger Mode bit
  1552                           ;	DEBUG = 0x1, unprogrammed default
  1553  2007                     	org	8199
  1554  2007  20D6               	dw	8406
  1555                           
  1556                           ;Config register CONFIG2 @ 0x2008
  1557                           ;	Brown-out Reset Selection bit
  1558                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1559                           ;	Flash Program Memory Self Write Enable bits
  1560                           ;	WRT = OFF, Write protection off
  1561  2008                     	org	8200
  1562  2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      0      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     321
                                              6 COMMON     3     3      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     306
                            _initOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     291
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _initOsc
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 20 23:25:44 2021

                      pc 0002              _SSPSTATbits 0094                       l80 0037  
                     l81 003D                       l82 0043                       l66 00DF  
                     l83 0049                       l75 001F                       l84 004F  
                     l76 0077                       l85 0078                       l77 0025  
                     l78 002B                       l79 0031                       u20 0123  
                     u21 0122                       u90 00FE                       u91 00FD  
                     fsr 0004                      l201 0130                      l209 0114  
                    l191 0106                      l192 010B                      l195 011D  
                    l198 0123                      l740 001E                      l744 0055  
                    l762 011D                      l940 0105                      l932 00F7  
                    l934 00FE                      l950 00C6                      l942 00B9  
                    l936 0100                      l960 00CD                      l952 00C7  
                    l944 00BF                      l938 0102                      l970 00D6  
                    l962 00CE                      l954 00C8                      l946 00C2  
                    l794 012C                      l964 00CF                      l956 00C9  
                    l948 00C3                      l796 010C                      l980 0085  
                    l972 0079                      l966 00D0                      l958 00CC  
                    l798 0111                      l990 00A8                      l982 008E  
                    l974 007E                      l968 00D3                      l984 0094  
                    l976 0081                      l986 009C                      l978 0084  
                    l988 00A5                      _RC2 003A                      u117 0089  
                    u127 00A0                      u137 00AE                      _ISR 0124  
                    indf 0000                     ?_ISR 0070                     l1024 005D  
                   STR_1 00E6                     _RCIF 0065                     i1l55 0124  
                   _TRMT 04C1                     _main 0079                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  _ANSEL 0188                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  _TXREG 0019          __end_of_initOsc 0079                    _setup 00B9  
                  pclath 000A          __end_of_spiInit 010C          __end_of_spiRead 0115  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00B9                   ??_main 0076              initOsc@IRCF 0074  
                 ?_setup 0070                   _ANSELH 0189                   _SPBRGH 009A  
                 _TRISC2 043A                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                ??_initOsc 0072  
                 saved_w 007E         __end_of_spiWrite 0131                ??_spiInit 0075  
              ??_spiRead 0072  __end_of__initialization 0019           __pcstackCOMMON 0070  
          __end_of_setup 00E0                  ??_setup 0076               __pbssBANK0 0020  
             _data_total 0020               __pmaintext 0079               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094               __stringtab 00E0  
              ?_spiWrite 0070                  __ptext1 012B                  __ptext2 010C  
                __ptext3 011D                  __ptext4 00B9                  __ptext5 00F6  
                __ptext6 001D                  __ptext7 0124             __size_of_ISR 0007  
                _initOsc 001D                  _spiInit 00F6                  _spiRead 010C  
                clrloop0 0116     end_of_initialization 0019                _RCSTAbits 0018  
             ??_spiWrite 0072                _PORTCbits 0007                _PORTEbits 0009  
            spiWrite@dat 0072                _TXSTAbits 0098           _spiReceiveWait 011D  
    start_initialization 000F              __end_of_ISR 012B             _hola_esclavo 0079  
 __end_of_spiReceiveWait 0124              __pbssCOMMON 0079                ___latbits 0002  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                __pstrings 00E0  
               ?_initOsc 0070                 ?_spiInit 0072                 ?_spiRead 0070  
         __size_of_setup 0027     spiInit@sTransmitEdge 0074        interrupt_function 0004  
              clear_ram0 0115                 _PIE1bits 008C       spiInit@sDataSample 0072  
            __stringbase 00E5       __end_of__stringtab 00E6         __size_of_initOsc 005C  
       __size_of_spiInit 0016         __size_of_spiRead 0009            __size_of_main 0040  
               _spiWrite 012B             spiInit@sType 0075        spiInit@sClockIdle 0073  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0072  
              stringcode 00E0               _OSCCONbits 008F                 stringdir 00E0  
               stringtab 00E0  
