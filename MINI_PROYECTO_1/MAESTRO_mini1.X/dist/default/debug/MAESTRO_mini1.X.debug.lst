

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 11:21:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  001A                     _RCREG	set	26
   456  0019                     _TXREG	set	25
   457  000B                     _INTCONbits	set	11
   458  0018                     _RCSTAbits	set	24
   459  0009                     _PORTEbits	set	9
   460  0009                     _PORTE	set	9
   461  0008                     _PORTD	set	8
   462  0007                     _PORTC	set	7
   463  0006                     _PORTB	set	6
   464  0005                     _PORTA	set	5
   465  0065                     _RCIF	set	101
   466  008C                     _PIE1bits	set	140
   467  0099                     _SPBRG	set	153
   468  009A                     _SPBRGH	set	154
   469  0098                     _TXSTAbits	set	152
   470  008F                     _OSCCONbits	set	143
   471  0089                     _TRISE	set	137
   472  0087                     _TRISCbits	set	135
   473  0086                     _TRISB	set	134
   474  0085                     _TRISA	set	133
   475  0088                     _TRISD	set	136
   476  04C1                     _TRMT	set	1217
   477  0189                     _ANSELH	set	393
   478  0188                     _ANSEL	set	392
   479                           
   480                           	psect	strings
   481  011B                     __pstrings:
   482  011B                     stringtab:
   483  011B                     __stringtab:
   484  011B                     stringcode:	
   485                           ;	String table - string pointers are 1 byte each
   486                           
   487  011B                     stringdir:
   488  011B  3001               	movlw	high stringdir
   489  011C  008A               	movwf	10
   490  011D  0804               	movf	4,w
   491  011E  0A84               	incf	4,f
   492  011F  0782               	addwf	2,f
   493  0120                     __stringbase:
   494  0120  3400               	retlw	0
   495  0121                     __end_of__stringtab:
   496  0121                     STR_2:
   497  0121  3453               	retlw	83	;'S'
   498  0122  3431               	retlw	49	;'1'
   499  0123  343A               	retlw	58	;':'
   500  0124  3420               	retlw	32	;' '
   501  0125  3420               	retlw	32	;' '
   502  0126  3420               	retlw	32	;' '
   503  0127  3453               	retlw	83	;'S'
   504  0128  3432               	retlw	50	;'2'
   505  0129  343A               	retlw	58	;':'
   506  012A  3420               	retlw	32	;' '
   507  012B  3420               	retlw	32	;' '
   508  012C  3420               	retlw	32	;' '
   509  012D  3453               	retlw	83	;'S'
   510  012E  3433               	retlw	51	;'3'
   511  012F  343A               	retlw	58	;':'
   512  0130  3400               	retlw	0
   513  0131                     STR_1:
   514  0131  3453               	retlw	83	;'S'
   515  0132  3431               	retlw	49	;'1'
   516  0133  3420               	retlw	32	;' '
   517  0134  3420               	retlw	32	;' '
   518  0135  3420               	retlw	32	;' '
   519  0136  3453               	retlw	83	;'S'
   520  0137  3432               	retlw	50	;'2'
   521  0138  3420               	retlw	32	;' '
   522  0139  3420               	retlw	32	;' '
   523  013A  3420               	retlw	32	;' '
   524  013B  3453               	retlw	83	;'S'
   525  013C  3433               	retlw	51	;'3'
   526  013D  3420               	retlw	32	;' '
   527  013E  340A               	retlw	10
   528  013F  3400               	retlw	0
   529                           
   530                           	psect	cinit
   531  000F                     start_initialization:	
   532                           ; #config settings
   533                           
   534  000F                     __initialization:
   535                           
   536                           ; Clear objects allocated to BANK0
   537  000F  1383               	bcf	3,7	;select IRP bank0
   538  0010  3020               	movlw	low __pbssBANK0
   539  0011  0084               	movwf	4
   540  0012  3034               	movlw	low (__pbssBANK0+20)
   541  0013  120A  118A  220A  120A  118A  	fcall	clear_ram0
   542  0018                     end_of_initialization:	
   543                           ;End of C runtime variable initialization code
   544                           
   545  0018                     __end_of__initialization:
   546  0018  0183               	clrf	3
   547  0019  120A  118A  28C3   	ljmp	_main	;jump to C main() function
   548                           
   549                           	psect	bssBANK0
   550  0020                     __pbssBANK0:
   551  0020                     _data_total:
   552  0020                     	ds	20
   553                           
   554                           	psect	clrtext
   555  020A                     clear_ram0:	
   556                           ;	Called with FSR containing the base address, and
   557                           ;	W with the last address+1
   558                           
   559  020A  0064               	clrwdt	;clear the watchdog before getting into this loop
   560  020B                     clrloop0:
   561  020B  0180               	clrf	0	;clear RAM location pointed to by FSR
   562  020C  0A84               	incf	4,f	;increment pointer
   563  020D  0604               	xorwf	4,w	;XOR with final address
   564  020E  1903               	btfsc	3,2	;have we reached the end yet?
   565  020F  3400               	retlw	0	;all done for this memory range, return
   566  0210  0604               	xorwf	4,w	;XOR again to restore value
   567  0211  2A0B               	goto	clrloop0	;do the next byte
   568                           
   569                           	psect	cstackCOMMON
   570  0070                     __pcstackCOMMON:
   571  0070                     ?_setup:
   572  0070                     ?_Lcd_Init:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_Lcd_Clear:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_Write_USART_String:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_Show_val_LCD:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_initOsc:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_USART_Init_BaudRate:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_USART_Init:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_USART_INTERRUPT:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_Lcd_Write_String:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_Lcd_Port:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_Lcd_Cmd:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_ISR:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ??_ISR:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_main:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_Lcd_Write_Char:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_Write_USART:	
   618                           ; 1 bytes @ 0x0
   619                           
   620                           
   621                           ; 1 bytes @ 0x0
   622  0070                     	ds	2
   623  0072                     ??_initOsc:
   624  0072                     ??_USART_Init_BaudRate:	
   625                           ; 1 bytes @ 0x2
   626                           
   627  0072                     ??_USART_Init:	
   628                           ; 1 bytes @ 0x2
   629                           
   630  0072                     ??_USART_INTERRUPT:	
   631                           ; 1 bytes @ 0x2
   632                           
   633  0072                     ??_Lcd_Port:	
   634                           ; 1 bytes @ 0x2
   635                           
   636  0072                     ??_Write_USART:	
   637                           ; 1 bytes @ 0x2
   638                           
   639  0072                     Lcd_Port@a:	
   640                           ; 1 bytes @ 0x2
   641                           
   642  0072                     Write_USART@a:	
   643                           ; 1 bytes @ 0x2
   644                           
   645                           
   646                           ; 1 bytes @ 0x2
   647  0072                     	ds	1
   648  0073                     ??_Write_USART_String:
   649  0073                     ??_Lcd_Cmd:	
   650                           ; 1 bytes @ 0x3
   651                           
   652  0073                     ??_Lcd_Write_Char:	
   653                           ; 1 bytes @ 0x3
   654                           
   655                           
   656                           ; 1 bytes @ 0x3
   657  0073                     	ds	1
   658  0074                     initOsc@IRCF:
   659  0074                     Lcd_Write_Char@a:	
   660                           ; 1 bytes @ 0x4
   661                           
   662  0074                     Write_USART_String@a:	
   663                           ; 1 bytes @ 0x4
   664                           
   665                           
   666                           ; 1 bytes @ 0x4
   667  0074                     	ds	1
   668  0075                     ??_setup:
   669  0075                     ??_Lcd_Write_String:	
   670                           ; 1 bytes @ 0x5
   671                           
   672  0075                     Lcd_Cmd@a:	
   673                           ; 1 bytes @ 0x5
   674                           
   675  0075                     Write_USART_String@i:	
   676                           ; 1 bytes @ 0x5
   677                           
   678  0075                     Lcd_Write_String@i:	
   679                           ; 1 bytes @ 0x5
   680                           
   681                           
   682                           ; 2 bytes @ 0x5
   683  0075                     	ds	1
   684  0076                     ??_Lcd_Init:
   685  0076                     ??_Lcd_Clear:	
   686                           ; 1 bytes @ 0x6
   687                           
   688  0076                     ?_Lcd_Set_Cursor:	
   689                           ; 1 bytes @ 0x6
   690                           
   691  0076                     Lcd_Set_Cursor@b:	
   692                           ; 1 bytes @ 0x6
   693                           
   694                           
   695                           ; 1 bytes @ 0x6
   696  0076                     	ds	1
   697  0077                     ??_Lcd_Set_Cursor:
   698  0077                     Lcd_Write_String@a:	
   699                           ; 1 bytes @ 0x7
   700                           
   701                           
   702                           ; 1 bytes @ 0x7
   703  0077                     	ds	1
   704  0078                     Lcd_Set_Cursor@a:
   705                           
   706                           ; 1 bytes @ 0x8
   707  0078                     	ds	1
   708  0079                     Lcd_Set_Cursor@temp:
   709                           
   710                           ; 1 bytes @ 0x9
   711  0079                     	ds	1
   712  007A                     ??_Show_val_LCD:
   713                           
   714                           ; 1 bytes @ 0xA
   715  007A                     	ds	1
   716                           
   717                           	psect	cstackBANK0
   718  0034                     __pcstackBANK0:
   719  0034                     ??_main:
   720                           
   721                           ; 1 bytes @ 0x0
   722  0034                     	ds	3
   723                           
   724                           	psect	maintext
   725  00C3                     __pmaintext:	
   726 ;;
   727 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   728 ;;
   729 ;; *************** function _main *****************
   730 ;; Defined at:
   731 ;;		line 82 in file "main_maestro.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : B00/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0
   747 ;;      Temps:          0       3       0       0       0
   748 ;;      Totals:         0       3       0       0       0
   749 ;;Total ram usage:        3 bytes
   750 ;; Hardware stack levels required when called:    5
   751 ;; This function calls:
   752 ;;		_Lcd_Clear
   753 ;;		_Lcd_Init
   754 ;;		_Show_val_LCD
   755 ;;		_Write_USART_String
   756 ;;		_setup
   757 ;; This function is called by:
   758 ;;		Startup code after reset
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           
   763                           ;psect for function _main
   764  00C3                     _main:
   765  00C3                     l904:	
   766                           ;incstack = 0
   767                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   768                           
   769                           
   770                           ;main_maestro.c: 83:     setup();
   771  00C3  120A  118A  20F2  120A  118A  	fcall	_setup
   772  00C8                     l906:
   773                           
   774                           ;main_maestro.c: 84:     TRISD = 0x00;
   775  00C8  1683               	bsf	3,5	;RP0=1, select bank1
   776  00C9  1303               	bcf	3,6	;RP1=0, select bank1
   777  00CA  0188               	clrf	8	;volatile
   778  00CB                     l908:
   779                           
   780                           ;main_maestro.c: 85:     Lcd_Init();
   781  00CB  120A  118A  2078  120A  118A  	fcall	_Lcd_Init
   782  00D0                     l910:
   783                           
   784                           ;main_maestro.c: 86:     Lcd_Clear();
   785  00D0  120A  118A  21F1  120A  118A  	fcall	_Lcd_Clear
   786  00D5                     l912:
   787                           
   788                           ;main_maestro.c: 93:          Write_USART_String("S1   S2   S3 \n");
   789  00D5  3011               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   790  00D6  120A  118A  2189  120A  118A  	fcall	_Write_USART_String
   791  00DB                     l914:
   792                           
   793                           ;main_maestro.c: 100:         Show_val_LCD();
   794  00DB  120A  118A  21C5  120A  118A  	fcall	_Show_val_LCD
   795  00E0                     l916:
   796                           
   797                           ;main_maestro.c: 101:         _delay((unsigned long)((500)*(8000000/4000.0)));
   798  00E0  3006               	movlw	6
   799  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   800  00E2  1303               	bcf	3,6	;RP1=0, select bank0
   801  00E3  00B6               	movwf	??_main+2
   802  00E4  3013               	movlw	19
   803  00E5  00B5               	movwf	??_main+1
   804  00E6  30AD               	movlw	173
   805  00E7  00B4               	movwf	??_main
   806  00E8                     u117:
   807  00E8  0BB4               	decfsz	??_main,f
   808  00E9  28E8               	goto	u117
   809  00EA  0BB5               	decfsz	??_main+1,f
   810  00EB  28E8               	goto	u117
   811  00EC  0BB6               	decfsz	??_main+2,f
   812  00ED  28E8               	goto	u117
   813  00EE  28D5               	goto	l912
   814  00EF  120A  118A  280C   	ljmp	start
   815  00F2                     __end_of_main:
   816                           
   817                           	psect	text1
   818  00F2                     __ptext1:	
   819 ;; *************** function _setup *****************
   820 ;; Defined at:
   821 ;;		line 110 in file "main_maestro.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;		None
   824 ;; Auto vars:     Size  Location     Type
   825 ;;		None
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      void 
   828 ;; Registers used:
   829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   835 ;;      Params:         0       0       0       0       0
   836 ;;      Locals:         0       0       0       0       0
   837 ;;      Temps:          0       0       0       0       0
   838 ;;      Totals:         0       0       0       0       0
   839 ;;Total ram usage:        0 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; Hardware stack levels required when called:    2
   842 ;; This function calls:
   843 ;;		_USART_INTERRUPT
   844 ;;		_USART_Init
   845 ;;		_USART_Init_BaudRate
   846 ;;		_initOsc
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _setup
   854  00F2                     _setup:
   855  00F2                     l772:	
   856                           ;incstack = 0
   857                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   858                           
   859                           
   860                           ;main_maestro.c: 111:     initOsc(7);
   861  00F2  3007               	movlw	7
   862  00F3  120A  118A  201C  120A  118A  	fcall	_initOsc
   863  00F8                     l774:
   864                           
   865                           ;main_maestro.c: 112:     ANSEL = 0;
   866  00F8  1683               	bsf	3,5	;RP0=1, select bank3
   867  00F9  1703               	bsf	3,6	;RP1=1, select bank3
   868  00FA  0188               	clrf	8	;volatile
   869  00FB                     l776:
   870                           
   871                           ;main_maestro.c: 113:     ANSELH = 0;
   872  00FB  0189               	clrf	9	;volatile
   873  00FC                     l778:
   874                           
   875                           ;main_maestro.c: 114:     TRISA = 0;
   876  00FC  1683               	bsf	3,5	;RP0=1, select bank1
   877  00FD  1303               	bcf	3,6	;RP1=0, select bank1
   878  00FE  0185               	clrf	5	;volatile
   879  00FF                     l780:
   880                           
   881                           ;main_maestro.c: 115:     TRISB = 0;
   882  00FF  0186               	clrf	6	;volatile
   883  0100                     l782:
   884                           
   885                           ;main_maestro.c: 116:     TRISCbits.TRISC6 = 0;
   886  0100  1307               	bcf	7,6	;volatile
   887  0101                     l784:
   888                           
   889                           ;main_maestro.c: 117:     TRISCbits.TRISC7 = 1;
   890  0101  1787               	bsf	7,7	;volatile
   891  0102                     l786:
   892                           
   893                           ;main_maestro.c: 118:     TRISD = 0;
   894  0102  0188               	clrf	8	;volatile
   895  0103                     l788:
   896                           
   897                           ;main_maestro.c: 119:     TRISE = 0;
   898  0103  0189               	clrf	9	;volatile
   899  0104                     l790:
   900                           
   901                           ;main_maestro.c: 120:     PORTA = 0;
   902  0104  1283               	bcf	3,5	;RP0=0, select bank0
   903  0105  1303               	bcf	3,6	;RP1=0, select bank0
   904  0106  0185               	clrf	5	;volatile
   905  0107                     l792:
   906                           
   907                           ;main_maestro.c: 121:     PORTB = 0;
   908  0107  0186               	clrf	6	;volatile
   909  0108                     l794:
   910                           
   911                           ;main_maestro.c: 122:     PORTC = 0;
   912  0108  0187               	clrf	7	;volatile
   913  0109                     l796:
   914                           
   915                           ;main_maestro.c: 123:     PORTD = 0;
   916  0109  0188               	clrf	8	;volatile
   917  010A                     l798:
   918                           
   919                           ;main_maestro.c: 124:     PORTE = 0;
   920  010A  0189               	clrf	9	;volatile
   921  010B                     l800:
   922                           
   923                           ;main_maestro.c: 125:     USART_Init_BaudRate();
   924  010B  120A  118A  2221  120A  118A  	fcall	_USART_Init_BaudRate
   925  0110                     l802:
   926                           
   927                           ;main_maestro.c: 126:     USART_Init();
   928  0110  120A  118A  2212  120A  118A  	fcall	_USART_Init
   929  0115                     l804:
   930                           
   931                           ;main_maestro.c: 127:     USART_INTERRUPT();
   932  0115  120A  118A  2227  120A  118A  	fcall	_USART_INTERRUPT
   933  011A                     l66:
   934  011A  0008               	return
   935  011B                     __end_of_setup:
   936                           
   937                           	psect	text2
   938  001C                     __ptext2:	
   939 ;; *************** function _initOsc *****************
   940 ;; Defined at:
   941 ;;		line 3 in file "Oscilador.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;  IRCF            1    wreg     unsigned char 
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  IRCF            1    4[COMMON] unsigned char 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       0       0       0       0
   956 ;;      Locals:         1       0       0       0       0
   957 ;;      Temps:          2       0       0       0       0
   958 ;;      Totals:         3       0       0       0       0
   959 ;;Total ram usage:        3 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    1
   962 ;; This function calls:
   963 ;;		Nothing
   964 ;; This function is called by:
   965 ;;		_setup
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function _initOsc
   971  001C                     _initOsc:
   972                           
   973                           ;incstack = 0
   974                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   975                           ;initOsc@IRCF stored from wreg
   976  001C  00F4               	movwf	initOsc@IRCF
   977  001D                     l730:
   978                           
   979                           ;Oscilador.c: 5:     switch(IRCF){
   980  001D  2854               	goto	l734
   981  001E                     l75:	
   982                           ;Oscilador.c: 6:         case 0:
   983                           
   984                           
   985                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   986  001E  1683               	bsf	3,5	;RP0=1, select bank1
   987  001F  1303               	bcf	3,6	;RP1=0, select bank1
   988  0020  130F               	bcf	15,6	;volatile
   989                           
   990                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   991  0021  128F               	bcf	15,5	;volatile
   992                           
   993                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   994  0022  120F               	bcf	15,4	;volatile
   995                           
   996                           ;Oscilador.c: 10:             break;
   997  0023  2876               	goto	l76
   998  0024                     l77:	
   999                           ;Oscilador.c: 11:          case 1:
  1000                           
  1001                           
  1002                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  1003  0024  1683               	bsf	3,5	;RP0=1, select bank1
  1004  0025  1303               	bcf	3,6	;RP1=0, select bank1
  1005  0026  130F               	bcf	15,6	;volatile
  1006                           
  1007                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  1008  0027  128F               	bcf	15,5	;volatile
  1009                           
  1010                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  1011  0028  160F               	bsf	15,4	;volatile
  1012                           
  1013                           ;Oscilador.c: 15:             break;
  1014  0029  2876               	goto	l76
  1015  002A                     l78:	
  1016                           ;Oscilador.c: 16:         case 2:
  1017                           
  1018                           
  1019                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  1020  002A  1683               	bsf	3,5	;RP0=1, select bank1
  1021  002B  1303               	bcf	3,6	;RP1=0, select bank1
  1022  002C  130F               	bcf	15,6	;volatile
  1023                           
  1024                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  1025  002D  168F               	bsf	15,5	;volatile
  1026                           
  1027                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  1028  002E  120F               	bcf	15,4	;volatile
  1029                           
  1030                           ;Oscilador.c: 20:             break;
  1031  002F  2876               	goto	l76
  1032  0030                     l79:	
  1033                           ;Oscilador.c: 21:         case 3:
  1034                           
  1035                           
  1036                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  1037  0030  1683               	bsf	3,5	;RP0=1, select bank1
  1038  0031  1303               	bcf	3,6	;RP1=0, select bank1
  1039  0032  130F               	bcf	15,6	;volatile
  1040                           
  1041                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  1042  0033  168F               	bsf	15,5	;volatile
  1043                           
  1044                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  1045  0034  160F               	bsf	15,4	;volatile
  1046                           
  1047                           ;Oscilador.c: 25:             break;
  1048  0035  2876               	goto	l76
  1049  0036                     l80:	
  1050                           ;Oscilador.c: 26:         case 4:
  1051                           
  1052                           
  1053                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  1054  0036  1683               	bsf	3,5	;RP0=1, select bank1
  1055  0037  1303               	bcf	3,6	;RP1=0, select bank1
  1056  0038  170F               	bsf	15,6	;volatile
  1057                           
  1058                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  1059  0039  128F               	bcf	15,5	;volatile
  1060                           
  1061                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  1062  003A  120F               	bcf	15,4	;volatile
  1063                           
  1064                           ;Oscilador.c: 30:             break;
  1065  003B  2876               	goto	l76
  1066  003C                     l81:	
  1067                           ;Oscilador.c: 31:         case 5:
  1068                           
  1069                           
  1070                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1071  003C  1683               	bsf	3,5	;RP0=1, select bank1
  1072  003D  1303               	bcf	3,6	;RP1=0, select bank1
  1073  003E  170F               	bsf	15,6	;volatile
  1074                           
  1075                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1076  003F  128F               	bcf	15,5	;volatile
  1077                           
  1078                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1079  0040  160F               	bsf	15,4	;volatile
  1080                           
  1081                           ;Oscilador.c: 35:             break;
  1082  0041  2876               	goto	l76
  1083  0042                     l82:	
  1084                           ;Oscilador.c: 36:         case 6:
  1085                           
  1086                           
  1087                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1088  0042  1683               	bsf	3,5	;RP0=1, select bank1
  1089  0043  1303               	bcf	3,6	;RP1=0, select bank1
  1090  0044  170F               	bsf	15,6	;volatile
  1091                           
  1092                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1093  0045  168F               	bsf	15,5	;volatile
  1094                           
  1095                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1096  0046  120F               	bcf	15,4	;volatile
  1097                           
  1098                           ;Oscilador.c: 40:             break;
  1099  0047  2876               	goto	l76
  1100  0048                     l83:	
  1101                           ;Oscilador.c: 41:         case 7:
  1102                           
  1103                           
  1104                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1105  0048  1683               	bsf	3,5	;RP0=1, select bank1
  1106  0049  1303               	bcf	3,6	;RP1=0, select bank1
  1107  004A  170F               	bsf	15,6	;volatile
  1108                           
  1109                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1110  004B  168F               	bsf	15,5	;volatile
  1111                           
  1112                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1113  004C  160F               	bsf	15,4	;volatile
  1114                           
  1115                           ;Oscilador.c: 45:             break;
  1116  004D  2876               	goto	l76
  1117  004E                     l84:	
  1118                           ;Oscilador.c: 46:         default:
  1119                           
  1120                           
  1121                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1122  004E  1683               	bsf	3,5	;RP0=1, select bank1
  1123  004F  1303               	bcf	3,6	;RP1=0, select bank1
  1124  0050  170F               	bsf	15,6	;volatile
  1125                           
  1126                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1127  0051  168F               	bsf	15,5	;volatile
  1128                           
  1129                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1130  0052  120F               	bcf	15,4	;volatile
  1131                           
  1132                           ;Oscilador.c: 50:             break;
  1133  0053  2876               	goto	l76
  1134  0054                     l734:
  1135  0054  0874               	movf	initOsc@IRCF,w
  1136  0055  00F2               	movwf	??_initOsc
  1137  0056  01F3               	clrf	??_initOsc+1
  1138                           
  1139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1140                           ; Switch size 1, requested type "simple"
  1141                           ; Number of cases is 1, Range of values is 0 to 0
  1142                           ; switch strategies available:
  1143                           ; Name         Instructions Cycles
  1144                           ; simple_byte            4     3 (average)
  1145                           ; direct_byte           11     8 (fixed)
  1146                           ; jumptable            260     6 (fixed)
  1147                           ;	Chosen strategy is simple_byte
  1148  0057  0873               	movf	??_initOsc+1,w
  1149  0058  3A00               	xorlw	0	; case 0
  1150  0059  1903               	skipnz
  1151  005A  285C               	goto	l938
  1152  005B  284E               	goto	l84
  1153  005C                     l938:
  1154                           
  1155                           ; Switch size 1, requested type "simple"
  1156                           ; Number of cases is 8, Range of values is 0 to 7
  1157                           ; switch strategies available:
  1158                           ; Name         Instructions Cycles
  1159                           ; simple_byte           25    13 (average)
  1160                           ; direct_byte           32     8 (fixed)
  1161                           ; jumptable            260     6 (fixed)
  1162                           ;	Chosen strategy is simple_byte
  1163  005C  0872               	movf	??_initOsc,w
  1164  005D  3A00               	xorlw	0	; case 0
  1165  005E  1903               	skipnz
  1166  005F  281E               	goto	l75
  1167  0060  3A01               	xorlw	1	; case 1
  1168  0061  1903               	skipnz
  1169  0062  2824               	goto	l77
  1170  0063  3A03               	xorlw	3	; case 2
  1171  0064  1903               	skipnz
  1172  0065  282A               	goto	l78
  1173  0066  3A01               	xorlw	1	; case 3
  1174  0067  1903               	skipnz
  1175  0068  2830               	goto	l79
  1176  0069  3A07               	xorlw	7	; case 4
  1177  006A  1903               	skipnz
  1178  006B  2836               	goto	l80
  1179  006C  3A01               	xorlw	1	; case 5
  1180  006D  1903               	skipnz
  1181  006E  283C               	goto	l81
  1182  006F  3A03               	xorlw	3	; case 6
  1183  0070  1903               	skipnz
  1184  0071  2842               	goto	l82
  1185  0072  3A01               	xorlw	1	; case 7
  1186  0073  1903               	skipnz
  1187  0074  2848               	goto	l83
  1188  0075  284E               	goto	l84
  1189  0076                     l76:
  1190                           
  1191                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1192  0076  140F               	bsf	15,0	;volatile
  1193  0077                     l85:
  1194  0077  0008               	return
  1195  0078                     __end_of_initOsc:
  1196                           
  1197                           	psect	text3
  1198  0221                     __ptext3:	
  1199 ;; *************** function _USART_Init_BaudRate *****************
  1200 ;; Defined at:
  1201 ;;		line 19 in file "USART.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1215 ;;      Params:         0       0       0       0       0
  1216 ;;      Locals:         0       0       0       0       0
  1217 ;;      Temps:          0       0       0       0       0
  1218 ;;      Totals:         0       0       0       0       0
  1219 ;;Total ram usage:        0 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:    1
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_setup
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function _USART_Init_BaudRate
  1231  0221                     _USART_Init_BaudRate:
  1232  0221                     l740:	
  1233                           ;incstack = 0
  1234                           ; Regs used in _USART_Init_BaudRate: [wreg+status,2]
  1235                           
  1236                           
  1237                           ;USART.c: 20:     SPBRGH = 0;
  1238  0221  1683               	bsf	3,5	;RP0=1, select bank1
  1239  0222  1303               	bcf	3,6	;RP1=0, select bank1
  1240  0223  019A               	clrf	26	;volatile
  1241  0224                     l742:
  1242                           
  1243                           ;USART.c: 21:     SPBRG = 12;
  1244  0224  300C               	movlw	12
  1245  0225  0099               	movwf	25	;volatile
  1246  0226                     l154:
  1247  0226  0008               	return
  1248  0227                     __end_of_USART_Init_BaudRate:
  1249                           
  1250                           	psect	text4
  1251  0212                     __ptext4:	
  1252 ;; *************** function _USART_Init *****************
  1253 ;; Defined at:
  1254 ;;		line 8 in file "USART.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		None
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1268 ;;      Params:         0       0       0       0       0
  1269 ;;      Locals:         0       0       0       0       0
  1270 ;;      Temps:          0       0       0       0       0
  1271 ;;      Totals:         0       0       0       0       0
  1272 ;;Total ram usage:        0 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; Hardware stack levels required when called:    1
  1275 ;; This function calls:
  1276 ;;		Nothing
  1277 ;; This function is called by:
  1278 ;;		_setup
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           
  1283                           ;psect for function _USART_Init
  1284  0212                     _USART_Init:
  1285  0212                     l744:	
  1286                           ;incstack = 0
  1287                           ; Regs used in _USART_Init: []
  1288                           
  1289                           
  1290                           ;USART.c: 10:     RCSTAbits.SPEN = 1;
  1291  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1292  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1293  0214  1798               	bsf	24,7	;volatile
  1294                           
  1295                           ;USART.c: 11:     TXSTAbits.SYNC = 0;
  1296  0215  1683               	bsf	3,5	;RP0=1, select bank1
  1297  0216  1303               	bcf	3,6	;RP1=0, select bank1
  1298  0217  1218               	bcf	24,4	;volatile
  1299                           
  1300                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
  1301  0218  1698               	bsf	24,5	;volatile
  1302  0219                     l151:
  1303  0219  0008               	return
  1304  021A                     __end_of_USART_Init:
  1305                           
  1306                           	psect	text5
  1307  0227                     __ptext5:	
  1308 ;; *************** function _USART_INTERRUPT *****************
  1309 ;; Defined at:
  1310 ;;		line 24 in file "USART.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		None
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1324 ;;      Params:         0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0
  1326 ;;      Temps:          0       0       0       0       0
  1327 ;;      Totals:         0       0       0       0       0
  1328 ;;Total ram usage:        0 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    1
  1331 ;; This function calls:
  1332 ;;		Nothing
  1333 ;; This function is called by:
  1334 ;;		_setup
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           
  1339                           ;psect for function _USART_INTERRUPT
  1340  0227                     _USART_INTERRUPT:
  1341  0227                     l746:	
  1342                           ;incstack = 0
  1343                           ; Regs used in _USART_INTERRUPT: []
  1344                           
  1345                           
  1346                           ;USART.c: 25:     INTCONbits.GIE = 1;
  1347  0227  178B               	bsf	11,7	;volatile
  1348                           
  1349                           ;USART.c: 26:     INTCONbits.PEIE = 1;
  1350  0228  170B               	bsf	11,6	;volatile
  1351                           
  1352                           ;USART.c: 27:     PIE1bits.RCIE = 1;
  1353  0229  1683               	bsf	3,5	;RP0=1, select bank1
  1354  022A  1303               	bcf	3,6	;RP1=0, select bank1
  1355  022B  168C               	bsf	12,5	;volatile
  1356  022C                     l157:
  1357  022C  0008               	return
  1358  022D                     __end_of_USART_INTERRUPT:
  1359                           
  1360                           	psect	text6
  1361  0189                     __ptext6:	
  1362 ;; *************** function _Write_USART_String *****************
  1363 ;; Defined at:
  1364 ;;		line 37 in file "USART.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  a               1    wreg     PTR unsigned char 
  1367 ;;		 -> STR_1(15), 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  a               1    4[COMMON] PTR unsigned char 
  1370 ;;		 -> STR_1(15), 
  1371 ;;  i               1    5[COMMON] unsigned char 
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1381 ;;      Params:         0       0       0       0       0
  1382 ;;      Locals:         2       0       0       0       0
  1383 ;;      Temps:          1       0       0       0       0
  1384 ;;      Totals:         3       0       0       0       0
  1385 ;;Total ram usage:        3 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:    2
  1388 ;; This function calls:
  1389 ;;		_Write_USART
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _Write_USART_String
  1397  0189                     _Write_USART_String:
  1398                           
  1399                           ;incstack = 0
  1400                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1401                           ;Write_USART_String@a stored from wreg
  1402  0189  00F4               	movwf	Write_USART_String@a
  1403  018A                     l892:
  1404                           
  1405                           ;USART.c: 38:     uint8_t i;;USART.c: 39:     for(i=0;a[i]!='\0';i++){
  1406  018A  01F5               	clrf	Write_USART_String@i
  1407  018B  299D               	goto	l898
  1408  018C                     l894:
  1409                           
  1410                           ;USART.c: 40:         Write_USART(a[i]);
  1411  018C  0875               	movf	Write_USART_String@i,w
  1412  018D  0774               	addwf	Write_USART_String@a,w
  1413  018E  0084               	movwf	4
  1414  018F  120A  118A  211B  120A  118A  	fcall	stringdir
  1415  0194  120A  118A  21FE  120A  118A  	fcall	_Write_USART
  1416  0199                     l896:
  1417                           
  1418                           ;USART.c: 41:     }
  1419  0199  3001               	movlw	1
  1420  019A  00F3               	movwf	??_Write_USART_String
  1421  019B  0873               	movf	??_Write_USART_String,w
  1422  019C  07F5               	addwf	Write_USART_String@i,f
  1423  019D                     l898:
  1424  019D  0875               	movf	Write_USART_String@i,w
  1425  019E  0774               	addwf	Write_USART_String@a,w
  1426  019F  0084               	movwf	4
  1427  01A0  120A  118A  211B  120A  118A  	fcall	stringdir
  1428  01A5  3A00               	xorlw	0
  1429  01A6  1D03               	skipz
  1430  01A7  29A9               	goto	u101
  1431  01A8  29AA               	goto	u100
  1432  01A9                     u101:
  1433  01A9  298C               	goto	l894
  1434  01AA                     u100:
  1435  01AA                     l169:
  1436  01AA  0008               	return
  1437  01AB                     __end_of_Write_USART_String:
  1438                           
  1439                           	psect	text7
  1440  01FE                     __ptext7:	
  1441 ;; *************** function _Write_USART *****************
  1442 ;; Defined at:
  1443 ;;		line 33 in file "USART.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  a               1    wreg     unsigned char 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  a               1    2[COMMON] unsigned char 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1457 ;;      Params:         0       0       0       0       0
  1458 ;;      Locals:         1       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0
  1460 ;;      Totals:         1       0       0       0       0
  1461 ;;Total ram usage:        1 bytes
  1462 ;; Hardware stack levels used:    1
  1463 ;; Hardware stack levels required when called:    1
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_Write_USART_String
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _Write_USART
  1473  01FE                     _Write_USART:
  1474                           
  1475                           ;incstack = 0
  1476                           ; Regs used in _Write_USART: [wreg]
  1477                           ;Write_USART@a stored from wreg
  1478  01FE  00F2               	movwf	Write_USART@a
  1479  01FF                     l768:
  1480  01FF                     l160:	
  1481                           ;USART.c: 34:     while(!TRMT);
  1482                           
  1483  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  1484  0200  1303               	bcf	3,6	;RP1=0, select bank1
  1485  0201  1C98               	btfss	24,1	;volatile
  1486  0202  2A04               	goto	u41
  1487  0203  2A05               	goto	u40
  1488  0204                     u41:
  1489  0204  29FF               	goto	l160
  1490  0205                     u40:
  1491  0205                     l770:
  1492                           
  1493                           ;USART.c: 35:     TXREG=a;
  1494  0205  0872               	movf	Write_USART@a,w
  1495  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1496  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1497  0208  0099               	movwf	25	;volatile
  1498  0209                     l163:
  1499  0209  0008               	return
  1500  020A                     __end_of_Write_USART:
  1501                           
  1502                           	psect	text8
  1503  01C5                     __ptext8:	
  1504 ;; *************** function _Show_val_LCD *****************
  1505 ;; Defined at:
  1506 ;;		line 139 in file "main_maestro.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1520 ;;      Params:         0       0       0       0       0
  1521 ;;      Locals:         0       0       0       0       0
  1522 ;;      Temps:          1       0       0       0       0
  1523 ;;      Totals:         1       0       0       0       0
  1524 ;;Total ram usage:        1 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    4
  1527 ;; This function calls:
  1528 ;;		_Lcd_Clear
  1529 ;;		_Lcd_Set_Cursor
  1530 ;;		_Lcd_Write_String
  1531 ;; This function is called by:
  1532 ;;		_main
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           
  1537                           ;psect for function _Show_val_LCD
  1538  01C5                     _Show_val_LCD:
  1539  01C5                     l900:	
  1540                           ;incstack = 0
  1541                           ; Regs used in _Show_val_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1542                           
  1543                           
  1544                           ;main_maestro.c: 141:     Lcd_Clear();
  1545  01C5  120A  118A  21F1  120A  118A  	fcall	_Lcd_Clear
  1546                           
  1547                           ;main_maestro.c: 142:     Lcd_Set_Cursor(1,2);
  1548  01CA  3002               	movlw	2
  1549  01CB  00FA               	movwf	??_Show_val_LCD
  1550  01CC  087A               	movf	??_Show_val_LCD,w
  1551  01CD  00F6               	movwf	Lcd_Set_Cursor@b
  1552  01CE  3001               	movlw	1
  1553  01CF  120A  118A  2165  120A  118A  	fcall	_Lcd_Set_Cursor
  1554  01D4                     l902:
  1555                           
  1556                           ;main_maestro.c: 143:     Lcd_Write_String("S1:   S2:   S3:");
  1557  01D4  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1558  01D5  120A  118A  2140  120A  118A  	fcall	_Lcd_Write_String
  1559  01DA                     l69:
  1560  01DA  0008               	return
  1561  01DB                     __end_of_Show_val_LCD:
  1562                           
  1563                           	psect	text9
  1564  0140                     __ptext9:	
  1565 ;; *************** function _Lcd_Write_String *****************
  1566 ;; Defined at:
  1567 ;;		line 70 in file "LCD.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  a               1    wreg     PTR unsigned char 
  1570 ;;		 -> STR_2(16), 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  a               1    7[COMMON] PTR unsigned char 
  1573 ;;		 -> STR_2(16), 
  1574 ;;  i               2    5[COMMON] int 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1584 ;;      Params:         0       0       0       0       0
  1585 ;;      Locals:         3       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0
  1587 ;;      Totals:         3       0       0       0       0
  1588 ;;Total ram usage:        3 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:    3
  1591 ;; This function calls:
  1592 ;;		_Lcd_Write_Char
  1593 ;; This function is called by:
  1594 ;;		_Show_val_LCD
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           
  1599                           ;psect for function _Lcd_Write_String
  1600  0140                     _Lcd_Write_String:
  1601                           
  1602                           ;incstack = 0
  1603                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1604                           ;Lcd_Write_String@a stored from wreg
  1605  0140  00F7               	movwf	Lcd_Write_String@a
  1606  0141                     l884:
  1607                           
  1608                           ;LCD.c: 71:  int i;;LCD.c: 72:  for(i=0;a[i]!='\0';i++)
  1609  0141  01F5               	clrf	Lcd_Write_String@i
  1610  0142  01F6               	clrf	Lcd_Write_String@i+1
  1611  0143  2957               	goto	l890
  1612  0144                     l886:
  1613                           
  1614                           ;LCD.c: 73:     Lcd_Write_Char(a[i]);
  1615  0144  0875               	movf	Lcd_Write_String@i,w
  1616  0145  0777               	addwf	Lcd_Write_String@a,w
  1617  0146  0084               	movwf	4
  1618  0147  120A  118A  211B  120A  118A  	fcall	stringdir
  1619  014C  120A  118A  21DB  120A  118A  	fcall	_Lcd_Write_Char
  1620  0151                     l888:
  1621  0151  3001               	movlw	1
  1622  0152  07F5               	addwf	Lcd_Write_String@i,f
  1623  0153  1803               	skipnc
  1624  0154  0AF6               	incf	Lcd_Write_String@i+1,f
  1625  0155  3000               	movlw	0
  1626  0156  07F6               	addwf	Lcd_Write_String@i+1,f
  1627  0157                     l890:
  1628  0157  0875               	movf	Lcd_Write_String@i,w
  1629  0158  0777               	addwf	Lcd_Write_String@a,w
  1630  0159  0084               	movwf	4
  1631  015A  120A  118A  211B  120A  118A  	fcall	stringdir
  1632  015F  3A00               	xorlw	0
  1633  0160  1D03               	skipz
  1634  0161  2963               	goto	u91
  1635  0162  2964               	goto	u90
  1636  0163                     u91:
  1637  0163  2944               	goto	l886
  1638  0164                     u90:
  1639  0164                     l122:
  1640  0164  0008               	return
  1641  0165                     __end_of_Lcd_Write_String:
  1642                           
  1643                           	psect	text10
  1644  01DB                     __ptext10:	
  1645 ;; *************** function _Lcd_Write_Char *****************
  1646 ;; Defined at:
  1647 ;;		line 61 in file "LCD.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  a               1    wreg     unsigned char 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  a               1    4[COMMON] unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         0       0       0       0       0
  1662 ;;      Locals:         1       0       0       0       0
  1663 ;;      Temps:          1       0       0       0       0
  1664 ;;      Totals:         2       0       0       0       0
  1665 ;;Total ram usage:        2 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    2
  1668 ;; This function calls:
  1669 ;;		_Lcd_Port
  1670 ;; This function is called by:
  1671 ;;		_Lcd_Write_String
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           
  1676                           ;psect for function _Lcd_Write_Char
  1677  01DB                     _Lcd_Write_Char:
  1678                           
  1679                           ;incstack = 0
  1680                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1681                           ;Lcd_Write_Char@a stored from wreg
  1682  01DB  00F4               	movwf	Lcd_Write_Char@a
  1683  01DC                     l718:
  1684                           
  1685                           ;LCD.c: 62:    PORTEbits.RE0 = 1;
  1686  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1687  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1688  01DE  1409               	bsf	9,0	;volatile
  1689  01DF                     l720:
  1690                           
  1691                           ;LCD.c: 63:    Lcd_Port(a);
  1692  01DF  0874               	movf	Lcd_Write_Char@a,w
  1693  01E0  120A  118A  222D  120A  118A  	fcall	_Lcd_Port
  1694  01E5                     l722:
  1695                           
  1696                           ;LCD.c: 64:    PORTEbits.RE2 = 1;
  1697  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1698  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1699  01E7  1509               	bsf	9,2	;volatile
  1700  01E8                     l724:
  1701                           
  1702                           ;LCD.c: 65:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1703  01E8  301A               	movlw	26
  1704  01E9  00F3               	movwf	??_Lcd_Write_Char
  1705  01EA                     u127:
  1706  01EA  0BF3               	decfsz	??_Lcd_Write_Char,f
  1707  01EB  29EA               	goto	u127
  1708  01EC  0000               	nop
  1709  01ED                     l726:
  1710                           
  1711                           ;LCD.c: 66:    PORTEbits.RE2 = 0;
  1712  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1713  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1714  01EF  1109               	bcf	9,2	;volatile
  1715  01F0                     l116:
  1716  01F0  0008               	return
  1717  01F1                     __end_of_Lcd_Write_Char:
  1718                           
  1719                           	psect	text11
  1720  0165                     __ptext11:	
  1721 ;; *************** function _Lcd_Set_Cursor *****************
  1722 ;; Defined at:
  1723 ;;		line 48 in file "LCD.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  a               1    wreg     unsigned char 
  1726 ;;  b               1    6[COMMON] unsigned char 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  a               1    8[COMMON] unsigned char 
  1729 ;;  temp            1    9[COMMON] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0, pclath, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         1       0       0       0       0
  1740 ;;      Locals:         2       0       0       0       0
  1741 ;;      Temps:          1       0       0       0       0
  1742 ;;      Totals:         4       0       0       0       0
  1743 ;;Total ram usage:        4 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    3
  1746 ;; This function calls:
  1747 ;;		_Lcd_Cmd
  1748 ;; This function is called by:
  1749 ;;		_Show_val_LCD
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           
  1754                           ;psect for function _Lcd_Set_Cursor
  1755  0165                     _Lcd_Set_Cursor:
  1756                           
  1757                           ;incstack = 0
  1758                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1759                           ;Lcd_Set_Cursor@a stored from wreg
  1760  0165  00F8               	movwf	Lcd_Set_Cursor@a
  1761  0166                     l872:
  1762                           
  1763                           ;LCD.c: 49:  char temp;;LCD.c: 50:  if(a == 1){
  1764  0166  0378               	decf	Lcd_Set_Cursor@a,w
  1765  0167  1D03               	btfss	3,2
  1766  0168  296A               	goto	u71
  1767  0169  296B               	goto	u70
  1768  016A                     u71:
  1769  016A  2977               	goto	l878
  1770  016B                     u70:
  1771  016B                     l874:
  1772                           
  1773                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  1774  016B  0876               	movf	Lcd_Set_Cursor@b,w
  1775  016C  3E7F               	addlw	127
  1776  016D  00F7               	movwf	??_Lcd_Set_Cursor
  1777  016E  0877               	movf	??_Lcd_Set_Cursor,w
  1778  016F  00F9               	movwf	Lcd_Set_Cursor@temp
  1779  0170                     l876:
  1780                           
  1781                           ;LCD.c: 52:         Lcd_Cmd(temp);
  1782  0170  0879               	movf	Lcd_Set_Cursor@temp,w
  1783  0171  120A  118A  21AB  120A  118A  	fcall	_Lcd_Cmd
  1784                           
  1785                           ;LCD.c: 53:  }
  1786  0176  2988               	goto	l113
  1787  0177                     l878:
  1788  0177  3002               	movlw	2
  1789  0178  0678               	xorwf	Lcd_Set_Cursor@a,w
  1790  0179  1D03               	btfss	3,2
  1791  017A  297C               	goto	u81
  1792  017B  297D               	goto	u80
  1793  017C                     u81:
  1794  017C  2988               	goto	l113
  1795  017D                     u80:
  1796  017D                     l880:
  1797                           
  1798                           ;LCD.c: 55:   temp = 0xC0 + b - 1;
  1799  017D  0876               	movf	Lcd_Set_Cursor@b,w
  1800  017E  3EBF               	addlw	191
  1801  017F  00F7               	movwf	??_Lcd_Set_Cursor
  1802  0180  0877               	movf	??_Lcd_Set_Cursor,w
  1803  0181  00F9               	movwf	Lcd_Set_Cursor@temp
  1804  0182                     l882:
  1805                           
  1806                           ;LCD.c: 56:   Lcd_Cmd(temp);
  1807  0182  0879               	movf	Lcd_Set_Cursor@temp,w
  1808  0183  120A  118A  21AB  120A  118A  	fcall	_Lcd_Cmd
  1809  0188                     l113:
  1810  0188  0008               	return
  1811  0189                     __end_of_Lcd_Set_Cursor:
  1812                           
  1813                           	psect	text12
  1814  01F1                     __ptext12:	
  1815 ;; *************** function _Lcd_Clear *****************
  1816 ;; Defined at:
  1817 ;;		line 42 in file "LCD.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2, status,0, pclath, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1831 ;;      Params:         0       0       0       0       0
  1832 ;;      Locals:         0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0
  1834 ;;      Totals:         0       0       0       0       0
  1835 ;;Total ram usage:        0 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    3
  1838 ;; This function calls:
  1839 ;;		_Lcd_Cmd
  1840 ;; This function is called by:
  1841 ;;		_main
  1842 ;;		_Show_val_LCD
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           
  1847                           ;psect for function _Lcd_Clear
  1848  01F1                     _Lcd_Clear:
  1849  01F1                     l728:	
  1850                           ;incstack = 0
  1851                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1852                           
  1853                           
  1854                           ;LCD.c: 43:  Lcd_Cmd(0);
  1855  01F1  3000               	movlw	0
  1856  01F2  120A  118A  21AB  120A  118A  	fcall	_Lcd_Cmd
  1857                           
  1858                           ;LCD.c: 44:  Lcd_Cmd(1);
  1859  01F7  3001               	movlw	1
  1860  01F8  120A  118A  21AB  120A  118A  	fcall	_Lcd_Cmd
  1861  01FD                     l107:
  1862  01FD  0008               	return
  1863  01FE                     __end_of_Lcd_Clear:
  1864                           
  1865                           	psect	text13
  1866  0078                     __ptext13:	
  1867 ;; *************** function _Lcd_Init *****************
  1868 ;; Defined at:
  1869 ;;		line 14 in file "LCD.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2, status,0, pclath, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1883 ;;      Params:         0       0       0       0       0
  1884 ;;      Locals:         0       0       0       0       0
  1885 ;;      Temps:          2       0       0       0       0
  1886 ;;      Totals:         2       0       0       0       0
  1887 ;;Total ram usage:        2 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; Hardware stack levels required when called:    3
  1890 ;; This function calls:
  1891 ;;		_Lcd_Cmd
  1892 ;;		_Lcd_Port
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           
  1899                           ;psect for function _Lcd_Init
  1900  0078                     _Lcd_Init:
  1901  0078                     l806:	
  1902                           ;incstack = 0
  1903                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1904                           
  1905                           
  1906                           ;LCD.c: 15:   Lcd_Port(0x00);
  1907  0078  3000               	movlw	0
  1908  0079  120A  118A  222D  120A  118A  	fcall	_Lcd_Port
  1909  007E                     l808:
  1910                           
  1911                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1912  007E  3034               	movlw	52
  1913  007F  00F7               	movwf	??_Lcd_Init+1
  1914  0080  30F1               	movlw	241
  1915  0081  00F6               	movwf	??_Lcd_Init
  1916  0082                     u137:
  1917  0082  0BF6               	decfsz	??_Lcd_Init,f
  1918  0083  2882               	goto	u137
  1919  0084  0BF7               	decfsz	??_Lcd_Init+1,f
  1920  0085  2882               	goto	u137
  1921  0086  2887               	nop2
  1922  0087                     l810:
  1923                           
  1924                           ;LCD.c: 17:   Lcd_Cmd(0x30);
  1925  0087  3030               	movlw	48
  1926  0088  120A  118A  21AB  120A  118A  	fcall	_Lcd_Cmd
  1927                           
  1928                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1929  008D  300D               	movlw	13
  1930  008E  00F7               	movwf	??_Lcd_Init+1
  1931  008F  30FB               	movlw	251
  1932  0090  00F6               	movwf	??_Lcd_Init
  1933  0091                     u147:
  1934  0091  0BF6               	decfsz	??_Lcd_Init,f
  1935  0092  2891               	goto	u147
  1936  0093  0BF7               	decfsz	??_Lcd_Init+1,f
  1937  0094  2891               	goto	u147
  1938  0095  2896               	nop2
  1939  0096                     l812:
  1940                           
  1941                           ;LCD.c: 19:   Lcd_Cmd(0x30);
  1942  0096  3030               	movlw	48
  1943  0097  120A  118A  21AB  120A  118A  	fcall	_Lcd_Cmd
  1944  009C                     l814:
  1945                           
  1946                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1947  009C  301D               	movlw	29
  1948  009D  00F7               	movwf	??_Lcd_Init+1
  1949  009E  3091               	movlw	145
  1950  009F  00F6               	movwf	??_Lcd_Init
  1951  00A0                     u157:
  1952  00A0  0BF6               	decfsz	??_Lcd_Init,f
  1953  00A1  28A0               	goto	u157
  1954  00A2  0BF7               	decfsz	??_Lcd_Init+1,f
  1955  00A3  28A0               	goto	u157
  1956                           
  1957                           ;LCD.c: 21:   Lcd_Cmd(0x30);
  1958  00A4  3030               	movlw	48
  1959  00A5  120A  118A  21AB  120A  118A  	fcall	_Lcd_Cmd
  1960                           
  1961                           ;LCD.c: 22:   Lcd_Cmd(0x38);
  1962  00AA  3038               	movlw	56
  1963  00AB  120A  118A  21AB  120A  118A  	fcall	_Lcd_Cmd
  1964                           
  1965                           ;LCD.c: 23:   Lcd_Cmd(0x0C);
  1966  00B0  300C               	movlw	12
  1967  00B1  120A  118A  21AB  120A  118A  	fcall	_Lcd_Cmd
  1968                           
  1969                           ;LCD.c: 24:   Lcd_Cmd(0x01);
  1970  00B6  3001               	movlw	1
  1971  00B7  120A  118A  21AB  120A  118A  	fcall	_Lcd_Cmd
  1972                           
  1973                           ;LCD.c: 25:   Lcd_Cmd(0x06);
  1974  00BC  3006               	movlw	6
  1975  00BD  120A  118A  21AB  120A  118A  	fcall	_Lcd_Cmd
  1976  00C2                     l98:
  1977  00C2  0008               	return
  1978  00C3                     __end_of_Lcd_Init:
  1979                           
  1980                           	psect	text14
  1981  01AB                     __ptext14:	
  1982 ;; *************** function _Lcd_Cmd *****************
  1983 ;; Defined at:
  1984 ;;		line 33 in file "LCD.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  a               1    wreg     unsigned char 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  a               1    5[COMMON] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0, pclath, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1998 ;;      Params:         0       0       0       0       0
  1999 ;;      Locals:         1       0       0       0       0
  2000 ;;      Temps:          2       0       0       0       0
  2001 ;;      Totals:         3       0       0       0       0
  2002 ;;Total ram usage:        3 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    2
  2005 ;; This function calls:
  2006 ;;		_Lcd_Port
  2007 ;; This function is called by:
  2008 ;;		_Lcd_Init
  2009 ;;		_Lcd_Clear
  2010 ;;		_Lcd_Set_Cursor
  2011 ;;		_Lcd_Shift_Right
  2012 ;;		_Lcd_Shift_Left
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           
  2017                           ;psect for function _Lcd_Cmd
  2018  01AB                     _Lcd_Cmd:
  2019                           
  2020                           ;incstack = 0
  2021                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2022                           ;Lcd_Cmd@a stored from wreg
  2023  01AB  00F5               	movwf	Lcd_Cmd@a
  2024  01AC                     l708:
  2025                           
  2026                           ;LCD.c: 34:  PORTEbits.RE0 = 0;
  2027  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2028  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  2029  01AE  1009               	bcf	9,0	;volatile
  2030  01AF                     l710:
  2031                           
  2032                           ;LCD.c: 35:  Lcd_Port(a);
  2033  01AF  0875               	movf	Lcd_Cmd@a,w
  2034  01B0  120A  118A  222D  120A  118A  	fcall	_Lcd_Port
  2035  01B5                     l712:
  2036                           
  2037                           ;LCD.c: 36:  PORTEbits.RE2 = 1;
  2038  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2039  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  2040  01B7  1509               	bsf	9,2	;volatile
  2041  01B8                     l714:
  2042                           
  2043                           ;LCD.c: 37:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2044  01B8  300B               	movlw	11
  2045  01B9  00F4               	movwf	??_Lcd_Cmd+1
  2046  01BA  3062               	movlw	98
  2047  01BB  00F3               	movwf	??_Lcd_Cmd
  2048  01BC                     u167:
  2049  01BC  0BF3               	decfsz	??_Lcd_Cmd,f
  2050  01BD  29BC               	goto	u167
  2051  01BE  0BF4               	decfsz	??_Lcd_Cmd+1,f
  2052  01BF  29BC               	goto	u167
  2053  01C0  0000               	nop
  2054  01C1                     l716:
  2055                           
  2056                           ;LCD.c: 38:         PORTEbits.RE2 = 0;
  2057  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2058  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2059  01C3  1109               	bcf	9,2	;volatile
  2060  01C4                     l104:
  2061  01C4  0008               	return
  2062  01C5                     __end_of_Lcd_Cmd:
  2063                           
  2064                           	psect	text15
  2065  022D                     __ptext15:	
  2066 ;; *************** function _Lcd_Port *****************
  2067 ;; Defined at:
  2068 ;;		line 29 in file "LCD.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  a               1    wreg     unsigned char 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;  a               1    2[COMMON] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2082 ;;      Params:         0       0       0       0       0
  2083 ;;      Locals:         1       0       0       0       0
  2084 ;;      Temps:          0       0       0       0       0
  2085 ;;      Totals:         1       0       0       0       0
  2086 ;;Total ram usage:        1 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    1
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_Lcd_Init
  2093 ;;		_Lcd_Cmd
  2094 ;;		_Lcd_Write_Char
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function _Lcd_Port
  2100  022D                     _Lcd_Port:
  2101                           
  2102                           ;incstack = 0
  2103                           ; Regs used in _Lcd_Port: [wreg]
  2104                           ;Lcd_Port@a stored from wreg
  2105  022D  00F2               	movwf	Lcd_Port@a
  2106  022E                     l706:
  2107                           
  2108                           ;LCD.c: 30:     PORTD = a;
  2109  022E  0872               	movf	Lcd_Port@a,w
  2110  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2112  0231  0088               	movwf	8	;volatile
  2113  0232                     l101:
  2114  0232  0008               	return
  2115  0233                     __end_of_Lcd_Port:
  2116                           
  2117                           	psect	text16
  2118  021A                     __ptext16:	
  2119 ;; *************** function _ISR *****************
  2120 ;; Defined at:
  2121 ;;		line 76 in file "main_maestro.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		None
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0
  2137 ;;      Temps:          2       0       0       0       0
  2138 ;;      Totals:         2       0       0       0       0
  2139 ;;Total ram usage:        2 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		Interrupt level 1
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           
  2149                           ;psect for function _ISR
  2150  021A                     _ISR:
  2151  021A                     i1l55:
  2152  021A  0871               	movf	??_ISR+1,w
  2153  021B  008A               	movwf	10
  2154  021C  0E70               	swapf	??_ISR,w
  2155  021D  0083               	movwf	3
  2156  021E  0EFE               	swapf	btemp,f
  2157  021F  0E7E               	swapf	btemp,w
  2158  0220  0009               	retfie
  2159  0221                     __end_of_ISR:
  2160  007E                     btemp	set	126	;btemp
  2161  007E                     wtemp0	set	126
  2162                           
  2163                           	psect	intentry
  2164  0004                     __pintentry:	
  2165                           ;incstack = 0
  2166                           ; Regs used in _ISR: []
  2167                           
  2168  0004                     interrupt_function:
  2169  007E                     saved_w	set	btemp
  2170  0004  00FE               	movwf	btemp
  2171  0005  0E03               	swapf	3,w
  2172  0006  00F0               	movwf	??_ISR
  2173  0007  080A               	movf	10,w
  2174  0008  00F1               	movwf	??_ISR+1
  2175  0009  120A  118A  2A1A   	ljmp	_ISR
  2176                           
  2177                           	psect	config
  2178                           
  2179                           ;Config register CONFIG1 @ 0x2007
  2180                           ;	Oscillator Selection bits
  2181                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2182                           ;	Watchdog Timer Enable bit
  2183                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2184                           ;	Power-up Timer Enable bit
  2185                           ;	PWRTE = OFF, PWRT disabled
  2186                           ;	RE3/MCLR pin function select bit
  2187                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2188                           ;	Code Protection bit
  2189                           ;	CP = OFF, Program memory code protection is disabled
  2190                           ;	Data Code Protection bit
  2191                           ;	CPD = OFF, Data memory code protection is disabled
  2192                           ;	Brown Out Reset Selection bits
  2193                           ;	BOREN = OFF, BOR disabled
  2194                           ;	Internal External Switchover bit
  2195                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2196                           ;	Fail-Safe Clock Monitor Enabled bit
  2197                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2198                           ;	Low Voltage Programming Enable bit
  2199                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2200                           ;	In-Circuit Debugger Mode bit
  2201                           ;	DEBUG = 0x1, unprogrammed default
  2202  2007                     	org	8199
  2203  2007  20D2               	dw	8402
  2204                           
  2205                           ;Config register CONFIG2 @ 0x2008
  2206                           ;	Brown-out Reset Selection bit
  2207                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2208                           ;	Flash Program Memory Self Write Enable bits
  2209                           ;	WRT = OFF, Write protection off
  2210  2008                     	org	8200
  2211  2008  3FFF               	dw	16383

Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      3      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Write_USART_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Show_val_LCD
    _setup->_initOsc
    _Write_USART_String->_Write_USART
    _Show_val_LCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     616
                                              0 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                       _Show_val_LCD
                 _Write_USART_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                    _USART_INTERRUPT
                         _USART_Init
                _USART_Init_BaudRate
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _USART_Init_BaudRate                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_INTERRUPT                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   3     3      0     132
                                              3 COMMON     3     3      0
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Show_val_LCD                                         1     1      0     394
                                             10 COMMON     1     1      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     147
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      30
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     217
                                              6 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      30
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      45
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      30
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Show_val_LCD
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _Write_USART_String
     _Write_USART
   _setup
     _USART_INTERRUPT
     _USART_Init
     _USART_Init_BaudRate
     _initOsc

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      22       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3      17       5       28.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      22      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 11:21:49 2021

                           pc 0002                            l80 0036                            l81 003C  
                          l82 0042                            l66 011A                            l83 0048  
                          l75 001E                            l84 004E                            l76 0076  
                          l69 01DA                            l85 0077                            l77 0024  
                          l78 002A                            l79 0030                            l98 00C2  
                          u40 0205                            u41 0204                            u70 016B  
                          u71 016A                            u80 017D                            u81 017C  
                          u90 0164                            u91 0163                            fsr 0004  
        __size_of_Write_USART 000C              ?_USART_INTERRUPT 0070                           l101 0232  
                         l104 01C4                           l113 0188                           l122 0164  
                         l107 01FD                           l116 01F0                           l151 0219  
                         l160 01FF                           l154 0226                           l163 0209  
                         l157 022C                           l169 01AA                           l710 01AF  
                         l712 01B5                           l720 01DF                           l800 010B  
                         l706 022E                           l714 01B8                           l810 0087  
                         l722 01E5                           l730 001D                           l802 0110  
                         l716 01C1                           l708 01AC                           l812 0096  
                         l724 01E8                           l900 01C5                           l740 0221  
                         l804 0115                           l814 009C                           l806 0078  
                         l726 01ED                           l718 01DC                           l902 01D4  
                         l742 0224                           l734 0054                           l910 00D0  
                         l808 007E                           l728 01F1                           l744 0212  
                         l912 00D5                           l904 00C3                           l770 0205  
                         l746 0227                           l914 00DB                           l906 00C8  
                         l780 00FF                           l772 00F2                           l916 00E0  
                         l908 00CB                           l790 0104                           l782 0100  
                         l774 00F8                           l880 017D                           l872 0166  
                         l768 01FF                           l792 0107                           l784 0101  
                         l776 00FB                           l882 0182                           l874 016B  
                         l890 0157                           l938 005C                           l794 0108  
                         l786 0102                           l778 00FC                           l876 0170  
                         l884 0141                           l892 018A                           l796 0109  
                         l788 0103                           l878 0177                           l886 0144  
                         l894 018C                           l798 010A                           l888 0151  
                         l896 0199                           l898 019D                           u100 01AA  
                         u101 01A9                           u117 00E8                           u127 01EA  
                         u137 0082                           u147 0091                           u157 00A0  
                         u167 01BC                           _ISR 021A                           fsr0 0004  
                         indf 0000   __size_of_Write_USART_String 0022                          ?_ISR 0070  
                        STR_1 0131                          STR_2 0121                          _RCIF 0065  
                        i1l55 021A                          _TRMT 04C1             ?_Lcd_Write_String 0070  
                        _main 00C3                          btemp 007E                          start 000C  
          ??_Lcd_Write_String 0075               __end_of_Lcd_Cmd 01C5                         ??_ISR 0070  
                       ?_main 0070                         _ANSEL 0188                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
     __size_of_Lcd_Set_Cursor 0024                         _TRISA 0085                         _TRISB 0086  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
             __end_of_initOsc 0078                         _setup 00F2                         pclath 000A  
                       status 0003                         wtemp0 007E                   ?_USART_Init 0070  
            __end_of_Lcd_Init 00C3              __end_of_Lcd_Port 0233               __initialization 000F  
                __end_of_main 00F2                        ??_main 0034            __size_of_Lcd_Clear 000D  
                 initOsc@IRCF 0074           _USART_Init_BaudRate 0221                        ?_setup 0070  
                      _ANSELH 0189                     ??_Lcd_Cmd 0073                        _SPBRGH 009A  
     __size_of_Lcd_Write_Char 0016          ?_USART_Init_BaudRate 0070                     ??_initOsc 0072  
                      saved_w 007E           __size_of_USART_Init 0008               Lcd_Set_Cursor@a 0078  
             Lcd_Set_Cursor@b 0076       __end_of__initialization 0018             __end_of_Lcd_Clear 01FE  
              __pcstackCOMMON 0070         ??_USART_Init_BaudRate 0072                 __end_of_setup 011B  
              _Lcd_Set_Cursor 0165                     ?_Lcd_Init 0070                     ?_Lcd_Port 0070  
                     ??_setup 0075                  Write_USART@a 0072                    __pbssBANK0 0020  
                  _data_total 0020                    __pmaintext 00C3                 ??_Write_USART 0072  
                  __pintentry 0004     __size_of_Lcd_Write_String 0025        __end_of_Lcd_Set_Cursor 0189  
  __end_of_Write_USART_String 01AB                    ??_Lcd_Init 0076                    ??_Lcd_Port 0072  
    __size_of_USART_INTERRUPT 0006                    __stringtab 011B                _Lcd_Write_Char 01DB  
                     _Lcd_Cmd 01AB                  ??_USART_Init 0072                 ?_Show_val_LCD 0070  
             ?_Lcd_Set_Cursor 0076                       __ptext1 00F2                       __ptext2 001C  
                     __ptext3 0221                       __ptext4 0212                       __ptext5 0227  
                     __ptext6 0189                       __ptext7 01FE                       __ptext8 01C5  
                     __ptext9 0140                  __size_of_ISR 0007                       _initOsc 001C  
         __end_of_Write_USART 020A            __end_of_USART_Init 021A                       clrloop0 020B  
      __end_of_Lcd_Write_Char 01F1          end_of_initialization 0018                ??_Show_val_LCD 007A  
                   _RCSTAbits 0018                     Lcd_Port@a 0072                     _PORTEbits 0009  
                   _TRISCbits 0087               ?_Lcd_Write_Char 0070             Lcd_Write_String@a 0077  
           Lcd_Write_String@i 0075                     _TXSTAbits 0098             ??_USART_INTERRUPT 0072  
                   _Lcd_Clear 01F1                   _Write_USART 01FE              _Lcd_Write_String 0140  
         start_initialization 000F                   __end_of_ISR 0221             __size_of_Lcd_Init 004B  
           __size_of_Lcd_Port 0006   __end_of_USART_Init_BaudRate 0227                    ?_Lcd_Clear 0070  
             Lcd_Write_Char@a 0074                     ___latbits 0002                 __pcstackBANK0 0034  
        __end_of_Show_val_LCD 01DB                      ?_Lcd_Cmd 0070            _Write_USART_String 0189  
            ??_Lcd_Set_Cursor 0077           ?_Write_USART_String 0070                     __pstrings 011B  
                    ?_initOsc 0070          ??_Write_USART_String 0073                __size_of_setup 0029  
           interrupt_function 0004                     clear_ram0 020A                      _PIE1bits 008C  
                    Lcd_Cmd@a 0075                   ??_Lcd_Clear 0076                   __stringbase 0120  
            ??_Lcd_Write_Char 0073               _USART_INTERRUPT 0227                      _Lcd_Init 0078  
                    _Lcd_Port 022D      __end_of_Lcd_Write_String 0165              __size_of_Lcd_Cmd 001A  
                ?_Write_USART 0070            __end_of__stringtab 0121         __size_of_Show_val_LCD 0016  
            __size_of_initOsc 005C                      __ptext10 01DB                      __ptext11 0165  
                    __ptext12 01F1                      __ptext13 0078                      __ptext14 01AB  
                    __ptext15 022D                      __ptext16 021A                 __size_of_main 002F  
                _Show_val_LCD 01C5       __end_of_USART_INTERRUPT 022D                    _INTCONbits 000B  
         Write_USART_String@a 0074           Write_USART_String@i 0075                      intlevel1 0000  
                   stringcode 011B                    _OSCCONbits 008F  __size_of_USART_Init_BaudRate 0006  
          Lcd_Set_Cursor@temp 0079                      stringdir 011B                      stringtab 011B  
                  _USART_Init 0212  
