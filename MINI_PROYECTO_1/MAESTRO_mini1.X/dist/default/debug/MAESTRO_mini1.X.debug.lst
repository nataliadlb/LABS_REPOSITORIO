

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 20 22:39:11 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0088                     	;# 
   408  0089                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  008F                     	;# 
   413  0090                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0094                     	;# 
   420  0095                     	;# 
   421  0096                     	;# 
   422  0097                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  009F                     	;# 
   431  0105                     	;# 
   432  0107                     	;# 
   433  0108                     	;# 
   434  0109                     	;# 
   435  010C                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  010F                     	;# 
   440  0185                     	;# 
   441  0187                     	;# 
   442  0188                     	;# 
   443  0189                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  0000                     	;# 
   447  0001                     	;# 
   448  0002                     	;# 
   449  0003                     	;# 
   450  0004                     	;# 
   451  0005                     	;# 
   452  0006                     	;# 
   453  0007                     	;# 
   454  0008                     	;# 
   455  0009                     	;# 
   456  000A                     	;# 
   457  000B                     	;# 
   458  000C                     	;# 
   459  000D                     	;# 
   460  000E                     	;# 
   461  000E                     	;# 
   462  000F                     	;# 
   463  0010                     	;# 
   464  0011                     	;# 
   465  0012                     	;# 
   466  0013                     	;# 
   467  0014                     	;# 
   468  0015                     	;# 
   469  0015                     	;# 
   470  0016                     	;# 
   471  0017                     	;# 
   472  0018                     	;# 
   473  0019                     	;# 
   474  001A                     	;# 
   475  001B                     	;# 
   476  001B                     	;# 
   477  001C                     	;# 
   478  001D                     	;# 
   479  001E                     	;# 
   480  001F                     	;# 
   481  0081                     	;# 
   482  0085                     	;# 
   483  0086                     	;# 
   484  0087                     	;# 
   485  0088                     	;# 
   486  0089                     	;# 
   487  008C                     	;# 
   488  008D                     	;# 
   489  008E                     	;# 
   490  008F                     	;# 
   491  0090                     	;# 
   492  0091                     	;# 
   493  0092                     	;# 
   494  0093                     	;# 
   495  0093                     	;# 
   496  0093                     	;# 
   497  0094                     	;# 
   498  0095                     	;# 
   499  0096                     	;# 
   500  0097                     	;# 
   501  0098                     	;# 
   502  0099                     	;# 
   503  009A                     	;# 
   504  009B                     	;# 
   505  009C                     	;# 
   506  009D                     	;# 
   507  009E                     	;# 
   508  009F                     	;# 
   509  0105                     	;# 
   510  0107                     	;# 
   511  0108                     	;# 
   512  0109                     	;# 
   513  010C                     	;# 
   514  010C                     	;# 
   515  010D                     	;# 
   516  010E                     	;# 
   517  010F                     	;# 
   518  0185                     	;# 
   519  0187                     	;# 
   520  0188                     	;# 
   521  0189                     	;# 
   522  018C                     	;# 
   523  018D                     	;# 
   524  0013                     _SSPBUF	set	19
   525  0014                     _SSPCON	set	20
   526  001A                     _RCREG	set	26
   527  0019                     _TXREG	set	25
   528  000B                     _INTCONbits	set	11
   529  0018                     _RCSTAbits	set	24
   530  0009                     _PORTEbits	set	9
   531  0009                     _PORTE	set	9
   532  0007                     _PORTC	set	7
   533  0005                     _PORTA	set	5
   534  0006                     _PORTB	set	6
   535  0008                     _PORTD	set	8
   536  0007                     _PORTCbits	set	7
   537  0065                     _RCIF	set	101
   538  0094                     _SSPSTATbits	set	148
   539  0094                     _SSPSTAT	set	148
   540  008C                     _PIE1bits	set	140
   541  0099                     _SPBRG	set	153
   542  009A                     _SPBRGH	set	154
   543  0098                     _TXSTAbits	set	152
   544  008F                     _OSCCONbits	set	143
   545  0089                     _TRISE	set	137
   546  0088                     _TRISD	set	136
   547  0087                     _TRISCbits	set	135
   548  0086                     _TRISB	set	134
   549  0085                     _TRISA	set	133
   550  043B                     _TRISC3	set	1083
   551  043D                     _TRISC5	set	1085
   552  04C1                     _TRMT	set	1217
   553  0439                     _TRISC1	set	1081
   554  0189                     _ANSELH	set	393
   555  0188                     _ANSEL	set	392
   556                           
   557                           	psect	strings
   558  00DC                     __pstrings:
   559  00DC                     stringtab:
   560  00DC                     __stringtab:
   561  00DC                     stringcode:	
   562                           ;	String table - string pointers are 1 byte each
   563                           
   564  00DC                     stringdir:
   565  00DC  3000               	movlw	high stringdir
   566  00DD  008A               	movwf	10
   567  00DE  0804               	movf	4,w
   568  00DF  0A84               	incf	4,f
   569  00E0  0782               	addwf	2,f
   570  00E1                     __stringbase:
   571  00E1  3400               	retlw	0
   572  00E2                     __end_of__stringtab:
   573  00E2                     STR_1:
   574  00E2  3453               	retlw	83	;'S'
   575  00E3  3431               	retlw	49	;'1'
   576  00E4  343A               	retlw	58	;':'
   577  00E5  3420               	retlw	32	;' '
   578  00E6  3420               	retlw	32	;' '
   579  00E7  3420               	retlw	32	;' '
   580  00E8  3453               	retlw	83	;'S'
   581  00E9  3432               	retlw	50	;'2'
   582  00EA  343A               	retlw	58	;':'
   583  00EB  3420               	retlw	32	;' '
   584  00EC  3420               	retlw	32	;' '
   585  00ED  3420               	retlw	32	;' '
   586  00EE  3453               	retlw	83	;'S'
   587  00EF  3433               	retlw	51	;'3'
   588  00F0  343A               	retlw	58	;':'
   589  00F1  3400               	retlw	0
   590                           
   591                           	psect	cinit
   592  000F                     start_initialization:	
   593                           ; #config settings
   594                           
   595  000F                     __initialization:
   596                           
   597                           ; Clear objects allocated to COMMON
   598  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   599                           
   600                           ; Clear objects allocated to BANK0
   601  0010  1383               	bcf	3,7	;select IRP bank0
   602  0011  3020               	movlw	low __pbssBANK0
   603  0012  0084               	movwf	4
   604  0013  3034               	movlw	low (__pbssBANK0+20)
   605  0014  120A  118A  2111  120A  118A  	fcall	clear_ram0
   606  0019                     end_of_initialization:	
   607                           ;End of C runtime variable initialization code
   608                           
   609  0019                     __end_of__initialization:
   610  0019  0183               	clrf	3
   611  001A  120A  118A  2879   	ljmp	_main	;jump to C main() function
   612                           
   613                           	psect	bssCOMMON
   614  0079                     __pbssCOMMON:
   615  0079                     _hola_esclavo:
   616  0079                     	ds	1
   617                           
   618                           	psect	bssBANK0
   619  0020                     __pbssBANK0:
   620  0020                     _data_total:
   621  0020                     	ds	20
   622                           
   623                           	psect	clrtext
   624  0111                     clear_ram0:	
   625                           ;	Called with FSR containing the base address, and
   626                           ;	W with the last address+1
   627                           
   628  0111  0064               	clrwdt	;clear the watchdog before getting into this loop
   629  0112                     clrloop0:
   630  0112  0180               	clrf	0	;clear RAM location pointed to by FSR
   631  0113  0A84               	incf	4,f	;increment pointer
   632  0114  0604               	xorwf	4,w	;XOR with final address
   633  0115  1903               	btfsc	3,2	;have we reached the end yet?
   634  0116  3400               	retlw	0	;all done for this memory range, return
   635  0117  0604               	xorwf	4,w	;XOR again to restore value
   636  0118  2912               	goto	clrloop0	;do the next byte
   637                           
   638                           	psect	cstackCOMMON
   639  0070                     __pcstackCOMMON:
   640  0070                     ?_setup:
   641  0070                     ?_spiWrite:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_spiRead:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_initOsc:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_ISR:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ??_ISR:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_main:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_spiReceiveWait:	
   660                           ; 1 bytes @ 0x0
   661                           
   662                           
   663                           ; 1 bytes @ 0x0
   664  0070                     	ds	2
   665  0072                     ??_spiWrite:
   666  0072                     ??_spiRead:	
   667                           ; 1 bytes @ 0x2
   668                           
   669  0072                     ??_initOsc:	
   670                           ; 1 bytes @ 0x2
   671                           
   672  0072                     ?_spiInit:	
   673                           ; 1 bytes @ 0x2
   674                           
   675  0072                     ??_spiReceiveWait:	
   676                           ; 1 bytes @ 0x2
   677                           
   678  0072                     spiInit@sDataSample:	
   679                           ; 1 bytes @ 0x2
   680                           
   681  0072                     spiWrite@dat:	
   682                           ; 1 bytes @ 0x2
   683                           
   684                           
   685                           ; 1 bytes @ 0x2
   686  0072                     	ds	1
   687  0073                     spiInit@sClockIdle:
   688                           
   689                           ; 1 bytes @ 0x3
   690  0073                     	ds	1
   691  0074                     initOsc@IRCF:
   692  0074                     spiInit@sTransmitEdge:	
   693                           ; 1 bytes @ 0x4
   694                           
   695                           
   696                           ; 1 bytes @ 0x4
   697  0074                     	ds	1
   698  0075                     ??_spiInit:
   699  0075                     spiInit@sType:	
   700                           ; 1 bytes @ 0x5
   701                           
   702                           
   703                           ; 1 bytes @ 0x5
   704  0075                     	ds	1
   705  0076                     ??_setup:
   706  0076                     ??_main:	
   707                           ; 1 bytes @ 0x6
   708                           
   709                           
   710                           ; 1 bytes @ 0x6
   711  0076                     	ds	3
   712                           
   713                           	psect	maintext
   714  0079                     __pmaintext:	
   715 ;;
   716 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   717 ;;
   718 ;; *************** function _main *****************
   719 ;; Defined at:
   720 ;;		line 83 in file "main_maestro.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   729 ;; Tracked objects:
   730 ;;		On entry : B00/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         0       0       0       0       0
   735 ;;      Locals:         0       0       0       0       0
   736 ;;      Temps:          3       0       0       0       0
   737 ;;      Totals:         3       0       0       0       0
   738 ;;Total ram usage:        3 bytes
   739 ;; Hardware stack levels required when called:    3
   740 ;; This function calls:
   741 ;;		_setup
   742 ;;		_spiRead
   743 ;;		_spiWrite
   744 ;; This function is called by:
   745 ;;		Startup code after reset
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _main
   751  0079                     _main:
   752  0079                     l976:	
   753                           ;incstack = 0
   754                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   755                           
   756                           
   757                           ;main_maestro.c: 84:     setup();
   758  0079  120A  118A  20B7  120A  118A  	fcall	_setup
   759  007E                     l978:
   760                           
   761                           ;main_maestro.c: 94:         PORTCbits.RC1 = 0;
   762  007E  1283               	bcf	3,5	;RP0=0, select bank0
   763  007F  1303               	bcf	3,6	;RP1=0, select bank0
   764  0080  1087               	bcf	7,1	;volatile
   765  0081                     l980:
   766                           
   767                           ;main_maestro.c: 95:        _delay((unsigned long)((1)*(8000000/4000.0)));
   768  0081  3003               	movlw	3
   769  0082  00F7               	movwf	??_main+1
   770  0083  3097               	movlw	151
   771  0084  00F6               	movwf	??_main
   772  0085                     u117:
   773  0085  0BF6               	decfsz	??_main,f
   774  0086  2885               	goto	u117
   775  0087  0BF7               	decfsz	??_main+1,f
   776  0088  2885               	goto	u117
   777  0089  288A               	nop2
   778  008A                     l982:
   779                           
   780                           ;main_maestro.c: 97:        spiWrite(PORTD);
   781  008A  1283               	bcf	3,5	;RP0=0, select bank0
   782  008B  1303               	bcf	3,6	;RP1=0, select bank0
   783  008C  0808               	movf	8,w	;volatile
   784  008D  120A  118A  2127  120A  118A  	fcall	_spiWrite
   785  0092                     l984:
   786                           
   787                           ;main_maestro.c: 98:        PORTB = spiRead();
   788  0092  120A  118A  2108  120A  118A  	fcall	_spiRead
   789  0097  1283               	bcf	3,5	;RP0=0, select bank0
   790  0098  1303               	bcf	3,6	;RP1=0, select bank0
   791  0099  0086               	movwf	6	;volatile
   792  009A                     l986:
   793                           
   794                           ;main_maestro.c: 100:        _delay((unsigned long)((1)*(8000000/4000.0)));
   795  009A  3003               	movlw	3
   796  009B  00F7               	movwf	??_main+1
   797  009C  3097               	movlw	151
   798  009D  00F6               	movwf	??_main
   799  009E                     u127:
   800  009E  0BF6               	decfsz	??_main,f
   801  009F  289E               	goto	u127
   802  00A0  0BF7               	decfsz	??_main+1,f
   803  00A1  289E               	goto	u127
   804  00A2  28A3               	nop2
   805  00A3                     l988:
   806                           
   807                           ;main_maestro.c: 101:        PORTCbits.RC1 = 1;
   808  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   809  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   810  00A5  1487               	bsf	7,1	;volatile
   811  00A6                     l990:
   812                           
   813                           ;main_maestro.c: 103:        _delay((unsigned long)((100)*(8000000/4000.0)));
   814  00A6  3002               	movlw	2
   815  00A7  00F8               	movwf	??_main+2
   816  00A8  3004               	movlw	4
   817  00A9  00F7               	movwf	??_main+1
   818  00AA  30BA               	movlw	186
   819  00AB  00F6               	movwf	??_main
   820  00AC                     u137:
   821  00AC  0BF6               	decfsz	??_main,f
   822  00AD  28AC               	goto	u137
   823  00AE  0BF7               	decfsz	??_main+1,f
   824  00AF  28AC               	goto	u137
   825  00B0  0BF8               	decfsz	??_main+2,f
   826  00B1  28AC               	goto	u137
   827  00B2  0000               	nop
   828  00B3  287E               	goto	l978
   829  00B4  120A  118A  280C   	ljmp	start
   830  00B7                     __end_of_main:
   831                           
   832                           	psect	text1
   833  0127                     __ptext1:	
   834 ;; *************** function _spiWrite *****************
   835 ;; Defined at:
   836 ;;		line 36 in file "SPI.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;  dat             1    wreg     unsigned char 
   839 ;; Auto vars:     Size  Location     Type
   840 ;;  dat             1    2[COMMON] unsigned char 
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         0       0       0       0       0
   851 ;;      Locals:         1       0       0       0       0
   852 ;;      Temps:          0       0       0       0       0
   853 ;;      Totals:         1       0       0       0       0
   854 ;;Total ram usage:        1 bytes
   855 ;; Hardware stack levels used:    1
   856 ;; Hardware stack levels required when called:    1
   857 ;; This function calls:
   858 ;;		Nothing
   859 ;; This function is called by:
   860 ;;		_main
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           
   865                           ;psect for function _spiWrite
   866  0127                     _spiWrite:
   867                           
   868                           ;incstack = 0
   869                           ; Regs used in _spiWrite: [wreg]
   870                           ;spiWrite@dat stored from wreg
   871  0127  00F2               	movwf	spiWrite@dat
   872  0128                     l798:
   873                           
   874                           ;SPI.c: 36: void spiWrite(char dat);SPI.c: 37: {;SPI.c: 38:     SSPBUF = dat;
   875  0128  0872               	movf	spiWrite@dat,w
   876  0129  1283               	bcf	3,5	;RP0=0, select bank0
   877  012A  1303               	bcf	3,6	;RP1=0, select bank0
   878  012B  0093               	movwf	19	;volatile
   879  012C                     l201:
   880  012C  0008               	return
   881  012D                     __end_of_spiWrite:
   882                           
   883                           	psect	text2
   884  0108                     __ptext2:	
   885 ;; *************** function _spiRead *****************
   886 ;; Defined at:
   887 ;;		line 49 in file "SPI.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      unsigned char 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0, pclath, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   901 ;;      Params:         0       0       0       0       0
   902 ;;      Locals:         0       0       0       0       0
   903 ;;      Temps:          0       0       0       0       0
   904 ;;      Totals:         0       0       0       0       0
   905 ;;Total ram usage:        0 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    2
   908 ;; This function calls:
   909 ;;		_spiReceiveWait
   910 ;; This function is called by:
   911 ;;		_main
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           
   916                           ;psect for function _spiRead
   917  0108                     _spiRead:
   918  0108                     l800:	
   919                           ;incstack = 0
   920                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   921                           
   922                           
   923                           ;SPI.c: 51:     spiReceiveWait();
   924  0108  120A  118A  2119  120A  118A  	fcall	_spiReceiveWait
   925  010D                     l802:
   926                           
   927                           ;SPI.c: 52:     return(SSPBUF);
   928  010D  1283               	bcf	3,5	;RP0=0, select bank0
   929  010E  1303               	bcf	3,6	;RP1=0, select bank0
   930  010F  0813               	movf	19,w	;volatile
   931  0110                     l209:
   932  0110  0008               	return
   933  0111                     __end_of_spiRead:
   934                           
   935                           	psect	text3
   936  0119                     __ptext3:	
   937 ;; *************** function _spiReceiveWait *****************
   938 ;; Defined at:
   939 ;;		line 31 in file "SPI.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		None
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   953 ;;      Params:         0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0
   956 ;;      Totals:         0       0       0       0       0
   957 ;;Total ram usage:        0 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    1
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_spiRead
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function _spiReceiveWait
   969  0119                     _spiReceiveWait:
   970  0119                     l762:	
   971                           ;incstack = 0
   972                           ; Regs used in _spiReceiveWait: []
   973                           
   974  0119                     l195:	
   975                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
   976                           
   977  0119  1683               	bsf	3,5	;RP0=1, select bank1
   978  011A  1303               	bcf	3,6	;RP1=0, select bank1
   979  011B  1C14               	btfss	20,0	;volatile
   980  011C  291E               	goto	u21
   981  011D  291F               	goto	u20
   982  011E                     u21:
   983  011E  2919               	goto	l195
   984  011F                     u20:
   985  011F                     l198:
   986  011F  0008               	return
   987  0120                     __end_of_spiReceiveWait:
   988                           
   989                           	psect	text4
   990  00B7                     __ptext4:	
   991 ;; *************** function _setup *****************
   992 ;; Defined at:
   993 ;;		line 122 in file "main_maestro.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;		None
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1007 ;;      Params:         0       0       0       0       0
  1008 ;;      Locals:         0       0       0       0       0
  1009 ;;      Temps:          0       0       0       0       0
  1010 ;;      Totals:         0       0       0       0       0
  1011 ;;Total ram usage:        0 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    2
  1014 ;; This function calls:
  1015 ;;		_initOsc
  1016 ;;		_spiInit
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           
  1023                           ;psect for function _setup
  1024  00B7                     _setup:
  1025  00B7                     l942:	
  1026                           ;incstack = 0
  1027                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1028                           
  1029                           
  1030                           ;main_maestro.c: 123:     initOsc(7);
  1031  00B7  3007               	movlw	7
  1032  00B8  120A  118A  201D  120A  118A  	fcall	_initOsc
  1033  00BD                     l944:
  1034                           
  1035                           ;main_maestro.c: 124:     ANSEL = 0;
  1036  00BD  1683               	bsf	3,5	;RP0=1, select bank3
  1037  00BE  1703               	bsf	3,6	;RP1=1, select bank3
  1038  00BF  0188               	clrf	8	;volatile
  1039  00C0                     l946:
  1040                           
  1041                           ;main_maestro.c: 125:     ANSELH = 0;
  1042  00C0  0189               	clrf	9	;volatile
  1043  00C1                     l948:
  1044                           
  1045                           ;main_maestro.c: 127:     TRISA = 0;
  1046  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1047  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1048  00C3  0185               	clrf	5	;volatile
  1049  00C4                     l950:
  1050                           
  1051                           ;main_maestro.c: 128:     TRISB = 0;
  1052  00C4  0186               	clrf	6	;volatile
  1053  00C5                     l952:
  1054                           
  1055                           ;main_maestro.c: 129:     TRISCbits.TRISC6 = 0;
  1056  00C5  1307               	bcf	7,6	;volatile
  1057  00C6                     l954:
  1058                           
  1059                           ;main_maestro.c: 130:     TRISCbits.TRISC7 = 1;
  1060  00C6  1787               	bsf	7,7	;volatile
  1061  00C7                     l956:
  1062                           
  1063                           ;main_maestro.c: 131:     TRISC1 = 0;
  1064  00C7  1087               	bcf	7,1	;volatile
  1065  00C8                     l958:
  1066                           
  1067                           ;main_maestro.c: 132:     TRISD = 0;
  1068  00C8  0188               	clrf	8	;volatile
  1069  00C9                     l960:
  1070                           
  1071                           ;main_maestro.c: 133:     TRISE = 0;
  1072  00C9  0189               	clrf	9	;volatile
  1073  00CA                     l962:
  1074                           
  1075                           ;main_maestro.c: 135:     PORTA = 0;
  1076  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1077  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1078  00CC  0185               	clrf	5	;volatile
  1079  00CD                     l964:
  1080                           
  1081                           ;main_maestro.c: 136:     PORTB = 0;
  1082  00CD  0186               	clrf	6	;volatile
  1083  00CE                     l966:
  1084                           
  1085                           ;main_maestro.c: 137:     PORTC = 0;
  1086  00CE  0187               	clrf	7	;volatile
  1087  00CF                     l968:
  1088                           
  1089                           ;main_maestro.c: 138:     PORTD = 0;
  1090  00CF  0188               	clrf	8	;volatile
  1091  00D0                     l970:
  1092                           
  1093                           ;main_maestro.c: 139:     PORTE = 0;
  1094  00D0  0189               	clrf	9	;volatile
  1095  00D1                     l972:
  1096                           
  1097                           ;main_maestro.c: 143:     PORTCbits.RC1 = 1;
  1098  00D1  1487               	bsf	7,1	;volatile
  1099  00D2                     l974:
  1100                           
  1101                           ;main_maestro.c: 151:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK
      +                          _IDLE_LOW, SPI_IDLE_2_ACTIVE);
  1102  00D2  01F2               	clrf	spiInit@sDataSample
  1103  00D3  01F3               	clrf	spiInit@sClockIdle
  1104  00D4  01F4               	clrf	spiInit@sTransmitEdge
  1105  00D5  3020               	movlw	32
  1106  00D6  120A  118A  20F2  120A  118A  	fcall	_spiInit
  1107  00DB                     l66:
  1108  00DB  0008               	return
  1109  00DC                     __end_of_setup:
  1110                           
  1111                           	psect	text5
  1112  00F2                     __ptext5:	
  1113 ;; *************** function _spiInit *****************
  1114 ;; Defined at:
  1115 ;;		line 14 in file "SPI.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;  sType           1    wreg     enum E1264
  1118 ;;  sDataSample     1    2[COMMON] enum E1272
  1119 ;;  sClockIdle      1    3[COMMON] enum E1276
  1120 ;;  sTransmitEdg    1    4[COMMON] enum E1280
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  sType           1    5[COMMON] enum E1264
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1132 ;;      Params:         3       0       0       0       0
  1133 ;;      Locals:         1       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0
  1135 ;;      Totals:         4       0       0       0       0
  1136 ;;Total ram usage:        4 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    1
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_setup
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           
  1147                           ;psect for function _spiInit
  1148  00F2                     _spiInit:
  1149                           
  1150                           ;incstack = 0
  1151                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1152                           ;spiInit@sType stored from wreg
  1153  00F2  00F5               	movwf	spiInit@sType
  1154  00F3                     l932:
  1155                           
  1156                           ;SPI.c: 14: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 15: {;SPI.c: 16:     TRISC5 = 0;
  1157  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  1158  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  1159  00F5  1287               	bcf	7,5	;volatile
  1160                           
  1161                           ;SPI.c: 17:     if(sType & 0b00000100)
  1162  00F6  1D75               	btfss	spiInit@sType,2
  1163  00F7  28F9               	goto	u91
  1164  00F8  28FA               	goto	u90
  1165  00F9                     u91:
  1166  00F9  28FE               	goto	l938
  1167  00FA                     u90:
  1168  00FA                     l934:
  1169                           
  1170                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sTransmitEdge;
  1171  00FA  0874               	movf	spiInit@sTransmitEdge,w
  1172  00FB  0094               	movwf	20	;volatile
  1173  00FC                     l936:
  1174                           
  1175                           ;SPI.c: 20:         TRISC3 = 1;
  1176  00FC  1587               	bsf	7,3	;volatile
  1177                           
  1178                           ;SPI.c: 21:     }
  1179  00FD  2902               	goto	l191
  1180  00FE                     l938:
  1181                           
  1182                           ;SPI.c: 23:     {;SPI.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
  1183  00FE  0872               	movf	spiInit@sDataSample,w
  1184  00FF  0474               	iorwf	spiInit@sTransmitEdge,w
  1185  0100  0094               	movwf	20	;volatile
  1186  0101                     l940:
  1187                           
  1188                           ;SPI.c: 25:         TRISC3 = 0;
  1189  0101  1187               	bcf	7,3	;volatile
  1190  0102                     l191:	
  1191                           ;SPI.c: 26:     }
  1192                           
  1193                           
  1194                           ;SPI.c: 28:     SSPCON = sType | sClockIdle;
  1195  0102  0875               	movf	spiInit@sType,w
  1196  0103  0473               	iorwf	spiInit@sClockIdle,w
  1197  0104  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0105  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0106  0094               	movwf	20	;volatile
  1200  0107                     l192:
  1201  0107  0008               	return
  1202  0108                     __end_of_spiInit:
  1203                           
  1204                           	psect	text6
  1205  001D                     __ptext6:	
  1206 ;; *************** function _initOsc *****************
  1207 ;; Defined at:
  1208 ;;		line 3 in file "Oscilador.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;  IRCF            1    wreg     unsigned char 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  IRCF            1    4[COMMON] unsigned char 
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1222 ;;      Params:         0       0       0       0       0
  1223 ;;      Locals:         1       0       0       0       0
  1224 ;;      Temps:          2       0       0       0       0
  1225 ;;      Totals:         3       0       0       0       0
  1226 ;;Total ram usage:        3 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; Hardware stack levels required when called:    1
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_setup
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           
  1237                           ;psect for function _initOsc
  1238  001D                     _initOsc:
  1239                           
  1240                           ;incstack = 0
  1241                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1242                           ;initOsc@IRCF stored from wreg
  1243  001D  00F4               	movwf	initOsc@IRCF
  1244  001E                     l740:
  1245                           
  1246                           ;Oscilador.c: 5:     switch(IRCF){
  1247  001E  2855               	goto	l744
  1248  001F                     l75:	
  1249                           ;Oscilador.c: 6:         case 0:
  1250                           
  1251                           
  1252                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  1253  001F  1683               	bsf	3,5	;RP0=1, select bank1
  1254  0020  1303               	bcf	3,6	;RP1=0, select bank1
  1255  0021  130F               	bcf	15,6	;volatile
  1256                           
  1257                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  1258  0022  128F               	bcf	15,5	;volatile
  1259                           
  1260                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  1261  0023  120F               	bcf	15,4	;volatile
  1262                           
  1263                           ;Oscilador.c: 10:             break;
  1264  0024  2877               	goto	l76
  1265  0025                     l77:	
  1266                           ;Oscilador.c: 11:          case 1:
  1267                           
  1268                           
  1269                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  1270  0025  1683               	bsf	3,5	;RP0=1, select bank1
  1271  0026  1303               	bcf	3,6	;RP1=0, select bank1
  1272  0027  130F               	bcf	15,6	;volatile
  1273                           
  1274                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  1275  0028  128F               	bcf	15,5	;volatile
  1276                           
  1277                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  1278  0029  160F               	bsf	15,4	;volatile
  1279                           
  1280                           ;Oscilador.c: 15:             break;
  1281  002A  2877               	goto	l76
  1282  002B                     l78:	
  1283                           ;Oscilador.c: 16:         case 2:
  1284                           
  1285                           
  1286                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  1287  002B  1683               	bsf	3,5	;RP0=1, select bank1
  1288  002C  1303               	bcf	3,6	;RP1=0, select bank1
  1289  002D  130F               	bcf	15,6	;volatile
  1290                           
  1291                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  1292  002E  168F               	bsf	15,5	;volatile
  1293                           
  1294                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  1295  002F  120F               	bcf	15,4	;volatile
  1296                           
  1297                           ;Oscilador.c: 20:             break;
  1298  0030  2877               	goto	l76
  1299  0031                     l79:	
  1300                           ;Oscilador.c: 21:         case 3:
  1301                           
  1302                           
  1303                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  1304  0031  1683               	bsf	3,5	;RP0=1, select bank1
  1305  0032  1303               	bcf	3,6	;RP1=0, select bank1
  1306  0033  130F               	bcf	15,6	;volatile
  1307                           
  1308                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  1309  0034  168F               	bsf	15,5	;volatile
  1310                           
  1311                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  1312  0035  160F               	bsf	15,4	;volatile
  1313                           
  1314                           ;Oscilador.c: 25:             break;
  1315  0036  2877               	goto	l76
  1316  0037                     l80:	
  1317                           ;Oscilador.c: 26:         case 4:
  1318                           
  1319                           
  1320                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  1321  0037  1683               	bsf	3,5	;RP0=1, select bank1
  1322  0038  1303               	bcf	3,6	;RP1=0, select bank1
  1323  0039  170F               	bsf	15,6	;volatile
  1324                           
  1325                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  1326  003A  128F               	bcf	15,5	;volatile
  1327                           
  1328                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  1329  003B  120F               	bcf	15,4	;volatile
  1330                           
  1331                           ;Oscilador.c: 30:             break;
  1332  003C  2877               	goto	l76
  1333  003D                     l81:	
  1334                           ;Oscilador.c: 31:         case 5:
  1335                           
  1336                           
  1337                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1338  003D  1683               	bsf	3,5	;RP0=1, select bank1
  1339  003E  1303               	bcf	3,6	;RP1=0, select bank1
  1340  003F  170F               	bsf	15,6	;volatile
  1341                           
  1342                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1343  0040  128F               	bcf	15,5	;volatile
  1344                           
  1345                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1346  0041  160F               	bsf	15,4	;volatile
  1347                           
  1348                           ;Oscilador.c: 35:             break;
  1349  0042  2877               	goto	l76
  1350  0043                     l82:	
  1351                           ;Oscilador.c: 36:         case 6:
  1352                           
  1353                           
  1354                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1355  0043  1683               	bsf	3,5	;RP0=1, select bank1
  1356  0044  1303               	bcf	3,6	;RP1=0, select bank1
  1357  0045  170F               	bsf	15,6	;volatile
  1358                           
  1359                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1360  0046  168F               	bsf	15,5	;volatile
  1361                           
  1362                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1363  0047  120F               	bcf	15,4	;volatile
  1364                           
  1365                           ;Oscilador.c: 40:             break;
  1366  0048  2877               	goto	l76
  1367  0049                     l83:	
  1368                           ;Oscilador.c: 41:         case 7:
  1369                           
  1370                           
  1371                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1372  0049  1683               	bsf	3,5	;RP0=1, select bank1
  1373  004A  1303               	bcf	3,6	;RP1=0, select bank1
  1374  004B  170F               	bsf	15,6	;volatile
  1375                           
  1376                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1377  004C  168F               	bsf	15,5	;volatile
  1378                           
  1379                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1380  004D  160F               	bsf	15,4	;volatile
  1381                           
  1382                           ;Oscilador.c: 45:             break;
  1383  004E  2877               	goto	l76
  1384  004F                     l84:	
  1385                           ;Oscilador.c: 46:         default:
  1386                           
  1387                           
  1388                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1389  004F  1683               	bsf	3,5	;RP0=1, select bank1
  1390  0050  1303               	bcf	3,6	;RP1=0, select bank1
  1391  0051  170F               	bsf	15,6	;volatile
  1392                           
  1393                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1394  0052  168F               	bsf	15,5	;volatile
  1395                           
  1396                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1397  0053  120F               	bcf	15,4	;volatile
  1398                           
  1399                           ;Oscilador.c: 50:             break;
  1400  0054  2877               	goto	l76
  1401  0055                     l744:
  1402  0055  0874               	movf	initOsc@IRCF,w
  1403  0056  00F2               	movwf	??_initOsc
  1404  0057  01F3               	clrf	??_initOsc+1
  1405                           
  1406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1407                           ; Switch size 1, requested type "simple"
  1408                           ; Number of cases is 1, Range of values is 0 to 0
  1409                           ; switch strategies available:
  1410                           ; Name         Instructions Cycles
  1411                           ; simple_byte            4     3 (average)
  1412                           ; direct_byte           11     8 (fixed)
  1413                           ; jumptable            260     6 (fixed)
  1414                           ;	Chosen strategy is simple_byte
  1415  0058  0873               	movf	??_initOsc+1,w
  1416  0059  3A00               	xorlw	0	; case 0
  1417  005A  1903               	skipnz
  1418  005B  285D               	goto	l1024
  1419  005C  284F               	goto	l84
  1420  005D                     l1024:
  1421                           
  1422                           ; Switch size 1, requested type "simple"
  1423                           ; Number of cases is 8, Range of values is 0 to 7
  1424                           ; switch strategies available:
  1425                           ; Name         Instructions Cycles
  1426                           ; simple_byte           25    13 (average)
  1427                           ; direct_byte           32     8 (fixed)
  1428                           ; jumptable            260     6 (fixed)
  1429                           ;	Chosen strategy is simple_byte
  1430  005D  0872               	movf	??_initOsc,w
  1431  005E  3A00               	xorlw	0	; case 0
  1432  005F  1903               	skipnz
  1433  0060  281F               	goto	l75
  1434  0061  3A01               	xorlw	1	; case 1
  1435  0062  1903               	skipnz
  1436  0063  2825               	goto	l77
  1437  0064  3A03               	xorlw	3	; case 2
  1438  0065  1903               	skipnz
  1439  0066  282B               	goto	l78
  1440  0067  3A01               	xorlw	1	; case 3
  1441  0068  1903               	skipnz
  1442  0069  2831               	goto	l79
  1443  006A  3A07               	xorlw	7	; case 4
  1444  006B  1903               	skipnz
  1445  006C  2837               	goto	l80
  1446  006D  3A01               	xorlw	1	; case 5
  1447  006E  1903               	skipnz
  1448  006F  283D               	goto	l81
  1449  0070  3A03               	xorlw	3	; case 6
  1450  0071  1903               	skipnz
  1451  0072  2843               	goto	l82
  1452  0073  3A01               	xorlw	1	; case 7
  1453  0074  1903               	skipnz
  1454  0075  2849               	goto	l83
  1455  0076  284F               	goto	l84
  1456  0077                     l76:
  1457                           
  1458                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1459  0077  140F               	bsf	15,0	;volatile
  1460  0078                     l85:
  1461  0078  0008               	return
  1462  0079                     __end_of_initOsc:
  1463                           
  1464                           	psect	text7
  1465  0120                     __ptext7:	
  1466 ;; *************** function _ISR *****************
  1467 ;; Defined at:
  1468 ;;		line 76 in file "main_maestro.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;		None
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;		None
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		None
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1482 ;;      Params:         0       0       0       0       0
  1483 ;;      Locals:         0       0       0       0       0
  1484 ;;      Temps:          2       0       0       0       0
  1485 ;;      Totals:         2       0       0       0       0
  1486 ;;Total ram usage:        2 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; This function calls:
  1489 ;;		Nothing
  1490 ;; This function is called by:
  1491 ;;		Interrupt level 1
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           
  1496                           ;psect for function _ISR
  1497  0120                     _ISR:
  1498  0120                     i1l55:
  1499  0120  0871               	movf	??_ISR+1,w
  1500  0121  008A               	movwf	10
  1501  0122  0E70               	swapf	??_ISR,w
  1502  0123  0083               	movwf	3
  1503  0124  0EFE               	swapf	btemp,f
  1504  0125  0E7E               	swapf	btemp,w
  1505  0126  0009               	retfie
  1506  0127                     __end_of_ISR:
  1507  007E                     btemp	set	126	;btemp
  1508  007E                     wtemp0	set	126
  1509                           
  1510                           	psect	intentry
  1511  0004                     __pintentry:	
  1512                           ;incstack = 0
  1513                           ; Regs used in _ISR: []
  1514                           
  1515  0004                     interrupt_function:
  1516  007E                     saved_w	set	btemp
  1517  0004  00FE               	movwf	btemp
  1518  0005  0E03               	swapf	3,w
  1519  0006  00F0               	movwf	??_ISR
  1520  0007  080A               	movf	10,w
  1521  0008  00F1               	movwf	??_ISR+1
  1522  0009  120A  118A  2920   	ljmp	_ISR
  1523                           
  1524                           	psect	config
  1525                           
  1526                           ;Config register CONFIG1 @ 0x2007
  1527                           ;	Oscillator Selection bits
  1528                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1529                           ;	Watchdog Timer Enable bit
  1530                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1531                           ;	Power-up Timer Enable bit
  1532                           ;	PWRTE = OFF, PWRT disabled
  1533                           ;	RE3/MCLR pin function select bit
  1534                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1535                           ;	Code Protection bit
  1536                           ;	CP = OFF, Program memory code protection is disabled
  1537                           ;	Data Code Protection bit
  1538                           ;	CPD = OFF, Data memory code protection is disabled
  1539                           ;	Brown Out Reset Selection bits
  1540                           ;	BOREN = OFF, BOR disabled
  1541                           ;	Internal External Switchover bit
  1542                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1543                           ;	Fail-Safe Clock Monitor Enabled bit
  1544                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1545                           ;	Low Voltage Programming Enable bit
  1546                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1547                           ;	In-Circuit Debugger Mode bit
  1548                           ;	DEBUG = 0x1, unprogrammed default
  1549  2007                     	org	8199
  1550  2007  20D6               	dw	8406
  1551                           
  1552                           ;Config register CONFIG2 @ 0x2008
  1553                           ;	Brown-out Reset Selection bit
  1554                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1555                           ;	Flash Program Memory Self Write Enable bits
  1556                           ;	WRT = OFF, Write protection off
  1557  2008                     	org	8200
  1558  2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      0      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     321
                                              6 COMMON     3     3      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     306
                            _initOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     291
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _initOsc
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 20 22:39:11 2021

                      pc 0002              _SSPSTATbits 0094                       l80 0037  
                     l81 003D                       l82 0043                       l66 00DB  
                     l83 0049                       l75 001F                       l84 004F  
                     l76 0077                       l85 0078                       l77 0025  
                     l78 002B                       l79 0031                       u20 011F  
                     u21 011E                       u90 00FA                       u91 00F9  
                     fsr 0004                      l201 012C                      l209 0110  
                    l191 0102                      l192 0107                      l195 0119  
                    l198 011F                      l800 0108                      l802 010D  
                    l740 001E                      l744 0055                      l762 0119  
                    l940 0101                      l932 00F3                      l934 00FA  
                    l950 00C4                      l942 00B7                      l936 00FC  
                    l960 00C9                      l952 00C5                      l944 00BD  
                    l938 00FE                      l970 00D0                      l962 00CA  
                    l954 00C6                      l946 00C0                      l972 00D1  
                    l964 00CD                      l956 00C7                      l948 00C1  
                    l980 0081                      l974 00D2                      l966 00CE  
                    l958 00C8                      l798 0128                      l990 00A6  
                    l982 008A                      l968 00CF                      l984 0092  
                    l976 0079                      l986 009A                      l978 007E  
                    l988 00A3                      u117 0085                      u127 009E  
                    u137 00AC                      _ISR 0120                      indf 0000  
                   ?_ISR 0070                     l1024 005D                     STR_1 00E2  
                   _RCIF 0065                     i1l55 0120                     _TRMT 04C1  
                   _main 0079                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    _ANSEL 0188  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089                    _TXREG 0019  
        __end_of_initOsc 0079                    _setup 00B7                    pclath 000A  
        __end_of_spiInit 0108          __end_of_spiRead 0111                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00B7  
                 ??_main 0076              initOsc@IRCF 0074                   ?_setup 0070  
                 _ANSELH 0189                   _SPBRGH 009A                   _TRISC1 0439  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                ??_initOsc 0072                   saved_w 007E  
       __end_of_spiWrite 012D                ??_spiInit 0075                ??_spiRead 0072  
__end_of__initialization 0019           __pcstackCOMMON 0070            __end_of_setup 00DC  
                ??_setup 0076               __pbssBANK0 0020               _data_total 0020  
             __pmaintext 0079               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094               __stringtab 00DC                ?_spiWrite 0070  
                __ptext1 0127                  __ptext2 0108                  __ptext3 0119  
                __ptext4 00B7                  __ptext5 00F2                  __ptext6 001D  
                __ptext7 0120             __size_of_ISR 0007                  _initOsc 001D  
                _spiInit 00F2                  _spiRead 0108                  clrloop0 0112  
   end_of_initialization 0019                _RCSTAbits 0018               ??_spiWrite 0072  
              _PORTCbits 0007                _PORTEbits 0009                _TRISCbits 0087  
            spiWrite@dat 0072                _TXSTAbits 0098           _spiReceiveWait 0119  
    start_initialization 000F              __end_of_ISR 0127             _hola_esclavo 0079  
 __end_of_spiReceiveWait 0120              __pbssCOMMON 0079                ___latbits 0002  
        ?_spiReceiveWait 0070        __size_of_spiWrite 0006                __pstrings 00DC  
               ?_initOsc 0070                 ?_spiInit 0072                 ?_spiRead 0070  
         __size_of_setup 0025     spiInit@sTransmitEdge 0074        interrupt_function 0004  
              clear_ram0 0111                 _PIE1bits 008C       spiInit@sDataSample 0072  
            __stringbase 00E1       __end_of__stringtab 00E2         __size_of_initOsc 005C  
       __size_of_spiInit 0016         __size_of_spiRead 0009            __size_of_main 003E  
               _spiWrite 0127             spiInit@sType 0075        spiInit@sClockIdle 0073  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0072  
              stringcode 00DC               _OSCCONbits 008F                 stringdir 00DC  
               stringtab 00DC  
