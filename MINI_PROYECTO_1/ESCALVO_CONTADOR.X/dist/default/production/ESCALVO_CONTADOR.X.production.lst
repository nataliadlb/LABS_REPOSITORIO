

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 15 08:27:38 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0009                     _PORTE	set	9
   285  0008                     _PORTD	set	8
   286  0006                     _PORTB	set	6
   287  0005                     _PORTA	set	5
   288  0007                     _PORTC	set	7
   289  0006                     _PORTBbits	set	6
   290  000B                     _INTCONbits	set	11
   291  008F                     _OSCCONbits	set	143
   292  0096                     _IOCB	set	150
   293  0089                     _TRISE	set	137
   294  0088                     _TRISD	set	136
   295  0087                     _TRISC	set	135
   296  0086                     _TRISB	set	134
   297  0085                     _TRISA	set	133
   298  0189                     _ANSELH	set	393
   299  0188                     _ANSEL	set	392
   300                           
   301                           	psect	cinit
   302  000F                     start_initialization:	
   303                           ; #config settings
   304                           
   305  000F                     __initialization:
   306                           
   307                           ; Clear objects allocated to COMMON
   308  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   309  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   310  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   311  0012                     end_of_initialization:	
   312                           ;End of C runtime variable initialization code
   313                           
   314  0012                     __end_of__initialization:
   315  0012  0183               	clrf	3
   316  0013  120A  118A  28D4   	ljmp	_main	;jump to C main() function
   317                           
   318                           	psect	bssCOMMON
   319  0076                     __pbssCOMMON:
   320  0076                     _debouncing2:
   321  0076                     	ds	1
   322  0077                     _debouncing1:
   323  0077                     	ds	1
   324  0078                     _contador:
   325  0078                     	ds	1
   326                           
   327                           	psect	cstackCOMMON
   328  0070                     __pcstackCOMMON:
   329  0070                     ?_setup:
   330  0070                     ?_Config_INTERRUPT:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_initOsc:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_ISR:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ??_ISR:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_main:	
   343                           ; 1 bytes @ 0x0
   344                           
   345                           
   346                           ; 1 bytes @ 0x0
   347  0070                     	ds	3
   348  0073                     ??_Config_INTERRUPT:
   349  0073                     ??_initOsc:	
   350                           ; 1 bytes @ 0x3
   351                           
   352                           
   353                           ; 1 bytes @ 0x3
   354  0073                     	ds	2
   355  0075                     initOsc@IRCF:
   356                           
   357                           ; 1 bytes @ 0x5
   358  0075                     	ds	1
   359  0076                     ??_setup:
   360  0076                     ??_main:	
   361                           ; 1 bytes @ 0x6
   362                           
   363                           
   364                           	psect	maintext
   365  00D4                     __pmaintext:	
   366                           ; 1 bytes @ 0x6
   367 ;;
   368 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   369 ;;
   370 ;; *************** function _main *****************
   371 ;; Defined at:
   372 ;;		line 91 in file "main_contador.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : B00/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   386 ;;      Params:         0       0       0       0       0
   387 ;;      Locals:         0       0       0       0       0
   388 ;;      Temps:          0       0       0       0       0
   389 ;;      Totals:         0       0       0       0       0
   390 ;;Total ram usage:        0 bytes
   391 ;; Hardware stack levels required when called:    3
   392 ;; This function calls:
   393 ;;		_Config_INTERRUPT
   394 ;;		_setup
   395 ;; This function is called by:
   396 ;;		Startup code after reset
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           
   401                           ;psect for function _main
   402  00D4                     _main:
   403  00D4                     l742:	
   404                           ;incstack = 0
   405                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   406                           
   407                           
   408                           ;main_contador.c: 92:     setup();
   409  00D4  120A  118A  20AA  120A  118A  	fcall	_setup
   410  00D9                     l744:
   411                           
   412                           ;main_contador.c: 93:     Config_INTERRUPT();
   413  00D9  120A  118A  20E2  120A  118A  	fcall	_Config_INTERRUPT
   414  00DE                     l57:	
   415                           ;main_contador.c: 98:     while (1) {
   416                           
   417  00DE                     l58:	
   418                           ;main_contador.c: 99:     }
   419                           
   420  00DE  28DE               	goto	l57
   421  00DF  120A  118A  280C   	ljmp	start
   422  00E2                     __end_of_main:
   423                           
   424                           	psect	text1
   425  00AA                     __ptext1:	
   426 ;; *************** function _setup *****************
   427 ;; Defined at:
   428 ;;		line 108 in file "main_contador.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   442 ;;      Params:         0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0
   445 ;;      Totals:         0       0       0       0       0
   446 ;;Total ram usage:        0 bytes
   447 ;; Hardware stack levels used:    1
   448 ;; Hardware stack levels required when called:    2
   449 ;; This function calls:
   450 ;;		_initOsc
   451 ;; This function is called by:
   452 ;;		_main
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           
   457                           ;psect for function _setup
   458  00AA                     _setup:
   459  00AA                     l684:	
   460                           ;incstack = 0
   461                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   462                           
   463                           
   464                           ;main_contador.c: 109:     initOsc(0b00000111);
   465  00AA  3007               	movlw	7
   466  00AB  120A  118A  2016  120A  118A  	fcall	_initOsc
   467  00B0                     l686:
   468                           
   469                           ;main_contador.c: 110:     ANSEL = 0;
   470  00B0  1683               	bsf	3,5	;RP0=1, select bank3
   471  00B1  1703               	bsf	3,6	;RP1=1, select bank3
   472  00B2  0188               	clrf	8	;volatile
   473  00B3                     l688:
   474                           
   475                           ;main_contador.c: 111:     ANSELH = 0;
   476  00B3  0189               	clrf	9	;volatile
   477  00B4                     l690:
   478                           
   479                           ;main_contador.c: 112:     TRISA = 0;
   480  00B4  1683               	bsf	3,5	;RP0=1, select bank1
   481  00B5  1303               	bcf	3,6	;RP1=0, select bank1
   482  00B6  0185               	clrf	5	;volatile
   483  00B7                     l692:
   484                           
   485                           ;main_contador.c: 113:     PORTA = 0;
   486  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   487  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   488  00B9  0185               	clrf	5	;volatile
   489  00BA                     l694:
   490                           
   491                           ;main_contador.c: 114:     TRISB = 0b00000011;
   492  00BA  3003               	movlw	3
   493  00BB  1683               	bsf	3,5	;RP0=1, select bank1
   494  00BC  1303               	bcf	3,6	;RP1=0, select bank1
   495  00BD  0086               	movwf	6	;volatile
   496  00BE                     l696:
   497                           
   498                           ;main_contador.c: 115:     PORTB = 0;
   499  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   500  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   501  00C0  0186               	clrf	6	;volatile
   502  00C1                     l698:
   503                           
   504                           ;main_contador.c: 116:     TRISC = 0;
   505  00C1  1683               	bsf	3,5	;RP0=1, select bank1
   506  00C2  1303               	bcf	3,6	;RP1=0, select bank1
   507  00C3  0187               	clrf	7	;volatile
   508  00C4                     l700:
   509                           
   510                           ;main_contador.c: 117:     PORTC = 0;
   511  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   512  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   513  00C6  0187               	clrf	7	;volatile
   514  00C7                     l702:
   515                           
   516                           ;main_contador.c: 118:     TRISD = 0;
   517  00C7  1683               	bsf	3,5	;RP0=1, select bank1
   518  00C8  1303               	bcf	3,6	;RP1=0, select bank1
   519  00C9  0188               	clrf	8	;volatile
   520  00CA                     l704:
   521                           
   522                           ;main_contador.c: 119:     PORTD = 0;
   523  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   524  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   525  00CC  0188               	clrf	8	;volatile
   526  00CD                     l706:
   527                           
   528                           ;main_contador.c: 120:     TRISE = 0;
   529  00CD  1683               	bsf	3,5	;RP0=1, select bank1
   530  00CE  1303               	bcf	3,6	;RP1=0, select bank1
   531  00CF  0189               	clrf	9	;volatile
   532  00D0                     l708:
   533                           
   534                           ;main_contador.c: 121:     PORTE = 0;
   535  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   536  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   537  00D2  0189               	clrf	9	;volatile
   538  00D3                     l63:
   539  00D3  0008               	return
   540  00D4                     __end_of_setup:
   541                           
   542                           	psect	text2
   543  0016                     __ptext2:	
   544 ;; *************** function _initOsc *****************
   545 ;; Defined at:
   546 ;;		line 3 in file "Oscilador.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;  IRCF            1    wreg     unsigned char 
   549 ;; Auto vars:     Size  Location     Type
   550 ;;  IRCF            1    5[COMMON] unsigned char 
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   560 ;;      Params:         0       0       0       0       0
   561 ;;      Locals:         1       0       0       0       0
   562 ;;      Temps:          2       0       0       0       0
   563 ;;      Totals:         3       0       0       0       0
   564 ;;Total ram usage:        3 bytes
   565 ;; Hardware stack levels used:    1
   566 ;; Hardware stack levels required when called:    1
   567 ;; This function calls:
   568 ;;		Nothing
   569 ;; This function is called by:
   570 ;;		_setup
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           
   575                           ;psect for function _initOsc
   576  0016                     _initOsc:
   577                           
   578                           ;incstack = 0
   579                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   580                           ;initOsc@IRCF stored from wreg
   581  0016  00F5               	movwf	initOsc@IRCF
   582  0017                     l674:
   583                           
   584                           ;Oscilador.c: 5:     switch(IRCF){
   585  0017  284E               	goto	l678
   586  0018                     l72:	
   587                           ;Oscilador.c: 6:         case 0:
   588                           
   589                           
   590                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   591  0018  1683               	bsf	3,5	;RP0=1, select bank1
   592  0019  1303               	bcf	3,6	;RP1=0, select bank1
   593  001A  130F               	bcf	15,6	;volatile
   594                           
   595                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   596  001B  128F               	bcf	15,5	;volatile
   597                           
   598                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   599  001C  120F               	bcf	15,4	;volatile
   600                           
   601                           ;Oscilador.c: 10:             break;
   602  001D  2870               	goto	l73
   603  001E                     l74:	
   604                           ;Oscilador.c: 11:          case 1:
   605                           
   606                           
   607                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   608  001E  1683               	bsf	3,5	;RP0=1, select bank1
   609  001F  1303               	bcf	3,6	;RP1=0, select bank1
   610  0020  130F               	bcf	15,6	;volatile
   611                           
   612                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   613  0021  128F               	bcf	15,5	;volatile
   614                           
   615                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   616  0022  160F               	bsf	15,4	;volatile
   617                           
   618                           ;Oscilador.c: 15:             break;
   619  0023  2870               	goto	l73
   620  0024                     l75:	
   621                           ;Oscilador.c: 16:         case 2:
   622                           
   623                           
   624                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   625  0024  1683               	bsf	3,5	;RP0=1, select bank1
   626  0025  1303               	bcf	3,6	;RP1=0, select bank1
   627  0026  130F               	bcf	15,6	;volatile
   628                           
   629                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   630  0027  168F               	bsf	15,5	;volatile
   631                           
   632                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   633  0028  120F               	bcf	15,4	;volatile
   634                           
   635                           ;Oscilador.c: 20:             break;
   636  0029  2870               	goto	l73
   637  002A                     l76:	
   638                           ;Oscilador.c: 21:         case 3:
   639                           
   640                           
   641                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   642  002A  1683               	bsf	3,5	;RP0=1, select bank1
   643  002B  1303               	bcf	3,6	;RP1=0, select bank1
   644  002C  130F               	bcf	15,6	;volatile
   645                           
   646                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   647  002D  168F               	bsf	15,5	;volatile
   648                           
   649                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   650  002E  160F               	bsf	15,4	;volatile
   651                           
   652                           ;Oscilador.c: 25:             break;
   653  002F  2870               	goto	l73
   654  0030                     l77:	
   655                           ;Oscilador.c: 26:         case 4:
   656                           
   657                           
   658                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   659  0030  1683               	bsf	3,5	;RP0=1, select bank1
   660  0031  1303               	bcf	3,6	;RP1=0, select bank1
   661  0032  170F               	bsf	15,6	;volatile
   662                           
   663                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   664  0033  128F               	bcf	15,5	;volatile
   665                           
   666                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   667  0034  120F               	bcf	15,4	;volatile
   668                           
   669                           ;Oscilador.c: 30:             break;
   670  0035  2870               	goto	l73
   671  0036                     l78:	
   672                           ;Oscilador.c: 31:         case 5:
   673                           
   674                           
   675                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   676  0036  1683               	bsf	3,5	;RP0=1, select bank1
   677  0037  1303               	bcf	3,6	;RP1=0, select bank1
   678  0038  170F               	bsf	15,6	;volatile
   679                           
   680                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
   681  0039  128F               	bcf	15,5	;volatile
   682                           
   683                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
   684  003A  160F               	bsf	15,4	;volatile
   685                           
   686                           ;Oscilador.c: 35:             break;
   687  003B  2870               	goto	l73
   688  003C                     l79:	
   689                           ;Oscilador.c: 36:         case 6:
   690                           
   691                           
   692                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
   693  003C  1683               	bsf	3,5	;RP0=1, select bank1
   694  003D  1303               	bcf	3,6	;RP1=0, select bank1
   695  003E  170F               	bsf	15,6	;volatile
   696                           
   697                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
   698  003F  168F               	bsf	15,5	;volatile
   699                           
   700                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
   701  0040  120F               	bcf	15,4	;volatile
   702                           
   703                           ;Oscilador.c: 40:             break;
   704  0041  2870               	goto	l73
   705  0042                     l80:	
   706                           ;Oscilador.c: 41:         case 7:
   707                           
   708                           
   709                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
   710  0042  1683               	bsf	3,5	;RP0=1, select bank1
   711  0043  1303               	bcf	3,6	;RP1=0, select bank1
   712  0044  170F               	bsf	15,6	;volatile
   713                           
   714                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
   715  0045  168F               	bsf	15,5	;volatile
   716                           
   717                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
   718  0046  160F               	bsf	15,4	;volatile
   719                           
   720                           ;Oscilador.c: 45:             break;
   721  0047  2870               	goto	l73
   722  0048                     l81:	
   723                           ;Oscilador.c: 46:         default:
   724                           
   725                           
   726                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
   727  0048  1683               	bsf	3,5	;RP0=1, select bank1
   728  0049  1303               	bcf	3,6	;RP1=0, select bank1
   729  004A  170F               	bsf	15,6	;volatile
   730                           
   731                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
   732  004B  168F               	bsf	15,5	;volatile
   733                           
   734                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
   735  004C  120F               	bcf	15,4	;volatile
   736                           
   737                           ;Oscilador.c: 50:             break;
   738  004D  2870               	goto	l73
   739  004E                     l678:
   740  004E  0875               	movf	initOsc@IRCF,w
   741  004F  00F3               	movwf	??_initOsc
   742  0050  01F4               	clrf	??_initOsc+1
   743                           
   744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   745                           ; Switch size 1, requested type "simple"
   746                           ; Number of cases is 1, Range of values is 0 to 0
   747                           ; switch strategies available:
   748                           ; Name         Instructions Cycles
   749                           ; simple_byte            4     3 (average)
   750                           ; direct_byte           11     8 (fixed)
   751                           ; jumptable            260     6 (fixed)
   752                           ;	Chosen strategy is simple_byte
   753  0051  0874               	movf	??_initOsc+1,w
   754  0052  3A00               	xorlw	0	; case 0
   755  0053  1903               	skipnz
   756  0054  2856               	goto	l766
   757  0055  2848               	goto	l81
   758  0056                     l766:
   759                           
   760                           ; Switch size 1, requested type "simple"
   761                           ; Number of cases is 8, Range of values is 0 to 7
   762                           ; switch strategies available:
   763                           ; Name         Instructions Cycles
   764                           ; simple_byte           25    13 (average)
   765                           ; direct_byte           32     8 (fixed)
   766                           ; jumptable            260     6 (fixed)
   767                           ;	Chosen strategy is simple_byte
   768  0056  0873               	movf	??_initOsc,w
   769  0057  3A00               	xorlw	0	; case 0
   770  0058  1903               	skipnz
   771  0059  2818               	goto	l72
   772  005A  3A01               	xorlw	1	; case 1
   773  005B  1903               	skipnz
   774  005C  281E               	goto	l74
   775  005D  3A03               	xorlw	3	; case 2
   776  005E  1903               	skipnz
   777  005F  2824               	goto	l75
   778  0060  3A01               	xorlw	1	; case 3
   779  0061  1903               	skipnz
   780  0062  282A               	goto	l76
   781  0063  3A07               	xorlw	7	; case 4
   782  0064  1903               	skipnz
   783  0065  2830               	goto	l77
   784  0066  3A01               	xorlw	1	; case 5
   785  0067  1903               	skipnz
   786  0068  2836               	goto	l78
   787  0069  3A03               	xorlw	3	; case 6
   788  006A  1903               	skipnz
   789  006B  283C               	goto	l79
   790  006C  3A01               	xorlw	1	; case 7
   791  006D  1903               	skipnz
   792  006E  2842               	goto	l80
   793  006F  2848               	goto	l81
   794  0070                     l73:
   795                           
   796                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
   797  0070  140F               	bsf	15,0	;volatile
   798  0071                     l82:
   799  0071  0008               	return
   800  0072                     __end_of_initOsc:
   801                           
   802                           	psect	text3
   803  00E2                     __ptext3:	
   804 ;; *************** function _Config_INTERRUPT *****************
   805 ;; Defined at:
   806 ;;		line 125 in file "main_contador.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;		None
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   820 ;;      Params:         0       0       0       0       0
   821 ;;      Locals:         0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0
   823 ;;      Totals:         0       0       0       0       0
   824 ;;Total ram usage:        0 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    1
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		_main
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           
   835                           ;psect for function _Config_INTERRUPT
   836  00E2                     _Config_INTERRUPT:
   837  00E2                     l710:	
   838                           ;incstack = 0
   839                           ; Regs used in _Config_INTERRUPT: [wreg]
   840                           
   841                           
   842                           ;main_contador.c: 126:     INTCONbits.GIE = 1;
   843  00E2  178B               	bsf	11,7	;volatile
   844                           
   845                           ;main_contador.c: 127:     INTCONbits.RBIE = 1;
   846  00E3  158B               	bsf	11,3	;volatile
   847                           
   848                           ;main_contador.c: 128:     INTCONbits.RBIF = 0;
   849  00E4  100B               	bcf	11,0	;volatile
   850  00E5                     l712:
   851                           
   852                           ;main_contador.c: 129:     IOCB = 0b00000011;
   853  00E5  3003               	movlw	3
   854  00E6  1683               	bsf	3,5	;RP0=1, select bank1
   855  00E7  1303               	bcf	3,6	;RP1=0, select bank1
   856  00E8  0096               	movwf	22	;volatile
   857  00E9                     l66:
   858  00E9  0008               	return
   859  00EA                     __end_of_Config_INTERRUPT:
   860                           
   861                           	psect	text4
   862  0072                     __ptext4:	
   863 ;; *************** function _ISR *****************
   864 ;; Defined at:
   865 ;;		line 62 in file "main_contador.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, status,2, status,0
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   879 ;;      Params:         0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0
   881 ;;      Temps:          3       0       0       0       0
   882 ;;      Totals:         3       0       0       0       0
   883 ;;Total ram usage:        3 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		Interrupt level 1
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _ISR
   894  0072                     _ISR:
   895  0072                     i1l714:
   896                           
   897                           ;main_contador.c: 64:     if (INTCONbits.RBIF == 1){
   898  0072  1C0B               	btfss	11,0	;volatile
   899  0073  2875               	goto	u1_21
   900  0074  2876               	goto	u1_20
   901  0075                     u1_21:
   902  0075  28A3               	goto	i1l52
   903  0076                     u1_20:
   904  0076                     i1l716:
   905                           
   906                           ;main_contador.c: 66:             if (PORTBbits.RB0 == 1){
   907  0076  1283               	bcf	3,5	;RP0=0, select bank0
   908  0077  1303               	bcf	3,6	;RP1=0, select bank0
   909  0078  1C06               	btfss	6,0	;volatile
   910  0079  287B               	goto	u2_21
   911  007A  287C               	goto	u2_20
   912  007B                     u2_21:
   913  007B  287E               	goto	i1l48
   914  007C                     u2_20:
   915  007C                     i1l718:
   916                           
   917                           ;main_contador.c: 67:                 debouncing1 = 1;
   918  007C  01F7               	clrf	_debouncing1
   919  007D  0AF7               	incf	_debouncing1,f
   920  007E                     i1l48:	
   921                           ;main_contador.c: 69:             }
   922                           
   923                           
   924                           ;main_contador.c: 70:             if (PORTBbits.RB1 == 1){
   925  007E  1C86               	btfss	6,1	;volatile
   926  007F  2881               	goto	u3_21
   927  0080  2882               	goto	u3_20
   928  0081                     u3_21:
   929  0081  2884               	goto	i1l49
   930  0082                     u3_20:
   931  0082                     i1l720:
   932                           
   933                           ;main_contador.c: 71:                 debouncing2 = 1;
   934  0082  01F6               	clrf	_debouncing2
   935  0083  0AF6               	incf	_debouncing2,f
   936  0084                     i1l49:	
   937                           ;main_contador.c: 73:             }
   938                           
   939                           
   940                           ;main_contador.c: 74:             if(PORTBbits.RB0 == 0 && debouncing1 == 1){
   941  0084  1806               	btfsc	6,0	;volatile
   942  0085  2887               	goto	u4_21
   943  0086  2888               	goto	u4_20
   944  0087                     u4_21:
   945  0087  2894               	goto	i1l730
   946  0088                     u4_20:
   947  0088                     i1l722:
   948  0088  0377               	decf	_debouncing1,w
   949  0089  1D03               	btfss	3,2
   950  008A  288C               	goto	u5_21
   951  008B  288D               	goto	u5_20
   952  008C                     u5_21:
   953  008C  2894               	goto	i1l730
   954  008D                     u5_20:
   955  008D                     i1l724:
   956                           
   957                           ;main_contador.c: 75:                 contador++;
   958  008D  3001               	movlw	1
   959  008E  00F0               	movwf	??_ISR
   960  008F  0870               	movf	??_ISR,w
   961  0090  07F8               	addwf	_contador,f
   962  0091                     i1l726:
   963                           
   964                           ;main_contador.c: 76:                 PORTC = contador;
   965  0091  0878               	movf	_contador,w
   966  0092  0087               	movwf	7	;volatile
   967  0093                     i1l728:
   968                           
   969                           ;main_contador.c: 77:                 debouncing1 = 0;
   970  0093  01F7               	clrf	_debouncing1
   971  0094                     i1l730:
   972                           
   973                           ;main_contador.c: 79:             if(PORTBbits.RB1 == 0 && debouncing2 == 1){
   974  0094  1886               	btfsc	6,1	;volatile
   975  0095  2897               	goto	u6_21
   976  0096  2898               	goto	u6_20
   977  0097                     u6_21:
   978  0097  28A2               	goto	i1l740
   979  0098                     u6_20:
   980  0098                     i1l732:
   981  0098  0376               	decf	_debouncing2,w
   982  0099  1D03               	btfss	3,2
   983  009A  289C               	goto	u7_21
   984  009B  289D               	goto	u7_20
   985  009C                     u7_21:
   986  009C  28A2               	goto	i1l740
   987  009D                     u7_20:
   988  009D                     i1l734:
   989                           
   990                           ;main_contador.c: 80:                 contador--;
   991  009D  3001               	movlw	1
   992  009E  02F8               	subwf	_contador,f
   993  009F                     i1l736:
   994                           
   995                           ;main_contador.c: 81:                 PORTC = contador;
   996  009F  0878               	movf	_contador,w
   997  00A0  0087               	movwf	7	;volatile
   998  00A1                     i1l738:
   999                           
  1000                           ;main_contador.c: 82:                 debouncing2 = 0;
  1001  00A1  01F6               	clrf	_debouncing2
  1002  00A2                     i1l740:
  1003                           
  1004                           ;main_contador.c: 84:             INTCONbits.RBIF = 0;
  1005  00A2  100B               	bcf	11,0	;volatile
  1006  00A3                     i1l52:
  1007  00A3  0872               	movf	??_ISR+2,w
  1008  00A4  008A               	movwf	10
  1009  00A5  0E71               	swapf	??_ISR+1,w
  1010  00A6  0083               	movwf	3
  1011  00A7  0EFE               	swapf	btemp,f
  1012  00A8  0E7E               	swapf	btemp,w
  1013  00A9  0009               	retfie
  1014  00AA                     __end_of_ISR:
  1015  007E                     btemp	set	126	;btemp
  1016  007E                     wtemp0	set	126
  1017                           
  1018                           	psect	intentry
  1019  0004                     __pintentry:	
  1020                           ;incstack = 0
  1021                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1022                           
  1023  0004                     interrupt_function:
  1024  007E                     saved_w	set	btemp
  1025  0004  00FE               	movwf	btemp
  1026  0005  0E03               	swapf	3,w
  1027  0006  00F1               	movwf	??_ISR+1
  1028  0007  080A               	movf	10,w
  1029  0008  00F2               	movwf	??_ISR+2
  1030  0009  120A  118A  2872   	ljmp	_ISR
  1031                           
  1032                           	psect	config
  1033                           
  1034                           ;Config register CONFIG1 @ 0x2007
  1035                           ;	Oscillator Selection bits
  1036                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1037                           ;	Watchdog Timer Enable bit
  1038                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1039                           ;	Power-up Timer Enable bit
  1040                           ;	PWRTE = OFF, PWRT disabled
  1041                           ;	RE3/MCLR pin function select bit
  1042                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1043                           ;	Code Protection bit
  1044                           ;	CP = OFF, Program memory code protection is disabled
  1045                           ;	Data Code Protection bit
  1046                           ;	CPD = OFF, Data memory code protection is disabled
  1047                           ;	Brown Out Reset Selection bits
  1048                           ;	BOREN = OFF, BOR disabled
  1049                           ;	Internal External Switchover bit
  1050                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1051                           ;	Fail-Safe Clock Monitor Enabled bit
  1052                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1053                           ;	Low Voltage Programming Enable bit
  1054                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1055                           ;	In-Circuit Debugger Mode bit
  1056                           ;	DEBUG = 0x1, unprogrammed default
  1057  2007                     	org	8199
  1058  2007  20D4               	dw	8404
  1059                           
  1060                           ;Config register CONFIG2 @ 0x2008
  1061                           ;	Brown-out Reset Selection bit
  1062                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1063                           ;	Flash Program Memory Self Write Enable bits
  1064                           ;	WRT = OFF, Write protection off
  1065  2008                     	org	8200
  1066  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_initOsc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                   _Config_INTERRUPT
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_INTERRUPT
   _setup
     _initOsc

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 15 08:27:38 2021

                       l63 00D3                         l80 0042                         l72 0018  
                       l81 0048                         l73 0070                         l57 00DE  
                       l66 00E9                         l82 0071                         l74 001E  
                       l58 00DE                         l75 0024                         l76 002A  
                       l77 0030                         l78 0036                         l79 003C  
                      l700 00C4                        l710 00E2                        l702 00C7  
                      l712 00E5                        l704 00CA                        l706 00CD  
                      l708 00D0                        l742 00D4                        l744 00D9  
                      l674 0017                        l690 00B4                        l692 00B7  
                      l684 00AA                        l766 0056                        l678 004E  
                      l694 00BA                        l686 00B0                        l696 00BE  
                      l688 00B3                        l698 00C1                        _ISR 0072  
                     ?_ISR 0070                       _IOCB 0096                       i1l52 00A3  
                     i1l48 007E                       i1l49 0084                       u1_20 0076  
                     u1_21 0075                       u2_20 007C                       u2_21 007B  
                     u3_20 0082                       u3_21 0081                       u4_20 0088  
                     u4_21 0087                       u5_20 008D                       u5_21 008C  
                     u6_20 0098                       u6_21 0097                       u7_20 009D  
                     u7_21 009C                       _main 00D4                       btemp 007E  
 __end_of_Config_INTERRUPT 00EA                       start 000C                      ??_ISR 0070  
                    ?_main 0070                      _ANSEL 0188                      i1l720 0082  
                    i1l722 0088                      i1l730 0094                      i1l714 0072  
                    i1l732 0098                      i1l740 00A2                      i1l724 008D  
                    i1l716 0076                      i1l734 009D                      i1l726 0091  
                    i1l718 007C                      i1l736 009F                      i1l728 0093  
                    i1l738 00A1                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089            __end_of_initOsc 0072  
                    _setup 00AA                      pclath 000A                      status 0003  
                    wtemp0 007E            __initialization 000F               __end_of_main 00E2  
                   ??_main 0076                initOsc@IRCF 0075                     ?_setup 0070  
                   _ANSELH 0189                  ??_initOsc 0073                     saved_w 007E  
  __end_of__initialization 0012             __pcstackCOMMON 0070              __end_of_setup 00D4  
                  ??_setup 0076          ?_Config_INTERRUPT 0070                 __pmaintext 00D4  
       ??_Config_INTERRUPT 0073                 __pintentry 0004                    __ptext1 00AA  
                  __ptext2 0016                    __ptext3 00E2                    __ptext4 0072  
             __size_of_ISR 0038                    _initOsc 0016       end_of_initialization 0012  
                _PORTBbits 0006        start_initialization 000F                __end_of_ISR 00AA  
__size_of_Config_INTERRUPT 0008                __pbssCOMMON 0076                  ___latbits 0002  
              _debouncing1 0077                _debouncing2 0076                   ?_initOsc 0070  
           __size_of_setup 002A          interrupt_function 0004           _Config_INTERRUPT 00E2  
         __size_of_initOsc 005C                   _contador 0078              __size_of_main 000E  
               _INTCONbits 000B                   intlevel1 0000                 _OSCCONbits 008F  
