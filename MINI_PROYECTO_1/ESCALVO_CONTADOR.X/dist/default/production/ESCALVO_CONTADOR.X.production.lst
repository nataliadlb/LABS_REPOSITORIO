

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 18 21:01:45 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0013                     _SSPBUF	set	19
   368  0014                     _SSPCON	set	20
   369  000C                     _PIR1bits	set	12
   370  0009                     _PORTE	set	9
   371  0007                     _PORTC	set	7
   372  0006                     _PORTB	set	6
   373  0005                     _PORTA	set	5
   374  0008                     _PORTD	set	8
   375  0006                     _PORTBbits	set	6
   376  000B                     _INTCONbits	set	11
   377  0063                     _SSPIF	set	99
   378  0094                     _SSPSTATbits	set	148
   379  0094                     _SSPSTAT	set	148
   380  008F                     _OSCCONbits	set	143
   381  008C                     _PIE1bits	set	140
   382  0096                     _IOCB	set	150
   383  0085                     _TRISAbits	set	133
   384  0089                     _TRISE	set	137
   385  0088                     _TRISD	set	136
   386  0087                     _TRISC	set	135
   387  0086                     _TRISB	set	134
   388  0085                     _TRISA	set	133
   389  043B                     _TRISC3	set	1083
   390  043D                     _TRISC5	set	1085
   391  0189                     _ANSELH	set	393
   392  0188                     _ANSEL	set	392
   393                           
   394                           	psect	cinit
   395  000F                     start_initialization:	
   396                           ; #config settings
   397                           
   398  000F                     __initialization:
   399                           
   400                           ; Clear objects allocated to COMMON
   401  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   402  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   403  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   404  0012                     end_of_initialization:	
   405                           ;End of C runtime variable initialization code
   406                           
   407  0012                     __end_of__initialization:
   408  0012  0183               	clrf	3
   409  0013  120A  118A  2919   	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	bssCOMMON
   412  0077                     __pbssCOMMON:
   413  0077                     _debouncing2:
   414  0077                     	ds	1
   415  0078                     _debouncing1:
   416  0078                     	ds	1
   417  0079                     _contador:
   418  0079                     	ds	1
   419                           
   420                           	psect	cstackCOMMON
   421  0070                     __pcstackCOMMON:
   422  0070                     ?_spiRead:
   423  0070                     ??_spiRead:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_spiWrite:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ??_spiWrite:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_setup:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_initOsc:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_Config_INTERRUPT:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_ISR:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_main:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_spiReceiveWait:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ??_spiReceiveWait:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     spiWrite@dat:	
   454                           ; 1 bytes @ 0x0
   455                           
   456                           
   457                           ; 1 bytes @ 0x0
   458  0070                     	ds	1
   459  0071                     ??_ISR:
   460                           
   461                           ; 1 bytes @ 0x1
   462  0071                     	ds	3
   463  0074                     ??_initOsc:
   464  0074                     ??_Config_INTERRUPT:	
   465                           ; 1 bytes @ 0x4
   466                           
   467  0074                     ?_spiInit:	
   468                           ; 1 bytes @ 0x4
   469                           
   470  0074                     spiInit@sDataSample:	
   471                           ; 1 bytes @ 0x4
   472                           
   473                           
   474                           ; 1 bytes @ 0x4
   475  0074                     	ds	1
   476  0075                     spiInit@sClockIdle:
   477                           
   478                           ; 1 bytes @ 0x5
   479  0075                     	ds	1
   480  0076                     initOsc@IRCF:
   481  0076                     spiInit@sTransmitEdge:	
   482                           ; 1 bytes @ 0x6
   483                           
   484                           
   485                           ; 1 bytes @ 0x6
   486  0076                     	ds	1
   487  0077                     ??_setup:
   488  0077                     ??_spiInit:	
   489                           ; 1 bytes @ 0x7
   490                           
   491  0077                     ??_main:	
   492                           ; 1 bytes @ 0x7
   493                           
   494                           
   495                           	psect	cstackBANK0
   496  0020                     __pcstackBANK0:	
   497                           ; 1 bytes @ 0x7
   498                           
   499  0020                     spiInit@sType:
   500                           
   501                           ; 1 bytes @ 0x0
   502  0020                     	ds	1
   503                           
   504                           	psect	maintext
   505  0119                     __pmaintext:	
   506 ;;
   507 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   508 ;;
   509 ;; *************** function _main *****************
   510 ;; Defined at:
   511 ;;		line 99 in file "main_contador.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : B00/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   525 ;;      Params:         0       0       0       0       0
   526 ;;      Locals:         0       0       0       0       0
   527 ;;      Temps:          0       0       0       0       0
   528 ;;      Totals:         0       0       0       0       0
   529 ;;Total ram usage:        0 bytes
   530 ;; Hardware stack levels required when called:    5
   531 ;; This function calls:
   532 ;;		_setup
   533 ;; This function is called by:
   534 ;;		Startup code after reset
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           
   539                           ;psect for function _main
   540  0119                     _main:
   541  0119                     l967:	
   542                           ;incstack = 0
   543                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   544                           
   545                           
   546                           ;main_contador.c: 100:     contador = 0;
   547  0119  01F9               	clrf	_contador
   548  011A                     l969:
   549                           
   550                           ;main_contador.c: 101:     setup();
   551  011A  120A  118A  20C1  120A  118A  	fcall	_setup
   552  011F                     l72:	
   553                           ;main_contador.c: 107:     while (1) {
   554                           
   555  011F                     l73:	
   556                           ;main_contador.c: 109:     }
   557                           
   558  011F  291F               	goto	l72
   559  0120  120A  118A  280C   	ljmp	start
   560  0123                     __end_of_main:
   561                           
   562                           	psect	text1
   563  00C1                     __ptext1:	
   564 ;; *************** function _setup *****************
   565 ;; Defined at:
   566 ;;		line 118 in file "main_contador.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    4
   587 ;; This function calls:
   588 ;;		_Config_INTERRUPT
   589 ;;		_initOsc
   590 ;;		_spiInit
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           
   597                           ;psect for function _setup
   598  00C1                     _setup:
   599  00C1                     l935:	
   600                           ;incstack = 0
   601                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   602                           
   603                           
   604                           ;main_contador.c: 119:     initOsc(0b00000111);
   605  00C1  3007               	movlw	7
   606  00C2  120A  118A  2016  120A  118A  	fcall	_initOsc
   607  00C7                     l937:
   608                           
   609                           ;main_contador.c: 120:     ANSEL = 0;
   610  00C7  1683               	bsf	3,5	;RP0=1, select bank3
   611  00C8  1703               	bsf	3,6	;RP1=1, select bank3
   612  00C9  0188               	clrf	8	;volatile
   613  00CA                     l939:
   614                           
   615                           ;main_contador.c: 121:     ANSELH = 0;
   616  00CA  0189               	clrf	9	;volatile
   617  00CB                     l941:
   618                           
   619                           ;main_contador.c: 122:     TRISA = 0;
   620  00CB  1683               	bsf	3,5	;RP0=1, select bank1
   621  00CC  1303               	bcf	3,6	;RP1=0, select bank1
   622  00CD  0185               	clrf	5	;volatile
   623  00CE                     l943:
   624                           
   625                           ;main_contador.c: 123:     TRISB = 0b00000011;
   626  00CE  3003               	movlw	3
   627  00CF  0086               	movwf	6	;volatile
   628  00D0                     l945:
   629                           
   630                           ;main_contador.c: 124:     TRISC = 0;
   631  00D0  0187               	clrf	7	;volatile
   632  00D1                     l947:
   633                           
   634                           ;main_contador.c: 125:     TRISD = 0;
   635  00D1  0188               	clrf	8	;volatile
   636  00D2                     l949:
   637                           
   638                           ;main_contador.c: 126:     TRISE = 0;
   639  00D2  0189               	clrf	9	;volatile
   640  00D3                     l951:
   641                           
   642                           ;main_contador.c: 127:     PORTA = 0;
   643  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   644  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   645  00D5  0185               	clrf	5	;volatile
   646  00D6                     l953:
   647                           
   648                           ;main_contador.c: 128:     PORTB = 0;
   649  00D6  0186               	clrf	6	;volatile
   650  00D7                     l955:
   651                           
   652                           ;main_contador.c: 129:     PORTC = 0;
   653  00D7  0187               	clrf	7	;volatile
   654  00D8                     l957:
   655                           
   656                           ;main_contador.c: 130:     PORTD = 0;
   657  00D8  0188               	clrf	8	;volatile
   658  00D9                     l959:
   659                           
   660                           ;main_contador.c: 131:     PORTE = 0;
   661  00D9  0189               	clrf	9	;volatile
   662  00DA                     l961:
   663                           
   664                           ;main_contador.c: 132:     Config_INTERRUPT();
   665  00DA  120A  118A  210A  120A  118A  	fcall	_Config_INTERRUPT
   666  00DF                     l963:
   667                           
   668                           ;main_contador.c: 133:     TRISAbits.TRISA5 = 1;
   669  00DF  1683               	bsf	3,5	;RP0=1, select bank1
   670  00E0  1303               	bcf	3,6	;RP1=0, select bank1
   671  00E1  1685               	bsf	5,5	;volatile
   672  00E2                     l965:
   673                           
   674                           ;main_contador.c: 134:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_ID
      +                          LE_LOW, SPI_IDLE_2_ACTIVE);
   675  00E2  01F4               	clrf	spiInit@sDataSample
   676  00E3  01F5               	clrf	spiInit@sClockIdle
   677  00E4  01F6               	clrf	spiInit@sTransmitEdge
   678  00E5  3024               	movlw	36
   679  00E6  120A  118A  20EC  120A  118A  	fcall	_spiInit
   680  00EB                     l78:
   681  00EB  0008               	return
   682  00EC                     __end_of_setup:
   683                           
   684                           	psect	text2
   685  00EC                     __ptext2:	
   686 ;; *************** function _spiInit *****************
   687 ;; Defined at:
   688 ;;		line 14 in file "SPI.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  sType           1    wreg     enum E1264
   691 ;;  sDataSample     1    4[COMMON] enum E1272
   692 ;;  sClockIdle      1    5[COMMON] enum E1276
   693 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  sType           1    0[BANK0 ] enum E1264
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   705 ;;      Params:         3       0       0       0       0
   706 ;;      Locals:         0       1       0       0       0
   707 ;;      Temps:          0       0       0       0       0
   708 ;;      Totals:         3       1       0       0       0
   709 ;;Total ram usage:        4 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    3
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_setup
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           
   720                           ;psect for function _spiInit
   721  00EC                     _spiInit:
   722                           
   723                           ;incstack = 0
   724                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   725                           ;spiInit@sType stored from wreg
   726  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   727  00ED  1303               	bcf	3,6	;RP1=0, select bank0
   728  00EE  00A0               	movwf	spiInit@sType
   729  00EF                     l925:
   730                           
   731                           ;SPI.c: 14: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 15: {;SPI.c: 16:     TRISC5 = 0;
   732  00EF  1683               	bsf	3,5	;RP0=1, select bank1
   733  00F0  1303               	bcf	3,6	;RP1=0, select bank1
   734  00F1  1287               	bcf	7,5	;volatile
   735                           
   736                           ;SPI.c: 17:     if(sType & 0b00000100)
   737  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   738  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   739  00F4  1D20               	btfss	spiInit@sType,2
   740  00F5  28F7               	goto	u121
   741  00F6  28F8               	goto	u120
   742  00F7                     u121:
   743  00F7  28FE               	goto	l931
   744  00F8                     u120:
   745  00F8                     l927:
   746                           
   747                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sTransmitEdge;
   748  00F8  0876               	movf	spiInit@sTransmitEdge,w
   749  00F9  1683               	bsf	3,5	;RP0=1, select bank1
   750  00FA  1303               	bcf	3,6	;RP1=0, select bank1
   751  00FB  0094               	movwf	20	;volatile
   752  00FC                     l929:
   753                           
   754                           ;SPI.c: 20:         TRISC3 = 1;
   755  00FC  1587               	bsf	7,3	;volatile
   756                           
   757                           ;SPI.c: 21:     }
   758  00FD  2904               	goto	l113
   759  00FE                     l931:
   760                           
   761                           ;SPI.c: 23:     {;SPI.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
   762  00FE  0874               	movf	spiInit@sDataSample,w
   763  00FF  0476               	iorwf	spiInit@sTransmitEdge,w
   764  0100  1683               	bsf	3,5	;RP0=1, select bank1
   765  0101  1303               	bcf	3,6	;RP1=0, select bank1
   766  0102  0094               	movwf	20	;volatile
   767  0103                     l933:
   768                           
   769                           ;SPI.c: 25:         TRISC3 = 0;
   770  0103  1187               	bcf	7,3	;volatile
   771  0104                     l113:	
   772                           ;SPI.c: 26:     }
   773                           
   774                           
   775                           ;SPI.c: 28:     SSPCON = sType | sClockIdle;
   776  0104  1283               	bcf	3,5	;RP0=0, select bank0
   777  0105  1303               	bcf	3,6	;RP1=0, select bank0
   778  0106  0820               	movf	spiInit@sType,w
   779  0107  0475               	iorwf	spiInit@sClockIdle,w
   780  0108  0094               	movwf	20	;volatile
   781  0109                     l114:
   782  0109  0008               	return
   783  010A                     __end_of_spiInit:
   784                           
   785                           	psect	text3
   786  0016                     __ptext3:	
   787 ;; *************** function _initOsc *****************
   788 ;; Defined at:
   789 ;;		line 3 in file "Oscilador.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  IRCF            1    wreg     unsigned char 
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  IRCF            1    6[COMMON] unsigned char 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         0       0       0       0       0
   804 ;;      Locals:         1       0       0       0       0
   805 ;;      Temps:          2       0       0       0       0
   806 ;;      Totals:         3       0       0       0       0
   807 ;;Total ram usage:        3 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; Hardware stack levels required when called:    3
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		_setup
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           
   818                           ;psect for function _initOsc
   819  0016                     _initOsc:
   820                           
   821                           ;incstack = 0
   822                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   823                           ;initOsc@IRCF stored from wreg
   824  0016  00F6               	movwf	initOsc@IRCF
   825  0017                     l723:
   826                           
   827                           ;Oscilador.c: 5:     switch(IRCF){
   828  0017  284E               	goto	l727
   829  0018                     l87:	
   830                           ;Oscilador.c: 6:         case 0:
   831                           
   832                           
   833                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   834  0018  1683               	bsf	3,5	;RP0=1, select bank1
   835  0019  1303               	bcf	3,6	;RP1=0, select bank1
   836  001A  130F               	bcf	15,6	;volatile
   837                           
   838                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   839  001B  128F               	bcf	15,5	;volatile
   840                           
   841                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   842  001C  120F               	bcf	15,4	;volatile
   843                           
   844                           ;Oscilador.c: 10:             break;
   845  001D  2870               	goto	l88
   846  001E                     l89:	
   847                           ;Oscilador.c: 11:          case 1:
   848                           
   849                           
   850                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   851  001E  1683               	bsf	3,5	;RP0=1, select bank1
   852  001F  1303               	bcf	3,6	;RP1=0, select bank1
   853  0020  130F               	bcf	15,6	;volatile
   854                           
   855                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   856  0021  128F               	bcf	15,5	;volatile
   857                           
   858                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   859  0022  160F               	bsf	15,4	;volatile
   860                           
   861                           ;Oscilador.c: 15:             break;
   862  0023  2870               	goto	l88
   863  0024                     l90:	
   864                           ;Oscilador.c: 16:         case 2:
   865                           
   866                           
   867                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   868  0024  1683               	bsf	3,5	;RP0=1, select bank1
   869  0025  1303               	bcf	3,6	;RP1=0, select bank1
   870  0026  130F               	bcf	15,6	;volatile
   871                           
   872                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   873  0027  168F               	bsf	15,5	;volatile
   874                           
   875                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   876  0028  120F               	bcf	15,4	;volatile
   877                           
   878                           ;Oscilador.c: 20:             break;
   879  0029  2870               	goto	l88
   880  002A                     l91:	
   881                           ;Oscilador.c: 21:         case 3:
   882                           
   883                           
   884                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   885  002A  1683               	bsf	3,5	;RP0=1, select bank1
   886  002B  1303               	bcf	3,6	;RP1=0, select bank1
   887  002C  130F               	bcf	15,6	;volatile
   888                           
   889                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   890  002D  168F               	bsf	15,5	;volatile
   891                           
   892                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   893  002E  160F               	bsf	15,4	;volatile
   894                           
   895                           ;Oscilador.c: 25:             break;
   896  002F  2870               	goto	l88
   897  0030                     l92:	
   898                           ;Oscilador.c: 26:         case 4:
   899                           
   900                           
   901                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   902  0030  1683               	bsf	3,5	;RP0=1, select bank1
   903  0031  1303               	bcf	3,6	;RP1=0, select bank1
   904  0032  170F               	bsf	15,6	;volatile
   905                           
   906                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   907  0033  128F               	bcf	15,5	;volatile
   908                           
   909                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   910  0034  120F               	bcf	15,4	;volatile
   911                           
   912                           ;Oscilador.c: 30:             break;
   913  0035  2870               	goto	l88
   914  0036                     l93:	
   915                           ;Oscilador.c: 31:         case 5:
   916                           
   917                           
   918                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   919  0036  1683               	bsf	3,5	;RP0=1, select bank1
   920  0037  1303               	bcf	3,6	;RP1=0, select bank1
   921  0038  170F               	bsf	15,6	;volatile
   922                           
   923                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
   924  0039  128F               	bcf	15,5	;volatile
   925                           
   926                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
   927  003A  160F               	bsf	15,4	;volatile
   928                           
   929                           ;Oscilador.c: 35:             break;
   930  003B  2870               	goto	l88
   931  003C                     l94:	
   932                           ;Oscilador.c: 36:         case 6:
   933                           
   934                           
   935                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
   936  003C  1683               	bsf	3,5	;RP0=1, select bank1
   937  003D  1303               	bcf	3,6	;RP1=0, select bank1
   938  003E  170F               	bsf	15,6	;volatile
   939                           
   940                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
   941  003F  168F               	bsf	15,5	;volatile
   942                           
   943                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
   944  0040  120F               	bcf	15,4	;volatile
   945                           
   946                           ;Oscilador.c: 40:             break;
   947  0041  2870               	goto	l88
   948  0042                     l95:	
   949                           ;Oscilador.c: 41:         case 7:
   950                           
   951                           
   952                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
   953  0042  1683               	bsf	3,5	;RP0=1, select bank1
   954  0043  1303               	bcf	3,6	;RP1=0, select bank1
   955  0044  170F               	bsf	15,6	;volatile
   956                           
   957                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
   958  0045  168F               	bsf	15,5	;volatile
   959                           
   960                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
   961  0046  160F               	bsf	15,4	;volatile
   962                           
   963                           ;Oscilador.c: 45:             break;
   964  0047  2870               	goto	l88
   965  0048                     l96:	
   966                           ;Oscilador.c: 46:         default:
   967                           
   968                           
   969                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
   970  0048  1683               	bsf	3,5	;RP0=1, select bank1
   971  0049  1303               	bcf	3,6	;RP1=0, select bank1
   972  004A  170F               	bsf	15,6	;volatile
   973                           
   974                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
   975  004B  168F               	bsf	15,5	;volatile
   976                           
   977                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
   978  004C  120F               	bcf	15,4	;volatile
   979                           
   980                           ;Oscilador.c: 50:             break;
   981  004D  2870               	goto	l88
   982  004E                     l727:
   983  004E  0876               	movf	initOsc@IRCF,w
   984  004F  00F4               	movwf	??_initOsc
   985  0050  01F5               	clrf	??_initOsc+1
   986                           
   987                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   988                           ; Switch size 1, requested type "simple"
   989                           ; Number of cases is 1, Range of values is 0 to 0
   990                           ; switch strategies available:
   991                           ; Name         Instructions Cycles
   992                           ; simple_byte            4     3 (average)
   993                           ; direct_byte           11     8 (fixed)
   994                           ; jumptable            260     6 (fixed)
   995                           ;	Chosen strategy is simple_byte
   996  0051  0875               	movf	??_initOsc+1,w
   997  0052  3A00               	xorlw	0	; case 0
   998  0053  1903               	skipnz
   999  0054  2856               	goto	l991
  1000  0055  2848               	goto	l96
  1001  0056                     l991:
  1002                           
  1003                           ; Switch size 1, requested type "simple"
  1004                           ; Number of cases is 8, Range of values is 0 to 7
  1005                           ; switch strategies available:
  1006                           ; Name         Instructions Cycles
  1007                           ; simple_byte           25    13 (average)
  1008                           ; direct_byte           32     8 (fixed)
  1009                           ; jumptable            260     6 (fixed)
  1010                           ;	Chosen strategy is simple_byte
  1011  0056  0874               	movf	??_initOsc,w
  1012  0057  3A00               	xorlw	0	; case 0
  1013  0058  1903               	skipnz
  1014  0059  2818               	goto	l87
  1015  005A  3A01               	xorlw	1	; case 1
  1016  005B  1903               	skipnz
  1017  005C  281E               	goto	l89
  1018  005D  3A03               	xorlw	3	; case 2
  1019  005E  1903               	skipnz
  1020  005F  2824               	goto	l90
  1021  0060  3A01               	xorlw	1	; case 3
  1022  0061  1903               	skipnz
  1023  0062  282A               	goto	l91
  1024  0063  3A07               	xorlw	7	; case 4
  1025  0064  1903               	skipnz
  1026  0065  2830               	goto	l92
  1027  0066  3A01               	xorlw	1	; case 5
  1028  0067  1903               	skipnz
  1029  0068  2836               	goto	l93
  1030  0069  3A03               	xorlw	3	; case 6
  1031  006A  1903               	skipnz
  1032  006B  283C               	goto	l94
  1033  006C  3A01               	xorlw	1	; case 7
  1034  006D  1903               	skipnz
  1035  006E  2842               	goto	l95
  1036  006F  2848               	goto	l96
  1037  0070                     l88:
  1038                           
  1039                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1040  0070  140F               	bsf	15,0	;volatile
  1041  0071                     l97:
  1042  0071  0008               	return
  1043  0072                     __end_of_initOsc:
  1044                           
  1045                           	psect	text4
  1046  010A                     __ptext4:	
  1047 ;; *************** function _Config_INTERRUPT *****************
  1048 ;; Defined at:
  1049 ;;		line 138 in file "main_contador.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1063 ;;      Params:         0       0       0       0       0
  1064 ;;      Locals:         0       0       0       0       0
  1065 ;;      Temps:          0       0       0       0       0
  1066 ;;      Totals:         0       0       0       0       0
  1067 ;;Total ram usage:        0 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    3
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_setup
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           
  1078                           ;psect for function _Config_INTERRUPT
  1079  010A                     _Config_INTERRUPT:
  1080  010A                     l733:	
  1081                           ;incstack = 0
  1082                           ; Regs used in _Config_INTERRUPT: [wreg]
  1083                           
  1084                           
  1085                           ;main_contador.c: 139:     INTCONbits.GIE = 1;
  1086  010A  178B               	bsf	11,7	;volatile
  1087                           
  1088                           ;main_contador.c: 140:     INTCONbits.RBIE = 1;
  1089  010B  158B               	bsf	11,3	;volatile
  1090                           
  1091                           ;main_contador.c: 141:     INTCONbits.RBIF = 0;
  1092  010C  100B               	bcf	11,0	;volatile
  1093  010D                     l735:
  1094                           
  1095                           ;main_contador.c: 142:     IOCB = 0b00000011;
  1096  010D  3003               	movlw	3
  1097  010E  1683               	bsf	3,5	;RP0=1, select bank1
  1098  010F  1303               	bcf	3,6	;RP1=0, select bank1
  1099  0110  0096               	movwf	22	;volatile
  1100  0111                     l737:
  1101                           
  1102                           ;main_contador.c: 143:     INTCONbits.PEIE = 1;
  1103  0111  170B               	bsf	11,6	;volatile
  1104  0112                     l739:
  1105                           
  1106                           ;main_contador.c: 144:     PIR1bits.SSPIF = 0;
  1107  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0114  118C               	bcf	12,3	;volatile
  1110  0115                     l741:
  1111                           
  1112                           ;main_contador.c: 145:     PIE1bits.SSPIE = 1;
  1113  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1114  0116  1303               	bcf	3,6	;RP1=0, select bank1
  1115  0117  158C               	bsf	12,3	;volatile
  1116  0118                     l81:
  1117  0118  0008               	return
  1118  0119                     __end_of_Config_INTERRUPT:
  1119                           
  1120                           	psect	text5
  1121  0072                     __ptext5:	
  1122 ;; *************** function _ISR *****************
  1123 ;; Defined at:
  1124 ;;		line 63 in file "main_contador.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;		None
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0, pclath, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1138 ;;      Params:         0       0       0       0       0
  1139 ;;      Locals:         0       0       0       0       0
  1140 ;;      Temps:          3       0       0       0       0
  1141 ;;      Totals:         3       0       0       0       0
  1142 ;;Total ram usage:        3 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    2
  1145 ;; This function calls:
  1146 ;;		_spiRead
  1147 ;;		_spiWrite
  1148 ;; This function is called by:
  1149 ;;		Interrupt level 1
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _ISR
  1155  0072                     _ISR:
  1156  0072                     i1l795:
  1157                           
  1158                           ;main_contador.c: 65:     if (INTCONbits.RBIF == 1){
  1159  0072  1C0B               	btfss	11,0	;volatile
  1160  0073  2875               	goto	u3_21
  1161  0074  2876               	goto	u3_20
  1162  0075                     u3_21:
  1163  0075  28A3               	goto	i1l823
  1164  0076                     u3_20:
  1165  0076                     i1l797:
  1166                           
  1167                           ;main_contador.c: 67:             if (PORTBbits.RB0 == 1){
  1168  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0078  1C06               	btfss	6,0	;volatile
  1171  0079  287B               	goto	u4_21
  1172  007A  287C               	goto	u4_20
  1173  007B                     u4_21:
  1174  007B  287E               	goto	i1l62
  1175  007C                     u4_20:
  1176  007C                     i1l799:
  1177                           
  1178                           ;main_contador.c: 68:                 debouncing1 = 1;
  1179  007C  01F8               	clrf	_debouncing1
  1180  007D  0AF8               	incf	_debouncing1,f
  1181  007E                     i1l62:	
  1182                           ;main_contador.c: 70:             }
  1183                           
  1184                           
  1185                           ;main_contador.c: 71:             if (PORTBbits.RB1 == 1){
  1186  007E  1C86               	btfss	6,1	;volatile
  1187  007F  2881               	goto	u5_21
  1188  0080  2882               	goto	u5_20
  1189  0081                     u5_21:
  1190  0081  2884               	goto	i1l63
  1191  0082                     u5_20:
  1192  0082                     i1l801:
  1193                           
  1194                           ;main_contador.c: 72:                 debouncing2 = 1;
  1195  0082  01F7               	clrf	_debouncing2
  1196  0083  0AF7               	incf	_debouncing2,f
  1197  0084                     i1l63:	
  1198                           ;main_contador.c: 74:             }
  1199                           
  1200                           
  1201                           ;main_contador.c: 75:             if(PORTBbits.RB0 == 0 && debouncing1 == 1){
  1202  0084  1806               	btfsc	6,0	;volatile
  1203  0085  2887               	goto	u6_21
  1204  0086  2888               	goto	u6_20
  1205  0087                     u6_21:
  1206  0087  2894               	goto	i1l811
  1207  0088                     u6_20:
  1208  0088                     i1l803:
  1209  0088  0378               	decf	_debouncing1,w
  1210  0089  1D03               	btfss	3,2
  1211  008A  288C               	goto	u7_21
  1212  008B  288D               	goto	u7_20
  1213  008C                     u7_21:
  1214  008C  2894               	goto	i1l811
  1215  008D                     u7_20:
  1216  008D                     i1l805:
  1217                           
  1218                           ;main_contador.c: 76:                 contador++;
  1219  008D  3001               	movlw	1
  1220  008E  00F1               	movwf	??_ISR
  1221  008F  0871               	movf	??_ISR,w
  1222  0090  07F9               	addwf	_contador,f
  1223  0091                     i1l807:
  1224                           
  1225                           ;main_contador.c: 77:                 PORTD = contador;
  1226  0091  0879               	movf	_contador,w
  1227  0092  0088               	movwf	8	;volatile
  1228  0093                     i1l809:
  1229                           
  1230                           ;main_contador.c: 78:                 debouncing1 = 0;
  1231  0093  01F8               	clrf	_debouncing1
  1232  0094                     i1l811:
  1233                           
  1234                           ;main_contador.c: 80:             if(PORTBbits.RB1 == 0 && debouncing2 == 1){
  1235  0094  1886               	btfsc	6,1	;volatile
  1236  0095  2897               	goto	u8_21
  1237  0096  2898               	goto	u8_20
  1238  0097                     u8_21:
  1239  0097  28A2               	goto	i1l821
  1240  0098                     u8_20:
  1241  0098                     i1l813:
  1242  0098  0377               	decf	_debouncing2,w
  1243  0099  1D03               	btfss	3,2
  1244  009A  289C               	goto	u9_21
  1245  009B  289D               	goto	u9_20
  1246  009C                     u9_21:
  1247  009C  28A2               	goto	i1l821
  1248  009D                     u9_20:
  1249  009D                     i1l815:
  1250                           
  1251                           ;main_contador.c: 81:                 contador--;
  1252  009D  3001               	movlw	1
  1253  009E  02F9               	subwf	_contador,f
  1254  009F                     i1l817:
  1255                           
  1256                           ;main_contador.c: 82:                 PORTD = contador;
  1257  009F  0879               	movf	_contador,w
  1258  00A0  0088               	movwf	8	;volatile
  1259  00A1                     i1l819:
  1260                           
  1261                           ;main_contador.c: 83:                 debouncing2 = 0;
  1262  00A1  01F7               	clrf	_debouncing2
  1263  00A2                     i1l821:
  1264                           
  1265                           ;main_contador.c: 85:             INTCONbits.RBIF = 0;
  1266  00A2  100B               	bcf	11,0	;volatile
  1267  00A3                     i1l823:
  1268                           
  1269                           ;main_contador.c: 88:     if(SSPIF == 1){
  1270  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1271  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1272  00A5  1D8C               	btfss	12,3	;volatile
  1273  00A6  28A8               	goto	u10_21
  1274  00A7  28A9               	goto	u10_20
  1275  00A8                     u10_21:
  1276  00A8  28BA               	goto	i1l67
  1277  00A9                     u10_20:
  1278  00A9                     i1l825:
  1279                           
  1280                           ;main_contador.c: 89:         PORTD = spiRead();
  1281  00A9  120A  118A  2123  120A  118A  	fcall	_spiRead
  1282  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1283  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1284  00B0  0088               	movwf	8	;volatile
  1285                           
  1286                           ;main_contador.c: 90:         spiWrite(contador);
  1287  00B1  0879               	movf	_contador,w
  1288  00B2  120A  118A  2133  120A  118A  	fcall	_spiWrite
  1289  00B7                     i1l827:
  1290                           
  1291                           ;main_contador.c: 91:         SSPIF = 0;
  1292  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1293  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1294  00B9  118C               	bcf	12,3	;volatile
  1295  00BA                     i1l67:
  1296  00BA  0873               	movf	??_ISR+2,w
  1297  00BB  008A               	movwf	10
  1298  00BC  0E72               	swapf	??_ISR+1,w
  1299  00BD  0083               	movwf	3
  1300  00BE  0EFE               	swapf	btemp,f
  1301  00BF  0E7E               	swapf	btemp,w
  1302  00C0  0009               	retfie
  1303  00C1                     __end_of_ISR:
  1304                           
  1305                           	psect	intentry
  1306  0004                     __pintentry:	
  1307                           ;incstack = 0
  1308                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1309                           
  1310  0004                     interrupt_function:
  1311  007E                     saved_w	set	btemp
  1312  0004  00FE               	movwf	btemp
  1313  0005  0E03               	swapf	3,w
  1314  0006  00F2               	movwf	??_ISR+1
  1315  0007  080A               	movf	10,w
  1316  0008  00F3               	movwf	??_ISR+2
  1317  0009  120A  118A  2872   	ljmp	_ISR
  1318                           
  1319                           	psect	text6
  1320  0133                     __ptext6:	
  1321 ;; *************** function _spiWrite *****************
  1322 ;; Defined at:
  1323 ;;		line 36 in file "SPI.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  dat             1    wreg     unsigned char 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  dat             1    0[COMMON] unsigned char 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1337 ;;      Params:         0       0       0       0       0
  1338 ;;      Locals:         1       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0
  1340 ;;      Totals:         1       0       0       0       0
  1341 ;;Total ram usage:        1 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_ISR
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           
  1351                           ;psect for function _spiWrite
  1352  0133                     _spiWrite:
  1353                           
  1354                           ;incstack = 0
  1355                           ; Regs used in _spiWrite: [wreg]
  1356                           ;spiWrite@dat stored from wreg
  1357  0133  00F0               	movwf	spiWrite@dat
  1358  0134                     i1l761:
  1359                           
  1360                           ;SPI.c: 36: void spiWrite(char dat);SPI.c: 37: {;SPI.c: 38:     SSPBUF = dat;
  1361  0134  0870               	movf	spiWrite@dat,w
  1362  0135  1283               	bcf	3,5	;RP0=0, select bank0
  1363  0136  1303               	bcf	3,6	;RP1=0, select bank0
  1364  0137  0093               	movwf	19	;volatile
  1365  0138                     i1l123:
  1366  0138  0008               	return
  1367  0139                     __end_of_spiWrite:
  1368                           
  1369                           	psect	text7
  1370  0123                     __ptext7:	
  1371 ;; *************** function _spiRead *****************
  1372 ;; Defined at:
  1373 ;;		line 49 in file "SPI.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      unsigned char 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2, status,0, pclath, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       0       0       0       0
  1388 ;;      Locals:         0       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0
  1390 ;;      Totals:         0       0       0       0       0
  1391 ;;Total ram usage:        0 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    1
  1394 ;; This function calls:
  1395 ;;		_spiReceiveWait
  1396 ;; This function is called by:
  1397 ;;		_ISR
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function _spiRead
  1403  0123                     _spiRead:
  1404  0123                     i1l755:	
  1405                           ;incstack = 0
  1406                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1407                           
  1408                           
  1409                           ;SPI.c: 51:     spiReceiveWait();
  1410  0123  120A  118A  212C  120A  118A  	fcall	_spiReceiveWait
  1411  0128                     i1l757:
  1412                           
  1413                           ;SPI.c: 52:     return(SSPBUF);
  1414  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1416  012A  0813               	movf	19,w	;volatile
  1417  012B                     i1l131:
  1418  012B  0008               	return
  1419  012C                     __end_of_spiRead:
  1420                           
  1421                           	psect	text8
  1422  012C                     __ptext8:	
  1423 ;; *************** function _spiReceiveWait *****************
  1424 ;; Defined at:
  1425 ;;		line 31 in file "SPI.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		None
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1439 ;;      Params:         0       0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0
  1442 ;;      Totals:         0       0       0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_spiRead
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           
  1453                           ;psect for function _spiReceiveWait
  1454  012C                     _spiReceiveWait:
  1455  012C                     i1l753:	
  1456                           ;incstack = 0
  1457                           ; Regs used in _spiReceiveWait: []
  1458                           
  1459  012C                     i1l117:	
  1460                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
  1461                           
  1462  012C  1683               	bsf	3,5	;RP0=1, select bank1
  1463  012D  1303               	bcf	3,6	;RP1=0, select bank1
  1464  012E  1C14               	btfss	20,0	;volatile
  1465  012F  2931               	goto	u2_21
  1466  0130  2932               	goto	u2_20
  1467  0131                     u2_21:
  1468  0131  292C               	goto	i1l117
  1469  0132                     u2_20:
  1470  0132                     i1l120:
  1471  0132  0008               	return
  1472  0133                     __end_of_spiReceiveWait:
  1473  007E                     btemp	set	126	;btemp
  1474  007E                     wtemp0	set	126
  1475                           
  1476                           	psect	config
  1477                           
  1478                           ;Config register CONFIG1 @ 0x2007
  1479                           ;	Oscillator Selection bits
  1480                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1481                           ;	Watchdog Timer Enable bit
  1482                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1483                           ;	Power-up Timer Enable bit
  1484                           ;	PWRTE = OFF, PWRT disabled
  1485                           ;	RE3/MCLR pin function select bit
  1486                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1487                           ;	Code Protection bit
  1488                           ;	CP = OFF, Program memory code protection is disabled
  1489                           ;	Data Code Protection bit
  1490                           ;	CPD = OFF, Data memory code protection is disabled
  1491                           ;	Brown Out Reset Selection bits
  1492                           ;	BOREN = OFF, BOR disabled
  1493                           ;	Internal External Switchover bit
  1494                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1495                           ;	Fail-Safe Clock Monitor Enabled bit
  1496                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1497                           ;	Low Voltage Programming Enable bit
  1498                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1499                           ;	In-Circuit Debugger Mode bit
  1500                           ;	DEBUG = 0x1, unprogrammed default
  1501  2007                     	org	8199
  1502  2007  20D6               	dw	8406
  1503                           
  1504                           ;Config register CONFIG2 @ 0x2008
  1505                           ;	Brown-out Reset Selection bit
  1506                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1507                           ;	Flash Program Memory Self Write Enable bits
  1508                           ;	WRT = OFF, Write protection off
  1509  2008                     	org	8200
  1510  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_initOsc
    _setup->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     471
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     471
                   _Config_INTERRUPT
                            _initOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _Config_INTERRUPT
     _initOsc
     _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 18 21:01:45 2021

              _SSPSTATbits 0094                         l72 011F                         l81 0118  
                       l73 011F                         l90 0024                         l91 002A  
                       l92 0030                         l93 0036                         l94 003C  
                       l78 00EB                         l95 0042                         l87 0018  
                       l96 0048                         l88 0070                         l97 0071  
                       l89 001E                        l113 0104                        l114 0109  
                      l723 0017                        l741 0115                        l733 010A  
                      l735 010D                        l727 004E                        l737 0111  
                      l739 0112                        l931 00FE                        l933 0103  
                      l925 00EF                        l941 00CB                        l927 00F8  
                      l951 00D3                        l943 00CE                        l935 00C1  
                      l929 00FC                        l961 00DA                        l953 00D6  
                      l945 00D0                        l937 00C7                        l963 00DF  
                      l955 00D7                        l947 00D1                        l939 00CA  
                      l965 00E2                        l957 00D8                        l949 00D2  
                      l991 0056                        l959 00D9                        l967 0119  
                      l969 011A                        u120 00F8                        u121 00F7  
                      _ISR 0072                       ?_ISR 0070                       _IOCB 0096  
                     i1l62 007E                       i1l63 0084                       i1l67 00BA  
                     u2_20 0132                       u2_21 0131                       u3_20 0076  
                     u3_21 0075                       u4_20 007C                       u4_21 007B  
                     u5_20 0082                       u5_21 0081                       u6_20 0088  
                     u6_21 0087                       u7_20 008D                       u7_21 008C  
                     u8_20 0098                       u8_21 0097                       u9_20 009D  
                     u9_21 009C                       _main 0119                       btemp 007E  
 __end_of_Config_INTERRUPT 0119                       start 000C                      ??_ISR 0071  
                    ?_main 0070                      _ANSEL 0188                      i1l120 0132  
                    i1l131 012B                      i1l123 0138                      i1l117 012C  
                    i1l801 0082                      i1l803 0088                      i1l811 0094  
                    i1l813 0098                      i1l821 00A2                      i1l805 008D  
                    i1l815 009D                      i1l807 0091                      i1l823 00A3  
                    i1l753 012C                      i1l761 0134                      i1l825 00A9  
                    i1l817 009F                      i1l809 0093                      i1l755 0123  
                    i1l827 00B7                      i1l819 00A1                      i1l757 0128  
                    i1l795 0072                      i1l797 0076                      i1l799 007C  
                    u10_20 00A9                      u10_21 00A8                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _SSPIF 0063            __end_of_initOsc 0072                      _setup 00C1  
                    pclath 000A            __end_of_spiInit 010A            __end_of_spiRead 012C  
                    status 0003                      wtemp0 007E            __initialization 000F  
             __end_of_main 0123                     ??_main 0077                initOsc@IRCF 0076  
                   ?_setup 0070                     _ANSELH 0189                     _TRISC3 043B  
                   _TRISC5 043D                     _SSPCON 0014                     _SSPBUF 0013  
                ??_initOsc 0074                     saved_w 007E           __end_of_spiWrite 0139  
                ??_spiInit 0077                  ??_spiRead 0070    __end_of__initialization 0012  
           __pcstackCOMMON 0070              __end_of_setup 00EC                    ??_setup 0077  
        ?_Config_INTERRUPT 0070                 __pmaintext 0119         ??_Config_INTERRUPT 0074  
               __pintentry 0004    __size_of_spiReceiveWait 0007                    _SSPSTAT 0094  
                ?_spiWrite 0070                    __ptext1 00C1                    __ptext2 00EC  
                  __ptext3 0016                    __ptext4 010A                    __ptext5 0072  
                  __ptext6 0133                    __ptext7 0123                    __ptext8 012C  
             __size_of_ISR 004F                    _initOsc 0016                    _spiInit 00EC  
                  _spiRead 0123       end_of_initialization 0012                 ??_spiWrite 0070  
                _PORTBbits 0006                  _TRISAbits 0085                spiWrite@dat 0070  
           _spiReceiveWait 012C        start_initialization 000F                __end_of_ISR 00C1  
   __end_of_spiReceiveWait 0133  __size_of_Config_INTERRUPT 000F                __pbssCOMMON 0077  
                ___latbits 0002              __pcstackBANK0 0020                _debouncing1 0078  
              _debouncing2 0077            ?_spiReceiveWait 0070          __size_of_spiWrite 0006  
                 ?_initOsc 0070                   ?_spiInit 0074                   ?_spiRead 0070  
           __size_of_setup 002B       spiInit@sTransmitEdge 0076          interrupt_function 0004  
                 _PIE1bits 008C         spiInit@sDataSample 0074                   _PIR1bits 000C  
         _Config_INTERRUPT 010A           __size_of_initOsc 005C           __size_of_spiInit 001E  
         __size_of_spiRead 0009                   _contador 0079              __size_of_main 000A  
                 _spiWrite 0133               spiInit@sType 0020          spiInit@sClockIdle 0075  
               _INTCONbits 000B                   intlevel1 0000           ??_spiReceiveWait 0070  
               _OSCCONbits 008F  
