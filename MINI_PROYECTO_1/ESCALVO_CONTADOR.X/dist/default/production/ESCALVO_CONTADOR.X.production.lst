

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 07:48:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  000C                     _PIR1bits	set	12
   368  0009                     _PORTE	set	9
   369  0007                     _PORTC	set	7
   370  0006                     _PORTB	set	6
   371  0005                     _PORTA	set	5
   372  0008                     _PORTD	set	8
   373  0006                     _PORTBbits	set	6
   374  000B                     _INTCONbits	set	11
   375  0063                     _SSPIF	set	99
   376  0094                     _SSPSTATbits	set	148
   377  0094                     _SSPSTAT	set	148
   378  008F                     _OSCCONbits	set	143
   379  009F                     _ADCON1	set	159
   380  008C                     _PIE1bits	set	140
   381  0096                     _IOCB	set	150
   382  0085                     _TRISAbits	set	133
   383  0089                     _TRISE	set	137
   384  0088                     _TRISD	set	136
   385  0087                     _TRISC	set	135
   386  0086                     _TRISB	set	134
   387  0085                     _TRISA	set	133
   388  043B                     _TRISC3	set	1083
   389  043D                     _TRISC5	set	1085
   390  040F                     _nRBPU	set	1039
   391  0189                     _ANSELH	set	393
   392  0188                     _ANSEL	set	392
   393                           
   394                           	psect	cinit
   395  000F                     start_initialization:	
   396                           ; #config settings
   397                           
   398  000F                     __initialization:
   399                           
   400                           ; Clear objects allocated to COMMON
   401  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   402  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   403  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   404  0012                     end_of_initialization:	
   405                           ;End of C runtime variable initialization code
   406                           
   407  0012                     __end_of__initialization:
   408  0012  0183               	clrf	3
   409  0013  120A  118A  2905   	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	bssCOMMON
   412  0077                     __pbssCOMMON:
   413  0077                     _debouncing2:
   414  0077                     	ds	1
   415  0078                     _debouncing1:
   416  0078                     	ds	1
   417  0079                     _contador:
   418  0079                     	ds	1
   419                           
   420                           	psect	cstackCOMMON
   421  0070                     __pcstackCOMMON:
   422  0070                     ?_spiWrite:
   423  0070                     ??_spiWrite:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_setup:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_initOsc:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_Config_INTERRUPT:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_ISR:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_main:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     spiWrite@dat:	
   442                           ; 1 bytes @ 0x0
   443                           
   444                           
   445                           ; 1 bytes @ 0x0
   446  0070                     	ds	1
   447  0071                     ??_ISR:
   448                           
   449                           ; 1 bytes @ 0x1
   450  0071                     	ds	3
   451  0074                     ??_initOsc:
   452  0074                     ??_Config_INTERRUPT:	
   453                           ; 1 bytes @ 0x4
   454                           
   455  0074                     ?_spiInit:	
   456                           ; 1 bytes @ 0x4
   457                           
   458  0074                     spiInit@sDataSample:	
   459                           ; 1 bytes @ 0x4
   460                           
   461                           
   462                           ; 1 bytes @ 0x4
   463  0074                     	ds	1
   464  0075                     spiInit@sClockIdle:
   465                           
   466                           ; 1 bytes @ 0x5
   467  0075                     	ds	1
   468  0076                     initOsc@IRCF:
   469  0076                     spiInit@sTransmitEdge:	
   470                           ; 1 bytes @ 0x6
   471                           
   472                           
   473                           ; 1 bytes @ 0x6
   474  0076                     	ds	1
   475  0077                     ??_setup:
   476  0077                     ??_spiInit:	
   477                           ; 1 bytes @ 0x7
   478                           
   479                           
   480                           	psect	cstackBANK0
   481  0020                     __pcstackBANK0:	
   482                           ; 1 bytes @ 0x7
   483                           
   484  0020                     spiInit@sType:
   485                           
   486                           ; 1 bytes @ 0x0
   487  0020                     	ds	1
   488  0021                     ??_main:
   489                           
   490                           ; 1 bytes @ 0x1
   491  0021                     	ds	2
   492                           
   493                           	psect	maintext
   494  0105                     __pmaintext:	
   495 ;;
   496 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   497 ;;
   498 ;; *************** function _main *****************
   499 ;; Defined at:
   500 ;;		line 98 in file "main_contador.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   509 ;; Tracked objects:
   510 ;;		On entry : B00/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0
   516 ;;      Temps:          0       2       0       0       0
   517 ;;      Totals:         0       2       0       0       0
   518 ;;Total ram usage:        2 bytes
   519 ;; Hardware stack levels required when called:    4
   520 ;; This function calls:
   521 ;;		_setup
   522 ;; This function is called by:
   523 ;;		Startup code after reset
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           
   528                           ;psect for function _main
   529  0105                     _main:
   530  0105                     l981:	
   531                           ;incstack = 0
   532                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   533                           
   534                           
   535                           ;main_contador.c: 99:     contador = 0;
   536  0105  01F9               	clrf	_contador
   537  0106                     l983:
   538                           
   539                           ;main_contador.c: 100:     setup();
   540  0106  120A  118A  20B9  120A  118A  	fcall	_setup
   541  010B                     l985:
   542                           
   543                           ;main_contador.c: 107:         _delay((unsigned long)((1)*(8000000/4000.0)));
   544  010B  3003               	movlw	3
   545  010C  1283               	bcf	3,5	;RP0=0, select bank0
   546  010D  1303               	bcf	3,6	;RP1=0, select bank0
   547  010E  00A2               	movwf	??_main+1
   548  010F  3097               	movlw	151
   549  0110  00A1               	movwf	??_main
   550  0111                     u137:
   551  0111  0BA1               	decfsz	??_main,f
   552  0112  2911               	goto	u137
   553  0113  0BA2               	decfsz	??_main+1,f
   554  0114  2911               	goto	u137
   555  0115  290B               	goto	l985
   556  0116  120A  118A  280C   	ljmp	start
   557  0119                     __end_of_main:
   558                           
   559                           	psect	text1
   560  00B9                     __ptext1:	
   561 ;; *************** function _setup *****************
   562 ;; Defined at:
   563 ;;		line 118 in file "main_contador.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   577 ;;      Params:         0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0
   580 ;;      Totals:         0       0       0       0       0
   581 ;;Total ram usage:        0 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; Hardware stack levels required when called:    3
   584 ;; This function calls:
   585 ;;		_Config_INTERRUPT
   586 ;;		_initOsc
   587 ;;		_spiInit
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function _setup
   595  00B9                     _setup:
   596  00B9                     l947:	
   597                           ;incstack = 0
   598                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   599                           
   600                           
   601                           ;main_contador.c: 119:     initOsc(0b00000111);
   602  00B9  3007               	movlw	7
   603  00BA  120A  118A  2016  120A  118A  	fcall	_initOsc
   604  00BF                     l949:
   605                           
   606                           ;main_contador.c: 120:     nRBPU = 0;
   607  00BF  1683               	bsf	3,5	;RP0=1, select bank1
   608  00C0  1303               	bcf	3,6	;RP1=0, select bank1
   609  00C1  1381               	bcf	1,7	;volatile
   610  00C2                     l951:
   611                           
   612                           ;main_contador.c: 121:     ANSEL = 0;
   613  00C2  1683               	bsf	3,5	;RP0=1, select bank3
   614  00C3  1703               	bsf	3,6	;RP1=1, select bank3
   615  00C4  0188               	clrf	8	;volatile
   616  00C5                     l953:
   617                           
   618                           ;main_contador.c: 122:     ANSELH = 0;
   619  00C5  0189               	clrf	9	;volatile
   620  00C6                     l955:
   621                           
   622                           ;main_contador.c: 124:     TRISA = 0;
   623  00C6  1683               	bsf	3,5	;RP0=1, select bank1
   624  00C7  1303               	bcf	3,6	;RP1=0, select bank1
   625  00C8  0185               	clrf	5	;volatile
   626  00C9                     l957:
   627                           
   628                           ;main_contador.c: 125:     TRISB = 0b00000011;
   629  00C9  3003               	movlw	3
   630  00CA  0086               	movwf	6	;volatile
   631  00CB                     l959:
   632                           
   633                           ;main_contador.c: 126:     TRISC = 0;
   634  00CB  0187               	clrf	7	;volatile
   635  00CC                     l961:
   636                           
   637                           ;main_contador.c: 127:     TRISD = 0;
   638  00CC  0188               	clrf	8	;volatile
   639  00CD                     l963:
   640                           
   641                           ;main_contador.c: 128:     TRISE = 0;
   642  00CD  0189               	clrf	9	;volatile
   643  00CE                     l965:
   644                           
   645                           ;main_contador.c: 130:     PORTA = 0;
   646  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   647  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   648  00D0  0185               	clrf	5	;volatile
   649  00D1                     l967:
   650                           
   651                           ;main_contador.c: 131:     PORTB = 0;
   652  00D1  0186               	clrf	6	;volatile
   653  00D2                     l969:
   654                           
   655                           ;main_contador.c: 132:     PORTC = 0;
   656  00D2  0187               	clrf	7	;volatile
   657  00D3                     l971:
   658                           
   659                           ;main_contador.c: 133:     PORTD = 0;
   660  00D3  0188               	clrf	8	;volatile
   661  00D4                     l973:
   662                           
   663                           ;main_contador.c: 134:     PORTE = 0;
   664  00D4  0189               	clrf	9	;volatile
   665  00D5                     l975:
   666                           
   667                           ;main_contador.c: 135:     Config_INTERRUPT();
   668  00D5  120A  118A  2119  120A  118A  	fcall	_Config_INTERRUPT
   669  00DA                     l977:
   670                           
   671                           ;main_contador.c: 136:     TRISAbits.TRISA5 = 1;
   672  00DA  1683               	bsf	3,5	;RP0=1, select bank1
   673  00DB  1303               	bcf	3,6	;RP1=0, select bank1
   674  00DC  1685               	bsf	5,5	;volatile
   675  00DD                     l979:
   676                           
   677                           ;main_contador.c: 137:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_ID
      +                          LE_LOW, SPI_IDLE_2_ACTIVE);
   678  00DD  01F4               	clrf	spiInit@sDataSample
   679  00DE  01F5               	clrf	spiInit@sClockIdle
   680  00DF  01F6               	clrf	spiInit@sTransmitEdge
   681  00E0  3024               	movlw	36
   682  00E1  120A  118A  20E7  120A  118A  	fcall	_spiInit
   683  00E6                     l82:
   684  00E6  0008               	return
   685  00E7                     __end_of_setup:
   686                           
   687                           	psect	text2
   688  00E7                     __ptext2:	
   689 ;; *************** function _spiInit *****************
   690 ;; Defined at:
   691 ;;		line 14 in file "SPI.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;  sType           1    wreg     enum E1264
   694 ;;  sDataSample     1    4[COMMON] enum E1272
   695 ;;  sClockIdle      1    5[COMMON] enum E1276
   696 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   697 ;; Auto vars:     Size  Location     Type
   698 ;;  sType           1    0[BANK0 ] enum E1264
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, status,2, status,0
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   708 ;;      Params:         3       0       0       0       0
   709 ;;      Locals:         0       1       0       0       0
   710 ;;      Temps:          0       0       0       0       0
   711 ;;      Totals:         3       1       0       0       0
   712 ;;Total ram usage:        4 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    2
   715 ;; This function calls:
   716 ;;		Nothing
   717 ;; This function is called by:
   718 ;;		_setup
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           
   723                           ;psect for function _spiInit
   724  00E7                     _spiInit:
   725                           
   726                           ;incstack = 0
   727                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   728                           ;spiInit@sType stored from wreg
   729  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   730  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   731  00E9  00A0               	movwf	spiInit@sType
   732  00EA                     l937:
   733                           
   734                           ;SPI.c: 14: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 15: {;SPI.c: 16:     TRISC5 = 0;
   735  00EA  1683               	bsf	3,5	;RP0=1, select bank1
   736  00EB  1303               	bcf	3,6	;RP1=0, select bank1
   737  00EC  1287               	bcf	7,5	;volatile
   738                           
   739                           ;SPI.c: 17:     if(sType & 0b00000100)
   740  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   741  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   742  00EF  1D20               	btfss	spiInit@sType,2
   743  00F0  28F2               	goto	u121
   744  00F1  28F3               	goto	u120
   745  00F2                     u121:
   746  00F2  28F9               	goto	l943
   747  00F3                     u120:
   748  00F3                     l939:
   749                           
   750                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sTransmitEdge;
   751  00F3  0876               	movf	spiInit@sTransmitEdge,w
   752  00F4  1683               	bsf	3,5	;RP0=1, select bank1
   753  00F5  1303               	bcf	3,6	;RP1=0, select bank1
   754  00F6  0094               	movwf	20	;volatile
   755  00F7                     l941:
   756                           
   757                           ;SPI.c: 20:         TRISC3 = 1;
   758  00F7  1587               	bsf	7,3	;volatile
   759                           
   760                           ;SPI.c: 21:     }
   761  00F8  28FF               	goto	l117
   762  00F9                     l943:
   763                           
   764                           ;SPI.c: 23:     {;SPI.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
   765  00F9  0874               	movf	spiInit@sDataSample,w
   766  00FA  0476               	iorwf	spiInit@sTransmitEdge,w
   767  00FB  1683               	bsf	3,5	;RP0=1, select bank1
   768  00FC  1303               	bcf	3,6	;RP1=0, select bank1
   769  00FD  0094               	movwf	20	;volatile
   770  00FE                     l945:
   771                           
   772                           ;SPI.c: 25:         TRISC3 = 0;
   773  00FE  1187               	bcf	7,3	;volatile
   774  00FF                     l117:	
   775                           ;SPI.c: 26:     }
   776                           
   777                           
   778                           ;SPI.c: 28:     SSPCON = sType | sClockIdle;
   779  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   780  0100  1303               	bcf	3,6	;RP1=0, select bank0
   781  0101  0820               	movf	spiInit@sType,w
   782  0102  0475               	iorwf	spiInit@sClockIdle,w
   783  0103  0094               	movwf	20	;volatile
   784  0104                     l118:
   785  0104  0008               	return
   786  0105                     __end_of_spiInit:
   787                           
   788                           	psect	text3
   789  0016                     __ptext3:	
   790 ;; *************** function _initOsc *****************
   791 ;; Defined at:
   792 ;;		line 3 in file "Oscilador.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;  IRCF            1    wreg     unsigned char 
   795 ;; Auto vars:     Size  Location     Type
   796 ;;  IRCF            1    6[COMMON] unsigned char 
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   806 ;;      Params:         0       0       0       0       0
   807 ;;      Locals:         1       0       0       0       0
   808 ;;      Temps:          2       0       0       0       0
   809 ;;      Totals:         3       0       0       0       0
   810 ;;Total ram usage:        3 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    2
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_setup
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           
   821                           ;psect for function _initOsc
   822  0016                     _initOsc:
   823                           
   824                           ;incstack = 0
   825                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   826                           ;initOsc@IRCF stored from wreg
   827  0016  00F6               	movwf	initOsc@IRCF
   828  0017                     l727:
   829                           
   830                           ;Oscilador.c: 5:     switch(IRCF){
   831  0017  284E               	goto	l731
   832  0018                     l91:	
   833                           ;Oscilador.c: 6:         case 0:
   834                           
   835                           
   836                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   837  0018  1683               	bsf	3,5	;RP0=1, select bank1
   838  0019  1303               	bcf	3,6	;RP1=0, select bank1
   839  001A  130F               	bcf	15,6	;volatile
   840                           
   841                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   842  001B  128F               	bcf	15,5	;volatile
   843                           
   844                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   845  001C  120F               	bcf	15,4	;volatile
   846                           
   847                           ;Oscilador.c: 10:             break;
   848  001D  2870               	goto	l92
   849  001E                     l93:	
   850                           ;Oscilador.c: 11:          case 1:
   851                           
   852                           
   853                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   854  001E  1683               	bsf	3,5	;RP0=1, select bank1
   855  001F  1303               	bcf	3,6	;RP1=0, select bank1
   856  0020  130F               	bcf	15,6	;volatile
   857                           
   858                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   859  0021  128F               	bcf	15,5	;volatile
   860                           
   861                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   862  0022  160F               	bsf	15,4	;volatile
   863                           
   864                           ;Oscilador.c: 15:             break;
   865  0023  2870               	goto	l92
   866  0024                     l94:	
   867                           ;Oscilador.c: 16:         case 2:
   868                           
   869                           
   870                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   871  0024  1683               	bsf	3,5	;RP0=1, select bank1
   872  0025  1303               	bcf	3,6	;RP1=0, select bank1
   873  0026  130F               	bcf	15,6	;volatile
   874                           
   875                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   876  0027  168F               	bsf	15,5	;volatile
   877                           
   878                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   879  0028  120F               	bcf	15,4	;volatile
   880                           
   881                           ;Oscilador.c: 20:             break;
   882  0029  2870               	goto	l92
   883  002A                     l95:	
   884                           ;Oscilador.c: 21:         case 3:
   885                           
   886                           
   887                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   888  002A  1683               	bsf	3,5	;RP0=1, select bank1
   889  002B  1303               	bcf	3,6	;RP1=0, select bank1
   890  002C  130F               	bcf	15,6	;volatile
   891                           
   892                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   893  002D  168F               	bsf	15,5	;volatile
   894                           
   895                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   896  002E  160F               	bsf	15,4	;volatile
   897                           
   898                           ;Oscilador.c: 25:             break;
   899  002F  2870               	goto	l92
   900  0030                     l96:	
   901                           ;Oscilador.c: 26:         case 4:
   902                           
   903                           
   904                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   905  0030  1683               	bsf	3,5	;RP0=1, select bank1
   906  0031  1303               	bcf	3,6	;RP1=0, select bank1
   907  0032  170F               	bsf	15,6	;volatile
   908                           
   909                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   910  0033  128F               	bcf	15,5	;volatile
   911                           
   912                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   913  0034  120F               	bcf	15,4	;volatile
   914                           
   915                           ;Oscilador.c: 30:             break;
   916  0035  2870               	goto	l92
   917  0036                     l97:	
   918                           ;Oscilador.c: 31:         case 5:
   919                           
   920                           
   921                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   922  0036  1683               	bsf	3,5	;RP0=1, select bank1
   923  0037  1303               	bcf	3,6	;RP1=0, select bank1
   924  0038  170F               	bsf	15,6	;volatile
   925                           
   926                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
   927  0039  128F               	bcf	15,5	;volatile
   928                           
   929                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
   930  003A  160F               	bsf	15,4	;volatile
   931                           
   932                           ;Oscilador.c: 35:             break;
   933  003B  2870               	goto	l92
   934  003C                     l98:	
   935                           ;Oscilador.c: 36:         case 6:
   936                           
   937                           
   938                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
   939  003C  1683               	bsf	3,5	;RP0=1, select bank1
   940  003D  1303               	bcf	3,6	;RP1=0, select bank1
   941  003E  170F               	bsf	15,6	;volatile
   942                           
   943                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
   944  003F  168F               	bsf	15,5	;volatile
   945                           
   946                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
   947  0040  120F               	bcf	15,4	;volatile
   948                           
   949                           ;Oscilador.c: 40:             break;
   950  0041  2870               	goto	l92
   951  0042                     l99:	
   952                           ;Oscilador.c: 41:         case 7:
   953                           
   954                           
   955                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
   956  0042  1683               	bsf	3,5	;RP0=1, select bank1
   957  0043  1303               	bcf	3,6	;RP1=0, select bank1
   958  0044  170F               	bsf	15,6	;volatile
   959                           
   960                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
   961  0045  168F               	bsf	15,5	;volatile
   962                           
   963                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
   964  0046  160F               	bsf	15,4	;volatile
   965                           
   966                           ;Oscilador.c: 45:             break;
   967  0047  2870               	goto	l92
   968  0048                     l100:	
   969                           ;Oscilador.c: 46:         default:
   970                           
   971                           
   972                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
   973  0048  1683               	bsf	3,5	;RP0=1, select bank1
   974  0049  1303               	bcf	3,6	;RP1=0, select bank1
   975  004A  170F               	bsf	15,6	;volatile
   976                           
   977                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
   978  004B  168F               	bsf	15,5	;volatile
   979                           
   980                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
   981  004C  120F               	bcf	15,4	;volatile
   982                           
   983                           ;Oscilador.c: 50:             break;
   984  004D  2870               	goto	l92
   985  004E                     l731:
   986  004E  0876               	movf	initOsc@IRCF,w
   987  004F  00F4               	movwf	??_initOsc
   988  0050  01F5               	clrf	??_initOsc+1
   989                           
   990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   991                           ; Switch size 1, requested type "simple"
   992                           ; Number of cases is 1, Range of values is 0 to 0
   993                           ; switch strategies available:
   994                           ; Name         Instructions Cycles
   995                           ; simple_byte            4     3 (average)
   996                           ; direct_byte           11     8 (fixed)
   997                           ; jumptable            260     6 (fixed)
   998                           ;	Chosen strategy is simple_byte
   999  0051  0875               	movf	??_initOsc+1,w
  1000  0052  3A00               	xorlw	0	; case 0
  1001  0053  1903               	skipnz
  1002  0054  2856               	goto	l1007
  1003  0055  2848               	goto	l100
  1004  0056                     l1007:
  1005                           
  1006                           ; Switch size 1, requested type "simple"
  1007                           ; Number of cases is 8, Range of values is 0 to 7
  1008                           ; switch strategies available:
  1009                           ; Name         Instructions Cycles
  1010                           ; simple_byte           25    13 (average)
  1011                           ; direct_byte           32     8 (fixed)
  1012                           ; jumptable            260     6 (fixed)
  1013                           ;	Chosen strategy is simple_byte
  1014  0056  0874               	movf	??_initOsc,w
  1015  0057  3A00               	xorlw	0	; case 0
  1016  0058  1903               	skipnz
  1017  0059  2818               	goto	l91
  1018  005A  3A01               	xorlw	1	; case 1
  1019  005B  1903               	skipnz
  1020  005C  281E               	goto	l93
  1021  005D  3A03               	xorlw	3	; case 2
  1022  005E  1903               	skipnz
  1023  005F  2824               	goto	l94
  1024  0060  3A01               	xorlw	1	; case 3
  1025  0061  1903               	skipnz
  1026  0062  282A               	goto	l95
  1027  0063  3A07               	xorlw	7	; case 4
  1028  0064  1903               	skipnz
  1029  0065  2830               	goto	l96
  1030  0066  3A01               	xorlw	1	; case 5
  1031  0067  1903               	skipnz
  1032  0068  2836               	goto	l97
  1033  0069  3A03               	xorlw	3	; case 6
  1034  006A  1903               	skipnz
  1035  006B  283C               	goto	l98
  1036  006C  3A01               	xorlw	1	; case 7
  1037  006D  1903               	skipnz
  1038  006E  2842               	goto	l99
  1039  006F  2848               	goto	l100
  1040  0070                     l92:
  1041                           
  1042                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1043  0070  140F               	bsf	15,0	;volatile
  1044  0071                     l101:
  1045  0071  0008               	return
  1046  0072                     __end_of_initOsc:
  1047                           
  1048                           	psect	text4
  1049  0119                     __ptext4:	
  1050 ;; *************** function _Config_INTERRUPT *****************
  1051 ;; Defined at:
  1052 ;;		line 141 in file "main_contador.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         0       0       0       0       0
  1067 ;;      Locals:         0       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0
  1069 ;;      Totals:         0       0       0       0       0
  1070 ;;Total ram usage:        0 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:    2
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_setup
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           
  1081                           ;psect for function _Config_INTERRUPT
  1082  0119                     _Config_INTERRUPT:
  1083  0119                     l737:	
  1084                           ;incstack = 0
  1085                           ; Regs used in _Config_INTERRUPT: [wreg]
  1086                           
  1087                           
  1088                           ;main_contador.c: 142:     INTCONbits.GIE = 1;
  1089  0119  178B               	bsf	11,7	;volatile
  1090                           
  1091                           ;main_contador.c: 143:     INTCONbits.RBIE = 1;
  1092  011A  158B               	bsf	11,3	;volatile
  1093                           
  1094                           ;main_contador.c: 144:     INTCONbits.RBIF = 0;
  1095  011B  100B               	bcf	11,0	;volatile
  1096  011C                     l739:
  1097                           
  1098                           ;main_contador.c: 145:     IOCB = 0b00000011;
  1099  011C  3003               	movlw	3
  1100  011D  1683               	bsf	3,5	;RP0=1, select bank1
  1101  011E  1303               	bcf	3,6	;RP1=0, select bank1
  1102  011F  0096               	movwf	22	;volatile
  1103  0120                     l741:
  1104                           
  1105                           ;main_contador.c: 146:     INTCONbits.PEIE = 1;
  1106  0120  170B               	bsf	11,6	;volatile
  1107  0121                     l743:
  1108                           
  1109                           ;main_contador.c: 147:     PIR1bits.SSPIF = 0;
  1110  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0123  118C               	bcf	12,3	;volatile
  1113  0124                     l745:
  1114                           
  1115                           ;main_contador.c: 148:     PIE1bits.SSPIE = 1;
  1116  0124  1683               	bsf	3,5	;RP0=1, select bank1
  1117  0125  1303               	bcf	3,6	;RP1=0, select bank1
  1118  0126  158C               	bsf	12,3	;volatile
  1119                           
  1120                           ;main_contador.c: 149:     ADCON1 = 0x07;
  1121  0127  3007               	movlw	7
  1122  0128  009F               	movwf	31	;volatile
  1123  0129                     l85:
  1124  0129  0008               	return
  1125  012A                     __end_of_Config_INTERRUPT:
  1126                           
  1127                           	psect	text5
  1128  0072                     __ptext5:	
  1129 ;; *************** function _ISR *****************
  1130 ;; Defined at:
  1131 ;;		line 63 in file "main_contador.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0, pclath, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0
  1147 ;;      Temps:          3       0       0       0       0
  1148 ;;      Totals:         3       0       0       0       0
  1149 ;;Total ram usage:        3 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    1
  1152 ;; This function calls:
  1153 ;;		_spiWrite
  1154 ;; This function is called by:
  1155 ;;		Interrupt level 1
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           
  1160                           ;psect for function _ISR
  1161  0072                     _ISR:
  1162  0072                     i1l795:
  1163                           
  1164                           ;main_contador.c: 65:     if (INTCONbits.RBIF == 1){
  1165  0072  1C0B               	btfss	11,0	;volatile
  1166  0073  2875               	goto	u3_21
  1167  0074  2876               	goto	u3_20
  1168  0075                     u3_21:
  1169  0075  28A3               	goto	i1l823
  1170  0076                     u3_20:
  1171  0076                     i1l797:
  1172                           
  1173                           ;main_contador.c: 67:             if (PORTBbits.RB0 == 1){
  1174  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1175  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1176  0078  1C06               	btfss	6,0	;volatile
  1177  0079  287B               	goto	u4_21
  1178  007A  287C               	goto	u4_20
  1179  007B                     u4_21:
  1180  007B  287E               	goto	i1l66
  1181  007C                     u4_20:
  1182  007C                     i1l799:
  1183                           
  1184                           ;main_contador.c: 68:                 debouncing1 = 1;
  1185  007C  01F8               	clrf	_debouncing1
  1186  007D  0AF8               	incf	_debouncing1,f
  1187  007E                     i1l66:	
  1188                           ;main_contador.c: 70:             }
  1189                           
  1190                           
  1191                           ;main_contador.c: 71:             if (PORTBbits.RB1 == 1){
  1192  007E  1C86               	btfss	6,1	;volatile
  1193  007F  2881               	goto	u5_21
  1194  0080  2882               	goto	u5_20
  1195  0081                     u5_21:
  1196  0081  2884               	goto	i1l67
  1197  0082                     u5_20:
  1198  0082                     i1l801:
  1199                           
  1200                           ;main_contador.c: 72:                 debouncing2 = 1;
  1201  0082  01F7               	clrf	_debouncing2
  1202  0083  0AF7               	incf	_debouncing2,f
  1203  0084                     i1l67:	
  1204                           ;main_contador.c: 74:             }
  1205                           
  1206                           
  1207                           ;main_contador.c: 75:             if(PORTBbits.RB0 == 0 && debouncing1 == 1){
  1208  0084  1806               	btfsc	6,0	;volatile
  1209  0085  2887               	goto	u6_21
  1210  0086  2888               	goto	u6_20
  1211  0087                     u6_21:
  1212  0087  2894               	goto	i1l811
  1213  0088                     u6_20:
  1214  0088                     i1l803:
  1215  0088  0378               	decf	_debouncing1,w
  1216  0089  1D03               	btfss	3,2
  1217  008A  288C               	goto	u7_21
  1218  008B  288D               	goto	u7_20
  1219  008C                     u7_21:
  1220  008C  2894               	goto	i1l811
  1221  008D                     u7_20:
  1222  008D                     i1l805:
  1223                           
  1224                           ;main_contador.c: 76:                 contador++;
  1225  008D  3001               	movlw	1
  1226  008E  00F1               	movwf	??_ISR
  1227  008F  0871               	movf	??_ISR,w
  1228  0090  07F9               	addwf	_contador,f
  1229  0091                     i1l807:
  1230                           
  1231                           ;main_contador.c: 77:                 PORTD = contador;
  1232  0091  0879               	movf	_contador,w
  1233  0092  0088               	movwf	8	;volatile
  1234  0093                     i1l809:
  1235                           
  1236                           ;main_contador.c: 78:                 debouncing1 = 0;
  1237  0093  01F8               	clrf	_debouncing1
  1238  0094                     i1l811:
  1239                           
  1240                           ;main_contador.c: 80:             if(PORTBbits.RB1 == 0 && debouncing2 == 1){
  1241  0094  1886               	btfsc	6,1	;volatile
  1242  0095  2897               	goto	u8_21
  1243  0096  2898               	goto	u8_20
  1244  0097                     u8_21:
  1245  0097  28A2               	goto	i1l821
  1246  0098                     u8_20:
  1247  0098                     i1l813:
  1248  0098  0377               	decf	_debouncing2,w
  1249  0099  1D03               	btfss	3,2
  1250  009A  289C               	goto	u9_21
  1251  009B  289D               	goto	u9_20
  1252  009C                     u9_21:
  1253  009C  28A2               	goto	i1l821
  1254  009D                     u9_20:
  1255  009D                     i1l815:
  1256                           
  1257                           ;main_contador.c: 81:                 contador--;
  1258  009D  3001               	movlw	1
  1259  009E  02F9               	subwf	_contador,f
  1260  009F                     i1l817:
  1261                           
  1262                           ;main_contador.c: 82:                 PORTD = contador;
  1263  009F  0879               	movf	_contador,w
  1264  00A0  0088               	movwf	8	;volatile
  1265  00A1                     i1l819:
  1266                           
  1267                           ;main_contador.c: 83:                 debouncing2 = 0;
  1268  00A1  01F7               	clrf	_debouncing2
  1269  00A2                     i1l821:
  1270                           
  1271                           ;main_contador.c: 85:             INTCONbits.RBIF = 0;
  1272  00A2  100B               	bcf	11,0	;volatile
  1273  00A3                     i1l823:
  1274                           
  1275                           ;main_contador.c: 88:     if(SSPIF == 1){
  1276  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1277  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1278  00A5  1D8C               	btfss	12,3	;volatile
  1279  00A6  28A8               	goto	u10_21
  1280  00A7  28A9               	goto	u10_20
  1281  00A8                     u10_21:
  1282  00A8  28B2               	goto	i1l71
  1283  00A9                     u10_20:
  1284  00A9                     i1l825:
  1285                           
  1286                           ;main_contador.c: 89:         spiWrite(contador);
  1287  00A9  0879               	movf	_contador,w
  1288  00AA  120A  118A  212A  120A  118A  	fcall	_spiWrite
  1289  00AF                     i1l827:
  1290                           
  1291                           ;main_contador.c: 90:         SSPIF = 0;
  1292  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1293  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1294  00B1  118C               	bcf	12,3	;volatile
  1295  00B2                     i1l71:
  1296  00B2  0873               	movf	??_ISR+2,w
  1297  00B3  008A               	movwf	10
  1298  00B4  0E72               	swapf	??_ISR+1,w
  1299  00B5  0083               	movwf	3
  1300  00B6  0EFE               	swapf	btemp,f
  1301  00B7  0E7E               	swapf	btemp,w
  1302  00B8  0009               	retfie
  1303  00B9                     __end_of_ISR:
  1304                           
  1305                           	psect	intentry
  1306  0004                     __pintentry:	
  1307                           ;incstack = 0
  1308                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1309                           
  1310  0004                     interrupt_function:
  1311  007E                     saved_w	set	btemp
  1312  0004  00FE               	movwf	btemp
  1313  0005  0E03               	swapf	3,w
  1314  0006  00F2               	movwf	??_ISR+1
  1315  0007  080A               	movf	10,w
  1316  0008  00F3               	movwf	??_ISR+2
  1317  0009  120A  118A  2872   	ljmp	_ISR
  1318                           
  1319                           	psect	text6
  1320  012A                     __ptext6:	
  1321 ;; *************** function _spiWrite *****************
  1322 ;; Defined at:
  1323 ;;		line 36 in file "SPI.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  dat             1    wreg     unsigned char 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  dat             1    0[COMMON] unsigned char 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1337 ;;      Params:         0       0       0       0       0
  1338 ;;      Locals:         1       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0
  1340 ;;      Totals:         1       0       0       0       0
  1341 ;;Total ram usage:        1 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_ISR
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           
  1351                           ;psect for function _spiWrite
  1352  012A                     _spiWrite:
  1353                           
  1354                           ;incstack = 0
  1355                           ; Regs used in _spiWrite: [wreg]
  1356                           ;spiWrite@dat stored from wreg
  1357  012A  00F0               	movwf	spiWrite@dat
  1358  012B                     i1l757:
  1359                           
  1360                           ;SPI.c: 36: void spiWrite(char dat);SPI.c: 37: {;SPI.c: 38:     SSPBUF = dat;
  1361  012B  0870               	movf	spiWrite@dat,w
  1362  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1363  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1364  012E  0093               	movwf	19	;volatile
  1365  012F                     i1l127:
  1366  012F  0008               	return
  1367  0130                     __end_of_spiWrite:
  1368  007E                     btemp	set	126	;btemp
  1369  007E                     wtemp0	set	126
  1370                           
  1371                           	psect	config
  1372                           
  1373                           ;Config register CONFIG1 @ 0x2007
  1374                           ;	Oscillator Selection bits
  1375                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1376                           ;	Watchdog Timer Enable bit
  1377                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1378                           ;	Power-up Timer Enable bit
  1379                           ;	PWRTE = OFF, PWRT disabled
  1380                           ;	RE3/MCLR pin function select bit
  1381                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1382                           ;	Code Protection bit
  1383                           ;	CP = OFF, Program memory code protection is disabled
  1384                           ;	Data Code Protection bit
  1385                           ;	CPD = OFF, Data memory code protection is disabled
  1386                           ;	Brown Out Reset Selection bits
  1387                           ;	BOREN = OFF, BOR disabled
  1388                           ;	Internal External Switchover bit
  1389                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1390                           ;	Fail-Safe Clock Monitor Enabled bit
  1391                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1392                           ;	Low Voltage Programming Enable bit
  1393                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1394                           ;	In-Circuit Debugger Mode bit
  1395                           ;	DEBUG = 0x1, unprogrammed default
  1396  2007                     	org	8199
  1397  2007  20D6               	dw	8406
  1398                           
  1399                           ;Config register CONFIG2 @ 0x2008
  1400                           ;	Brown-out Reset Selection bit
  1401                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1402                           ;	Flash Program Memory Self Write Enable bits
  1403                           ;	WRT = OFF, Write protection off
  1404  2008                     	org	8200
  1405  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_initOsc
    _setup->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     471
                                              1 BANK0      2     2      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     471
                   _Config_INTERRUPT
                            _initOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _Config_INTERRUPT
     _initOsc
     _spiInit

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 07:48:34 2021

              _SSPSTATbits 0094                         l82 00E6                         l91 0018  
                       l92 0070                         l85 0129                         l93 001E  
                       l94 0024                         l95 002A                         l96 0030  
                       l97 0036                         l98 003C                         l99 0042  
                      l100 0048                        l101 0071                        l117 00FF  
                      l118 0104                        l731 004E                        l741 0120  
                      l743 0121                        l727 0017                        l745 0124  
                      l737 0119                        l739 011C                        l941 00F7  
                      l943 00F9                        l951 00C2                        l945 00FE  
                      l937 00EA                        l961 00CC                        l953 00C5  
                      l939 00F3                        l971 00D3                        l963 00CD  
                      l955 00C6                        l947 00B9                        l973 00D4  
                      l965 00CE                        l957 00C9                        l949 00BF  
                      l981 0105                        l975 00D5                        l967 00D1  
                      l959 00CB                        l983 0106                        l977 00DA  
                      l969 00D2                        l985 010B                        l979 00DD  
                      u120 00F3                        u121 00F2                        u137 0111  
                      _ISR 0072                       ?_ISR 0070                       l1007 0056  
                     _IOCB 0096                       i1l71 00B2                       i1l66 007E  
                     i1l67 0084                       u3_20 0076                       u3_21 0075  
                     u4_20 007C                       u4_21 007B                       u5_20 0082  
                     u5_21 0081                       u6_20 0088                       u6_21 0087  
                     u7_20 008D                       u7_21 008C                       u8_20 0098  
                     u8_21 0097                       u9_20 009D                       u9_21 009C  
                     _main 0105                       btemp 007E   __end_of_Config_INTERRUPT 012A  
                     start 000C                      ??_ISR 0071                      ?_main 0070  
                    _ANSEL 0188                      i1l127 012F                      i1l801 0082  
                    i1l803 0088                      i1l811 0094                      i1l813 0098  
                    i1l821 00A2                      i1l805 008D                      i1l815 009D  
                    i1l807 0091                      i1l823 00A3                      i1l825 00A9  
                    i1l817 009F                      i1l809 0093                      i1l827 00AF  
                    i1l819 00A1                      i1l757 012B                      i1l795 0072  
                    i1l797 0076                      i1l799 007C                      u10_20 00A9  
                    u10_21 00A8                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _SSPIF 0063  
                    _nRBPU 040F            __end_of_initOsc 0072                      _setup 00B9  
                    pclath 000A            __end_of_spiInit 0105                      status 0003  
                    wtemp0 007E            __initialization 000F               __end_of_main 0119  
                   ??_main 0021                     _ADCON1 009F                initOsc@IRCF 0076  
                   ?_setup 0070                     _ANSELH 0189                     _TRISC3 043B  
                   _TRISC5 043D                     _SSPCON 0014                     _SSPBUF 0013  
                ??_initOsc 0074                     saved_w 007E           __end_of_spiWrite 0130  
                ??_spiInit 0077    __end_of__initialization 0012             __pcstackCOMMON 0070  
            __end_of_setup 00E7                    ??_setup 0077          ?_Config_INTERRUPT 0070  
               __pmaintext 0105         ??_Config_INTERRUPT 0074                 __pintentry 0004  
                  _SSPSTAT 0094                  ?_spiWrite 0070                    __ptext1 00B9  
                  __ptext2 00E7                    __ptext3 0016                    __ptext4 0119  
                  __ptext5 0072                    __ptext6 012A               __size_of_ISR 0047  
                  _initOsc 0016                    _spiInit 00E7       end_of_initialization 0012  
               ??_spiWrite 0070                  _PORTBbits 0006                  _TRISAbits 0085  
              spiWrite@dat 0070        start_initialization 000F                __end_of_ISR 00B9  
__size_of_Config_INTERRUPT 0011                __pbssCOMMON 0077                  ___latbits 0002  
            __pcstackBANK0 0020                _debouncing1 0078                _debouncing2 0077  
        __size_of_spiWrite 0006                   ?_initOsc 0070                   ?_spiInit 0074  
           __size_of_setup 002E       spiInit@sTransmitEdge 0076          interrupt_function 0004  
                 _PIE1bits 008C         spiInit@sDataSample 0074                   _PIR1bits 000C  
         _Config_INTERRUPT 0119           __size_of_initOsc 005C           __size_of_spiInit 001E  
                 _contador 0079              __size_of_main 0014                   _spiWrite 012A  
             spiInit@sType 0020          spiInit@sClockIdle 0075                 _INTCONbits 000B  
                 intlevel1 0000                 _OSCCONbits 008F  
