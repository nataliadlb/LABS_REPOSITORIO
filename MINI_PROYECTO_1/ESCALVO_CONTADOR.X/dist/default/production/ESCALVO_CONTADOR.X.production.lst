

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 18 12:17:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0013                     _SSPBUF	set	19
   368  0014                     _SSPCON	set	20
   369  000C                     _PIR1bits	set	12
   370  0009                     _PORTE	set	9
   371  0005                     _PORTA	set	5
   372  0006                     _PORTB	set	6
   373  0008                     _PORTD	set	8
   374  0007                     _PORTC	set	7
   375  0006                     _PORTBbits	set	6
   376  000B                     _INTCONbits	set	11
   377  0063                     _SSPIF	set	99
   378  0094                     _SSPSTATbits	set	148
   379  0094                     _SSPSTAT	set	148
   380  008F                     _OSCCONbits	set	143
   381  008C                     _PIE1bits	set	140
   382  0096                     _IOCB	set	150
   383  0089                     _TRISE	set	137
   384  0088                     _TRISD	set	136
   385  0087                     _TRISC	set	135
   386  0086                     _TRISB	set	134
   387  0085                     _TRISA	set	133
   388  043B                     _TRISC3	set	1083
   389  043D                     _TRISC5	set	1085
   390  0189                     _ANSELH	set	393
   391  0188                     _ANSEL	set	392
   392                           
   393                           	psect	cinit
   394  000F                     start_initialization:	
   395                           ; #config settings
   396                           
   397  000F                     __initialization:
   398                           
   399                           ; Clear objects allocated to COMMON
   400  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   401  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   402  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   403  0012                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406  0012                     __end_of__initialization:
   407  0012  0183               	clrf	3
   408  0013  120A  118A  2916   	ljmp	_main	;jump to C main() function
   409                           
   410                           	psect	bssCOMMON
   411  0077                     __pbssCOMMON:
   412  0077                     _debouncing2:
   413  0077                     	ds	1
   414  0078                     _debouncing1:
   415  0078                     	ds	1
   416  0079                     _contador:
   417  0079                     	ds	1
   418                           
   419                           	psect	cstackCOMMON
   420  0070                     __pcstackCOMMON:
   421  0070                     ?_spiRead:
   422  0070                     ??_spiRead:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_spiWrite:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ??_spiWrite:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_setup:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_initOsc:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_Config_INTERRUPT:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_ISR:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_main:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_spiReceiveWait:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ??_spiReceiveWait:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     spiWrite@dat:	
   453                           ; 1 bytes @ 0x0
   454                           
   455                           
   456                           ; 1 bytes @ 0x0
   457  0070                     	ds	1
   458  0071                     ??_ISR:
   459                           
   460                           ; 1 bytes @ 0x1
   461  0071                     	ds	3
   462  0074                     ??_initOsc:
   463  0074                     ??_Config_INTERRUPT:	
   464                           ; 1 bytes @ 0x4
   465                           
   466  0074                     ?_spiInit:	
   467                           ; 1 bytes @ 0x4
   468                           
   469  0074                     spiInit@sDataSample:	
   470                           ; 1 bytes @ 0x4
   471                           
   472                           
   473                           ; 1 bytes @ 0x4
   474  0074                     	ds	1
   475  0075                     spiInit@sClockIdle:
   476                           
   477                           ; 1 bytes @ 0x5
   478  0075                     	ds	1
   479  0076                     initOsc@IRCF:
   480  0076                     spiInit@sTransmitEdge:	
   481                           ; 1 bytes @ 0x6
   482                           
   483                           
   484                           ; 1 bytes @ 0x6
   485  0076                     	ds	1
   486  0077                     ??_setup:
   487  0077                     ??_spiInit:	
   488                           ; 1 bytes @ 0x7
   489                           
   490  0077                     ??_main:	
   491                           ; 1 bytes @ 0x7
   492                           
   493                           
   494                           	psect	cstackBANK0
   495  0020                     __pcstackBANK0:	
   496                           ; 1 bytes @ 0x7
   497                           
   498  0020                     spiInit@sType:
   499                           
   500                           ; 1 bytes @ 0x0
   501  0020                     	ds	1
   502                           
   503                           	psect	maintext
   504  0116                     __pmaintext:	
   505 ;;
   506 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   507 ;;
   508 ;; *************** function _main *****************
   509 ;; Defined at:
   510 ;;		line 99 in file "main_contador.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : B00/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          0       0       0       0       0
   527 ;;      Totals:         0       0       0       0       0
   528 ;;Total ram usage:        0 bytes
   529 ;; Hardware stack levels required when called:    5
   530 ;; This function calls:
   531 ;;		_setup
   532 ;; This function is called by:
   533 ;;		Startup code after reset
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           
   538                           ;psect for function _main
   539  0116                     _main:
   540  0116                     l955:	
   541                           ;incstack = 0
   542                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   543                           
   544                           
   545                           ;main_contador.c: 100:     setup();
   546  0116  120A  118A  20C1  120A  118A  	fcall	_setup
   547  011B                     l70:	
   548                           ;main_contador.c: 106:     while (1) {
   549                           
   550  011B                     l71:	
   551                           ;main_contador.c: 107:     }
   552                           
   553  011B  291B               	goto	l70
   554  011C  120A  118A  280C   	ljmp	start
   555  011F                     __end_of_main:
   556                           
   557                           	psect	text1
   558  00C1                     __ptext1:	
   559 ;; *************** function _setup *****************
   560 ;; Defined at:
   561 ;;		line 116 in file "main_contador.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   575 ;;      Params:         0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0
   578 ;;      Totals:         0       0       0       0       0
   579 ;;Total ram usage:        0 bytes
   580 ;; Hardware stack levels used:    1
   581 ;; Hardware stack levels required when called:    4
   582 ;; This function calls:
   583 ;;		_Config_INTERRUPT
   584 ;;		_initOsc
   585 ;;		_spiInit
   586 ;; This function is called by:
   587 ;;		_main
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           
   592                           ;psect for function _setup
   593  00C1                     _setup:
   594  00C1                     l925:	
   595                           ;incstack = 0
   596                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   597                           
   598                           
   599                           ;main_contador.c: 117:     initOsc(0b00000111);
   600  00C1  3007               	movlw	7
   601  00C2  120A  118A  2016  120A  118A  	fcall	_initOsc
   602  00C7                     l927:
   603                           
   604                           ;main_contador.c: 118:     ANSEL = 0;
   605  00C7  1683               	bsf	3,5	;RP0=1, select bank3
   606  00C8  1703               	bsf	3,6	;RP1=1, select bank3
   607  00C9  0188               	clrf	8	;volatile
   608  00CA                     l929:
   609                           
   610                           ;main_contador.c: 119:     ANSELH = 0;
   611  00CA  0189               	clrf	9	;volatile
   612  00CB                     l931:
   613                           
   614                           ;main_contador.c: 120:     TRISA = 0;
   615  00CB  1683               	bsf	3,5	;RP0=1, select bank1
   616  00CC  1303               	bcf	3,6	;RP1=0, select bank1
   617  00CD  0185               	clrf	5	;volatile
   618  00CE                     l933:
   619                           
   620                           ;main_contador.c: 121:     TRISB = 0b00000011;
   621  00CE  3003               	movlw	3
   622  00CF  0086               	movwf	6	;volatile
   623  00D0                     l935:
   624                           
   625                           ;main_contador.c: 122:     TRISC = 0;
   626  00D0  0187               	clrf	7	;volatile
   627  00D1                     l937:
   628                           
   629                           ;main_contador.c: 123:     TRISD = 0;
   630  00D1  0188               	clrf	8	;volatile
   631  00D2                     l939:
   632                           
   633                           ;main_contador.c: 124:     TRISE = 0;
   634  00D2  0189               	clrf	9	;volatile
   635  00D3                     l941:
   636                           
   637                           ;main_contador.c: 125:     PORTA = 0;
   638  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   639  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   640  00D5  0185               	clrf	5	;volatile
   641  00D6                     l943:
   642                           
   643                           ;main_contador.c: 126:     PORTB = 0;
   644  00D6  0186               	clrf	6	;volatile
   645  00D7                     l945:
   646                           
   647                           ;main_contador.c: 127:     PORTC = 0;
   648  00D7  0187               	clrf	7	;volatile
   649  00D8                     l947:
   650                           
   651                           ;main_contador.c: 128:     PORTD = 0;
   652  00D8  0188               	clrf	8	;volatile
   653  00D9                     l949:
   654                           
   655                           ;main_contador.c: 129:     PORTE = 0;
   656  00D9  0189               	clrf	9	;volatile
   657  00DA                     l951:
   658                           
   659                           ;main_contador.c: 130:     Config_INTERRUPT();
   660  00DA  120A  118A  2107  120A  118A  	fcall	_Config_INTERRUPT
   661  00DF                     l953:
   662                           
   663                           ;main_contador.c: 131:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_ID
      +                          LE_LOW, SPI_IDLE_2_ACTIVE);
   664  00DF  01F4               	clrf	spiInit@sDataSample
   665  00E0  01F5               	clrf	spiInit@sClockIdle
   666  00E1  01F6               	clrf	spiInit@sTransmitEdge
   667  00E2  3024               	movlw	36
   668  00E3  120A  118A  20E9  120A  118A  	fcall	_spiInit
   669  00E8                     l76:
   670  00E8  0008               	return
   671  00E9                     __end_of_setup:
   672                           
   673                           	psect	text2
   674  00E9                     __ptext2:	
   675 ;; *************** function _spiInit *****************
   676 ;; Defined at:
   677 ;;		line 14 in file "SPI.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  sType           1    wreg     enum E1264
   680 ;;  sDataSample     1    4[COMMON] enum E1272
   681 ;;  sClockIdle      1    5[COMMON] enum E1276
   682 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  sType           1    0[BANK0 ] enum E1264
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         3       0       0       0       0
   695 ;;      Locals:         0       1       0       0       0
   696 ;;      Temps:          0       0       0       0       0
   697 ;;      Totals:         3       1       0       0       0
   698 ;;Total ram usage:        4 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; Hardware stack levels required when called:    3
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_setup
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function _spiInit
   710  00E9                     _spiInit:
   711                           
   712                           ;incstack = 0
   713                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   714                           ;spiInit@sType stored from wreg
   715  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   716  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   717  00EB  00A0               	movwf	spiInit@sType
   718  00EC                     l915:
   719                           
   720                           ;SPI.c: 14: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 15: {;SPI.c: 16:     TRISC5 = 0;
   721  00EC  1683               	bsf	3,5	;RP0=1, select bank1
   722  00ED  1303               	bcf	3,6	;RP1=0, select bank1
   723  00EE  1287               	bcf	7,5	;volatile
   724                           
   725                           ;SPI.c: 17:     if(sType & 0b00000100)
   726  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   727  00F0  1303               	bcf	3,6	;RP1=0, select bank0
   728  00F1  1D20               	btfss	spiInit@sType,2
   729  00F2  28F4               	goto	u121
   730  00F3  28F5               	goto	u120
   731  00F4                     u121:
   732  00F4  28FB               	goto	l921
   733  00F5                     u120:
   734  00F5                     l917:
   735                           
   736                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sTransmitEdge;
   737  00F5  0876               	movf	spiInit@sTransmitEdge,w
   738  00F6  1683               	bsf	3,5	;RP0=1, select bank1
   739  00F7  1303               	bcf	3,6	;RP1=0, select bank1
   740  00F8  0094               	movwf	20	;volatile
   741  00F9                     l919:
   742                           
   743                           ;SPI.c: 20:         TRISC3 = 1;
   744  00F9  1587               	bsf	7,3	;volatile
   745                           
   746                           ;SPI.c: 21:     }
   747  00FA  2901               	goto	l111
   748  00FB                     l921:
   749                           
   750                           ;SPI.c: 23:     {;SPI.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
   751  00FB  0874               	movf	spiInit@sDataSample,w
   752  00FC  0476               	iorwf	spiInit@sTransmitEdge,w
   753  00FD  1683               	bsf	3,5	;RP0=1, select bank1
   754  00FE  1303               	bcf	3,6	;RP1=0, select bank1
   755  00FF  0094               	movwf	20	;volatile
   756  0100                     l923:
   757                           
   758                           ;SPI.c: 25:         TRISC3 = 0;
   759  0100  1187               	bcf	7,3	;volatile
   760  0101                     l111:	
   761                           ;SPI.c: 26:     }
   762                           
   763                           
   764                           ;SPI.c: 28:     SSPCON = sType | sClockIdle;
   765  0101  1283               	bcf	3,5	;RP0=0, select bank0
   766  0102  1303               	bcf	3,6	;RP1=0, select bank0
   767  0103  0820               	movf	spiInit@sType,w
   768  0104  0475               	iorwf	spiInit@sClockIdle,w
   769  0105  0094               	movwf	20	;volatile
   770  0106                     l112:
   771  0106  0008               	return
   772  0107                     __end_of_spiInit:
   773                           
   774                           	psect	text3
   775  0016                     __ptext3:	
   776 ;; *************** function _initOsc *****************
   777 ;; Defined at:
   778 ;;		line 3 in file "Oscilador.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  IRCF            1    wreg     unsigned char 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  IRCF            1    6[COMMON] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   792 ;;      Params:         0       0       0       0       0
   793 ;;      Locals:         1       0       0       0       0
   794 ;;      Temps:          2       0       0       0       0
   795 ;;      Totals:         3       0       0       0       0
   796 ;;Total ram usage:        3 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; Hardware stack levels required when called:    3
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_setup
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           
   807                           ;psect for function _initOsc
   808  0016                     _initOsc:
   809                           
   810                           ;incstack = 0
   811                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   812                           ;initOsc@IRCF stored from wreg
   813  0016  00F6               	movwf	initOsc@IRCF
   814  0017                     l721:
   815                           
   816                           ;Oscilador.c: 5:     switch(IRCF){
   817  0017  284E               	goto	l725
   818  0018                     l85:	
   819                           ;Oscilador.c: 6:         case 0:
   820                           
   821                           
   822                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   823  0018  1683               	bsf	3,5	;RP0=1, select bank1
   824  0019  1303               	bcf	3,6	;RP1=0, select bank1
   825  001A  130F               	bcf	15,6	;volatile
   826                           
   827                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   828  001B  128F               	bcf	15,5	;volatile
   829                           
   830                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   831  001C  120F               	bcf	15,4	;volatile
   832                           
   833                           ;Oscilador.c: 10:             break;
   834  001D  2870               	goto	l86
   835  001E                     l87:	
   836                           ;Oscilador.c: 11:          case 1:
   837                           
   838                           
   839                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   840  001E  1683               	bsf	3,5	;RP0=1, select bank1
   841  001F  1303               	bcf	3,6	;RP1=0, select bank1
   842  0020  130F               	bcf	15,6	;volatile
   843                           
   844                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   845  0021  128F               	bcf	15,5	;volatile
   846                           
   847                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   848  0022  160F               	bsf	15,4	;volatile
   849                           
   850                           ;Oscilador.c: 15:             break;
   851  0023  2870               	goto	l86
   852  0024                     l88:	
   853                           ;Oscilador.c: 16:         case 2:
   854                           
   855                           
   856                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   857  0024  1683               	bsf	3,5	;RP0=1, select bank1
   858  0025  1303               	bcf	3,6	;RP1=0, select bank1
   859  0026  130F               	bcf	15,6	;volatile
   860                           
   861                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   862  0027  168F               	bsf	15,5	;volatile
   863                           
   864                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   865  0028  120F               	bcf	15,4	;volatile
   866                           
   867                           ;Oscilador.c: 20:             break;
   868  0029  2870               	goto	l86
   869  002A                     l89:	
   870                           ;Oscilador.c: 21:         case 3:
   871                           
   872                           
   873                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   874  002A  1683               	bsf	3,5	;RP0=1, select bank1
   875  002B  1303               	bcf	3,6	;RP1=0, select bank1
   876  002C  130F               	bcf	15,6	;volatile
   877                           
   878                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   879  002D  168F               	bsf	15,5	;volatile
   880                           
   881                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   882  002E  160F               	bsf	15,4	;volatile
   883                           
   884                           ;Oscilador.c: 25:             break;
   885  002F  2870               	goto	l86
   886  0030                     l90:	
   887                           ;Oscilador.c: 26:         case 4:
   888                           
   889                           
   890                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   891  0030  1683               	bsf	3,5	;RP0=1, select bank1
   892  0031  1303               	bcf	3,6	;RP1=0, select bank1
   893  0032  170F               	bsf	15,6	;volatile
   894                           
   895                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   896  0033  128F               	bcf	15,5	;volatile
   897                           
   898                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   899  0034  120F               	bcf	15,4	;volatile
   900                           
   901                           ;Oscilador.c: 30:             break;
   902  0035  2870               	goto	l86
   903  0036                     l91:	
   904                           ;Oscilador.c: 31:         case 5:
   905                           
   906                           
   907                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   908  0036  1683               	bsf	3,5	;RP0=1, select bank1
   909  0037  1303               	bcf	3,6	;RP1=0, select bank1
   910  0038  170F               	bsf	15,6	;volatile
   911                           
   912                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
   913  0039  128F               	bcf	15,5	;volatile
   914                           
   915                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
   916  003A  160F               	bsf	15,4	;volatile
   917                           
   918                           ;Oscilador.c: 35:             break;
   919  003B  2870               	goto	l86
   920  003C                     l92:	
   921                           ;Oscilador.c: 36:         case 6:
   922                           
   923                           
   924                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
   925  003C  1683               	bsf	3,5	;RP0=1, select bank1
   926  003D  1303               	bcf	3,6	;RP1=0, select bank1
   927  003E  170F               	bsf	15,6	;volatile
   928                           
   929                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
   930  003F  168F               	bsf	15,5	;volatile
   931                           
   932                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
   933  0040  120F               	bcf	15,4	;volatile
   934                           
   935                           ;Oscilador.c: 40:             break;
   936  0041  2870               	goto	l86
   937  0042                     l93:	
   938                           ;Oscilador.c: 41:         case 7:
   939                           
   940                           
   941                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
   942  0042  1683               	bsf	3,5	;RP0=1, select bank1
   943  0043  1303               	bcf	3,6	;RP1=0, select bank1
   944  0044  170F               	bsf	15,6	;volatile
   945                           
   946                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
   947  0045  168F               	bsf	15,5	;volatile
   948                           
   949                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
   950  0046  160F               	bsf	15,4	;volatile
   951                           
   952                           ;Oscilador.c: 45:             break;
   953  0047  2870               	goto	l86
   954  0048                     l94:	
   955                           ;Oscilador.c: 46:         default:
   956                           
   957                           
   958                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
   959  0048  1683               	bsf	3,5	;RP0=1, select bank1
   960  0049  1303               	bcf	3,6	;RP1=0, select bank1
   961  004A  170F               	bsf	15,6	;volatile
   962                           
   963                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
   964  004B  168F               	bsf	15,5	;volatile
   965                           
   966                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
   967  004C  120F               	bcf	15,4	;volatile
   968                           
   969                           ;Oscilador.c: 50:             break;
   970  004D  2870               	goto	l86
   971  004E                     l725:
   972  004E  0876               	movf	initOsc@IRCF,w
   973  004F  00F4               	movwf	??_initOsc
   974  0050  01F5               	clrf	??_initOsc+1
   975                           
   976                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   977                           ; Switch size 1, requested type "simple"
   978                           ; Number of cases is 1, Range of values is 0 to 0
   979                           ; switch strategies available:
   980                           ; Name         Instructions Cycles
   981                           ; simple_byte            4     3 (average)
   982                           ; direct_byte           11     8 (fixed)
   983                           ; jumptable            260     6 (fixed)
   984                           ;	Chosen strategy is simple_byte
   985  0051  0875               	movf	??_initOsc+1,w
   986  0052  3A00               	xorlw	0	; case 0
   987  0053  1903               	skipnz
   988  0054  2856               	goto	l977
   989  0055  2848               	goto	l94
   990  0056                     l977:
   991                           
   992                           ; Switch size 1, requested type "simple"
   993                           ; Number of cases is 8, Range of values is 0 to 7
   994                           ; switch strategies available:
   995                           ; Name         Instructions Cycles
   996                           ; simple_byte           25    13 (average)
   997                           ; direct_byte           32     8 (fixed)
   998                           ; jumptable            260     6 (fixed)
   999                           ;	Chosen strategy is simple_byte
  1000  0056  0874               	movf	??_initOsc,w
  1001  0057  3A00               	xorlw	0	; case 0
  1002  0058  1903               	skipnz
  1003  0059  2818               	goto	l85
  1004  005A  3A01               	xorlw	1	; case 1
  1005  005B  1903               	skipnz
  1006  005C  281E               	goto	l87
  1007  005D  3A03               	xorlw	3	; case 2
  1008  005E  1903               	skipnz
  1009  005F  2824               	goto	l88
  1010  0060  3A01               	xorlw	1	; case 3
  1011  0061  1903               	skipnz
  1012  0062  282A               	goto	l89
  1013  0063  3A07               	xorlw	7	; case 4
  1014  0064  1903               	skipnz
  1015  0065  2830               	goto	l90
  1016  0066  3A01               	xorlw	1	; case 5
  1017  0067  1903               	skipnz
  1018  0068  2836               	goto	l91
  1019  0069  3A03               	xorlw	3	; case 6
  1020  006A  1903               	skipnz
  1021  006B  283C               	goto	l92
  1022  006C  3A01               	xorlw	1	; case 7
  1023  006D  1903               	skipnz
  1024  006E  2842               	goto	l93
  1025  006F  2848               	goto	l94
  1026  0070                     l86:
  1027                           
  1028                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1029  0070  140F               	bsf	15,0	;volatile
  1030  0071                     l95:
  1031  0071  0008               	return
  1032  0072                     __end_of_initOsc:
  1033                           
  1034                           	psect	text4
  1035  0107                     __ptext4:	
  1036 ;; *************** function _Config_INTERRUPT *****************
  1037 ;; Defined at:
  1038 ;;		line 135 in file "main_contador.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0
  1055 ;;      Totals:         0       0       0       0       0
  1056 ;;Total ram usage:        0 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    3
  1059 ;; This function calls:
  1060 ;;		Nothing
  1061 ;; This function is called by:
  1062 ;;		_setup
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           
  1067                           ;psect for function _Config_INTERRUPT
  1068  0107                     _Config_INTERRUPT:
  1069  0107                     l731:	
  1070                           ;incstack = 0
  1071                           ; Regs used in _Config_INTERRUPT: [wreg]
  1072                           
  1073                           
  1074                           ;main_contador.c: 136:     INTCONbits.GIE = 1;
  1075  0107  178B               	bsf	11,7	;volatile
  1076                           
  1077                           ;main_contador.c: 137:     INTCONbits.RBIE = 1;
  1078  0108  158B               	bsf	11,3	;volatile
  1079                           
  1080                           ;main_contador.c: 138:     INTCONbits.RBIF = 0;
  1081  0109  100B               	bcf	11,0	;volatile
  1082  010A                     l733:
  1083                           
  1084                           ;main_contador.c: 139:     IOCB = 0b00000011;
  1085  010A  3003               	movlw	3
  1086  010B  1683               	bsf	3,5	;RP0=1, select bank1
  1087  010C  1303               	bcf	3,6	;RP1=0, select bank1
  1088  010D  0096               	movwf	22	;volatile
  1089  010E                     l735:
  1090                           
  1091                           ;main_contador.c: 140:     INTCONbits.PEIE = 1;
  1092  010E  170B               	bsf	11,6	;volatile
  1093  010F                     l737:
  1094                           
  1095                           ;main_contador.c: 141:     PIR1bits.SSPIF = 0;
  1096  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0111  118C               	bcf	12,3	;volatile
  1099  0112                     l739:
  1100                           
  1101                           ;main_contador.c: 142:     PIE1bits.SSPIE = 1;
  1102  0112  1683               	bsf	3,5	;RP0=1, select bank1
  1103  0113  1303               	bcf	3,6	;RP1=0, select bank1
  1104  0114  158C               	bsf	12,3	;volatile
  1105  0115                     l79:
  1106  0115  0008               	return
  1107  0116                     __end_of_Config_INTERRUPT:
  1108                           
  1109                           	psect	text5
  1110  0072                     __ptext5:	
  1111 ;; *************** function _ISR *****************
  1112 ;; Defined at:
  1113 ;;		line 63 in file "main_contador.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0, pclath, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1127 ;;      Params:         0       0       0       0       0
  1128 ;;      Locals:         0       0       0       0       0
  1129 ;;      Temps:          3       0       0       0       0
  1130 ;;      Totals:         3       0       0       0       0
  1131 ;;Total ram usage:        3 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; Hardware stack levels required when called:    2
  1134 ;; This function calls:
  1135 ;;		_spiRead
  1136 ;;		_spiWrite
  1137 ;; This function is called by:
  1138 ;;		Interrupt level 1
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           
  1143                           ;psect for function _ISR
  1144  0072                     _ISR:
  1145  0072                     i1l791:
  1146                           
  1147                           ;main_contador.c: 65:     if (INTCONbits.RBIF == 1){
  1148  0072  1C0B               	btfss	11,0	;volatile
  1149  0073  2875               	goto	u3_21
  1150  0074  2876               	goto	u3_20
  1151  0075                     u3_21:
  1152  0075  28A3               	goto	i1l819
  1153  0076                     u3_20:
  1154  0076                     i1l793:
  1155                           
  1156                           ;main_contador.c: 67:             if (PORTBbits.RB0 == 1){
  1157  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1159  0078  1C06               	btfss	6,0	;volatile
  1160  0079  287B               	goto	u4_21
  1161  007A  287C               	goto	u4_20
  1162  007B                     u4_21:
  1163  007B  287E               	goto	i1l60
  1164  007C                     u4_20:
  1165  007C                     i1l795:
  1166                           
  1167                           ;main_contador.c: 68:                 debouncing1 = 1;
  1168  007C  01F8               	clrf	_debouncing1
  1169  007D  0AF8               	incf	_debouncing1,f
  1170  007E                     i1l60:	
  1171                           ;main_contador.c: 70:             }
  1172                           
  1173                           
  1174                           ;main_contador.c: 71:             if (PORTBbits.RB1 == 1){
  1175  007E  1C86               	btfss	6,1	;volatile
  1176  007F  2881               	goto	u5_21
  1177  0080  2882               	goto	u5_20
  1178  0081                     u5_21:
  1179  0081  2884               	goto	i1l61
  1180  0082                     u5_20:
  1181  0082                     i1l797:
  1182                           
  1183                           ;main_contador.c: 72:                 debouncing2 = 1;
  1184  0082  01F7               	clrf	_debouncing2
  1185  0083  0AF7               	incf	_debouncing2,f
  1186  0084                     i1l61:	
  1187                           ;main_contador.c: 74:             }
  1188                           
  1189                           
  1190                           ;main_contador.c: 75:             if(PORTBbits.RB0 == 0 && debouncing1 == 1){
  1191  0084  1806               	btfsc	6,0	;volatile
  1192  0085  2887               	goto	u6_21
  1193  0086  2888               	goto	u6_20
  1194  0087                     u6_21:
  1195  0087  2894               	goto	i1l807
  1196  0088                     u6_20:
  1197  0088                     i1l799:
  1198  0088  0378               	decf	_debouncing1,w
  1199  0089  1D03               	btfss	3,2
  1200  008A  288C               	goto	u7_21
  1201  008B  288D               	goto	u7_20
  1202  008C                     u7_21:
  1203  008C  2894               	goto	i1l807
  1204  008D                     u7_20:
  1205  008D                     i1l801:
  1206                           
  1207                           ;main_contador.c: 76:                 contador++;
  1208  008D  3001               	movlw	1
  1209  008E  00F1               	movwf	??_ISR
  1210  008F  0871               	movf	??_ISR,w
  1211  0090  07F9               	addwf	_contador,f
  1212  0091                     i1l803:
  1213                           
  1214                           ;main_contador.c: 77:                 PORTC = contador;
  1215  0091  0879               	movf	_contador,w
  1216  0092  0087               	movwf	7	;volatile
  1217  0093                     i1l805:
  1218                           
  1219                           ;main_contador.c: 78:                 debouncing1 = 0;
  1220  0093  01F8               	clrf	_debouncing1
  1221  0094                     i1l807:
  1222                           
  1223                           ;main_contador.c: 80:             if(PORTBbits.RB1 == 0 && debouncing2 == 1){
  1224  0094  1886               	btfsc	6,1	;volatile
  1225  0095  2897               	goto	u8_21
  1226  0096  2898               	goto	u8_20
  1227  0097                     u8_21:
  1228  0097  28A2               	goto	i1l817
  1229  0098                     u8_20:
  1230  0098                     i1l809:
  1231  0098  0377               	decf	_debouncing2,w
  1232  0099  1D03               	btfss	3,2
  1233  009A  289C               	goto	u9_21
  1234  009B  289D               	goto	u9_20
  1235  009C                     u9_21:
  1236  009C  28A2               	goto	i1l817
  1237  009D                     u9_20:
  1238  009D                     i1l811:
  1239                           
  1240                           ;main_contador.c: 81:                 contador--;
  1241  009D  3001               	movlw	1
  1242  009E  02F9               	subwf	_contador,f
  1243  009F                     i1l813:
  1244                           
  1245                           ;main_contador.c: 82:                 PORTC = contador;
  1246  009F  0879               	movf	_contador,w
  1247  00A0  0087               	movwf	7	;volatile
  1248  00A1                     i1l815:
  1249                           
  1250                           ;main_contador.c: 83:                 debouncing2 = 0;
  1251  00A1  01F7               	clrf	_debouncing2
  1252  00A2                     i1l817:
  1253                           
  1254                           ;main_contador.c: 85:             INTCONbits.RBIF = 0;
  1255  00A2  100B               	bcf	11,0	;volatile
  1256  00A3                     i1l819:
  1257                           
  1258                           ;main_contador.c: 88:     if(SSPIF == 1){
  1259  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1260  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1261  00A5  1D8C               	btfss	12,3	;volatile
  1262  00A6  28A8               	goto	u10_21
  1263  00A7  28A9               	goto	u10_20
  1264  00A8                     u10_21:
  1265  00A8  28BA               	goto	i1l65
  1266  00A9                     u10_20:
  1267  00A9                     i1l821:
  1268                           
  1269                           ;main_contador.c: 89:         PORTD = spiRead();
  1270  00A9  120A  118A  211F  120A  118A  	fcall	_spiRead
  1271  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1272  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1273  00B0  0088               	movwf	8	;volatile
  1274                           
  1275                           ;main_contador.c: 90:         spiWrite(PORTB);
  1276  00B1  0806               	movf	6,w	;volatile
  1277  00B2  120A  118A  212F  120A  118A  	fcall	_spiWrite
  1278  00B7                     i1l823:
  1279                           
  1280                           ;main_contador.c: 91:         SSPIF = 0;
  1281  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1282  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1283  00B9  118C               	bcf	12,3	;volatile
  1284  00BA                     i1l65:
  1285  00BA  0873               	movf	??_ISR+2,w
  1286  00BB  008A               	movwf	10
  1287  00BC  0E72               	swapf	??_ISR+1,w
  1288  00BD  0083               	movwf	3
  1289  00BE  0EFE               	swapf	btemp,f
  1290  00BF  0E7E               	swapf	btemp,w
  1291  00C0  0009               	retfie
  1292  00C1                     __end_of_ISR:
  1293                           
  1294                           	psect	intentry
  1295  0004                     __pintentry:	
  1296                           ;incstack = 0
  1297                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1298                           
  1299  0004                     interrupt_function:
  1300  007E                     saved_w	set	btemp
  1301  0004  00FE               	movwf	btemp
  1302  0005  0E03               	swapf	3,w
  1303  0006  00F2               	movwf	??_ISR+1
  1304  0007  080A               	movf	10,w
  1305  0008  00F3               	movwf	??_ISR+2
  1306  0009  120A  118A  2872   	ljmp	_ISR
  1307                           
  1308                           	psect	text6
  1309  012F                     __ptext6:	
  1310 ;; *************** function _spiWrite *****************
  1311 ;; Defined at:
  1312 ;;		line 36 in file "SPI.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  dat             1    wreg     unsigned char 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  dat             1    0[COMMON] unsigned char 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1326 ;;      Params:         0       0       0       0       0
  1327 ;;      Locals:         1       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0
  1329 ;;      Totals:         1       0       0       0       0
  1330 ;;Total ram usage:        1 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		_ISR
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           
  1340                           ;psect for function _spiWrite
  1341  012F                     _spiWrite:
  1342                           
  1343                           ;incstack = 0
  1344                           ; Regs used in _spiWrite: [wreg]
  1345                           ;spiWrite@dat stored from wreg
  1346  012F  00F0               	movwf	spiWrite@dat
  1347  0130                     i1l759:
  1348                           
  1349                           ;SPI.c: 36: void spiWrite(char dat);SPI.c: 37: {;SPI.c: 38:     SSPBUF = dat;
  1350  0130  0870               	movf	spiWrite@dat,w
  1351  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1352  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1353  0133  0093               	movwf	19	;volatile
  1354  0134                     i1l121:
  1355  0134  0008               	return
  1356  0135                     __end_of_spiWrite:
  1357                           
  1358                           	psect	text7
  1359  011F                     __ptext7:	
  1360 ;; *************** function _spiRead *****************
  1361 ;; Defined at:
  1362 ;;		line 49 in file "SPI.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;		None
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;		None
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  1    wreg      unsigned char 
  1369 ;; Registers used:
  1370 ;;		wreg, status,2, status,0, pclath, cstack
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1376 ;;      Params:         0       0       0       0       0
  1377 ;;      Locals:         0       0       0       0       0
  1378 ;;      Temps:          0       0       0       0       0
  1379 ;;      Totals:         0       0       0       0       0
  1380 ;;Total ram usage:        0 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; Hardware stack levels required when called:    1
  1383 ;; This function calls:
  1384 ;;		_spiReceiveWait
  1385 ;; This function is called by:
  1386 ;;		_ISR
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           
  1391                           ;psect for function _spiRead
  1392  011F                     _spiRead:
  1393  011F                     i1l753:	
  1394                           ;incstack = 0
  1395                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1396                           
  1397                           
  1398                           ;SPI.c: 51:     spiReceiveWait();
  1399  011F  120A  118A  2128  120A  118A  	fcall	_spiReceiveWait
  1400  0124                     i1l755:
  1401                           
  1402                           ;SPI.c: 52:     return(SSPBUF);
  1403  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1404  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1405  0126  0813               	movf	19,w	;volatile
  1406  0127                     i1l129:
  1407  0127  0008               	return
  1408  0128                     __end_of_spiRead:
  1409                           
  1410                           	psect	text8
  1411  0128                     __ptext8:	
  1412 ;; *************** function _spiReceiveWait *****************
  1413 ;; Defined at:
  1414 ;;		line 31 in file "SPI.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		None
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1428 ;;      Params:         0       0       0       0       0
  1429 ;;      Locals:         0       0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0
  1431 ;;      Totals:         0       0       0       0       0
  1432 ;;Total ram usage:        0 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_spiRead
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function _spiReceiveWait
  1443  0128                     _spiReceiveWait:
  1444  0128                     i1l751:	
  1445                           ;incstack = 0
  1446                           ; Regs used in _spiReceiveWait: []
  1447                           
  1448  0128                     i1l115:	
  1449                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
  1450                           
  1451  0128  1683               	bsf	3,5	;RP0=1, select bank1
  1452  0129  1303               	bcf	3,6	;RP1=0, select bank1
  1453  012A  1C14               	btfss	20,0	;volatile
  1454  012B  292D               	goto	u2_21
  1455  012C  292E               	goto	u2_20
  1456  012D                     u2_21:
  1457  012D  2928               	goto	i1l115
  1458  012E                     u2_20:
  1459  012E                     i1l118:
  1460  012E  0008               	return
  1461  012F                     __end_of_spiReceiveWait:
  1462  007E                     btemp	set	126	;btemp
  1463  007E                     wtemp0	set	126
  1464                           
  1465                           	psect	config
  1466                           
  1467                           ;Config register CONFIG1 @ 0x2007
  1468                           ;	Oscillator Selection bits
  1469                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1470                           ;	Watchdog Timer Enable bit
  1471                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1472                           ;	Power-up Timer Enable bit
  1473                           ;	PWRTE = OFF, PWRT disabled
  1474                           ;	RE3/MCLR pin function select bit
  1475                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1476                           ;	Code Protection bit
  1477                           ;	CP = OFF, Program memory code protection is disabled
  1478                           ;	Data Code Protection bit
  1479                           ;	CPD = OFF, Data memory code protection is disabled
  1480                           ;	Brown Out Reset Selection bits
  1481                           ;	BOREN = OFF, BOR disabled
  1482                           ;	Internal External Switchover bit
  1483                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1484                           ;	Fail-Safe Clock Monitor Enabled bit
  1485                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1486                           ;	Low Voltage Programming Enable bit
  1487                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1488                           ;	In-Circuit Debugger Mode bit
  1489                           ;	DEBUG = 0x1, unprogrammed default
  1490  2007                     	org	8199
  1491  2007  20D6               	dw	8406
  1492                           
  1493                           ;Config register CONFIG2 @ 0x2008
  1494                           ;	Brown-out Reset Selection bit
  1495                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1496                           ;	Flash Program Memory Self Write Enable bits
  1497                           ;	WRT = OFF, Write protection off
  1498  2008                     	org	8200
  1499  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_initOsc
    _setup->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     471
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     471
                   _Config_INTERRUPT
                            _initOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _Config_INTERRUPT
     _initOsc
     _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 18 12:17:21 2021

              _SSPSTATbits 0094                         l70 011B                         l71 011B  
                       l90 0030                         l91 0036                         l92 003C  
                       l76 00E8                         l93 0042                         l85 0018  
                       l94 0048                         l86 0070                         l79 0115  
                       l95 0071                         l87 001E                         l88 0024  
                       l89 002A                        l111 0101                        l112 0106  
                      l721 0017                        l731 0107                        l733 010A  
                      l725 004E                        l735 010E                        l737 010F  
                      l921 00FB                        l739 0112                        l923 0100  
                      l915 00EC                        l931 00CB                        l917 00F5  
                      l941 00D3                        l933 00CE                        l925 00C1  
                      l919 00F9                        l951 00DA                        l943 00D6  
                      l935 00D0                        l927 00C7                        l953 00DF  
                      l945 00D7                        l937 00D1                        l929 00CA  
                      l947 00D8                        l939 00D2                        l955 0116  
                      l949 00D9                        l977 0056                        u120 00F5  
                      u121 00F4                        _ISR 0072                       ?_ISR 0070  
                     _IOCB 0096                       i1l60 007E                       i1l61 0084  
                     i1l65 00BA                       u2_20 012E                       u2_21 012D  
                     u3_20 0076                       u3_21 0075                       u4_20 007C  
                     u4_21 007B                       u5_20 0082                       u5_21 0081  
                     u6_20 0088                       u6_21 0087                       u7_20 008D  
                     u7_21 008C                       u8_20 0098                       u8_21 0097  
                     u9_20 009D                       u9_21 009C                       _main 0116  
                     btemp 007E   __end_of_Config_INTERRUPT 0116                       start 000C  
                    ??_ISR 0071                      ?_main 0070                      _ANSEL 0188  
                    i1l121 0134                      i1l115 0128                      i1l118 012E  
                    i1l129 0127                      i1l801 008D                      i1l811 009D  
                    i1l803 0091                      i1l821 00A9                      i1l813 009F  
                    i1l805 0093                      i1l751 0128                      i1l823 00B7  
                    i1l815 00A1                      i1l807 0094                      i1l753 011F  
                    i1l809 0098                      i1l817 00A2                      i1l755 0124  
                    i1l819 00A3                      i1l759 0130                      i1l791 0072  
                    i1l793 0076                      i1l795 007C                      i1l797 0082  
                    i1l799 0088                      u10_20 00A9                      u10_21 00A8  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _SSPIF 0063            __end_of_initOsc 0072  
                    _setup 00C1                      pclath 000A            __end_of_spiInit 0107  
          __end_of_spiRead 0128                      status 0003                      wtemp0 007E  
          __initialization 000F               __end_of_main 011F                     ??_main 0077  
              initOsc@IRCF 0076                     ?_setup 0070                     _ANSELH 0189  
                   _TRISC3 043B                     _TRISC5 043D                     _SSPCON 0014  
                   _SSPBUF 0013                  ??_initOsc 0074                     saved_w 007E  
         __end_of_spiWrite 0135                  ??_spiInit 0077                  ??_spiRead 0070  
  __end_of__initialization 0012             __pcstackCOMMON 0070              __end_of_setup 00E9  
                  ??_setup 0077          ?_Config_INTERRUPT 0070                 __pmaintext 0116  
       ??_Config_INTERRUPT 0074                 __pintentry 0004    __size_of_spiReceiveWait 0007  
                  _SSPSTAT 0094                  ?_spiWrite 0070                    __ptext1 00C1  
                  __ptext2 00E9                    __ptext3 0016                    __ptext4 0107  
                  __ptext5 0072                    __ptext6 012F                    __ptext7 011F  
                  __ptext8 0128               __size_of_ISR 004F                    _initOsc 0016  
                  _spiInit 00E9                    _spiRead 011F       end_of_initialization 0012  
               ??_spiWrite 0070                  _PORTBbits 0006                spiWrite@dat 0070  
           _spiReceiveWait 0128        start_initialization 000F                __end_of_ISR 00C1  
   __end_of_spiReceiveWait 012F  __size_of_Config_INTERRUPT 000F                __pbssCOMMON 0077  
                ___latbits 0002              __pcstackBANK0 0020                _debouncing1 0078  
              _debouncing2 0077            ?_spiReceiveWait 0070          __size_of_spiWrite 0006  
                 ?_initOsc 0070                   ?_spiInit 0074                   ?_spiRead 0070  
           __size_of_setup 0028       spiInit@sTransmitEdge 0076          interrupt_function 0004  
                 _PIE1bits 008C         spiInit@sDataSample 0074                   _PIR1bits 000C  
         _Config_INTERRUPT 0107           __size_of_initOsc 005C           __size_of_spiInit 001E  
         __size_of_spiRead 0009                   _contador 0079              __size_of_main 0009  
                 _spiWrite 012F               spiInit@sType 0020          spiInit@sClockIdle 0075  
               _INTCONbits 000B                   intlevel1 0000           ??_spiReceiveWait 0070  
               _OSCCONbits 008F  
