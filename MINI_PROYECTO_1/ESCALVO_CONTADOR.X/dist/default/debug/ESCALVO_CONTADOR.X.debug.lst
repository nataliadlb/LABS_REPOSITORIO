

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 18 20:54:51 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0013                     _SSPBUF	set	19
   366  0014                     _SSPCON	set	20
   367  000C                     _PIR1bits	set	12
   368  0009                     _PORTE	set	9
   369  0007                     _PORTC	set	7
   370  0006                     _PORTB	set	6
   371  0005                     _PORTA	set	5
   372  0008                     _PORTD	set	8
   373  0006                     _PORTBbits	set	6
   374  000B                     _INTCONbits	set	11
   375  0063                     _SSPIF	set	99
   376  0094                     _SSPSTATbits	set	148
   377  0094                     _SSPSTAT	set	148
   378  008F                     _OSCCONbits	set	143
   379  008C                     _PIE1bits	set	140
   380  0096                     _IOCB	set	150
   381  0085                     _TRISAbits	set	133
   382  0089                     _TRISE	set	137
   383  0088                     _TRISD	set	136
   384  0087                     _TRISC	set	135
   385  0086                     _TRISB	set	134
   386  0085                     _TRISA	set	133
   387  043B                     _TRISC3	set	1083
   388  043D                     _TRISC5	set	1085
   389  0189                     _ANSELH	set	393
   390  0188                     _ANSEL	set	392
   391                           
   392                           	psect	cinit
   393  000F                     start_initialization:	
   394                           ; #config settings
   395                           
   396  000F                     __initialization:
   397                           
   398                           ; Clear objects allocated to COMMON
   399  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   400  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   401  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   402  0012                     end_of_initialization:	
   403                           ;End of C runtime variable initialization code
   404                           
   405  0012                     __end_of__initialization:
   406  0012  0183               	clrf	3
   407  0013  120A  118A  2911   	ljmp	_main	;jump to C main() function
   408                           
   409                           	psect	bssCOMMON
   410  0077                     __pbssCOMMON:
   411  0077                     _debouncing2:
   412  0077                     	ds	1
   413  0078                     _debouncing1:
   414  0078                     	ds	1
   415  0079                     _contador:
   416  0079                     	ds	1
   417                           
   418                           	psect	cstackCOMMON
   419  0070                     __pcstackCOMMON:
   420  0070                     ?_spiWrite:
   421  0070                     ??_spiWrite:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_setup:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_initOsc:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_Config_INTERRUPT:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_ISR:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_main:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     spiWrite@dat:	
   440                           ; 1 bytes @ 0x0
   441                           
   442                           
   443                           ; 1 bytes @ 0x0
   444  0070                     	ds	1
   445  0071                     ??_ISR:
   446                           
   447                           ; 1 bytes @ 0x1
   448  0071                     	ds	3
   449  0074                     ??_initOsc:
   450  0074                     ??_Config_INTERRUPT:	
   451                           ; 1 bytes @ 0x4
   452                           
   453  0074                     ?_spiInit:	
   454                           ; 1 bytes @ 0x4
   455                           
   456  0074                     spiInit@sDataSample:	
   457                           ; 1 bytes @ 0x4
   458                           
   459                           
   460                           ; 1 bytes @ 0x4
   461  0074                     	ds	1
   462  0075                     spiInit@sClockIdle:
   463                           
   464                           ; 1 bytes @ 0x5
   465  0075                     	ds	1
   466  0076                     initOsc@IRCF:
   467  0076                     spiInit@sTransmitEdge:	
   468                           ; 1 bytes @ 0x6
   469                           
   470                           
   471                           ; 1 bytes @ 0x6
   472  0076                     	ds	1
   473  0077                     ??_setup:
   474  0077                     ??_spiInit:	
   475                           ; 1 bytes @ 0x7
   476                           
   477  0077                     ??_main:	
   478                           ; 1 bytes @ 0x7
   479                           
   480                           
   481                           	psect	cstackBANK0
   482  0020                     __pcstackBANK0:	
   483                           ; 1 bytes @ 0x7
   484                           
   485  0020                     spiInit@sType:
   486                           
   487                           ; 1 bytes @ 0x0
   488  0020                     	ds	1
   489                           
   490                           	psect	maintext
   491  0111                     __pmaintext:	
   492 ;;
   493 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   494 ;;
   495 ;; *************** function _main *****************
   496 ;; Defined at:
   497 ;;		line 99 in file "main_contador.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : B00/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   511 ;;      Params:         0       0       0       0       0
   512 ;;      Locals:         0       0       0       0       0
   513 ;;      Temps:          0       0       0       0       0
   514 ;;      Totals:         0       0       0       0       0
   515 ;;Total ram usage:        0 bytes
   516 ;; Hardware stack levels required when called:    4
   517 ;; This function calls:
   518 ;;		_setup
   519 ;; This function is called by:
   520 ;;		Startup code after reset
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           
   525                           ;psect for function _main
   526  0111                     _main:
   527  0111                     l965:	
   528                           ;incstack = 0
   529                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   530                           
   531                           
   532                           ;main_contador.c: 100:     contador = 0;
   533  0111  01F9               	clrf	_contador
   534  0112                     l967:
   535                           
   536                           ;main_contador.c: 101:     setup();
   537  0112  120A  118A  20B9  120A  118A  	fcall	_setup
   538  0117                     l70:	
   539                           ;main_contador.c: 107:     while (1) {
   540                           
   541  0117                     l71:	
   542                           ;main_contador.c: 109:     }
   543                           
   544  0117  2917               	goto	l70
   545  0118  120A  118A  280C   	ljmp	start
   546  011B                     __end_of_main:
   547                           
   548                           	psect	text1
   549  00B9                     __ptext1:	
   550 ;; *************** function _setup *****************
   551 ;; Defined at:
   552 ;;		line 118 in file "main_contador.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   566 ;;      Params:         0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0
   569 ;;      Totals:         0       0       0       0       0
   570 ;;Total ram usage:        0 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; Hardware stack levels required when called:    3
   573 ;; This function calls:
   574 ;;		_Config_INTERRUPT
   575 ;;		_initOsc
   576 ;;		_spiInit
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _setup
   584  00B9                     _setup:
   585  00B9                     l933:	
   586                           ;incstack = 0
   587                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   588                           
   589                           
   590                           ;main_contador.c: 119:     initOsc(0b00000111);
   591  00B9  3007               	movlw	7
   592  00BA  120A  118A  2016  120A  118A  	fcall	_initOsc
   593  00BF                     l935:
   594                           
   595                           ;main_contador.c: 120:     ANSEL = 0;
   596  00BF  1683               	bsf	3,5	;RP0=1, select bank3
   597  00C0  1703               	bsf	3,6	;RP1=1, select bank3
   598  00C1  0188               	clrf	8	;volatile
   599  00C2                     l937:
   600                           
   601                           ;main_contador.c: 121:     ANSELH = 0;
   602  00C2  0189               	clrf	9	;volatile
   603  00C3                     l939:
   604                           
   605                           ;main_contador.c: 122:     TRISA = 0;
   606  00C3  1683               	bsf	3,5	;RP0=1, select bank1
   607  00C4  1303               	bcf	3,6	;RP1=0, select bank1
   608  00C5  0185               	clrf	5	;volatile
   609  00C6                     l941:
   610                           
   611                           ;main_contador.c: 123:     TRISB = 0b00000011;
   612  00C6  3003               	movlw	3
   613  00C7  0086               	movwf	6	;volatile
   614  00C8                     l943:
   615                           
   616                           ;main_contador.c: 124:     TRISC = 0;
   617  00C8  0187               	clrf	7	;volatile
   618  00C9                     l945:
   619                           
   620                           ;main_contador.c: 125:     TRISD = 0;
   621  00C9  0188               	clrf	8	;volatile
   622  00CA                     l947:
   623                           
   624                           ;main_contador.c: 126:     TRISE = 0;
   625  00CA  0189               	clrf	9	;volatile
   626  00CB                     l949:
   627                           
   628                           ;main_contador.c: 127:     PORTA = 0;
   629  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   630  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   631  00CD  0185               	clrf	5	;volatile
   632  00CE                     l951:
   633                           
   634                           ;main_contador.c: 128:     PORTB = 0;
   635  00CE  0186               	clrf	6	;volatile
   636  00CF                     l953:
   637                           
   638                           ;main_contador.c: 129:     PORTC = 0;
   639  00CF  0187               	clrf	7	;volatile
   640  00D0                     l955:
   641                           
   642                           ;main_contador.c: 130:     PORTD = 0;
   643  00D0  0188               	clrf	8	;volatile
   644  00D1                     l957:
   645                           
   646                           ;main_contador.c: 131:     PORTE = 0;
   647  00D1  0189               	clrf	9	;volatile
   648  00D2                     l959:
   649                           
   650                           ;main_contador.c: 132:     Config_INTERRUPT();
   651  00D2  120A  118A  2102  120A  118A  	fcall	_Config_INTERRUPT
   652  00D7                     l961:
   653                           
   654                           ;main_contador.c: 133:     TRISAbits.TRISA5 = 0;
   655  00D7  1683               	bsf	3,5	;RP0=1, select bank1
   656  00D8  1303               	bcf	3,6	;RP1=0, select bank1
   657  00D9  1285               	bcf	5,5	;volatile
   658  00DA                     l963:
   659                           
   660                           ;main_contador.c: 134:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_ID
      +                          LE_LOW, SPI_IDLE_2_ACTIVE);
   661  00DA  01F4               	clrf	spiInit@sDataSample
   662  00DB  01F5               	clrf	spiInit@sClockIdle
   663  00DC  01F6               	clrf	spiInit@sTransmitEdge
   664  00DD  3024               	movlw	36
   665  00DE  120A  118A  20E4  120A  118A  	fcall	_spiInit
   666  00E3                     l76:
   667  00E3  0008               	return
   668  00E4                     __end_of_setup:
   669                           
   670                           	psect	text2
   671  00E4                     __ptext2:	
   672 ;; *************** function _spiInit *****************
   673 ;; Defined at:
   674 ;;		line 14 in file "SPI.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;  sType           1    wreg     enum E1264
   677 ;;  sDataSample     1    4[COMMON] enum E1272
   678 ;;  sClockIdle      1    5[COMMON] enum E1276
   679 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  sType           1    0[BANK0 ] enum E1264
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   691 ;;      Params:         3       0       0       0       0
   692 ;;      Locals:         0       1       0       0       0
   693 ;;      Temps:          0       0       0       0       0
   694 ;;      Totals:         3       1       0       0       0
   695 ;;Total ram usage:        4 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    2
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_setup
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           
   706                           ;psect for function _spiInit
   707  00E4                     _spiInit:
   708                           
   709                           ;incstack = 0
   710                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   711                           ;spiInit@sType stored from wreg
   712  00E4  1283               	bcf	3,5	;RP0=0, select bank0
   713  00E5  1303               	bcf	3,6	;RP1=0, select bank0
   714  00E6  00A0               	movwf	spiInit@sType
   715  00E7                     l923:
   716                           
   717                           ;SPI.c: 14: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 15: {;SPI.c: 16:     TRISC5 = 0;
   718  00E7  1683               	bsf	3,5	;RP0=1, select bank1
   719  00E8  1303               	bcf	3,6	;RP1=0, select bank1
   720  00E9  1287               	bcf	7,5	;volatile
   721                           
   722                           ;SPI.c: 17:     if(sType & 0b00000100)
   723  00EA  1283               	bcf	3,5	;RP0=0, select bank0
   724  00EB  1303               	bcf	3,6	;RP1=0, select bank0
   725  00EC  1D20               	btfss	spiInit@sType,2
   726  00ED  28EF               	goto	u121
   727  00EE  28F0               	goto	u120
   728  00EF                     u121:
   729  00EF  28F6               	goto	l929
   730  00F0                     u120:
   731  00F0                     l925:
   732                           
   733                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sTransmitEdge;
   734  00F0  0876               	movf	spiInit@sTransmitEdge,w
   735  00F1  1683               	bsf	3,5	;RP0=1, select bank1
   736  00F2  1303               	bcf	3,6	;RP1=0, select bank1
   737  00F3  0094               	movwf	20	;volatile
   738  00F4                     l927:
   739                           
   740                           ;SPI.c: 20:         TRISC3 = 1;
   741  00F4  1587               	bsf	7,3	;volatile
   742                           
   743                           ;SPI.c: 21:     }
   744  00F5  28FC               	goto	l111
   745  00F6                     l929:
   746                           
   747                           ;SPI.c: 23:     {;SPI.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
   748  00F6  0874               	movf	spiInit@sDataSample,w
   749  00F7  0476               	iorwf	spiInit@sTransmitEdge,w
   750  00F8  1683               	bsf	3,5	;RP0=1, select bank1
   751  00F9  1303               	bcf	3,6	;RP1=0, select bank1
   752  00FA  0094               	movwf	20	;volatile
   753  00FB                     l931:
   754                           
   755                           ;SPI.c: 25:         TRISC3 = 0;
   756  00FB  1187               	bcf	7,3	;volatile
   757  00FC                     l111:	
   758                           ;SPI.c: 26:     }
   759                           
   760                           
   761                           ;SPI.c: 28:     SSPCON = sType | sClockIdle;
   762  00FC  1283               	bcf	3,5	;RP0=0, select bank0
   763  00FD  1303               	bcf	3,6	;RP1=0, select bank0
   764  00FE  0820               	movf	spiInit@sType,w
   765  00FF  0475               	iorwf	spiInit@sClockIdle,w
   766  0100  0094               	movwf	20	;volatile
   767  0101                     l112:
   768  0101  0008               	return
   769  0102                     __end_of_spiInit:
   770                           
   771                           	psect	text3
   772  0016                     __ptext3:	
   773 ;; *************** function _initOsc *****************
   774 ;; Defined at:
   775 ;;		line 3 in file "Oscilador.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  IRCF            1    wreg     unsigned char 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  IRCF            1    6[COMMON] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   789 ;;      Params:         0       0       0       0       0
   790 ;;      Locals:         1       0       0       0       0
   791 ;;      Temps:          2       0       0       0       0
   792 ;;      Totals:         3       0       0       0       0
   793 ;;Total ram usage:        3 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:    2
   796 ;; This function calls:
   797 ;;		Nothing
   798 ;; This function is called by:
   799 ;;		_setup
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           
   804                           ;psect for function _initOsc
   805  0016                     _initOsc:
   806                           
   807                           ;incstack = 0
   808                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   809                           ;initOsc@IRCF stored from wreg
   810  0016  00F6               	movwf	initOsc@IRCF
   811  0017                     l721:
   812                           
   813                           ;Oscilador.c: 5:     switch(IRCF){
   814  0017  284E               	goto	l725
   815  0018                     l85:	
   816                           ;Oscilador.c: 6:         case 0:
   817                           
   818                           
   819                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   820  0018  1683               	bsf	3,5	;RP0=1, select bank1
   821  0019  1303               	bcf	3,6	;RP1=0, select bank1
   822  001A  130F               	bcf	15,6	;volatile
   823                           
   824                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   825  001B  128F               	bcf	15,5	;volatile
   826                           
   827                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   828  001C  120F               	bcf	15,4	;volatile
   829                           
   830                           ;Oscilador.c: 10:             break;
   831  001D  2870               	goto	l86
   832  001E                     l87:	
   833                           ;Oscilador.c: 11:          case 1:
   834                           
   835                           
   836                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   837  001E  1683               	bsf	3,5	;RP0=1, select bank1
   838  001F  1303               	bcf	3,6	;RP1=0, select bank1
   839  0020  130F               	bcf	15,6	;volatile
   840                           
   841                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   842  0021  128F               	bcf	15,5	;volatile
   843                           
   844                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   845  0022  160F               	bsf	15,4	;volatile
   846                           
   847                           ;Oscilador.c: 15:             break;
   848  0023  2870               	goto	l86
   849  0024                     l88:	
   850                           ;Oscilador.c: 16:         case 2:
   851                           
   852                           
   853                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   854  0024  1683               	bsf	3,5	;RP0=1, select bank1
   855  0025  1303               	bcf	3,6	;RP1=0, select bank1
   856  0026  130F               	bcf	15,6	;volatile
   857                           
   858                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   859  0027  168F               	bsf	15,5	;volatile
   860                           
   861                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   862  0028  120F               	bcf	15,4	;volatile
   863                           
   864                           ;Oscilador.c: 20:             break;
   865  0029  2870               	goto	l86
   866  002A                     l89:	
   867                           ;Oscilador.c: 21:         case 3:
   868                           
   869                           
   870                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   871  002A  1683               	bsf	3,5	;RP0=1, select bank1
   872  002B  1303               	bcf	3,6	;RP1=0, select bank1
   873  002C  130F               	bcf	15,6	;volatile
   874                           
   875                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   876  002D  168F               	bsf	15,5	;volatile
   877                           
   878                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   879  002E  160F               	bsf	15,4	;volatile
   880                           
   881                           ;Oscilador.c: 25:             break;
   882  002F  2870               	goto	l86
   883  0030                     l90:	
   884                           ;Oscilador.c: 26:         case 4:
   885                           
   886                           
   887                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   888  0030  1683               	bsf	3,5	;RP0=1, select bank1
   889  0031  1303               	bcf	3,6	;RP1=0, select bank1
   890  0032  170F               	bsf	15,6	;volatile
   891                           
   892                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   893  0033  128F               	bcf	15,5	;volatile
   894                           
   895                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   896  0034  120F               	bcf	15,4	;volatile
   897                           
   898                           ;Oscilador.c: 30:             break;
   899  0035  2870               	goto	l86
   900  0036                     l91:	
   901                           ;Oscilador.c: 31:         case 5:
   902                           
   903                           
   904                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   905  0036  1683               	bsf	3,5	;RP0=1, select bank1
   906  0037  1303               	bcf	3,6	;RP1=0, select bank1
   907  0038  170F               	bsf	15,6	;volatile
   908                           
   909                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
   910  0039  128F               	bcf	15,5	;volatile
   911                           
   912                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
   913  003A  160F               	bsf	15,4	;volatile
   914                           
   915                           ;Oscilador.c: 35:             break;
   916  003B  2870               	goto	l86
   917  003C                     l92:	
   918                           ;Oscilador.c: 36:         case 6:
   919                           
   920                           
   921                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
   922  003C  1683               	bsf	3,5	;RP0=1, select bank1
   923  003D  1303               	bcf	3,6	;RP1=0, select bank1
   924  003E  170F               	bsf	15,6	;volatile
   925                           
   926                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
   927  003F  168F               	bsf	15,5	;volatile
   928                           
   929                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
   930  0040  120F               	bcf	15,4	;volatile
   931                           
   932                           ;Oscilador.c: 40:             break;
   933  0041  2870               	goto	l86
   934  0042                     l93:	
   935                           ;Oscilador.c: 41:         case 7:
   936                           
   937                           
   938                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
   939  0042  1683               	bsf	3,5	;RP0=1, select bank1
   940  0043  1303               	bcf	3,6	;RP1=0, select bank1
   941  0044  170F               	bsf	15,6	;volatile
   942                           
   943                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
   944  0045  168F               	bsf	15,5	;volatile
   945                           
   946                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
   947  0046  160F               	bsf	15,4	;volatile
   948                           
   949                           ;Oscilador.c: 45:             break;
   950  0047  2870               	goto	l86
   951  0048                     l94:	
   952                           ;Oscilador.c: 46:         default:
   953                           
   954                           
   955                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
   956  0048  1683               	bsf	3,5	;RP0=1, select bank1
   957  0049  1303               	bcf	3,6	;RP1=0, select bank1
   958  004A  170F               	bsf	15,6	;volatile
   959                           
   960                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
   961  004B  168F               	bsf	15,5	;volatile
   962                           
   963                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
   964  004C  120F               	bcf	15,4	;volatile
   965                           
   966                           ;Oscilador.c: 50:             break;
   967  004D  2870               	goto	l86
   968  004E                     l725:
   969  004E  0876               	movf	initOsc@IRCF,w
   970  004F  00F4               	movwf	??_initOsc
   971  0050  01F5               	clrf	??_initOsc+1
   972                           
   973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   974                           ; Switch size 1, requested type "simple"
   975                           ; Number of cases is 1, Range of values is 0 to 0
   976                           ; switch strategies available:
   977                           ; Name         Instructions Cycles
   978                           ; simple_byte            4     3 (average)
   979                           ; direct_byte           11     8 (fixed)
   980                           ; jumptable            260     6 (fixed)
   981                           ;	Chosen strategy is simple_byte
   982  0051  0875               	movf	??_initOsc+1,w
   983  0052  3A00               	xorlw	0	; case 0
   984  0053  1903               	skipnz
   985  0054  2856               	goto	l989
   986  0055  2848               	goto	l94
   987  0056                     l989:
   988                           
   989                           ; Switch size 1, requested type "simple"
   990                           ; Number of cases is 8, Range of values is 0 to 7
   991                           ; switch strategies available:
   992                           ; Name         Instructions Cycles
   993                           ; simple_byte           25    13 (average)
   994                           ; direct_byte           32     8 (fixed)
   995                           ; jumptable            260     6 (fixed)
   996                           ;	Chosen strategy is simple_byte
   997  0056  0874               	movf	??_initOsc,w
   998  0057  3A00               	xorlw	0	; case 0
   999  0058  1903               	skipnz
  1000  0059  2818               	goto	l85
  1001  005A  3A01               	xorlw	1	; case 1
  1002  005B  1903               	skipnz
  1003  005C  281E               	goto	l87
  1004  005D  3A03               	xorlw	3	; case 2
  1005  005E  1903               	skipnz
  1006  005F  2824               	goto	l88
  1007  0060  3A01               	xorlw	1	; case 3
  1008  0061  1903               	skipnz
  1009  0062  282A               	goto	l89
  1010  0063  3A07               	xorlw	7	; case 4
  1011  0064  1903               	skipnz
  1012  0065  2830               	goto	l90
  1013  0066  3A01               	xorlw	1	; case 5
  1014  0067  1903               	skipnz
  1015  0068  2836               	goto	l91
  1016  0069  3A03               	xorlw	3	; case 6
  1017  006A  1903               	skipnz
  1018  006B  283C               	goto	l92
  1019  006C  3A01               	xorlw	1	; case 7
  1020  006D  1903               	skipnz
  1021  006E  2842               	goto	l93
  1022  006F  2848               	goto	l94
  1023  0070                     l86:
  1024                           
  1025                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1026  0070  140F               	bsf	15,0	;volatile
  1027  0071                     l95:
  1028  0071  0008               	return
  1029  0072                     __end_of_initOsc:
  1030                           
  1031                           	psect	text4
  1032  0102                     __ptext4:	
  1033 ;; *************** function _Config_INTERRUPT *****************
  1034 ;; Defined at:
  1035 ;;		line 138 in file "main_contador.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       0       0       0       0
  1050 ;;      Locals:         0       0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0
  1052 ;;      Totals:         0       0       0       0       0
  1053 ;;Total ram usage:        0 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    2
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_setup
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           
  1064                           ;psect for function _Config_INTERRUPT
  1065  0102                     _Config_INTERRUPT:
  1066  0102                     l731:	
  1067                           ;incstack = 0
  1068                           ; Regs used in _Config_INTERRUPT: [wreg]
  1069                           
  1070                           
  1071                           ;main_contador.c: 139:     INTCONbits.GIE = 1;
  1072  0102  178B               	bsf	11,7	;volatile
  1073                           
  1074                           ;main_contador.c: 140:     INTCONbits.RBIE = 1;
  1075  0103  158B               	bsf	11,3	;volatile
  1076                           
  1077                           ;main_contador.c: 141:     INTCONbits.RBIF = 0;
  1078  0104  100B               	bcf	11,0	;volatile
  1079  0105                     l733:
  1080                           
  1081                           ;main_contador.c: 142:     IOCB = 0b00000011;
  1082  0105  3003               	movlw	3
  1083  0106  1683               	bsf	3,5	;RP0=1, select bank1
  1084  0107  1303               	bcf	3,6	;RP1=0, select bank1
  1085  0108  0096               	movwf	22	;volatile
  1086  0109                     l735:
  1087                           
  1088                           ;main_contador.c: 143:     INTCONbits.PEIE = 1;
  1089  0109  170B               	bsf	11,6	;volatile
  1090  010A                     l737:
  1091                           
  1092                           ;main_contador.c: 144:     PIR1bits.SSPIF = 0;
  1093  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1094  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1095  010C  118C               	bcf	12,3	;volatile
  1096  010D                     l739:
  1097                           
  1098                           ;main_contador.c: 145:     PIE1bits.SSPIE = 1;
  1099  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1100  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1101  010F  158C               	bsf	12,3	;volatile
  1102  0110                     l79:
  1103  0110  0008               	return
  1104  0111                     __end_of_Config_INTERRUPT:
  1105                           
  1106                           	psect	text5
  1107  0072                     __ptext5:	
  1108 ;; *************** function _ISR *****************
  1109 ;; Defined at:
  1110 ;;		line 63 in file "main_contador.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0, pclath, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1124 ;;      Params:         0       0       0       0       0
  1125 ;;      Locals:         0       0       0       0       0
  1126 ;;      Temps:          3       0       0       0       0
  1127 ;;      Totals:         3       0       0       0       0
  1128 ;;Total ram usage:        3 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; Hardware stack levels required when called:    1
  1131 ;; This function calls:
  1132 ;;		_spiWrite
  1133 ;; This function is called by:
  1134 ;;		Interrupt level 1
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           
  1139                           ;psect for function _ISR
  1140  0072                     _ISR:
  1141  0072                     i1l787:
  1142                           
  1143                           ;main_contador.c: 65:     if (INTCONbits.RBIF == 1){
  1144  0072  1C0B               	btfss	11,0	;volatile
  1145  0073  2875               	goto	u3_21
  1146  0074  2876               	goto	u3_20
  1147  0075                     u3_21:
  1148  0075  28A3               	goto	i1l815
  1149  0076                     u3_20:
  1150  0076                     i1l789:
  1151                           
  1152                           ;main_contador.c: 67:             if (PORTBbits.RB0 == 1){
  1153  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1154  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1155  0078  1C06               	btfss	6,0	;volatile
  1156  0079  287B               	goto	u4_21
  1157  007A  287C               	goto	u4_20
  1158  007B                     u4_21:
  1159  007B  287E               	goto	i1l60
  1160  007C                     u4_20:
  1161  007C                     i1l791:
  1162                           
  1163                           ;main_contador.c: 68:                 debouncing1 = 1;
  1164  007C  01F8               	clrf	_debouncing1
  1165  007D  0AF8               	incf	_debouncing1,f
  1166  007E                     i1l60:	
  1167                           ;main_contador.c: 70:             }
  1168                           
  1169                           
  1170                           ;main_contador.c: 71:             if (PORTBbits.RB1 == 1){
  1171  007E  1C86               	btfss	6,1	;volatile
  1172  007F  2881               	goto	u5_21
  1173  0080  2882               	goto	u5_20
  1174  0081                     u5_21:
  1175  0081  2884               	goto	i1l61
  1176  0082                     u5_20:
  1177  0082                     i1l793:
  1178                           
  1179                           ;main_contador.c: 72:                 debouncing2 = 1;
  1180  0082  01F7               	clrf	_debouncing2
  1181  0083  0AF7               	incf	_debouncing2,f
  1182  0084                     i1l61:	
  1183                           ;main_contador.c: 74:             }
  1184                           
  1185                           
  1186                           ;main_contador.c: 75:             if(PORTBbits.RB0 == 0 && debouncing1 == 1){
  1187  0084  1806               	btfsc	6,0	;volatile
  1188  0085  2887               	goto	u6_21
  1189  0086  2888               	goto	u6_20
  1190  0087                     u6_21:
  1191  0087  2894               	goto	i1l803
  1192  0088                     u6_20:
  1193  0088                     i1l795:
  1194  0088  0378               	decf	_debouncing1,w
  1195  0089  1D03               	btfss	3,2
  1196  008A  288C               	goto	u7_21
  1197  008B  288D               	goto	u7_20
  1198  008C                     u7_21:
  1199  008C  2894               	goto	i1l803
  1200  008D                     u7_20:
  1201  008D                     i1l797:
  1202                           
  1203                           ;main_contador.c: 76:                 contador++;
  1204  008D  3001               	movlw	1
  1205  008E  00F1               	movwf	??_ISR
  1206  008F  0871               	movf	??_ISR,w
  1207  0090  07F9               	addwf	_contador,f
  1208  0091                     i1l799:
  1209                           
  1210                           ;main_contador.c: 77:                 PORTD = contador;
  1211  0091  0879               	movf	_contador,w
  1212  0092  0088               	movwf	8	;volatile
  1213  0093                     i1l801:
  1214                           
  1215                           ;main_contador.c: 78:                 debouncing1 = 0;
  1216  0093  01F8               	clrf	_debouncing1
  1217  0094                     i1l803:
  1218                           
  1219                           ;main_contador.c: 80:             if(PORTBbits.RB1 == 0 && debouncing2 == 1){
  1220  0094  1886               	btfsc	6,1	;volatile
  1221  0095  2897               	goto	u8_21
  1222  0096  2898               	goto	u8_20
  1223  0097                     u8_21:
  1224  0097  28A2               	goto	i1l813
  1225  0098                     u8_20:
  1226  0098                     i1l805:
  1227  0098  0377               	decf	_debouncing2,w
  1228  0099  1D03               	btfss	3,2
  1229  009A  289C               	goto	u9_21
  1230  009B  289D               	goto	u9_20
  1231  009C                     u9_21:
  1232  009C  28A2               	goto	i1l813
  1233  009D                     u9_20:
  1234  009D                     i1l807:
  1235                           
  1236                           ;main_contador.c: 81:                 contador--;
  1237  009D  3001               	movlw	1
  1238  009E  02F9               	subwf	_contador,f
  1239  009F                     i1l809:
  1240                           
  1241                           ;main_contador.c: 82:                 PORTD = contador;
  1242  009F  0879               	movf	_contador,w
  1243  00A0  0088               	movwf	8	;volatile
  1244  00A1                     i1l811:
  1245                           
  1246                           ;main_contador.c: 83:                 debouncing2 = 0;
  1247  00A1  01F7               	clrf	_debouncing2
  1248  00A2                     i1l813:
  1249                           
  1250                           ;main_contador.c: 85:             INTCONbits.RBIF = 0;
  1251  00A2  100B               	bcf	11,0	;volatile
  1252  00A3                     i1l815:
  1253                           
  1254                           ;main_contador.c: 88:     if(SSPIF == 1){
  1255  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1256  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1257  00A5  1D8C               	btfss	12,3	;volatile
  1258  00A6  28A8               	goto	u10_21
  1259  00A7  28A9               	goto	u10_20
  1260  00A8                     u10_21:
  1261  00A8  28B2               	goto	i1l65
  1262  00A9                     u10_20:
  1263  00A9                     i1l817:
  1264                           
  1265                           ;main_contador.c: 90:         spiWrite(contador);
  1266  00A9  0879               	movf	_contador,w
  1267  00AA  120A  118A  211B  120A  118A  	fcall	_spiWrite
  1268  00AF                     i1l819:
  1269                           
  1270                           ;main_contador.c: 91:         SSPIF = 0;
  1271  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1272  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1273  00B1  118C               	bcf	12,3	;volatile
  1274  00B2                     i1l65:
  1275  00B2  0873               	movf	??_ISR+2,w
  1276  00B3  008A               	movwf	10
  1277  00B4  0E72               	swapf	??_ISR+1,w
  1278  00B5  0083               	movwf	3
  1279  00B6  0EFE               	swapf	btemp,f
  1280  00B7  0E7E               	swapf	btemp,w
  1281  00B8  0009               	retfie
  1282  00B9                     __end_of_ISR:
  1283                           
  1284                           	psect	intentry
  1285  0004                     __pintentry:	
  1286                           ;incstack = 0
  1287                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1288                           
  1289  0004                     interrupt_function:
  1290  007E                     saved_w	set	btemp
  1291  0004  00FE               	movwf	btemp
  1292  0005  0E03               	swapf	3,w
  1293  0006  00F2               	movwf	??_ISR+1
  1294  0007  080A               	movf	10,w
  1295  0008  00F3               	movwf	??_ISR+2
  1296  0009  120A  118A  2872   	ljmp	_ISR
  1297                           
  1298                           	psect	text6
  1299  011B                     __ptext6:	
  1300 ;; *************** function _spiWrite *****************
  1301 ;; Defined at:
  1302 ;;		line 36 in file "SPI.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  dat             1    wreg     unsigned char 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  dat             1    0[COMMON] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1316 ;;      Params:         0       0       0       0       0
  1317 ;;      Locals:         1       0       0       0       0
  1318 ;;      Temps:          0       0       0       0       0
  1319 ;;      Totals:         1       0       0       0       0
  1320 ;;Total ram usage:        1 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_ISR
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           
  1330                           ;psect for function _spiWrite
  1331  011B                     _spiWrite:
  1332                           
  1333                           ;incstack = 0
  1334                           ; Regs used in _spiWrite: [wreg]
  1335                           ;spiWrite@dat stored from wreg
  1336  011B  00F0               	movwf	spiWrite@dat
  1337  011C                     i1l751:
  1338                           
  1339                           ;SPI.c: 36: void spiWrite(char dat);SPI.c: 37: {;SPI.c: 38:     SSPBUF = dat;
  1340  011C  0870               	movf	spiWrite@dat,w
  1341  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1342  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1343  011F  0093               	movwf	19	;volatile
  1344  0120                     i1l121:
  1345  0120  0008               	return
  1346  0121                     __end_of_spiWrite:
  1347  007E                     btemp	set	126	;btemp
  1348  007E                     wtemp0	set	126
  1349                           
  1350                           	psect	config
  1351                           
  1352                           ;Config register CONFIG1 @ 0x2007
  1353                           ;	Oscillator Selection bits
  1354                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1355                           ;	Watchdog Timer Enable bit
  1356                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1357                           ;	Power-up Timer Enable bit
  1358                           ;	PWRTE = OFF, PWRT disabled
  1359                           ;	RE3/MCLR pin function select bit
  1360                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1361                           ;	Code Protection bit
  1362                           ;	CP = OFF, Program memory code protection is disabled
  1363                           ;	Data Code Protection bit
  1364                           ;	CPD = OFF, Data memory code protection is disabled
  1365                           ;	Brown Out Reset Selection bits
  1366                           ;	BOREN = OFF, BOR disabled
  1367                           ;	Internal External Switchover bit
  1368                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1369                           ;	Fail-Safe Clock Monitor Enabled bit
  1370                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1371                           ;	Low Voltage Programming Enable bit
  1372                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1373                           ;	In-Circuit Debugger Mode bit
  1374                           ;	DEBUG = 0x1, unprogrammed default
  1375  2007                     	org	8199
  1376  2007  20D6               	dw	8406
  1377                           
  1378                           ;Config register CONFIG2 @ 0x2008
  1379                           ;	Brown-out Reset Selection bit
  1380                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1381                           ;	Flash Program Memory Self Write Enable bits
  1382                           ;	WRT = OFF, Write protection off
  1383  2008                     	org	8200
  1384  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_initOsc
    _setup->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     471
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     471
                   _Config_INTERRUPT
                            _initOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _Config_INTERRUPT
     _initOsc
     _spiInit

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 18 20:54:51 2021

              _SSPSTATbits 0094                         l70 0117                         l71 0117  
                       l90 0030                         l91 0036                         l92 003C  
                       l76 00E3                         l93 0042                         l85 0018  
                       l94 0048                         l86 0070                         l79 0110  
                       l95 0071                         l87 001E                         l88 0024  
                       l89 002A                        l111 00FC                        l112 0101  
                      l721 0017                        l731 0102                        l733 0105  
                      l725 004E                        l735 0109                        l737 010A  
                      l739 010D                        l931 00FB                        l923 00E7  
                      l925 00F0                        l941 00C6                        l933 00B9  
                      l927 00F4                        l951 00CE                        l943 00C8  
                      l935 00BF                        l929 00F6                        l961 00D7  
                      l953 00CF                        l945 00C9                        l937 00C2  
                      l963 00DA                        l955 00D0                        l947 00CA  
                      l939 00C3                        l957 00D1                        l949 00CB  
                      l965 0111                        l959 00D2                        l967 0112  
                      l989 0056                        u120 00F0                        u121 00EF  
                      _ISR 0072                       ?_ISR 0070                       _IOCB 0096  
                     i1l60 007E                       i1l61 0084                       i1l65 00B2  
                     u3_20 0076                       u3_21 0075                       u4_20 007C  
                     u4_21 007B                       u5_20 0082                       u5_21 0081  
                     u6_20 0088                       u6_21 0087                       u7_20 008D  
                     u7_21 008C                       u8_20 0098                       u8_21 0097  
                     u9_20 009D                       u9_21 009C                       _main 0111  
                     btemp 007E   __end_of_Config_INTERRUPT 0111                       start 000C  
                    ??_ISR 0071                      ?_main 0070                      _ANSEL 0188  
                    i1l121 0120                      i1l801 0093                      i1l811 00A1  
                    i1l803 0094                      i1l805 0098                      i1l813 00A2  
                    i1l751 011C                      i1l807 009D                      i1l815 00A3  
                    i1l817 00A9                      i1l809 009F                      i1l819 00AF  
                    i1l791 007C                      i1l793 0082                      i1l795 0088  
                    i1l787 0072                      i1l797 008D                      i1l789 0076  
                    i1l799 0091                      u10_20 00A9                      u10_21 00A8  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _SSPIF 0063            __end_of_initOsc 0072  
                    _setup 00B9                      pclath 000A            __end_of_spiInit 0102  
                    status 0003                      wtemp0 007E            __initialization 000F  
             __end_of_main 011B                     ??_main 0077                initOsc@IRCF 0076  
                   ?_setup 0070                     _ANSELH 0189                     _TRISC3 043B  
                   _TRISC5 043D                     _SSPCON 0014                     _SSPBUF 0013  
                ??_initOsc 0074                     saved_w 007E           __end_of_spiWrite 0121  
                ??_spiInit 0077    __end_of__initialization 0012             __pcstackCOMMON 0070  
            __end_of_setup 00E4                    ??_setup 0077          ?_Config_INTERRUPT 0070  
               __pmaintext 0111         ??_Config_INTERRUPT 0074                 __pintentry 0004  
                  _SSPSTAT 0094                  ?_spiWrite 0070                    __ptext1 00B9  
                  __ptext2 00E4                    __ptext3 0016                    __ptext4 0102  
                  __ptext5 0072                    __ptext6 011B               __size_of_ISR 0047  
                  _initOsc 0016                    _spiInit 00E4       end_of_initialization 0012  
               ??_spiWrite 0070                  _PORTBbits 0006                  _TRISAbits 0085  
              spiWrite@dat 0070        start_initialization 000F                __end_of_ISR 00B9  
__size_of_Config_INTERRUPT 000F                __pbssCOMMON 0077                  ___latbits 0002  
            __pcstackBANK0 0020                _debouncing1 0078                _debouncing2 0077  
        __size_of_spiWrite 0006                   ?_initOsc 0070                   ?_spiInit 0074  
           __size_of_setup 002B       spiInit@sTransmitEdge 0076          interrupt_function 0004  
                 _PIE1bits 008C         spiInit@sDataSample 0074                   _PIR1bits 000C  
         _Config_INTERRUPT 0102           __size_of_initOsc 005C           __size_of_spiInit 001E  
                 _contador 0079              __size_of_main 000A                   _spiWrite 011B  
             spiInit@sType 0020          spiInit@sClockIdle 0075                 _INTCONbits 000B  
                 intlevel1 0000                 _OSCCONbits 008F  
