

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 20:46:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  008F                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  0105                     	;# 
   438  0107                     	;# 
   439  0108                     	;# 
   440  0109                     	;# 
   441  010C                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  010F                     	;# 
   446  0185                     	;# 
   447  0187                     	;# 
   448  0188                     	;# 
   449  0189                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  001F                     _ADCON0	set	31
   453  000B                     _INTCON	set	11
   454  0006                     _PORTB	set	6
   455  0005                     _PORTA	set	5
   456  0008                     _PORTD	set	8
   457  0009                     _PORTE	set	9
   458  0009                     _PORTEbits	set	9
   459  0001                     _TMR0	set	1
   460  001F                     _ADCON0bits	set	31
   461  000C                     _PIR1bits	set	12
   462  0007                     _PORTC	set	7
   463  0006                     _PORTBbits	set	6
   464  000B                     _INTCONbits	set	11
   465  001E                     _ADRESH	set	30
   466  009F                     _ADCON1	set	159
   467  008C                     _PIE1bits	set	140
   468  0096                     _IOCB	set	150
   469  0081                     _OPTION_REG	set	129
   470  0089                     _TRISE	set	137
   471  0088                     _TRISD	set	136
   472  0087                     _TRISC	set	135
   473  0086                     _TRISB	set	134
   474  0085                     _TRISA	set	133
   475  008F                     _OSCCONbits	set	143
   476  009E                     _ADRESL	set	158
   477  0189                     _ANSELH	set	393
   478  0188                     _ANSEL	set	392
   479                           
   480                           	psect	cinit
   481  0011                     start_initialization:	
   482                           ; #config settings
   483                           
   484  0011                     __initialization:
   485                           
   486                           ; Clear objects allocated to COMMON
   487  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   488  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   489  0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   490  0014  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   491  0015  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   492                           
   493                           ; Clear objects allocated to BANK0
   494  0016  1383               	bcf	3,7	;select IRP bank0
   495  0017  3020               	movlw	low __pbssBANK0
   496  0018  0084               	movwf	4
   497  0019  3030               	movlw	low (__pbssBANK0+16)
   498  001A  120A  118A  22B6  120A  118A  	fcall	clear_ram0
   499  001F                     end_of_initialization:	
   500                           ;End of C runtime variable initialization code
   501                           
   502  001F                     __end_of__initialization:
   503  001F  0183               	clrf	3
   504  0020  120A  118A  2A47   	ljmp	_main	;jump to C main() function
   505                           
   506                           	psect	bssCOMMON
   507  0078                     __pbssCOMMON:
   508  0078                     _toggle:
   509  0078                     	ds	1
   510  0079                     _debouncing2:
   511  0079                     	ds	1
   512  007A                     _debouncing1:
   513  007A                     	ds	1
   514  007B                     _contador:
   515  007B                     	ds	1
   516  007C                     _Valor_hex:
   517  007C                     	ds	1
   518                           
   519                           	psect	bssBANK0
   520  0020                     __pbssBANK0:
   521  0020                     _ADC_SWAP:
   522  0020                     	ds	2
   523  0022                     _ADC_VALOR:
   524  0022                     	ds	2
   525  0024                     _ADC_NIBBLE2:
   526  0024                     	ds	2
   527  0026                     _ADC_NIBBLE1:
   528  0026                     	ds	2
   529  0028                     _VAL_NIBBLE2:
   530  0028                     	ds	2
   531  002A                     _VAL_NIBBLE1:
   532  002A                     	ds	2
   533  002C                     _VAL_SWAP:
   534  002C                     	ds	2
   535  002E                     _VAL:
   536  002E                     	ds	2
   537                           
   538                           	psect	clrtext
   539  02B6                     clear_ram0:	
   540                           ;	Called with FSR containing the base address, and
   541                           ;	W with the last address+1
   542                           
   543  02B6  0064               	clrwdt	;clear the watchdog before getting into this loop
   544  02B7                     clrloop0:
   545  02B7  0180               	clrf	0	;clear RAM location pointed to by FSR
   546  02B8  0A84               	incf	4,f	;increment pointer
   547  02B9  0604               	xorwf	4,w	;XOR with final address
   548  02BA  1903               	btfsc	3,2	;have we reached the end yet?
   549  02BB  3400               	retlw	0	;all done for this memory range, return
   550  02BC  0604               	xorwf	4,w	;XOR again to restore value
   551  02BD  2AB7               	goto	clrloop0	;do the next byte
   552                           
   553                           	psect	cstackCOMMON
   554  0070                     __pcstackCOMMON:
   555  0070                     ?_DisplayADC:
   556  0070                     ?_TOGGLE_1:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_TOGGLE_1:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_setup:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_Config_INTERRUPT:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_CONVERSION_ADC:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_Revision:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_display:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ??_display:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_initOsc:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_ISR:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_main:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_ADC:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ADC@ADRESL_:	
   593                           ; 2 bytes @ 0x0
   594                           
   595  0070                     ADC@ADRESH_:	
   596                           ; 1 bytes @ 0x0
   597                           
   598                           
   599                           ; 1 bytes @ 0x0
   600  0070                     	ds	2
   601  0072                     display@ADC_VALOR:
   602                           
   603                           ; 1 bytes @ 0x2
   604  0072                     	ds	1
   605  0073                     ??_DisplayADC:
   606  0073                     ??_ADC:	
   607                           ; 1 bytes @ 0x3
   608                           
   609  0073                     ??_ISR:	
   610                           ; 1 bytes @ 0x3
   611                           
   612                           
   613                           ; 1 bytes @ 0x3
   614  0073                     	ds	5
   615                           
   616                           	psect	cstackBANK0
   617  0030                     __pcstackBANK0:
   618  0030                     ??_Config_INTERRUPT:
   619  0030                     ??_Revision:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0030                     ??_initOsc:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0030                     ?_SWAP_ADC:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0030                     ?_NIBBLE1_ADC:	
   629                           ; 2 bytes @ 0x0
   630                           
   631  0030                     ?_NIBBLE2_ADC:	
   632                           ; 2 bytes @ 0x0
   633                           
   634                           
   635                           ; 2 bytes @ 0x0
   636  0030                     	ds	2
   637  0032                     ??_SWAP_ADC:
   638  0032                     ??_NIBBLE1_ADC:	
   639                           ; 1 bytes @ 0x2
   640                           
   641  0032                     ??_NIBBLE2_ADC:	
   642                           ; 1 bytes @ 0x2
   643                           
   644  0032                     initOsc@IRCF:	
   645                           ; 1 bytes @ 0x2
   646                           
   647                           
   648                           ; 1 bytes @ 0x2
   649  0032                     	ds	1
   650  0033                     ??_setup:
   651                           
   652                           ; 1 bytes @ 0x3
   653  0033                     	ds	1
   654  0034                     NIBBLE1_ADC@VAL_ADC:
   655  0034                     NIBBLE2_ADC@VAL_SWAP:	
   656                           ; 1 bytes @ 0x4
   657                           
   658                           
   659                           ; 1 bytes @ 0x4
   660  0034                     	ds	3
   661  0037                     SWAP_ADC@VAL_ADC:
   662                           
   663                           ; 1 bytes @ 0x7
   664  0037                     	ds	1
   665  0038                     ??_CONVERSION_ADC:
   666  0038                     ??_main:	
   667                           ; 1 bytes @ 0x8
   668                           
   669                           
   670                           	psect	maintext
   671  0247                     __pmaintext:	
   672                           ; 1 bytes @ 0x8
   673 ;;
   674 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   675 ;;
   676 ;; *************** function _main *****************
   677 ;; Defined at:
   678 ;;		line 117 in file "Lab2-programa.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   687 ;; Tracked objects:
   688 ;;		On entry : B00/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   692 ;;      Params:         0       0       0       0       0
   693 ;;      Locals:         0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0
   695 ;;      Totals:         0       0       0       0       0
   696 ;;Total ram usage:        0 bytes
   697 ;; Hardware stack levels required when called:    5
   698 ;; This function calls:
   699 ;;		_CONVERSION_ADC
   700 ;;		_Config_INTERRUPT
   701 ;;		_Revision
   702 ;;		_setup
   703 ;; This function is called by:
   704 ;;		Startup code after reset
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function _main
   710  0247                     _main:
   711  0247                     l1252:	
   712                           ;incstack = 0
   713                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   714                           
   715                           
   716                           ;Lab2-programa.c: 118:     PORTEbits.RE0 = 0;
   717  0247  1283               	bcf	3,5	;RP0=0, select bank0
   718  0248  1303               	bcf	3,6	;RP1=0, select bank0
   719  0249  1009               	bcf	9,0	;volatile
   720  024A                     l1254:
   721                           
   722                           ;Lab2-programa.c: 119:     setup();
   723  024A  120A  118A  2186  120A  118A  	fcall	_setup
   724  024F                     l1256:
   725                           
   726                           ;Lab2-programa.c: 120:     Config_INTERRUPT();
   727  024F  120A  118A  2262  120A  118A  	fcall	_Config_INTERRUPT
   728  0254                     l1258:
   729                           
   730                           ;Lab2-programa.c: 126:         CONVERSION_ADC();
   731  0254  120A  118A  21B2  120A  118A  	fcall	_CONVERSION_ADC
   732  0259                     l1260:
   733                           
   734                           ;Lab2-programa.c: 127:         Revision();
   735  0259  120A  118A  2200  120A  118A  	fcall	_Revision
   736  025E  2A54               	goto	l1258
   737  025F  120A  118A  280E   	ljmp	start
   738  0262                     __end_of_main:
   739                           
   740                           	psect	text1
   741  0186                     __ptext1:	
   742 ;; *************** function _setup *****************
   743 ;; Defined at:
   744 ;;		line 174 in file "Lab2-programa.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       0       0       0       0
   759 ;;      Locals:         0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0
   761 ;;      Totals:         0       0       0       0       0
   762 ;;Total ram usage:        0 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    4
   765 ;; This function calls:
   766 ;;		_initOsc
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function _setup
   774  0186                     _setup:
   775  0186                     l1154:	
   776                           ;incstack = 0
   777                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   778                           
   779                           
   780                           ;Lab2-programa.c: 175:     initOsc(0b00000110);
   781  0186  3006               	movlw	6
   782  0187  120A  118A  2128  120A  118A  	fcall	_initOsc
   783  018C                     l1156:
   784                           
   785                           ;Lab2-programa.c: 176:     ANSEL = 0b00000001;
   786  018C  3001               	movlw	1
   787  018D  1683               	bsf	3,5	;RP0=1, select bank3
   788  018E  1703               	bsf	3,6	;RP1=1, select bank3
   789  018F  0088               	movwf	8	;volatile
   790  0190                     l1158:
   791                           
   792                           ;Lab2-programa.c: 177:     ANSELH = 0;
   793  0190  0189               	clrf	9	;volatile
   794  0191                     l1160:
   795                           
   796                           ;Lab2-programa.c: 178:     TRISA = 0b00000001;
   797  0191  3001               	movlw	1
   798  0192  1683               	bsf	3,5	;RP0=1, select bank1
   799  0193  1303               	bcf	3,6	;RP1=0, select bank1
   800  0194  0085               	movwf	5	;volatile
   801  0195                     l1162:
   802                           
   803                           ;Lab2-programa.c: 179:     PORTA = 0;
   804  0195  1283               	bcf	3,5	;RP0=0, select bank0
   805  0196  1303               	bcf	3,6	;RP1=0, select bank0
   806  0197  0185               	clrf	5	;volatile
   807  0198                     l1164:
   808                           
   809                           ;Lab2-programa.c: 180:     TRISB = 0b00000011;
   810  0198  3003               	movlw	3
   811  0199  1683               	bsf	3,5	;RP0=1, select bank1
   812  019A  1303               	bcf	3,6	;RP1=0, select bank1
   813  019B  0086               	movwf	6	;volatile
   814  019C                     l1166:
   815                           
   816                           ;Lab2-programa.c: 181:     PORTB = 0;
   817  019C  1283               	bcf	3,5	;RP0=0, select bank0
   818  019D  1303               	bcf	3,6	;RP1=0, select bank0
   819  019E  0186               	clrf	6	;volatile
   820  019F                     l1168:
   821                           
   822                           ;Lab2-programa.c: 182:     TRISC = 0;
   823  019F  1683               	bsf	3,5	;RP0=1, select bank1
   824  01A0  1303               	bcf	3,6	;RP1=0, select bank1
   825  01A1  0187               	clrf	7	;volatile
   826  01A2                     l1170:
   827                           
   828                           ;Lab2-programa.c: 183:     PORTC = 0;
   829  01A2  1283               	bcf	3,5	;RP0=0, select bank0
   830  01A3  1303               	bcf	3,6	;RP1=0, select bank0
   831  01A4  0187               	clrf	7	;volatile
   832  01A5                     l1172:
   833                           
   834                           ;Lab2-programa.c: 184:     TRISD = 0;
   835  01A5  1683               	bsf	3,5	;RP0=1, select bank1
   836  01A6  1303               	bcf	3,6	;RP1=0, select bank1
   837  01A7  0188               	clrf	8	;volatile
   838  01A8                     l1174:
   839                           
   840                           ;Lab2-programa.c: 185:     PORTD = 0;
   841  01A8  1283               	bcf	3,5	;RP0=0, select bank0
   842  01A9  1303               	bcf	3,6	;RP1=0, select bank0
   843  01AA  0188               	clrf	8	;volatile
   844  01AB                     l1176:
   845                           
   846                           ;Lab2-programa.c: 186:     TRISE = 0;
   847  01AB  1683               	bsf	3,5	;RP0=1, select bank1
   848  01AC  1303               	bcf	3,6	;RP1=0, select bank1
   849  01AD  0189               	clrf	9	;volatile
   850  01AE                     l1178:
   851                           
   852                           ;Lab2-programa.c: 187:     PORTE = 0;
   853  01AE  1283               	bcf	3,5	;RP0=0, select bank0
   854  01AF  1303               	bcf	3,6	;RP1=0, select bank0
   855  01B0  0189               	clrf	9	;volatile
   856  01B1                     l205:
   857  01B1  0008               	return
   858  01B2                     __end_of_setup:
   859                           
   860                           	psect	text2
   861  0128                     __ptext2:	
   862 ;; *************** function _initOsc *****************
   863 ;; Defined at:
   864 ;;		line 3 in file "Oscilador.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  IRCF            1    wreg     unsigned char 
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  IRCF            1    2[BANK0 ] unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       0       0       0       0
   879 ;;      Locals:         0       1       0       0       0
   880 ;;      Temps:          0       2       0       0       0
   881 ;;      Totals:         0       3       0       0       0
   882 ;;Total ram usage:        3 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    3
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_setup
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _initOsc
   894  0128                     _initOsc:
   895                           
   896                           ;incstack = 0
   897                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   898                           ;initOsc@IRCF stored from wreg
   899  0128  1283               	bcf	3,5	;RP0=0, select bank0
   900  0129  1303               	bcf	3,6	;RP1=0, select bank0
   901  012A  00B2               	movwf	initOsc@IRCF
   902  012B                     l1116:
   903                           
   904                           ;Oscilador.c: 5:     switch(IRCF){
   905  012B  2962               	goto	l1120
   906  012C                     l54:	
   907                           ;Oscilador.c: 6:         case 0:
   908                           
   909                           
   910                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   911  012C  1683               	bsf	3,5	;RP0=1, select bank1
   912  012D  1303               	bcf	3,6	;RP1=0, select bank1
   913  012E  130F               	bcf	15,6	;volatile
   914                           
   915                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   916  012F  128F               	bcf	15,5	;volatile
   917                           
   918                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   919  0130  120F               	bcf	15,4	;volatile
   920                           
   921                           ;Oscilador.c: 10:             break;
   922  0131  2984               	goto	l55
   923  0132                     l56:	
   924                           ;Oscilador.c: 11:          case 1:
   925                           
   926                           
   927                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   928  0132  1683               	bsf	3,5	;RP0=1, select bank1
   929  0133  1303               	bcf	3,6	;RP1=0, select bank1
   930  0134  130F               	bcf	15,6	;volatile
   931                           
   932                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   933  0135  128F               	bcf	15,5	;volatile
   934                           
   935                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   936  0136  160F               	bsf	15,4	;volatile
   937                           
   938                           ;Oscilador.c: 15:             break;
   939  0137  2984               	goto	l55
   940  0138                     l57:	
   941                           ;Oscilador.c: 16:         case 2:
   942                           
   943                           
   944                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   945  0138  1683               	bsf	3,5	;RP0=1, select bank1
   946  0139  1303               	bcf	3,6	;RP1=0, select bank1
   947  013A  130F               	bcf	15,6	;volatile
   948                           
   949                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   950  013B  168F               	bsf	15,5	;volatile
   951                           
   952                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   953  013C  120F               	bcf	15,4	;volatile
   954                           
   955                           ;Oscilador.c: 20:             break;
   956  013D  2984               	goto	l55
   957  013E                     l58:	
   958                           ;Oscilador.c: 21:         case 3:
   959                           
   960                           
   961                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   962  013E  1683               	bsf	3,5	;RP0=1, select bank1
   963  013F  1303               	bcf	3,6	;RP1=0, select bank1
   964  0140  130F               	bcf	15,6	;volatile
   965                           
   966                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   967  0141  168F               	bsf	15,5	;volatile
   968                           
   969                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   970  0142  160F               	bsf	15,4	;volatile
   971                           
   972                           ;Oscilador.c: 25:             break;
   973  0143  2984               	goto	l55
   974  0144                     l59:	
   975                           ;Oscilador.c: 26:         case 4:
   976                           
   977                           
   978                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   979  0144  1683               	bsf	3,5	;RP0=1, select bank1
   980  0145  1303               	bcf	3,6	;RP1=0, select bank1
   981  0146  170F               	bsf	15,6	;volatile
   982                           
   983                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   984  0147  128F               	bcf	15,5	;volatile
   985                           
   986                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   987  0148  120F               	bcf	15,4	;volatile
   988                           
   989                           ;Oscilador.c: 30:             break;
   990  0149  2984               	goto	l55
   991  014A                     l60:	
   992                           ;Oscilador.c: 31:         case 5:
   993                           
   994                           
   995                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   996  014A  1683               	bsf	3,5	;RP0=1, select bank1
   997  014B  1303               	bcf	3,6	;RP1=0, select bank1
   998  014C  170F               	bsf	15,6	;volatile
   999                           
  1000                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1001  014D  128F               	bcf	15,5	;volatile
  1002                           
  1003                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1004  014E  160F               	bsf	15,4	;volatile
  1005                           
  1006                           ;Oscilador.c: 35:             break;
  1007  014F  2984               	goto	l55
  1008  0150                     l61:	
  1009                           ;Oscilador.c: 36:         case 6:
  1010                           
  1011                           
  1012                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1013  0150  1683               	bsf	3,5	;RP0=1, select bank1
  1014  0151  1303               	bcf	3,6	;RP1=0, select bank1
  1015  0152  170F               	bsf	15,6	;volatile
  1016                           
  1017                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1018  0153  168F               	bsf	15,5	;volatile
  1019                           
  1020                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1021  0154  120F               	bcf	15,4	;volatile
  1022                           
  1023                           ;Oscilador.c: 40:             break;
  1024  0155  2984               	goto	l55
  1025  0156                     l62:	
  1026                           ;Oscilador.c: 41:         case 7:
  1027                           
  1028                           
  1029                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1030  0156  1683               	bsf	3,5	;RP0=1, select bank1
  1031  0157  1303               	bcf	3,6	;RP1=0, select bank1
  1032  0158  170F               	bsf	15,6	;volatile
  1033                           
  1034                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1035  0159  168F               	bsf	15,5	;volatile
  1036                           
  1037                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1038  015A  160F               	bsf	15,4	;volatile
  1039                           
  1040                           ;Oscilador.c: 45:             break;
  1041  015B  2984               	goto	l55
  1042  015C                     l63:	
  1043                           ;Oscilador.c: 46:         default:
  1044                           
  1045                           
  1046                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1047  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1048  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1049  015E  170F               	bsf	15,6	;volatile
  1050                           
  1051                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1052  015F  168F               	bsf	15,5	;volatile
  1053                           
  1054                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1055  0160  120F               	bcf	15,4	;volatile
  1056                           
  1057                           ;Oscilador.c: 50:             break;
  1058  0161  2984               	goto	l55
  1059  0162                     l1120:
  1060  0162  0832               	movf	initOsc@IRCF,w
  1061  0163  00B0               	movwf	??_initOsc
  1062  0164  01B1               	clrf	??_initOsc+1
  1063                           
  1064                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1065                           ; Switch size 1, requested type "simple"
  1066                           ; Number of cases is 1, Range of values is 0 to 0
  1067                           ; switch strategies available:
  1068                           ; Name         Instructions Cycles
  1069                           ; simple_byte            4     3 (average)
  1070                           ; direct_byte           11     8 (fixed)
  1071                           ; jumptable            260     6 (fixed)
  1072                           ;	Chosen strategy is simple_byte
  1073  0165  0831               	movf	??_initOsc+1,w
  1074  0166  3A00               	xorlw	0	; case 0
  1075  0167  1903               	skipnz
  1076  0168  296A               	goto	l1312
  1077  0169  295C               	goto	l63
  1078  016A                     l1312:
  1079                           
  1080                           ; Switch size 1, requested type "simple"
  1081                           ; Number of cases is 8, Range of values is 0 to 7
  1082                           ; switch strategies available:
  1083                           ; Name         Instructions Cycles
  1084                           ; simple_byte           25    13 (average)
  1085                           ; direct_byte           32     8 (fixed)
  1086                           ; jumptable            260     6 (fixed)
  1087                           ;	Chosen strategy is simple_byte
  1088  016A  0830               	movf	??_initOsc,w
  1089  016B  3A00               	xorlw	0	; case 0
  1090  016C  1903               	skipnz
  1091  016D  292C               	goto	l54
  1092  016E  3A01               	xorlw	1	; case 1
  1093  016F  1903               	skipnz
  1094  0170  2932               	goto	l56
  1095  0171  3A03               	xorlw	3	; case 2
  1096  0172  1903               	skipnz
  1097  0173  2938               	goto	l57
  1098  0174  3A01               	xorlw	1	; case 3
  1099  0175  1903               	skipnz
  1100  0176  293E               	goto	l58
  1101  0177  3A07               	xorlw	7	; case 4
  1102  0178  1903               	skipnz
  1103  0179  2944               	goto	l59
  1104  017A  3A01               	xorlw	1	; case 5
  1105  017B  1903               	skipnz
  1106  017C  294A               	goto	l60
  1107  017D  3A03               	xorlw	3	; case 6
  1108  017E  1903               	skipnz
  1109  017F  2950               	goto	l61
  1110  0180  3A01               	xorlw	1	; case 7
  1111  0181  1903               	skipnz
  1112  0182  2956               	goto	l62
  1113  0183  295C               	goto	l63
  1114  0184                     l55:
  1115                           
  1116                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1117  0184  140F               	bsf	15,0	;volatile
  1118  0185                     l64:
  1119  0185  0008               	return
  1120  0186                     __end_of_initOsc:
  1121                           
  1122                           	psect	text3
  1123  0200                     __ptext3:	
  1124 ;; *************** function _Revision *****************
  1125 ;; Defined at:
  1126 ;;		line 163 in file "Lab2-programa.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0
  1142 ;;      Temps:          0       1       0       0       0
  1143 ;;      Totals:         0       1       0       0       0
  1144 ;;Total ram usage:        1 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    3
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_main
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           
  1155                           ;psect for function _Revision
  1156  0200                     _Revision:
  1157  0200                     l1196:	
  1158                           ;incstack = 0
  1159                           ; Regs used in _Revision: [wreg]
  1160                           
  1161                           
  1162                           ;Lab2-programa.c: 164:     if (ADC_VALOR > contador) {
  1163  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1164  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0202  0823               	movf	_ADC_VALOR+1,w
  1166  0203  3A80               	xorlw	128
  1167  0204  3C80               	sublw	128
  1168  0205  1D03               	skipz
  1169  0206  2A09               	goto	u235
  1170  0207  0822               	movf	_ADC_VALOR,w
  1171  0208  027B               	subwf	_contador,w
  1172  0209                     u235:
  1173  0209  1803               	skipnc
  1174  020A  2A0C               	goto	u231
  1175  020B  2A0D               	goto	u230
  1176  020C                     u231:
  1177  020C  2A11               	goto	l1200
  1178  020D                     u230:
  1179  020D                     l1198:
  1180                           
  1181                           ;Lab2-programa.c: 165:             PORTEbits.RE0 = 1;
  1182  020D  1283               	bcf	3,5	;RP0=0, select bank0
  1183  020E  1303               	bcf	3,6	;RP1=0, select bank0
  1184  020F  1409               	bsf	9,0	;volatile
  1185                           
  1186                           ;Lab2-programa.c: 166:         }
  1187  0210  2A23               	goto	l202
  1188  0211                     l1200:
  1189  0211  1283               	bcf	3,5	;RP0=0, select bank0
  1190  0212  1303               	bcf	3,6	;RP1=0, select bank0
  1191  0213  0823               	movf	_ADC_VALOR+1,w
  1192  0214  3A80               	xorlw	128
  1193  0215  00B0               	movwf	??_Revision
  1194  0216  3080               	movlw	128
  1195  0217  0230               	subwf	??_Revision,w
  1196  0218  1D03               	skipz
  1197  0219  2A1C               	goto	u245
  1198  021A  087B               	movf	_contador,w
  1199  021B  0222               	subwf	_ADC_VALOR,w
  1200  021C                     u245:
  1201  021C  1803               	skipnc
  1202  021D  2A1F               	goto	u241
  1203  021E  2A20               	goto	u240
  1204  021F                     u241:
  1205  021F  2A23               	goto	l202
  1206  0220                     u240:
  1207  0220                     l1202:
  1208                           
  1209                           ;Lab2-programa.c: 168:             PORTEbits.RE0 = 0;
  1210  0220  1283               	bcf	3,5	;RP0=0, select bank0
  1211  0221  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0222  1009               	bcf	9,0	;volatile
  1213  0223                     l202:
  1214  0223  0008               	return
  1215  0224                     __end_of_Revision:
  1216                           
  1217                           	psect	text4
  1218  0262                     __ptext4:	
  1219 ;; *************** function _Config_INTERRUPT *****************
  1220 ;; Defined at:
  1221 ;;		line 192 in file "Lab2-programa.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, status,2
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1235 ;;      Params:         0       0       0       0       0
  1236 ;;      Locals:         0       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0
  1238 ;;      Totals:         0       0       0       0       0
  1239 ;;Total ram usage:        0 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    3
  1242 ;; This function calls:
  1243 ;;		Nothing
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           
  1250                           ;psect for function _Config_INTERRUPT
  1251  0262                     _Config_INTERRUPT:
  1252  0262                     l1180:	
  1253                           ;incstack = 0
  1254                           ; Regs used in _Config_INTERRUPT: [wreg+status,2]
  1255                           
  1256                           
  1257                           ;Lab2-programa.c: 193:     TMR0 = 4;
  1258  0262  3004               	movlw	4
  1259  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0265  0081               	movwf	1	;volatile
  1262                           
  1263                           ;Lab2-programa.c: 194:     OPTION_REG = 0b10001000;
  1264  0266  3088               	movlw	136
  1265  0267  1683               	bsf	3,5	;RP0=1, select bank1
  1266  0268  1303               	bcf	3,6	;RP1=0, select bank1
  1267  0269  0081               	movwf	1	;volatile
  1268                           
  1269                           ;Lab2-programa.c: 195:     INTCON = 0b10101001;
  1270  026A  30A9               	movlw	169
  1271  026B  008B               	movwf	11	;volatile
  1272                           
  1273                           ;Lab2-programa.c: 196:     IOCB = 0b00000011;
  1274  026C  3003               	movlw	3
  1275  026D  0096               	movwf	22	;volatile
  1276  026E                     l1182:
  1277                           
  1278                           ;Lab2-programa.c: 197:     PIE1bits.ADIE = 1;
  1279  026E  170C               	bsf	12,6	;volatile
  1280  026F                     l1184:
  1281                           
  1282                           ;Lab2-programa.c: 198:     PIR1bits.ADIF = 1;
  1283  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0271  170C               	bsf	12,6	;volatile
  1286  0272                     l1186:
  1287                           
  1288                           ;Lab2-programa.c: 199:     ADCON1 = 0b00000000;
  1289  0272  1683               	bsf	3,5	;RP0=1, select bank1
  1290  0273  1303               	bcf	3,6	;RP1=0, select bank1
  1291  0274  019F               	clrf	31	;volatile
  1292  0275                     l1188:
  1293                           
  1294                           ;Lab2-programa.c: 200:     ADCON0 = 0b01000001;
  1295  0275  3041               	movlw	65
  1296  0276  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0277  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0278  009F               	movwf	31	;volatile
  1299  0279                     l208:
  1300  0279  0008               	return
  1301  027A                     __end_of_Config_INTERRUPT:
  1302                           
  1303                           	psect	text5
  1304  01B2                     __ptext5:	
  1305 ;; *************** function _CONVERSION_ADC *****************
  1306 ;; Defined at:
  1307 ;;		line 155 in file "Lab2-programa.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0, pclath, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0
  1324 ;;      Totals:         0       0       0       0       0
  1325 ;;Total ram usage:        0 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; Hardware stack levels required when called:    4
  1328 ;; This function calls:
  1329 ;;		_NIBBLE1_ADC
  1330 ;;		_NIBBLE2_ADC
  1331 ;;		_SWAP_ADC
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           
  1338                           ;psect for function _CONVERSION_ADC
  1339  01B2                     _CONVERSION_ADC:
  1340  01B2                     l1190:	
  1341                           ;incstack = 0
  1342                           ; Regs used in _CONVERSION_ADC: [wreg+status,2+status,0+pclath+cstack]
  1343                           
  1344                           
  1345                           ;Lab2-programa.c: 156:     ADC_SWAP = SWAP_ADC(ADC_VALOR);
  1346  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1347  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1348  01B4  0822               	movf	_ADC_VALOR,w
  1349  01B5  120A  118A  21D9  120A  118A  	fcall	_SWAP_ADC
  1350  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1351  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1352  01BC  0831               	movf	?_SWAP_ADC+1,w
  1353  01BD  00A1               	movwf	_ADC_SWAP+1
  1354  01BE  0830               	movf	?_SWAP_ADC,w
  1355  01BF  00A0               	movwf	_ADC_SWAP
  1356  01C0                     l1192:
  1357                           
  1358                           ;Lab2-programa.c: 158:     ADC_NIBBLE1 = NIBBLE1_ADC(ADC_VALOR);
  1359  01C0  0822               	movf	_ADC_VALOR,w
  1360  01C1  120A  118A  228A  120A  118A  	fcall	_NIBBLE1_ADC
  1361  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1362  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1363  01C8  0831               	movf	?_NIBBLE1_ADC+1,w
  1364  01C9  00A7               	movwf	_ADC_NIBBLE1+1
  1365  01CA  0830               	movf	?_NIBBLE1_ADC,w
  1366  01CB  00A6               	movwf	_ADC_NIBBLE1
  1367  01CC                     l1194:
  1368                           
  1369                           ;Lab2-programa.c: 159:     ADC_NIBBLE2 = NIBBLE2_ADC(ADC_SWAP);
  1370  01CC  0820               	movf	_ADC_SWAP,w
  1371  01CD  120A  118A  227A  120A  118A  	fcall	_NIBBLE2_ADC
  1372  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1373  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1374  01D4  0831               	movf	?_NIBBLE2_ADC+1,w
  1375  01D5  00A5               	movwf	_ADC_NIBBLE2+1
  1376  01D6  0830               	movf	?_NIBBLE2_ADC,w
  1377  01D7  00A4               	movwf	_ADC_NIBBLE2
  1378  01D8                     l196:
  1379  01D8  0008               	return
  1380  01D9                     __end_of_CONVERSION_ADC:
  1381                           
  1382                           	psect	text6
  1383  01D9                     __ptext6:	
  1384 ;; *************** function _SWAP_ADC *****************
  1385 ;; Defined at:
  1386 ;;		line 14 in file "Config_ADC.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  VAL_ADC         1    wreg     unsigned char 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  VAL_ADC         1    7[BANK0 ] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  2    0[BANK0 ] int 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2, status,0
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1400 ;;      Params:         0       2       0       0       0
  1401 ;;      Locals:         0       1       0       0       0
  1402 ;;      Temps:          0       5       0       0       0
  1403 ;;      Totals:         0       8       0       0       0
  1404 ;;Total ram usage:        8 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    3
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_CONVERSION_ADC
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function _SWAP_ADC
  1416  01D9                     _SWAP_ADC:
  1417                           
  1418                           ;incstack = 0
  1419                           ; Regs used in _SWAP_ADC: [wreg+status,2+status,0]
  1420                           ;SWAP_ADC@VAL_ADC stored from wreg
  1421  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1422  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1423  01DB  00B7               	movwf	SWAP_ADC@VAL_ADC
  1424  01DC                     l1050:
  1425                           
  1426                           ;Config_ADC.c: 15:     VAL_SWAP = (((VAL_ADC & 0x0F)<<4) | ((VAL_ADC & 0xF0)>>4));
  1427  01DC  0837               	movf	SWAP_ADC@VAL_ADC,w
  1428  01DD  00B2               	movwf	??_SWAP_ADC
  1429  01DE  3004               	movlw	4
  1430  01DF                     u185:
  1431  01DF  1003               	clrc
  1432  01E0  0CB2               	rrf	??_SWAP_ADC,f
  1433  01E1  3EFF               	addlw	-1
  1434  01E2  1D03               	skipz
  1435  01E3  29DF               	goto	u185
  1436  01E4  0832               	movf	??_SWAP_ADC,w
  1437  01E5  390F               	andlw	15
  1438  01E6  00B3               	movwf	??_SWAP_ADC+1
  1439  01E7  01B4               	clrf	??_SWAP_ADC+2
  1440  01E8  0837               	movf	SWAP_ADC@VAL_ADC,w
  1441  01E9  390F               	andlw	15
  1442  01EA  00B5               	movwf	??_SWAP_ADC+3
  1443  01EB  01B6               	clrf	??_SWAP_ADC+4
  1444  01EC  0EB5               	swapf	??_SWAP_ADC+3,f
  1445  01ED  0EB6               	swapf	??_SWAP_ADC+4,f
  1446  01EE  30F0               	movlw	240
  1447  01EF  05B6               	andwf	??_SWAP_ADC+4,f
  1448  01F0  0835               	movf	??_SWAP_ADC+3,w
  1449  01F1  390F               	andlw	15
  1450  01F2  04B6               	iorwf	??_SWAP_ADC+4,f
  1451  01F3  30F0               	movlw	240
  1452  01F4  05B5               	andwf	??_SWAP_ADC+3,f
  1453  01F5  0833               	movf	??_SWAP_ADC+1,w
  1454  01F6  0435               	iorwf	??_SWAP_ADC+3,w
  1455  01F7  00AC               	movwf	_VAL_SWAP
  1456  01F8  0834               	movf	??_SWAP_ADC+2,w
  1457  01F9  0436               	iorwf	??_SWAP_ADC+4,w
  1458  01FA  00AD               	movwf	_VAL_SWAP+1
  1459  01FB                     l1052:
  1460                           
  1461                           ;Config_ADC.c: 16:     return VAL_SWAP;
  1462  01FB  082D               	movf	_VAL_SWAP+1,w
  1463  01FC  00B1               	movwf	?_SWAP_ADC+1
  1464  01FD  082C               	movf	_VAL_SWAP,w
  1465  01FE  00B0               	movwf	?_SWAP_ADC
  1466  01FF                     l18:
  1467  01FF  0008               	return
  1468  0200                     __end_of_SWAP_ADC:
  1469                           
  1470                           	psect	text7
  1471  027A                     __ptext7:	
  1472 ;; *************** function _NIBBLE2_ADC *****************
  1473 ;; Defined at:
  1474 ;;		line 24 in file "Config_ADC.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  VAL_SWAP        1    wreg     unsigned char 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  VAL_SWAP        1    4[BANK0 ] unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  2    0[BANK0 ] int 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1488 ;;      Params:         0       2       0       0       0
  1489 ;;      Locals:         0       1       0       0       0
  1490 ;;      Temps:          0       2       0       0       0
  1491 ;;      Totals:         0       5       0       0       0
  1492 ;;Total ram usage:        5 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    3
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_CONVERSION_ADC
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           
  1503                           ;psect for function _NIBBLE2_ADC
  1504  027A                     _NIBBLE2_ADC:
  1505                           
  1506                           ;incstack = 0
  1507                           ; Regs used in _NIBBLE2_ADC: [wreg+status,2]
  1508                           ;NIBBLE2_ADC@VAL_SWAP stored from wreg
  1509  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1510  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1511  027C  00B4               	movwf	NIBBLE2_ADC@VAL_SWAP
  1512  027D                     l1062:
  1513                           
  1514                           ;Config_ADC.c: 25:     VAL_NIBBLE2 = (VAL_SWAP & 15);
  1515  027D  0834               	movf	NIBBLE2_ADC@VAL_SWAP,w
  1516  027E  390F               	andlw	15
  1517  027F  00B2               	movwf	??_NIBBLE2_ADC
  1518  0280  01B3               	clrf	??_NIBBLE2_ADC+1
  1519  0281  0832               	movf	??_NIBBLE2_ADC,w
  1520  0282  00A8               	movwf	_VAL_NIBBLE2
  1521  0283  0833               	movf	??_NIBBLE2_ADC+1,w
  1522  0284  00A9               	movwf	_VAL_NIBBLE2+1
  1523  0285                     l1064:
  1524                           
  1525                           ;Config_ADC.c: 26:     return VAL_NIBBLE2;
  1526  0285  0829               	movf	_VAL_NIBBLE2+1,w
  1527  0286  00B1               	movwf	?_NIBBLE2_ADC+1
  1528  0287  0828               	movf	_VAL_NIBBLE2,w
  1529  0288  00B0               	movwf	?_NIBBLE2_ADC
  1530  0289                     l24:
  1531  0289  0008               	return
  1532  028A                     __end_of_NIBBLE2_ADC:
  1533                           
  1534                           	psect	text8
  1535  028A                     __ptext8:	
  1536 ;; *************** function _NIBBLE1_ADC *****************
  1537 ;; Defined at:
  1538 ;;		line 19 in file "Config_ADC.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  VAL_ADC         1    wreg     unsigned char 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  VAL_ADC         1    4[BANK0 ] unsigned char 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  2    0[BANK0 ] int 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1552 ;;      Params:         0       2       0       0       0
  1553 ;;      Locals:         0       1       0       0       0
  1554 ;;      Temps:          0       2       0       0       0
  1555 ;;      Totals:         0       5       0       0       0
  1556 ;;Total ram usage:        5 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    3
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		_CONVERSION_ADC
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           
  1567                           ;psect for function _NIBBLE1_ADC
  1568  028A                     _NIBBLE1_ADC:
  1569                           
  1570                           ;incstack = 0
  1571                           ; Regs used in _NIBBLE1_ADC: [wreg+status,2]
  1572                           ;NIBBLE1_ADC@VAL_ADC stored from wreg
  1573  028A  1283               	bcf	3,5	;RP0=0, select bank0
  1574  028B  1303               	bcf	3,6	;RP1=0, select bank0
  1575  028C  00B4               	movwf	NIBBLE1_ADC@VAL_ADC
  1576  028D                     l1056:
  1577                           
  1578                           ;Config_ADC.c: 20:     VAL_NIBBLE1 = (VAL_ADC & 15);
  1579  028D  0834               	movf	NIBBLE1_ADC@VAL_ADC,w
  1580  028E  390F               	andlw	15
  1581  028F  00B2               	movwf	??_NIBBLE1_ADC
  1582  0290  01B3               	clrf	??_NIBBLE1_ADC+1
  1583  0291  0832               	movf	??_NIBBLE1_ADC,w
  1584  0292  00AA               	movwf	_VAL_NIBBLE1
  1585  0293  0833               	movf	??_NIBBLE1_ADC+1,w
  1586  0294  00AB               	movwf	_VAL_NIBBLE1+1
  1587  0295                     l1058:
  1588                           
  1589                           ;Config_ADC.c: 21:     return VAL_NIBBLE1;
  1590  0295  082B               	movf	_VAL_NIBBLE1+1,w
  1591  0296  00B1               	movwf	?_NIBBLE1_ADC+1
  1592  0297  082A               	movf	_VAL_NIBBLE1,w
  1593  0298  00B0               	movwf	?_NIBBLE1_ADC
  1594  0299                     l21:
  1595  0299  0008               	return
  1596  029A                     __end_of_NIBBLE1_ADC:
  1597                           
  1598                           	psect	text9
  1599  00B1                     __ptext9:	
  1600 ;; *************** function _ISR *****************
  1601 ;; Defined at:
  1602 ;;		line 69 in file "Lab2-programa.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1616 ;;      Params:         0       0       0       0       0
  1617 ;;      Locals:         0       0       0       0       0
  1618 ;;      Temps:          5       0       0       0       0
  1619 ;;      Totals:         5       0       0       0       0
  1620 ;;Total ram usage:        5 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    2
  1623 ;; This function calls:
  1624 ;;		_ADC
  1625 ;;		_DisplayADC
  1626 ;;		_TOGGLE_1
  1627 ;; This function is called by:
  1628 ;;		Interrupt level 1
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function _ISR
  1634  00B1                     _ISR:
  1635  00B1                     i1l1204:
  1636                           
  1637                           ;Lab2-programa.c: 72:     if (INTCONbits.RBIF == 1){
  1638  00B1  1C0B               	btfss	11,0	;volatile
  1639  00B2  28B4               	goto	u25_21
  1640  00B3  28B5               	goto	u25_20
  1641  00B4                     u25_21:
  1642  00B4  28E2               	goto	i1l1232
  1643  00B5                     u25_20:
  1644  00B5                     i1l1206:
  1645                           
  1646                           ;Lab2-programa.c: 74:             if (PORTBbits.RB0 == 1){
  1647  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1648  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1649  00B7  1C06               	btfss	6,0	;volatile
  1650  00B8  28BA               	goto	u26_21
  1651  00B9  28BB               	goto	u26_20
  1652  00BA                     u26_21:
  1653  00BA  28BD               	goto	i1l164
  1654  00BB                     u26_20:
  1655  00BB                     i1l1208:
  1656                           
  1657                           ;Lab2-programa.c: 75:                 debouncing1 = 1;
  1658  00BB  01FA               	clrf	_debouncing1
  1659  00BC  0AFA               	incf	_debouncing1,f
  1660  00BD                     i1l164:	
  1661                           ;Lab2-programa.c: 77:             }
  1662                           
  1663                           
  1664                           ;Lab2-programa.c: 78:             if (PORTBbits.RB1 == 1){
  1665  00BD  1C86               	btfss	6,1	;volatile
  1666  00BE  28C0               	goto	u27_21
  1667  00BF  28C1               	goto	u27_20
  1668  00C0                     u27_21:
  1669  00C0  28C3               	goto	i1l165
  1670  00C1                     u27_20:
  1671  00C1                     i1l1210:
  1672                           
  1673                           ;Lab2-programa.c: 79:                 debouncing2 = 1;
  1674  00C1  01F9               	clrf	_debouncing2
  1675  00C2  0AF9               	incf	_debouncing2,f
  1676  00C3                     i1l165:	
  1677                           ;Lab2-programa.c: 81:             }
  1678                           
  1679                           
  1680                           ;Lab2-programa.c: 82:             if(PORTBbits.RB0 == 0 && debouncing1 == 1){
  1681  00C3  1806               	btfsc	6,0	;volatile
  1682  00C4  28C6               	goto	u28_21
  1683  00C5  28C7               	goto	u28_20
  1684  00C6                     u28_21:
  1685  00C6  28D3               	goto	i1l1220
  1686  00C7                     u28_20:
  1687  00C7                     i1l1212:
  1688  00C7  037A               	decf	_debouncing1,w
  1689  00C8  1D03               	btfss	3,2
  1690  00C9  28CB               	goto	u29_21
  1691  00CA  28CC               	goto	u29_20
  1692  00CB                     u29_21:
  1693  00CB  28D3               	goto	i1l1220
  1694  00CC                     u29_20:
  1695  00CC                     i1l1214:
  1696                           
  1697                           ;Lab2-programa.c: 83:                 contador++;
  1698  00CC  3001               	movlw	1
  1699  00CD  00F3               	movwf	??_ISR
  1700  00CE  0873               	movf	??_ISR,w
  1701  00CF  07FB               	addwf	_contador,f
  1702  00D0                     i1l1216:
  1703                           
  1704                           ;Lab2-programa.c: 84:                 PORTC = contador;
  1705  00D0  087B               	movf	_contador,w
  1706  00D1  0087               	movwf	7	;volatile
  1707  00D2                     i1l1218:
  1708                           
  1709                           ;Lab2-programa.c: 85:                 debouncing1 = 0;
  1710  00D2  01FA               	clrf	_debouncing1
  1711  00D3                     i1l1220:
  1712                           
  1713                           ;Lab2-programa.c: 87:             if(PORTBbits.RB1 == 0 && debouncing2 == 1){
  1714  00D3  1886               	btfsc	6,1	;volatile
  1715  00D4  28D6               	goto	u30_21
  1716  00D5  28D7               	goto	u30_20
  1717  00D6                     u30_21:
  1718  00D6  28E1               	goto	i1l1230
  1719  00D7                     u30_20:
  1720  00D7                     i1l1222:
  1721  00D7  0379               	decf	_debouncing2,w
  1722  00D8  1D03               	btfss	3,2
  1723  00D9  28DB               	goto	u31_21
  1724  00DA  28DC               	goto	u31_20
  1725  00DB                     u31_21:
  1726  00DB  28E1               	goto	i1l1230
  1727  00DC                     u31_20:
  1728  00DC                     i1l1224:
  1729                           
  1730                           ;Lab2-programa.c: 88:                 contador--;
  1731  00DC  3001               	movlw	1
  1732  00DD  02FB               	subwf	_contador,f
  1733  00DE                     i1l1226:
  1734                           
  1735                           ;Lab2-programa.c: 89:                 PORTC = contador;
  1736  00DE  087B               	movf	_contador,w
  1737  00DF  0087               	movwf	7	;volatile
  1738  00E0                     i1l1228:
  1739                           
  1740                           ;Lab2-programa.c: 90:                 debouncing2 = 0;
  1741  00E0  01F9               	clrf	_debouncing2
  1742  00E1                     i1l1230:
  1743                           
  1744                           ;Lab2-programa.c: 92:             INTCONbits.RBIF = 0;
  1745  00E1  100B               	bcf	11,0	;volatile
  1746  00E2                     i1l1232:
  1747                           
  1748                           ;Lab2-programa.c: 96:     if (PIR1bits.ADIF) {
  1749  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1750  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1751  00E4  1F0C               	btfss	12,6	;volatile
  1752  00E5  28E7               	goto	u32_21
  1753  00E6  28E8               	goto	u32_20
  1754  00E7                     u32_21:
  1755  00E7  2913               	goto	i1l168
  1756  00E8                     u32_20:
  1757  00E8                     i1l1234:
  1758                           
  1759                           ;Lab2-programa.c: 97:         PIR1bits.ADIF = 0;
  1760  00E8  130C               	bcf	12,6	;volatile
  1761  00E9                     i1l1236:
  1762                           
  1763                           ;Lab2-programa.c: 98:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1764  00E9  3003               	movlw	3
  1765  00EA  00F4               	movwf	??_ISR+1
  1766  00EB  3097               	movlw	151
  1767  00EC  00F3               	movwf	??_ISR
  1768  00ED                     u35_27:
  1769  00ED  0BF3               	decfsz	??_ISR,f
  1770  00EE  28ED               	goto	u35_27
  1771  00EF  0BF4               	decfsz	??_ISR+1,f
  1772  00F0  28ED               	goto	u35_27
  1773  00F1  28F2               	nop2
  1774  00F2                     i1l1238:
  1775                           
  1776                           ;Lab2-programa.c: 99:         ADCON0bits.GO = 1;
  1777  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1778  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1779  00F4  149F               	bsf	31,1	;volatile
  1780                           
  1781                           ;Lab2-programa.c: 100:         while (ADCON0bits.GO != 0) {
  1782  00F5  290D               	goto	i1l1244
  1783  00F6                     i1l1240:
  1784                           
  1785                           ;Lab2-programa.c: 101:             ADC_VALOR = ADC(ADRESL, ADRESH);
  1786  00F6  081E               	movf	30,w	;volatile
  1787  00F7  00F3               	movwf	??_ISR
  1788  00F8  0873               	movf	??_ISR,w
  1789  00F9  00F0               	movwf	ADC@ADRESH_
  1790  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  1791  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  1792  00FC  081E               	movf	30,w	;volatile
  1793  00FD  120A  118A  22A9  120A  118A  	fcall	_ADC
  1794  0102  0871               	movf	?_ADC+1,w
  1795  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0105  00A3               	movwf	_ADC_VALOR+1
  1798  0106  0870               	movf	?_ADC,w
  1799  0107  00A2               	movwf	_ADC_VALOR
  1800  0108                     i1l1242:
  1801                           
  1802                           ;Lab2-programa.c: 102:             DisplayADC();
  1803  0108  120A  118A  2224  120A  118A  	fcall	_DisplayADC
  1804  010D                     i1l1244:
  1805                           
  1806                           ;Lab2-programa.c: 100:         while (ADCON0bits.GO != 0) {
  1807  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1808  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1809  010F  189F               	btfsc	31,1	;volatile
  1810  0110  2912               	goto	u33_21
  1811  0111  2913               	goto	u33_20
  1812  0112                     u33_21:
  1813  0112  28F6               	goto	i1l1240
  1814  0113                     u33_20:
  1815  0113                     i1l168:	
  1816                           ;Lab2-programa.c: 104:     }
  1817                           
  1818                           
  1819                           ;Lab2-programa.c: 107:     if (INTCONbits.TMR0IF == 1) {
  1820  0113  1D0B               	btfss	11,2	;volatile
  1821  0114  2916               	goto	u34_21
  1822  0115  2917               	goto	u34_20
  1823  0116                     u34_21:
  1824  0116  291F               	goto	i1l173
  1825  0117                     u34_20:
  1826  0117                     i1l1246:
  1827                           
  1828                           ;Lab2-programa.c: 108:         INTCONbits.TMR0IF = 0;
  1829  0117  110B               	bcf	11,2	;volatile
  1830  0118                     i1l1248:
  1831                           
  1832                           ;Lab2-programa.c: 109:         TMR0 = 4;
  1833  0118  3004               	movlw	4
  1834  0119  0081               	movwf	1	;volatile
  1835  011A                     i1l1250:
  1836                           
  1837                           ;Lab2-programa.c: 110:         TOGGLE_1();
  1838  011A  120A  118A  229A  120A  118A  	fcall	_TOGGLE_1
  1839  011F                     i1l173:
  1840  011F  0877               	movf	??_ISR+4,w
  1841  0120  008A               	movwf	10
  1842  0121  0876               	movf	??_ISR+3,w
  1843  0122  0084               	movwf	4
  1844  0123  0E75               	swapf	??_ISR+2,w
  1845  0124  0083               	movwf	3
  1846  0125  0EFE               	swapf	btemp,f
  1847  0126  0E7E               	swapf	btemp,w
  1848  0127  0009               	retfie
  1849  0128                     __end_of_ISR:
  1850                           
  1851                           	psect	intentry
  1852  0004                     __pintentry:	
  1853                           ;incstack = 0
  1854                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1855                           
  1856  0004                     interrupt_function:
  1857  007E                     saved_w	set	btemp
  1858  0004  00FE               	movwf	btemp
  1859  0005  0E03               	swapf	3,w
  1860  0006  00F5               	movwf	??_ISR+2
  1861  0007  0804               	movf	4,w
  1862  0008  00F6               	movwf	??_ISR+3
  1863  0009  080A               	movf	10,w
  1864  000A  00F7               	movwf	??_ISR+4
  1865  000B  120A  118A  28B1   	ljmp	_ISR
  1866                           
  1867                           	psect	text10
  1868  029A                     __ptext10:	
  1869 ;; *************** function _TOGGLE_1 *****************
  1870 ;; Defined at:
  1871 ;;		line 136 in file "Lab2-programa.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       0       0       0       0
  1886 ;;      Locals:         0       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0
  1888 ;;      Totals:         0       0       0       0       0
  1889 ;;Total ram usage:        0 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_ISR
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           
  1899                           ;psect for function _TOGGLE_1
  1900  029A                     _TOGGLE_1:
  1901  029A                     i1l1146:	
  1902                           ;incstack = 0
  1903                           ; Regs used in _TOGGLE_1: [wreg+status,2+status,0]
  1904                           
  1905                           
  1906                           ;Lab2-programa.c: 137:     if (toggle == 1) {
  1907  029A  0378               	decf	_toggle,w
  1908  029B  1D03               	btfss	3,2
  1909  029C  2A9E               	goto	u21_21
  1910  029D  2A9F               	goto	u21_20
  1911  029E                     u21_21:
  1912  029E  2AA1               	goto	i1l1150
  1913  029F                     u21_20:
  1914  029F                     i1l1148:
  1915                           
  1916                           ;Lab2-programa.c: 138:         toggle = 0;
  1917  029F  01F8               	clrf	_toggle
  1918                           
  1919                           ;Lab2-programa.c: 139:     } else if (toggle == 0) {
  1920  02A0  2AA8               	goto	i1l187
  1921  02A1                     i1l1150:
  1922  02A1  0878               	movf	_toggle,w
  1923  02A2  1D03               	btfss	3,2
  1924  02A3  2AA5               	goto	u22_21
  1925  02A4  2AA6               	goto	u22_20
  1926  02A5                     u22_21:
  1927  02A5  2AA8               	goto	i1l187
  1928  02A6                     u22_20:
  1929  02A6                     i1l1152:
  1930                           
  1931                           ;Lab2-programa.c: 140:         toggle = 1;
  1932  02A6  01F8               	clrf	_toggle
  1933  02A7  0AF8               	incf	_toggle,f
  1934  02A8                     i1l187:
  1935  02A8  0008               	return
  1936  02A9                     __end_of_TOGGLE_1:
  1937                           
  1938                           	psect	text11
  1939  0224                     __ptext11:	
  1940 ;; *************** function _DisplayADC *****************
  1941 ;; Defined at:
  1942 ;;		line 144 in file "Lab2-programa.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1956 ;;      Params:         0       0       0       0       0
  1957 ;;      Locals:         0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0
  1959 ;;      Totals:         0       0       0       0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    1
  1963 ;; This function calls:
  1964 ;;		_display
  1965 ;; This function is called by:
  1966 ;;		_ISR
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function _DisplayADC
  1972  0224                     _DisplayADC:
  1973  0224                     i1l1132:	
  1974                           ;incstack = 0
  1975                           ; Regs used in _DisplayADC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1976                           
  1977                           
  1978                           ;Lab2-programa.c: 145:     PORTE = 0;
  1979  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1980  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1981  0226  0189               	clrf	9	;volatile
  1982  0227                     i1l1134:
  1983                           
  1984                           ;Lab2-programa.c: 146:     if (toggle == 0) {
  1985  0227  0878               	movf	_toggle,w
  1986  0228  1D03               	btfss	3,2
  1987  0229  2A2B               	goto	u19_21
  1988  022A  2A2C               	goto	u19_20
  1989  022B                     u19_21:
  1990  022B  2A37               	goto	i1l1140
  1991  022C                     u19_20:
  1992  022C                     i1l1136:
  1993                           
  1994                           ;Lab2-programa.c: 147:         PORTEbits.RE1 = 1;
  1995  022C  1489               	bsf	9,1	;volatile
  1996  022D                     i1l1138:
  1997                           
  1998                           ;Lab2-programa.c: 148:         PORTD = display(ADC_NIBBLE2);
  1999  022D  0824               	movf	_ADC_NIBBLE2,w
  2000  022E  120A  118A  2023  120A  118A  	fcall	_display
  2001  0233  1283               	bcf	3,5	;RP0=0, select bank0
  2002  0234  1303               	bcf	3,6	;RP1=0, select bank0
  2003  0235  0088               	movwf	8	;volatile
  2004                           
  2005                           ;Lab2-programa.c: 149:     } else if (toggle == 1) {
  2006  0236  2A46               	goto	i1l193
  2007  0237                     i1l1140:
  2008  0237  0378               	decf	_toggle,w
  2009  0238  1D03               	btfss	3,2
  2010  0239  2A3B               	goto	u20_21
  2011  023A  2A3C               	goto	u20_20
  2012  023B                     u20_21:
  2013  023B  2A46               	goto	i1l193
  2014  023C                     u20_20:
  2015  023C                     i1l1142:
  2016                           
  2017                           ;Lab2-programa.c: 150:         PORTEbits.RE2 = 1;
  2018  023C  1509               	bsf	9,2	;volatile
  2019  023D                     i1l1144:
  2020                           
  2021                           ;Lab2-programa.c: 151:         PORTD = display(ADC_NIBBLE1);
  2022  023D  0826               	movf	_ADC_NIBBLE1,w
  2023  023E  120A  118A  2023  120A  118A  	fcall	_display
  2024  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2025  0244  1303               	bcf	3,6	;RP1=0, select bank0
  2026  0245  0088               	movwf	8	;volatile
  2027  0246                     i1l193:
  2028  0246  0008               	return
  2029  0247                     __end_of_DisplayADC:
  2030                           
  2031                           	psect	text12
  2032  0023                     __ptext12:	
  2033 ;; *************** function _display *****************
  2034 ;; Defined at:
  2035 ;;		line 5 in file "Display.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  ADC_VALOR       1    wreg     unsigned char 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  ADC_VALOR       1    2[COMMON] unsigned char 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      unsigned char 
  2042 ;; Registers used:
  2043 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2049 ;;      Params:         0       0       0       0       0
  2050 ;;      Locals:         1       0       0       0       0
  2051 ;;      Temps:          2       0       0       0       0
  2052 ;;      Totals:         3       0       0       0       0
  2053 ;;Total ram usage:        3 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_DisplayADC
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           
  2063                           ;psect for function _display
  2064  0023                     _display:
  2065                           
  2066                           ;incstack = 0
  2067                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
  2068                           ;display@ADC_VALOR stored from wreg
  2069  0023  00F2               	movwf	display@ADC_VALOR
  2070  0024                     i1l1068:
  2071                           
  2072                           ;Display.c: 7:     switch(ADC_VALOR){
  2073  0024  2875               	goto	i1l1106
  2074  0025                     i1l1070:
  2075                           
  2076                           ;Display.c: 9:             Valor_hex = 0b00111111;
  2077  0025  303F               	movlw	63
  2078  0026  00F0               	movwf	??_display
  2079  0027  0870               	movf	??_display,w
  2080  0028  00FC               	movwf	_Valor_hex
  2081                           
  2082                           ;Display.c: 10:             break;
  2083  0029  28AF               	goto	i1l1108
  2084  002A                     i1l1072:
  2085                           
  2086                           ;Display.c: 12:             Valor_hex = 0b000000110;
  2087  002A  3006               	movlw	6
  2088  002B  00F0               	movwf	??_display
  2089  002C  0870               	movf	??_display,w
  2090  002D  00FC               	movwf	_Valor_hex
  2091                           
  2092                           ;Display.c: 13:             break;
  2093  002E  28AF               	goto	i1l1108
  2094  002F                     i1l1074:
  2095                           
  2096                           ;Display.c: 15:             Valor_hex = 0b11011011;
  2097  002F  30DB               	movlw	219
  2098  0030  00F0               	movwf	??_display
  2099  0031  0870               	movf	??_display,w
  2100  0032  00FC               	movwf	_Valor_hex
  2101                           
  2102                           ;Display.c: 16:             break;
  2103  0033  28AF               	goto	i1l1108
  2104  0034                     i1l1076:
  2105                           
  2106                           ;Display.c: 18:             Valor_hex = 0b01001111;
  2107  0034  304F               	movlw	79
  2108  0035  00F0               	movwf	??_display
  2109  0036  0870               	movf	??_display,w
  2110  0037  00FC               	movwf	_Valor_hex
  2111                           
  2112                           ;Display.c: 19:             break;
  2113  0038  28AF               	goto	i1l1108
  2114  0039                     i1l1078:
  2115                           
  2116                           ;Display.c: 21:             Valor_hex = 0b01100110;
  2117  0039  3066               	movlw	102
  2118  003A  00F0               	movwf	??_display
  2119  003B  0870               	movf	??_display,w
  2120  003C  00FC               	movwf	_Valor_hex
  2121                           
  2122                           ;Display.c: 22:             break;
  2123  003D  28AF               	goto	i1l1108
  2124  003E                     i1l1080:
  2125                           
  2126                           ;Display.c: 24:             Valor_hex = 0b01101101;
  2127  003E  306D               	movlw	109
  2128  003F  00F0               	movwf	??_display
  2129  0040  0870               	movf	??_display,w
  2130  0041  00FC               	movwf	_Valor_hex
  2131                           
  2132                           ;Display.c: 25:             break;
  2133  0042  28AF               	goto	i1l1108
  2134  0043                     i1l1082:
  2135                           
  2136                           ;Display.c: 27:             Valor_hex = 0b01111101;
  2137  0043  307D               	movlw	125
  2138  0044  00F0               	movwf	??_display
  2139  0045  0870               	movf	??_display,w
  2140  0046  00FC               	movwf	_Valor_hex
  2141                           
  2142                           ;Display.c: 28:             break;
  2143  0047  28AF               	goto	i1l1108
  2144  0048                     i1l1084:
  2145                           
  2146                           ;Display.c: 30:             Valor_hex = 0b00000111;
  2147  0048  3007               	movlw	7
  2148  0049  00F0               	movwf	??_display
  2149  004A  0870               	movf	??_display,w
  2150  004B  00FC               	movwf	_Valor_hex
  2151                           
  2152                           ;Display.c: 31:             break;
  2153  004C  28AF               	goto	i1l1108
  2154  004D                     i1l1086:
  2155                           
  2156                           ;Display.c: 33:             Valor_hex = 0b01111111;
  2157  004D  307F               	movlw	127
  2158  004E  00F0               	movwf	??_display
  2159  004F  0870               	movf	??_display,w
  2160  0050  00FC               	movwf	_Valor_hex
  2161                           
  2162                           ;Display.c: 34:             break;
  2163  0051  28AF               	goto	i1l1108
  2164  0052                     i1l1088:
  2165                           
  2166                           ;Display.c: 36:             Valor_hex = 0b01101111;
  2167  0052  306F               	movlw	111
  2168  0053  00F0               	movwf	??_display
  2169  0054  0870               	movf	??_display,w
  2170  0055  00FC               	movwf	_Valor_hex
  2171                           
  2172                           ;Display.c: 37:             break;
  2173  0056  28AF               	goto	i1l1108
  2174  0057                     i1l1090:
  2175                           
  2176                           ;Display.c: 39:             Valor_hex = 0b01110111;
  2177  0057  3077               	movlw	119
  2178  0058  00F0               	movwf	??_display
  2179  0059  0870               	movf	??_display,w
  2180  005A  00FC               	movwf	_Valor_hex
  2181                           
  2182                           ;Display.c: 40:             break;
  2183  005B  28AF               	goto	i1l1108
  2184  005C                     i1l1092:
  2185                           
  2186                           ;Display.c: 42:             Valor_hex = 0b01111100;
  2187  005C  307C               	movlw	124
  2188  005D  00F0               	movwf	??_display
  2189  005E  0870               	movf	??_display,w
  2190  005F  00FC               	movwf	_Valor_hex
  2191                           
  2192                           ;Display.c: 43:             break;
  2193  0060  28AF               	goto	i1l1108
  2194  0061                     i1l1094:
  2195                           
  2196                           ;Display.c: 45:             Valor_hex = 0b00111001;
  2197  0061  3039               	movlw	57
  2198  0062  00F0               	movwf	??_display
  2199  0063  0870               	movf	??_display,w
  2200  0064  00FC               	movwf	_Valor_hex
  2201                           
  2202                           ;Display.c: 46:             break;
  2203  0065  28AF               	goto	i1l1108
  2204  0066                     i1l1096:
  2205                           
  2206                           ;Display.c: 48:             Valor_hex = 0b01011110;
  2207  0066  305E               	movlw	94
  2208  0067  00F0               	movwf	??_display
  2209  0068  0870               	movf	??_display,w
  2210  0069  00FC               	movwf	_Valor_hex
  2211                           
  2212                           ;Display.c: 49:             break;
  2213  006A  28AF               	goto	i1l1108
  2214  006B                     i1l1098:
  2215                           
  2216                           ;Display.c: 51:             Valor_hex = 0b01111001;
  2217  006B  3079               	movlw	121
  2218  006C  00F0               	movwf	??_display
  2219  006D  0870               	movf	??_display,w
  2220  006E  00FC               	movwf	_Valor_hex
  2221                           
  2222                           ;Display.c: 52:             break;
  2223  006F  28AF               	goto	i1l1108
  2224  0070                     i1l1100:
  2225                           
  2226                           ;Display.c: 54:             Valor_hex = 0b01110001;
  2227  0070  3071               	movlw	113
  2228  0071  00F0               	movwf	??_display
  2229  0072  0870               	movf	??_display,w
  2230  0073  00FC               	movwf	_Valor_hex
  2231                           
  2232                           ;Display.c: 55:             break;
  2233  0074  28AF               	goto	i1l1108
  2234  0075                     i1l1106:
  2235  0075  0872               	movf	display@ADC_VALOR,w
  2236  0076  00F0               	movwf	??_display
  2237  0077  01F1               	clrf	??_display+1
  2238                           
  2239                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2240                           ; Switch size 1, requested type "simple"
  2241                           ; Number of cases is 1, Range of values is 0 to 0
  2242                           ; switch strategies available:
  2243                           ; Name         Instructions Cycles
  2244                           ; simple_byte            4     3 (average)
  2245                           ; direct_byte           11     8 (fixed)
  2246                           ; jumptable            260     6 (fixed)
  2247                           ;	Chosen strategy is simple_byte
  2248  0078  0871               	movf	??_display+1,w
  2249  0079  3A00               	xorlw	0	; case 0
  2250  007A  1903               	skipnz
  2251  007B  287D               	goto	i1l1314
  2252  007C  2825               	goto	i1l1070
  2253  007D                     i1l1314:
  2254                           
  2255                           ; Switch size 1, requested type "simple"
  2256                           ; Number of cases is 16, Range of values is 0 to 15
  2257                           ; switch strategies available:
  2258                           ; Name         Instructions Cycles
  2259                           ; simple_byte           49    25 (average)
  2260                           ; direct_byte           56     8 (fixed)
  2261                           ; jumptable            260     6 (fixed)
  2262                           ;	Chosen strategy is simple_byte
  2263  007D  0870               	movf	??_display,w
  2264  007E  3A00               	xorlw	0	; case 0
  2265  007F  1903               	skipnz
  2266  0080  2825               	goto	i1l1070
  2267  0081  3A01               	xorlw	1	; case 1
  2268  0082  1903               	skipnz
  2269  0083  282A               	goto	i1l1072
  2270  0084  3A03               	xorlw	3	; case 2
  2271  0085  1903               	skipnz
  2272  0086  282F               	goto	i1l1074
  2273  0087  3A01               	xorlw	1	; case 3
  2274  0088  1903               	skipnz
  2275  0089  2834               	goto	i1l1076
  2276  008A  3A07               	xorlw	7	; case 4
  2277  008B  1903               	skipnz
  2278  008C  2839               	goto	i1l1078
  2279  008D  3A01               	xorlw	1	; case 5
  2280  008E  1903               	skipnz
  2281  008F  283E               	goto	i1l1080
  2282  0090  3A03               	xorlw	3	; case 6
  2283  0091  1903               	skipnz
  2284  0092  2843               	goto	i1l1082
  2285  0093  3A01               	xorlw	1	; case 7
  2286  0094  1903               	skipnz
  2287  0095  2848               	goto	i1l1084
  2288  0096  3A0F               	xorlw	15	; case 8
  2289  0097  1903               	skipnz
  2290  0098  284D               	goto	i1l1086
  2291  0099  3A01               	xorlw	1	; case 9
  2292  009A  1903               	skipnz
  2293  009B  2852               	goto	i1l1088
  2294  009C  3A03               	xorlw	3	; case 10
  2295  009D  1903               	skipnz
  2296  009E  2857               	goto	i1l1090
  2297  009F  3A01               	xorlw	1	; case 11
  2298  00A0  1903               	skipnz
  2299  00A1  285C               	goto	i1l1092
  2300  00A2  3A07               	xorlw	7	; case 12
  2301  00A3  1903               	skipnz
  2302  00A4  2861               	goto	i1l1094
  2303  00A5  3A01               	xorlw	1	; case 13
  2304  00A6  1903               	skipnz
  2305  00A7  2866               	goto	i1l1096
  2306  00A8  3A03               	xorlw	3	; case 14
  2307  00A9  1903               	skipnz
  2308  00AA  286B               	goto	i1l1098
  2309  00AB  3A01               	xorlw	1	; case 15
  2310  00AC  1903               	skipnz
  2311  00AD  2870               	goto	i1l1100
  2312  00AE  2825               	goto	i1l1070
  2313  00AF                     i1l1108:
  2314                           
  2315                           ;Display.c: 60:    return Valor_hex;
  2316  00AF  087C               	movf	_Valor_hex,w
  2317  00B0                     i1l48:
  2318  00B0  0008               	return
  2319  00B1                     __end_of_display:
  2320                           
  2321                           	psect	text13
  2322  02A9                     __ptext13:	
  2323 ;; *************** function _ADC *****************
  2324 ;; Defined at:
  2325 ;;		line 9 in file "Config_ADC.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  ADRESL_         1    wreg     unsigned char 
  2328 ;;  ADRESH_         1    0[COMMON] unsigned char 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  ADRESL_         1    0[COMMON] unsigned char 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  2    0[COMMON] int 
  2333 ;; Registers used:
  2334 ;;		wreg
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2340 ;;      Params:         3       0       0       0       0
  2341 ;;      Locals:         0       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0
  2343 ;;      Totals:         3       0       0       0       0
  2344 ;;Total ram usage:        3 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_ISR
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           
  2354                           ;psect for function _ADC
  2355  02A9                     _ADC:
  2356  02A9                     i1l1128:	
  2357                           ;incstack = 0
  2358                           ; Regs used in _ADC: [wreg]
  2359                           
  2360                           
  2361                           ;Config_ADC.c: 10:     VAL = (ADRESL << 8) | ADRESH;
  2362  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2363  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2364  02AB  081E               	movf	30,w	;volatile
  2365  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2366  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2367  02AE  00AF               	movwf	_VAL+1
  2368  02AF  081E               	movf	30,w	;volatile
  2369  02B0  00AE               	movwf	_VAL
  2370                           
  2371                           ;Config_ADC.c: 11:     return VAL;
  2372  02B1  082F               	movf	_VAL+1,w
  2373  02B2  00F1               	movwf	?_ADC+1
  2374  02B3  082E               	movf	_VAL,w
  2375  02B4  00F0               	movwf	?_ADC
  2376  02B5                     i1l15:
  2377  02B5  0008               	return
  2378  02B6                     __end_of_ADC:
  2379  007E                     btemp	set	126	;btemp
  2380  007E                     wtemp0	set	126
  2381                           
  2382                           	psect	config
  2383                           
  2384                           ;Config register CONFIG1 @ 0x2007
  2385                           ;	Oscillator Selection bits
  2386                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2387                           ;	Watchdog Timer Enable bit
  2388                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2389                           ;	Power-up Timer Enable bit
  2390                           ;	PWRTE = OFF, PWRT disabled
  2391                           ;	RE3/MCLR pin function select bit
  2392                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2393                           ;	Code Protection bit
  2394                           ;	CP = OFF, Program memory code protection is disabled
  2395                           ;	Data Code Protection bit
  2396                           ;	CPD = OFF, Data memory code protection is disabled
  2397                           ;	Brown Out Reset Selection bits
  2398                           ;	BOREN = OFF, BOR disabled
  2399                           ;	Internal External Switchover bit
  2400                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2401                           ;	Fail-Safe Clock Monitor Enabled bit
  2402                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2403                           ;	Low Voltage Programming Enable bit
  2404                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2405                           ;	In-Circuit Debugger Mode bit
  2406                           ;	DEBUG = 0x1, unprogrammed default
  2407  2007                     	org	8199
  2408  2007  20D4               	dw	8404
  2409                           
  2410                           ;Config register CONFIG2 @ 0x2008
  2411                           ;	Brown-out Reset Selection bit
  2412                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2413                           ;	Flash Program Memory Self Write Enable bits
  2414                           ;	WRT = OFF, Write protection off
  2415  2008                     	org	8200
  2416  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80      8      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_ADC
    _DisplayADC->_display

Critical Paths under _main in BANK0

    _setup->_initOsc
    _CONVERSION_ADC->_SWAP_ADC

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     110
                     _CONVERSION_ADC
                   _Config_INTERRUPT
                           _Revision
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Revision                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONVERSION_ADC                                       0     0      0      88
                        _NIBBLE1_ADC
                        _NIBBLE2_ADC
                           _SWAP_ADC
 ---------------------------------------------------------------------------------
 (2) _SWAP_ADC                                             8     6      2      44
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _NIBBLE2_ADC                                          5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _NIBBLE1_ADC                                          5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0      98
                                              3 COMMON     5     5      0
                                _ADC
                         _DisplayADC
                           _TOGGLE_1
 ---------------------------------------------------------------------------------
 (4) _TOGGLE_1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _DisplayADC                                           0     0      0      22
                            _display
 ---------------------------------------------------------------------------------
 (5) _display                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _ADC                                                  4     1      3      76
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVERSION_ADC
     _NIBBLE1_ADC
     _NIBBLE2_ADC
     _SWAP_ADC
   _Config_INTERRUPT
   _Revision
   _setup
     _initOsc

 _ISR (ROOT)
   _ADC
   _DisplayADC
     _display
   _TOGGLE_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      25       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      25      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 20:46:36 2021

                       l21 0299                         l24 0289                         l18 01FF  
                       l60 014A                         l61 0150                         l62 0156  
                       l54 012C                         l63 015C                         l55 0184  
                       l64 0185                         l56 0132                         l57 0138  
                       l58 013E                         l59 0144                         fsr 0004  
                      l202 0223                        l205 01B1                        l208 0279  
                      _ADC 02A9                        l196 01D8                        u230 020D  
                      u231 020C                        u240 0220                        u241 021F  
                      u235 0209                        u245 021C                        u185 01DF  
                      _ISR 00B1                        _VAL 002E                        fsr0 0004  
                      indf 0000                       ?_ADC 0070                       ?_ISR 0070  
                     l1200 0211                       l1120 0162                       l1050 01DC  
                     l1202 0220                       l1052 01FB                       l1116 012B  
                     l1062 027D                       l1056 028D                       l1064 0285  
                     l1312 016A                       l1160 0191                       l1058 0295  
                     l1170 01A2                       l1162 0195                       l1154 0186  
                     l1180 0262                       l1172 01A5                       l1164 0198  
                     l1156 018C                       l1260 0259                       l1252 0247  
                     l1190 01B2                       l1182 026E                       l1174 01A8  
                     l1166 019C                       l1158 0190                       l1254 024A  
                     l1192 01C0                       l1184 026F                       l1176 01AB  
                     l1168 019F                       l1256 024F                       l1194 01CC  
                     l1186 0272                       l1178 01AE                       l1258 0254  
                     l1188 0275                       l1196 0200                       l1198 020D  
                     _IOCB 0096                       i1l15 02B5                       i1l48 00B0  
                     _TMR0 0001                       _main 0247                       btemp 007E  
 __end_of_Config_INTERRUPT 027A                       start 000E                      ??_ADC 0073  
                    ??_ISR 0073                      ?_main 0070                      _ANSEL 0188  
                    i1l164 00BD                      i1l173 011F                      i1l165 00C3  
                    i1l168 0113                      i1l193 0246                      i1l187 02A8  
                    u20_20 023C                      u20_21 023B                      u21_20 029F  
                    u21_21 029E                      u22_20 02A6                      u30_20 00D7  
                    u22_21 02A5                      u30_21 00D6                      u31_20 00DC  
                    u31_21 00DB                      u32_20 00E8                      u32_21 00E7  
                    u33_20 0113                      u25_20 00B5                      u33_21 0112  
                    u25_21 00B4                      u34_20 0117                      u26_20 00BB  
                    u34_21 0116                      u26_21 00BA                      u19_20 022C  
                    u27_20 00C1                      u19_21 022B                      u27_21 00C0  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u35_27 00ED  
                    u28_20 00C7                      u28_21 00C6                      u29_20 00CC  
                    u29_21 00CB                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
               _DisplayADC 0224           __end_of_TOGGLE_1 02A9            __end_of_display 00B1  
          __end_of_initOsc 0186           __end_of_SWAP_ADC 0200                      _setup 0186  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 0011               __end_of_main 0262                     ??_main 0038  
       NIBBLE1_ADC@VAL_ADC 0034           __end_of_Revision 0224                     _ADCON0 001F  
                   _ADCON1 009F                     _ADRESH 001E                     _ADRESL 009E  
              initOsc@IRCF 0032                     ?_setup 0070                     _ANSELH 0189  
                   i1l1100 0070                     i1l1106 0075                     i1l1210 00C1  
                   i1l1108 00AF                     i1l1140 0237                     i1l1132 0224  
                   i1l1212 00C7                     i1l1220 00D3                     i1l1204 00B1  
                   i1l1070 0025                     i1l1142 023C                     i1l1134 0227  
                   i1l1150 02A1                     i1l1222 00D7                     i1l1230 00E1  
                   i1l1214 00CC                     i1l1206 00B5                     i1l1128 02A9  
                   i1l1080 003E                     i1l1072 002A                     i1l1144 023D  
                   i1l1136 022C                     i1l1152 02A6                     i1l1240 00F6  
                   i1l1224 00DC                     i1l1216 00D0                     i1l1208 00BB  
                   i1l1232 00E2                     i1l1314 007D                     i1l1090 0057  
                   i1l1082 0043                     i1l1074 002F                     i1l1138 022D  
                   i1l1146 029A                     i1l1250 011A                     i1l1242 0108  
                   i1l1234 00E8                     i1l1226 00DE                     i1l1218 00D2  
                   i1l1092 005C                     i1l1084 0048                     i1l1076 0034  
                   i1l1068 0024                     i1l1148 029F                     i1l1244 010D  
                   i1l1236 00E9                     i1l1228 00E0                     i1l1094 0061  
                   i1l1086 004D                     i1l1078 0039                     i1l1246 0117  
                   i1l1238 00F2                     i1l1096 0066                     i1l1088 0052  
                   i1l1248 0118                     i1l1098 006B                     _INTCON 000B  
     __size_of_NIBBLE1_ADC 0010       __size_of_NIBBLE2_ADC 0010                     _toggle 0078  
          SWAP_ADC@VAL_ADC 0037                  ??_display 0070                  ??_initOsc 0030  
              ?_DisplayADC 0070                     saved_w 007E                 ADC@ADRESH_ 0070  
               ADC@ADRESL_ 0070    __end_of__initialization 001F             __pcstackCOMMON 0070  
                ?_TOGGLE_1 0070              __end_of_setup 01B2                  ?_SWAP_ADC 0030  
         display@ADC_VALOR 0072                    ??_setup 0033                 __pbssBANK0 0020  
  __size_of_CONVERSION_ADC 0027          ?_Config_INTERRUPT 0070                 __pmaintext 0247  
                ?_Revision 0070        __size_of_DisplayADC 0023         ??_Config_INTERRUPT 0030  
               ??_TOGGLE_1 0070                 __pintentry 0004                 ??_SWAP_ADC 0032  
                _ADC_VALOR 0022                 ??_Revision 0030                    __ptext1 0186  
                  __ptext2 0128                    __ptext3 0200                    __ptext4 0262  
                  __ptext5 01B2                    __ptext6 01D9                    __ptext7 027A  
                  __ptext8 028A                    __ptext9 00B1                    _display 0023  
             __size_of_ADC 000D               __size_of_ISR 0077                    _initOsc 0128  
                  clrloop0 02B7       end_of_initialization 001F        NIBBLE2_ADC@VAL_SWAP 0034  
                _PORTBbits 0006                  _PORTEbits 0009               ??_DisplayADC 0073  
           _CONVERSION_ADC 01B2              ??_NIBBLE1_ADC 0032              ??_NIBBLE2_ADC 0032  
              _ADC_NIBBLE1 0026                _ADC_NIBBLE2 0024         __end_of_DisplayADC 0247  
        __size_of_TOGGLE_1 000F          __size_of_SWAP_ADC 0027        start_initialization 0011  
              __end_of_ADC 02B6                __end_of_ISR 0128     __end_of_CONVERSION_ADC 01D9  
                _Valor_hex 007C        __end_of_NIBBLE1_ADC 029A        __end_of_NIBBLE2_ADC 028A  
        __size_of_Revision 0024  __size_of_Config_INTERRUPT 0018                __pbssCOMMON 0078  
                ___latbits 0002              __pcstackBANK0 0030            ?_CONVERSION_ADC 0070  
              _debouncing1 007A                _debouncing2 0079                   ?_display 0070  
                 ?_initOsc 0070                   _ADC_SWAP 0020             __size_of_setup 002C  
        interrupt_function 0004                  clear_ram0 02B6                _NIBBLE1_ADC 028A  
                 _PIE1bits 008C                _NIBBLE2_ADC 027A                   _PIR1bits 000C  
                 _TOGGLE_1 029A                   _VAL_SWAP 002C                   _SWAP_ADC 01D9  
               _ADCON0bits 001F                   _Revision 0200           _Config_INTERRUPT 0262  
         __size_of_display 008E           __size_of_initOsc 005E                   __ptext10 029A  
                 __ptext11 0224                   __ptext12 0023                   __ptext13 02A9  
                 _contador 007B              __size_of_main 001B                 _INTCONbits 000B  
         ??_CONVERSION_ADC 0038                _VAL_NIBBLE1 002A                _VAL_NIBBLE2 0028  
                 intlevel1 0000                 _OSCCONbits 008F                 _OPTION_REG 0081  
             ?_NIBBLE1_ADC 0030               ?_NIBBLE2_ADC 0030  
