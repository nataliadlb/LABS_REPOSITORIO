

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 19:07:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  008F                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  0105                     	;# 
   438  0107                     	;# 
   439  0108                     	;# 
   440  0109                     	;# 
   441  010C                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  010F                     	;# 
   446  0185                     	;# 
   447  0187                     	;# 
   448  0188                     	;# 
   449  0189                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  001F                     _ADCON0	set	31
   453  000B                     _INTCON	set	11
   454  0006                     _PORTB	set	6
   455  0005                     _PORTA	set	5
   456  0008                     _PORTD	set	8
   457  0009                     _PORTE	set	9
   458  0009                     _PORTEbits	set	9
   459  0001                     _TMR0	set	1
   460  001F                     _ADCON0bits	set	31
   461  000C                     _PIR1bits	set	12
   462  0007                     _PORTC	set	7
   463  0006                     _PORTBbits	set	6
   464  000B                     _INTCONbits	set	11
   465  001E                     _ADRESH	set	30
   466  009F                     _ADCON1	set	159
   467  008C                     _PIE1bits	set	140
   468  0096                     _IOCB	set	150
   469  0081                     _OPTION_REG	set	129
   470  0089                     _TRISE	set	137
   471  0088                     _TRISD	set	136
   472  0087                     _TRISC	set	135
   473  0086                     _TRISB	set	134
   474  0085                     _TRISA	set	133
   475  008F                     _OSCCONbits	set	143
   476  009E                     _ADRESL	set	158
   477  0189                     _ANSELH	set	393
   478  0188                     _ANSEL	set	392
   479                           
   480                           	psect	cinit
   481  0011                     start_initialization:	
   482                           ; #config settings
   483                           
   484  0011                     __initialization:
   485                           
   486                           ; Clear objects allocated to COMMON
   487  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   488  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   489  0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   490  0014  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   491  0015  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   492                           
   493                           ; Clear objects allocated to BANK0
   494  0016  1383               	bcf	3,7	;select IRP bank0
   495  0017  3020               	movlw	low __pbssBANK0
   496  0018  0084               	movwf	4
   497  0019  3030               	movlw	low (__pbssBANK0+16)
   498  001A  120A  118A  22B7  120A  118A  	fcall	clear_ram0
   499  001F                     end_of_initialization:	
   500                           ;End of C runtime variable initialization code
   501                           
   502  001F                     __end_of__initialization:
   503  001F  0183               	clrf	3
   504  0020  120A  118A  2A65   	ljmp	_main	;jump to C main() function
   505                           
   506                           	psect	bssCOMMON
   507  0078                     __pbssCOMMON:
   508  0078                     _toggle:
   509  0078                     	ds	1
   510  0079                     _debouncing2:
   511  0079                     	ds	1
   512  007A                     _debouncing1:
   513  007A                     	ds	1
   514  007B                     _contador:
   515  007B                     	ds	1
   516  007C                     _Valor_hex:
   517  007C                     	ds	1
   518                           
   519                           	psect	bssBANK0
   520  0020                     __pbssBANK0:
   521  0020                     _ADC_SWAP:
   522  0020                     	ds	2
   523  0022                     _ADC_VALOR:
   524  0022                     	ds	2
   525  0024                     _ADC_NIBBLE2:
   526  0024                     	ds	2
   527  0026                     _ADC_NIBBLE1:
   528  0026                     	ds	2
   529  0028                     _VAL_NIBBLE2:
   530  0028                     	ds	2
   531  002A                     _VAL_NIBBLE1:
   532  002A                     	ds	2
   533  002C                     _VAL_SWAP:
   534  002C                     	ds	2
   535  002E                     _VAL:
   536  002E                     	ds	2
   537                           
   538                           	psect	clrtext
   539  02B7                     clear_ram0:	
   540                           ;	Called with FSR containing the base address, and
   541                           ;	W with the last address+1
   542                           
   543  02B7  0064               	clrwdt	;clear the watchdog before getting into this loop
   544  02B8                     clrloop0:
   545  02B8  0180               	clrf	0	;clear RAM location pointed to by FSR
   546  02B9  0A84               	incf	4,f	;increment pointer
   547  02BA  0604               	xorwf	4,w	;XOR with final address
   548  02BB  1903               	btfsc	3,2	;have we reached the end yet?
   549  02BC  3400               	retlw	0	;all done for this memory range, return
   550  02BD  0604               	xorwf	4,w	;XOR again to restore value
   551  02BE  2AB8               	goto	clrloop0	;do the next byte
   552                           
   553                           	psect	cstackCOMMON
   554  0070                     __pcstackCOMMON:
   555  0070                     ?_Revision:
   556  0070                     ??_Revision:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_DisplayADC:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_TOGGLE_1:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ??_TOGGLE_1:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_setup:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_Config_INTERRUPT:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_CONVERSION_ADC:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_display:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ??_display:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_initOsc:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_ISR:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_main:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_ADC:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ADC@ADRESL_:	
   596                           ; 2 bytes @ 0x0
   597                           
   598  0070                     ADC@ADRESH_:	
   599                           ; 1 bytes @ 0x0
   600                           
   601                           
   602                           ; 1 bytes @ 0x0
   603  0070                     	ds	2
   604  0072                     display@ADC_VALOR:
   605                           
   606                           ; 1 bytes @ 0x2
   607  0072                     	ds	1
   608  0073                     ??_DisplayADC:
   609  0073                     ??_ADC:	
   610                           ; 1 bytes @ 0x3
   611                           
   612  0073                     ??_ISR:	
   613                           ; 1 bytes @ 0x3
   614                           
   615                           
   616                           ; 1 bytes @ 0x3
   617  0073                     	ds	5
   618                           
   619                           	psect	cstackBANK0
   620  0030                     __pcstackBANK0:
   621  0030                     ??_Config_INTERRUPT:
   622  0030                     ??_initOsc:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0030                     ?_SWAP_ADC:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0030                     ?_NIBBLE1_ADC:	
   629                           ; 2 bytes @ 0x0
   630                           
   631  0030                     ?_NIBBLE2_ADC:	
   632                           ; 2 bytes @ 0x0
   633                           
   634                           
   635                           ; 2 bytes @ 0x0
   636  0030                     	ds	2
   637  0032                     ??_SWAP_ADC:
   638  0032                     ??_NIBBLE1_ADC:	
   639                           ; 1 bytes @ 0x2
   640                           
   641  0032                     ??_NIBBLE2_ADC:	
   642                           ; 1 bytes @ 0x2
   643                           
   644  0032                     initOsc@IRCF:	
   645                           ; 1 bytes @ 0x2
   646                           
   647                           
   648                           ; 1 bytes @ 0x2
   649  0032                     	ds	1
   650  0033                     ??_setup:
   651                           
   652                           ; 1 bytes @ 0x3
   653  0033                     	ds	1
   654  0034                     NIBBLE1_ADC@VAL_ADC:
   655  0034                     NIBBLE2_ADC@VAL_SWAP:	
   656                           ; 1 bytes @ 0x4
   657                           
   658                           
   659                           ; 1 bytes @ 0x4
   660  0034                     	ds	3
   661  0037                     SWAP_ADC@VAL_ADC:
   662                           
   663                           ; 1 bytes @ 0x7
   664  0037                     	ds	1
   665  0038                     ??_CONVERSION_ADC:
   666  0038                     ??_main:	
   667                           ; 1 bytes @ 0x8
   668                           
   669                           
   670                           	psect	maintext
   671  0265                     __pmaintext:	
   672                           ; 1 bytes @ 0x8
   673 ;;
   674 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   675 ;;
   676 ;; *************** function _main *****************
   677 ;; Defined at:
   678 ;;		line 119 in file "Lab2-programa.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   687 ;; Tracked objects:
   688 ;;		On entry : B00/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   692 ;;      Params:         0       0       0       0       0
   693 ;;      Locals:         0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0
   695 ;;      Totals:         0       0       0       0       0
   696 ;;Total ram usage:        0 bytes
   697 ;; Hardware stack levels required when called:    5
   698 ;; This function calls:
   699 ;;		_CONVERSION_ADC
   700 ;;		_Config_INTERRUPT
   701 ;;		_setup
   702 ;; This function is called by:
   703 ;;		Startup code after reset
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           
   708                           ;psect for function _main
   709  0265                     _main:
   710  0265                     l1258:	
   711                           ;incstack = 0
   712                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   713                           
   714                           
   715                           ;Lab2-programa.c: 120:     PORTEbits.RE0 = 0;
   716  0265  1283               	bcf	3,5	;RP0=0, select bank0
   717  0266  1303               	bcf	3,6	;RP1=0, select bank0
   718  0267  1009               	bcf	9,0	;volatile
   719  0268                     l1260:
   720                           
   721                           ;Lab2-programa.c: 121:     setup();
   722  0268  120A  118A  2190  120A  118A  	fcall	_setup
   723  026D                     l1262:
   724                           
   725                           ;Lab2-programa.c: 122:     Config_INTERRUPT();
   726  026D  120A  118A  224D  120A  118A  	fcall	_Config_INTERRUPT
   727  0272                     l1264:
   728                           
   729                           ;Lab2-programa.c: 128:         CONVERSION_ADC();
   730  0272  120A  118A  21B8  120A  118A  	fcall	_CONVERSION_ADC
   731  0277  2A72               	goto	l1264
   732  0278  120A  118A  280E   	ljmp	start
   733  027B                     __end_of_main:
   734                           
   735                           	psect	text1
   736  0190                     __ptext1:	
   737 ;; *************** function _setup *****************
   738 ;; Defined at:
   739 ;;		line 176 in file "Lab2-programa.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;		None
   742 ;; Auto vars:     Size  Location     Type
   743 ;;		None
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   753 ;;      Params:         0       0       0       0       0
   754 ;;      Locals:         0       0       0       0       0
   755 ;;      Temps:          0       0       0       0       0
   756 ;;      Totals:         0       0       0       0       0
   757 ;;Total ram usage:        0 bytes
   758 ;; Hardware stack levels used:    1
   759 ;; Hardware stack levels required when called:    4
   760 ;; This function calls:
   761 ;;		_initOsc
   762 ;; This function is called by:
   763 ;;		_main
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767                           
   768                           ;psect for function _setup
   769  0190                     _setup:
   770  0190                     l1164:	
   771                           ;incstack = 0
   772                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   773                           
   774                           
   775                           ;Lab2-programa.c: 177:     initOsc(0b00000110);
   776  0190  3006               	movlw	6
   777  0191  120A  118A  2132  120A  118A  	fcall	_initOsc
   778  0196                     l1166:
   779                           
   780                           ;Lab2-programa.c: 178:     ANSEL = 0b00000001;
   781  0196  3001               	movlw	1
   782  0197  1683               	bsf	3,5	;RP0=1, select bank3
   783  0198  1703               	bsf	3,6	;RP1=1, select bank3
   784  0199  0088               	movwf	8	;volatile
   785  019A                     l1168:
   786                           
   787                           ;Lab2-programa.c: 179:     ANSELH = 0;
   788  019A  0189               	clrf	9	;volatile
   789  019B                     l1170:
   790                           
   791                           ;Lab2-programa.c: 180:     TRISA = 0b00000001;
   792  019B  3001               	movlw	1
   793  019C  1683               	bsf	3,5	;RP0=1, select bank1
   794  019D  1303               	bcf	3,6	;RP1=0, select bank1
   795  019E  0085               	movwf	5	;volatile
   796  019F                     l1172:
   797                           
   798                           ;Lab2-programa.c: 181:     PORTA = 0;
   799  019F  1283               	bcf	3,5	;RP0=0, select bank0
   800  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   801  01A1  0185               	clrf	5	;volatile
   802  01A2                     l1174:
   803                           
   804                           ;Lab2-programa.c: 182:     TRISB = 0b00000011;
   805  01A2  3003               	movlw	3
   806  01A3  1683               	bsf	3,5	;RP0=1, select bank1
   807  01A4  1303               	bcf	3,6	;RP1=0, select bank1
   808  01A5  0086               	movwf	6	;volatile
   809  01A6                     l1176:
   810                           
   811                           ;Lab2-programa.c: 183:     PORTB = 0;
   812  01A6  1283               	bcf	3,5	;RP0=0, select bank0
   813  01A7  1303               	bcf	3,6	;RP1=0, select bank0
   814  01A8  0186               	clrf	6	;volatile
   815  01A9                     l1178:
   816                           
   817                           ;Lab2-programa.c: 184:     PORTC = 0;
   818  01A9  0187               	clrf	7	;volatile
   819  01AA                     l1180:
   820                           
   821                           ;Lab2-programa.c: 185:     TRISC = 0;
   822  01AA  1683               	bsf	3,5	;RP0=1, select bank1
   823  01AB  1303               	bcf	3,6	;RP1=0, select bank1
   824  01AC  0187               	clrf	7	;volatile
   825  01AD                     l1182:
   826                           
   827                           ;Lab2-programa.c: 186:     TRISD = 0;
   828  01AD  0188               	clrf	8	;volatile
   829  01AE                     l1184:
   830                           
   831                           ;Lab2-programa.c: 187:     PORTD = 0;
   832  01AE  1283               	bcf	3,5	;RP0=0, select bank0
   833  01AF  1303               	bcf	3,6	;RP1=0, select bank0
   834  01B0  0188               	clrf	8	;volatile
   835  01B1                     l1186:
   836                           
   837                           ;Lab2-programa.c: 188:     TRISE = 0;
   838  01B1  1683               	bsf	3,5	;RP0=1, select bank1
   839  01B2  1303               	bcf	3,6	;RP1=0, select bank1
   840  01B3  0189               	clrf	9	;volatile
   841  01B4                     l1188:
   842                           
   843                           ;Lab2-programa.c: 189:     PORTE = 0;
   844  01B4  1283               	bcf	3,5	;RP0=0, select bank0
   845  01B5  1303               	bcf	3,6	;RP1=0, select bank0
   846  01B6  0189               	clrf	9	;volatile
   847  01B7                     l205:
   848  01B7  0008               	return
   849  01B8                     __end_of_setup:
   850                           
   851                           	psect	text2
   852  0132                     __ptext2:	
   853 ;; *************** function _initOsc *****************
   854 ;; Defined at:
   855 ;;		line 3 in file "Oscilador.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;  IRCF            1    wreg     unsigned char 
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  IRCF            1    2[BANK0 ] unsigned char 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       0       0       0       0
   870 ;;      Locals:         0       1       0       0       0
   871 ;;      Temps:          0       2       0       0       0
   872 ;;      Totals:         0       3       0       0       0
   873 ;;Total ram usage:        3 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    3
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_setup
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function _initOsc
   885  0132                     _initOsc:
   886                           
   887                           ;incstack = 0
   888                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   889                           ;initOsc@IRCF stored from wreg
   890  0132  1283               	bcf	3,5	;RP0=0, select bank0
   891  0133  1303               	bcf	3,6	;RP1=0, select bank0
   892  0134  00B2               	movwf	initOsc@IRCF
   893  0135                     l1118:
   894                           
   895                           ;Oscilador.c: 5:     switch(IRCF){
   896  0135  296C               	goto	l1122
   897  0136                     l54:	
   898                           ;Oscilador.c: 6:         case 0:
   899                           
   900                           
   901                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   902  0136  1683               	bsf	3,5	;RP0=1, select bank1
   903  0137  1303               	bcf	3,6	;RP1=0, select bank1
   904  0138  130F               	bcf	15,6	;volatile
   905                           
   906                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   907  0139  128F               	bcf	15,5	;volatile
   908                           
   909                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   910  013A  120F               	bcf	15,4	;volatile
   911                           
   912                           ;Oscilador.c: 10:             break;
   913  013B  298E               	goto	l55
   914  013C                     l56:	
   915                           ;Oscilador.c: 11:          case 1:
   916                           
   917                           
   918                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   919  013C  1683               	bsf	3,5	;RP0=1, select bank1
   920  013D  1303               	bcf	3,6	;RP1=0, select bank1
   921  013E  130F               	bcf	15,6	;volatile
   922                           
   923                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   924  013F  128F               	bcf	15,5	;volatile
   925                           
   926                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   927  0140  160F               	bsf	15,4	;volatile
   928                           
   929                           ;Oscilador.c: 15:             break;
   930  0141  298E               	goto	l55
   931  0142                     l57:	
   932                           ;Oscilador.c: 16:         case 2:
   933                           
   934                           
   935                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   936  0142  1683               	bsf	3,5	;RP0=1, select bank1
   937  0143  1303               	bcf	3,6	;RP1=0, select bank1
   938  0144  130F               	bcf	15,6	;volatile
   939                           
   940                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   941  0145  168F               	bsf	15,5	;volatile
   942                           
   943                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   944  0146  120F               	bcf	15,4	;volatile
   945                           
   946                           ;Oscilador.c: 20:             break;
   947  0147  298E               	goto	l55
   948  0148                     l58:	
   949                           ;Oscilador.c: 21:         case 3:
   950                           
   951                           
   952                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   953  0148  1683               	bsf	3,5	;RP0=1, select bank1
   954  0149  1303               	bcf	3,6	;RP1=0, select bank1
   955  014A  130F               	bcf	15,6	;volatile
   956                           
   957                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   958  014B  168F               	bsf	15,5	;volatile
   959                           
   960                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   961  014C  160F               	bsf	15,4	;volatile
   962                           
   963                           ;Oscilador.c: 25:             break;
   964  014D  298E               	goto	l55
   965  014E                     l59:	
   966                           ;Oscilador.c: 26:         case 4:
   967                           
   968                           
   969                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   970  014E  1683               	bsf	3,5	;RP0=1, select bank1
   971  014F  1303               	bcf	3,6	;RP1=0, select bank1
   972  0150  170F               	bsf	15,6	;volatile
   973                           
   974                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   975  0151  128F               	bcf	15,5	;volatile
   976                           
   977                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   978  0152  120F               	bcf	15,4	;volatile
   979                           
   980                           ;Oscilador.c: 30:             break;
   981  0153  298E               	goto	l55
   982  0154                     l60:	
   983                           ;Oscilador.c: 31:         case 5:
   984                           
   985                           
   986                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   987  0154  1683               	bsf	3,5	;RP0=1, select bank1
   988  0155  1303               	bcf	3,6	;RP1=0, select bank1
   989  0156  170F               	bsf	15,6	;volatile
   990                           
   991                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
   992  0157  128F               	bcf	15,5	;volatile
   993                           
   994                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
   995  0158  160F               	bsf	15,4	;volatile
   996                           
   997                           ;Oscilador.c: 35:             break;
   998  0159  298E               	goto	l55
   999  015A                     l61:	
  1000                           ;Oscilador.c: 36:         case 6:
  1001                           
  1002                           
  1003                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1004  015A  1683               	bsf	3,5	;RP0=1, select bank1
  1005  015B  1303               	bcf	3,6	;RP1=0, select bank1
  1006  015C  170F               	bsf	15,6	;volatile
  1007                           
  1008                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1009  015D  168F               	bsf	15,5	;volatile
  1010                           
  1011                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1012  015E  120F               	bcf	15,4	;volatile
  1013                           
  1014                           ;Oscilador.c: 40:             break;
  1015  015F  298E               	goto	l55
  1016  0160                     l62:	
  1017                           ;Oscilador.c: 41:         case 7:
  1018                           
  1019                           
  1020                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1021  0160  1683               	bsf	3,5	;RP0=1, select bank1
  1022  0161  1303               	bcf	3,6	;RP1=0, select bank1
  1023  0162  170F               	bsf	15,6	;volatile
  1024                           
  1025                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1026  0163  168F               	bsf	15,5	;volatile
  1027                           
  1028                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1029  0164  160F               	bsf	15,4	;volatile
  1030                           
  1031                           ;Oscilador.c: 45:             break;
  1032  0165  298E               	goto	l55
  1033  0166                     l63:	
  1034                           ;Oscilador.c: 46:         default:
  1035                           
  1036                           
  1037                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1038  0166  1683               	bsf	3,5	;RP0=1, select bank1
  1039  0167  1303               	bcf	3,6	;RP1=0, select bank1
  1040  0168  170F               	bsf	15,6	;volatile
  1041                           
  1042                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1043  0169  168F               	bsf	15,5	;volatile
  1044                           
  1045                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1046  016A  120F               	bcf	15,4	;volatile
  1047                           
  1048                           ;Oscilador.c: 50:             break;
  1049  016B  298E               	goto	l55
  1050  016C                     l1122:
  1051  016C  0832               	movf	initOsc@IRCF,w
  1052  016D  00B0               	movwf	??_initOsc
  1053  016E  01B1               	clrf	??_initOsc+1
  1054                           
  1055                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1056                           ; Switch size 1, requested type "simple"
  1057                           ; Number of cases is 1, Range of values is 0 to 0
  1058                           ; switch strategies available:
  1059                           ; Name         Instructions Cycles
  1060                           ; simple_byte            4     3 (average)
  1061                           ; direct_byte           11     8 (fixed)
  1062                           ; jumptable            260     6 (fixed)
  1063                           ;	Chosen strategy is simple_byte
  1064  016F  0831               	movf	??_initOsc+1,w
  1065  0170  3A00               	xorlw	0	; case 0
  1066  0171  1903               	skipnz
  1067  0172  2974               	goto	l1316
  1068  0173  2966               	goto	l63
  1069  0174                     l1316:
  1070                           
  1071                           ; Switch size 1, requested type "simple"
  1072                           ; Number of cases is 8, Range of values is 0 to 7
  1073                           ; switch strategies available:
  1074                           ; Name         Instructions Cycles
  1075                           ; simple_byte           25    13 (average)
  1076                           ; direct_byte           32     8 (fixed)
  1077                           ; jumptable            260     6 (fixed)
  1078                           ;	Chosen strategy is simple_byte
  1079  0174  0830               	movf	??_initOsc,w
  1080  0175  3A00               	xorlw	0	; case 0
  1081  0176  1903               	skipnz
  1082  0177  2936               	goto	l54
  1083  0178  3A01               	xorlw	1	; case 1
  1084  0179  1903               	skipnz
  1085  017A  293C               	goto	l56
  1086  017B  3A03               	xorlw	3	; case 2
  1087  017C  1903               	skipnz
  1088  017D  2942               	goto	l57
  1089  017E  3A01               	xorlw	1	; case 3
  1090  017F  1903               	skipnz
  1091  0180  2948               	goto	l58
  1092  0181  3A07               	xorlw	7	; case 4
  1093  0182  1903               	skipnz
  1094  0183  294E               	goto	l59
  1095  0184  3A01               	xorlw	1	; case 5
  1096  0185  1903               	skipnz
  1097  0186  2954               	goto	l60
  1098  0187  3A03               	xorlw	3	; case 6
  1099  0188  1903               	skipnz
  1100  0189  295A               	goto	l61
  1101  018A  3A01               	xorlw	1	; case 7
  1102  018B  1903               	skipnz
  1103  018C  2960               	goto	l62
  1104  018D  2966               	goto	l63
  1105  018E                     l55:
  1106                           
  1107                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1108  018E  140F               	bsf	15,0	;volatile
  1109  018F                     l64:
  1110  018F  0008               	return
  1111  0190                     __end_of_initOsc:
  1112                           
  1113                           	psect	text3
  1114  024D                     __ptext3:	
  1115 ;; *************** function _Config_INTERRUPT *****************
  1116 ;; Defined at:
  1117 ;;		line 194 in file "Lab2-programa.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;		None
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;		None
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1131 ;;      Params:         0       0       0       0       0
  1132 ;;      Locals:         0       0       0       0       0
  1133 ;;      Temps:          0       0       0       0       0
  1134 ;;      Totals:         0       0       0       0       0
  1135 ;;Total ram usage:        0 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    3
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           
  1146                           ;psect for function _Config_INTERRUPT
  1147  024D                     _Config_INTERRUPT:
  1148  024D                     l1190:	
  1149                           ;incstack = 0
  1150                           ; Regs used in _Config_INTERRUPT: [wreg+status,2]
  1151                           
  1152                           
  1153                           ;Lab2-programa.c: 195:     TMR0 = 6;
  1154  024D  3006               	movlw	6
  1155  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1156  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0250  0081               	movwf	1	;volatile
  1158                           
  1159                           ;Lab2-programa.c: 196:     OPTION_REG = 0b10001000;
  1160  0251  3088               	movlw	136
  1161  0252  1683               	bsf	3,5	;RP0=1, select bank1
  1162  0253  1303               	bcf	3,6	;RP1=0, select bank1
  1163  0254  0081               	movwf	1	;volatile
  1164                           
  1165                           ;Lab2-programa.c: 197:     INTCON = 0b10101001;
  1166  0255  30A9               	movlw	169
  1167  0256  008B               	movwf	11	;volatile
  1168                           
  1169                           ;Lab2-programa.c: 198:     IOCB = 0b00000011;
  1170  0257  3003               	movlw	3
  1171  0258  0096               	movwf	22	;volatile
  1172  0259                     l1192:
  1173                           
  1174                           ;Lab2-programa.c: 199:     PIE1bits.ADIE = 1;
  1175  0259  170C               	bsf	12,6	;volatile
  1176  025A                     l1194:
  1177                           
  1178                           ;Lab2-programa.c: 200:     PIR1bits.ADIF = 1;
  1179  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1180  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1181  025C  170C               	bsf	12,6	;volatile
  1182  025D                     l1196:
  1183                           
  1184                           ;Lab2-programa.c: 201:     ADCON1 = 0b00000000;
  1185  025D  1683               	bsf	3,5	;RP0=1, select bank1
  1186  025E  1303               	bcf	3,6	;RP1=0, select bank1
  1187  025F  019F               	clrf	31	;volatile
  1188  0260                     l1198:
  1189                           
  1190                           ;Lab2-programa.c: 202:     ADCON0 = 0b01000001;
  1191  0260  3041               	movlw	65
  1192  0261  1283               	bcf	3,5	;RP0=0, select bank0
  1193  0262  1303               	bcf	3,6	;RP1=0, select bank0
  1194  0263  009F               	movwf	31	;volatile
  1195  0264                     l208:
  1196  0264  0008               	return
  1197  0265                     __end_of_Config_INTERRUPT:
  1198                           
  1199                           	psect	text4
  1200  01B8                     __ptext4:	
  1201 ;; *************** function _CONVERSION_ADC *****************
  1202 ;; Defined at:
  1203 ;;		line 156 in file "Lab2-programa.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0, pclath, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1217 ;;      Params:         0       0       0       0       0
  1218 ;;      Locals:         0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0
  1220 ;;      Totals:         0       0       0       0       0
  1221 ;;Total ram usage:        0 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    4
  1224 ;; This function calls:
  1225 ;;		_NIBBLE1_ADC
  1226 ;;		_NIBBLE2_ADC
  1227 ;;		_SWAP_ADC
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           
  1234                           ;psect for function _CONVERSION_ADC
  1235  01B8                     _CONVERSION_ADC:
  1236  01B8                     l1200:	
  1237                           ;incstack = 0
  1238                           ; Regs used in _CONVERSION_ADC: [wreg+status,2+status,0+pclath+cstack]
  1239                           
  1240                           
  1241                           ;Lab2-programa.c: 157:     ADC_SWAP = SWAP_ADC(ADC_VALOR);
  1242  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1243  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1244  01BA  0822               	movf	_ADC_VALOR,w
  1245  01BB  120A  118A  21DF  120A  118A  	fcall	_SWAP_ADC
  1246  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1247  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1248  01C2  0831               	movf	?_SWAP_ADC+1,w
  1249  01C3  00A1               	movwf	_ADC_SWAP+1
  1250  01C4  0830               	movf	?_SWAP_ADC,w
  1251  01C5  00A0               	movwf	_ADC_SWAP
  1252  01C6                     l1202:
  1253                           
  1254                           ;Lab2-programa.c: 159:     ADC_NIBBLE1 = NIBBLE1_ADC(ADC_VALOR);
  1255  01C6  0822               	movf	_ADC_VALOR,w
  1256  01C7  120A  118A  228B  120A  118A  	fcall	_NIBBLE1_ADC
  1257  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1258  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1259  01CE  0831               	movf	?_NIBBLE1_ADC+1,w
  1260  01CF  00A7               	movwf	_ADC_NIBBLE1+1
  1261  01D0  0830               	movf	?_NIBBLE1_ADC,w
  1262  01D1  00A6               	movwf	_ADC_NIBBLE1
  1263  01D2                     l1204:
  1264                           
  1265                           ;Lab2-programa.c: 160:     ADC_NIBBLE2 = NIBBLE2_ADC(ADC_SWAP);
  1266  01D2  0820               	movf	_ADC_SWAP,w
  1267  01D3  120A  118A  227B  120A  118A  	fcall	_NIBBLE2_ADC
  1268  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1269  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1270  01DA  0831               	movf	?_NIBBLE2_ADC+1,w
  1271  01DB  00A5               	movwf	_ADC_NIBBLE2+1
  1272  01DC  0830               	movf	?_NIBBLE2_ADC,w
  1273  01DD  00A4               	movwf	_ADC_NIBBLE2
  1274  01DE                     l196:
  1275  01DE  0008               	return
  1276  01DF                     __end_of_CONVERSION_ADC:
  1277                           
  1278                           	psect	text5
  1279  01DF                     __ptext5:	
  1280 ;; *************** function _SWAP_ADC *****************
  1281 ;; Defined at:
  1282 ;;		line 14 in file "Config_ADC.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  VAL_ADC         1    wreg     unsigned char 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  VAL_ADC         1    7[BANK0 ] unsigned char 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  2    0[BANK0 ] int 
  1289 ;; Registers used:
  1290 ;;		wreg, status,2, status,0
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1296 ;;      Params:         0       2       0       0       0
  1297 ;;      Locals:         0       1       0       0       0
  1298 ;;      Temps:          0       5       0       0       0
  1299 ;;      Totals:         0       8       0       0       0
  1300 ;;Total ram usage:        8 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    3
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_CONVERSION_ADC
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           
  1311                           ;psect for function _SWAP_ADC
  1312  01DF                     _SWAP_ADC:
  1313                           
  1314                           ;incstack = 0
  1315                           ; Regs used in _SWAP_ADC: [wreg+status,2+status,0]
  1316                           ;SWAP_ADC@VAL_ADC stored from wreg
  1317  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1318  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  1319  01E1  00B7               	movwf	SWAP_ADC@VAL_ADC
  1320  01E2                     l1052:
  1321                           
  1322                           ;Config_ADC.c: 15:     VAL_SWAP = (((VAL_ADC & 0x0F)<<4) | ((VAL_ADC & 0xF0)>>4));
  1323  01E2  0837               	movf	SWAP_ADC@VAL_ADC,w
  1324  01E3  00B2               	movwf	??_SWAP_ADC
  1325  01E4  3004               	movlw	4
  1326  01E5                     u185:
  1327  01E5  1003               	clrc
  1328  01E6  0CB2               	rrf	??_SWAP_ADC,f
  1329  01E7  3EFF               	addlw	-1
  1330  01E8  1D03               	skipz
  1331  01E9  29E5               	goto	u185
  1332  01EA  0832               	movf	??_SWAP_ADC,w
  1333  01EB  390F               	andlw	15
  1334  01EC  00B3               	movwf	??_SWAP_ADC+1
  1335  01ED  01B4               	clrf	??_SWAP_ADC+2
  1336  01EE  0837               	movf	SWAP_ADC@VAL_ADC,w
  1337  01EF  390F               	andlw	15
  1338  01F0  00B5               	movwf	??_SWAP_ADC+3
  1339  01F1  01B6               	clrf	??_SWAP_ADC+4
  1340  01F2  0EB5               	swapf	??_SWAP_ADC+3,f
  1341  01F3  0EB6               	swapf	??_SWAP_ADC+4,f
  1342  01F4  30F0               	movlw	240
  1343  01F5  05B6               	andwf	??_SWAP_ADC+4,f
  1344  01F6  0835               	movf	??_SWAP_ADC+3,w
  1345  01F7  390F               	andlw	15
  1346  01F8  04B6               	iorwf	??_SWAP_ADC+4,f
  1347  01F9  30F0               	movlw	240
  1348  01FA  05B5               	andwf	??_SWAP_ADC+3,f
  1349  01FB  0833               	movf	??_SWAP_ADC+1,w
  1350  01FC  0435               	iorwf	??_SWAP_ADC+3,w
  1351  01FD  00AC               	movwf	_VAL_SWAP
  1352  01FE  0834               	movf	??_SWAP_ADC+2,w
  1353  01FF  0436               	iorwf	??_SWAP_ADC+4,w
  1354  0200  00AD               	movwf	_VAL_SWAP+1
  1355  0201                     l1054:
  1356                           
  1357                           ;Config_ADC.c: 16:     return VAL_SWAP;
  1358  0201  082D               	movf	_VAL_SWAP+1,w
  1359  0202  00B1               	movwf	?_SWAP_ADC+1
  1360  0203  082C               	movf	_VAL_SWAP,w
  1361  0204  00B0               	movwf	?_SWAP_ADC
  1362  0205                     l18:
  1363  0205  0008               	return
  1364  0206                     __end_of_SWAP_ADC:
  1365                           
  1366                           	psect	text6
  1367  027B                     __ptext6:	
  1368 ;; *************** function _NIBBLE2_ADC *****************
  1369 ;; Defined at:
  1370 ;;		line 24 in file "Config_ADC.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  VAL_SWAP        1    wreg     unsigned char 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  VAL_SWAP        1    4[BANK0 ] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  2    0[BANK0 ] int 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         0       2       0       0       0
  1385 ;;      Locals:         0       1       0       0       0
  1386 ;;      Temps:          0       2       0       0       0
  1387 ;;      Totals:         0       5       0       0       0
  1388 ;;Total ram usage:        5 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    3
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_CONVERSION_ADC
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           
  1399                           ;psect for function _NIBBLE2_ADC
  1400  027B                     _NIBBLE2_ADC:
  1401                           
  1402                           ;incstack = 0
  1403                           ; Regs used in _NIBBLE2_ADC: [wreg+status,2]
  1404                           ;NIBBLE2_ADC@VAL_SWAP stored from wreg
  1405  027B  1283               	bcf	3,5	;RP0=0, select bank0
  1406  027C  1303               	bcf	3,6	;RP1=0, select bank0
  1407  027D  00B4               	movwf	NIBBLE2_ADC@VAL_SWAP
  1408  027E                     l1064:
  1409                           
  1410                           ;Config_ADC.c: 25:     VAL_NIBBLE2 = (VAL_SWAP & 15);
  1411  027E  0834               	movf	NIBBLE2_ADC@VAL_SWAP,w
  1412  027F  390F               	andlw	15
  1413  0280  00B2               	movwf	??_NIBBLE2_ADC
  1414  0281  01B3               	clrf	??_NIBBLE2_ADC+1
  1415  0282  0832               	movf	??_NIBBLE2_ADC,w
  1416  0283  00A8               	movwf	_VAL_NIBBLE2
  1417  0284  0833               	movf	??_NIBBLE2_ADC+1,w
  1418  0285  00A9               	movwf	_VAL_NIBBLE2+1
  1419  0286                     l1066:
  1420                           
  1421                           ;Config_ADC.c: 26:     return VAL_NIBBLE2;
  1422  0286  0829               	movf	_VAL_NIBBLE2+1,w
  1423  0287  00B1               	movwf	?_NIBBLE2_ADC+1
  1424  0288  0828               	movf	_VAL_NIBBLE2,w
  1425  0289  00B0               	movwf	?_NIBBLE2_ADC
  1426  028A                     l24:
  1427  028A  0008               	return
  1428  028B                     __end_of_NIBBLE2_ADC:
  1429                           
  1430                           	psect	text7
  1431  028B                     __ptext7:	
  1432 ;; *************** function _NIBBLE1_ADC *****************
  1433 ;; Defined at:
  1434 ;;		line 19 in file "Config_ADC.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  VAL_ADC         1    wreg     unsigned char 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  VAL_ADC         1    4[BANK0 ] unsigned char 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  2    0[BANK0 ] int 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1448 ;;      Params:         0       2       0       0       0
  1449 ;;      Locals:         0       1       0       0       0
  1450 ;;      Temps:          0       2       0       0       0
  1451 ;;      Totals:         0       5       0       0       0
  1452 ;;Total ram usage:        5 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    3
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_CONVERSION_ADC
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           
  1463                           ;psect for function _NIBBLE1_ADC
  1464  028B                     _NIBBLE1_ADC:
  1465                           
  1466                           ;incstack = 0
  1467                           ; Regs used in _NIBBLE1_ADC: [wreg+status,2]
  1468                           ;NIBBLE1_ADC@VAL_ADC stored from wreg
  1469  028B  1283               	bcf	3,5	;RP0=0, select bank0
  1470  028C  1303               	bcf	3,6	;RP1=0, select bank0
  1471  028D  00B4               	movwf	NIBBLE1_ADC@VAL_ADC
  1472  028E                     l1058:
  1473                           
  1474                           ;Config_ADC.c: 20:     VAL_NIBBLE1 = (VAL_ADC & 15);
  1475  028E  0834               	movf	NIBBLE1_ADC@VAL_ADC,w
  1476  028F  390F               	andlw	15
  1477  0290  00B2               	movwf	??_NIBBLE1_ADC
  1478  0291  01B3               	clrf	??_NIBBLE1_ADC+1
  1479  0292  0832               	movf	??_NIBBLE1_ADC,w
  1480  0293  00AA               	movwf	_VAL_NIBBLE1
  1481  0294  0833               	movf	??_NIBBLE1_ADC+1,w
  1482  0295  00AB               	movwf	_VAL_NIBBLE1+1
  1483  0296                     l1060:
  1484                           
  1485                           ;Config_ADC.c: 21:     return VAL_NIBBLE1;
  1486  0296  082B               	movf	_VAL_NIBBLE1+1,w
  1487  0297  00B1               	movwf	?_NIBBLE1_ADC+1
  1488  0298  082A               	movf	_VAL_NIBBLE1,w
  1489  0299  00B0               	movwf	?_NIBBLE1_ADC
  1490  029A                     l21:
  1491  029A  0008               	return
  1492  029B                     __end_of_NIBBLE1_ADC:
  1493                           
  1494                           	psect	text8
  1495  00B1                     __ptext8:	
  1496 ;; *************** function _ISR *****************
  1497 ;; Defined at:
  1498 ;;		line 69 in file "Lab2-programa.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         0       0       0       0       0
  1513 ;;      Locals:         0       0       0       0       0
  1514 ;;      Temps:          5       0       0       0       0
  1515 ;;      Totals:         5       0       0       0       0
  1516 ;;Total ram usage:        5 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:    2
  1519 ;; This function calls:
  1520 ;;		_ADC
  1521 ;;		_DisplayADC
  1522 ;;		_Revision
  1523 ;;		_TOGGLE_1
  1524 ;; This function is called by:
  1525 ;;		Interrupt level 1
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function _ISR
  1531  00B1                     _ISR:
  1532  00B1                     i1l1206:
  1533                           
  1534                           ;Lab2-programa.c: 72:     if (INTCONbits.RBIF == 1){
  1535  00B1  1C0B               	btfss	11,0	;volatile
  1536  00B2  28B4               	goto	u25_21
  1537  00B3  28B5               	goto	u25_20
  1538  00B4                     u25_21:
  1539  00B4  28E2               	goto	i1l1234
  1540  00B5                     u25_20:
  1541  00B5                     i1l1208:
  1542                           
  1543                           ;Lab2-programa.c: 74:             if (PORTBbits.RB0 == 1){
  1544  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1545  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1546  00B7  1C06               	btfss	6,0	;volatile
  1547  00B8  28BA               	goto	u26_21
  1548  00B9  28BB               	goto	u26_20
  1549  00BA                     u26_21:
  1550  00BA  28BD               	goto	i1l164
  1551  00BB                     u26_20:
  1552  00BB                     i1l1210:
  1553                           
  1554                           ;Lab2-programa.c: 75:                 debouncing1 = 1;
  1555  00BB  01FA               	clrf	_debouncing1
  1556  00BC  0AFA               	incf	_debouncing1,f
  1557  00BD                     i1l164:	
  1558                           ;Lab2-programa.c: 77:             }
  1559                           
  1560                           
  1561                           ;Lab2-programa.c: 78:             if (PORTBbits.RB1 == 1){
  1562  00BD  1C86               	btfss	6,1	;volatile
  1563  00BE  28C0               	goto	u27_21
  1564  00BF  28C1               	goto	u27_20
  1565  00C0                     u27_21:
  1566  00C0  28C3               	goto	i1l165
  1567  00C1                     u27_20:
  1568  00C1                     i1l1212:
  1569                           
  1570                           ;Lab2-programa.c: 79:                 debouncing2 = 1;
  1571  00C1  01F9               	clrf	_debouncing2
  1572  00C2  0AF9               	incf	_debouncing2,f
  1573  00C3                     i1l165:	
  1574                           ;Lab2-programa.c: 81:             }
  1575                           
  1576                           
  1577                           ;Lab2-programa.c: 82:             if(PORTBbits.RB0 == 0 && debouncing1 == 1){
  1578  00C3  1806               	btfsc	6,0	;volatile
  1579  00C4  28C6               	goto	u28_21
  1580  00C5  28C7               	goto	u28_20
  1581  00C6                     u28_21:
  1582  00C6  28D3               	goto	i1l1222
  1583  00C7                     u28_20:
  1584  00C7                     i1l1214:
  1585  00C7  037A               	decf	_debouncing1,w
  1586  00C8  1D03               	btfss	3,2
  1587  00C9  28CB               	goto	u29_21
  1588  00CA  28CC               	goto	u29_20
  1589  00CB                     u29_21:
  1590  00CB  28D3               	goto	i1l1222
  1591  00CC                     u29_20:
  1592  00CC                     i1l1216:
  1593                           
  1594                           ;Lab2-programa.c: 83:                 contador++;
  1595  00CC  3001               	movlw	1
  1596  00CD  00F3               	movwf	??_ISR
  1597  00CE  0873               	movf	??_ISR,w
  1598  00CF  07FB               	addwf	_contador,f
  1599  00D0                     i1l1218:
  1600                           
  1601                           ;Lab2-programa.c: 84:                 PORTC = contador;
  1602  00D0  087B               	movf	_contador,w
  1603  00D1  0087               	movwf	7	;volatile
  1604  00D2                     i1l1220:
  1605                           
  1606                           ;Lab2-programa.c: 85:                 debouncing1 = 0;
  1607  00D2  01FA               	clrf	_debouncing1
  1608  00D3                     i1l1222:
  1609                           
  1610                           ;Lab2-programa.c: 87:             if(PORTBbits.RB1 == 0 && debouncing2 == 1){
  1611  00D3  1886               	btfsc	6,1	;volatile
  1612  00D4  28D6               	goto	u30_21
  1613  00D5  28D7               	goto	u30_20
  1614  00D6                     u30_21:
  1615  00D6  28E1               	goto	i1l1232
  1616  00D7                     u30_20:
  1617  00D7                     i1l1224:
  1618  00D7  0379               	decf	_debouncing2,w
  1619  00D8  1D03               	btfss	3,2
  1620  00D9  28DB               	goto	u31_21
  1621  00DA  28DC               	goto	u31_20
  1622  00DB                     u31_21:
  1623  00DB  28E1               	goto	i1l1232
  1624  00DC                     u31_20:
  1625  00DC                     i1l1226:
  1626                           
  1627                           ;Lab2-programa.c: 88:                 contador--;
  1628  00DC  3001               	movlw	1
  1629  00DD  02FB               	subwf	_contador,f
  1630  00DE                     i1l1228:
  1631                           
  1632                           ;Lab2-programa.c: 89:                 PORTC = contador;
  1633  00DE  087B               	movf	_contador,w
  1634  00DF  0087               	movwf	7	;volatile
  1635  00E0                     i1l1230:
  1636                           
  1637                           ;Lab2-programa.c: 90:                 debouncing2 = 0;
  1638  00E0  01F9               	clrf	_debouncing2
  1639  00E1                     i1l1232:
  1640                           
  1641                           ;Lab2-programa.c: 92:             INTCONbits.RBIF = 0;
  1642  00E1  100B               	bcf	11,0	;volatile
  1643  00E2                     i1l1234:
  1644                           
  1645                           ;Lab2-programa.c: 96:     if (PIR1bits.ADIF) {
  1646  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1647  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1648  00E4  1F0C               	btfss	12,6	;volatile
  1649  00E5  28E7               	goto	u32_21
  1650  00E6  28E8               	goto	u32_20
  1651  00E7                     u32_21:
  1652  00E7  2918               	goto	i1l168
  1653  00E8                     u32_20:
  1654  00E8                     i1l1236:
  1655                           
  1656                           ;Lab2-programa.c: 97:         PIR1bits.ADIF = 0;
  1657  00E8  130C               	bcf	12,6	;volatile
  1658  00E9                     i1l1238:
  1659                           
  1660                           ;Lab2-programa.c: 98:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1661  00E9  3003               	movlw	3
  1662  00EA  00F4               	movwf	??_ISR+1
  1663  00EB  3097               	movlw	151
  1664  00EC  00F3               	movwf	??_ISR
  1665  00ED                     u35_27:
  1666  00ED  0BF3               	decfsz	??_ISR,f
  1667  00EE  28ED               	goto	u35_27
  1668  00EF  0BF4               	decfsz	??_ISR+1,f
  1669  00F0  28ED               	goto	u35_27
  1670  00F1  28F2               	nop2
  1671  00F2                     i1l1240:
  1672                           
  1673                           ;Lab2-programa.c: 99:         ADCON0bits.GO = 1;
  1674  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1675  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1676  00F4  149F               	bsf	31,1	;volatile
  1677                           
  1678                           ;Lab2-programa.c: 100:         while (ADCON0bits.GO != 0) {
  1679  00F5  2912               	goto	i1l1248
  1680  00F6                     i1l1242:
  1681                           
  1682                           ;Lab2-programa.c: 101:             ADC_VALOR = ADC(ADRESL, ADRESH);
  1683  00F6  081E               	movf	30,w	;volatile
  1684  00F7  00F3               	movwf	??_ISR
  1685  00F8  0873               	movf	??_ISR,w
  1686  00F9  00F0               	movwf	ADC@ADRESH_
  1687  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  1688  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  1689  00FC  081E               	movf	30,w	;volatile
  1690  00FD  120A  118A  22AA  120A  118A  	fcall	_ADC
  1691  0102  0871               	movf	?_ADC+1,w
  1692  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1693  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1694  0105  00A3               	movwf	_ADC_VALOR+1
  1695  0106  0870               	movf	?_ADC,w
  1696  0107  00A2               	movwf	_ADC_VALOR
  1697  0108                     i1l1244:
  1698                           
  1699                           ;Lab2-programa.c: 102:             Revision();
  1700  0108  120A  118A  2206  120A  118A  	fcall	_Revision
  1701  010D                     i1l1246:
  1702                           
  1703                           ;Lab2-programa.c: 103:             DisplayADC();
  1704  010D  120A  118A  222A  120A  118A  	fcall	_DisplayADC
  1705  0112                     i1l1248:
  1706                           
  1707                           ;Lab2-programa.c: 100:         while (ADCON0bits.GO != 0) {
  1708  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1709  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1710  0114  189F               	btfsc	31,1	;volatile
  1711  0115  2917               	goto	u33_21
  1712  0116  2918               	goto	u33_20
  1713  0117                     u33_21:
  1714  0117  28F6               	goto	i1l1242
  1715  0118                     u33_20:
  1716  0118                     i1l168:	
  1717                           ;Lab2-programa.c: 105:     }
  1718                           
  1719                           
  1720                           ;Lab2-programa.c: 108:     if (INTCONbits.TMR0IF == 1) {
  1721  0118  1D0B               	btfss	11,2	;volatile
  1722  0119  291B               	goto	u34_21
  1723  011A  291C               	goto	u34_20
  1724  011B                     u34_21:
  1725  011B  2929               	goto	i1l173
  1726  011C                     u34_20:
  1727  011C                     i1l1250:
  1728                           
  1729                           ;Lab2-programa.c: 109:         INTCONbits.TMR0IF = 0;
  1730  011C  110B               	bcf	11,2	;volatile
  1731  011D                     i1l1252:
  1732                           
  1733                           ;Lab2-programa.c: 110:         TMR0 = 6;
  1734  011D  3006               	movlw	6
  1735  011E  0081               	movwf	1	;volatile
  1736  011F                     i1l1254:
  1737                           
  1738                           ;Lab2-programa.c: 111:         Revision();
  1739  011F  120A  118A  2206  120A  118A  	fcall	_Revision
  1740  0124                     i1l1256:
  1741                           
  1742                           ;Lab2-programa.c: 112:         TOGGLE_1();
  1743  0124  120A  118A  229B  120A  118A  	fcall	_TOGGLE_1
  1744  0129                     i1l173:
  1745  0129  0877               	movf	??_ISR+4,w
  1746  012A  008A               	movwf	10
  1747  012B  0876               	movf	??_ISR+3,w
  1748  012C  0084               	movwf	4
  1749  012D  0E75               	swapf	??_ISR+2,w
  1750  012E  0083               	movwf	3
  1751  012F  0EFE               	swapf	btemp,f
  1752  0130  0E7E               	swapf	btemp,w
  1753  0131  0009               	retfie
  1754  0132                     __end_of_ISR:
  1755                           
  1756                           	psect	intentry
  1757  0004                     __pintentry:	
  1758                           ;incstack = 0
  1759                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1760                           
  1761  0004                     interrupt_function:
  1762  007E                     saved_w	set	btemp
  1763  0004  00FE               	movwf	btemp
  1764  0005  0E03               	swapf	3,w
  1765  0006  00F5               	movwf	??_ISR+2
  1766  0007  0804               	movf	4,w
  1767  0008  00F6               	movwf	??_ISR+3
  1768  0009  080A               	movf	10,w
  1769  000A  00F7               	movwf	??_ISR+4
  1770  000B  120A  118A  28B1   	ljmp	_ISR
  1771                           
  1772                           	psect	text9
  1773  029B                     __ptext9:	
  1774 ;; *************** function _TOGGLE_1 *****************
  1775 ;; Defined at:
  1776 ;;		line 137 in file "Lab2-programa.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1790 ;;      Params:         0       0       0       0       0
  1791 ;;      Locals:         0       0       0       0       0
  1792 ;;      Temps:          0       0       0       0       0
  1793 ;;      Totals:         0       0       0       0       0
  1794 ;;Total ram usage:        0 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_ISR
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function _TOGGLE_1
  1805  029B                     _TOGGLE_1:
  1806  029B                     i1l1156:	
  1807                           ;incstack = 0
  1808                           ; Regs used in _TOGGLE_1: [wreg+status,2+status,0]
  1809                           
  1810                           
  1811                           ;Lab2-programa.c: 138:     if (toggle == 1) {
  1812  029B  0378               	decf	_toggle,w
  1813  029C  1D03               	btfss	3,2
  1814  029D  2A9F               	goto	u23_21
  1815  029E  2AA0               	goto	u23_20
  1816  029F                     u23_21:
  1817  029F  2AA2               	goto	i1l1160
  1818  02A0                     u23_20:
  1819  02A0                     i1l1158:
  1820                           
  1821                           ;Lab2-programa.c: 139:         toggle = 0;
  1822  02A0  01F8               	clrf	_toggle
  1823                           
  1824                           ;Lab2-programa.c: 140:     } else if (toggle == 0) {
  1825  02A1  2AA9               	goto	i1l187
  1826  02A2                     i1l1160:
  1827  02A2  0878               	movf	_toggle,w
  1828  02A3  1D03               	btfss	3,2
  1829  02A4  2AA6               	goto	u24_21
  1830  02A5  2AA7               	goto	u24_20
  1831  02A6                     u24_21:
  1832  02A6  2AA9               	goto	i1l187
  1833  02A7                     u24_20:
  1834  02A7                     i1l1162:
  1835                           
  1836                           ;Lab2-programa.c: 141:         toggle = 1;
  1837  02A7  01F8               	clrf	_toggle
  1838  02A8  0AF8               	incf	_toggle,f
  1839  02A9                     i1l187:
  1840  02A9  0008               	return
  1841  02AA                     __end_of_TOGGLE_1:
  1842                           
  1843                           	psect	text10
  1844  0206                     __ptext10:	
  1845 ;; *************** function _Revision *****************
  1846 ;; Defined at:
  1847 ;;		line 164 in file "Lab2-programa.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1861 ;;      Params:         0       0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0
  1863 ;;      Temps:          1       0       0       0       0
  1864 ;;      Totals:         1       0       0       0       0
  1865 ;;Total ram usage:        1 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; This function calls:
  1868 ;;		Nothing
  1869 ;; This function is called by:
  1870 ;;		_ISR
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           
  1875                           ;psect for function _Revision
  1876  0206                     _Revision:
  1877  0206                     i1l1134:	
  1878                           ;incstack = 0
  1879                           ; Regs used in _Revision: [wreg]
  1880                           
  1881                           
  1882                           ;Lab2-programa.c: 165:     if (ADC_VALOR > contador) {
  1883  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1884  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1885  0208  0823               	movf	_ADC_VALOR+1,w
  1886  0209  3A80               	xorlw	128
  1887  020A  3C80               	sublw	128
  1888  020B  1D03               	skipz
  1889  020C  2A0F               	goto	u19_25
  1890  020D  0822               	movf	_ADC_VALOR,w
  1891  020E  027B               	subwf	_contador,w
  1892  020F                     u19_25:
  1893  020F  1803               	skipnc
  1894  0210  2A12               	goto	u19_21
  1895  0211  2A13               	goto	u19_20
  1896  0212                     u19_21:
  1897  0212  2A17               	goto	i1l1138
  1898  0213                     u19_20:
  1899  0213                     i1l1136:
  1900                           
  1901                           ;Lab2-programa.c: 166:             PORTEbits.RE0 = 1;
  1902  0213  1283               	bcf	3,5	;RP0=0, select bank0
  1903  0214  1303               	bcf	3,6	;RP1=0, select bank0
  1904  0215  1409               	bsf	9,0	;volatile
  1905                           
  1906                           ;Lab2-programa.c: 168:         }
  1907  0216  2A29               	goto	i1l202
  1908  0217                     i1l1138:
  1909  0217  1283               	bcf	3,5	;RP0=0, select bank0
  1910  0218  1303               	bcf	3,6	;RP1=0, select bank0
  1911  0219  0823               	movf	_ADC_VALOR+1,w
  1912  021A  3A80               	xorlw	128
  1913  021B  00F0               	movwf	??_Revision
  1914  021C  3080               	movlw	128
  1915  021D  0270               	subwf	??_Revision,w
  1916  021E  1D03               	skipz
  1917  021F  2A22               	goto	u20_25
  1918  0220  087B               	movf	_contador,w
  1919  0221  0222               	subwf	_ADC_VALOR,w
  1920  0222                     u20_25:
  1921  0222  1803               	skipnc
  1922  0223  2A25               	goto	u20_21
  1923  0224  2A26               	goto	u20_20
  1924  0225                     u20_21:
  1925  0225  2A29               	goto	i1l202
  1926  0226                     u20_20:
  1927  0226                     i1l1140:
  1928                           
  1929                           ;Lab2-programa.c: 170:             PORTEbits.RE0 = 0;
  1930  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1931  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1932  0228  1009               	bcf	9,0	;volatile
  1933  0229                     i1l202:
  1934  0229  0008               	return
  1935  022A                     __end_of_Revision:
  1936                           
  1937                           	psect	text11
  1938  022A                     __ptext11:	
  1939 ;; *************** function _DisplayADC *****************
  1940 ;; Defined at:
  1941 ;;		line 145 in file "Lab2-programa.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1955 ;;      Params:         0       0       0       0       0
  1956 ;;      Locals:         0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0
  1958 ;;      Totals:         0       0       0       0       0
  1959 ;;Total ram usage:        0 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    1
  1962 ;; This function calls:
  1963 ;;		_display
  1964 ;; This function is called by:
  1965 ;;		_ISR
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           
  1970                           ;psect for function _DisplayADC
  1971  022A                     _DisplayADC:
  1972  022A                     i1l1142:	
  1973                           ;incstack = 0
  1974                           ; Regs used in _DisplayADC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1975                           
  1976                           
  1977                           ;Lab2-programa.c: 146:     PORTE = 0;
  1978  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1979  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1980  022C  0189               	clrf	9	;volatile
  1981  022D                     i1l1144:
  1982                           
  1983                           ;Lab2-programa.c: 147:     if (toggle == 0) {
  1984  022D  0878               	movf	_toggle,w
  1985  022E  1D03               	btfss	3,2
  1986  022F  2A31               	goto	u21_21
  1987  0230  2A32               	goto	u21_20
  1988  0231                     u21_21:
  1989  0231  2A3D               	goto	i1l1150
  1990  0232                     u21_20:
  1991  0232                     i1l1146:
  1992                           
  1993                           ;Lab2-programa.c: 148:         PORTEbits.RE1 = 1;
  1994  0232  1489               	bsf	9,1	;volatile
  1995  0233                     i1l1148:
  1996                           
  1997                           ;Lab2-programa.c: 149:         PORTD = display(ADC_NIBBLE2);
  1998  0233  0824               	movf	_ADC_NIBBLE2,w
  1999  0234  120A  118A  2023  120A  118A  	fcall	_display
  2000  0239  1283               	bcf	3,5	;RP0=0, select bank0
  2001  023A  1303               	bcf	3,6	;RP1=0, select bank0
  2002  023B  0088               	movwf	8	;volatile
  2003                           
  2004                           ;Lab2-programa.c: 150:     } else if (toggle == 1) {
  2005  023C  2A4C               	goto	i1l193
  2006  023D                     i1l1150:
  2007  023D  0378               	decf	_toggle,w
  2008  023E  1D03               	btfss	3,2
  2009  023F  2A41               	goto	u22_21
  2010  0240  2A42               	goto	u22_20
  2011  0241                     u22_21:
  2012  0241  2A4C               	goto	i1l193
  2013  0242                     u22_20:
  2014  0242                     i1l1152:
  2015                           
  2016                           ;Lab2-programa.c: 151:         PORTEbits.RE2 = 1;
  2017  0242  1509               	bsf	9,2	;volatile
  2018  0243                     i1l1154:
  2019                           
  2020                           ;Lab2-programa.c: 152:         PORTD = display(ADC_NIBBLE1);
  2021  0243  0826               	movf	_ADC_NIBBLE1,w
  2022  0244  120A  118A  2023  120A  118A  	fcall	_display
  2023  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2024  024A  1303               	bcf	3,6	;RP1=0, select bank0
  2025  024B  0088               	movwf	8	;volatile
  2026  024C                     i1l193:
  2027  024C  0008               	return
  2028  024D                     __end_of_DisplayADC:
  2029                           
  2030                           	psect	text12
  2031  0023                     __ptext12:	
  2032 ;; *************** function _display *****************
  2033 ;; Defined at:
  2034 ;;		line 5 in file "Display.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  ADC_VALOR       1    wreg     unsigned char 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  ADC_VALOR       1    2[COMMON] unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      unsigned char 
  2041 ;; Registers used:
  2042 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2048 ;;      Params:         0       0       0       0       0
  2049 ;;      Locals:         1       0       0       0       0
  2050 ;;      Temps:          2       0       0       0       0
  2051 ;;      Totals:         3       0       0       0       0
  2052 ;;Total ram usage:        3 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; This function calls:
  2055 ;;		Nothing
  2056 ;; This function is called by:
  2057 ;;		_DisplayADC
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           
  2062                           ;psect for function _display
  2063  0023                     _display:
  2064                           
  2065                           ;incstack = 0
  2066                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
  2067                           ;display@ADC_VALOR stored from wreg
  2068  0023  00F2               	movwf	display@ADC_VALOR
  2069  0024                     i1l1070:
  2070                           
  2071                           ;Display.c: 7:     switch(ADC_VALOR){
  2072  0024  2875               	goto	i1l1108
  2073  0025                     i1l1072:
  2074                           
  2075                           ;Display.c: 9:             Valor_hex = 0b00111111;
  2076  0025  303F               	movlw	63
  2077  0026  00F0               	movwf	??_display
  2078  0027  0870               	movf	??_display,w
  2079  0028  00FC               	movwf	_Valor_hex
  2080                           
  2081                           ;Display.c: 10:             break;
  2082  0029  28AF               	goto	i1l1110
  2083  002A                     i1l1074:
  2084                           
  2085                           ;Display.c: 12:             Valor_hex = 0b000000110;
  2086  002A  3006               	movlw	6
  2087  002B  00F0               	movwf	??_display
  2088  002C  0870               	movf	??_display,w
  2089  002D  00FC               	movwf	_Valor_hex
  2090                           
  2091                           ;Display.c: 13:             break;
  2092  002E  28AF               	goto	i1l1110
  2093  002F                     i1l1076:
  2094                           
  2095                           ;Display.c: 15:             Valor_hex = 0b11011011;
  2096  002F  30DB               	movlw	219
  2097  0030  00F0               	movwf	??_display
  2098  0031  0870               	movf	??_display,w
  2099  0032  00FC               	movwf	_Valor_hex
  2100                           
  2101                           ;Display.c: 16:             break;
  2102  0033  28AF               	goto	i1l1110
  2103  0034                     i1l1078:
  2104                           
  2105                           ;Display.c: 18:             Valor_hex = 0b01001111;
  2106  0034  304F               	movlw	79
  2107  0035  00F0               	movwf	??_display
  2108  0036  0870               	movf	??_display,w
  2109  0037  00FC               	movwf	_Valor_hex
  2110                           
  2111                           ;Display.c: 19:             break;
  2112  0038  28AF               	goto	i1l1110
  2113  0039                     i1l1080:
  2114                           
  2115                           ;Display.c: 21:             Valor_hex = 0b01100110;
  2116  0039  3066               	movlw	102
  2117  003A  00F0               	movwf	??_display
  2118  003B  0870               	movf	??_display,w
  2119  003C  00FC               	movwf	_Valor_hex
  2120                           
  2121                           ;Display.c: 22:             break;
  2122  003D  28AF               	goto	i1l1110
  2123  003E                     i1l1082:
  2124                           
  2125                           ;Display.c: 24:             Valor_hex = 0b01101101;
  2126  003E  306D               	movlw	109
  2127  003F  00F0               	movwf	??_display
  2128  0040  0870               	movf	??_display,w
  2129  0041  00FC               	movwf	_Valor_hex
  2130                           
  2131                           ;Display.c: 25:             break;
  2132  0042  28AF               	goto	i1l1110
  2133  0043                     i1l1084:
  2134                           
  2135                           ;Display.c: 27:             Valor_hex = 0b01111101;
  2136  0043  307D               	movlw	125
  2137  0044  00F0               	movwf	??_display
  2138  0045  0870               	movf	??_display,w
  2139  0046  00FC               	movwf	_Valor_hex
  2140                           
  2141                           ;Display.c: 28:             break;
  2142  0047  28AF               	goto	i1l1110
  2143  0048                     i1l1086:
  2144                           
  2145                           ;Display.c: 30:             Valor_hex = 0b00000111;
  2146  0048  3007               	movlw	7
  2147  0049  00F0               	movwf	??_display
  2148  004A  0870               	movf	??_display,w
  2149  004B  00FC               	movwf	_Valor_hex
  2150                           
  2151                           ;Display.c: 31:             break;
  2152  004C  28AF               	goto	i1l1110
  2153  004D                     i1l1088:
  2154                           
  2155                           ;Display.c: 33:             Valor_hex = 0b01111111;
  2156  004D  307F               	movlw	127
  2157  004E  00F0               	movwf	??_display
  2158  004F  0870               	movf	??_display,w
  2159  0050  00FC               	movwf	_Valor_hex
  2160                           
  2161                           ;Display.c: 34:             break;
  2162  0051  28AF               	goto	i1l1110
  2163  0052                     i1l1090:
  2164                           
  2165                           ;Display.c: 36:             Valor_hex = 0b01101111;
  2166  0052  306F               	movlw	111
  2167  0053  00F0               	movwf	??_display
  2168  0054  0870               	movf	??_display,w
  2169  0055  00FC               	movwf	_Valor_hex
  2170                           
  2171                           ;Display.c: 37:             break;
  2172  0056  28AF               	goto	i1l1110
  2173  0057                     i1l1092:
  2174                           
  2175                           ;Display.c: 39:             Valor_hex = 0b01110111;
  2176  0057  3077               	movlw	119
  2177  0058  00F0               	movwf	??_display
  2178  0059  0870               	movf	??_display,w
  2179  005A  00FC               	movwf	_Valor_hex
  2180                           
  2181                           ;Display.c: 40:             break;
  2182  005B  28AF               	goto	i1l1110
  2183  005C                     i1l1094:
  2184                           
  2185                           ;Display.c: 42:             Valor_hex = 0b01111100;
  2186  005C  307C               	movlw	124
  2187  005D  00F0               	movwf	??_display
  2188  005E  0870               	movf	??_display,w
  2189  005F  00FC               	movwf	_Valor_hex
  2190                           
  2191                           ;Display.c: 43:             break;
  2192  0060  28AF               	goto	i1l1110
  2193  0061                     i1l1096:
  2194                           
  2195                           ;Display.c: 45:             Valor_hex = 0b00111001;
  2196  0061  3039               	movlw	57
  2197  0062  00F0               	movwf	??_display
  2198  0063  0870               	movf	??_display,w
  2199  0064  00FC               	movwf	_Valor_hex
  2200                           
  2201                           ;Display.c: 46:             break;
  2202  0065  28AF               	goto	i1l1110
  2203  0066                     i1l1098:
  2204                           
  2205                           ;Display.c: 48:             Valor_hex = 0b01011110;
  2206  0066  305E               	movlw	94
  2207  0067  00F0               	movwf	??_display
  2208  0068  0870               	movf	??_display,w
  2209  0069  00FC               	movwf	_Valor_hex
  2210                           
  2211                           ;Display.c: 49:             break;
  2212  006A  28AF               	goto	i1l1110
  2213  006B                     i1l1100:
  2214                           
  2215                           ;Display.c: 51:             Valor_hex = 0b01111001;
  2216  006B  3079               	movlw	121
  2217  006C  00F0               	movwf	??_display
  2218  006D  0870               	movf	??_display,w
  2219  006E  00FC               	movwf	_Valor_hex
  2220                           
  2221                           ;Display.c: 52:             break;
  2222  006F  28AF               	goto	i1l1110
  2223  0070                     i1l1102:
  2224                           
  2225                           ;Display.c: 54:             Valor_hex = 0b01110001;
  2226  0070  3071               	movlw	113
  2227  0071  00F0               	movwf	??_display
  2228  0072  0870               	movf	??_display,w
  2229  0073  00FC               	movwf	_Valor_hex
  2230                           
  2231                           ;Display.c: 55:             break;
  2232  0074  28AF               	goto	i1l1110
  2233  0075                     i1l1108:
  2234  0075  0872               	movf	display@ADC_VALOR,w
  2235  0076  00F0               	movwf	??_display
  2236  0077  01F1               	clrf	??_display+1
  2237                           
  2238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2239                           ; Switch size 1, requested type "simple"
  2240                           ; Number of cases is 1, Range of values is 0 to 0
  2241                           ; switch strategies available:
  2242                           ; Name         Instructions Cycles
  2243                           ; simple_byte            4     3 (average)
  2244                           ; direct_byte           11     8 (fixed)
  2245                           ; jumptable            260     6 (fixed)
  2246                           ;	Chosen strategy is simple_byte
  2247  0078  0871               	movf	??_display+1,w
  2248  0079  3A00               	xorlw	0	; case 0
  2249  007A  1903               	skipnz
  2250  007B  287D               	goto	i1l1318
  2251  007C  2825               	goto	i1l1072
  2252  007D                     i1l1318:
  2253                           
  2254                           ; Switch size 1, requested type "simple"
  2255                           ; Number of cases is 16, Range of values is 0 to 15
  2256                           ; switch strategies available:
  2257                           ; Name         Instructions Cycles
  2258                           ; simple_byte           49    25 (average)
  2259                           ; direct_byte           56     8 (fixed)
  2260                           ; jumptable            260     6 (fixed)
  2261                           ;	Chosen strategy is simple_byte
  2262  007D  0870               	movf	??_display,w
  2263  007E  3A00               	xorlw	0	; case 0
  2264  007F  1903               	skipnz
  2265  0080  2825               	goto	i1l1072
  2266  0081  3A01               	xorlw	1	; case 1
  2267  0082  1903               	skipnz
  2268  0083  282A               	goto	i1l1074
  2269  0084  3A03               	xorlw	3	; case 2
  2270  0085  1903               	skipnz
  2271  0086  282F               	goto	i1l1076
  2272  0087  3A01               	xorlw	1	; case 3
  2273  0088  1903               	skipnz
  2274  0089  2834               	goto	i1l1078
  2275  008A  3A07               	xorlw	7	; case 4
  2276  008B  1903               	skipnz
  2277  008C  2839               	goto	i1l1080
  2278  008D  3A01               	xorlw	1	; case 5
  2279  008E  1903               	skipnz
  2280  008F  283E               	goto	i1l1082
  2281  0090  3A03               	xorlw	3	; case 6
  2282  0091  1903               	skipnz
  2283  0092  2843               	goto	i1l1084
  2284  0093  3A01               	xorlw	1	; case 7
  2285  0094  1903               	skipnz
  2286  0095  2848               	goto	i1l1086
  2287  0096  3A0F               	xorlw	15	; case 8
  2288  0097  1903               	skipnz
  2289  0098  284D               	goto	i1l1088
  2290  0099  3A01               	xorlw	1	; case 9
  2291  009A  1903               	skipnz
  2292  009B  2852               	goto	i1l1090
  2293  009C  3A03               	xorlw	3	; case 10
  2294  009D  1903               	skipnz
  2295  009E  2857               	goto	i1l1092
  2296  009F  3A01               	xorlw	1	; case 11
  2297  00A0  1903               	skipnz
  2298  00A1  285C               	goto	i1l1094
  2299  00A2  3A07               	xorlw	7	; case 12
  2300  00A3  1903               	skipnz
  2301  00A4  2861               	goto	i1l1096
  2302  00A5  3A01               	xorlw	1	; case 13
  2303  00A6  1903               	skipnz
  2304  00A7  2866               	goto	i1l1098
  2305  00A8  3A03               	xorlw	3	; case 14
  2306  00A9  1903               	skipnz
  2307  00AA  286B               	goto	i1l1100
  2308  00AB  3A01               	xorlw	1	; case 15
  2309  00AC  1903               	skipnz
  2310  00AD  2870               	goto	i1l1102
  2311  00AE  2825               	goto	i1l1072
  2312  00AF                     i1l1110:
  2313                           
  2314                           ;Display.c: 60:    return Valor_hex;
  2315  00AF  087C               	movf	_Valor_hex,w
  2316  00B0                     i1l48:
  2317  00B0  0008               	return
  2318  00B1                     __end_of_display:
  2319                           
  2320                           	psect	text13
  2321  02AA                     __ptext13:	
  2322 ;; *************** function _ADC *****************
  2323 ;; Defined at:
  2324 ;;		line 9 in file "Config_ADC.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  ADRESL_         1    wreg     unsigned char 
  2327 ;;  ADRESH_         1    0[COMMON] unsigned char 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  ADRESL_         1    0[COMMON] unsigned char 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  2    0[COMMON] int 
  2332 ;; Registers used:
  2333 ;;		wreg
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2339 ;;      Params:         3       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0
  2342 ;;      Totals:         3       0       0       0       0
  2343 ;;Total ram usage:        3 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_ISR
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           
  2353                           ;psect for function _ADC
  2354  02AA                     _ADC:
  2355  02AA                     i1l1130:	
  2356                           ;incstack = 0
  2357                           ; Regs used in _ADC: [wreg]
  2358                           
  2359                           
  2360                           ;Config_ADC.c: 10:     VAL = (ADRESL << 8) | ADRESH;
  2361  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  2362  02AB  1303               	bcf	3,6	;RP1=0, select bank1
  2363  02AC  081E               	movf	30,w	;volatile
  2364  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2365  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2366  02AF  00AF               	movwf	_VAL+1
  2367  02B0  081E               	movf	30,w	;volatile
  2368  02B1  00AE               	movwf	_VAL
  2369                           
  2370                           ;Config_ADC.c: 11:     return VAL;
  2371  02B2  082F               	movf	_VAL+1,w
  2372  02B3  00F1               	movwf	?_ADC+1
  2373  02B4  082E               	movf	_VAL,w
  2374  02B5  00F0               	movwf	?_ADC
  2375  02B6                     i1l15:
  2376  02B6  0008               	return
  2377  02B7                     __end_of_ADC:
  2378  007E                     btemp	set	126	;btemp
  2379  007E                     wtemp0	set	126
  2380                           
  2381                           	psect	config
  2382                           
  2383                           ;Config register CONFIG1 @ 0x2007
  2384                           ;	Oscillator Selection bits
  2385                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2386                           ;	Watchdog Timer Enable bit
  2387                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2388                           ;	Power-up Timer Enable bit
  2389                           ;	PWRTE = OFF, PWRT disabled
  2390                           ;	RE3/MCLR pin function select bit
  2391                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2392                           ;	Code Protection bit
  2393                           ;	CP = OFF, Program memory code protection is disabled
  2394                           ;	Data Code Protection bit
  2395                           ;	CPD = OFF, Data memory code protection is disabled
  2396                           ;	Brown Out Reset Selection bits
  2397                           ;	BOREN = OFF, BOR disabled
  2398                           ;	Internal External Switchover bit
  2399                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2400                           ;	Fail-Safe Clock Monitor Enabled bit
  2401                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2402                           ;	Low Voltage Programming Enable bit
  2403                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2404                           ;	In-Circuit Debugger Mode bit
  2405                           ;	DEBUG = 0x1, unprogrammed default
  2406  2007                     	org	8199
  2407  2007  20D4               	dw	8404
  2408                           
  2409                           ;Config register CONFIG2 @ 0x2008
  2410                           ;	Brown-out Reset Selection bit
  2411                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2412                           ;	Flash Program Memory Self Write Enable bits
  2413                           ;	WRT = OFF, Write protection off
  2414  2008                     	org	8200
  2415  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80      8      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_ADC
    _DisplayADC->_display

Critical Paths under _main in BANK0

    _setup->_initOsc
    _CONVERSION_ADC->_SWAP_ADC

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     110
                     _CONVERSION_ADC
                   _Config_INTERRUPT
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONVERSION_ADC                                       0     0      0      88
                        _NIBBLE1_ADC
                        _NIBBLE2_ADC
                           _SWAP_ADC
 ---------------------------------------------------------------------------------
 (2) _SWAP_ADC                                             8     6      2      44
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _NIBBLE2_ADC                                          5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _NIBBLE1_ADC                                          5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0      98
                                              3 COMMON     5     5      0
                                _ADC
                         _DisplayADC
                           _Revision
                           _TOGGLE_1
 ---------------------------------------------------------------------------------
 (4) _TOGGLE_1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Revision                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _DisplayADC                                           0     0      0      22
                            _display
 ---------------------------------------------------------------------------------
 (5) _display                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _ADC                                                  4     1      3      76
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVERSION_ADC
     _NIBBLE1_ADC
     _NIBBLE2_ADC
     _SWAP_ADC
   _Config_INTERRUPT
   _setup
     _initOsc

 _ISR (ROOT)
   _ADC
   _DisplayADC
     _display
   _Revision
   _TOGGLE_1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      25       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      25      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 19:07:21 2021

                       l21 029A                         l24 028A                         l18 0205  
                       l60 0154                         l61 015A                         l62 0160  
                       l54 0136                         l63 0166                         l55 018E  
                       l64 018F                         l56 013C                         l57 0142  
                       l58 0148                         l59 014E                         fsr 0004  
                      l205 01B7                        l208 0264                        _ADC 02AA  
                      l196 01DE                        u185 01E5                        _ISR 00B1  
                      _VAL 002E                        fsr0 0004                        indf 0000  
                     ?_ADC 0070                       ?_ISR 0070                       l1200 01B8  
                     l1202 01C6                       l1122 016C                       l1060 0296  
                     l1052 01E2                       l1204 01D2                       l1054 0201  
                     l1118 0135                       l1064 027E                       l1058 028E  
                     l1066 0286                       l1170 019B                       l1316 0174  
                     l1180 01AA                       l1172 019F                       l1164 0190  
                     l1260 0268                       l1190 024D                       l1182 01AD  
                     l1174 01A2                       l1166 0196                       l1262 026D  
                     l1192 0259                       l1184 01AE                       l1176 01A6  
                     l1168 019A                       l1264 0272                       l1194 025A  
                     l1186 01B1                       l1178 01A9                       l1258 0265  
                     l1196 025D                       l1188 01B4                       l1198 0260  
                     _IOCB 0096                       i1l15 02B6                       i1l48 00B0  
                     _TMR0 0001                       _main 0265                       btemp 007E  
 __end_of_Config_INTERRUPT 0265                       start 000E                      ??_ADC 0073  
                    ??_ISR 0073                      ?_main 0070                      _ANSEL 0188  
                    i1l202 0229                      i1l164 00BD                      i1l173 0129  
                    i1l165 00C3                      i1l168 0118                      i1l193 024C  
                    i1l187 02A9                      u20_20 0226                      u20_21 0225  
                    u20_25 0222                      u21_20 0232                      u21_21 0231  
                    u22_20 0242                      u30_20 00D7                      u22_21 0241  
                    u30_21 00D6                      u23_20 02A0                      u31_20 00DC  
                    u23_21 029F                      u31_21 00DB                      u24_20 02A7  
                    u32_20 00E8                      u24_21 02A6                      u32_21 00E7  
                    u33_20 0118                      u25_20 00B5                      u33_21 0117  
                    u25_21 00B4                      u34_20 011C                      u26_20 00BB  
                    u34_21 011B                      u26_21 00BA                      u19_20 0213  
                    u27_20 00C1                      u19_21 0212                      u27_21 00C0  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      u19_25 020F                      _PORTE 0009  
                    u35_27 00ED                      u28_20 00C7                      u28_21 00C6  
                    u29_20 00CC                      u29_21 00CB                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                 _DisplayADC 022A           __end_of_TOGGLE_1 02AA  
          __end_of_display 00B1            __end_of_initOsc 0190           __end_of_SWAP_ADC 0206  
                    _setup 0190                      pclath 000A                      status 0003  
                    wtemp0 007E            __initialization 0011               __end_of_main 027B  
                   ??_main 0038         NIBBLE1_ADC@VAL_ADC 0034           __end_of_Revision 022A  
                   _ADCON0 001F                     _ADCON1 009F                     _ADRESH 001E  
                   _ADRESL 009E                initOsc@IRCF 0032                     ?_setup 0070  
                   _ANSELH 0189                     i1l1100 006B                     i1l1102 0070  
                   i1l1110 00AF                     i1l1130 02AA                     i1l1210 00BB  
                   i1l1108 0075                     i1l1140 0226                     i1l1220 00D2  
                   i1l1212 00C1                     i1l1070 0024                     i1l1150 023D  
                   i1l1142 022A                     i1l1134 0206                     i1l1230 00E0  
                   i1l1214 00C7                     i1l1222 00D3                     i1l1206 00B1  
                   i1l1080 0039                     i1l1072 0025                     i1l1152 0242  
                   i1l1144 022D                     i1l1136 0213                     i1l1160 02A2  
                   i1l1240 00F2                     i1l1224 00D7                     i1l1232 00E1  
                   i1l1216 00CC                     i1l1208 00B5                     i1l1090 0052  
                   i1l1082 003E                     i1l1074 002A                     i1l1154 0243  
                   i1l1146 0232                     i1l1138 0217                     i1l1162 02A7  
                   i1l1250 011C                     i1l1242 00F6                     i1l1226 00DC  
                   i1l1218 00D0                     i1l1234 00E2                     i1l1092 0057  
                   i1l1084 0043                     i1l1076 002F                     i1l1148 0233  
                   i1l1156 029B                     i1l1252 011D                     i1l1244 0108  
                   i1l1236 00E8                     i1l1228 00DE                     i1l1318 007D  
                   i1l1094 005C                     i1l1086 0048                     i1l1078 0034  
                   i1l1158 02A0                     i1l1254 011F                     i1l1246 010D  
                   i1l1238 00E9                     i1l1096 0061                     i1l1088 004D  
                   i1l1256 0124                     i1l1248 0112                     i1l1098 0066  
                   _INTCON 000B       __size_of_NIBBLE1_ADC 0010       __size_of_NIBBLE2_ADC 0010  
                   _toggle 0078            SWAP_ADC@VAL_ADC 0037                  ??_display 0070  
                ??_initOsc 0030                ?_DisplayADC 0070                     saved_w 007E  
               ADC@ADRESH_ 0070                 ADC@ADRESL_ 0070    __end_of__initialization 001F  
           __pcstackCOMMON 0070                  ?_TOGGLE_1 0070              __end_of_setup 01B8  
                ?_SWAP_ADC 0030           display@ADC_VALOR 0072                    ??_setup 0033  
               __pbssBANK0 0020    __size_of_CONVERSION_ADC 0027          ?_Config_INTERRUPT 0070  
               __pmaintext 0265                  ?_Revision 0070        __size_of_DisplayADC 0023  
       ??_Config_INTERRUPT 0030                 ??_TOGGLE_1 0070                 __pintentry 0004  
               ??_SWAP_ADC 0032                  _ADC_VALOR 0022                 ??_Revision 0070  
                  __ptext1 0190                    __ptext2 0132                    __ptext3 024D  
                  __ptext4 01B8                    __ptext5 01DF                    __ptext6 027B  
                  __ptext7 028B                    __ptext8 00B1                    __ptext9 029B  
                  _display 0023               __size_of_ADC 000D               __size_of_ISR 0081  
                  _initOsc 0132                    clrloop0 02B8       end_of_initialization 001F  
      NIBBLE2_ADC@VAL_SWAP 0034                  _PORTBbits 0006                  _PORTEbits 0009  
             ??_DisplayADC 0073             _CONVERSION_ADC 01B8              ??_NIBBLE1_ADC 0032  
            ??_NIBBLE2_ADC 0032                _ADC_NIBBLE1 0026                _ADC_NIBBLE2 0024  
       __end_of_DisplayADC 024D          __size_of_TOGGLE_1 000F          __size_of_SWAP_ADC 0027  
      start_initialization 0011                __end_of_ADC 02B7                __end_of_ISR 0132  
   __end_of_CONVERSION_ADC 01DF                  _Valor_hex 007C        __end_of_NIBBLE1_ADC 029B  
      __end_of_NIBBLE2_ADC 028B          __size_of_Revision 0024  __size_of_Config_INTERRUPT 0018  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 0030  
          ?_CONVERSION_ADC 0070                _debouncing1 007A                _debouncing2 0079  
                 ?_display 0070                   ?_initOsc 0070                   _ADC_SWAP 0020  
           __size_of_setup 0028          interrupt_function 0004                  clear_ram0 02B7  
              _NIBBLE1_ADC 028B                   _PIE1bits 008C                _NIBBLE2_ADC 027B  
                 _PIR1bits 000C                   _TOGGLE_1 029B                   _VAL_SWAP 002C  
                 _SWAP_ADC 01DF                 _ADCON0bits 001F                   _Revision 0206  
         _Config_INTERRUPT 024D           __size_of_display 008E           __size_of_initOsc 005E  
                 __ptext10 0206                   __ptext11 022A                   __ptext12 0023  
                 __ptext13 02AA                   _contador 007B              __size_of_main 0016  
               _INTCONbits 000B           ??_CONVERSION_ADC 0038                _VAL_NIBBLE1 002A  
              _VAL_NIBBLE2 0028                   intlevel1 0000                 _OSCCONbits 008F  
               _OPTION_REG 0081               ?_NIBBLE1_ADC 0030               ?_NIBBLE2_ADC 0030  
