

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 08:32:54 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0009                     _PORTEbits	set	9
   456  000B                     _INTCON	set	11
   457  0009                     _PORTE	set	9
   458  0008                     _PORTD	set	8
   459  0007                     _PORTC	set	7
   460  0005                     _PORTA	set	5
   461  0006                     _PORTB	set	6
   462  001E                     _ADRESH	set	30
   463  001F                     _ADCON0bits	set	31
   464  000C                     _PIR1bits	set	12
   465  009F                     _ADCON1	set	159
   466  008F                     _OSCCONbits	set	143
   467  008C                     _PIE1bits	set	140
   468  0089                     _TRISE	set	137
   469  0088                     _TRISD	set	136
   470  0087                     _TRISC	set	135
   471  0086                     _TRISB	set	134
   472  0085                     _TRISA	set	133
   473  009E                     _ADRESL	set	158
   474  0189                     _ANSELH	set	393
   475  0188                     _ANSEL	set	392
   476                           
   477                           	psect	strings
   478  040C                     __pstrings:
   479  040C                     stringtab:
   480  040C                     __stringtab:
   481  040C                     stringcode:	
   482                           ;	String table - string pointers are 1 byte each
   483                           
   484  040C                     stringdir:
   485  040C  3004               	movlw	high stringdir
   486  040D  008A               	movwf	10
   487  040E  0804               	movf	4,w
   488  040F  0A84               	incf	4,f
   489  0410  0782               	addwf	2,f
   490  0411                     __stringbase:
   491  0411  3400               	retlw	0
   492  0412                     __end_of__stringtab:
   493  0412                     STR_1:
   494  0412  3453               	retlw	83	;'S'
   495  0413  3431               	retlw	49	;'1'
   496  0414  343A               	retlw	58	;':'
   497  0415  3400               	retlw	0
   498  0416                     STR_2:
   499  0416  3453               	retlw	83	;'S'
   500  0417  3432               	retlw	50	;'2'
   501  0418  343A               	retlw	58	;':'
   502  0419  3400               	retlw	0
   503  041A                     STR_3:
   504  041A  3453               	retlw	83	;'S'
   505  041B  3433               	retlw	51	;'3'
   506  041C  343A               	retlw	58	;':'
   507  041D  3400               	retlw	0
   508                           
   509                           	psect	cinit
   510  0011                     start_initialization:	
   511                           ; #config settings
   512                           
   513  0011                     __initialization:
   514                           
   515                           ; Clear objects allocated to COMMON
   516  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   517  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   518  0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   519  0014  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   520  0015  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   521  0016  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   522                           
   523                           ; Clear objects allocated to BANK0
   524  0017  1383               	bcf	3,7	;select IRP bank0
   525  0018  3020               	movlw	low __pbssBANK0
   526  0019  0084               	movwf	4
   527  001A  3031               	movlw	low (__pbssBANK0+17)
   528  001B  120A  118A  244B  120A  118A  	fcall	clear_ram0
   529  0020                     end_of_initialization:	
   530                           ;End of C runtime variable initialization code
   531                           
   532  0020                     __end_of__initialization:
   533  0020  0183               	clrf	3
   534  0021  120A  118A  2824   	ljmp	_main	;jump to C main() function
   535                           
   536                           	psect	bssCOMMON
   537  0078                     __pbssCOMMON:
   538  0078                     _VAL:
   539  0078                     	ds	2
   540  007A                     _a:
   541  007A                     	ds	2
   542  007C                     _ADC_VALOR_2:
   543  007C                     	ds	2
   544                           
   545                           	psect	bssBANK0
   546  0020                     __pbssBANK0:
   547  0020                     _S2_val:
   548  0020                     	ds	4
   549  0024                     _S1_val:
   550  0024                     	ds	4
   551  0028                     _VAL_NIBBLE2:
   552  0028                     	ds	2
   553  002A                     _VAL_NIBBLE1:
   554  002A                     	ds	2
   555  002C                     _VAL_SWAP:
   556  002C                     	ds	2
   557  002E                     _ADC_VALOR_1:
   558  002E                     	ds	2
   559  0030                     _S3_cont:
   560  0030                     	ds	1
   561                           
   562                           	psect	clrtext
   563  044B                     clear_ram0:	
   564                           ;	Called with FSR containing the base address, and
   565                           ;	W with the last address+1
   566                           
   567  044B  0064               	clrwdt	;clear the watchdog before getting into this loop
   568  044C                     clrloop0:
   569  044C  0180               	clrf	0	;clear RAM location pointed to by FSR
   570  044D  0A84               	incf	4,f	;increment pointer
   571  044E  0604               	xorwf	4,w	;XOR with final address
   572  044F  1903               	btfsc	3,2	;have we reached the end yet?
   573  0450  3400               	retlw	0	;all done for this memory range, return
   574  0451  0604               	xorwf	4,w	;XOR again to restore value
   575  0452  2C4C               	goto	clrloop0	;do the next byte
   576                           
   577                           	psect	cstackCOMMON
   578  0070                     __pcstackCOMMON:
   579  0070                     ?_ADC_Config:
   580  0070                     ??_ADC_Config:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_setup:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_Config_INTERRUPT:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_Lcd_Init:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_Lcd_Clear:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_Lcd_Write_String:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_Lcd_Write_Char:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_initOsc:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_Lcd_Port:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_Lcd_Cmd:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_ISR:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_main:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_ADC:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     bin_to_float@ADC_VAL:	
   620                           ; 2 bytes @ 0x0
   621                           
   622  0070                     ADC@ADRESL_:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ADC@ADRESH_:	
   626                           ; 1 bytes @ 0x0
   627                           
   628                           
   629                           ; 1 bytes @ 0x0
   630  0070                     	ds	2
   631  0072                     ADC_Config@AN_num:
   632                           
   633                           ; 1 bytes @ 0x2
   634  0072                     	ds	1
   635  0073                     ??_ADC:
   636  0073                     ??_ISR:	
   637                           ; 1 bytes @ 0x3
   638                           
   639                           
   640                           ; 1 bytes @ 0x3
   641  0073                     	ds	5
   642                           
   643                           	psect	cstackBANK0
   644  0031                     __pcstackBANK0:
   645  0031                     ??_Config_INTERRUPT:
   646  0031                     ??_initOsc:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0031                     ??_Lcd_Port:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0031                     ?_bin_to_float:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0031                     ?___fltol:	
   656                           ; 4 bytes @ 0x0
   657                           
   658  0031                     Lcd_Port@a:	
   659                           ; 4 bytes @ 0x0
   660                           
   661  0031                     ___fltol@f1:	
   662                           ; 1 bytes @ 0x0
   663                           
   664                           
   665                           ; 4 bytes @ 0x0
   666  0031                     	ds	1
   667  0032                     ??_Lcd_Write_Char:
   668  0032                     ??_Lcd_Cmd:	
   669                           ; 1 bytes @ 0x1
   670                           
   671  0032                     Lcd_Write_Char@a:	
   672                           ; 1 bytes @ 0x1
   673                           
   674                           
   675                           ; 1 bytes @ 0x1
   676  0032                     	ds	1
   677  0033                     ??_Lcd_Write_String:
   678  0033                     initOsc@IRCF:	
   679                           ; 1 bytes @ 0x2
   680                           
   681  0033                     Lcd_Write_String@i:	
   682                           ; 1 bytes @ 0x2
   683                           
   684                           
   685                           ; 2 bytes @ 0x2
   686  0033                     	ds	1
   687  0034                     ??_setup:
   688  0034                     Lcd_Cmd@a:	
   689                           ; 1 bytes @ 0x3
   690                           
   691                           
   692                           ; 1 bytes @ 0x3
   693  0034                     	ds	1
   694  0035                     ??_Lcd_Init:
   695  0035                     ??_Lcd_Clear:	
   696                           ; 1 bytes @ 0x4
   697                           
   698  0035                     ?_Lcd_Set_Cursor:	
   699                           ; 1 bytes @ 0x4
   700                           
   701  0035                     ??___fltol:	
   702                           ; 1 bytes @ 0x4
   703                           
   704  0035                     Lcd_Set_Cursor@b:	
   705                           ; 1 bytes @ 0x4
   706                           
   707  0035                     Lcd_Write_String@a:	
   708                           ; 1 bytes @ 0x4
   709                           
   710                           
   711                           ; 1 bytes @ 0x4
   712  0035                     	ds	1
   713  0036                     ??_bin_to_float:
   714  0036                     ??_Lcd_Set_Cursor:	
   715                           ; 1 bytes @ 0x5
   716                           
   717                           
   718                           ; 1 bytes @ 0x5
   719  0036                     	ds	2
   720  0038                     Lcd_Set_Cursor@a:
   721                           
   722                           ; 1 bytes @ 0x7
   723  0038                     	ds	1
   724  0039                     Lcd_Set_Cursor@z:
   725                           
   726                           ; 1 bytes @ 0x8
   727  0039                     	ds	1
   728  003A                     Lcd_Set_Cursor@y:
   729  003A                     ___fltol@sign1:	
   730                           ; 1 bytes @ 0x9
   731                           
   732                           
   733                           ; 1 bytes @ 0x9
   734  003A                     	ds	1
   735  003B                     Lcd_Set_Cursor@temp:
   736  003B                     ___fltol@exp1:	
   737                           ; 1 bytes @ 0xA
   738                           
   739                           
   740                           ; 1 bytes @ 0xA
   741  003B                     	ds	1
   742  003C                     ??_main:
   743                           
   744                           ; 1 bytes @ 0xB
   745  003C                     	ds	3
   746                           
   747                           	psect	maintext
   748  0024                     __pmaintext:	
   749 ;;
   750 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   751 ;;
   752 ;; *************** function _main *****************
   753 ;; Defined at:
   754 ;;		line 106 in file "pseudocodigo_lab3.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   763 ;; Tracked objects:
   764 ;;		On entry : B00/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   768 ;;      Params:         0       0       0       0       0
   769 ;;      Locals:         0       0       0       0       0
   770 ;;      Temps:          0       3       0       0       0
   771 ;;      Totals:         0       3       0       0       0
   772 ;;Total ram usage:        3 bytes
   773 ;; Hardware stack levels required when called:    5
   774 ;; This function calls:
   775 ;;		_Config_INTERRUPT
   776 ;;		_Lcd_Clear
   777 ;;		_Lcd_Init
   778 ;;		_Lcd_Set_Cursor
   779 ;;		_Lcd_Write_Char
   780 ;;		_Lcd_Write_String
   781 ;;		___fltol
   782 ;;		_bin_to_float
   783 ;;		_setup
   784 ;; This function is called by:
   785 ;;		Startup code after reset
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           
   790                           ;psect for function _main
   791  0024                     _main:
   792  0024                     l1278:	
   793                           ;incstack = 0
   794                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   795                           
   796                           
   797                           ;pseudocodigo_lab3.c: 107:     setup();
   798  0024  120A  118A  23CD  120A  118A  	fcall	_setup
   799  0029                     l1280:
   800                           
   801                           ;pseudocodigo_lab3.c: 108:     Config_INTERRUPT();
   802  0029  120A  118A  2442  120A  118A  	fcall	_Config_INTERRUPT
   803  002E                     l1282:
   804                           
   805                           ;pseudocodigo_lab3.c: 109:     Lcd_Init();
   806  002E  120A  118A  22F3  120A  118A  	fcall	_Lcd_Init
   807  0033                     l1284:
   808                           
   809                           ;pseudocodigo_lab3.c: 115:         S1_val = bin_to_float(ADC_VALOR_1);
   810  0033  1283               	bcf	3,5	;RP0=0, select bank0
   811  0034  1303               	bcf	3,6	;RP1=0, select bank0
   812  0035  082E               	movf	_ADC_VALOR_1,w
   813  0036  120A  118A  2459  120A  118A  	fcall	_bin_to_float
   814  003B  1283               	bcf	3,5	;RP0=0, select bank0
   815  003C  1303               	bcf	3,6	;RP1=0, select bank0
   816  003D  0834               	movf	?_bin_to_float+3,w
   817  003E  00A7               	movwf	_S1_val+3
   818  003F  0833               	movf	?_bin_to_float+2,w
   819  0040  00A6               	movwf	_S1_val+2
   820  0041  0832               	movf	?_bin_to_float+1,w
   821  0042  00A5               	movwf	_S1_val+1
   822  0043  0831               	movf	?_bin_to_float,w
   823  0044  00A4               	movwf	_S1_val
   824  0045                     l1286:
   825                           
   826                           ;pseudocodigo_lab3.c: 116:         S2_val = bin_to_float(ADC_VALOR_2);
   827  0045  087C               	movf	_ADC_VALOR_2,w
   828  0046  120A  118A  2459  120A  118A  	fcall	_bin_to_float
   829  004B  1283               	bcf	3,5	;RP0=0, select bank0
   830  004C  1303               	bcf	3,6	;RP1=0, select bank0
   831  004D  0834               	movf	?_bin_to_float+3,w
   832  004E  00A3               	movwf	_S2_val+3
   833  004F  0833               	movf	?_bin_to_float+2,w
   834  0050  00A2               	movwf	_S2_val+2
   835  0051  0832               	movf	?_bin_to_float+1,w
   836  0052  00A1               	movwf	_S2_val+1
   837  0053  0831               	movf	?_bin_to_float,w
   838  0054  00A0               	movwf	_S2_val
   839  0055                     l1288:
   840                           
   841                           ;pseudocodigo_lab3.c: 118:         Lcd_Clear();
   842  0055  120A  118A  241E  120A  118A  	fcall	_Lcd_Clear
   843  005A                     l1290:
   844                           
   845                           ;pseudocodigo_lab3.c: 119:         Lcd_Set_Cursor(1,2);
   846  005A  3002               	movlw	2
   847  005B  1283               	bcf	3,5	;RP0=0, select bank0
   848  005C  1303               	bcf	3,6	;RP1=0, select bank0
   849  005D  00BC               	movwf	??_main
   850  005E  083C               	movf	??_main,w
   851  005F  00B5               	movwf	Lcd_Set_Cursor@b
   852  0060  3001               	movlw	1
   853  0061  120A  118A  234C  120A  118A  	fcall	_Lcd_Set_Cursor
   854                           
   855                           ;pseudocodigo_lab3.c: 120:         Lcd_Write_String("S1:");
   856  0066  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   857  0067  120A  118A  23A4  120A  118A  	fcall	_Lcd_Write_String
   858  006C                     l1292:
   859                           
   860                           ;pseudocodigo_lab3.c: 121:         Lcd_Set_Cursor(1,8);
   861  006C  3008               	movlw	8
   862  006D  1283               	bcf	3,5	;RP0=0, select bank0
   863  006E  1303               	bcf	3,6	;RP1=0, select bank0
   864  006F  00BC               	movwf	??_main
   865  0070  083C               	movf	??_main,w
   866  0071  00B5               	movwf	Lcd_Set_Cursor@b
   867  0072  3001               	movlw	1
   868  0073  120A  118A  234C  120A  118A  	fcall	_Lcd_Set_Cursor
   869  0078                     l1294:
   870                           
   871                           ;pseudocodigo_lab3.c: 122:         Lcd_Write_String("S2:");
   872  0078  3005               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   873  0079  120A  118A  23A4  120A  118A  	fcall	_Lcd_Write_String
   874                           
   875                           ;pseudocodigo_lab3.c: 123:         Lcd_Set_Cursor(1,13);
   876  007E  300D               	movlw	13
   877  007F  1283               	bcf	3,5	;RP0=0, select bank0
   878  0080  1303               	bcf	3,6	;RP1=0, select bank0
   879  0081  00BC               	movwf	??_main
   880  0082  083C               	movf	??_main,w
   881  0083  00B5               	movwf	Lcd_Set_Cursor@b
   882  0084  3001               	movlw	1
   883  0085  120A  118A  234C  120A  118A  	fcall	_Lcd_Set_Cursor
   884  008A                     l1296:
   885                           
   886                           ;pseudocodigo_lab3.c: 124:         Lcd_Write_String("S3:");
   887  008A  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   888  008B  120A  118A  23A4  120A  118A  	fcall	_Lcd_Write_String
   889  0090                     l1298:
   890                           
   891                           ;pseudocodigo_lab3.c: 126:         Lcd_Set_Cursor(2,1);
   892  0090  1283               	bcf	3,5	;RP0=0, select bank0
   893  0091  1303               	bcf	3,6	;RP1=0, select bank0
   894  0092  01B5               	clrf	Lcd_Set_Cursor@b
   895  0093  0AB5               	incf	Lcd_Set_Cursor@b,f
   896  0094  3002               	movlw	2
   897  0095  120A  118A  234C  120A  118A  	fcall	_Lcd_Set_Cursor
   898  009A                     l1300:
   899                           
   900                           ;pseudocodigo_lab3.c: 127:         Lcd_Write_Char(S1_val);
   901  009A  1283               	bcf	3,5	;RP0=0, select bank0
   902  009B  1303               	bcf	3,6	;RP1=0, select bank0
   903  009C  0827               	movf	_S1_val+3,w
   904  009D  00B4               	movwf	___fltol@f1+3
   905  009E  0826               	movf	_S1_val+2,w
   906  009F  00B3               	movwf	___fltol@f1+2
   907  00A0  0825               	movf	_S1_val+1,w
   908  00A1  00B2               	movwf	___fltol@f1+1
   909  00A2  0824               	movf	_S1_val,w
   910  00A3  00B1               	movwf	___fltol@f1
   911  00A4  120A  118A  21B5  120A  118A  	fcall	___fltol
   912  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   913  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   914  00AB  0831               	movf	?___fltol,w
   915  00AC  120A  118A  2438  120A  118A  	fcall	_Lcd_Write_Char
   916  00B1                     l1302:
   917                           
   918                           ;pseudocodigo_lab3.c: 128:         Lcd_Set_Cursor(2,7);
   919  00B1  3007               	movlw	7
   920  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   921  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   922  00B4  00BC               	movwf	??_main
   923  00B5  083C               	movf	??_main,w
   924  00B6  00B5               	movwf	Lcd_Set_Cursor@b
   925  00B7  3002               	movlw	2
   926  00B8  120A  118A  234C  120A  118A  	fcall	_Lcd_Set_Cursor
   927  00BD                     l1304:
   928                           
   929                           ;pseudocodigo_lab3.c: 129:         Lcd_Write_Char(S2_val);
   930  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   931  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   932  00BF  0823               	movf	_S2_val+3,w
   933  00C0  00B4               	movwf	___fltol@f1+3
   934  00C1  0822               	movf	_S2_val+2,w
   935  00C2  00B3               	movwf	___fltol@f1+2
   936  00C3  0821               	movf	_S2_val+1,w
   937  00C4  00B2               	movwf	___fltol@f1+1
   938  00C5  0820               	movf	_S2_val,w
   939  00C6  00B1               	movwf	___fltol@f1
   940  00C7  120A  118A  21B5  120A  118A  	fcall	___fltol
   941  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   942  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   943  00CE  0831               	movf	?___fltol,w
   944  00CF  120A  118A  2438  120A  118A  	fcall	_Lcd_Write_Char
   945  00D4                     l1306:
   946                           
   947                           ;pseudocodigo_lab3.c: 130:         Lcd_Set_Cursor(2,13);
   948  00D4  300D               	movlw	13
   949  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   950  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   951  00D7  00BC               	movwf	??_main
   952  00D8  083C               	movf	??_main,w
   953  00D9  00B5               	movwf	Lcd_Set_Cursor@b
   954  00DA  3002               	movlw	2
   955  00DB  120A  118A  234C  120A  118A  	fcall	_Lcd_Set_Cursor
   956  00E0                     l1308:
   957                           
   958                           ;pseudocodigo_lab3.c: 131:         Lcd_Write_Char(S3_cont);
   959  00E0  3000               	movlw	0
   960  00E1  120A  118A  2438  120A  118A  	fcall	_Lcd_Write_Char
   961  00E6                     l1310:
   962                           
   963                           ;pseudocodigo_lab3.c: 132:         _delay((unsigned long)((2000)*(8000000/4000.0)));
   964  00E6  3015               	movlw	21
   965  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   966  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   967  00E9  00BE               	movwf	??_main+2
   968  00EA  304B               	movlw	75
   969  00EB  00BD               	movwf	??_main+1
   970  00EC  30BD               	movlw	189
   971  00ED  00BC               	movwf	??_main
   972  00EE                     u397:
   973  00EE  0BBC               	decfsz	??_main,f
   974  00EF  28EE               	goto	u397
   975  00F0  0BBD               	decfsz	??_main+1,f
   976  00F1  28EE               	goto	u397
   977  00F2  0BBE               	decfsz	??_main+2,f
   978  00F3  28EE               	goto	u397
   979  00F4  28F5               	nop2
   980  00F5  2833               	goto	l1284
   981  00F6  120A  118A  280E   	ljmp	start
   982  00F9                     __end_of_main:
   983                           
   984                           	psect	text1
   985  03CD                     __ptext1:	
   986 ;; *************** function _setup *****************
   987 ;; Defined at:
   988 ;;		line 150 in file "pseudocodigo_lab3.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;		None
   991 ;; Auto vars:     Size  Location     Type
   992 ;;		None
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1002 ;;      Params:         0       0       0       0       0
  1003 ;;      Locals:         0       0       0       0       0
  1004 ;;      Temps:          0       0       0       0       0
  1005 ;;      Totals:         0       0       0       0       0
  1006 ;;Total ram usage:        0 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; Hardware stack levels required when called:    3
  1009 ;; This function calls:
  1010 ;;		_initOsc
  1011 ;; This function is called by:
  1012 ;;		_main
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           
  1017                           ;psect for function _setup
  1018  03CD                     _setup:
  1019  03CD                     l1132:	
  1020                           ;incstack = 0
  1021                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1022                           
  1023                           
  1024                           ;pseudocodigo_lab3.c: 151:     initOsc(0b00000111);
  1025  03CD  3007               	movlw	7
  1026  03CE  120A  118A  2295  120A  118A  	fcall	_initOsc
  1027  03D3                     l1134:
  1028                           
  1029                           ;pseudocodigo_lab3.c: 152:     ANSEL = 0b00000011;
  1030  03D3  3003               	movlw	3
  1031  03D4  1683               	bsf	3,5	;RP0=1, select bank3
  1032  03D5  1703               	bsf	3,6	;RP1=1, select bank3
  1033  03D6  0088               	movwf	8	;volatile
  1034  03D7                     l1136:
  1035                           
  1036                           ;pseudocodigo_lab3.c: 153:     ANSELH = 0;
  1037  03D7  0189               	clrf	9	;volatile
  1038  03D8                     l1138:
  1039                           
  1040                           ;pseudocodigo_lab3.c: 154:     TRISA = 0b00000011;
  1041  03D8  3003               	movlw	3
  1042  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  1043  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  1044  03DB  0085               	movwf	5	;volatile
  1045  03DC                     l1140:
  1046                           
  1047                           ;pseudocodigo_lab3.c: 155:     PORTA = 0;
  1048  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1049  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1050  03DE  0185               	clrf	5	;volatile
  1051  03DF                     l1142:
  1052                           
  1053                           ;pseudocodigo_lab3.c: 156:     PORTB = 0;
  1054  03DF  0186               	clrf	6	;volatile
  1055  03E0                     l1144:
  1056                           
  1057                           ;pseudocodigo_lab3.c: 157:     PORTC = 0;
  1058  03E0  0187               	clrf	7	;volatile
  1059  03E1                     l1146:
  1060                           
  1061                           ;pseudocodigo_lab3.c: 158:     TRISB = 0;
  1062  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  1063  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  1064  03E3  0186               	clrf	6	;volatile
  1065  03E4                     l1148:
  1066                           
  1067                           ;pseudocodigo_lab3.c: 159:     TRISC = 0;
  1068  03E4  0187               	clrf	7	;volatile
  1069  03E5                     l1150:
  1070                           
  1071                           ;pseudocodigo_lab3.c: 160:     TRISD = 0;
  1072  03E5  0188               	clrf	8	;volatile
  1073  03E6                     l1152:
  1074                           
  1075                           ;pseudocodigo_lab3.c: 161:     PORTD = 0;
  1076  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1077  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1078  03E8  0188               	clrf	8	;volatile
  1079  03E9                     l1154:
  1080                           
  1081                           ;pseudocodigo_lab3.c: 162:     TRISE = 0;
  1082  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  1083  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  1084  03EB  0189               	clrf	9	;volatile
  1085  03EC                     l1156:
  1086                           
  1087                           ;pseudocodigo_lab3.c: 163:     PORTE = 0;
  1088  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  1089  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  1090  03EE  0189               	clrf	9	;volatile
  1091  03EF                     l98:
  1092  03EF  0008               	return
  1093  03F0                     __end_of_setup:
  1094                           
  1095                           	psect	text2
  1096  0295                     __ptext2:	
  1097 ;; *************** function _initOsc *****************
  1098 ;; Defined at:
  1099 ;;		line 3 in file "Oscilador.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;  IRCF            1    wreg     unsigned char 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  IRCF            1    2[BANK0 ] unsigned char 
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1113 ;;      Params:         0       0       0       0       0
  1114 ;;      Locals:         0       1       0       0       0
  1115 ;;      Temps:          0       2       0       0       0
  1116 ;;      Totals:         0       3       0       0       0
  1117 ;;Total ram usage:        3 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    2
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_setup
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           
  1128                           ;psect for function _initOsc
  1129  0295                     _initOsc:
  1130                           
  1131                           ;incstack = 0
  1132                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1133                           ;initOsc@IRCF stored from wreg
  1134  0295  1283               	bcf	3,5	;RP0=0, select bank0
  1135  0296  1303               	bcf	3,6	;RP1=0, select bank0
  1136  0297  00B3               	movwf	initOsc@IRCF
  1137  0298                     l1088:
  1138                           
  1139                           ;Oscilador.c: 5:     switch(IRCF){
  1140  0298  2ACF               	goto	l1092
  1141  0299                     l107:	
  1142                           ;Oscilador.c: 6:         case 0:
  1143                           
  1144                           
  1145                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  1146  0299  1683               	bsf	3,5	;RP0=1, select bank1
  1147  029A  1303               	bcf	3,6	;RP1=0, select bank1
  1148  029B  130F               	bcf	15,6	;volatile
  1149                           
  1150                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  1151  029C  128F               	bcf	15,5	;volatile
  1152                           
  1153                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  1154  029D  120F               	bcf	15,4	;volatile
  1155                           
  1156                           ;Oscilador.c: 10:             break;
  1157  029E  2AF1               	goto	l108
  1158  029F                     l109:	
  1159                           ;Oscilador.c: 11:          case 1:
  1160                           
  1161                           
  1162                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  1163  029F  1683               	bsf	3,5	;RP0=1, select bank1
  1164  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  1165  02A1  130F               	bcf	15,6	;volatile
  1166                           
  1167                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  1168  02A2  128F               	bcf	15,5	;volatile
  1169                           
  1170                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  1171  02A3  160F               	bsf	15,4	;volatile
  1172                           
  1173                           ;Oscilador.c: 15:             break;
  1174  02A4  2AF1               	goto	l108
  1175  02A5                     l110:	
  1176                           ;Oscilador.c: 16:         case 2:
  1177                           
  1178                           
  1179                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  1180  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  1181  02A6  1303               	bcf	3,6	;RP1=0, select bank1
  1182  02A7  130F               	bcf	15,6	;volatile
  1183                           
  1184                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  1185  02A8  168F               	bsf	15,5	;volatile
  1186                           
  1187                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  1188  02A9  120F               	bcf	15,4	;volatile
  1189                           
  1190                           ;Oscilador.c: 20:             break;
  1191  02AA  2AF1               	goto	l108
  1192  02AB                     l111:	
  1193                           ;Oscilador.c: 21:         case 3:
  1194                           
  1195                           
  1196                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  1197  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  1198  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  1199  02AD  130F               	bcf	15,6	;volatile
  1200                           
  1201                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  1202  02AE  168F               	bsf	15,5	;volatile
  1203                           
  1204                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  1205  02AF  160F               	bsf	15,4	;volatile
  1206                           
  1207                           ;Oscilador.c: 25:             break;
  1208  02B0  2AF1               	goto	l108
  1209  02B1                     l112:	
  1210                           ;Oscilador.c: 26:         case 4:
  1211                           
  1212                           
  1213                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  1214  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  1215  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  1216  02B3  170F               	bsf	15,6	;volatile
  1217                           
  1218                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  1219  02B4  128F               	bcf	15,5	;volatile
  1220                           
  1221                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  1222  02B5  120F               	bcf	15,4	;volatile
  1223                           
  1224                           ;Oscilador.c: 30:             break;
  1225  02B6  2AF1               	goto	l108
  1226  02B7                     l113:	
  1227                           ;Oscilador.c: 31:         case 5:
  1228                           
  1229                           
  1230                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1231  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  1232  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  1233  02B9  170F               	bsf	15,6	;volatile
  1234                           
  1235                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1236  02BA  128F               	bcf	15,5	;volatile
  1237                           
  1238                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1239  02BB  160F               	bsf	15,4	;volatile
  1240                           
  1241                           ;Oscilador.c: 35:             break;
  1242  02BC  2AF1               	goto	l108
  1243  02BD                     l114:	
  1244                           ;Oscilador.c: 36:         case 6:
  1245                           
  1246                           
  1247                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1248  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  1249  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  1250  02BF  170F               	bsf	15,6	;volatile
  1251                           
  1252                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1253  02C0  168F               	bsf	15,5	;volatile
  1254                           
  1255                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1256  02C1  120F               	bcf	15,4	;volatile
  1257                           
  1258                           ;Oscilador.c: 40:             break;
  1259  02C2  2AF1               	goto	l108
  1260  02C3                     l115:	
  1261                           ;Oscilador.c: 41:         case 7:
  1262                           
  1263                           
  1264                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1265  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  1266  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  1267  02C5  170F               	bsf	15,6	;volatile
  1268                           
  1269                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1270  02C6  168F               	bsf	15,5	;volatile
  1271                           
  1272                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1273  02C7  160F               	bsf	15,4	;volatile
  1274                           
  1275                           ;Oscilador.c: 45:             break;
  1276  02C8  2AF1               	goto	l108
  1277  02C9                     l116:	
  1278                           ;Oscilador.c: 46:         default:
  1279                           
  1280                           
  1281                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1282  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  1283  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  1284  02CB  170F               	bsf	15,6	;volatile
  1285                           
  1286                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1287  02CC  168F               	bsf	15,5	;volatile
  1288                           
  1289                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1290  02CD  120F               	bcf	15,4	;volatile
  1291                           
  1292                           ;Oscilador.c: 50:             break;
  1293  02CE  2AF1               	goto	l108
  1294  02CF                     l1092:
  1295  02CF  0833               	movf	initOsc@IRCF,w
  1296  02D0  00B1               	movwf	??_initOsc
  1297  02D1  01B2               	clrf	??_initOsc+1
  1298                           
  1299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1300                           ; Switch size 1, requested type "simple"
  1301                           ; Number of cases is 1, Range of values is 0 to 0
  1302                           ; switch strategies available:
  1303                           ; Name         Instructions Cycles
  1304                           ; simple_byte            4     3 (average)
  1305                           ; direct_byte           11     8 (fixed)
  1306                           ; jumptable            260     6 (fixed)
  1307                           ;	Chosen strategy is simple_byte
  1308  02D2  0832               	movf	??_initOsc+1,w
  1309  02D3  3A00               	xorlw	0	; case 0
  1310  02D4  1903               	skipnz
  1311  02D5  2AD7               	goto	l1378
  1312  02D6  2AC9               	goto	l116
  1313  02D7                     l1378:
  1314                           
  1315                           ; Switch size 1, requested type "simple"
  1316                           ; Number of cases is 8, Range of values is 0 to 7
  1317                           ; switch strategies available:
  1318                           ; Name         Instructions Cycles
  1319                           ; simple_byte           25    13 (average)
  1320                           ; direct_byte           32     8 (fixed)
  1321                           ; jumptable            260     6 (fixed)
  1322                           ;	Chosen strategy is simple_byte
  1323  02D7  0831               	movf	??_initOsc,w
  1324  02D8  3A00               	xorlw	0	; case 0
  1325  02D9  1903               	skipnz
  1326  02DA  2A99               	goto	l107
  1327  02DB  3A01               	xorlw	1	; case 1
  1328  02DC  1903               	skipnz
  1329  02DD  2A9F               	goto	l109
  1330  02DE  3A03               	xorlw	3	; case 2
  1331  02DF  1903               	skipnz
  1332  02E0  2AA5               	goto	l110
  1333  02E1  3A01               	xorlw	1	; case 3
  1334  02E2  1903               	skipnz
  1335  02E3  2AAB               	goto	l111
  1336  02E4  3A07               	xorlw	7	; case 4
  1337  02E5  1903               	skipnz
  1338  02E6  2AB1               	goto	l112
  1339  02E7  3A01               	xorlw	1	; case 5
  1340  02E8  1903               	skipnz
  1341  02E9  2AB7               	goto	l113
  1342  02EA  3A03               	xorlw	3	; case 6
  1343  02EB  1903               	skipnz
  1344  02EC  2ABD               	goto	l114
  1345  02ED  3A01               	xorlw	1	; case 7
  1346  02EE  1903               	skipnz
  1347  02EF  2AC3               	goto	l115
  1348  02F0  2AC9               	goto	l116
  1349  02F1                     l108:
  1350                           
  1351                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1352  02F1  140F               	bsf	15,0	;volatile
  1353  02F2                     l117:
  1354  02F2  0008               	return
  1355  02F3                     __end_of_initOsc:
  1356                           
  1357                           	psect	text3
  1358  0459                     __ptext3:	
  1359 ;; *************** function _bin_to_float *****************
  1360 ;; Defined at:
  1361 ;;		line 141 in file "pseudocodigo_lab3.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  ADC_VAL         1    wreg     unsigned char 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  ADC_VAL         1    0[COMMON] unsigned char 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  4    0[BANK0 ] float 
  1368 ;; Registers used:
  1369 ;;		wreg
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1375 ;;      Params:         0       5       0       0       0
  1376 ;;      Locals:         0       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0
  1378 ;;      Totals:         0       5       0       0       0
  1379 ;;Total ram usage:        5 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    2
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           
  1390                           ;psect for function _bin_to_float
  1391  0459                     _bin_to_float:
  1392  0459                     l95:	
  1393                           ;incstack = 0
  1394                           ; Regs used in _bin_to_float: [wreg]
  1395                           
  1396  0459  0008               	return
  1397  045A                     __end_of_bin_to_float:
  1398                           
  1399                           	psect	text4
  1400  01B5                     __ptext4:	
  1401 ;; *************** function ___fltol *****************
  1402 ;; Defined at:
  1403 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  f1              4    0[BANK0 ] float 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  exp1            1   10[BANK0 ] unsigned char 
  1408 ;;  sign1           1    9[BANK0 ] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  4    0[BANK0 ] long 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1418 ;;      Params:         0       4       0       0       0
  1419 ;;      Locals:         0       2       0       0       0
  1420 ;;      Temps:          0       5       0       0       0
  1421 ;;      Totals:         0      11       0       0       0
  1422 ;;Total ram usage:       11 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    2
  1425 ;; This function calls:
  1426 ;;		Nothing
  1427 ;; This function is called by:
  1428 ;;		_main
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           
  1433                           ;psect for function ___fltol
  1434  01B5                     ___fltol:
  1435  01B5                     l1216:	
  1436                           ;incstack = 0
  1437                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  1438                           
  1439  01B5  1003               	clrc
  1440  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1441  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1442  01B8  0D33               	rlf	___fltol@f1+2,w
  1443  01B9  0D34               	rlf	___fltol@f1+3,w
  1444  01BA  00B5               	movwf	??___fltol
  1445  01BB  0835               	movf	??___fltol,w
  1446  01BC  00BB               	movwf	___fltol@exp1
  1447  01BD  083B               	movf	___fltol@exp1,w
  1448  01BE  1D03               	btfss	3,2
  1449  01BF  29C1               	goto	u251
  1450  01C0  29C2               	goto	u250
  1451  01C1                     u251:
  1452  01C1  29CB               	goto	l1222
  1453  01C2                     u250:
  1454  01C2                     l1218:
  1455  01C2  3000               	movlw	0
  1456  01C3  00B4               	movwf	?___fltol+3
  1457  01C4  3000               	movlw	0
  1458  01C5  00B3               	movwf	?___fltol+2
  1459  01C6  3000               	movlw	0
  1460  01C7  00B2               	movwf	?___fltol+1
  1461  01C8  3000               	movlw	0
  1462  01C9  00B1               	movwf	?___fltol
  1463  01CA  2A30               	goto	l482
  1464  01CB                     l1222:
  1465  01CB  0831               	movf	___fltol@f1,w
  1466  01CC  00B5               	movwf	??___fltol
  1467  01CD  0832               	movf	___fltol@f1+1,w
  1468  01CE  00B6               	movwf	??___fltol+1
  1469  01CF  0833               	movf	___fltol@f1+2,w
  1470  01D0  00B7               	movwf	??___fltol+2
  1471  01D1  0834               	movf	___fltol@f1+3,w
  1472  01D2  00B8               	movwf	??___fltol+3
  1473  01D3  301F               	movlw	31
  1474  01D4                     u265:
  1475  01D4  1003               	clrc
  1476  01D5  0CB8               	rrf	??___fltol+3,f
  1477  01D6  0CB7               	rrf	??___fltol+2,f
  1478  01D7  0CB6               	rrf	??___fltol+1,f
  1479  01D8  0CB5               	rrf	??___fltol,f
  1480  01D9                     u260:
  1481  01D9  3EFF               	addlw	-1
  1482  01DA  1D03               	skipz
  1483  01DB  29D4               	goto	u265
  1484  01DC  0835               	movf	??___fltol,w
  1485  01DD  00B9               	movwf	??___fltol+4
  1486  01DE  0839               	movf	??___fltol+4,w
  1487  01DF  00BA               	movwf	___fltol@sign1
  1488  01E0                     l1224:
  1489  01E0  17B3               	bsf	___fltol@f1+2,7
  1490  01E1                     l1226:
  1491  01E1  30FF               	movlw	255
  1492  01E2  05B1               	andwf	___fltol@f1,f
  1493  01E3  30FF               	movlw	255
  1494  01E4  05B2               	andwf	___fltol@f1+1,f
  1495  01E5  30FF               	movlw	255
  1496  01E6  05B3               	andwf	___fltol@f1+2,f
  1497  01E7  3000               	movlw	0
  1498  01E8  05B4               	andwf	___fltol@f1+3,f
  1499  01E9                     l1228:
  1500  01E9  3096               	movlw	150
  1501  01EA  02BB               	subwf	___fltol@exp1,f
  1502  01EB                     l1230:
  1503  01EB  1FBB               	btfss	___fltol@exp1,7
  1504  01EC  29EE               	goto	u271
  1505  01ED  29EF               	goto	u270
  1506  01EE                     u271:
  1507  01EE  2A09               	goto	l1240
  1508  01EF                     u270:
  1509  01EF                     l1232:
  1510  01EF  083B               	movf	___fltol@exp1,w
  1511  01F0  3A80               	xorlw	128
  1512  01F1  3E97               	addlw	151
  1513  01F2  1803               	skipnc
  1514  01F3  29F5               	goto	u281
  1515  01F4  29F6               	goto	u280
  1516  01F5                     u281:
  1517  01F5  29F7               	goto	l1238
  1518  01F6                     u280:
  1519  01F6  29C2               	goto	l1218
  1520  01F7                     l1238:
  1521  01F7  3001               	movlw	1
  1522  01F8                     u295:
  1523  01F8  1003               	clrc
  1524  01F9  0CB4               	rrf	___fltol@f1+3,f
  1525  01FA  0CB3               	rrf	___fltol@f1+2,f
  1526  01FB  0CB2               	rrf	___fltol@f1+1,f
  1527  01FC  0CB1               	rrf	___fltol@f1,f
  1528  01FD  3EFF               	addlw	-1
  1529  01FE  1D03               	skipz
  1530  01FF  29F8               	goto	u295
  1531  0200  3001               	movlw	1
  1532  0201  00B5               	movwf	??___fltol
  1533  0202  0835               	movf	??___fltol,w
  1534  0203  07BB               	addwf	___fltol@exp1,f
  1535  0204  1D03               	btfss	3,2
  1536  0205  2A07               	goto	u301
  1537  0206  2A08               	goto	u300
  1538  0207                     u301:
  1539  0207  29F7               	goto	l1238
  1540  0208                     u300:
  1541  0208  2A20               	goto	l1248
  1542  0209                     l1240:
  1543  0209  3020               	movlw	32
  1544  020A  023B               	subwf	___fltol@exp1,w
  1545  020B  1C03               	skipc
  1546  020C  2A0E               	goto	u311
  1547  020D  2A0F               	goto	u310
  1548  020E                     u311:
  1549  020E  2A1B               	goto	l489
  1550  020F                     u310:
  1551  020F  29C2               	goto	l1218
  1552  0210                     l1246:
  1553  0210  3001               	movlw	1
  1554  0211  00B5               	movwf	??___fltol
  1555  0212                     u325:
  1556  0212  1003               	clrc
  1557  0213  0DB1               	rlf	___fltol@f1,f
  1558  0214  0DB2               	rlf	___fltol@f1+1,f
  1559  0215  0DB3               	rlf	___fltol@f1+2,f
  1560  0216  0DB4               	rlf	___fltol@f1+3,f
  1561  0217  0BB5               	decfsz	??___fltol,f
  1562  0218  2A12               	goto	u325
  1563  0219  3001               	movlw	1
  1564  021A  02BB               	subwf	___fltol@exp1,f
  1565  021B                     l489:
  1566  021B  083B               	movf	___fltol@exp1,w
  1567  021C  1D03               	btfss	3,2
  1568  021D  2A1F               	goto	u331
  1569  021E  2A20               	goto	u330
  1570  021F                     u331:
  1571  021F  2A10               	goto	l1246
  1572  0220                     u330:
  1573  0220                     l1248:
  1574  0220  083A               	movf	___fltol@sign1,w
  1575  0221  1903               	btfsc	3,2
  1576  0222  2A24               	goto	u341
  1577  0223  2A25               	goto	u340
  1578  0224                     u341:
  1579  0224  2A30               	goto	l492
  1580  0225                     u340:
  1581  0225                     l1250:
  1582  0225  09B1               	comf	___fltol@f1,f
  1583  0226  09B2               	comf	___fltol@f1+1,f
  1584  0227  09B3               	comf	___fltol@f1+2,f
  1585  0228  09B4               	comf	___fltol@f1+3,f
  1586  0229  0AB1               	incf	___fltol@f1,f
  1587  022A  1903               	skipnz
  1588  022B  0AB2               	incf	___fltol@f1+1,f
  1589  022C  1903               	skipnz
  1590  022D  0AB3               	incf	___fltol@f1+2,f
  1591  022E  1903               	skipnz
  1592  022F  0AB4               	incf	___fltol@f1+3,f
  1593  0230                     l492:
  1594  0230                     l482:
  1595  0230  0008               	return
  1596  0231                     __end_of___fltol:
  1597                           
  1598                           	psect	text5
  1599  03A4                     __ptext5:	
  1600 ;; *************** function _Lcd_Write_String *****************
  1601 ;; Defined at:
  1602 ;;		line 129 in file "LCD.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  a               1    wreg     PTR unsigned char 
  1605 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  a               1    4[BANK0 ] PTR unsigned char 
  1608 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1609 ;;  i               2    2[BANK0 ] int 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       0       0       0       0
  1620 ;;      Locals:         0       3       0       0       0
  1621 ;;      Temps:          0       0       0       0       0
  1622 ;;      Totals:         0       3       0       0       0
  1623 ;;Total ram usage:        3 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    4
  1626 ;; This function calls:
  1627 ;;		_Lcd_Write_Char
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           
  1634                           ;psect for function _Lcd_Write_String
  1635  03A4                     _Lcd_Write_String:
  1636                           
  1637                           ;incstack = 0
  1638                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1639                           ;Lcd_Write_String@a stored from wreg
  1640  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1641  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  1642  03A6  00B5               	movwf	Lcd_Write_String@a
  1643  03A7                     l1208:
  1644                           
  1645                           ;LCD.c: 130:  int i;;LCD.c: 131:  for(i=0;a[i]!='\0';i++)
  1646  03A7  01B3               	clrf	Lcd_Write_String@i
  1647  03A8  01B4               	clrf	Lcd_Write_String@i+1
  1648  03A9  2BBF               	goto	l1214
  1649  03AA                     l1210:
  1650                           
  1651                           ;LCD.c: 132:     Lcd_Write_Char(a[i]);
  1652  03AA  0833               	movf	Lcd_Write_String@i,w
  1653  03AB  0735               	addwf	Lcd_Write_String@a,w
  1654  03AC  0084               	movwf	4
  1655  03AD  120A  118A  240C  120A  118A  	fcall	stringdir
  1656  03B2  120A  118A  2438  120A  118A  	fcall	_Lcd_Write_Char
  1657  03B7                     l1212:
  1658  03B7  3001               	movlw	1
  1659  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  1660  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  1661  03BA  07B3               	addwf	Lcd_Write_String@i,f
  1662  03BB  1803               	skipnc
  1663  03BC  0AB4               	incf	Lcd_Write_String@i+1,f
  1664  03BD  3000               	movlw	0
  1665  03BE  07B4               	addwf	Lcd_Write_String@i+1,f
  1666  03BF                     l1214:
  1667  03BF  0833               	movf	Lcd_Write_String@i,w
  1668  03C0  0735               	addwf	Lcd_Write_String@a,w
  1669  03C1  0084               	movwf	4
  1670  03C2  120A  118A  240C  120A  118A  	fcall	stringdir
  1671  03C7  3A00               	xorlw	0
  1672  03C8  1D03               	skipz
  1673  03C9  2BCB               	goto	u241
  1674  03CA  2BCC               	goto	u240
  1675  03CB                     u241:
  1676  03CB  2BAA               	goto	l1210
  1677  03CC                     u240:
  1678  03CC                     l154:
  1679  03CC  0008               	return
  1680  03CD                     __end_of_Lcd_Write_String:
  1681                           
  1682                           	psect	text6
  1683  0438                     __ptext6:	
  1684 ;; *************** function _Lcd_Write_Char *****************
  1685 ;; Defined at:
  1686 ;;		line 110 in file "LCD.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  a               1    wreg     unsigned char 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  a               1    1[BANK0 ] unsigned char 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0, pclath, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1700 ;;      Params:         0       0       0       0       0
  1701 ;;      Locals:         0       1       0       0       0
  1702 ;;      Temps:          0       0       0       0       0
  1703 ;;      Totals:         0       1       0       0       0
  1704 ;;Total ram usage:        1 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    3
  1707 ;; This function calls:
  1708 ;;		_Lcd_Port
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;;		_Lcd_Write_String
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           
  1716                           ;psect for function _Lcd_Write_Char
  1717  0438                     _Lcd_Write_Char:
  1718                           
  1719                           ;incstack = 0
  1720                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1721                           ;Lcd_Write_Char@a stored from wreg
  1722  0438  1283               	bcf	3,5	;RP0=0, select bank0
  1723  0439  1303               	bcf	3,6	;RP1=0, select bank0
  1724  043A  00B2               	movwf	Lcd_Write_Char@a
  1725  043B                     l1086:
  1726                           
  1727                           ;LCD.c: 111:    Lcd_Port(a);
  1728  043B  0832               	movf	Lcd_Write_Char@a,w
  1729  043C  120A  118A  2453  120A  118A  	fcall	_Lcd_Port
  1730  0441                     l148:
  1731  0441  0008               	return
  1732  0442                     __end_of_Lcd_Write_Char:
  1733                           
  1734                           	psect	text7
  1735  034C                     __ptext7:	
  1736 ;; *************** function _Lcd_Set_Cursor *****************
  1737 ;; Defined at:
  1738 ;;		line 91 in file "LCD.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  a               1    wreg     unsigned char 
  1741 ;;  b               1    4[BANK0 ] unsigned char 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  a               1    7[BANK0 ] unsigned char 
  1744 ;;  temp            1   10[BANK0 ] unsigned char 
  1745 ;;  y               1    9[BANK0 ] unsigned char 
  1746 ;;  z               1    8[BANK0 ] unsigned char 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		wreg, status,2, status,0, pclath, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1756 ;;      Params:         0       1       0       0       0
  1757 ;;      Locals:         0       4       0       0       0
  1758 ;;      Temps:          0       2       0       0       0
  1759 ;;      Totals:         0       7       0       0       0
  1760 ;;Total ram usage:        7 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    4
  1763 ;; This function calls:
  1764 ;;		_Lcd_Cmd
  1765 ;; This function is called by:
  1766 ;;		_main
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           
  1771                           ;psect for function _Lcd_Set_Cursor
  1772  034C                     _Lcd_Set_Cursor:
  1773                           
  1774                           ;incstack = 0
  1775                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1776                           ;Lcd_Set_Cursor@a stored from wreg
  1777  034C  1283               	bcf	3,5	;RP0=0, select bank0
  1778  034D  1303               	bcf	3,6	;RP1=0, select bank0
  1779  034E  00B8               	movwf	Lcd_Set_Cursor@a
  1780  034F                     l1188:
  1781                           
  1782                           ;LCD.c: 92:  char temp,z,y;;LCD.c: 93:  if(a == 1){
  1783  034F  0338               	decf	Lcd_Set_Cursor@a,w
  1784  0350  1D03               	btfss	3,2
  1785  0351  2B53               	goto	u201
  1786  0352  2B54               	goto	u200
  1787  0353                     u201:
  1788  0353  2B79               	goto	l1198
  1789  0354                     u200:
  1790  0354                     l1190:
  1791                           
  1792                           ;LCD.c: 94:    temp = 0x80 + b - 1;
  1793  0354  0835               	movf	Lcd_Set_Cursor@b,w
  1794  0355  3E7F               	addlw	127
  1795  0356  00B6               	movwf	??_Lcd_Set_Cursor
  1796  0357  0836               	movf	??_Lcd_Set_Cursor,w
  1797  0358  00BB               	movwf	Lcd_Set_Cursor@temp
  1798                           
  1799                           ;LCD.c: 95:   z = temp>>4;
  1800  0359  083B               	movf	Lcd_Set_Cursor@temp,w
  1801  035A  00B6               	movwf	??_Lcd_Set_Cursor
  1802  035B  3004               	movlw	4
  1803  035C                     u215:
  1804  035C  1003               	clrc
  1805  035D  0CB6               	rrf	??_Lcd_Set_Cursor,f
  1806  035E  3EFF               	addlw	-1
  1807  035F  1D03               	skipz
  1808  0360  2B5C               	goto	u215
  1809  0361  0836               	movf	??_Lcd_Set_Cursor,w
  1810  0362  00B7               	movwf	??_Lcd_Set_Cursor+1
  1811  0363  0837               	movf	??_Lcd_Set_Cursor+1,w
  1812  0364  00B9               	movwf	Lcd_Set_Cursor@z
  1813  0365                     l1192:
  1814                           
  1815                           ;LCD.c: 96:   y = temp & 0x0F;
  1816  0365  083B               	movf	Lcd_Set_Cursor@temp,w
  1817  0366  390F               	andlw	15
  1818  0367  00B6               	movwf	??_Lcd_Set_Cursor
  1819  0368  0836               	movf	??_Lcd_Set_Cursor,w
  1820  0369  00BA               	movwf	Lcd_Set_Cursor@y
  1821  036A                     l1194:
  1822                           
  1823                           ;LCD.c: 97:   Lcd_Cmd(z);
  1824  036A  0839               	movf	Lcd_Set_Cursor@z,w
  1825  036B  120A  118A  23F0  120A  118A  	fcall	_Lcd_Cmd
  1826  0370                     l1196:
  1827                           
  1828                           ;LCD.c: 98:   Lcd_Cmd(y);
  1829  0370  1283               	bcf	3,5	;RP0=0, select bank0
  1830  0371  1303               	bcf	3,6	;RP1=0, select bank0
  1831  0372  083A               	movf	Lcd_Set_Cursor@y,w
  1832  0373  120A  118A  23F0  120A  118A  	fcall	_Lcd_Cmd
  1833                           
  1834                           ;LCD.c: 99:  }
  1835  0378  2BA3               	goto	l145
  1836  0379                     l1198:
  1837  0379  3002               	movlw	2
  1838  037A  0638               	xorwf	Lcd_Set_Cursor@a,w
  1839  037B  1D03               	btfss	3,2
  1840  037C  2B7E               	goto	u221
  1841  037D  2B7F               	goto	u220
  1842  037E                     u221:
  1843  037E  2BA3               	goto	l145
  1844  037F                     u220:
  1845  037F                     l1200:
  1846                           
  1847                           ;LCD.c: 101:   temp = 0xC0 + b - 1;
  1848  037F  0835               	movf	Lcd_Set_Cursor@b,w
  1849  0380  3EBF               	addlw	191
  1850  0381  00B6               	movwf	??_Lcd_Set_Cursor
  1851  0382  0836               	movf	??_Lcd_Set_Cursor,w
  1852  0383  00BB               	movwf	Lcd_Set_Cursor@temp
  1853                           
  1854                           ;LCD.c: 102:   z = temp>>4;
  1855  0384  083B               	movf	Lcd_Set_Cursor@temp,w
  1856  0385  00B6               	movwf	??_Lcd_Set_Cursor
  1857  0386  3004               	movlw	4
  1858  0387                     u235:
  1859  0387  1003               	clrc
  1860  0388  0CB6               	rrf	??_Lcd_Set_Cursor,f
  1861  0389  3EFF               	addlw	-1
  1862  038A  1D03               	skipz
  1863  038B  2B87               	goto	u235
  1864  038C  0836               	movf	??_Lcd_Set_Cursor,w
  1865  038D  00B7               	movwf	??_Lcd_Set_Cursor+1
  1866  038E  0837               	movf	??_Lcd_Set_Cursor+1,w
  1867  038F  00B9               	movwf	Lcd_Set_Cursor@z
  1868  0390                     l1202:
  1869                           
  1870                           ;LCD.c: 103:   y = temp & 0x0F;
  1871  0390  083B               	movf	Lcd_Set_Cursor@temp,w
  1872  0391  390F               	andlw	15
  1873  0392  00B6               	movwf	??_Lcd_Set_Cursor
  1874  0393  0836               	movf	??_Lcd_Set_Cursor,w
  1875  0394  00BA               	movwf	Lcd_Set_Cursor@y
  1876  0395                     l1204:
  1877                           
  1878                           ;LCD.c: 104:   Lcd_Cmd(z);
  1879  0395  0839               	movf	Lcd_Set_Cursor@z,w
  1880  0396  120A  118A  23F0  120A  118A  	fcall	_Lcd_Cmd
  1881  039B                     l1206:
  1882                           
  1883                           ;LCD.c: 105:   Lcd_Cmd(y);
  1884  039B  1283               	bcf	3,5	;RP0=0, select bank0
  1885  039C  1303               	bcf	3,6	;RP1=0, select bank0
  1886  039D  083A               	movf	Lcd_Set_Cursor@y,w
  1887  039E  120A  118A  23F0  120A  118A  	fcall	_Lcd_Cmd
  1888  03A3                     l145:
  1889  03A3  0008               	return
  1890  03A4                     __end_of_Lcd_Set_Cursor:
  1891                           
  1892                           	psect	text8
  1893  02F3                     __ptext8:	
  1894 ;; *************** function _Lcd_Init *****************
  1895 ;; Defined at:
  1896 ;;		line 14 in file "LCD.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, status,2, status,0, pclath, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1910 ;;      Params:         0       0       0       0       0
  1911 ;;      Locals:         0       0       0       0       0
  1912 ;;      Temps:          0       2       0       0       0
  1913 ;;      Totals:         0       2       0       0       0
  1914 ;;Total ram usage:        2 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    4
  1917 ;; This function calls:
  1918 ;;		_Lcd_Cmd
  1919 ;;		_Lcd_Port
  1920 ;; This function is called by:
  1921 ;;		_main
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           
  1926                           ;psect for function _Lcd_Init
  1927  02F3                     _Lcd_Init:
  1928  02F3                     l1164:	
  1929                           ;incstack = 0
  1930                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1931                           
  1932                           
  1933                           ;LCD.c: 15:   Lcd_Port(0x00);
  1934  02F3  3000               	movlw	0
  1935  02F4  120A  118A  2453  120A  118A  	fcall	_Lcd_Port
  1936  02F9                     l1166:
  1937                           
  1938                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1939  02F9  3034               	movlw	52
  1940  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  1941  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  1942  02FC  00B6               	movwf	??_Lcd_Init+1
  1943  02FD  30F1               	movlw	241
  1944  02FE  00B5               	movwf	??_Lcd_Init
  1945  02FF                     u407:
  1946  02FF  0BB5               	decfsz	??_Lcd_Init,f
  1947  0300  2AFF               	goto	u407
  1948  0301  0BB6               	decfsz	??_Lcd_Init+1,f
  1949  0302  2AFF               	goto	u407
  1950  0303                     l1168:
  1951                           
  1952                           ;LCD.c: 17:   Lcd_Cmd(0x030);
  1953  0303  3030               	movlw	48
  1954  0304  120A  118A  23F0  120A  118A  	fcall	_Lcd_Cmd
  1955                           
  1956                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1957  0309  300D               	movlw	13
  1958  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1959  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1960  030C  00B6               	movwf	??_Lcd_Init+1
  1961  030D  30FB               	movlw	251
  1962  030E  00B5               	movwf	??_Lcd_Init
  1963  030F                     u417:
  1964  030F  0BB5               	decfsz	??_Lcd_Init,f
  1965  0310  2B0F               	goto	u417
  1966  0311  0BB6               	decfsz	??_Lcd_Init+1,f
  1967  0312  2B0F               	goto	u417
  1968  0313                     l1170:
  1969                           
  1970                           ;LCD.c: 19:   Lcd_Cmd(0x030);
  1971  0313  3030               	movlw	48
  1972  0314  120A  118A  23F0  120A  118A  	fcall	_Lcd_Cmd
  1973  0319                     l1172:
  1974                           
  1975                           ;LCD.c: 20:     _delay((unsigned long)((160)*(8000000/4000000.0)));
  1976  0319  3069               	movlw	105
  1977  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1978  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1979  031C  00B5               	movwf	??_Lcd_Init
  1980  031D                     u427:
  1981  031D  0BB5               	decfsz	??_Lcd_Init,f
  1982  031E  2B1D               	goto	u427
  1983  031F  2B20               	nop2
  1984                           
  1985                           ;LCD.c: 21:   Lcd_Cmd(0x030);
  1986  0320  3030               	movlw	48
  1987  0321  120A  118A  23F0  120A  118A  	fcall	_Lcd_Cmd
  1988  0326                     l1174:
  1989                           
  1990                           ;LCD.c: 22:     _delay((unsigned long)((160)*(8000000/4000000.0)));
  1991  0326  3069               	movlw	105
  1992  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1993  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1994  0329  00B5               	movwf	??_Lcd_Init
  1995  032A                     u437:
  1996  032A  0BB5               	decfsz	??_Lcd_Init,f
  1997  032B  2B2A               	goto	u437
  1998  032C  2B2D               	nop2
  1999  032D                     l1176:
  2000                           
  2001                           ;LCD.c: 25:   Lcd_Cmd(0x030);
  2002  032D  3030               	movlw	48
  2003  032E  120A  118A  23F0  120A  118A  	fcall	_Lcd_Cmd
  2004  0333                     l1178:
  2005                           
  2006                           ;LCD.c: 26:   Lcd_Cmd(0x008);
  2007  0333  3008               	movlw	8
  2008  0334  120A  118A  23F0  120A  118A  	fcall	_Lcd_Cmd
  2009  0339                     l1180:
  2010                           
  2011                           ;LCD.c: 27:   Lcd_Cmd(0x001);
  2012  0339  3001               	movlw	1
  2013  033A  120A  118A  23F0  120A  118A  	fcall	_Lcd_Cmd
  2014  033F                     l1182:
  2015                           
  2016                           ;LCD.c: 28:   Lcd_Cmd(0x00);
  2017  033F  3000               	movlw	0
  2018  0340  120A  118A  23F0  120A  118A  	fcall	_Lcd_Cmd
  2019  0345                     l1184:
  2020                           
  2021                           ;LCD.c: 29:   Lcd_Cmd(0x006);
  2022  0345  3006               	movlw	6
  2023  0346  120A  118A  23F0  120A  118A  	fcall	_Lcd_Cmd
  2024  034B                     l130:
  2025  034B  0008               	return
  2026  034C                     __end_of_Lcd_Init:
  2027                           
  2028                           	psect	text9
  2029  041E                     __ptext9:	
  2030 ;; *************** function _Lcd_Clear *****************
  2031 ;; Defined at:
  2032 ;;		line 85 in file "LCD.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0, pclath, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2046 ;;      Params:         0       0       0       0       0
  2047 ;;      Locals:         0       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0
  2049 ;;      Totals:         0       0       0       0       0
  2050 ;;Total ram usage:        0 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    4
  2053 ;; This function calls:
  2054 ;;		_Lcd_Cmd
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           
  2061                           ;psect for function _Lcd_Clear
  2062  041E                     _Lcd_Clear:
  2063  041E                     l1186:	
  2064                           ;incstack = 0
  2065                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2066                           
  2067                           
  2068                           ;LCD.c: 86:  Lcd_Cmd(0);
  2069  041E  3000               	movlw	0
  2070  041F  120A  118A  23F0  120A  118A  	fcall	_Lcd_Cmd
  2071                           
  2072                           ;LCD.c: 87:  Lcd_Cmd(1);
  2073  0424  3001               	movlw	1
  2074  0425  120A  118A  23F0  120A  118A  	fcall	_Lcd_Cmd
  2075  042A                     l139:
  2076  042A  0008               	return
  2077  042B                     __end_of_Lcd_Clear:
  2078                           
  2079                           	psect	text10
  2080  03F0                     __ptext10:	
  2081 ;; *************** function _Lcd_Cmd *****************
  2082 ;; Defined at:
  2083 ;;		line 76 in file "LCD.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  a               1    wreg     unsigned char 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  a               1    3[BANK0 ] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0, pclath, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       0       0       0       0
  2098 ;;      Locals:         0       1       0       0       0
  2099 ;;      Temps:          0       2       0       0       0
  2100 ;;      Totals:         0       3       0       0       0
  2101 ;;Total ram usage:        3 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    3
  2104 ;; This function calls:
  2105 ;;		_Lcd_Port
  2106 ;; This function is called by:
  2107 ;;		_Lcd_Init
  2108 ;;		_Lcd_Clear
  2109 ;;		_Lcd_Set_Cursor
  2110 ;;		_Lcd_Shift_Right
  2111 ;;		_Lcd_Shift_Left
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           
  2116                           ;psect for function _Lcd_Cmd
  2117  03F0                     _Lcd_Cmd:
  2118                           
  2119                           ;incstack = 0
  2120                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2121                           ;Lcd_Cmd@a stored from wreg
  2122  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2123  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2124  03F2  00B4               	movwf	Lcd_Cmd@a
  2125  03F3                     l1100:
  2126                           
  2127                           ;LCD.c: 77:  PORTEbits.RE0 = 0;
  2128  03F3  1009               	bcf	9,0	;volatile
  2129  03F4                     l1102:
  2130                           
  2131                           ;LCD.c: 78:  Lcd_Port(a);
  2132  03F4  0834               	movf	Lcd_Cmd@a,w
  2133  03F5  120A  118A  2453  120A  118A  	fcall	_Lcd_Port
  2134  03FA                     l1104:
  2135                           
  2136                           ;LCD.c: 79:  PORTEbits.RE2 = 1;
  2137  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2138  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2139  03FC  1509               	bsf	9,2	;volatile
  2140  03FD                     l1106:
  2141                           
  2142                           ;LCD.c: 80:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2143  03FD  300B               	movlw	11
  2144  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2145  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2146  0400  00B3               	movwf	??_Lcd_Cmd+1
  2147  0401  3061               	movlw	97
  2148  0402  00B2               	movwf	??_Lcd_Cmd
  2149  0403                     u447:
  2150  0403  0BB2               	decfsz	??_Lcd_Cmd,f
  2151  0404  2C03               	goto	u447
  2152  0405  0BB3               	decfsz	??_Lcd_Cmd+1,f
  2153  0406  2C03               	goto	u447
  2154  0407  2C08               	nop2
  2155  0408                     l1108:
  2156                           
  2157                           ;LCD.c: 81:         PORTEbits.RE2 = 0;
  2158  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2160  040A  1109               	bcf	9,2	;volatile
  2161  040B                     l136:
  2162  040B  0008               	return
  2163  040C                     __end_of_Lcd_Cmd:
  2164                           
  2165                           	psect	text11
  2166  0453                     __ptext11:	
  2167 ;; *************** function _Lcd_Port *****************
  2168 ;; Defined at:
  2169 ;;		line 33 in file "LCD.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  a               1    wreg     unsigned char 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  a               1    0[BANK0 ] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2183 ;;      Params:         0       0       0       0       0
  2184 ;;      Locals:         0       1       0       0       0
  2185 ;;      Temps:          0       0       0       0       0
  2186 ;;      Totals:         0       1       0       0       0
  2187 ;;Total ram usage:        1 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    2
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_Lcd_Init
  2194 ;;		_Lcd_Cmd
  2195 ;;		_Lcd_Write_Char
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           
  2200                           ;psect for function _Lcd_Port
  2201  0453                     _Lcd_Port:
  2202                           
  2203                           ;incstack = 0
  2204                           ; Regs used in _Lcd_Port: [wreg]
  2205                           ;Lcd_Port@a stored from wreg
  2206  0453  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0454  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0455  00B1               	movwf	Lcd_Port@a
  2209  0456                     l1084:
  2210                           
  2211                           ;LCD.c: 34:     PORTD = a;
  2212  0456  0831               	movf	Lcd_Port@a,w
  2213  0457  0088               	movwf	8	;volatile
  2214  0458                     l133:
  2215  0458  0008               	return
  2216  0459                     __end_of_Lcd_Port:
  2217                           
  2218                           	psect	text12
  2219  0442                     __ptext12:	
  2220 ;; *************** function _Config_INTERRUPT *****************
  2221 ;; Defined at:
  2222 ;;		line 168 in file "pseudocodigo_lab3.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2236 ;;      Params:         0       0       0       0       0
  2237 ;;      Locals:         0       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0
  2239 ;;      Totals:         0       0       0       0       0
  2240 ;;Total ram usage:        0 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    2
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_main
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           
  2251                           ;psect for function _Config_INTERRUPT
  2252  0442                     _Config_INTERRUPT:
  2253  0442                     l1158:	
  2254                           ;incstack = 0
  2255                           ; Regs used in _Config_INTERRUPT: [wreg]
  2256                           
  2257                           
  2258                           ;pseudocodigo_lab3.c: 169:     INTCON = 0b11000000;
  2259  0442  30C0               	movlw	192
  2260  0443  008B               	movwf	11	;volatile
  2261  0444                     l1160:
  2262                           
  2263                           ;pseudocodigo_lab3.c: 170:     PIE1bits.ADIE = 1;
  2264  0444  1683               	bsf	3,5	;RP0=1, select bank1
  2265  0445  1303               	bcf	3,6	;RP1=0, select bank1
  2266  0446  170C               	bsf	12,6	;volatile
  2267  0447                     l1162:
  2268                           
  2269                           ;pseudocodigo_lab3.c: 171:     PIR1bits.ADIF = 1;
  2270  0447  1283               	bcf	3,5	;RP0=0, select bank0
  2271  0448  1303               	bcf	3,6	;RP1=0, select bank0
  2272  0449  170C               	bsf	12,6	;volatile
  2273  044A                     l101:
  2274  044A  0008               	return
  2275  044B                     __end_of_Config_INTERRUPT:
  2276                           
  2277                           	psect	text13
  2278  0231                     __ptext13:	
  2279 ;; *************** function _ISR *****************
  2280 ;; Defined at:
  2281 ;;		line 78 in file "pseudocodigo_lab3.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         0       0       0       0       0
  2296 ;;      Locals:         0       0       0       0       0
  2297 ;;      Temps:          5       0       0       0       0
  2298 ;;      Totals:         5       0       0       0       0
  2299 ;;Total ram usage:        5 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    1
  2302 ;; This function calls:
  2303 ;;		_ADC
  2304 ;;		_ADC_Config
  2305 ;; This function is called by:
  2306 ;;		Interrupt level 1
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           
  2311                           ;psect for function _ISR
  2312  0231                     _ISR:
  2313  0231                     i1l1252:
  2314                           
  2315                           ;pseudocodigo_lab3.c: 81:     if (PIR1bits.ADIF) {
  2316  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2317  0232  1303               	bcf	3,6	;RP1=0, select bank0
  2318  0233  1F0C               	btfss	12,6	;volatile
  2319  0234  2A36               	goto	u35_21
  2320  0235  2A37               	goto	u35_20
  2321  0236                     u35_21:
  2322  0236  2A8C               	goto	i1l84
  2323  0237                     u35_20:
  2324  0237                     i1l1254:
  2325                           
  2326                           ;pseudocodigo_lab3.c: 82:         PIR1bits.ADIF = 0;
  2327  0237  130C               	bcf	12,6	;volatile
  2328  0238                     i1l1256:
  2329                           
  2330                           ;pseudocodigo_lab3.c: 83:         ADC_Config (0);
  2331  0238  3000               	movlw	0
  2332  0239  120A  118A  20F9  120A  118A  	fcall	_ADC_Config
  2333  023E                     i1l1258:
  2334                           
  2335                           ;pseudocodigo_lab3.c: 84:         _delay((unsigned long)((2)*(8000000/4000.0)));
  2336  023E  3006               	movlw	6
  2337  023F  00F4               	movwf	??_ISR+1
  2338  0240  3030               	movlw	48
  2339  0241  00F3               	movwf	??_ISR
  2340  0242                     u45_27:
  2341  0242  0BF3               	decfsz	??_ISR,f
  2342  0243  2A42               	goto	u45_27
  2343  0244  0BF4               	decfsz	??_ISR+1,f
  2344  0245  2A42               	goto	u45_27
  2345  0246  0000               	nop
  2346  0247                     i1l1260:
  2347                           
  2348                           ;pseudocodigo_lab3.c: 85:         ADCON0bits.GO = 1;
  2349  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2350  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2351  0249  149F               	bsf	31,1	;volatile
  2352                           
  2353                           ;pseudocodigo_lab3.c: 86:         while (ADCON0bits.GO != 0) {
  2354  024A  2A5D               	goto	i1l1264
  2355  024B                     i1l1262:
  2356                           
  2357                           ;pseudocodigo_lab3.c: 87:             ADC_VALOR_1 = ADC(ADRESL, ADRESH);
  2358  024B  081E               	movf	30,w	;volatile
  2359  024C  00F3               	movwf	??_ISR
  2360  024D  0873               	movf	??_ISR,w
  2361  024E  00F0               	movwf	ADC@ADRESH_
  2362  024F  1683               	bsf	3,5	;RP0=1, select bank1
  2363  0250  1303               	bcf	3,6	;RP1=0, select bank1
  2364  0251  081E               	movf	30,w	;volatile
  2365  0252  120A  118A  242B  120A  118A  	fcall	_ADC
  2366  0257  0871               	movf	?_ADC+1,w
  2367  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2368  0259  1303               	bcf	3,6	;RP1=0, select bank0
  2369  025A  00AF               	movwf	_ADC_VALOR_1+1
  2370  025B  0870               	movf	?_ADC,w
  2371  025C  00AE               	movwf	_ADC_VALOR_1
  2372  025D                     i1l1264:
  2373                           
  2374                           ;pseudocodigo_lab3.c: 86:         while (ADCON0bits.GO != 0) {
  2375  025D  189F               	btfsc	31,1	;volatile
  2376  025E  2A60               	goto	u36_21
  2377  025F  2A61               	goto	u36_20
  2378  0260                     u36_21:
  2379  0260  2A4B               	goto	i1l1262
  2380  0261                     u36_20:
  2381  0261                     i1l1266:
  2382                           
  2383                           ;pseudocodigo_lab3.c: 91:         ADC_Config (1);
  2384  0261  3001               	movlw	1
  2385  0262  120A  118A  20F9  120A  118A  	fcall	_ADC_Config
  2386  0267                     i1l1268:
  2387                           
  2388                           ;pseudocodigo_lab3.c: 92:         _delay((unsigned long)((2)*(8000000/4000.0)));
  2389  0267  3006               	movlw	6
  2390  0268  00F4               	movwf	??_ISR+1
  2391  0269  3030               	movlw	48
  2392  026A  00F3               	movwf	??_ISR
  2393  026B                     u46_27:
  2394  026B  0BF3               	decfsz	??_ISR,f
  2395  026C  2A6B               	goto	u46_27
  2396  026D  0BF4               	decfsz	??_ISR+1,f
  2397  026E  2A6B               	goto	u46_27
  2398  026F  0000               	nop
  2399  0270                     i1l1270:
  2400                           
  2401                           ;pseudocodigo_lab3.c: 93:         ADCON0bits.GO = 1;
  2402  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2403  0271  1303               	bcf	3,6	;RP1=0, select bank0
  2404  0272  149F               	bsf	31,1	;volatile
  2405                           
  2406                           ;pseudocodigo_lab3.c: 94:         while (ADCON0bits.GO != 0) {
  2407  0273  2A84               	goto	i1l1274
  2408  0274                     i1l1272:
  2409                           
  2410                           ;pseudocodigo_lab3.c: 95:             ADC_VALOR_2 = ADC(ADRESL, ADRESH);
  2411  0274  081E               	movf	30,w	;volatile
  2412  0275  00F3               	movwf	??_ISR
  2413  0276  0873               	movf	??_ISR,w
  2414  0277  00F0               	movwf	ADC@ADRESH_
  2415  0278  1683               	bsf	3,5	;RP0=1, select bank1
  2416  0279  1303               	bcf	3,6	;RP1=0, select bank1
  2417  027A  081E               	movf	30,w	;volatile
  2418  027B  120A  118A  242B  120A  118A  	fcall	_ADC
  2419  0280  0871               	movf	?_ADC+1,w
  2420  0281  00FD               	movwf	_ADC_VALOR_2+1
  2421  0282  0870               	movf	?_ADC,w
  2422  0283  00FC               	movwf	_ADC_VALOR_2
  2423  0284                     i1l1274:
  2424                           
  2425                           ;pseudocodigo_lab3.c: 94:         while (ADCON0bits.GO != 0) {
  2426  0284  1283               	bcf	3,5	;RP0=0, select bank0
  2427  0285  1303               	bcf	3,6	;RP1=0, select bank0
  2428  0286  189F               	btfsc	31,1	;volatile
  2429  0287  2A89               	goto	u37_21
  2430  0288  2A8A               	goto	u37_20
  2431  0289                     u37_21:
  2432  0289  2A74               	goto	i1l1272
  2433  028A                     u37_20:
  2434  028A                     i1l1276:
  2435                           
  2436                           ;pseudocodigo_lab3.c: 97:         PORTB = ADC_VALOR_2;
  2437  028A  087C               	movf	_ADC_VALOR_2,w
  2438  028B  0086               	movwf	6	;volatile
  2439  028C                     i1l84:
  2440  028C  0877               	movf	??_ISR+4,w
  2441  028D  008A               	movwf	10
  2442  028E  0876               	movf	??_ISR+3,w
  2443  028F  0084               	movwf	4
  2444  0290  0E75               	swapf	??_ISR+2,w
  2445  0291  0083               	movwf	3
  2446  0292  0EFE               	swapf	btemp,f
  2447  0293  0E7E               	swapf	btemp,w
  2448  0294  0009               	retfie
  2449  0295                     __end_of_ISR:
  2450                           
  2451                           	psect	intentry
  2452  0004                     __pintentry:	
  2453                           ;incstack = 0
  2454                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2455                           
  2456  0004                     interrupt_function:
  2457  007E                     saved_w	set	btemp
  2458  0004  00FE               	movwf	btemp
  2459  0005  0E03               	swapf	3,w
  2460  0006  00F5               	movwf	??_ISR+2
  2461  0007  0804               	movf	4,w
  2462  0008  00F6               	movwf	??_ISR+3
  2463  0009  080A               	movf	10,w
  2464  000A  00F7               	movwf	??_ISR+4
  2465  000B  120A  118A  2A31   	ljmp	_ISR
  2466                           
  2467                           	psect	text14
  2468  00F9                     __ptext14:	
  2469 ;; *************** function _ADC_Config *****************
  2470 ;; Defined at:
  2471 ;;		line 31 in file "Config_ADC.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  AN_num          1    wreg     unsigned char 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  AN_num          1    2[COMMON] unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2485 ;;      Params:         0       0       0       0       0
  2486 ;;      Locals:         1       0       0       0       0
  2487 ;;      Temps:          2       0       0       0       0
  2488 ;;      Totals:         3       0       0       0       0
  2489 ;;Total ram usage:        3 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_ISR
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           
  2499                           ;psect for function _ADC_Config
  2500  00F9                     _ADC_Config:
  2501                           
  2502                           ;incstack = 0
  2503                           ; Regs used in _ADC_Config: [wreg-fsr0h+status,2+status,0]
  2504                           ;ADC_Config@AN_num stored from wreg
  2505  00F9  00F2               	movwf	ADC_Config@AN_num
  2506  00FA                     i1l1110:
  2507                           
  2508                           ;Config_ADC.c: 33:     switch(AN_num){
  2509  00FA  2972               	goto	i1l1114
  2510  00FB                     i1l192:	
  2511                           ;Config_ADC.c: 34:         case 0:
  2512                           
  2513                           
  2514                           ;Config_ADC.c: 35:             ADCON0bits.CHS3 = 0;
  2515  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2516  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  2517  00FD  129F               	bcf	31,5	;volatile
  2518                           
  2519                           ;Config_ADC.c: 36:             ADCON0bits.CHS2 = 0;
  2520  00FE  121F               	bcf	31,4	;volatile
  2521                           
  2522                           ;Config_ADC.c: 37:             ADCON0bits.CHS1 = 0;
  2523  00FF  119F               	bcf	31,3	;volatile
  2524                           
  2525                           ;Config_ADC.c: 38:             ADCON0bits.CHS0 = 0;
  2526  0100  111F               	bcf	31,2	;volatile
  2527                           
  2528                           ;Config_ADC.c: 39:             break;
  2529  0101  29AC               	goto	i1l1116
  2530  0102                     i1l194:	
  2531                           ;Config_ADC.c: 40:         case 1:
  2532                           
  2533                           
  2534                           ;Config_ADC.c: 41:             ADCON0bits.CHS3 = 0;
  2535  0102  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0103  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0104  129F               	bcf	31,5	;volatile
  2538                           
  2539                           ;Config_ADC.c: 42:             ADCON0bits.CHS2 = 0;
  2540  0105  121F               	bcf	31,4	;volatile
  2541                           
  2542                           ;Config_ADC.c: 43:             ADCON0bits.CHS1 = 0;
  2543  0106  119F               	bcf	31,3	;volatile
  2544                           
  2545                           ;Config_ADC.c: 44:             ADCON0bits.CHS0 = 1;
  2546  0107  151F               	bsf	31,2	;volatile
  2547                           
  2548                           ;Config_ADC.c: 45:             break;
  2549  0108  29AC               	goto	i1l1116
  2550  0109                     i1l195:	
  2551                           ;Config_ADC.c: 46:         case 2:
  2552                           
  2553                           
  2554                           ;Config_ADC.c: 47:             ADCON0bits.CHS3 = 0;
  2555  0109  1283               	bcf	3,5	;RP0=0, select bank0
  2556  010A  1303               	bcf	3,6	;RP1=0, select bank0
  2557  010B  129F               	bcf	31,5	;volatile
  2558                           
  2559                           ;Config_ADC.c: 48:             ADCON0bits.CHS2 = 0;
  2560  010C  121F               	bcf	31,4	;volatile
  2561                           
  2562                           ;Config_ADC.c: 49:             ADCON0bits.CHS1 = 1;
  2563  010D  159F               	bsf	31,3	;volatile
  2564                           
  2565                           ;Config_ADC.c: 50:             ADCON0bits.CHS0 = 0;
  2566  010E  111F               	bcf	31,2	;volatile
  2567                           
  2568                           ;Config_ADC.c: 51:             break;
  2569  010F  29AC               	goto	i1l1116
  2570  0110                     i1l196:	
  2571                           ;Config_ADC.c: 52:         case 3:
  2572                           
  2573                           
  2574                           ;Config_ADC.c: 53:             ADCON0bits.CHS3 = 0;
  2575  0110  1283               	bcf	3,5	;RP0=0, select bank0
  2576  0111  1303               	bcf	3,6	;RP1=0, select bank0
  2577  0112  129F               	bcf	31,5	;volatile
  2578                           
  2579                           ;Config_ADC.c: 54:             ADCON0bits.CHS2 = 0;
  2580  0113  121F               	bcf	31,4	;volatile
  2581                           
  2582                           ;Config_ADC.c: 55:             ADCON0bits.CHS1 = 1;
  2583  0114  159F               	bsf	31,3	;volatile
  2584                           
  2585                           ;Config_ADC.c: 56:             ADCON0bits.CHS0 = 1;
  2586  0115  151F               	bsf	31,2	;volatile
  2587                           
  2588                           ;Config_ADC.c: 57:             break;
  2589  0116  29AC               	goto	i1l1116
  2590  0117                     i1l197:	
  2591                           ;Config_ADC.c: 58:         case 4:
  2592                           
  2593                           
  2594                           ;Config_ADC.c: 59:             ADCON0bits.CHS3 = 0;
  2595  0117  1283               	bcf	3,5	;RP0=0, select bank0
  2596  0118  1303               	bcf	3,6	;RP1=0, select bank0
  2597  0119  129F               	bcf	31,5	;volatile
  2598                           
  2599                           ;Config_ADC.c: 60:             ADCON0bits.CHS2 = 1;
  2600  011A  161F               	bsf	31,4	;volatile
  2601                           
  2602                           ;Config_ADC.c: 61:             ADCON0bits.CHS1 = 0;
  2603  011B  119F               	bcf	31,3	;volatile
  2604                           
  2605                           ;Config_ADC.c: 62:             ADCON0bits.CHS0 = 0;
  2606  011C  111F               	bcf	31,2	;volatile
  2607                           
  2608                           ;Config_ADC.c: 63:             break;
  2609  011D  29AC               	goto	i1l1116
  2610  011E                     i1l198:	
  2611                           ;Config_ADC.c: 64:         case 5:
  2612                           
  2613                           
  2614                           ;Config_ADC.c: 65:             ADCON0bits.CHS3 = 0;
  2615  011E  1283               	bcf	3,5	;RP0=0, select bank0
  2616  011F  1303               	bcf	3,6	;RP1=0, select bank0
  2617  0120  129F               	bcf	31,5	;volatile
  2618                           
  2619                           ;Config_ADC.c: 66:             ADCON0bits.CHS2 = 1;
  2620  0121  161F               	bsf	31,4	;volatile
  2621                           
  2622                           ;Config_ADC.c: 67:             ADCON0bits.CHS1 = 0;
  2623  0122  119F               	bcf	31,3	;volatile
  2624                           
  2625                           ;Config_ADC.c: 68:             ADCON0bits.CHS0 = 1;
  2626  0123  151F               	bsf	31,2	;volatile
  2627                           
  2628                           ;Config_ADC.c: 69:             break;
  2629  0124  29AC               	goto	i1l1116
  2630  0125                     i1l199:	
  2631                           ;Config_ADC.c: 70:         case 6:
  2632                           
  2633                           
  2634                           ;Config_ADC.c: 71:             ADCON0bits.CHS3 = 0;
  2635  0125  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0126  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0127  129F               	bcf	31,5	;volatile
  2638                           
  2639                           ;Config_ADC.c: 72:             ADCON0bits.CHS2 = 1;
  2640  0128  161F               	bsf	31,4	;volatile
  2641                           
  2642                           ;Config_ADC.c: 73:             ADCON0bits.CHS1 = 1;
  2643  0129  159F               	bsf	31,3	;volatile
  2644                           
  2645                           ;Config_ADC.c: 74:             ADCON0bits.CHS0 = 0;
  2646  012A  111F               	bcf	31,2	;volatile
  2647                           
  2648                           ;Config_ADC.c: 75:             break;
  2649  012B  29AC               	goto	i1l1116
  2650  012C                     i1l200:	
  2651                           ;Config_ADC.c: 76:         case 7:
  2652                           
  2653                           
  2654                           ;Config_ADC.c: 77:             ADCON0bits.CHS3 = 0;
  2655  012C  1283               	bcf	3,5	;RP0=0, select bank0
  2656  012D  1303               	bcf	3,6	;RP1=0, select bank0
  2657  012E  129F               	bcf	31,5	;volatile
  2658                           
  2659                           ;Config_ADC.c: 78:             ADCON0bits.CHS2 = 1;
  2660  012F  161F               	bsf	31,4	;volatile
  2661                           
  2662                           ;Config_ADC.c: 79:             ADCON0bits.CHS1 = 1;
  2663  0130  159F               	bsf	31,3	;volatile
  2664                           
  2665                           ;Config_ADC.c: 80:             ADCON0bits.CHS0 = 1;
  2666  0131  151F               	bsf	31,2	;volatile
  2667                           
  2668                           ;Config_ADC.c: 81:             break;
  2669  0132  29AC               	goto	i1l1116
  2670  0133                     i1l201:	
  2671                           ;Config_ADC.c: 82:         case 8:
  2672                           
  2673                           
  2674                           ;Config_ADC.c: 83:             ADCON0bits.CHS3 = 1;
  2675  0133  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0134  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0135  169F               	bsf	31,5	;volatile
  2678                           
  2679                           ;Config_ADC.c: 84:             ADCON0bits.CHS2 = 0;
  2680  0136  121F               	bcf	31,4	;volatile
  2681                           
  2682                           ;Config_ADC.c: 85:             ADCON0bits.CHS1 = 0;
  2683  0137  119F               	bcf	31,3	;volatile
  2684                           
  2685                           ;Config_ADC.c: 86:             ADCON0bits.CHS0 = 0;
  2686  0138  111F               	bcf	31,2	;volatile
  2687                           
  2688                           ;Config_ADC.c: 87:             break;
  2689  0139  29AC               	goto	i1l1116
  2690  013A                     i1l202:	
  2691                           ;Config_ADC.c: 88:         case 9:
  2692                           
  2693                           
  2694                           ;Config_ADC.c: 89:             ADCON0bits.CHS3 = 1;
  2695  013A  1283               	bcf	3,5	;RP0=0, select bank0
  2696  013B  1303               	bcf	3,6	;RP1=0, select bank0
  2697  013C  169F               	bsf	31,5	;volatile
  2698                           
  2699                           ;Config_ADC.c: 90:             ADCON0bits.CHS2 = 0;
  2700  013D  121F               	bcf	31,4	;volatile
  2701                           
  2702                           ;Config_ADC.c: 91:             ADCON0bits.CHS1 = 0;
  2703  013E  119F               	bcf	31,3	;volatile
  2704                           
  2705                           ;Config_ADC.c: 92:             ADCON0bits.CHS0 = 1;
  2706  013F  151F               	bsf	31,2	;volatile
  2707                           
  2708                           ;Config_ADC.c: 93:             break;
  2709  0140  29AC               	goto	i1l1116
  2710  0141                     i1l203:	
  2711                           ;Config_ADC.c: 94:         case 10:
  2712                           
  2713                           
  2714                           ;Config_ADC.c: 95:             ADCON0bits.CHS3 = 1;
  2715  0141  1283               	bcf	3,5	;RP0=0, select bank0
  2716  0142  1303               	bcf	3,6	;RP1=0, select bank0
  2717  0143  169F               	bsf	31,5	;volatile
  2718                           
  2719                           ;Config_ADC.c: 96:             ADCON0bits.CHS2 = 0;
  2720  0144  121F               	bcf	31,4	;volatile
  2721                           
  2722                           ;Config_ADC.c: 97:             ADCON0bits.CHS1 = 1;
  2723  0145  159F               	bsf	31,3	;volatile
  2724                           
  2725                           ;Config_ADC.c: 98:             ADCON0bits.CHS0 = 0;
  2726  0146  111F               	bcf	31,2	;volatile
  2727                           
  2728                           ;Config_ADC.c: 99:             break;
  2729  0147  29AC               	goto	i1l1116
  2730  0148                     i1l204:	
  2731                           ;Config_ADC.c: 100:         case 11:
  2732                           
  2733                           
  2734                           ;Config_ADC.c: 101:             ADCON0bits.CHS3 = 1;
  2735  0148  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0149  1303               	bcf	3,6	;RP1=0, select bank0
  2737  014A  169F               	bsf	31,5	;volatile
  2738                           
  2739                           ;Config_ADC.c: 102:             ADCON0bits.CHS2 = 0;
  2740  014B  121F               	bcf	31,4	;volatile
  2741                           
  2742                           ;Config_ADC.c: 103:             ADCON0bits.CHS1 = 1;
  2743  014C  159F               	bsf	31,3	;volatile
  2744                           
  2745                           ;Config_ADC.c: 104:             ADCON0bits.CHS0 = 1;
  2746  014D  151F               	bsf	31,2	;volatile
  2747                           
  2748                           ;Config_ADC.c: 105:             break;
  2749  014E  29AC               	goto	i1l1116
  2750  014F                     i1l205:	
  2751                           ;Config_ADC.c: 106:         case 12:
  2752                           
  2753                           
  2754                           ;Config_ADC.c: 107:             ADCON0bits.CHS3 = 1;
  2755  014F  1283               	bcf	3,5	;RP0=0, select bank0
  2756  0150  1303               	bcf	3,6	;RP1=0, select bank0
  2757  0151  169F               	bsf	31,5	;volatile
  2758                           
  2759                           ;Config_ADC.c: 108:             ADCON0bits.CHS2 = 1;
  2760  0152  161F               	bsf	31,4	;volatile
  2761                           
  2762                           ;Config_ADC.c: 109:             ADCON0bits.CHS1 = 0;
  2763  0153  119F               	bcf	31,3	;volatile
  2764                           
  2765                           ;Config_ADC.c: 110:             ADCON0bits.CHS0 = 0;
  2766  0154  111F               	bcf	31,2	;volatile
  2767                           
  2768                           ;Config_ADC.c: 111:             break;
  2769  0155  29AC               	goto	i1l1116
  2770  0156                     i1l206:	
  2771                           ;Config_ADC.c: 112:         case 13:
  2772                           
  2773                           
  2774                           ;Config_ADC.c: 113:             ADCON0bits.CHS3 = 1;
  2775  0156  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0157  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0158  169F               	bsf	31,5	;volatile
  2778                           
  2779                           ;Config_ADC.c: 114:             ADCON0bits.CHS2 = 1;
  2780  0159  161F               	bsf	31,4	;volatile
  2781                           
  2782                           ;Config_ADC.c: 115:             ADCON0bits.CHS1 = 0;
  2783  015A  119F               	bcf	31,3	;volatile
  2784                           
  2785                           ;Config_ADC.c: 116:             ADCON0bits.CHS0 = 1;
  2786  015B  151F               	bsf	31,2	;volatile
  2787                           
  2788                           ;Config_ADC.c: 117:             break;
  2789  015C  29AC               	goto	i1l1116
  2790  015D                     i1l207:	
  2791                           ;Config_ADC.c: 118:         case 14:
  2792                           
  2793                           
  2794                           ;Config_ADC.c: 119:             ADCON0bits.CHS3 = 1;
  2795  015D  1283               	bcf	3,5	;RP0=0, select bank0
  2796  015E  1303               	bcf	3,6	;RP1=0, select bank0
  2797  015F  169F               	bsf	31,5	;volatile
  2798                           
  2799                           ;Config_ADC.c: 120:             ADCON0bits.CHS2 = 1;
  2800  0160  161F               	bsf	31,4	;volatile
  2801                           
  2802                           ;Config_ADC.c: 121:             ADCON0bits.CHS1 = 1;
  2803  0161  159F               	bsf	31,3	;volatile
  2804                           
  2805                           ;Config_ADC.c: 122:             ADCON0bits.CHS0 = 0;
  2806  0162  111F               	bcf	31,2	;volatile
  2807                           
  2808                           ;Config_ADC.c: 123:             break;
  2809  0163  29AC               	goto	i1l1116
  2810  0164                     i1l208:	
  2811                           ;Config_ADC.c: 124:         case 15:
  2812                           
  2813                           
  2814                           ;Config_ADC.c: 125:             ADCON0bits.CHS3 = 1;
  2815  0164  1283               	bcf	3,5	;RP0=0, select bank0
  2816  0165  1303               	bcf	3,6	;RP1=0, select bank0
  2817  0166  169F               	bsf	31,5	;volatile
  2818                           
  2819                           ;Config_ADC.c: 126:             ADCON0bits.CHS2 = 1;
  2820  0167  161F               	bsf	31,4	;volatile
  2821                           
  2822                           ;Config_ADC.c: 127:             ADCON0bits.CHS1 = 1;
  2823  0168  159F               	bsf	31,3	;volatile
  2824                           
  2825                           ;Config_ADC.c: 128:             ADCON0bits.CHS0 = 1;
  2826  0169  151F               	bsf	31,2	;volatile
  2827                           
  2828                           ;Config_ADC.c: 129:             break;
  2829  016A  29AC               	goto	i1l1116
  2830  016B                     i1l209:	
  2831                           ;Config_ADC.c: 130:         default:
  2832                           
  2833                           
  2834                           ;Config_ADC.c: 131:             ADCON0bits.CHS3 = 0;
  2835  016B  1283               	bcf	3,5	;RP0=0, select bank0
  2836  016C  1303               	bcf	3,6	;RP1=0, select bank0
  2837  016D  129F               	bcf	31,5	;volatile
  2838                           
  2839                           ;Config_ADC.c: 132:             ADCON0bits.CHS2 = 0;
  2840  016E  121F               	bcf	31,4	;volatile
  2841                           
  2842                           ;Config_ADC.c: 133:             ADCON0bits.CHS1 = 0;
  2843  016F  119F               	bcf	31,3	;volatile
  2844                           
  2845                           ;Config_ADC.c: 134:             ADCON0bits.CHS0 = 0;
  2846  0170  111F               	bcf	31,2	;volatile
  2847                           
  2848                           ;Config_ADC.c: 135:             break;
  2849  0171  29AC               	goto	i1l1116
  2850  0172                     i1l1114:
  2851  0172  0872               	movf	ADC_Config@AN_num,w
  2852  0173  00F0               	movwf	??_ADC_Config
  2853  0174  01F1               	clrf	??_ADC_Config+1
  2854                           
  2855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2856                           ; Switch size 1, requested type "simple"
  2857                           ; Number of cases is 1, Range of values is 0 to 0
  2858                           ; switch strategies available:
  2859                           ; Name         Instructions Cycles
  2860                           ; simple_byte            4     3 (average)
  2861                           ; direct_byte           11     8 (fixed)
  2862                           ; jumptable            260     6 (fixed)
  2863                           ;	Chosen strategy is simple_byte
  2864  0175  0871               	movf	??_ADC_Config+1,w
  2865  0176  3A00               	xorlw	0	; case 0
  2866  0177  1903               	skipnz
  2867  0178  297A               	goto	i1l1380
  2868  0179  296B               	goto	i1l209
  2869  017A                     i1l1380:
  2870                           
  2871                           ; Switch size 1, requested type "simple"
  2872                           ; Number of cases is 16, Range of values is 0 to 15
  2873                           ; switch strategies available:
  2874                           ; Name         Instructions Cycles
  2875                           ; simple_byte           49    25 (average)
  2876                           ; direct_byte           56     8 (fixed)
  2877                           ; jumptable            260     6 (fixed)
  2878                           ;	Chosen strategy is simple_byte
  2879  017A  0870               	movf	??_ADC_Config,w
  2880  017B  3A00               	xorlw	0	; case 0
  2881  017C  1903               	skipnz
  2882  017D  28FB               	goto	i1l192
  2883  017E  3A01               	xorlw	1	; case 1
  2884  017F  1903               	skipnz
  2885  0180  2902               	goto	i1l194
  2886  0181  3A03               	xorlw	3	; case 2
  2887  0182  1903               	skipnz
  2888  0183  2909               	goto	i1l195
  2889  0184  3A01               	xorlw	1	; case 3
  2890  0185  1903               	skipnz
  2891  0186  2910               	goto	i1l196
  2892  0187  3A07               	xorlw	7	; case 4
  2893  0188  1903               	skipnz
  2894  0189  2917               	goto	i1l197
  2895  018A  3A01               	xorlw	1	; case 5
  2896  018B  1903               	skipnz
  2897  018C  291E               	goto	i1l198
  2898  018D  3A03               	xorlw	3	; case 6
  2899  018E  1903               	skipnz
  2900  018F  2925               	goto	i1l199
  2901  0190  3A01               	xorlw	1	; case 7
  2902  0191  1903               	skipnz
  2903  0192  292C               	goto	i1l200
  2904  0193  3A0F               	xorlw	15	; case 8
  2905  0194  1903               	skipnz
  2906  0195  2933               	goto	i1l201
  2907  0196  3A01               	xorlw	1	; case 9
  2908  0197  1903               	skipnz
  2909  0198  293A               	goto	i1l202
  2910  0199  3A03               	xorlw	3	; case 10
  2911  019A  1903               	skipnz
  2912  019B  2941               	goto	i1l203
  2913  019C  3A01               	xorlw	1	; case 11
  2914  019D  1903               	skipnz
  2915  019E  2948               	goto	i1l204
  2916  019F  3A07               	xorlw	7	; case 12
  2917  01A0  1903               	skipnz
  2918  01A1  294F               	goto	i1l205
  2919  01A2  3A01               	xorlw	1	; case 13
  2920  01A3  1903               	skipnz
  2921  01A4  2956               	goto	i1l206
  2922  01A5  3A03               	xorlw	3	; case 14
  2923  01A6  1903               	skipnz
  2924  01A7  295D               	goto	i1l207
  2925  01A8  3A01               	xorlw	1	; case 15
  2926  01A9  1903               	skipnz
  2927  01AA  2964               	goto	i1l208
  2928  01AB  296B               	goto	i1l209
  2929  01AC                     i1l1116:
  2930                           
  2931                           ;Config_ADC.c: 137:     ADCON1 = 0b00000000;
  2932  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  2933  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  2934  01AE  019F               	clrf	31	;volatile
  2935  01AF                     i1l1118:
  2936                           
  2937                           ;Config_ADC.c: 138:     ADCON0bits.ADCS1 = 0;
  2938  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  2939  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  2940  01B1  139F               	bcf	31,7	;volatile
  2941  01B2                     i1l1120:
  2942                           
  2943                           ;Config_ADC.c: 139:     ADCON0bits.ADCS0 = 1;
  2944  01B2  171F               	bsf	31,6	;volatile
  2945  01B3                     i1l1122:
  2946                           
  2947                           ;Config_ADC.c: 140:     ADCON0bits.ADON = 1;
  2948  01B3  141F               	bsf	31,0	;volatile
  2949  01B4                     i1l210:
  2950  01B4  0008               	return
  2951  01B5                     __end_of_ADC_Config:
  2952                           
  2953                           	psect	text15
  2954  042B                     __ptext15:	
  2955 ;; *************** function _ADC *****************
  2956 ;; Defined at:
  2957 ;;		line 11 in file "Config_ADC.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  ADRESL_         1    wreg     unsigned char 
  2960 ;;  ADRESH_         1    0[COMMON] unsigned char 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  ADRESL_         1    0[COMMON] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  2    0[COMMON] int 
  2965 ;; Registers used:
  2966 ;;		wreg
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2972 ;;      Params:         3       0       0       0       0
  2973 ;;      Locals:         0       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0
  2975 ;;      Totals:         3       0       0       0       0
  2976 ;;Total ram usage:        3 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_ISR
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           
  2986                           ;psect for function _ADC
  2987  042B                     _ADC:
  2988  042B                     i1l1128:	
  2989                           ;incstack = 0
  2990                           ; Regs used in _ADC: [wreg]
  2991                           
  2992                           
  2993                           ;Config_ADC.c: 12:     VAL = (ADRESL << 8) | ADRESH;
  2994  042B  1683               	bsf	3,5	;RP0=1, select bank1
  2995  042C  1303               	bcf	3,6	;RP1=0, select bank1
  2996  042D  081E               	movf	30,w	;volatile
  2997  042E  00F9               	movwf	_VAL+1
  2998  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2999  0430  1303               	bcf	3,6	;RP1=0, select bank0
  3000  0431  081E               	movf	30,w	;volatile
  3001  0432  00F8               	movwf	_VAL
  3002                           
  3003                           ;Config_ADC.c: 13:     return VAL;
  3004  0433  0879               	movf	_VAL+1,w
  3005  0434  00F1               	movwf	?_ADC+1
  3006  0435  0878               	movf	_VAL,w
  3007  0436  00F0               	movwf	?_ADC
  3008  0437                     i1l179:
  3009  0437  0008               	return
  3010  0438                     __end_of_ADC:
  3011  007E                     btemp	set	126	;btemp
  3012  007E                     wtemp0	set	126
  3013                           
  3014                           	psect	config
  3015                           
  3016                           ;Config register CONFIG1 @ 0x2007
  3017                           ;	Oscillator Selection bits
  3018                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  3019                           ;	Watchdog Timer Enable bit
  3020                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3021                           ;	Power-up Timer Enable bit
  3022                           ;	PWRTE = OFF, PWRT disabled
  3023                           ;	RE3/MCLR pin function select bit
  3024                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3025                           ;	Code Protection bit
  3026                           ;	CP = OFF, Program memory code protection is disabled
  3027                           ;	Data Code Protection bit
  3028                           ;	CPD = OFF, Data memory code protection is disabled
  3029                           ;	Brown Out Reset Selection bits
  3030                           ;	BOREN = OFF, BOR disabled
  3031                           ;	Internal External Switchover bit
  3032                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3033                           ;	Fail-Safe Clock Monitor Enabled bit
  3034                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3035                           ;	Low Voltage Programming Enable bit
  3036                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3037                           ;	In-Circuit Debugger Mode bit
  3038                           ;	DEBUG = 0x1, unprogrammed default
  3039  2007                     	org	8199
  3040  2007  20D1               	dw	8401
  3041                           
  3042                           ;Config register CONFIG2 @ 0x2008
  3043                           ;	Brown-out Reset Selection bit
  3044                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3045                           ;	Flash Program Memory Self Write Enable bits
  3046                           ;	WRT = OFF, Write protection off
  3047  2008                     	org	8200
  3048  2008  3FFF               	dw	16383

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     14      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_ADC
    _ISR->_ADC_Config

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _main->___fltol
    _setup->_initOsc
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1560
                                             11 BANK0      3     3      0
                   _Config_INTERRUPT
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___fltol
                       _bin_to_float
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _bin_to_float                                         6     1      5       0
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     233
                                              2 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       1     1      0      44
                                              1 BANK0      1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     770
                                              4 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  5     5      0     174
                                              3 COMMON     5     5      0
                                _ADC
                         _ADC_Config
 ---------------------------------------------------------------------------------
 (5) _ADC_Config                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _ADC                                                  4     1      3     152
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_INTERRUPT
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fltol
   _bin_to_float
   _setup
     _initOsc

 _ISR (ROOT)
   _ADC
   _ADC_Config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      1F       5       38.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2D      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 08:32:54 2021

                        _a 007A                          pc 0002                         l95 0459  
                       l98 03EF                         fsr 0004        __size_of_ADC_Config 00BC  
                      l101 044A                        l110 02A5                        l111 02AB  
                      l112 02B1                        l113 02B7                        l130 034B  
                      l114 02BD                        l115 02C3                        l107 0299  
                      l116 02C9                        l108 02F1                        l133 0458  
                      l117 02F2                        l109 029F                        l136 040B  
                      l145 03A3                        l154 03CC                        l139 042A  
                      l148 0441                        _ADC 042B                        l482 0230  
                      l492 0230                        l489 021B                        u200 0354  
                      u201 0353                        u220 037F                        u300 0208  
                      u221 037E                        u301 0207                        u310 020F  
                      u215 035C                        u311 020E                        u240 03CC  
                      u241 03CB                        u330 0220                        u250 01C2  
                      u235 0387                        u331 021F                        u251 01C1  
                      u340 0225                        u260 01D9                        u341 0224  
                      u325 0212                        u270 01EF                        u407 02FF  
                      u271 01EE                        u280 01F6                        u417 030F  
                      u281 01F5                        u265 01D4                        u427 031D  
                      _ISR 0231                        u437 032A                        u447 0403  
                      u295 01F8                        u397 00EE                        _VAL 0078  
                      fsr0 0004                        indf 0000                       ?_ADC 0070  
                     ?_ISR 0070               ___fltol@exp1 003B                       l1100 03F3  
                     l1102 03F4                       l1104 03FA                       l1200 037F  
                     l1106 03FD                       l1202 0390                       l1210 03AA  
                     l1108 0408                       l1204 0395                       l1212 03B7  
                     l1140 03DC                       l1132 03CD                       l1300 009A  
                     l1206 039B                       l1214 03BF                       l1230 01EB  
                     l1222 01CB                       l1150 03E5                       l1142 03DF  
                     l1134 03D3                       l1310 00E6                       l1302 00B1  
                     l1160 0444                       l1208 03A7                       l1232 01EF  
                     l1240 0209                       l1224 01E0                       l1216 01B5  
                     l1152 03E6                       l1144 03E0                       l1136 03D7  
                     l1304 00BD                       l1162 0447                       l1170 0313  
                     l1250 0225                       l1226 01E1                       l1218 01C2  
                     l1154 03E9                       l1146 03E1                       l1138 03D8  
                     l1306 00D4                       l1084 0456                       l1180 0339  
                     l1172 0319                       l1164 02F3                       l1228 01E9  
                     l1092 02CF                       l1156 03EC                       l1148 03E4  
                     l1308 00E0                       l1158 0442                       l1182 033F  
                     l1174 0326                       l1166 02F9                       l1190 0354  
                     l1086 043B                       l1246 0210                       l1238 01F7  
                     l1184 0345                       l1176 032D                       l1168 0303  
                     l1192 0365                       l1248 0220                       l1088 0298  
                     l1280 0029                       l1186 041E                       l1178 0333  
                     l1194 036A                       l1290 005A                       l1282 002E  
                     l1196 0370                       l1188 034F                       l1292 006C  
                     l1284 0033                       l1198 0379                       l1294 0078  
                     l1286 0045                       l1278 0024                       l1296 008A  
                     l1288 0055                       l1378 02D7                       l1298 0090  
                     STR_1 0412                       STR_2 0416                       STR_3 041A  
                     i1l84 028C          ?_Lcd_Write_String 0070                       _main 0024  
                     btemp 007E   __end_of_Config_INTERRUPT 044B                       start 000E  
       ??_Lcd_Write_String 0033            __end_of_Lcd_Cmd 040C                      ??_ADC 0073  
                    ??_ISR 0073              ___fltol@sign1 003A                      ?_main 0070  
          __end_of___fltol 0231                      _ANSEL 0188                      i1l200 012C  
                    i1l201 0133                      i1l210 01B4                      i1l202 013A  
                    i1l203 0141                      i1l204 0148                      i1l205 014F  
                    i1l206 0156                      i1l207 015D                      i1l208 0164  
                    i1l209 016B                      i1l192 00FB                      i1l194 0102  
                    i1l179 0437                      i1l195 0109                      i1l196 0110  
                    i1l197 0117                      i1l198 011E                      i1l199 0125  
                    u35_20 0237                      u35_21 0236                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      u36_20 0261                      u36_21 0260  
                    u37_20 028A                      u37_21 0289                      u45_27 0242  
                    u46_27 026B    __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089       __end_of_bin_to_float 045A           ADC_Config@AN_num 0072  
          __end_of_initOsc 02F3                      _setup 03CD                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 034C  
         __end_of_Lcd_Port 0459            __initialization 0011               __end_of_main 00F9  
                   ??_main 003C         __size_of_Lcd_Clear 000D                     _ADCON1 009F  
                   _ADRESH 001E                     _ADRESL 009E                initOsc@IRCF 0033  
                   ?_setup 0070                     _ANSELH 0189                     i1l1110 00FA  
                   i1l1120 01B2                     i1l1122 01B3                     i1l1114 0172  
                   i1l1116 01AC                     i1l1118 01AF                     i1l1128 042B  
                   i1l1260 0247                     i1l1252 0231                     i1l1270 0270  
                   i1l1262 024B                     i1l1254 0237                     i1l1272 0274  
                   i1l1264 025D                     i1l1256 0238                     i1l1274 0284  
                   i1l1266 0261                     i1l1258 023E                     i1l1380 017A  
                   i1l1276 028A                     i1l1268 0267               ??_ADC_Config 0070  
                   _INTCON 000B                  ??_Lcd_Cmd 0032                     _S1_val 0024  
                   _S2_val 0020    __size_of_Lcd_Write_Char 000A                  ??___fltol 0035  
       __end_of_ADC_Config 01B5                  ??_initOsc 0031                     saved_w 007E  
               ADC@ADRESH_ 0070                 ADC@ADRESL_ 0070            Lcd_Set_Cursor@a 0038  
          Lcd_Set_Cursor@b 0035            Lcd_Set_Cursor@y 003A            Lcd_Set_Cursor@z 0039  
  __end_of__initialization 0020          __end_of_Lcd_Clear 042B                 ___fltol@f1 0031  
           __pcstackCOMMON 0070              __end_of_setup 03F0      __size_of_bin_to_float 0001  
           _Lcd_Set_Cursor 034C                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0034                 __pbssBANK0 0020          ?_Config_INTERRUPT 0070  
             _bin_to_float 0459                 __pmaintext 0024         ??_Config_INTERRUPT 0031  
               __pintentry 0004  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 03A4  
                  _S3_cont 0030                 ??_Lcd_Init 0035                 ??_Lcd_Port 0031  
               __stringtab 040C             _Lcd_Write_Char 0438                    _Lcd_Cmd 03F0  
                  ___fltol 01B5            ?_Lcd_Set_Cursor 0035                    __ptext1 03CD  
                  __ptext2 0295                    __ptext3 0459                    __ptext4 01B5  
                  __ptext5 03A4                    __ptext6 0438                    __ptext7 034C  
                  __ptext8 02F3                    __ptext9 041E               __size_of_ADC 000D  
             __size_of_ISR 0064                    _initOsc 0295        bin_to_float@ADC_VAL 0070  
                  clrloop0 044C     __end_of_Lcd_Write_Char 0442       end_of_initialization 0020  
                Lcd_Port@a 0031                  _PORTEbits 0009            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0035          Lcd_Write_String@i 0033                  _Lcd_Clear 041E  
              _ADC_VALOR_1 002E                _ADC_VALOR_2 007C           _Lcd_Write_String 03A4  
      start_initialization 0011                __end_of_ADC 0438                __end_of_ISR 0295  
        __size_of_Lcd_Init 0059          __size_of_Lcd_Port 0006                 ?_Lcd_Clear 0070  
          Lcd_Write_Char@a 0032  __size_of_Config_INTERRUPT 0009                __pbssCOMMON 0078  
                ___latbits 0002              __pcstackBANK0 0031                   ?_Lcd_Cmd 0070  
         ??_Lcd_Set_Cursor 0036                   ?___fltol 0031                  __pstrings 040C  
                 ?_initOsc 0070             __size_of_setup 0023          interrupt_function 0004  
                clear_ram0 044B                   _PIE1bits 008C                   Lcd_Cmd@a 0034  
                 _PIR1bits 000C                ??_Lcd_Clear 0035                   _VAL_SWAP 002C  
               _ADCON0bits 001F                __stringbase 0411           ??_Lcd_Write_Char 0032  
                 _Lcd_Init 02F3                   _Lcd_Port 0453                 _ADC_Config 00F9  
 __end_of_Lcd_Write_String 03CD           __size_of_Lcd_Cmd 001C           __size_of___fltol 007C  
       __end_of__stringtab 0412           _Config_INTERRUPT 0442           __size_of_initOsc 005E  
                 __ptext10 03F0                   __ptext11 0453                   __ptext12 0442  
                 __ptext13 0231                   __ptext14 00F9                   __ptext15 042B  
            __size_of_main 00D5              ?_bin_to_float 0031                _VAL_NIBBLE1 002A  
              _VAL_NIBBLE2 0028                   intlevel1 0000                ?_ADC_Config 0070  
           ??_bin_to_float 0036                  stringcode 040C                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 003B                   stringdir 040C                   stringtab 040C  
