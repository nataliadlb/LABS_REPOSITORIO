

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 15:55:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  0105                     	;# 
   372  0107                     	;# 
   373  0108                     	;# 
   374  0109                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0185                     	;# 
   381  0187                     	;# 
   382  0188                     	;# 
   383  0189                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  008F                     	;# 
   431  0090                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009E                     	;# 
   448  009F                     	;# 
   449  0105                     	;# 
   450  0107                     	;# 
   451  0108                     	;# 
   452  0109                     	;# 
   453  010C                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  010E                     	;# 
   457  010F                     	;# 
   458  0185                     	;# 
   459  0187                     	;# 
   460  0188                     	;# 
   461  0189                     	;# 
   462  018C                     	;# 
   463  018D                     	;# 
   464  0000                     	;# 
   465  0001                     	;# 
   466  0002                     	;# 
   467  0003                     	;# 
   468  0004                     	;# 
   469  0005                     	;# 
   470  0006                     	;# 
   471  0007                     	;# 
   472  0008                     	;# 
   473  0009                     	;# 
   474  000A                     	;# 
   475  000B                     	;# 
   476  000C                     	;# 
   477  000D                     	;# 
   478  000E                     	;# 
   479  000E                     	;# 
   480  000F                     	;# 
   481  0010                     	;# 
   482  0011                     	;# 
   483  0012                     	;# 
   484  0013                     	;# 
   485  0014                     	;# 
   486  0015                     	;# 
   487  0015                     	;# 
   488  0016                     	;# 
   489  0017                     	;# 
   490  0018                     	;# 
   491  0019                     	;# 
   492  001A                     	;# 
   493  001B                     	;# 
   494  001B                     	;# 
   495  001C                     	;# 
   496  001D                     	;# 
   497  001E                     	;# 
   498  001F                     	;# 
   499  0081                     	;# 
   500  0085                     	;# 
   501  0086                     	;# 
   502  0087                     	;# 
   503  0088                     	;# 
   504  0089                     	;# 
   505  008C                     	;# 
   506  008D                     	;# 
   507  008E                     	;# 
   508  008F                     	;# 
   509  0090                     	;# 
   510  0091                     	;# 
   511  0092                     	;# 
   512  0093                     	;# 
   513  0093                     	;# 
   514  0093                     	;# 
   515  0094                     	;# 
   516  0095                     	;# 
   517  0096                     	;# 
   518  0097                     	;# 
   519  0098                     	;# 
   520  0099                     	;# 
   521  009A                     	;# 
   522  009B                     	;# 
   523  009C                     	;# 
   524  009D                     	;# 
   525  009E                     	;# 
   526  009F                     	;# 
   527  0105                     	;# 
   528  0107                     	;# 
   529  0108                     	;# 
   530  0109                     	;# 
   531  010C                     	;# 
   532  010C                     	;# 
   533  010D                     	;# 
   534  010E                     	;# 
   535  010F                     	;# 
   536  0185                     	;# 
   537  0187                     	;# 
   538  0188                     	;# 
   539  0189                     	;# 
   540  018C                     	;# 
   541  018D                     	;# 
   542                           
   543                           	psect	strings
   544  0496                     __pstrings:
   545  0496                     stringtab:
   546  0496                     __stringtab:
   547  0496                     stringcode:	
   548                           ;	String table - string pointers are 1 byte each
   549                           
   550  0496                     stringdir:
   551  0496  3004               	movlw	high stringdir
   552  0497  008A               	movwf	10
   553  0498  0804               	movf	4,w
   554  0499  0A84               	incf	4,f
   555  049A  0782               	addwf	2,f
   556  049B                     __stringbase:
   557  049B  3400               	retlw	0
   558  049C                     __end_of__stringtab:
   559  049C                     _dpowers:
   560  049C  3401               	retlw	1
   561  049D  3400               	retlw	0
   562  049E  340A               	retlw	10
   563  049F  3400               	retlw	0
   564  04A0  3464               	retlw	100
   565  04A1  3400               	retlw	0
   566  04A2  34E8               	retlw	232
   567  04A3  3403               	retlw	3
   568  04A4  3410               	retlw	16
   569  04A5  3427               	retlw	39
   570  04A6                     __end_of_dpowers:
   571  000B                     _INTCONbits	set	11
   572  0018                     _RCSTAbits	set	24
   573  0009                     _PORTEbits	set	9
   574  0009                     _PORTE	set	9
   575  0008                     _PORTD	set	8
   576  0007                     _PORTC	set	7
   577  0005                     _PORTA	set	5
   578  0019                     _TXREG	set	25
   579  001E                     _ADRESH	set	30
   580  001F                     _ADCON0bits	set	31
   581  0006                     _PORTB	set	6
   582  001A                     _RCREG	set	26
   583  000C                     _PIR1bits	set	12
   584  008C                     _PIE1bits	set	140
   585  0099                     _SPBRG	set	153
   586  009A                     _SPBRGH	set	154
   587  0098                     _TXSTAbits	set	152
   588  009F                     _ADCON1	set	159
   589  009E                     _ADRESL	set	158
   590  008F                     _OSCCONbits	set	143
   591  0089                     _TRISE	set	137
   592  0088                     _TRISD	set	136
   593  0087                     _TRISCbits	set	135
   594  0086                     _TRISB	set	134
   595  0085                     _TRISA	set	133
   596  0189                     _ANSELH	set	393
   597  0188                     _ANSEL	set	392
   598  04A6                     STR_1:
   599  04A6  3453               	retlw	83	;'S'
   600  04A7  3431               	retlw	49	;'1'
   601  04A8  343A               	retlw	58	;':'
   602  04A9  3420               	retlw	32	;' '
   603  04AA  3420               	retlw	32	;' '
   604  04AB  3420               	retlw	32	;' '
   605  04AC  3453               	retlw	83	;'S'
   606  04AD  3432               	retlw	50	;'2'
   607  04AE  343A               	retlw	58	;':'
   608  04AF  3420               	retlw	32	;' '
   609  04B0  3420               	retlw	32	;' '
   610  04B1  3453               	retlw	83	;'S'
   611  04B2  3433               	retlw	51	;'3'
   612  04B3  343A               	retlw	58	;':'
   613  04B4  3400               	retlw	0
   614  04B5                     STR_2:
   615  04B5  3425               	retlw	37	;'%'
   616  04B6  342E               	retlw	46	;'.'
   617  04B7  3433               	retlw	51	;'3'
   618  04B8  3469               	retlw	105	;'i'
   619  04B9  3456               	retlw	86	;'V'
   620  04BA  3400               	retlw	0
   621  04BB                     STR_4:
   622  04BB  3425               	retlw	37	;'%'
   623  04BC  342E               	retlw	46	;'.'
   624  04BD  3433               	retlw	51	;'3'
   625  04BE  3469               	retlw	105	;'i'
   626  04BF  3400               	retlw	0
   627  04B5                     
   628                           	psect	cinit
   629  000F                     start_initialization:	
   630                           ; #config settings
   631                           
   632  000F                     __initialization:
   633                           
   634                           ; Clear objects allocated to COMMON
   635  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   636  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   637  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   638                           
   639                           ; Clear objects allocated to BANK0
   640  0012  1383               	bcf	3,7	;select IRP bank0
   641  0013  3020               	movlw	low __pbssBANK0
   642  0014  0084               	movwf	4
   643  0015  303F               	movlw	low (__pbssBANK0+31)
   644  0016  120A  118A  2612  120A  118A  	fcall	clear_ram0
   645  001B                     end_of_initialization:	
   646                           ;End of C runtime variable initialization code
   647                           
   648  001B                     __end_of__initialization:
   649  001B  0183               	clrf	3
   650  001C  120A  118A  2B8D   	ljmp	_main	;jump to C main() function
   651                           
   652                           	psect	bssCOMMON
   653  0078                     __pbssCOMMON:
   654  0078                     _data_recive:
   655  0078                     	ds	1
   656  0079                     _ADC_toggle:
   657  0079                     	ds	1
   658  007A                     _eusart_toggle:
   659  007A                     	ds	1
   660                           
   661                           	psect	bssBANK0
   662  0020                     __pbssBANK0:
   663  0020                     _VAL_NIBBLE2:
   664  0020                     	ds	2
   665  0022                     _VAL_NIBBLE1:
   666  0022                     	ds	2
   667  0024                     _VAL_SWAP:
   668  0024                     	ds	2
   669  0026                     _VAL:
   670  0026                     	ds	2
   671  0028                     _cont:
   672  0028                     	ds	1
   673  0029                     _cont_usart:
   674  0029                     	ds	1
   675  002A                     _S2_val:
   676  002A                     	ds	1
   677  002B                     _S1_val:
   678  002B                     	ds	1
   679  002C                     _data2:
   680  002C                     	ds	8
   681  0034                     _data1:
   682  0034                     	ds	8
   683  003C                     _S3_cont:
   684  003C                     	ds	3
   685                           
   686                           	psect	clrtext
   687  0612                     clear_ram0:	
   688                           ;	Called with FSR containing the base address, and
   689                           ;	W with the last address+1
   690                           
   691  0612  0064               	clrwdt	;clear the watchdog before getting into this loop
   692  0613                     clrloop0:
   693  0613  0180               	clrf	0	;clear RAM location pointed to by FSR
   694  0614  0A84               	incf	4,f	;increment pointer
   695  0615  0604               	xorwf	4,w	;XOR with final address
   696  0616  1903               	btfsc	3,2	;have we reached the end yet?
   697  0617  3400               	retlw	0	;all done for this memory range, return
   698  0618  0604               	xorwf	4,w	;XOR again to restore value
   699  0619  2E13               	goto	clrloop0	;do the next byte
   700                           
   701                           	psect	cstackCOMMON
   702  0070                     __pcstackCOMMON:
   703  0070                     ?_isdigit:
   704  0070                     ?_setup:	
   705                           ; 1 bit 
   706                           
   707  0070                     ?_USART_Init_BaudRate:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_USART_Init:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_USART_INTERRUPT:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_Lcd_Init:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_titulos_LCD:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_ADC_channel1:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_ADC_channel2:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_ADC_to_string:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_Show_val_LCD:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_Trasmission:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_Lcd_Write_String:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_ADC_Config:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_Lcd_Write_Char:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?_initOsc:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_Lcd_Port:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_Lcd_Cmd:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_ISR:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ??_ISR:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_main:	
   762                           ; 1 bytes @ 0x0
   763                           
   764                           
   765                           ; 1 bytes @ 0x0
   766  0070                     	ds	3
   767  0073                     ??_USART_Init_BaudRate:
   768  0073                     ??_USART_Init:	
   769                           ; 1 bytes @ 0x3
   770                           
   771  0073                     ??_USART_INTERRUPT:	
   772                           ; 1 bytes @ 0x3
   773                           
   774  0073                     ??_Trasmission:	
   775                           ; 1 bytes @ 0x3
   776                           
   777  0073                     ??_ADC_Config:	
   778                           ; 1 bytes @ 0x3
   779                           
   780  0073                     ??_initOsc:	
   781                           ; 1 bytes @ 0x3
   782                           
   783  0073                     ??_Lcd_Port:	
   784                           ; 1 bytes @ 0x3
   785                           
   786  0073                     ??_isdigit:	
   787                           ; 1 bytes @ 0x3
   788                           
   789  0073                     ?___bmul:	
   790                           ; 1 bytes @ 0x3
   791                           
   792  0073                     ?___lwdiv:	
   793                           ; 1 bytes @ 0x3
   794                           
   795  0073                     Lcd_Port@a:	
   796                           ; 2 bytes @ 0x3
   797                           
   798  0073                     ___bmul@multiplicand:	
   799                           ; 1 bytes @ 0x3
   800                           
   801  0073                     _isdigit$1011:	
   802                           ; 1 bytes @ 0x3
   803                           
   804  0073                     ___lwdiv@divisor:	
   805                           ; 1 bytes @ 0x3
   806                           
   807                           
   808                           ; 2 bytes @ 0x3
   809  0073                     	ds	1
   810  0074                     ??_Lcd_Write_Char:
   811  0074                     ??_Lcd_Cmd:	
   812                           ; 1 bytes @ 0x4
   813                           
   814  0074                     ??___bmul:	
   815                           ; 1 bytes @ 0x4
   816                           
   817  0074                     isdigit@c:	
   818                           ; 1 bytes @ 0x4
   819                           
   820                           
   821                           ; 1 bytes @ 0x4
   822  0074                     	ds	1
   823  0075                     initOsc@IRCF:
   824  0075                     Lcd_Write_Char@a:	
   825                           ; 1 bytes @ 0x5
   826                           
   827  0075                     ADC_Config@AN_num:	
   828                           ; 1 bytes @ 0x5
   829                           
   830  0075                     ___bmul@product:	
   831                           ; 1 bytes @ 0x5
   832                           
   833  0075                     ___lwdiv@dividend:	
   834                           ; 1 bytes @ 0x5
   835                           
   836                           
   837                           ; 2 bytes @ 0x5
   838  0075                     	ds	1
   839  0076                     ??_setup:
   840  0076                     ??_ADC_channel1:	
   841                           ; 1 bytes @ 0x6
   842                           
   843  0076                     ??_ADC_channel2:	
   844                           ; 1 bytes @ 0x6
   845                           
   846  0076                     ??_Lcd_Write_String:	
   847                           ; 1 bytes @ 0x6
   848                           
   849  0076                     Lcd_Cmd@a:	
   850                           ; 1 bytes @ 0x6
   851                           
   852  0076                     ___bmul@multiplier:	
   853                           ; 1 bytes @ 0x6
   854                           
   855                           
   856                           ; 1 bytes @ 0x6
   857  0076                     	ds	1
   858  0077                     ?_Lcd_Set_Cursor:
   859  0077                     ??___lwdiv:	
   860                           ; 1 bytes @ 0x7
   861                           
   862  0077                     Lcd_Set_Cursor@b:	
   863                           ; 1 bytes @ 0x7
   864                           
   865                           
   866                           ; 1 bytes @ 0x7
   867  0077                     	ds	1
   868                           
   869                           	psect	cstackBANK0
   870  003F                     __pcstackBANK0:
   871  003F                     ??_Lcd_Init:
   872  003F                     ??_Lcd_Set_Cursor:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  003F                     Lcd_Write_String@a:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  003F                     ___lwdiv@counter:	
   879                           ; 1 bytes @ 0x0
   880                           
   881                           
   882                           ; 1 bytes @ 0x0
   883  003F                     	ds	1
   884  0040                     Lcd_Set_Cursor@a:
   885  0040                     Lcd_Write_String@i:	
   886                           ; 1 bytes @ 0x1
   887                           
   888  0040                     ___lwdiv@quotient:	
   889                           ; 2 bytes @ 0x1
   890                           
   891                           
   892                           ; 2 bytes @ 0x1
   893  0040                     	ds	1
   894  0041                     Lcd_Set_Cursor@temp:
   895                           
   896                           ; 1 bytes @ 0x2
   897  0041                     	ds	1
   898  0042                     ??_titulos_LCD:
   899  0042                     ??_Show_val_LCD:	
   900                           ; 1 bytes @ 0x3
   901                           
   902  0042                     ?___lwmod:	
   903                           ; 1 bytes @ 0x3
   904                           
   905  0042                     ___lwmod@divisor:	
   906                           ; 2 bytes @ 0x3
   907                           
   908                           
   909                           ; 2 bytes @ 0x3
   910  0042                     	ds	2
   911  0044                     ___lwmod@dividend:
   912                           
   913                           ; 2 bytes @ 0x5
   914  0044                     	ds	2
   915  0046                     ??___lwmod:
   916                           
   917                           ; 1 bytes @ 0x7
   918  0046                     	ds	1
   919  0047                     ___lwmod@counter:
   920                           
   921                           ; 1 bytes @ 0x8
   922  0047                     	ds	1
   923  0048                     ?_sprintf:
   924  0048                     sprintf@f:	
   925                           ; 2 bytes @ 0x9
   926                           
   927                           
   928                           ; 1 bytes @ 0x9
   929  0048                     	ds	3
   930  004B                     ??_sprintf:
   931                           
   932                           ; 1 bytes @ 0xC
   933  004B                     	ds	3
   934  004E                     sprintf@ap:
   935                           
   936                           ; 1 bytes @ 0xF
   937  004E                     	ds	1
   938  004F                     sprintf@flag:
   939                           
   940                           ; 1 bytes @ 0x10
   941  004F                     	ds	1
   942  0050                     sprintf@val:
   943                           
   944                           ; 2 bytes @ 0x11
   945  0050                     	ds	2
   946  0052                     sprintf@sp:
   947                           
   948                           ; 1 bytes @ 0x13
   949  0052                     	ds	1
   950  0053                     sprintf@prec:
   951                           
   952                           ; 1 bytes @ 0x14
   953  0053                     	ds	1
   954  0054                     sprintf@c:
   955                           
   956                           ; 1 bytes @ 0x15
   957  0054                     	ds	1
   958  0055                     ??_ADC_to_string:
   959                           
   960                           ; 1 bytes @ 0x16
   961  0055                     	ds	3
   962  0058                     ??_main:
   963                           
   964                           ; 1 bytes @ 0x19
   965  0058                     	ds	2
   966                           
   967                           	psect	maintext
   968  038D                     __pmaintext:	
   969 ;;
   970 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   971 ;;
   972 ;; *************** function _main *****************
   973 ;; Defined at:
   974 ;;		line 130 in file "pseudocodigo_lab3.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : B00/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   988 ;;      Params:         0       0       0       0       0
   989 ;;      Locals:         0       0       0       0       0
   990 ;;      Temps:          0       2       0       0       0
   991 ;;      Totals:         0       2       0       0       0
   992 ;;Total ram usage:        2 bytes
   993 ;; Hardware stack levels required when called:    5
   994 ;; This function calls:
   995 ;;		_ADC_channel1
   996 ;;		_ADC_channel2
   997 ;;		_ADC_to_string
   998 ;;		_Lcd_Init
   999 ;;		_Show_val_LCD
  1000 ;;		_Trasmission
  1001 ;;		_USART_INTERRUPT
  1002 ;;		_USART_Init
  1003 ;;		_USART_Init_BaudRate
  1004 ;;		_setup
  1005 ;;		_titulos_LCD
  1006 ;; This function is called by:
  1007 ;;		Startup code after reset
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _main
  1013  038D                     _main:
  1014  038D                     l2058:	
  1015                           ;incstack = 0
  1016                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1017                           
  1018                           
  1019                           ;pseudocodigo_lab3.c: 131:     setup();
  1020  038D  120A  118A  2530  120A  118A  	fcall	_setup
  1021  0392                     l2060:
  1022                           
  1023                           ;pseudocodigo_lab3.c: 132:     USART_Init_BaudRate();
  1024  0392  120A  118A  261A  120A  118A  	fcall	_USART_Init_BaudRate
  1025  0397                     l2062:
  1026                           
  1027                           ;pseudocodigo_lab3.c: 133:     USART_Init();
  1028  0397  120A  118A  2602  120A  118A  	fcall	_USART_Init
  1029  039C                     l2064:
  1030                           
  1031                           ;pseudocodigo_lab3.c: 134:     USART_INTERRUPT();
  1032  039C  120A  118A  2620  120A  118A  	fcall	_USART_INTERRUPT
  1033  03A1                     l2066:
  1034                           
  1035                           ;pseudocodigo_lab3.c: 135:     Lcd_Init();
  1036  03A1  120A  118A  233D  120A  118A  	fcall	_Lcd_Init
  1037                           
  1038                           ;pseudocodigo_lab3.c: 136:     titulos_LCD();
  1039  03A6  120A  118A  25DD  120A  118A  	fcall	_titulos_LCD
  1040  03AB                     l2068:
  1041                           
  1042                           ;pseudocodigo_lab3.c: 137:     cont = -1;
  1043  03AB  30FF               	movlw	255
  1044  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1045  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1046  03AE  00D8               	movwf	??_main
  1047  03AF  0858               	movf	??_main,w
  1048  03B0  00A8               	movwf	_cont
  1049  03B1                     l2070:
  1050                           
  1051                           ;pseudocodigo_lab3.c: 144:         ADC_channel1();
  1052  03B1  120A  118A  2568  120A  118A  	fcall	_ADC_channel1
  1053                           
  1054                           ;pseudocodigo_lab3.c: 145:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1055  03B6  3003               	movlw	3
  1056  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1057  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1058  03B9  00D9               	movwf	??_main+1
  1059  03BA  3097               	movlw	151
  1060  03BB  00D8               	movwf	??_main
  1061  03BC                     u1047:
  1062  03BC  0BD8               	decfsz	??_main,f
  1063  03BD  2BBC               	goto	u1047
  1064  03BE  0BD9               	decfsz	??_main+1,f
  1065  03BF  2BBC               	goto	u1047
  1066  03C0                     l2072:
  1067                           
  1068                           ;pseudocodigo_lab3.c: 146:         ADC_channel2();
  1069  03C0  120A  118A  254C  120A  118A  	fcall	_ADC_channel2
  1070  03C5                     l2074:
  1071                           
  1072                           ;pseudocodigo_lab3.c: 148:         ADC_to_string();
  1073  03C5  120A  118A  241E  120A  118A  	fcall	_ADC_to_string
  1074  03CA                     l2076:
  1075                           
  1076                           ;pseudocodigo_lab3.c: 149:         Show_val_LCD();
  1077  03CA  120A  118A  2240  120A  118A  	fcall	_Show_val_LCD
  1078  03CF                     l2078:
  1079                           
  1080                           ;pseudocodigo_lab3.c: 150:         Trasmission();
  1081  03CF  120A  118A  25C9  120A  118A  	fcall	_Trasmission
  1082  03D4  2BB1               	goto	l2070
  1083  03D5  120A  118A  280C   	ljmp	start
  1084  03D8                     __end_of_main:
  1085                           
  1086                           	psect	text1
  1087  05DD                     __ptext1:	
  1088 ;; *************** function _titulos_LCD *****************
  1089 ;; Defined at:
  1090 ;;		line 180 in file "pseudocodigo_lab3.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1104 ;;      Params:         0       0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0
  1106 ;;      Temps:          0       1       0       0       0
  1107 ;;      Totals:         0       1       0       0       0
  1108 ;;Total ram usage:        1 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; Hardware stack levels required when called:    4
  1111 ;; This function calls:
  1112 ;;		_Lcd_Set_Cursor
  1113 ;;		_Lcd_Write_String
  1114 ;; This function is called by:
  1115 ;;		_main
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           
  1120                           ;psect for function _titulos_LCD
  1121  05DD                     _titulos_LCD:
  1122  05DD                     l2024:	
  1123                           ;incstack = 0
  1124                           ; Regs used in _titulos_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1125                           
  1126                           
  1127                           ;pseudocodigo_lab3.c: 181:         Lcd_Set_Cursor(1,2);
  1128  05DD  3002               	movlw	2
  1129  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1130  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1131  05E0  00C2               	movwf	??_titulos_LCD
  1132  05E1  0842               	movf	??_titulos_LCD,w
  1133  05E2  00F7               	movwf	Lcd_Set_Cursor@b
  1134  05E3  3001               	movlw	1
  1135  05E4  120A  118A  24E9  120A  118A  	fcall	_Lcd_Set_Cursor
  1136  05E9                     l2026:
  1137                           
  1138                           ;pseudocodigo_lab3.c: 182:         Lcd_Write_String("S1:   S2:  S3:");
  1139  05E9  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1140  05EA  120A  118A  24C0  120A  118A  	fcall	_Lcd_Write_String
  1141  05EF                     l109:
  1142  05EF  0008               	return
  1143  05F0                     __end_of_titulos_LCD:
  1144                           
  1145                           	psect	text2
  1146  04C0                     __ptext2:	
  1147 ;; *************** function _Lcd_Write_String *****************
  1148 ;; Defined at:
  1149 ;;		line 70 in file "LCD.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  a               1    wreg     PTR unsigned char 
  1152 ;;		 -> STR_1(15), 
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  a               1    0[BANK0 ] PTR unsigned char 
  1155 ;;		 -> STR_1(15), 
  1156 ;;  i               2    1[BANK0 ] int 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1166 ;;      Params:         0       0       0       0       0
  1167 ;;      Locals:         0       3       0       0       0
  1168 ;;      Temps:          0       0       0       0       0
  1169 ;;      Totals:         0       3       0       0       0
  1170 ;;Total ram usage:        3 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    3
  1173 ;; This function calls:
  1174 ;;		_Lcd_Write_Char
  1175 ;; This function is called by:
  1176 ;;		_titulos_LCD
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           
  1181                           ;psect for function _Lcd_Write_String
  1182  04C0                     _Lcd_Write_String:
  1183                           
  1184                           ;incstack = 0
  1185                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1186                           ;Lcd_Write_String@a stored from wreg
  1187  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  1188  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  1189  04C2  00BF               	movwf	Lcd_Write_String@a
  1190  04C3                     l1916:
  1191                           
  1192                           ;LCD.c: 71:  int i;;LCD.c: 72:  for(i=0;a[i]!='\0';i++)
  1193  04C3  01C0               	clrf	Lcd_Write_String@i
  1194  04C4  01C1               	clrf	Lcd_Write_String@i+1
  1195  04C5  2CDB               	goto	l1922
  1196  04C6                     l1918:
  1197                           
  1198                           ;LCD.c: 73:     Lcd_Write_Char(a[i]);
  1199  04C6  0840               	movf	Lcd_Write_String@i,w
  1200  04C7  073F               	addwf	Lcd_Write_String@a,w
  1201  04C8  0084               	movwf	4
  1202  04C9  120A  118A  2496  120A  118A  	fcall	stringdir
  1203  04CE  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  1204  04D3                     l1920:
  1205  04D3  3001               	movlw	1
  1206  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1207  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1208  04D6  07C0               	addwf	Lcd_Write_String@i,f
  1209  04D7  1803               	skipnc
  1210  04D8  0AC1               	incf	Lcd_Write_String@i+1,f
  1211  04D9  3000               	movlw	0
  1212  04DA  07C1               	addwf	Lcd_Write_String@i+1,f
  1213  04DB                     l1922:
  1214  04DB  0840               	movf	Lcd_Write_String@i,w
  1215  04DC  073F               	addwf	Lcd_Write_String@a,w
  1216  04DD  0084               	movwf	4
  1217  04DE  120A  118A  2496  120A  118A  	fcall	stringdir
  1218  04E3  3A00               	xorlw	0
  1219  04E4  1D03               	skipz
  1220  04E5  2CE7               	goto	u901
  1221  04E6  2CE8               	goto	u900
  1222  04E7                     u901:
  1223  04E7  2CC6               	goto	l1918
  1224  04E8                     u900:
  1225  04E8                     l189:
  1226  04E8  0008               	return
  1227  04E9                     __end_of_Lcd_Write_String:
  1228                           
  1229                           	psect	text3
  1230  0530                     __ptext3:	
  1231 ;; *************** function _setup *****************
  1232 ;; Defined at:
  1233 ;;		line 266 in file "pseudocodigo_lab3.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1247 ;;      Params:         0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0
  1250 ;;      Totals:         0       0       0       0       0
  1251 ;;Total ram usage:        0 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    2
  1254 ;; This function calls:
  1255 ;;		_initOsc
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           
  1262                           ;psect for function _setup
  1263  0530                     _setup:
  1264  0530                     l1614:	
  1265                           ;incstack = 0
  1266                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1267                           
  1268                           
  1269                           ;pseudocodigo_lab3.c: 267:     initOsc(0b00000110);
  1270  0530  3006               	movlw	6
  1271  0531  120A  118A  22E1  120A  118A  	fcall	_initOsc
  1272  0536                     l1616:
  1273                           
  1274                           ;pseudocodigo_lab3.c: 268:     ANSEL = 0b00000011;
  1275  0536  3003               	movlw	3
  1276  0537  1683               	bsf	3,5	;RP0=1, select bank3
  1277  0538  1703               	bsf	3,6	;RP1=1, select bank3
  1278  0539  0088               	movwf	8	;volatile
  1279  053A                     l1618:
  1280                           
  1281                           ;pseudocodigo_lab3.c: 269:     ANSELH = 0;
  1282  053A  0189               	clrf	9	;volatile
  1283  053B                     l1620:
  1284                           
  1285                           ;pseudocodigo_lab3.c: 270:     TRISA = 0b00000011;
  1286  053B  3003               	movlw	3
  1287  053C  1683               	bsf	3,5	;RP0=1, select bank1
  1288  053D  1303               	bcf	3,6	;RP1=0, select bank1
  1289  053E  0085               	movwf	5	;volatile
  1290  053F                     l1622:
  1291                           
  1292                           ;pseudocodigo_lab3.c: 271:     TRISB = 0;
  1293  053F  0186               	clrf	6	;volatile
  1294  0540                     l1624:
  1295                           
  1296                           ;pseudocodigo_lab3.c: 272:     TRISCbits.TRISC6 = 0;
  1297  0540  1307               	bcf	7,6	;volatile
  1298  0541                     l1626:
  1299                           
  1300                           ;pseudocodigo_lab3.c: 273:     TRISCbits.TRISC7 = 1;
  1301  0541  1787               	bsf	7,7	;volatile
  1302  0542                     l1628:
  1303                           
  1304                           ;pseudocodigo_lab3.c: 274:     TRISD = 0;
  1305  0542  0188               	clrf	8	;volatile
  1306  0543                     l1630:
  1307                           
  1308                           ;pseudocodigo_lab3.c: 275:     TRISE = 0;
  1309  0543  0189               	clrf	9	;volatile
  1310  0544                     l1632:
  1311                           
  1312                           ;pseudocodigo_lab3.c: 276:     PORTA = 0;
  1313  0544  1283               	bcf	3,5	;RP0=0, select bank0
  1314  0545  1303               	bcf	3,6	;RP1=0, select bank0
  1315  0546  0185               	clrf	5	;volatile
  1316  0547                     l1634:
  1317                           
  1318                           ;pseudocodigo_lab3.c: 277:     PORTB = 0;
  1319  0547  0186               	clrf	6	;volatile
  1320  0548                     l1636:
  1321                           
  1322                           ;pseudocodigo_lab3.c: 278:     PORTC = 0;
  1323  0548  0187               	clrf	7	;volatile
  1324  0549                     l1638:
  1325                           
  1326                           ;pseudocodigo_lab3.c: 279:     PORTD = 0;
  1327  0549  0188               	clrf	8	;volatile
  1328  054A                     l1640:
  1329                           
  1330                           ;pseudocodigo_lab3.c: 280:     PORTE = 0;
  1331  054A  0189               	clrf	9	;volatile
  1332  054B                     l136:
  1333  054B  0008               	return
  1334  054C                     __end_of_setup:
  1335                           
  1336                           	psect	text4
  1337  02E1                     __ptext4:	
  1338 ;; *************** function _initOsc *****************
  1339 ;; Defined at:
  1340 ;;		line 3 in file "Oscilador.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  IRCF            1    wreg     unsigned char 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  IRCF            1    5[COMMON] unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1354 ;;      Params:         0       0       0       0       0
  1355 ;;      Locals:         1       0       0       0       0
  1356 ;;      Temps:          2       0       0       0       0
  1357 ;;      Totals:         3       0       0       0       0
  1358 ;;Total ram usage:        3 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; Hardware stack levels required when called:    1
  1361 ;; This function calls:
  1362 ;;		Nothing
  1363 ;; This function is called by:
  1364 ;;		_setup
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           
  1369                           ;psect for function _initOsc
  1370  02E1                     _initOsc:
  1371                           
  1372                           ;incstack = 0
  1373                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1374                           ;initOsc@IRCF stored from wreg
  1375  02E1  00F5               	movwf	initOsc@IRCF
  1376  02E2                     l1604:
  1377                           
  1378                           ;Oscilador.c: 5:     switch(IRCF){
  1379  02E2  2B19               	goto	l1608
  1380  02E3                     l142:	
  1381                           ;Oscilador.c: 6:         case 0:
  1382                           
  1383                           
  1384                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  1385  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  1386  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  1387  02E5  130F               	bcf	15,6	;volatile
  1388                           
  1389                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  1390  02E6  128F               	bcf	15,5	;volatile
  1391                           
  1392                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  1393  02E7  120F               	bcf	15,4	;volatile
  1394                           
  1395                           ;Oscilador.c: 10:             break;
  1396  02E8  2B3B               	goto	l143
  1397  02E9                     l144:	
  1398                           ;Oscilador.c: 11:          case 1:
  1399                           
  1400                           
  1401                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  1402  02E9  1683               	bsf	3,5	;RP0=1, select bank1
  1403  02EA  1303               	bcf	3,6	;RP1=0, select bank1
  1404  02EB  130F               	bcf	15,6	;volatile
  1405                           
  1406                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  1407  02EC  128F               	bcf	15,5	;volatile
  1408                           
  1409                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  1410  02ED  160F               	bsf	15,4	;volatile
  1411                           
  1412                           ;Oscilador.c: 15:             break;
  1413  02EE  2B3B               	goto	l143
  1414  02EF                     l145:	
  1415                           ;Oscilador.c: 16:         case 2:
  1416                           
  1417                           
  1418                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  1419  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  1420  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  1421  02F1  130F               	bcf	15,6	;volatile
  1422                           
  1423                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  1424  02F2  168F               	bsf	15,5	;volatile
  1425                           
  1426                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  1427  02F3  120F               	bcf	15,4	;volatile
  1428                           
  1429                           ;Oscilador.c: 20:             break;
  1430  02F4  2B3B               	goto	l143
  1431  02F5                     l146:	
  1432                           ;Oscilador.c: 21:         case 3:
  1433                           
  1434                           
  1435                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  1436  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  1437  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  1438  02F7  130F               	bcf	15,6	;volatile
  1439                           
  1440                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  1441  02F8  168F               	bsf	15,5	;volatile
  1442                           
  1443                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  1444  02F9  160F               	bsf	15,4	;volatile
  1445                           
  1446                           ;Oscilador.c: 25:             break;
  1447  02FA  2B3B               	goto	l143
  1448  02FB                     l147:	
  1449                           ;Oscilador.c: 26:         case 4:
  1450                           
  1451                           
  1452                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  1453  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  1454  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  1455  02FD  170F               	bsf	15,6	;volatile
  1456                           
  1457                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  1458  02FE  128F               	bcf	15,5	;volatile
  1459                           
  1460                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  1461  02FF  120F               	bcf	15,4	;volatile
  1462                           
  1463                           ;Oscilador.c: 30:             break;
  1464  0300  2B3B               	goto	l143
  1465  0301                     l148:	
  1466                           ;Oscilador.c: 31:         case 5:
  1467                           
  1468                           
  1469                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1470  0301  1683               	bsf	3,5	;RP0=1, select bank1
  1471  0302  1303               	bcf	3,6	;RP1=0, select bank1
  1472  0303  170F               	bsf	15,6	;volatile
  1473                           
  1474                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1475  0304  128F               	bcf	15,5	;volatile
  1476                           
  1477                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1478  0305  160F               	bsf	15,4	;volatile
  1479                           
  1480                           ;Oscilador.c: 35:             break;
  1481  0306  2B3B               	goto	l143
  1482  0307                     l149:	
  1483                           ;Oscilador.c: 36:         case 6:
  1484                           
  1485                           
  1486                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1487  0307  1683               	bsf	3,5	;RP0=1, select bank1
  1488  0308  1303               	bcf	3,6	;RP1=0, select bank1
  1489  0309  170F               	bsf	15,6	;volatile
  1490                           
  1491                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1492  030A  168F               	bsf	15,5	;volatile
  1493                           
  1494                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1495  030B  120F               	bcf	15,4	;volatile
  1496                           
  1497                           ;Oscilador.c: 40:             break;
  1498  030C  2B3B               	goto	l143
  1499  030D                     l150:	
  1500                           ;Oscilador.c: 41:         case 7:
  1501                           
  1502                           
  1503                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1504  030D  1683               	bsf	3,5	;RP0=1, select bank1
  1505  030E  1303               	bcf	3,6	;RP1=0, select bank1
  1506  030F  170F               	bsf	15,6	;volatile
  1507                           
  1508                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1509  0310  168F               	bsf	15,5	;volatile
  1510                           
  1511                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1512  0311  160F               	bsf	15,4	;volatile
  1513                           
  1514                           ;Oscilador.c: 45:             break;
  1515  0312  2B3B               	goto	l143
  1516  0313                     l151:	
  1517                           ;Oscilador.c: 46:         default:
  1518                           
  1519                           
  1520                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1521  0313  1683               	bsf	3,5	;RP0=1, select bank1
  1522  0314  1303               	bcf	3,6	;RP1=0, select bank1
  1523  0315  170F               	bsf	15,6	;volatile
  1524                           
  1525                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1526  0316  168F               	bsf	15,5	;volatile
  1527                           
  1528                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1529  0317  120F               	bcf	15,4	;volatile
  1530                           
  1531                           ;Oscilador.c: 50:             break;
  1532  0318  2B3B               	goto	l143
  1533  0319                     l1608:
  1534  0319  0875               	movf	initOsc@IRCF,w
  1535  031A  00F3               	movwf	??_initOsc
  1536  031B  01F4               	clrf	??_initOsc+1
  1537                           
  1538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1539                           ; Switch size 1, requested type "simple"
  1540                           ; Number of cases is 1, Range of values is 0 to 0
  1541                           ; switch strategies available:
  1542                           ; Name         Instructions Cycles
  1543                           ; simple_byte            4     3 (average)
  1544                           ; direct_byte           11     8 (fixed)
  1545                           ; jumptable            260     6 (fixed)
  1546                           ;	Chosen strategy is simple_byte
  1547  031C  0874               	movf	??_initOsc+1,w
  1548  031D  3A00               	xorlw	0	; case 0
  1549  031E  1903               	skipnz
  1550  031F  2B21               	goto	l2156
  1551  0320  2B13               	goto	l151
  1552  0321                     l2156:
  1553                           
  1554                           ; Switch size 1, requested type "simple"
  1555                           ; Number of cases is 8, Range of values is 0 to 7
  1556                           ; switch strategies available:
  1557                           ; Name         Instructions Cycles
  1558                           ; simple_byte           25    13 (average)
  1559                           ; direct_byte           32     8 (fixed)
  1560                           ; jumptable            260     6 (fixed)
  1561                           ;	Chosen strategy is simple_byte
  1562  0321  0873               	movf	??_initOsc,w
  1563  0322  3A00               	xorlw	0	; case 0
  1564  0323  1903               	skipnz
  1565  0324  2AE3               	goto	l142
  1566  0325  3A01               	xorlw	1	; case 1
  1567  0326  1903               	skipnz
  1568  0327  2AE9               	goto	l144
  1569  0328  3A03               	xorlw	3	; case 2
  1570  0329  1903               	skipnz
  1571  032A  2AEF               	goto	l145
  1572  032B  3A01               	xorlw	1	; case 3
  1573  032C  1903               	skipnz
  1574  032D  2AF5               	goto	l146
  1575  032E  3A07               	xorlw	7	; case 4
  1576  032F  1903               	skipnz
  1577  0330  2AFB               	goto	l147
  1578  0331  3A01               	xorlw	1	; case 5
  1579  0332  1903               	skipnz
  1580  0333  2B01               	goto	l148
  1581  0334  3A03               	xorlw	3	; case 6
  1582  0335  1903               	skipnz
  1583  0336  2B07               	goto	l149
  1584  0337  3A01               	xorlw	1	; case 7
  1585  0338  1903               	skipnz
  1586  0339  2B0D               	goto	l150
  1587  033A  2B13               	goto	l151
  1588  033B                     l143:
  1589                           
  1590                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1591  033B  140F               	bsf	15,0	;volatile
  1592  033C                     l152:
  1593  033C  0008               	return
  1594  033D                     __end_of_initOsc:
  1595                           
  1596                           	psect	text5
  1597  061A                     __ptext5:	
  1598 ;; *************** function _USART_Init_BaudRate *****************
  1599 ;; Defined at:
  1600 ;;		line 20 in file "USART.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1614 ;;      Params:         0       0       0       0       0
  1615 ;;      Locals:         0       0       0       0       0
  1616 ;;      Temps:          0       0       0       0       0
  1617 ;;      Totals:         0       0       0       0       0
  1618 ;;Total ram usage:        0 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    1
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_main
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           
  1629                           ;psect for function _USART_Init_BaudRate
  1630  061A                     _USART_Init_BaudRate:
  1631  061A                     l1642:	
  1632                           ;incstack = 0
  1633                           ; Regs used in _USART_Init_BaudRate: [wreg+status,2]
  1634                           
  1635                           
  1636                           ;USART.c: 21:     SPBRGH = 0;
  1637  061A  1683               	bsf	3,5	;RP0=1, select bank1
  1638  061B  1303               	bcf	3,6	;RP1=0, select bank1
  1639  061C  019A               	clrf	26	;volatile
  1640  061D                     l1644:
  1641                           
  1642                           ;USART.c: 22:     SPBRG = 12;
  1643  061D  300C               	movlw	12
  1644  061E  0099               	movwf	25	;volatile
  1645  061F                     l265:
  1646  061F  0008               	return
  1647  0620                     __end_of_USART_Init_BaudRate:
  1648                           
  1649                           	psect	text6
  1650  0602                     __ptext6:	
  1651 ;; *************** function _USART_Init *****************
  1652 ;; Defined at:
  1653 ;;		line 5 in file "USART.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		status,2
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1667 ;;      Params:         0       0       0       0       0
  1668 ;;      Locals:         0       0       0       0       0
  1669 ;;      Temps:          0       0       0       0       0
  1670 ;;      Totals:         0       0       0       0       0
  1671 ;;Total ram usage:        0 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    1
  1674 ;; This function calls:
  1675 ;;		Nothing
  1676 ;; This function is called by:
  1677 ;;		_main
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           
  1682                           ;psect for function _USART_Init
  1683  0602                     _USART_Init:
  1684  0602                     l1646:	
  1685                           ;incstack = 0
  1686                           ; Regs used in _USART_Init: [status,2]
  1687                           
  1688                           
  1689                           ;USART.c: 7:     RCSTAbits.SPEN = 1;
  1690  0602  1283               	bcf	3,5	;RP0=0, select bank0
  1691  0603  1303               	bcf	3,6	;RP1=0, select bank0
  1692  0604  1798               	bsf	24,7	;volatile
  1693                           
  1694                           ;USART.c: 8:     TXSTAbits.SYNC = 0;
  1695  0605  1683               	bsf	3,5	;RP0=1, select bank1
  1696  0606  1303               	bcf	3,6	;RP1=0, select bank1
  1697  0607  1218               	bcf	24,4	;volatile
  1698                           
  1699                           ;USART.c: 10:     TXSTAbits.TXEN = 1;
  1700  0608  1698               	bsf	24,5	;volatile
  1701                           
  1702                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  1703  0609  1318               	bcf	24,6	;volatile
  1704                           
  1705                           ;USART.c: 12:     TXSTAbits.BRGH = 1;
  1706  060A  1518               	bsf	24,2	;volatile
  1707                           
  1708                           ;USART.c: 13:     TXSTAbits.TRMT = 0;
  1709  060B  1098               	bcf	24,1	;volatile
  1710                           
  1711                           ;USART.c: 15:     RCSTAbits.RX9 = 0;
  1712  060C  1283               	bcf	3,5	;RP0=0, select bank0
  1713  060D  1303               	bcf	3,6	;RP1=0, select bank0
  1714  060E  1318               	bcf	24,6	;volatile
  1715                           
  1716                           ;USART.c: 16:     RCSTAbits.CREN = 1;
  1717  060F  1618               	bsf	24,4	;volatile
  1718  0610                     l1648:
  1719                           
  1720                           ;USART.c: 17:     RCREG = 0;
  1721  0610  019A               	clrf	26	;volatile
  1722  0611                     l262:
  1723  0611  0008               	return
  1724  0612                     __end_of_USART_Init:
  1725                           
  1726                           	psect	text7
  1727  0620                     __ptext7:	
  1728 ;; *************** function _USART_INTERRUPT *****************
  1729 ;; Defined at:
  1730 ;;		line 25 in file "USART.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;		None
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		None
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1744 ;;      Params:         0       0       0       0       0
  1745 ;;      Locals:         0       0       0       0       0
  1746 ;;      Temps:          0       0       0       0       0
  1747 ;;      Totals:         0       0       0       0       0
  1748 ;;Total ram usage:        0 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    1
  1751 ;; This function calls:
  1752 ;;		Nothing
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function _USART_INTERRUPT
  1760  0620                     _USART_INTERRUPT:
  1761  0620                     l1650:	
  1762                           ;incstack = 0
  1763                           ; Regs used in _USART_INTERRUPT: []
  1764                           
  1765                           
  1766                           ;USART.c: 26:     INTCONbits.GIE = 1;
  1767  0620  178B               	bsf	11,7	;volatile
  1768                           
  1769                           ;USART.c: 27:     INTCONbits.PEIE = 1;
  1770  0621  170B               	bsf	11,6	;volatile
  1771                           
  1772                           ;USART.c: 28:     PIE1bits.RCIE = 1;
  1773  0622  1683               	bsf	3,5	;RP0=1, select bank1
  1774  0623  1303               	bcf	3,6	;RP1=0, select bank1
  1775  0624  168C               	bsf	12,5	;volatile
  1776  0625                     l268:
  1777  0625  0008               	return
  1778  0626                     __end_of_USART_INTERRUPT:
  1779                           
  1780                           	psect	text8
  1781  05C9                     __ptext8:	
  1782 ;; *************** function _Trasmission *****************
  1783 ;; Defined at:
  1784 ;;		line 239 in file "pseudocodigo_lab3.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2, status,0
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1798 ;;      Params:         0       0       0       0       0
  1799 ;;      Locals:         0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0
  1801 ;;      Totals:         0       0       0       0       0
  1802 ;;Total ram usage:        0 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    1
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_main
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function _Trasmission
  1814  05C9                     _Trasmission:
  1815  05C9                     l1716:	
  1816                           ;incstack = 0
  1817                           ; Regs used in _Trasmission: [wreg+status,2+status,0]
  1818                           
  1819                           
  1820                           ;pseudocodigo_lab3.c: 240:     if (PIR1bits.TXIF ){
  1821  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1822  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1823  05CB  1E0C               	btfss	12,4	;volatile
  1824  05CC  2DCE               	goto	u761
  1825  05CD  2DCF               	goto	u760
  1826  05CE                     u761:
  1827  05CE  2DDC               	goto	l133
  1828  05CF                     u760:
  1829  05CF                     l1718:
  1830                           
  1831                           ;pseudocodigo_lab3.c: 241:             if (eusart_toggle){
  1832  05CF  087A               	movf	_eusart_toggle,w
  1833  05D0  1903               	btfsc	3,2
  1834  05D1  2DD3               	goto	u771
  1835  05D2  2DD4               	goto	u770
  1836  05D3                     u771:
  1837  05D3  2DD8               	goto	l1724
  1838  05D4                     u770:
  1839  05D4                     l1720:
  1840                           
  1841                           ;pseudocodigo_lab3.c: 242:                 TXREG = data2;
  1842  05D4  302C               	movlw	(low _data2)& (0+255)
  1843  05D5  0099               	movwf	25	;volatile
  1844  05D6                     l1722:
  1845                           
  1846                           ;pseudocodigo_lab3.c: 243:                 eusart_toggle = 0;
  1847  05D6  01FA               	clrf	_eusart_toggle
  1848                           
  1849                           ;pseudocodigo_lab3.c: 244:             }
  1850  05D7  2DDC               	goto	l133
  1851  05D8                     l1724:
  1852                           
  1853                           ;pseudocodigo_lab3.c: 246:                 TXREG = data1;
  1854  05D8  3034               	movlw	(low _data1)& (0+255)
  1855  05D9  0099               	movwf	25	;volatile
  1856  05DA                     l1726:
  1857                           
  1858                           ;pseudocodigo_lab3.c: 247:                 eusart_toggle = 1;
  1859  05DA  01FA               	clrf	_eusart_toggle
  1860  05DB  0AFA               	incf	_eusart_toggle,f
  1861  05DC                     l133:
  1862  05DC  0008               	return
  1863  05DD                     __end_of_Trasmission:
  1864                           
  1865                           	psect	text9
  1866  0240                     __ptext9:	
  1867 ;; *************** function _Show_val_LCD *****************
  1868 ;; Defined at:
  1869 ;;		line 213 in file "pseudocodigo_lab3.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2, status,0, pclath, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1883 ;;      Params:         0       0       0       0       0
  1884 ;;      Locals:         0       0       0       0       0
  1885 ;;      Temps:          0       2       0       0       0
  1886 ;;      Totals:         0       2       0       0       0
  1887 ;;Total ram usage:        2 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; Hardware stack levels required when called:    4
  1890 ;; This function calls:
  1891 ;;		_Lcd_Set_Cursor
  1892 ;;		_Lcd_Write_Char
  1893 ;; This function is called by:
  1894 ;;		_main
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           
  1899                           ;psect for function _Show_val_LCD
  1900  0240                     _Show_val_LCD:
  1901  0240                     l2030:	
  1902                           ;incstack = 0
  1903                           ; Regs used in _Show_val_LCD: [wreg+status,2+status,0+pclath+cstack]
  1904                           
  1905                           
  1906                           ;pseudocodigo_lab3.c: 215:         Lcd_Set_Cursor(2,1);
  1907  0240  01F7               	clrf	Lcd_Set_Cursor@b
  1908  0241  0AF7               	incf	Lcd_Set_Cursor@b,f
  1909  0242  3002               	movlw	2
  1910  0243  120A  118A  24E9  120A  118A  	fcall	_Lcd_Set_Cursor
  1911                           
  1912                           ;pseudocodigo_lab3.c: 216:         Lcd_Write_Char(data2[0]);
  1913  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1914  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1915  024A  082C               	movf	_data2,w
  1916  024B  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  1917                           
  1918                           ;pseudocodigo_lab3.c: 217:         Lcd_Write_Char('.');
  1919  0250  302E               	movlw	46
  1920  0251  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  1921                           
  1922                           ;pseudocodigo_lab3.c: 218:         Lcd_Write_Char(data2[1]);
  1923  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1924  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1925  0258  082D               	movf	_data2+1,w
  1926  0259  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  1927                           
  1928                           ;pseudocodigo_lab3.c: 219:         Lcd_Write_Char(data2[2]);
  1929  025E  1283               	bcf	3,5	;RP0=0, select bank0
  1930  025F  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0260  082E               	movf	_data2+2,w
  1932  0261  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  1933                           
  1934                           ;pseudocodigo_lab3.c: 220:         Lcd_Write_Char(data2[3]);
  1935  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1936  0267  1303               	bcf	3,6	;RP1=0, select bank0
  1937  0268  082F               	movf	_data2+3,w
  1938  0269  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  1939                           
  1940                           ;pseudocodigo_lab3.c: 221:         Lcd_Write_Char(' ');
  1941  026E  3020               	movlw	32
  1942  026F  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  1943  0274                     l2032:
  1944                           
  1945                           ;pseudocodigo_lab3.c: 223:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1946  0274  3003               	movlw	3
  1947  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1948  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0277  00C3               	movwf	??_Show_val_LCD+1
  1950  0278  3097               	movlw	151
  1951  0279  00C2               	movwf	??_Show_val_LCD
  1952  027A                     u1057:
  1953  027A  0BC2               	decfsz	??_Show_val_LCD,f
  1954  027B  2A7A               	goto	u1057
  1955  027C  0BC3               	decfsz	??_Show_val_LCD+1,f
  1956  027D  2A7A               	goto	u1057
  1957  027E                     l2034:
  1958                           
  1959                           ;pseudocodigo_lab3.c: 225:         Lcd_Set_Cursor(2,7);
  1960  027E  3007               	movlw	7
  1961  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0280  1303               	bcf	3,6	;RP1=0, select bank0
  1963  0281  00C2               	movwf	??_Show_val_LCD
  1964  0282  0842               	movf	??_Show_val_LCD,w
  1965  0283  00F7               	movwf	Lcd_Set_Cursor@b
  1966  0284  3002               	movlw	2
  1967  0285  120A  118A  24E9  120A  118A  	fcall	_Lcd_Set_Cursor
  1968  028A                     l2036:
  1969                           
  1970                           ;pseudocodigo_lab3.c: 226:         Lcd_Write_Char(data1[0]);
  1971  028A  1283               	bcf	3,5	;RP0=0, select bank0
  1972  028B  1303               	bcf	3,6	;RP1=0, select bank0
  1973  028C  0834               	movf	_data1,w
  1974  028D  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  1975  0292                     l2038:
  1976                           
  1977                           ;pseudocodigo_lab3.c: 227:         Lcd_Write_Char('.');
  1978  0292  302E               	movlw	46
  1979  0293  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  1980  0298                     l2040:
  1981                           
  1982                           ;pseudocodigo_lab3.c: 228:         Lcd_Write_Char(data1[1]);
  1983  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1984  0299  1303               	bcf	3,6	;RP1=0, select bank0
  1985  029A  0835               	movf	_data1+1,w
  1986  029B  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  1987  02A0                     l2042:
  1988                           
  1989                           ;pseudocodigo_lab3.c: 229:         Lcd_Write_Char(data1[2]);
  1990  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1991  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1992  02A2  0836               	movf	_data1+2,w
  1993  02A3  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  1994  02A8                     l2044:
  1995                           
  1996                           ;pseudocodigo_lab3.c: 230:         Lcd_Write_Char(data1[3]);
  1997  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  1998  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  1999  02AA  0837               	movf	_data1+3,w
  2000  02AB  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  2001  02B0                     l2046:
  2002                           
  2003                           ;pseudocodigo_lab3.c: 231:         Lcd_Write_Char(' ');
  2004  02B0  3020               	movlw	32
  2005  02B1  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  2006  02B6                     l2048:
  2007                           
  2008                           ;pseudocodigo_lab3.c: 233:         Lcd_Set_Cursor(2,13);
  2009  02B6  300D               	movlw	13
  2010  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2011  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2012  02B9  00C2               	movwf	??_Show_val_LCD
  2013  02BA  0842               	movf	??_Show_val_LCD,w
  2014  02BB  00F7               	movwf	Lcd_Set_Cursor@b
  2015  02BC  3002               	movlw	2
  2016  02BD  120A  118A  24E9  120A  118A  	fcall	_Lcd_Set_Cursor
  2017  02C2                     l2050:
  2018                           
  2019                           ;pseudocodigo_lab3.c: 234:         Lcd_Write_Char(S3_cont[0]);
  2020  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2021  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2022  02C4  083C               	movf	_S3_cont,w
  2023  02C5  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  2024  02CA                     l2052:
  2025                           
  2026                           ;pseudocodigo_lab3.c: 235:         Lcd_Write_Char(S3_cont[1]);
  2027  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2028  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2029  02CC  083D               	movf	_S3_cont+1,w
  2030  02CD  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  2031  02D2                     l2054:
  2032                           
  2033                           ;pseudocodigo_lab3.c: 236:         Lcd_Write_Char(S3_cont[2]);
  2034  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2035  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2036  02D4  083E               	movf	_S3_cont+2,w
  2037  02D5  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  2038  02DA                     l2056:
  2039                           
  2040                           ;pseudocodigo_lab3.c: 237:         Lcd_Write_Char(' ');
  2041  02DA  3020               	movlw	32
  2042  02DB  120A  118A  259E  120A  118A  	fcall	_Lcd_Write_Char
  2043  02E0                     l127:
  2044  02E0  0008               	return
  2045  02E1                     __end_of_Show_val_LCD:
  2046                           
  2047                           	psect	text10
  2048  059E                     __ptext10:	
  2049 ;; *************** function _Lcd_Write_Char *****************
  2050 ;; Defined at:
  2051 ;;		line 61 in file "LCD.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  a               1    wreg     unsigned char 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  a               1    5[COMMON] unsigned char 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, status,2, status,0, pclath, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2065 ;;      Params:         0       0       0       0       0
  2066 ;;      Locals:         1       0       0       0       0
  2067 ;;      Temps:          1       0       0       0       0
  2068 ;;      Totals:         2       0       0       0       0
  2069 ;;Total ram usage:        2 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    2
  2072 ;; This function calls:
  2073 ;;		_Lcd_Port
  2074 ;; This function is called by:
  2075 ;;		_Show_val_LCD
  2076 ;;		_Lcd_Write_String
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           
  2081                           ;psect for function _Lcd_Write_Char
  2082  059E                     _Lcd_Write_Char:
  2083                           
  2084                           ;incstack = 0
  2085                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2086                           ;Lcd_Write_Char@a stored from wreg
  2087  059E  00F5               	movwf	Lcd_Write_Char@a
  2088  059F                     l1858:
  2089                           
  2090                           ;LCD.c: 62:    PORTEbits.RE0 = 1;
  2091  059F  1283               	bcf	3,5	;RP0=0, select bank0
  2092  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  2093  05A1  1409               	bsf	9,0	;volatile
  2094  05A2                     l1860:
  2095                           
  2096                           ;LCD.c: 63:    Lcd_Port(a);
  2097  05A2  0875               	movf	Lcd_Write_Char@a,w
  2098  05A3  120A  118A  2626  120A  118A  	fcall	_Lcd_Port
  2099  05A8                     l1862:
  2100                           
  2101                           ;LCD.c: 64:    PORTEbits.RE2 = 1;
  2102  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  2103  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  2104  05AA  1509               	bsf	9,2	;volatile
  2105  05AB                     l1864:
  2106                           
  2107                           ;LCD.c: 65:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2108  05AB  301A               	movlw	26
  2109  05AC  00F4               	movwf	??_Lcd_Write_Char
  2110  05AD                     u1067:
  2111  05AD  0BF4               	decfsz	??_Lcd_Write_Char,f
  2112  05AE  2DAD               	goto	u1067
  2113  05AF  0000               	nop
  2114  05B0                     l1866:
  2115                           
  2116                           ;LCD.c: 66:    PORTEbits.RE2 = 0;
  2117  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  2118  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2119  05B2  1109               	bcf	9,2	;volatile
  2120  05B3                     l183:
  2121  05B3  0008               	return
  2122  05B4                     __end_of_Lcd_Write_Char:
  2123                           
  2124                           	psect	text11
  2125  04E9                     __ptext11:	
  2126 ;; *************** function _Lcd_Set_Cursor *****************
  2127 ;; Defined at:
  2128 ;;		line 48 in file "LCD.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  a               1    wreg     unsigned char 
  2131 ;;  b               1    7[COMMON] unsigned char 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  a               1    1[BANK0 ] unsigned char 
  2134 ;;  temp            1    2[BANK0 ] unsigned char 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0, pclath, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         1       0       0       0       0
  2145 ;;      Locals:         0       2       0       0       0
  2146 ;;      Temps:          0       1       0       0       0
  2147 ;;      Totals:         1       3       0       0       0
  2148 ;;Total ram usage:        4 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:    3
  2151 ;; This function calls:
  2152 ;;		_Lcd_Cmd
  2153 ;; This function is called by:
  2154 ;;		_titulos_LCD
  2155 ;;		_Show_val_LCD
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _Lcd_Set_Cursor
  2161  04E9                     _Lcd_Set_Cursor:
  2162                           
  2163                           ;incstack = 0
  2164                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2165                           ;Lcd_Set_Cursor@a stored from wreg
  2166  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  2167  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  2168  04EB  00C0               	movwf	Lcd_Set_Cursor@a
  2169  04EC                     l1904:
  2170                           
  2171                           ;LCD.c: 49:  char temp;;LCD.c: 50:  if(a == 1){
  2172  04EC  0340               	decf	Lcd_Set_Cursor@a,w
  2173  04ED  1D03               	btfss	3,2
  2174  04EE  2CF0               	goto	u881
  2175  04EF  2CF1               	goto	u880
  2176  04F0                     u881:
  2177  04F0  2CFD               	goto	l1910
  2178  04F1                     u880:
  2179  04F1                     l1906:
  2180                           
  2181                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2182  04F1  0877               	movf	Lcd_Set_Cursor@b,w
  2183  04F2  3E7F               	addlw	127
  2184  04F3  00BF               	movwf	??_Lcd_Set_Cursor
  2185  04F4  083F               	movf	??_Lcd_Set_Cursor,w
  2186  04F5  00C1               	movwf	Lcd_Set_Cursor@temp
  2187  04F6                     l1908:
  2188                           
  2189                           ;LCD.c: 52:         Lcd_Cmd(temp);
  2190  04F6  0841               	movf	Lcd_Set_Cursor@temp,w
  2191  04F7  120A  118A  2584  120A  118A  	fcall	_Lcd_Cmd
  2192                           
  2193                           ;LCD.c: 53:  }
  2194  04FC  2D0E               	goto	l180
  2195  04FD                     l1910:
  2196  04FD  3002               	movlw	2
  2197  04FE  0640               	xorwf	Lcd_Set_Cursor@a,w
  2198  04FF  1D03               	btfss	3,2
  2199  0500  2D02               	goto	u891
  2200  0501  2D03               	goto	u890
  2201  0502                     u891:
  2202  0502  2D0E               	goto	l180
  2203  0503                     u890:
  2204  0503                     l1912:
  2205                           
  2206                           ;LCD.c: 55:   temp = 0xC0 + b - 1;
  2207  0503  0877               	movf	Lcd_Set_Cursor@b,w
  2208  0504  3EBF               	addlw	191
  2209  0505  00BF               	movwf	??_Lcd_Set_Cursor
  2210  0506  083F               	movf	??_Lcd_Set_Cursor,w
  2211  0507  00C1               	movwf	Lcd_Set_Cursor@temp
  2212  0508                     l1914:
  2213                           
  2214                           ;LCD.c: 56:   Lcd_Cmd(temp);
  2215  0508  0841               	movf	Lcd_Set_Cursor@temp,w
  2216  0509  120A  118A  2584  120A  118A  	fcall	_Lcd_Cmd
  2217  050E                     l180:
  2218  050E  0008               	return
  2219  050F                     __end_of_Lcd_Set_Cursor:
  2220                           
  2221                           	psect	text12
  2222  033D                     __ptext12:	
  2223 ;; *************** function _Lcd_Init *****************
  2224 ;; Defined at:
  2225 ;;		line 14 in file "LCD.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;		None
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;		None
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      void 
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0, pclath, cstack
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2239 ;;      Params:         0       0       0       0       0
  2240 ;;      Locals:         0       0       0       0       0
  2241 ;;      Temps:          0       2       0       0       0
  2242 ;;      Totals:         0       2       0       0       0
  2243 ;;Total ram usage:        2 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:    3
  2246 ;; This function calls:
  2247 ;;		_Lcd_Cmd
  2248 ;;		_Lcd_Port
  2249 ;; This function is called by:
  2250 ;;		_main
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           
  2255                           ;psect for function _Lcd_Init
  2256  033D                     _Lcd_Init:
  2257  033D                     l2014:	
  2258                           ;incstack = 0
  2259                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2260                           
  2261                           
  2262                           ;LCD.c: 15:   Lcd_Port(0x00);
  2263  033D  3000               	movlw	0
  2264  033E  120A  118A  2626  120A  118A  	fcall	_Lcd_Port
  2265  0343                     l2016:
  2266                           
  2267                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2268  0343  3034               	movlw	52
  2269  0344  1283               	bcf	3,5	;RP0=0, select bank0
  2270  0345  1303               	bcf	3,6	;RP1=0, select bank0
  2271  0346  00C0               	movwf	??_Lcd_Init+1
  2272  0347  30F1               	movlw	241
  2273  0348  00BF               	movwf	??_Lcd_Init
  2274  0349                     u1077:
  2275  0349  0BBF               	decfsz	??_Lcd_Init,f
  2276  034A  2B49               	goto	u1077
  2277  034B  0BC0               	decfsz	??_Lcd_Init+1,f
  2278  034C  2B49               	goto	u1077
  2279  034D                     l2018:
  2280                           
  2281                           ;LCD.c: 17:   Lcd_Cmd(0x30);
  2282  034D  3030               	movlw	48
  2283  034E  120A  118A  2584  120A  118A  	fcall	_Lcd_Cmd
  2284                           
  2285                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2286  0353  300D               	movlw	13
  2287  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2288  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2289  0356  00C0               	movwf	??_Lcd_Init+1
  2290  0357  30FB               	movlw	251
  2291  0358  00BF               	movwf	??_Lcd_Init
  2292  0359                     u1087:
  2293  0359  0BBF               	decfsz	??_Lcd_Init,f
  2294  035A  2B59               	goto	u1087
  2295  035B  0BC0               	decfsz	??_Lcd_Init+1,f
  2296  035C  2B59               	goto	u1087
  2297  035D                     l2020:
  2298                           
  2299                           ;LCD.c: 19:   Lcd_Cmd(0x30);
  2300  035D  3030               	movlw	48
  2301  035E  120A  118A  2584  120A  118A  	fcall	_Lcd_Cmd
  2302  0363                     l2022:
  2303                           
  2304                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2305  0363  301D               	movlw	29
  2306  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2307  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2308  0366  00C0               	movwf	??_Lcd_Init+1
  2309  0367  3090               	movlw	144
  2310  0368  00BF               	movwf	??_Lcd_Init
  2311  0369                     u1097:
  2312  0369  0BBF               	decfsz	??_Lcd_Init,f
  2313  036A  2B69               	goto	u1097
  2314  036B  0BC0               	decfsz	??_Lcd_Init+1,f
  2315  036C  2B69               	goto	u1097
  2316  036D  0000               	nop
  2317                           
  2318                           ;LCD.c: 21:   Lcd_Cmd(0x30);
  2319  036E  3030               	movlw	48
  2320  036F  120A  118A  2584  120A  118A  	fcall	_Lcd_Cmd
  2321                           
  2322                           ;LCD.c: 22:   Lcd_Cmd(0x38);
  2323  0374  3038               	movlw	56
  2324  0375  120A  118A  2584  120A  118A  	fcall	_Lcd_Cmd
  2325                           
  2326                           ;LCD.c: 23:   Lcd_Cmd(0x0C);
  2327  037A  300C               	movlw	12
  2328  037B  120A  118A  2584  120A  118A  	fcall	_Lcd_Cmd
  2329                           
  2330                           ;LCD.c: 24:   Lcd_Cmd(0x01);
  2331  0380  3001               	movlw	1
  2332  0381  120A  118A  2584  120A  118A  	fcall	_Lcd_Cmd
  2333                           
  2334                           ;LCD.c: 25:   Lcd_Cmd(0x06);
  2335  0386  3006               	movlw	6
  2336  0387  120A  118A  2584  120A  118A  	fcall	_Lcd_Cmd
  2337  038C                     l165:
  2338  038C  0008               	return
  2339  038D                     __end_of_Lcd_Init:
  2340                           
  2341                           	psect	text13
  2342  0584                     __ptext13:	
  2343 ;; *************** function _Lcd_Cmd *****************
  2344 ;; Defined at:
  2345 ;;		line 33 in file "LCD.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  a               1    wreg     unsigned char 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  a               1    6[COMMON] unsigned char 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2, status,0, pclath, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2359 ;;      Params:         0       0       0       0       0
  2360 ;;      Locals:         1       0       0       0       0
  2361 ;;      Temps:          2       0       0       0       0
  2362 ;;      Totals:         3       0       0       0       0
  2363 ;;Total ram usage:        3 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    2
  2366 ;; This function calls:
  2367 ;;		_Lcd_Port
  2368 ;; This function is called by:
  2369 ;;		_Lcd_Init
  2370 ;;		_Lcd_Set_Cursor
  2371 ;;		_Lcd_Clear
  2372 ;;		_Lcd_Shift_Right
  2373 ;;		_Lcd_Shift_Left
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           
  2378                           ;psect for function _Lcd_Cmd
  2379  0584                     _Lcd_Cmd:
  2380                           
  2381                           ;incstack = 0
  2382                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2383                           ;Lcd_Cmd@a stored from wreg
  2384  0584  00F6               	movwf	Lcd_Cmd@a
  2385  0585                     l1868:
  2386                           
  2387                           ;LCD.c: 34:  PORTEbits.RE0 = 0;
  2388  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2389  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2390  0587  1009               	bcf	9,0	;volatile
  2391  0588                     l1870:
  2392                           
  2393                           ;LCD.c: 35:  Lcd_Port(a);
  2394  0588  0876               	movf	Lcd_Cmd@a,w
  2395  0589  120A  118A  2626  120A  118A  	fcall	_Lcd_Port
  2396  058E                     l1872:
  2397                           
  2398                           ;LCD.c: 36:  PORTEbits.RE2 = 1;
  2399  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2400  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0590  1509               	bsf	9,2	;volatile
  2402  0591                     l1874:
  2403                           
  2404                           ;LCD.c: 37:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2405  0591  300B               	movlw	11
  2406  0592  00F5               	movwf	??_Lcd_Cmd+1
  2407  0593  3062               	movlw	98
  2408  0594  00F4               	movwf	??_Lcd_Cmd
  2409  0595                     u1107:
  2410  0595  0BF4               	decfsz	??_Lcd_Cmd,f
  2411  0596  2D95               	goto	u1107
  2412  0597  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2413  0598  2D95               	goto	u1107
  2414  0599  0000               	nop
  2415  059A                     l1876:
  2416                           
  2417                           ;LCD.c: 38:         PORTEbits.RE2 = 0;
  2418  059A  1283               	bcf	3,5	;RP0=0, select bank0
  2419  059B  1303               	bcf	3,6	;RP1=0, select bank0
  2420  059C  1109               	bcf	9,2	;volatile
  2421  059D                     l171:
  2422  059D  0008               	return
  2423  059E                     __end_of_Lcd_Cmd:
  2424                           
  2425                           	psect	text14
  2426  0626                     __ptext14:	
  2427 ;; *************** function _Lcd_Port *****************
  2428 ;; Defined at:
  2429 ;;		line 29 in file "LCD.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  a               1    wreg     unsigned char 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  a               1    3[COMMON] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2443 ;;      Params:         0       0       0       0       0
  2444 ;;      Locals:         1       0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0
  2446 ;;      Totals:         1       0       0       0       0
  2447 ;;Total ram usage:        1 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    1
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_Lcd_Init
  2454 ;;		_Lcd_Cmd
  2455 ;;		_Lcd_Write_Char
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           
  2460                           ;psect for function _Lcd_Port
  2461  0626                     _Lcd_Port:
  2462                           
  2463                           ;incstack = 0
  2464                           ; Regs used in _Lcd_Port: [wreg]
  2465                           ;Lcd_Port@a stored from wreg
  2466  0626  00F3               	movwf	Lcd_Port@a
  2467  0627                     l1856:
  2468                           
  2469                           ;LCD.c: 30:     PORTD = a;
  2470  0627  0873               	movf	Lcd_Port@a,w
  2471  0628  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0629  1303               	bcf	3,6	;RP1=0, select bank0
  2473  062A  0088               	movwf	8	;volatile
  2474  062B                     l168:
  2475  062B  0008               	return
  2476  062C                     __end_of_Lcd_Port:
  2477                           
  2478                           	psect	text15
  2479  041E                     __ptext15:	
  2480 ;; *************** function _ADC_to_string *****************
  2481 ;; Defined at:
  2482 ;;		line 205 in file "pseudocodigo_lab3.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2496 ;;      Params:         0       0       0       0       0
  2497 ;;      Locals:         0       0       0       0       0
  2498 ;;      Temps:          0       3       0       0       0
  2499 ;;      Totals:         0       3       0       0       0
  2500 ;;Total ram usage:        3 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    3
  2503 ;; This function calls:
  2504 ;;		_sprintf
  2505 ;; This function is called by:
  2506 ;;		_main
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           
  2511                           ;psect for function _ADC_to_string
  2512  041E                     _ADC_to_string:
  2513  041E                     l2028:	
  2514                           ;incstack = 0
  2515                           ; Regs used in _ADC_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2516                           
  2517                           
  2518                           ;pseudocodigo_lab3.c: 206:     sprintf(data2, "%.3iV", S1_val<<1);
  2519  041E  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2520  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2521  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2522  0421  00D5               	movwf	??_ADC_to_string
  2523  0422  0855               	movf	??_ADC_to_string,w
  2524  0423  00C8               	movwf	sprintf@f
  2525  0424  082B               	movf	_S1_val,w
  2526  0425  00D6               	movwf	??_ADC_to_string+1
  2527  0426  01D7               	clrf	??_ADC_to_string+2
  2528  0427  1003               	clrc
  2529  0428  0D56               	rlf	??_ADC_to_string+1,w
  2530  0429  00C9               	movwf	?_sprintf+1
  2531  042A  0D57               	rlf	??_ADC_to_string+2,w
  2532  042B  00CA               	movwf	?_sprintf+2
  2533  042C  302C               	movlw	(low (_data2| 0))& (0+255)
  2534  042D  120A  118A  201F  120A  118A  	fcall	_sprintf
  2535                           
  2536                           ;pseudocodigo_lab3.c: 207:     sprintf(data1, "%.3iV", S2_val<<1);
  2537  0432  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2538  0433  1283               	bcf	3,5	;RP0=0, select bank0
  2539  0434  1303               	bcf	3,6	;RP1=0, select bank0
  2540  0435  00D5               	movwf	??_ADC_to_string
  2541  0436  0855               	movf	??_ADC_to_string,w
  2542  0437  00C8               	movwf	sprintf@f
  2543  0438  082A               	movf	_S2_val,w
  2544  0439  00D6               	movwf	??_ADC_to_string+1
  2545  043A  01D7               	clrf	??_ADC_to_string+2
  2546  043B  1003               	clrc
  2547  043C  0D56               	rlf	??_ADC_to_string+1,w
  2548  043D  00C9               	movwf	?_sprintf+1
  2549  043E  0D57               	rlf	??_ADC_to_string+2,w
  2550  043F  00CA               	movwf	?_sprintf+2
  2551  0440  3034               	movlw	(low (_data1| 0))& (0+255)
  2552  0441  120A  118A  201F  120A  118A  	fcall	_sprintf
  2553                           
  2554                           ;pseudocodigo_lab3.c: 208:     sprintf(S3_cont, "%.3i", cont);
  2555  0446  3020               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2556  0447  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0448  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0449  00D5               	movwf	??_ADC_to_string
  2559  044A  0855               	movf	??_ADC_to_string,w
  2560  044B  00C8               	movwf	sprintf@f
  2561  044C  0828               	movf	_cont,w
  2562  044D  00D6               	movwf	??_ADC_to_string+1
  2563  044E  01D7               	clrf	??_ADC_to_string+2
  2564  044F  0856               	movf	??_ADC_to_string+1,w
  2565  0450  00C9               	movwf	?_sprintf+1
  2566  0451  0857               	movf	??_ADC_to_string+2,w
  2567  0452  00CA               	movwf	?_sprintf+2
  2568  0453  303C               	movlw	(low (_S3_cont| 0))& (0+255)
  2569  0454  120A  118A  201F  120A  118A  	fcall	_sprintf
  2570  0459                     l124:
  2571  0459  0008               	return
  2572  045A                     __end_of_ADC_to_string:
  2573                           
  2574                           	psect	text16
  2575  001F                     __ptext16:	
  2576 ;; *************** function _sprintf *****************
  2577 ;; Defined at:
  2578 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  sp              1    wreg     PTR unsigned char 
  2581 ;;		 -> S3_cont(3), data1(8), data2(8), 
  2582 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  2583 ;;		 -> STR_4(5), STR_3(6), STR_2(6), 
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  2586 ;;		 -> S3_cont(3), data1(8), data2(8), 
  2587 ;;  tmpval          4    0        struct .
  2588 ;;  val             2   17[BANK0 ] unsigned int 
  2589 ;;  cp              2    0        PTR const unsigned char 
  2590 ;;  len             2    0        unsigned int 
  2591 ;;  c               1   21[BANK0 ] unsigned char 
  2592 ;;  prec            1   20[BANK0 ] char 
  2593 ;;  flag            1   16[BANK0 ] unsigned char 
  2594 ;;  ap              1   15[BANK0 ] PTR void [1]
  2595 ;;		 -> ?_sprintf(2), 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  2    9[BANK0 ] int 
  2598 ;; Registers used:
  2599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2605 ;;      Params:         0       3       0       0       0
  2606 ;;      Locals:         0       7       0       0       0
  2607 ;;      Temps:          0       3       0       0       0
  2608 ;;      Totals:         0      13       0       0       0
  2609 ;;Total ram usage:       13 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    2
  2612 ;; This function calls:
  2613 ;;		___bmul
  2614 ;;		___lwdiv
  2615 ;;		___lwmod
  2616 ;;		_isdigit
  2617 ;; This function is called by:
  2618 ;;		_ADC_to_string
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           
  2623                           ;psect for function _sprintf
  2624  001F                     _sprintf:
  2625                           
  2626                           ;incstack = 0
  2627                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2628                           ;sprintf@sp stored from wreg
  2629  001F  1283               	bcf	3,5	;RP0=0, select bank0
  2630  0020  1303               	bcf	3,6	;RP1=0, select bank0
  2631  0021  00D2               	movwf	sprintf@sp
  2632  0022                     l1924:
  2633                           
  2634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2635  0022  3049               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2636  0023  00CB               	movwf	??_sprintf
  2637  0024  084B               	movf	??_sprintf,w
  2638  0025  00CE               	movwf	sprintf@ap
  2639                           
  2640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2641  0026  296D               	goto	l2002
  2642  0027                     l1926:
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2645  0027  3025               	movlw	37
  2646  0028  0654               	xorwf	sprintf@c,w
  2647  0029  1903               	btfsc	3,2
  2648  002A  282C               	goto	u911
  2649  002B  282D               	goto	u910
  2650  002C                     u911:
  2651  002C  2839               	goto	l1932
  2652  002D                     u910:
  2653  002D                     l1928:
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2656  002D  0854               	movf	sprintf@c,w
  2657  002E  00CB               	movwf	??_sprintf
  2658  002F  0852               	movf	sprintf@sp,w
  2659  0030  0084               	movwf	4
  2660  0031  084B               	movf	??_sprintf,w
  2661  0032  1383               	bcf	3,7	;select IRP bank0
  2662  0033  0080               	movwf	0
  2663  0034                     l1930:
  2664  0034  3001               	movlw	1
  2665  0035  00CB               	movwf	??_sprintf
  2666  0036  084B               	movf	??_sprintf,w
  2667  0037  07D2               	addwf	sprintf@sp,f
  2668                           
  2669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2670  0038  296D               	goto	l2002
  2671  0039                     l1932:
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2674  0039  01CF               	clrf	sprintf@flag
  2675  003A                     l1934:
  2676                           
  2677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2678  003A  0848               	movf	sprintf@f,w
  2679  003B  0084               	movwf	4
  2680  003C  120A  118A  2496  120A  118A  	fcall	stringdir
  2681  0041  3A2E               	xorlw	46
  2682  0042  1D03               	skipz
  2683  0043  2845               	goto	u921
  2684  0044  2846               	goto	u920
  2685  0045                     u921:
  2686  0045  287D               	goto	l1948
  2687  0046                     u920:
  2688  0046                     l1936:
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2691  0046  3001               	movlw	1
  2692  0047  00CB               	movwf	??_sprintf
  2693  0048  084B               	movf	??_sprintf,w
  2694  0049  07C8               	addwf	sprintf@f,f
  2695  004A                     l1938:
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2698  004A  01D3               	clrf	sprintf@prec
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2701  004B  286C               	goto	l1946
  2702  004C                     l1940:
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2705  004C  1283               	bcf	3,5	;RP0=0, select bank0
  2706  004D  1303               	bcf	3,6	;RP1=0, select bank0
  2707  004E  0853               	movf	sprintf@prec,w
  2708  004F  00CB               	movwf	??_sprintf
  2709  0050  084B               	movf	??_sprintf,w
  2710  0051  00F3               	movwf	___bmul@multiplicand
  2711  0052  300A               	movlw	10
  2712  0053  120A  118A  25B4  120A  118A  	fcall	___bmul
  2713  0058  1283               	bcf	3,5	;RP0=0, select bank0
  2714  0059  1303               	bcf	3,6	;RP1=0, select bank0
  2715  005A  00CC               	movwf	??_sprintf+1
  2716  005B  084C               	movf	??_sprintf+1,w
  2717  005C  00D3               	movwf	sprintf@prec
  2718  005D                     l1942:
  2719                           
  2720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2721  005D  0848               	movf	sprintf@f,w
  2722  005E  0084               	movwf	4
  2723  005F  120A  118A  2496  120A  118A  	fcall	stringdir
  2724  0064  3ED0               	addlw	-48
  2725  0065  00CB               	movwf	??_sprintf
  2726  0066  084B               	movf	??_sprintf,w
  2727  0067  07D3               	addwf	sprintf@prec,f
  2728  0068                     l1944:
  2729  0068  3001               	movlw	1
  2730  0069  00CB               	movwf	??_sprintf
  2731  006A  084B               	movf	??_sprintf,w
  2732  006B  07C8               	addwf	sprintf@f,f
  2733  006C                     l1946:
  2734                           
  2735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2736  006C  0848               	movf	sprintf@f,w
  2737  006D  0084               	movwf	4
  2738  006E  120A  118A  2496  120A  118A  	fcall	stringdir
  2739  0073  120A  118A  25F0  120A  118A  	fcall	_isdigit
  2740  0078  1803               	btfsc	3,0
  2741  0079  287B               	goto	u931
  2742  007A  287C               	goto	u930
  2743  007B                     u931:
  2744  007B  284C               	goto	l1940
  2745  007C                     u930:
  2746  007C  287E               	goto	l1952
  2747  007D                     l1948:
  2748                           
  2749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2750  007D  01D3               	clrf	sprintf@prec
  2751  007E                     l1952:
  2752  007E  3001               	movlw	1
  2753  007F  1283               	bcf	3,5	;RP0=0, select bank0
  2754  0080  1303               	bcf	3,6	;RP1=0, select bank0
  2755  0081  07C8               	addwf	sprintf@f,f
  2756  0082  30FF               	movlw	-1
  2757  0083  0748               	addwf	sprintf@f,w
  2758  0084  0084               	movwf	4
  2759  0085  120A  118A  2496  120A  118A  	fcall	stringdir
  2760  008A  00D4               	movwf	sprintf@c
  2761  008B  00CB               	movwf	??_sprintf
  2762  008C  01CC               	clrf	??_sprintf+1
  2763                           
  2764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2765                           ; Switch size 1, requested type "simple"
  2766                           ; Number of cases is 1, Range of values is 0 to 0
  2767                           ; switch strategies available:
  2768                           ; Name         Instructions Cycles
  2769                           ; simple_byte            4     3 (average)
  2770                           ; direct_byte           11     8 (fixed)
  2771                           ; jumptable            260     6 (fixed)
  2772                           ;	Chosen strategy is simple_byte
  2773  008D  084C               	movf	??_sprintf+1,w
  2774  008E  3A00               	xorlw	0	; case 0
  2775  008F  1903               	skipnz
  2776  0090  2892               	goto	l2158
  2777  0091  296D               	goto	l2002
  2778  0092                     l2158:
  2779                           
  2780                           ; Switch size 1, requested type "simple"
  2781                           ; Number of cases is 3, Range of values is 0 to 105
  2782                           ; switch strategies available:
  2783                           ; Name         Instructions Cycles
  2784                           ; simple_byte           10     6 (average)
  2785                           ; jumptable            260     6 (fixed)
  2786                           ;	Chosen strategy is simple_byte
  2787  0092  084B               	movf	??_sprintf,w
  2788  0093  3A00               	xorlw	0	; case 0
  2789  0094  1903               	skipnz
  2790  0095  297F               	goto	l2004
  2791  0096  3A64               	xorlw	100	; case 100
  2792  0097  1903               	skipnz
  2793  0098  289D               	goto	l1954
  2794  0099  3A0D               	xorlw	13	; case 105
  2795  009A  1903               	skipnz
  2796  009B  289D               	goto	l1954
  2797  009C  296D               	goto	l2002
  2798  009D                     l1954:
  2799                           
  2800                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2801  009D  084E               	movf	sprintf@ap,w
  2802  009E  0084               	movwf	4
  2803  009F  1383               	bcf	3,7	;select IRP bank0
  2804  00A0  0800               	movf	0,w
  2805  00A1  00D0               	movwf	sprintf@val
  2806  00A2  0A84               	incf	4,f
  2807  00A3  0800               	movf	0,w
  2808  00A4  00D1               	movwf	sprintf@val+1
  2809  00A5                     l1956:
  2810  00A5  3002               	movlw	2
  2811  00A6  00CB               	movwf	??_sprintf
  2812  00A7  084B               	movf	??_sprintf,w
  2813  00A8  07CE               	addwf	sprintf@ap,f
  2814  00A9                     l1958:
  2815                           
  2816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2817  00A9  1FD1               	btfss	sprintf@val+1,7
  2818  00AA  28AC               	goto	u941
  2819  00AB  28AD               	goto	u940
  2820  00AC                     u941:
  2821  00AC  28B6               	goto	l1964
  2822  00AD                     u940:
  2823  00AD                     l1960:
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2826  00AD  3003               	movlw	3
  2827  00AE  00CB               	movwf	??_sprintf
  2828  00AF  084B               	movf	??_sprintf,w
  2829  00B0  04CF               	iorwf	sprintf@flag,f
  2830  00B1                     l1962:
  2831                           
  2832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2833  00B1  09D0               	comf	sprintf@val,f
  2834  00B2  09D1               	comf	sprintf@val+1,f
  2835  00B3  0AD0               	incf	sprintf@val,f
  2836  00B4  1903               	skipnz
  2837  00B5  0AD1               	incf	sprintf@val+1,f
  2838  00B6                     l1964:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  2841  00B6  0853               	movf	sprintf@prec,w
  2842  00B7  1D03               	btfss	3,2
  2843  00B8  28BA               	goto	u951
  2844  00B9  28BB               	goto	u950
  2845  00BA                     u951:
  2846  00BA  28C5               	goto	l1970
  2847  00BB                     u950:
  2848  00BB                     l1966:
  2849  00BB  0850               	movf	sprintf@val,w
  2850  00BC  0451               	iorwf	sprintf@val+1,w
  2851  00BD  1D03               	btfss	3,2
  2852  00BE  28C0               	goto	u961
  2853  00BF  28C1               	goto	u960
  2854  00C0                     u961:
  2855  00C0  28C5               	goto	l1970
  2856  00C1                     u960:
  2857  00C1                     l1968:
  2858                           
  2859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  2860  00C1  3001               	movlw	1
  2861  00C2  00CB               	movwf	??_sprintf
  2862  00C3  084B               	movf	??_sprintf,w
  2863  00C4  07D3               	addwf	sprintf@prec,f
  2864  00C5                     l1970:
  2865                           
  2866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2867  00C5  01D4               	clrf	sprintf@c
  2868  00C6  0AD4               	incf	sprintf@c,f
  2869  00C7                     l1974:
  2870                           
  2871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2872  00C7  0854               	movf	sprintf@c,w
  2873  00C8  00CB               	movwf	??_sprintf
  2874  00C9  074B               	addwf	??_sprintf,w
  2875  00CA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2876  00CB  0084               	movwf	4
  2877  00CC  120A  118A  2496  120A  118A  	fcall	stringdir
  2878  00D1  00CC               	movwf	??_sprintf+1
  2879  00D2  120A  118A  2496  120A  118A  	fcall	stringdir
  2880  00D7  00CD               	movwf	??_sprintf+2
  2881  00D8  084D               	movf	??_sprintf+2,w
  2882  00D9  0251               	subwf	sprintf@val+1,w
  2883  00DA  1D03               	skipz
  2884  00DB  28DE               	goto	u975
  2885  00DC  084C               	movf	??_sprintf+1,w
  2886  00DD  0250               	subwf	sprintf@val,w
  2887  00DE                     u975:
  2888  00DE  1803               	skipnc
  2889  00DF  28E1               	goto	u971
  2890  00E0  28E2               	goto	u970
  2891  00E1                     u971:
  2892  00E1  28E3               	goto	l1978
  2893  00E2                     u970:
  2894  00E2  28ED               	goto	l1980
  2895  00E3                     l1978:
  2896  00E3  3001               	movlw	1
  2897  00E4  00CB               	movwf	??_sprintf
  2898  00E5  084B               	movf	??_sprintf,w
  2899  00E6  07D4               	addwf	sprintf@c,f
  2900  00E7  3005               	movlw	5
  2901  00E8  0654               	xorwf	sprintf@c,w
  2902  00E9  1D03               	btfss	3,2
  2903  00EA  28EC               	goto	u981
  2904  00EB  28ED               	goto	u980
  2905  00EC                     u981:
  2906  00EC  28C7               	goto	l1974
  2907  00ED                     u980:
  2908  00ED                     l1980:
  2909                           
  2910                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  2911  00ED  0853               	movf	sprintf@prec,w
  2912  00EE  00CB               	movwf	??_sprintf
  2913  00EF  01CC               	clrf	??_sprintf+1
  2914  00F0  1BCB               	btfsc	??_sprintf,7
  2915  00F1  03CC               	decf	??_sprintf+1,f
  2916  00F2  084C               	movf	??_sprintf+1,w
  2917  00F3  3A80               	xorlw	128
  2918  00F4  3C80               	sublw	128
  2919  00F5  1D03               	skipz
  2920  00F6  28F9               	goto	u995
  2921  00F7  084B               	movf	??_sprintf,w
  2922  00F8  0254               	subwf	sprintf@c,w
  2923  00F9                     u995:
  2924  00F9  1803               	skipnc
  2925  00FA  28FC               	goto	u991
  2926  00FB  28FD               	goto	u990
  2927  00FC                     u991:
  2928  00FC  28FE               	goto	l1984
  2929  00FD                     u990:
  2930  00FD                     l1982:
  2931  00FD  2918               	goto	l1988
  2932  00FE                     l1984:
  2933  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  2934  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  2935  0100  0853               	movf	sprintf@prec,w
  2936  0101  00CB               	movwf	??_sprintf
  2937  0102  01CC               	clrf	??_sprintf+1
  2938  0103  1BCB               	btfsc	??_sprintf,7
  2939  0104  03CC               	decf	??_sprintf+1,f
  2940  0105  084C               	movf	??_sprintf+1,w
  2941  0106  3A80               	xorlw	128
  2942  0107  00CD               	movwf	??_sprintf+2
  2943  0108  3080               	movlw	128
  2944  0109  024D               	subwf	??_sprintf+2,w
  2945  010A  1D03               	skipz
  2946  010B  290E               	goto	u1005
  2947  010C  0854               	movf	sprintf@c,w
  2948  010D  024B               	subwf	??_sprintf,w
  2949  010E                     u1005:
  2950  010E  1803               	skipnc
  2951  010F  2911               	goto	u1001
  2952  0110  2912               	goto	u1000
  2953  0111                     u1001:
  2954  0111  2918               	goto	l1988
  2955  0112                     u1000:
  2956  0112                     l1986:
  2957                           
  2958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  2959  0112  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0113  1303               	bcf	3,6	;RP1=0, select bank0
  2961  0114  0854               	movf	sprintf@c,w
  2962  0115  00CB               	movwf	??_sprintf
  2963  0116  084B               	movf	??_sprintf,w
  2964  0117  00D3               	movwf	sprintf@prec
  2965  0118                     l1988:
  2966                           
  2967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2968  0118  1283               	bcf	3,5	;RP0=0, select bank0
  2969  0119  1303               	bcf	3,6	;RP1=0, select bank0
  2970  011A  084F               	movf	sprintf@flag,w
  2971  011B  3903               	andlw	3
  2972  011C  1903               	btfsc	3,2
  2973  011D  291F               	goto	u1011
  2974  011E  2920               	goto	u1010
  2975  011F                     u1011:
  2976  011F  2964               	goto	l2000
  2977  0120                     u1010:
  2978  0120                     l1990:
  2979                           
  2980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2981  0120  302D               	movlw	45
  2982  0121  00CB               	movwf	??_sprintf
  2983  0122  0852               	movf	sprintf@sp,w
  2984  0123  0084               	movwf	4
  2985  0124  084B               	movf	??_sprintf,w
  2986  0125  1383               	bcf	3,7	;select IRP bank0
  2987  0126  0080               	movwf	0
  2988  0127                     l1992:
  2989  0127  3001               	movlw	1
  2990  0128  00CB               	movwf	??_sprintf
  2991  0129  084B               	movf	??_sprintf,w
  2992  012A  07D2               	addwf	sprintf@sp,f
  2993  012B  2964               	goto	l2000
  2994  012C                     l1994:
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2997  012C  300A               	movlw	10
  2998  012D  00C2               	movwf	___lwmod@divisor
  2999  012E  3000               	movlw	0
  3000  012F  00C3               	movwf	___lwmod@divisor+1
  3001  0130  0853               	movf	sprintf@prec,w
  3002  0131  00CB               	movwf	??_sprintf
  3003  0132  074B               	addwf	??_sprintf,w
  3004  0133  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3005  0134  0084               	movwf	4
  3006  0135  120A  118A  2496  120A  118A  	fcall	stringdir
  3007  013A  00F3               	movwf	___lwdiv@divisor
  3008  013B  120A  118A  2496  120A  118A  	fcall	stringdir
  3009  0140  00F4               	movwf	___lwdiv@divisor+1
  3010  0141  0851               	movf	sprintf@val+1,w
  3011  0142  00F6               	movwf	___lwdiv@dividend+1
  3012  0143  0850               	movf	sprintf@val,w
  3013  0144  00F5               	movwf	___lwdiv@dividend
  3014  0145  120A  118A  23D8  120A  118A  	fcall	___lwdiv
  3015  014A  0874               	movf	?___lwdiv+1,w
  3016  014B  1283               	bcf	3,5	;RP0=0, select bank0
  3017  014C  1303               	bcf	3,6	;RP1=0, select bank0
  3018  014D  00C5               	movwf	___lwmod@dividend+1
  3019  014E  0873               	movf	?___lwdiv,w
  3020  014F  00C4               	movwf	___lwmod@dividend
  3021  0150  120A  118A  245A  120A  118A  	fcall	___lwmod
  3022  0155  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0156  1303               	bcf	3,6	;RP1=0, select bank0
  3024  0157  0842               	movf	?___lwmod,w
  3025  0158  3E30               	addlw	48
  3026  0159  00CC               	movwf	??_sprintf+1
  3027  015A  084C               	movf	??_sprintf+1,w
  3028  015B  00D4               	movwf	sprintf@c
  3029  015C                     l1996:
  3030                           
  3031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3032  015C  0854               	movf	sprintf@c,w
  3033  015D  00CB               	movwf	??_sprintf
  3034  015E  0852               	movf	sprintf@sp,w
  3035  015F  0084               	movwf	4
  3036  0160  084B               	movf	??_sprintf,w
  3037  0161  1383               	bcf	3,7	;select IRP bank0
  3038  0162  0080               	movwf	0
  3039  0163  2927               	goto	l1992
  3040  0164                     l2000:
  3041                           
  3042                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3043  0164  30FF               	movlw	255
  3044  0165  00CB               	movwf	??_sprintf
  3045  0166  084B               	movf	??_sprintf,w
  3046  0167  07D3               	addwf	sprintf@prec,f
  3047  0168  0A53               	incf	sprintf@prec,w
  3048  0169  1D03               	btfss	3,2
  3049  016A  296C               	goto	u1021
  3050  016B  296D               	goto	u1020
  3051  016C                     u1021:
  3052  016C  292C               	goto	l1994
  3053  016D                     u1020:
  3054  016D                     l2002:
  3055                           
  3056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3057  016D  3001               	movlw	1
  3058  016E  07C8               	addwf	sprintf@f,f
  3059  016F  30FF               	movlw	-1
  3060  0170  0748               	addwf	sprintf@f,w
  3061  0171  0084               	movwf	4
  3062  0172  120A  118A  2496  120A  118A  	fcall	stringdir
  3063  0177  00CB               	movwf	??_sprintf
  3064  0178  084B               	movf	??_sprintf,w
  3065  0179  00D4               	movwf	sprintf@c
  3066  017A  0854               	movf	sprintf@c,w
  3067  017B  1D03               	btfss	3,2
  3068  017C  297E               	goto	u1031
  3069  017D  297F               	goto	u1030
  3070  017E                     u1031:
  3071  017E  2827               	goto	l1926
  3072  017F                     u1030:
  3073  017F                     l2004:
  3074                           
  3075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3076  017F  0852               	movf	sprintf@sp,w
  3077  0180  0084               	movwf	4
  3078  0181  1383               	bcf	3,7	;select IRP bank0
  3079  0182  0180               	clrf	0
  3080  0183                     l389:
  3081  0183  0008               	return
  3082  0184                     __end_of_sprintf:
  3083                           
  3084                           	psect	text17
  3085  05F0                     __ptext17:	
  3086 ;; *************** function _isdigit *****************
  3087 ;; Defined at:
  3088 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  c               1    wreg     unsigned char 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  c               1    4[COMMON] unsigned char 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;		None               void
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3102 ;;      Params:         0       0       0       0       0
  3103 ;;      Locals:         2       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0
  3105 ;;      Totals:         2       0       0       0       0
  3106 ;;Total ram usage:        2 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    1
  3109 ;; This function calls:
  3110 ;;		Nothing
  3111 ;; This function is called by:
  3112 ;;		_sprintf
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           
  3117                           ;psect for function _isdigit
  3118  05F0                     _isdigit:
  3119                           
  3120                           ;incstack = 0
  3121                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3122                           ;isdigit@c stored from wreg
  3123  05F0  00F4               	movwf	isdigit@c
  3124  05F1                     l1402:
  3125  05F1  01F3               	clrf	_isdigit$1011
  3126  05F2                     l1404:
  3127  05F2  303A               	movlw	58
  3128  05F3  0274               	subwf	isdigit@c,w
  3129  05F4  1803               	skipnc
  3130  05F5  2DF7               	goto	u411
  3131  05F6  2DF8               	goto	u410
  3132  05F7                     u411:
  3133  05F7  2E00               	goto	l1410
  3134  05F8                     u410:
  3135  05F8                     l1406:
  3136  05F8  3030               	movlw	48
  3137  05F9  0274               	subwf	isdigit@c,w
  3138  05FA  1C03               	skipc
  3139  05FB  2DFD               	goto	u421
  3140  05FC  2DFE               	goto	u420
  3141  05FD                     u421:
  3142  05FD  2E00               	goto	l1410
  3143  05FE                     u420:
  3144  05FE                     l1408:
  3145  05FE  01F3               	clrf	_isdigit$1011
  3146  05FF  0AF3               	incf	_isdigit$1011,f
  3147  0600                     l1410:
  3148  0600  0C73               	rrf	_isdigit$1011,w
  3149  0601                     l846:
  3150  0601  0008               	return
  3151  0602                     __end_of_isdigit:
  3152                           
  3153                           	psect	text18
  3154  045A                     __ptext18:	
  3155 ;; *************** function ___lwmod *****************
  3156 ;; Defined at:
  3157 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  divisor         2    3[BANK0 ] unsigned int 
  3160 ;;  dividend        2    5[BANK0 ] unsigned int 
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;  counter         1    8[BANK0 ] unsigned char 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  2    3[BANK0 ] unsigned int 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3172 ;;      Params:         0       4       0       0       0
  3173 ;;      Locals:         0       1       0       0       0
  3174 ;;      Temps:          0       1       0       0       0
  3175 ;;      Totals:         0       6       0       0       0
  3176 ;;Total ram usage:        6 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    1
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		_sprintf
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           
  3187                           ;psect for function ___lwmod
  3188  045A                     ___lwmod:
  3189  045A                     l1454:	
  3190                           ;incstack = 0
  3191                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3192                           
  3193  045A  1283               	bcf	3,5	;RP0=0, select bank0
  3194  045B  1303               	bcf	3,6	;RP1=0, select bank0
  3195  045C  0842               	movf	___lwmod@divisor,w
  3196  045D  0443               	iorwf	___lwmod@divisor+1,w
  3197  045E  1903               	btfsc	3,2
  3198  045F  2C61               	goto	u521
  3199  0460  2C62               	goto	u520
  3200  0461                     u521:
  3201  0461  2C91               	goto	l1472
  3202  0462                     u520:
  3203  0462                     l1456:
  3204  0462  01C7               	clrf	___lwmod@counter
  3205  0463  0AC7               	incf	___lwmod@counter,f
  3206  0464  2C70               	goto	l1462
  3207  0465                     l1458:
  3208  0465  3001               	movlw	1
  3209  0466                     u535:
  3210  0466  1003               	clrc
  3211  0467  0DC2               	rlf	___lwmod@divisor,f
  3212  0468  0DC3               	rlf	___lwmod@divisor+1,f
  3213  0469  3EFF               	addlw	-1
  3214  046A  1D03               	skipz
  3215  046B  2C66               	goto	u535
  3216  046C                     l1460:
  3217  046C  3001               	movlw	1
  3218  046D  00C6               	movwf	??___lwmod
  3219  046E  0846               	movf	??___lwmod,w
  3220  046F  07C7               	addwf	___lwmod@counter,f
  3221  0470                     l1462:
  3222  0470  1FC3               	btfss	___lwmod@divisor+1,7
  3223  0471  2C73               	goto	u541
  3224  0472  2C74               	goto	u540
  3225  0473                     u541:
  3226  0473  2C65               	goto	l1458
  3227  0474                     u540:
  3228  0474                     l1464:
  3229  0474  0843               	movf	___lwmod@divisor+1,w
  3230  0475  0245               	subwf	___lwmod@dividend+1,w
  3231  0476  1D03               	skipz
  3232  0477  2C7A               	goto	u555
  3233  0478  0842               	movf	___lwmod@divisor,w
  3234  0479  0244               	subwf	___lwmod@dividend,w
  3235  047A                     u555:
  3236  047A  1C03               	skipc
  3237  047B  2C7D               	goto	u551
  3238  047C  2C7E               	goto	u550
  3239  047D                     u551:
  3240  047D  2C84               	goto	l1468
  3241  047E                     u550:
  3242  047E                     l1466:
  3243  047E  0842               	movf	___lwmod@divisor,w
  3244  047F  02C4               	subwf	___lwmod@dividend,f
  3245  0480  0843               	movf	___lwmod@divisor+1,w
  3246  0481  1C03               	skipc
  3247  0482  03C5               	decf	___lwmod@dividend+1,f
  3248  0483  02C5               	subwf	___lwmod@dividend+1,f
  3249  0484                     l1468:
  3250  0484  3001               	movlw	1
  3251  0485                     u565:
  3252  0485  1003               	clrc
  3253  0486  0CC3               	rrf	___lwmod@divisor+1,f
  3254  0487  0CC2               	rrf	___lwmod@divisor,f
  3255  0488  3EFF               	addlw	-1
  3256  0489  1D03               	skipz
  3257  048A  2C85               	goto	u565
  3258  048B                     l1470:
  3259  048B  3001               	movlw	1
  3260  048C  02C7               	subwf	___lwmod@counter,f
  3261  048D  1D03               	btfss	3,2
  3262  048E  2C90               	goto	u571
  3263  048F  2C91               	goto	u570
  3264  0490                     u571:
  3265  0490  2C74               	goto	l1464
  3266  0491                     u570:
  3267  0491                     l1472:
  3268  0491  0845               	movf	___lwmod@dividend+1,w
  3269  0492  00C3               	movwf	?___lwmod+1
  3270  0493  0844               	movf	___lwmod@dividend,w
  3271  0494  00C2               	movwf	?___lwmod
  3272  0495                     l675:
  3273  0495  0008               	return
  3274  0496                     __end_of___lwmod:
  3275                           
  3276                           	psect	text19
  3277  03D8                     __ptext19:	
  3278 ;; *************** function ___lwdiv *****************
  3279 ;; Defined at:
  3280 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  divisor         2    3[COMMON] unsigned int 
  3283 ;;  dividend        2    5[COMMON] unsigned int 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  quotient        2    1[BANK0 ] unsigned int 
  3286 ;;  counter         1    0[BANK0 ] unsigned char 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  2    3[COMMON] unsigned int 
  3289 ;; Registers used:
  3290 ;;		wreg, status,2, status,0
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3296 ;;      Params:         4       0       0       0       0
  3297 ;;      Locals:         0       3       0       0       0
  3298 ;;      Temps:          1       0       0       0       0
  3299 ;;      Totals:         5       3       0       0       0
  3300 ;;Total ram usage:        8 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    1
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_sprintf
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           
  3311                           ;psect for function ___lwdiv
  3312  03D8                     ___lwdiv:
  3313  03D8                     l1878:	
  3314                           ;incstack = 0
  3315                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3316                           
  3317  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  3318  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  3319  03DA  01C0               	clrf	___lwdiv@quotient
  3320  03DB  01C1               	clrf	___lwdiv@quotient+1
  3321  03DC                     l1880:
  3322  03DC  0873               	movf	___lwdiv@divisor,w
  3323  03DD  0474               	iorwf	___lwdiv@divisor+1,w
  3324  03DE  1903               	btfsc	3,2
  3325  03DF  2BE1               	goto	u811
  3326  03E0  2BE2               	goto	u810
  3327  03E1                     u811:
  3328  03E1  2C19               	goto	l1900
  3329  03E2                     u810:
  3330  03E2                     l1882:
  3331  03E2  01BF               	clrf	___lwdiv@counter
  3332  03E3  0ABF               	incf	___lwdiv@counter,f
  3333  03E4  2BF0               	goto	l1888
  3334  03E5                     l1884:
  3335  03E5  3001               	movlw	1
  3336  03E6                     u825:
  3337  03E6  1003               	clrc
  3338  03E7  0DF3               	rlf	___lwdiv@divisor,f
  3339  03E8  0DF4               	rlf	___lwdiv@divisor+1,f
  3340  03E9  3EFF               	addlw	-1
  3341  03EA  1D03               	skipz
  3342  03EB  2BE6               	goto	u825
  3343  03EC                     l1886:
  3344  03EC  3001               	movlw	1
  3345  03ED  00F7               	movwf	??___lwdiv
  3346  03EE  0877               	movf	??___lwdiv,w
  3347  03EF  07BF               	addwf	___lwdiv@counter,f
  3348  03F0                     l1888:
  3349  03F0  1FF4               	btfss	___lwdiv@divisor+1,7
  3350  03F1  2BF3               	goto	u831
  3351  03F2  2BF4               	goto	u830
  3352  03F3                     u831:
  3353  03F3  2BE5               	goto	l1884
  3354  03F4                     u830:
  3355  03F4                     l1890:
  3356  03F4  3001               	movlw	1
  3357  03F5                     u845:
  3358  03F5  1003               	clrc
  3359  03F6  0DC0               	rlf	___lwdiv@quotient,f
  3360  03F7  0DC1               	rlf	___lwdiv@quotient+1,f
  3361  03F8  3EFF               	addlw	-1
  3362  03F9  1D03               	skipz
  3363  03FA  2BF5               	goto	u845
  3364  03FB  0874               	movf	___lwdiv@divisor+1,w
  3365  03FC  0276               	subwf	___lwdiv@dividend+1,w
  3366  03FD  1D03               	skipz
  3367  03FE  2C01               	goto	u855
  3368  03FF  0873               	movf	___lwdiv@divisor,w
  3369  0400  0275               	subwf	___lwdiv@dividend,w
  3370  0401                     u855:
  3371  0401  1C03               	skipc
  3372  0402  2C04               	goto	u851
  3373  0403  2C05               	goto	u850
  3374  0404                     u851:
  3375  0404  2C0C               	goto	l1896
  3376  0405                     u850:
  3377  0405                     l1892:
  3378  0405  0873               	movf	___lwdiv@divisor,w
  3379  0406  02F5               	subwf	___lwdiv@dividend,f
  3380  0407  0874               	movf	___lwdiv@divisor+1,w
  3381  0408  1C03               	skipc
  3382  0409  03F6               	decf	___lwdiv@dividend+1,f
  3383  040A  02F6               	subwf	___lwdiv@dividend+1,f
  3384  040B                     l1894:
  3385  040B  1440               	bsf	___lwdiv@quotient,0
  3386  040C                     l1896:
  3387  040C  3001               	movlw	1
  3388  040D                     u865:
  3389  040D  1003               	clrc
  3390  040E  0CF4               	rrf	___lwdiv@divisor+1,f
  3391  040F  0CF3               	rrf	___lwdiv@divisor,f
  3392  0410  3EFF               	addlw	-1
  3393  0411  1D03               	skipz
  3394  0412  2C0D               	goto	u865
  3395  0413                     l1898:
  3396  0413  3001               	movlw	1
  3397  0414  02BF               	subwf	___lwdiv@counter,f
  3398  0415  1D03               	btfss	3,2
  3399  0416  2C18               	goto	u871
  3400  0417  2C19               	goto	u870
  3401  0418                     u871:
  3402  0418  2BF4               	goto	l1890
  3403  0419                     u870:
  3404  0419                     l1900:
  3405  0419  0841               	movf	___lwdiv@quotient+1,w
  3406  041A  00F4               	movwf	?___lwdiv+1
  3407  041B  0840               	movf	___lwdiv@quotient,w
  3408  041C  00F3               	movwf	?___lwdiv
  3409  041D                     l665:
  3410  041D  0008               	return
  3411  041E                     __end_of___lwdiv:
  3412                           
  3413                           	psect	text20
  3414  05B4                     __ptext20:	
  3415 ;; *************** function ___bmul *****************
  3416 ;; Defined at:
  3417 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  multiplier      1    wreg     unsigned char 
  3420 ;;  multiplicand    1    3[COMMON] unsigned char 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  multiplier      1    6[COMMON] unsigned char 
  3423 ;;  product         1    5[COMMON] unsigned char 
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  1    wreg      unsigned char 
  3426 ;; Registers used:
  3427 ;;		wreg, status,2, status,0
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3433 ;;      Params:         1       0       0       0       0
  3434 ;;      Locals:         2       0       0       0       0
  3435 ;;      Temps:          1       0       0       0       0
  3436 ;;      Totals:         4       0       0       0       0
  3437 ;;Total ram usage:        4 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:    1
  3440 ;; This function calls:
  3441 ;;		Nothing
  3442 ;; This function is called by:
  3443 ;;		_sprintf
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           
  3448                           ;psect for function ___bmul
  3449  05B4                     ___bmul:
  3450                           
  3451                           ;incstack = 0
  3452                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3453                           ;___bmul@multiplier stored from wreg
  3454  05B4  00F6               	movwf	___bmul@multiplier
  3455  05B5                     l1414:
  3456  05B5  01F5               	clrf	___bmul@product
  3457  05B6                     l1416:
  3458  05B6  1C76               	btfss	___bmul@multiplier,0
  3459  05B7  2DB9               	goto	u431
  3460  05B8  2DBA               	goto	u430
  3461  05B9                     u431:
  3462  05B9  2DBE               	goto	l1420
  3463  05BA                     u430:
  3464  05BA                     l1418:
  3465  05BA  0873               	movf	___bmul@multiplicand,w
  3466  05BB  00F4               	movwf	??___bmul
  3467  05BC  0874               	movf	??___bmul,w
  3468  05BD  07F5               	addwf	___bmul@product,f
  3469  05BE                     l1420:
  3470  05BE  1003               	clrc
  3471  05BF  0DF3               	rlf	___bmul@multiplicand,f
  3472  05C0                     l1422:
  3473  05C0  1003               	clrc
  3474  05C1  0CF6               	rrf	___bmul@multiplier,f
  3475  05C2  0876               	movf	___bmul@multiplier,w
  3476  05C3  1D03               	btfss	3,2
  3477  05C4  2DC6               	goto	u441
  3478  05C5  2DC7               	goto	u440
  3479  05C6                     u441:
  3480  05C6  2DB6               	goto	l1416
  3481  05C7                     u440:
  3482  05C7                     l1424:
  3483  05C7  0875               	movf	___bmul@product,w
  3484  05C8                     l419:
  3485  05C8  0008               	return
  3486  05C9                     __end_of___bmul:
  3487                           
  3488                           	psect	text21
  3489  054C                     __ptext21:	
  3490 ;; *************** function _ADC_channel2 *****************
  3491 ;; Defined at:
  3492 ;;		line 195 in file "pseudocodigo_lab3.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;		None
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3506 ;;      Params:         0       0       0       0       0
  3507 ;;      Locals:         0       0       0       0       0
  3508 ;;      Temps:          2       0       0       0       0
  3509 ;;      Totals:         2       0       0       0       0
  3510 ;;Total ram usage:        2 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    2
  3513 ;; This function calls:
  3514 ;;		_ADC_Config
  3515 ;; This function is called by:
  3516 ;;		_main
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           
  3521                           ;psect for function _ADC_channel2
  3522  054C                     _ADC_channel2:
  3523  054C                     l1676:	
  3524                           ;incstack = 0
  3525                           ; Regs used in _ADC_channel2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3526                           
  3527                           
  3528                           ;pseudocodigo_lab3.c: 196:     ADC_Config (1);
  3529  054C  3001               	movlw	1
  3530  054D  120A  118A  2184  120A  118A  	fcall	_ADC_Config
  3531  0552                     l1678:
  3532                           
  3533                           ;pseudocodigo_lab3.c: 197:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3534  0552  3003               	movlw	3
  3535  0553  00F7               	movwf	??_ADC_channel2+1
  3536  0554  3097               	movlw	151
  3537  0555  00F6               	movwf	??_ADC_channel2
  3538  0556                     u1117:
  3539  0556  0BF6               	decfsz	??_ADC_channel2,f
  3540  0557  2D56               	goto	u1117
  3541  0558  0BF7               	decfsz	??_ADC_channel2+1,f
  3542  0559  2D56               	goto	u1117
  3543  055A  2D5B               	nop2
  3544  055B                     l1680:
  3545                           
  3546                           ;pseudocodigo_lab3.c: 198:     ADCON0bits.GO = 1;
  3547  055B  1283               	bcf	3,5	;RP0=0, select bank0
  3548  055C  1303               	bcf	3,6	;RP1=0, select bank0
  3549  055D  149F               	bsf	31,1	;volatile
  3550                           
  3551                           ;pseudocodigo_lab3.c: 199:     while (ADCON0bits.GO != 0) {
  3552  055E  2D63               	goto	l1684
  3553  055F                     l1682:
  3554                           
  3555                           ;pseudocodigo_lab3.c: 200:         S2_val = ADRESH;
  3556  055F  081E               	movf	30,w	;volatile
  3557  0560  00F6               	movwf	??_ADC_channel2
  3558  0561  0876               	movf	??_ADC_channel2,w
  3559  0562  00AA               	movwf	_S2_val
  3560  0563                     l1684:
  3561                           
  3562                           ;pseudocodigo_lab3.c: 199:     while (ADCON0bits.GO != 0) {
  3563  0563  189F               	btfsc	31,1	;volatile
  3564  0564  2D66               	goto	u751
  3565  0565  2D67               	goto	u750
  3566  0566                     u751:
  3567  0566  2D5F               	goto	l1682
  3568  0567                     u750:
  3569  0567                     l121:
  3570  0567  0008               	return
  3571  0568                     __end_of_ADC_channel2:
  3572                           
  3573                           	psect	text22
  3574  0568                     __ptext22:	
  3575 ;; *************** function _ADC_channel1 *****************
  3576 ;; Defined at:
  3577 ;;		line 185 in file "pseudocodigo_lab3.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         0       0       0       0       0
  3592 ;;      Locals:         0       0       0       0       0
  3593 ;;      Temps:          2       0       0       0       0
  3594 ;;      Totals:         2       0       0       0       0
  3595 ;;Total ram usage:        2 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    2
  3598 ;; This function calls:
  3599 ;;		_ADC_Config
  3600 ;; This function is called by:
  3601 ;;		_main
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           
  3606                           ;psect for function _ADC_channel1
  3607  0568                     _ADC_channel1:
  3608  0568                     l1666:	
  3609                           ;incstack = 0
  3610                           ; Regs used in _ADC_channel1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3611                           
  3612                           
  3613                           ;pseudocodigo_lab3.c: 186:     ADC_Config (0);
  3614  0568  3000               	movlw	0
  3615  0569  120A  118A  2184  120A  118A  	fcall	_ADC_Config
  3616  056E                     l1668:
  3617                           
  3618                           ;pseudocodigo_lab3.c: 187:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3619  056E  3003               	movlw	3
  3620  056F  00F7               	movwf	??_ADC_channel1+1
  3621  0570  3097               	movlw	151
  3622  0571  00F6               	movwf	??_ADC_channel1
  3623  0572                     u1127:
  3624  0572  0BF6               	decfsz	??_ADC_channel1,f
  3625  0573  2D72               	goto	u1127
  3626  0574  0BF7               	decfsz	??_ADC_channel1+1,f
  3627  0575  2D72               	goto	u1127
  3628  0576  2D77               	nop2
  3629  0577                     l1670:
  3630                           
  3631                           ;pseudocodigo_lab3.c: 188:     ADCON0bits.GO = 1;
  3632  0577  1283               	bcf	3,5	;RP0=0, select bank0
  3633  0578  1303               	bcf	3,6	;RP1=0, select bank0
  3634  0579  149F               	bsf	31,1	;volatile
  3635                           
  3636                           ;pseudocodigo_lab3.c: 189:     while (ADCON0bits.GO != 0) {
  3637  057A  2D7F               	goto	l1674
  3638  057B                     l1672:
  3639                           
  3640                           ;pseudocodigo_lab3.c: 190:         S1_val = ADRESH;
  3641  057B  081E               	movf	30,w	;volatile
  3642  057C  00F6               	movwf	??_ADC_channel1
  3643  057D  0876               	movf	??_ADC_channel1,w
  3644  057E  00AB               	movwf	_S1_val
  3645  057F                     l1674:
  3646                           
  3647                           ;pseudocodigo_lab3.c: 189:     while (ADCON0bits.GO != 0) {
  3648  057F  189F               	btfsc	31,1	;volatile
  3649  0580  2D82               	goto	u741
  3650  0581  2D83               	goto	u740
  3651  0582                     u741:
  3652  0582  2D7B               	goto	l1672
  3653  0583                     u740:
  3654  0583                     l115:
  3655  0583  0008               	return
  3656  0584                     __end_of_ADC_channel1:
  3657                           
  3658                           	psect	text23
  3659  0184                     __ptext23:	
  3660 ;; *************** function _ADC_Config *****************
  3661 ;; Defined at:
  3662 ;;		line 31 in file "Config_ADC.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  AN_num          1    wreg     unsigned char 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  AN_num          1    5[COMMON] unsigned char 
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      void 
  3669 ;; Registers used:
  3670 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3676 ;;      Params:         0       0       0       0       0
  3677 ;;      Locals:         1       0       0       0       0
  3678 ;;      Temps:          2       0       0       0       0
  3679 ;;      Totals:         3       0       0       0       0
  3680 ;;Total ram usage:        3 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    1
  3683 ;; This function calls:
  3684 ;;		Nothing
  3685 ;; This function is called by:
  3686 ;;		_ADC_channel1
  3687 ;;		_ADC_channel2
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           
  3692                           ;psect for function _ADC_Config
  3693  0184                     _ADC_Config:
  3694                           
  3695                           ;incstack = 0
  3696                           ; Regs used in _ADC_Config: [wreg-fsr0h+status,2+status,0]
  3697                           ;ADC_Config@AN_num stored from wreg
  3698  0184  00F5               	movwf	ADC_Config@AN_num
  3699  0185                     l1496:
  3700                           
  3701                           ;Config_ADC.c: 33:     switch(AN_num){
  3702  0185  29FD               	goto	l1500
  3703  0186                     l227:	
  3704                           ;Config_ADC.c: 34:         case 0:
  3705                           
  3706                           
  3707                           ;Config_ADC.c: 35:             ADCON0bits.CHS3 = 0;
  3708  0186  1283               	bcf	3,5	;RP0=0, select bank0
  3709  0187  1303               	bcf	3,6	;RP1=0, select bank0
  3710  0188  129F               	bcf	31,5	;volatile
  3711                           
  3712                           ;Config_ADC.c: 36:             ADCON0bits.CHS2 = 0;
  3713  0189  121F               	bcf	31,4	;volatile
  3714                           
  3715                           ;Config_ADC.c: 37:             ADCON0bits.CHS1 = 0;
  3716  018A  119F               	bcf	31,3	;volatile
  3717                           
  3718                           ;Config_ADC.c: 38:             ADCON0bits.CHS0 = 0;
  3719  018B  111F               	bcf	31,2	;volatile
  3720                           
  3721                           ;Config_ADC.c: 39:             break;
  3722  018C  2A37               	goto	l1502
  3723  018D                     l229:	
  3724                           ;Config_ADC.c: 40:         case 1:
  3725                           
  3726                           
  3727                           ;Config_ADC.c: 41:             ADCON0bits.CHS3 = 0;
  3728  018D  1283               	bcf	3,5	;RP0=0, select bank0
  3729  018E  1303               	bcf	3,6	;RP1=0, select bank0
  3730  018F  129F               	bcf	31,5	;volatile
  3731                           
  3732                           ;Config_ADC.c: 42:             ADCON0bits.CHS2 = 0;
  3733  0190  121F               	bcf	31,4	;volatile
  3734                           
  3735                           ;Config_ADC.c: 43:             ADCON0bits.CHS1 = 0;
  3736  0191  119F               	bcf	31,3	;volatile
  3737                           
  3738                           ;Config_ADC.c: 44:             ADCON0bits.CHS0 = 1;
  3739  0192  151F               	bsf	31,2	;volatile
  3740                           
  3741                           ;Config_ADC.c: 45:             break;
  3742  0193  2A37               	goto	l1502
  3743  0194                     l230:	
  3744                           ;Config_ADC.c: 46:         case 2:
  3745                           
  3746                           
  3747                           ;Config_ADC.c: 47:             ADCON0bits.CHS3 = 0;
  3748  0194  1283               	bcf	3,5	;RP0=0, select bank0
  3749  0195  1303               	bcf	3,6	;RP1=0, select bank0
  3750  0196  129F               	bcf	31,5	;volatile
  3751                           
  3752                           ;Config_ADC.c: 48:             ADCON0bits.CHS2 = 0;
  3753  0197  121F               	bcf	31,4	;volatile
  3754                           
  3755                           ;Config_ADC.c: 49:             ADCON0bits.CHS1 = 1;
  3756  0198  159F               	bsf	31,3	;volatile
  3757                           
  3758                           ;Config_ADC.c: 50:             ADCON0bits.CHS0 = 0;
  3759  0199  111F               	bcf	31,2	;volatile
  3760                           
  3761                           ;Config_ADC.c: 51:             break;
  3762  019A  2A37               	goto	l1502
  3763  019B                     l231:	
  3764                           ;Config_ADC.c: 52:         case 3:
  3765                           
  3766                           
  3767                           ;Config_ADC.c: 53:             ADCON0bits.CHS3 = 0;
  3768  019B  1283               	bcf	3,5	;RP0=0, select bank0
  3769  019C  1303               	bcf	3,6	;RP1=0, select bank0
  3770  019D  129F               	bcf	31,5	;volatile
  3771                           
  3772                           ;Config_ADC.c: 54:             ADCON0bits.CHS2 = 0;
  3773  019E  121F               	bcf	31,4	;volatile
  3774                           
  3775                           ;Config_ADC.c: 55:             ADCON0bits.CHS1 = 1;
  3776  019F  159F               	bsf	31,3	;volatile
  3777                           
  3778                           ;Config_ADC.c: 56:             ADCON0bits.CHS0 = 1;
  3779  01A0  151F               	bsf	31,2	;volatile
  3780                           
  3781                           ;Config_ADC.c: 57:             break;
  3782  01A1  2A37               	goto	l1502
  3783  01A2                     l232:	
  3784                           ;Config_ADC.c: 58:         case 4:
  3785                           
  3786                           
  3787                           ;Config_ADC.c: 59:             ADCON0bits.CHS3 = 0;
  3788  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  3789  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  3790  01A4  129F               	bcf	31,5	;volatile
  3791                           
  3792                           ;Config_ADC.c: 60:             ADCON0bits.CHS2 = 1;
  3793  01A5  161F               	bsf	31,4	;volatile
  3794                           
  3795                           ;Config_ADC.c: 61:             ADCON0bits.CHS1 = 0;
  3796  01A6  119F               	bcf	31,3	;volatile
  3797                           
  3798                           ;Config_ADC.c: 62:             ADCON0bits.CHS0 = 0;
  3799  01A7  111F               	bcf	31,2	;volatile
  3800                           
  3801                           ;Config_ADC.c: 63:             break;
  3802  01A8  2A37               	goto	l1502
  3803  01A9                     l233:	
  3804                           ;Config_ADC.c: 64:         case 5:
  3805                           
  3806                           
  3807                           ;Config_ADC.c: 65:             ADCON0bits.CHS3 = 0;
  3808  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  3809  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  3810  01AB  129F               	bcf	31,5	;volatile
  3811                           
  3812                           ;Config_ADC.c: 66:             ADCON0bits.CHS2 = 1;
  3813  01AC  161F               	bsf	31,4	;volatile
  3814                           
  3815                           ;Config_ADC.c: 67:             ADCON0bits.CHS1 = 0;
  3816  01AD  119F               	bcf	31,3	;volatile
  3817                           
  3818                           ;Config_ADC.c: 68:             ADCON0bits.CHS0 = 1;
  3819  01AE  151F               	bsf	31,2	;volatile
  3820                           
  3821                           ;Config_ADC.c: 69:             break;
  3822  01AF  2A37               	goto	l1502
  3823  01B0                     l234:	
  3824                           ;Config_ADC.c: 70:         case 6:
  3825                           
  3826                           
  3827                           ;Config_ADC.c: 71:             ADCON0bits.CHS3 = 0;
  3828  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  3829  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  3830  01B2  129F               	bcf	31,5	;volatile
  3831                           
  3832                           ;Config_ADC.c: 72:             ADCON0bits.CHS2 = 1;
  3833  01B3  161F               	bsf	31,4	;volatile
  3834                           
  3835                           ;Config_ADC.c: 73:             ADCON0bits.CHS1 = 1;
  3836  01B4  159F               	bsf	31,3	;volatile
  3837                           
  3838                           ;Config_ADC.c: 74:             ADCON0bits.CHS0 = 0;
  3839  01B5  111F               	bcf	31,2	;volatile
  3840                           
  3841                           ;Config_ADC.c: 75:             break;
  3842  01B6  2A37               	goto	l1502
  3843  01B7                     l235:	
  3844                           ;Config_ADC.c: 76:         case 7:
  3845                           
  3846                           
  3847                           ;Config_ADC.c: 77:             ADCON0bits.CHS3 = 0;
  3848  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  3849  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  3850  01B9  129F               	bcf	31,5	;volatile
  3851                           
  3852                           ;Config_ADC.c: 78:             ADCON0bits.CHS2 = 1;
  3853  01BA  161F               	bsf	31,4	;volatile
  3854                           
  3855                           ;Config_ADC.c: 79:             ADCON0bits.CHS1 = 1;
  3856  01BB  159F               	bsf	31,3	;volatile
  3857                           
  3858                           ;Config_ADC.c: 80:             ADCON0bits.CHS0 = 1;
  3859  01BC  151F               	bsf	31,2	;volatile
  3860                           
  3861                           ;Config_ADC.c: 81:             break;
  3862  01BD  2A37               	goto	l1502
  3863  01BE                     l236:	
  3864                           ;Config_ADC.c: 82:         case 8:
  3865                           
  3866                           
  3867                           ;Config_ADC.c: 83:             ADCON0bits.CHS3 = 1;
  3868  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  3869  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  3870  01C0  169F               	bsf	31,5	;volatile
  3871                           
  3872                           ;Config_ADC.c: 84:             ADCON0bits.CHS2 = 0;
  3873  01C1  121F               	bcf	31,4	;volatile
  3874                           
  3875                           ;Config_ADC.c: 85:             ADCON0bits.CHS1 = 0;
  3876  01C2  119F               	bcf	31,3	;volatile
  3877                           
  3878                           ;Config_ADC.c: 86:             ADCON0bits.CHS0 = 0;
  3879  01C3  111F               	bcf	31,2	;volatile
  3880                           
  3881                           ;Config_ADC.c: 87:             break;
  3882  01C4  2A37               	goto	l1502
  3883  01C5                     l237:	
  3884                           ;Config_ADC.c: 88:         case 9:
  3885                           
  3886                           
  3887                           ;Config_ADC.c: 89:             ADCON0bits.CHS3 = 1;
  3888  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  3889  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  3890  01C7  169F               	bsf	31,5	;volatile
  3891                           
  3892                           ;Config_ADC.c: 90:             ADCON0bits.CHS2 = 0;
  3893  01C8  121F               	bcf	31,4	;volatile
  3894                           
  3895                           ;Config_ADC.c: 91:             ADCON0bits.CHS1 = 0;
  3896  01C9  119F               	bcf	31,3	;volatile
  3897                           
  3898                           ;Config_ADC.c: 92:             ADCON0bits.CHS0 = 1;
  3899  01CA  151F               	bsf	31,2	;volatile
  3900                           
  3901                           ;Config_ADC.c: 93:             break;
  3902  01CB  2A37               	goto	l1502
  3903  01CC                     l238:	
  3904                           ;Config_ADC.c: 94:         case 10:
  3905                           
  3906                           
  3907                           ;Config_ADC.c: 95:             ADCON0bits.CHS3 = 1;
  3908  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3909  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3910  01CE  169F               	bsf	31,5	;volatile
  3911                           
  3912                           ;Config_ADC.c: 96:             ADCON0bits.CHS2 = 0;
  3913  01CF  121F               	bcf	31,4	;volatile
  3914                           
  3915                           ;Config_ADC.c: 97:             ADCON0bits.CHS1 = 1;
  3916  01D0  159F               	bsf	31,3	;volatile
  3917                           
  3918                           ;Config_ADC.c: 98:             ADCON0bits.CHS0 = 0;
  3919  01D1  111F               	bcf	31,2	;volatile
  3920                           
  3921                           ;Config_ADC.c: 99:             break;
  3922  01D2  2A37               	goto	l1502
  3923  01D3                     l239:	
  3924                           ;Config_ADC.c: 100:         case 11:
  3925                           
  3926                           
  3927                           ;Config_ADC.c: 101:             ADCON0bits.CHS3 = 1;
  3928  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  3929  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  3930  01D5  169F               	bsf	31,5	;volatile
  3931                           
  3932                           ;Config_ADC.c: 102:             ADCON0bits.CHS2 = 0;
  3933  01D6  121F               	bcf	31,4	;volatile
  3934                           
  3935                           ;Config_ADC.c: 103:             ADCON0bits.CHS1 = 1;
  3936  01D7  159F               	bsf	31,3	;volatile
  3937                           
  3938                           ;Config_ADC.c: 104:             ADCON0bits.CHS0 = 1;
  3939  01D8  151F               	bsf	31,2	;volatile
  3940                           
  3941                           ;Config_ADC.c: 105:             break;
  3942  01D9  2A37               	goto	l1502
  3943  01DA                     l240:	
  3944                           ;Config_ADC.c: 106:         case 12:
  3945                           
  3946                           
  3947                           ;Config_ADC.c: 107:             ADCON0bits.CHS3 = 1;
  3948  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  3949  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  3950  01DC  169F               	bsf	31,5	;volatile
  3951                           
  3952                           ;Config_ADC.c: 108:             ADCON0bits.CHS2 = 1;
  3953  01DD  161F               	bsf	31,4	;volatile
  3954                           
  3955                           ;Config_ADC.c: 109:             ADCON0bits.CHS1 = 0;
  3956  01DE  119F               	bcf	31,3	;volatile
  3957                           
  3958                           ;Config_ADC.c: 110:             ADCON0bits.CHS0 = 0;
  3959  01DF  111F               	bcf	31,2	;volatile
  3960                           
  3961                           ;Config_ADC.c: 111:             break;
  3962  01E0  2A37               	goto	l1502
  3963  01E1                     l241:	
  3964                           ;Config_ADC.c: 112:         case 13:
  3965                           
  3966                           
  3967                           ;Config_ADC.c: 113:             ADCON0bits.CHS3 = 1;
  3968  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  3969  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  3970  01E3  169F               	bsf	31,5	;volatile
  3971                           
  3972                           ;Config_ADC.c: 114:             ADCON0bits.CHS2 = 1;
  3973  01E4  161F               	bsf	31,4	;volatile
  3974                           
  3975                           ;Config_ADC.c: 115:             ADCON0bits.CHS1 = 0;
  3976  01E5  119F               	bcf	31,3	;volatile
  3977                           
  3978                           ;Config_ADC.c: 116:             ADCON0bits.CHS0 = 1;
  3979  01E6  151F               	bsf	31,2	;volatile
  3980                           
  3981                           ;Config_ADC.c: 117:             break;
  3982  01E7  2A37               	goto	l1502
  3983  01E8                     l242:	
  3984                           ;Config_ADC.c: 118:         case 14:
  3985                           
  3986                           
  3987                           ;Config_ADC.c: 119:             ADCON0bits.CHS3 = 1;
  3988  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  3989  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  3990  01EA  169F               	bsf	31,5	;volatile
  3991                           
  3992                           ;Config_ADC.c: 120:             ADCON0bits.CHS2 = 1;
  3993  01EB  161F               	bsf	31,4	;volatile
  3994                           
  3995                           ;Config_ADC.c: 121:             ADCON0bits.CHS1 = 1;
  3996  01EC  159F               	bsf	31,3	;volatile
  3997                           
  3998                           ;Config_ADC.c: 122:             ADCON0bits.CHS0 = 0;
  3999  01ED  111F               	bcf	31,2	;volatile
  4000                           
  4001                           ;Config_ADC.c: 123:             break;
  4002  01EE  2A37               	goto	l1502
  4003  01EF                     l243:	
  4004                           ;Config_ADC.c: 124:         case 15:
  4005                           
  4006                           
  4007                           ;Config_ADC.c: 125:             ADCON0bits.CHS3 = 1;
  4008  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  4009  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  4010  01F1  169F               	bsf	31,5	;volatile
  4011                           
  4012                           ;Config_ADC.c: 126:             ADCON0bits.CHS2 = 1;
  4013  01F2  161F               	bsf	31,4	;volatile
  4014                           
  4015                           ;Config_ADC.c: 127:             ADCON0bits.CHS1 = 1;
  4016  01F3  159F               	bsf	31,3	;volatile
  4017                           
  4018                           ;Config_ADC.c: 128:             ADCON0bits.CHS0 = 1;
  4019  01F4  151F               	bsf	31,2	;volatile
  4020                           
  4021                           ;Config_ADC.c: 129:             break;
  4022  01F5  2A37               	goto	l1502
  4023  01F6                     l244:	
  4024                           ;Config_ADC.c: 130:         default:
  4025                           
  4026                           
  4027                           ;Config_ADC.c: 131:             ADCON0bits.CHS3 = 0;
  4028  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  4029  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  4030  01F8  129F               	bcf	31,5	;volatile
  4031                           
  4032                           ;Config_ADC.c: 132:             ADCON0bits.CHS2 = 0;
  4033  01F9  121F               	bcf	31,4	;volatile
  4034                           
  4035                           ;Config_ADC.c: 133:             ADCON0bits.CHS1 = 0;
  4036  01FA  119F               	bcf	31,3	;volatile
  4037                           
  4038                           ;Config_ADC.c: 134:             ADCON0bits.CHS0 = 0;
  4039  01FB  111F               	bcf	31,2	;volatile
  4040                           
  4041                           ;Config_ADC.c: 135:             break;
  4042  01FC  2A37               	goto	l1502
  4043  01FD                     l1500:
  4044  01FD  0875               	movf	ADC_Config@AN_num,w
  4045  01FE  00F3               	movwf	??_ADC_Config
  4046  01FF  01F4               	clrf	??_ADC_Config+1
  4047                           
  4048                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4049                           ; Switch size 1, requested type "simple"
  4050                           ; Number of cases is 1, Range of values is 0 to 0
  4051                           ; switch strategies available:
  4052                           ; Name         Instructions Cycles
  4053                           ; simple_byte            4     3 (average)
  4054                           ; direct_byte           11     8 (fixed)
  4055                           ; jumptable            260     6 (fixed)
  4056                           ;	Chosen strategy is simple_byte
  4057  0200  0874               	movf	??_ADC_Config+1,w
  4058  0201  3A00               	xorlw	0	; case 0
  4059  0202  1903               	skipnz
  4060  0203  2A05               	goto	l2160
  4061  0204  29F6               	goto	l244
  4062  0205                     l2160:
  4063                           
  4064                           ; Switch size 1, requested type "simple"
  4065                           ; Number of cases is 16, Range of values is 0 to 15
  4066                           ; switch strategies available:
  4067                           ; Name         Instructions Cycles
  4068                           ; simple_byte           49    25 (average)
  4069                           ; direct_byte           56     8 (fixed)
  4070                           ; jumptable            260     6 (fixed)
  4071                           ;	Chosen strategy is simple_byte
  4072  0205  0873               	movf	??_ADC_Config,w
  4073  0206  3A00               	xorlw	0	; case 0
  4074  0207  1903               	skipnz
  4075  0208  2986               	goto	l227
  4076  0209  3A01               	xorlw	1	; case 1
  4077  020A  1903               	skipnz
  4078  020B  298D               	goto	l229
  4079  020C  3A03               	xorlw	3	; case 2
  4080  020D  1903               	skipnz
  4081  020E  2994               	goto	l230
  4082  020F  3A01               	xorlw	1	; case 3
  4083  0210  1903               	skipnz
  4084  0211  299B               	goto	l231
  4085  0212  3A07               	xorlw	7	; case 4
  4086  0213  1903               	skipnz
  4087  0214  29A2               	goto	l232
  4088  0215  3A01               	xorlw	1	; case 5
  4089  0216  1903               	skipnz
  4090  0217  29A9               	goto	l233
  4091  0218  3A03               	xorlw	3	; case 6
  4092  0219  1903               	skipnz
  4093  021A  29B0               	goto	l234
  4094  021B  3A01               	xorlw	1	; case 7
  4095  021C  1903               	skipnz
  4096  021D  29B7               	goto	l235
  4097  021E  3A0F               	xorlw	15	; case 8
  4098  021F  1903               	skipnz
  4099  0220  29BE               	goto	l236
  4100  0221  3A01               	xorlw	1	; case 9
  4101  0222  1903               	skipnz
  4102  0223  29C5               	goto	l237
  4103  0224  3A03               	xorlw	3	; case 10
  4104  0225  1903               	skipnz
  4105  0226  29CC               	goto	l238
  4106  0227  3A01               	xorlw	1	; case 11
  4107  0228  1903               	skipnz
  4108  0229  29D3               	goto	l239
  4109  022A  3A07               	xorlw	7	; case 12
  4110  022B  1903               	skipnz
  4111  022C  29DA               	goto	l240
  4112  022D  3A01               	xorlw	1	; case 13
  4113  022E  1903               	skipnz
  4114  022F  29E1               	goto	l241
  4115  0230  3A03               	xorlw	3	; case 14
  4116  0231  1903               	skipnz
  4117  0232  29E8               	goto	l242
  4118  0233  3A01               	xorlw	1	; case 15
  4119  0234  1903               	skipnz
  4120  0235  29EF               	goto	l243
  4121  0236  29F6               	goto	l244
  4122  0237                     l1502:
  4123                           
  4124                           ;Config_ADC.c: 137:     ADCON1 = 0b00000000;
  4125  0237  1683               	bsf	3,5	;RP0=1, select bank1
  4126  0238  1303               	bcf	3,6	;RP1=0, select bank1
  4127  0239  019F               	clrf	31	;volatile
  4128  023A                     l1504:
  4129                           
  4130                           ;Config_ADC.c: 138:     ADCON0bits.ADCS1 = 1;
  4131  023A  1283               	bcf	3,5	;RP0=0, select bank0
  4132  023B  1303               	bcf	3,6	;RP1=0, select bank0
  4133  023C  179F               	bsf	31,7	;volatile
  4134  023D                     l1506:
  4135                           
  4136                           ;Config_ADC.c: 139:     ADCON0bits.ADCS0 = 0;
  4137  023D  131F               	bcf	31,6	;volatile
  4138  023E                     l1508:
  4139                           
  4140                           ;Config_ADC.c: 140:     ADCON0bits.ADON = 1;
  4141  023E  141F               	bsf	31,0	;volatile
  4142  023F                     l245:
  4143  023F  0008               	return
  4144  0240                     __end_of_ADC_Config:
  4145                           
  4146                           	psect	text24
  4147  050F                     __ptext24:	
  4148 ;; *************** function _ISR *****************
  4149 ;; Defined at:
  4150 ;;		line 93 in file "pseudocodigo_lab3.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;		None
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;		None
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      void 
  4157 ;; Registers used:
  4158 ;;		wreg, status,2, status,0
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4164 ;;      Params:         0       0       0       0       0
  4165 ;;      Locals:         0       0       0       0       0
  4166 ;;      Temps:          3       0       0       0       0
  4167 ;;      Totals:         3       0       0       0       0
  4168 ;;Total ram usage:        3 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		Interrupt level 1
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           
  4178                           ;psect for function _ISR
  4179  050F                     _ISR:
  4180  050F                     i1l1728:
  4181                           
  4182                           ;pseudocodigo_lab3.c: 94:     if (PIR1bits.RCIF == 1){
  4183  050F  1283               	bcf	3,5	;RP0=0, select bank0
  4184  0510  1303               	bcf	3,6	;RP1=0, select bank0
  4185  0511  1E8C               	btfss	12,5	;volatile
  4186  0512  2D14               	goto	u78_21
  4187  0513  2D15               	goto	u78_20
  4188  0514                     u78_21:
  4189  0514  2D29               	goto	i1l98
  4190  0515                     u78_20:
  4191  0515                     i1l1730:
  4192                           
  4193                           ;pseudocodigo_lab3.c: 95:             data_recive = RCREG;
  4194  0515  081A               	movf	26,w	;volatile
  4195  0516  00F0               	movwf	??_ISR
  4196  0517  0870               	movf	??_ISR,w
  4197  0518  00F8               	movwf	_data_recive
  4198  0519                     i1l1732:
  4199                           
  4200                           ;pseudocodigo_lab3.c: 96:             cont++;
  4201  0519  3001               	movlw	1
  4202  051A  00F0               	movwf	??_ISR
  4203  051B  0870               	movf	??_ISR,w
  4204  051C  07A8               	addwf	_cont,f
  4205  051D                     i1l1734:
  4206                           
  4207                           ;pseudocodigo_lab3.c: 97:             if (data_recive == '+'){
  4208  051D  302B               	movlw	43
  4209  051E  0678               	xorwf	_data_recive,w
  4210  051F  1D03               	btfss	3,2
  4211  0520  2D22               	goto	u79_21
  4212  0521  2D23               	goto	u79_20
  4213  0522                     u79_21:
  4214  0522  2D26               	goto	i1l1738
  4215  0523                     u79_20:
  4216  0523                     i1l1736:
  4217                           
  4218                           ;pseudocodigo_lab3.c: 98:                 PORTB = 0xFF;
  4219  0523  30FF               	movlw	255
  4220  0524  0086               	movwf	6	;volatile
  4221                           
  4222                           ;pseudocodigo_lab3.c: 99:             }
  4223  0525  2D28               	goto	i1l1740
  4224  0526                     i1l1738:
  4225                           
  4226                           ;pseudocodigo_lab3.c: 101:                 PORTB = cont;
  4227  0526  0828               	movf	_cont,w
  4228  0527  0086               	movwf	6	;volatile
  4229  0528                     i1l1740:
  4230                           
  4231                           ;pseudocodigo_lab3.c: 103:             data_recive = 0;
  4232  0528  01F8               	clrf	_data_recive
  4233  0529                     i1l98:
  4234  0529  0872               	movf	??_ISR+2,w
  4235  052A  008A               	movwf	10
  4236  052B  0E71               	swapf	??_ISR+1,w
  4237  052C  0083               	movwf	3
  4238  052D  0EFE               	swapf	btemp,f
  4239  052E  0E7E               	swapf	btemp,w
  4240  052F  0009               	retfie
  4241  0530                     __end_of_ISR:
  4242  007E                     btemp	set	126	;btemp
  4243  007E                     wtemp0	set	126
  4244                           
  4245                           	psect	intentry
  4246  0004                     __pintentry:	
  4247                           ;incstack = 0
  4248                           ; Regs used in _ISR: [wreg+status,2+status,0]
  4249                           
  4250  0004                     interrupt_function:
  4251  007E                     saved_w	set	btemp
  4252  0004  00FE               	movwf	btemp
  4253  0005  0E03               	swapf	3,w
  4254  0006  00F1               	movwf	??_ISR+1
  4255  0007  080A               	movf	10,w
  4256  0008  00F2               	movwf	??_ISR+2
  4257  0009  120A  118A  2D0F   	ljmp	_ISR
  4258                           
  4259                           	psect	config
  4260                           
  4261                           ;Config register CONFIG1 @ 0x2007
  4262                           ;	Oscillator Selection bits
  4263                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4264                           ;	Watchdog Timer Enable bit
  4265                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4266                           ;	Power-up Timer Enable bit
  4267                           ;	PWRTE = OFF, PWRT disabled
  4268                           ;	RE3/MCLR pin function select bit
  4269                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4270                           ;	Code Protection bit
  4271                           ;	CP = OFF, Program memory code protection is disabled
  4272                           ;	Data Code Protection bit
  4273                           ;	CPD = OFF, Data memory code protection is disabled
  4274                           ;	Brown Out Reset Selection bits
  4275                           ;	BOREN = ON, BOR enabled
  4276                           ;	Internal External Switchover bit
  4277                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4278                           ;	Fail-Safe Clock Monitor Enabled bit
  4279                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4280                           ;	Low Voltage Programming Enable bit
  4281                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4282                           ;	In-Circuit Debugger Mode bit
  4283                           ;	DEBUG = 0x1, unprogrammed default
  4284  2007                     	org	8199
  4285  2007  23D4               	dw	9172
  4286                           
  4287                           ;Config register CONFIG2 @ 0x2008
  4288                           ;	Brown-out Reset Selection bit
  4289                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4290                           ;	Flash Program Memory Self Write Enable bits
  4291                           ;	WRT = OFF, Write protection off
  4292  2008                     	org	8200
  4293  2008  3FFF               	dw	16383

Data Sizes:
    Strings     26
    Constant    10
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     27      58
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> S3_cont(BANK0[3]), data1(BANK0[8]), data2(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 

    S3_cont	PTR unsigned char [3] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    data1	PTR unsigned char [8] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    data2	PTR unsigned char [8] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_ADC_channel1
    _main->_ADC_channel2
    _titulos_LCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _setup->_initOsc
    _Show_val_LCD->_Lcd_Set_Cursor
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _ADC_channel2->_ADC_Config
    _ADC_channel1->_ADC_Config

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ADC_to_string
    _titulos_LCD->_Lcd_Set_Cursor
    _titulos_LCD->_Lcd_Write_String
    _Show_val_LCD->_Lcd_Set_Cursor
    _ADC_to_string->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4084
                                             25 BANK0      2     2      0
                       _ADC_channel1
                       _ADC_channel2
                      _ADC_to_string
                           _Lcd_Init
                       _Show_val_LCD
                        _Trasmission
                    _USART_INTERRUPT
                         _USART_Init
                _USART_Init_BaudRate
                              _setup
                        _titulos_LCD
 ---------------------------------------------------------------------------------
 (1) _titulos_LCD                                          1     1      0     842
                                              3 BANK0      1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     228
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init_BaudRate                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_INTERRUPT                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Trasmission                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Show_val_LCD                                         2     2      0     676
                                              3 BANK0      2     2      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     614
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_to_string                                        3     3      0    2407
                                             22 BANK0      3     3      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    2407
                                              9 BANK0     13    10      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ADC_channel2                                         2     2      0      22
                                              6 COMMON     2     2      0
                         _ADC_Config
 ---------------------------------------------------------------------------------
 (1) _ADC_channel1                                         2     2      0      22
                                              6 COMMON     2     2      0
                         _ADC_Config
 ---------------------------------------------------------------------------------
 (2) _ADC_Config                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_channel1
     _ADC_Config
   _ADC_channel2
     _ADC_Config
   _ADC_to_string
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _isdigit
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Show_val_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
   _Trasmission
   _USART_INTERRUPT
   _USART_Init
   _USART_Init_BaudRate
   _setup
     _initOsc
   _titulos_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      45       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1B      3A       5       72.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      45      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 15:55:56 2021

                           pc 0002                ___bmul@product 0075                            fsr 0004  
         __size_of_ADC_Config 00BC              ?_USART_INTERRUPT 0070                           l121 0567  
                         l115 0583                           l124 0459                           l133 05DC  
                         l109 05EF                           l230 0194                           l150 030D  
                         l142 02E3                           l231 019B                           l127 02E0  
                         l151 0313                           l143 033B                           l240 01DA  
                         l232 01A2                           l152 033C                           l144 02E9  
                         l136 054B                           l241 01E1                           l233 01A9  
                         l145 02EF                           l242 01E8                           l234 01B0  
                         l146 02F5                           l243 01EF                           l235 01B7  
                         l227 0186                           l171 059D                           l147 02FB  
                         l244 01F6                           l236 01BE                           l180 050E  
                         l148 0301                           l245 023F                           l237 01C5  
                         l229 018D                           l165 038C                           l149 0307  
                         l238 01CC                           l262 0611                           l239 01D3  
                         l183 05B3                           l168 062B                           l265 061F  
                         l419 05C8                           l268 0625                           l189 04E8  
                         l389 0183                           l665 041D                           l675 0495  
                         l846 0601                           u410 05F8                           u411 05F7  
                         u420 05FE                           u421 05FD                           u430 05BA  
                         u431 05B9                           u440 05C7                           u520 0462  
                         u441 05C6                           u521 0461                           u540 0474  
                         _ISR 050F                           u541 0473                           u550 047E  
                         u551 047D                           u535 0466                           u810 03E2  
                         u570 0491                           u811 03E1                           u571 0490  
                         u555 047A                           u740 0583                           u900 04E8  
                         u741 0582                           u565 0485                           u901 04E7  
                         u750 0567                           u830 03F4                           u910 002D  
                         _VAL 0026                           u751 0566                           u831 03F3  
                         u911 002C                           u920 0046                           u760 05CF  
                         u825 03E6                           u921 0045                           u761 05CE  
                         u850 0405                           u930 007C                           u770 05D4  
                         u851 0404                           u931 007B                           u771 05D3  
                         u940 00AD                           u845 03F5                           u941 00AC  
                         u870 0419                           u950 00BB                           u871 0418  
                         u855 0401                           u951 00BA                           u960 00C1  
                         u880 04F1                           u865 040D                           u961 00C0  
                         u881 04F0                           u970 00E2                           u890 0503  
                         u971 00E1                           u891 0502                           u980 00ED  
                         u981 00EC                           u990 00FD                           u991 00FC  
                         u975 00DE                           u995 00F9                           fsr0 0004  
                         indf 0000                   _titulos_LCD 05DD                          ?_ISR 0070  
                        l2000 0164                          l2002 016D                          l2004 017F  
                        l2020 035D                          l2022 0363                          l2014 033D  
                        l2030 0240                          l2016 0343                          l2040 0298  
                        l2032 0274                          l2024 05DD                          l1410 0600  
                        l1402 05F1                          l2018 034D                          l2050 02C2  
                        l2042 02A0                          l2034 027E                          l2026 05E9  
                        l1500 01FD                          l1420 05BE                          l1404 05F2  
                        l2028 041E                          l2052 02CA                          l2044 02A8  
                        l2036 028A                          l2060 0392                          l1502 0237  
                        l1422 05C0                          l1414 05B5                          l1406 05F8  
                        l2054 02D2                          l2046 02B0                          l2038 0292  
                        l2070 03B1                          l2062 0397                          l1504 023A  
                        l2160 0205                          l1424 05C7                          l1416 05B6  
                        l1408 05FE                          l2056 02DA                          l2048 02B6  
                        l2072 03C0                          l2064 039C                          l1506 023D  
                        l1418 05BA                          l2074 03C5                          l2066 03A1  
                        l2058 038D                          l1508 023E                          l1460 046C  
                        l2156 0321                          l1604 02E2                          l1620 053B  
                        l2076 03CA                          l2068 03AB                          l1470 048B  
                        l1462 0470                          l1454 045A                          l2158 0092  
                        l1630 0543                          l1622 053F                          l1614 0530  
                        l2078 03CF                          l1464 0474                          l1456 0462  
                        l1472 0491                          l1720 05D4                          l1608 0319  
                        l1640 054A                          l1632 0544                          l1624 0540  
                        l1616 0536                          l1466 047E                          l1458 0465  
                        l1722 05D6                          l1650 0620                          l1642 061A  
                        l1634 0547                          l1626 0541                          l1618 053A  
                        l1900 0419                          l1468 0484                          l1724 05D8  
                        l1716 05C9                          l1644 061D                          l1636 0548  
                        l1628 0542                          l1670 0577                          l1910 04FD  
                        l1726 05DA                          l1718 05CF                          l1646 0602  
                        l1638 0549                          l1496 0185                          l1672 057B  
                        l1680 055B                          l1912 0503                          l1904 04EC  
                        l1648 0610                          l1920 04D3                          l1674 057F  
                        l1666 0568                          l1682 055F                          l1930 0034  
                        l1914 0508                          l1906 04F1                          l1922 04DB  
                        l1668 056E                          l1684 0563                          l1676 054C  
                        l1940 004C                          l1932 0039                          l1924 0022  
                        l1908 04F6                          l1860 05A2                          l1916 04C3  
                        l1678 0552                          l1942 005D                          l1934 003A  
                        l1926 0027                          l1870 0588                          l1862 05A8  
                        l1918 04C6                          l1880 03DC                          l1960 00AD  
                        l1952 007E                          l1944 0068                          l1936 0046  
                        l1928 002D                          l1856 0627                          l1872 058E  
                        l1864 05AB                          l1890 03F4                          l1882 03E2  
                        l1970 00C5                          l1962 00B1                          l1954 009D  
                        l1946 006C                          l1938 004A                          l1874 0591  
                        l1866 05B0                          l1858 059F                          l1892 0405  
                        l1884 03E5                          l1980 00ED                          l1964 00B6  
                        l1956 00A5                          l1948 007D                          l1876 059A  
                        l1868 0585                          l1894 040B                          l1886 03EC  
                        l1878 03D8                          l1990 0120                          l1982 00FD  
                        l1974 00C7                          l1966 00BB                          l1958 00A9  
                        l1896 040C                          l1888 03F0                          l1992 0127  
                        l1984 00FE                          l1968 00C1                          l1898 0413  
                        l1994 012C                          l1986 0112                          l1978 00E3  
                        l1996 015C                          l1988 0118                          STR_1 04A6  
                        STR_2 04B5                          STR_3 04B5                          STR_4 04BB  
                        u1000 0112                          u1001 0111                          u1010 0120  
                        u1011 011F                          u1020 016D                          u1021 016C  
                        u1005 010E                          u1030 017F                          u1031 017E  
                        u1107 0595                          u1117 0556                          u1127 0572  
                        u1047 03BC                          u1057 027A                          u1067 05AD  
                        u1077 0349                          u1087 0359                          u1097 0369  
                        i1l98 0529             ?_Lcd_Write_String 0070                          _cont 0028  
                        _main 038D                          btemp 007E                          start 000C  
          ??_Lcd_Write_String 0076               __end_of_Lcd_Cmd 059E             ___bmul@multiplier 0076  
                       ??_ISR 0070                         ?_main 0070                         _ANSEL 0188  
             __end_of___lwdiv 041E               __end_of___lwmod 0496                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
     __size_of_Lcd_Set_Cursor 0026                         _TRISA 0085                         _TRISB 0086  
                       _TRISD 0088                         _TRISE 0089                         u78_20 0515  
                       u78_21 0514                         u79_20 0523                         u79_21 0522  
                       _TXREG 0019              ADC_Config@AN_num 0075                         _data1 0034  
                       _data2 002C               __end_of_dpowers 04A6               __end_of_initOsc 033D  
             __end_of_isdigit 0602                         _setup 0530                         pclath 000A  
                       status 0003                         wtemp0 007E               __end_of_sprintf 0184  
                 ?_USART_Init 0070              __end_of_Lcd_Init 038D         __size_of_ADC_channel1 001C  
       __size_of_ADC_channel2 001C              __end_of_Lcd_Port 062C               __initialization 000F  
                __end_of_main 03D8                        ??_main 0058                        _ADCON1 009F  
                      _ADRESH 001E                        _ADRESL 009E                   initOsc@IRCF 0075  
         _USART_Init_BaudRate 061A                        ?_setup 0070                        _ANSELH 0189  
                      i1l1730 0515                        i1l1740 0528                        i1l1732 0519  
                ??_ADC_Config 0073                        i1l1734 051D                        i1l1736 0523  
                      i1l1728 050F                        i1l1738 0526                  _ADC_channel1 0568  
                _ADC_channel2 054C                     ??_Lcd_Cmd 0074                        _S1_val 002B  
                      _S2_val 002A                        _SPBRGH 009A       __size_of_Lcd_Write_Char 0016  
                      ___bmul 05B4          ?_USART_Init_BaudRate 0070                     ??___lwdiv 0077  
                   ??___lwmod 0046            __end_of_ADC_Config 0240                     ??_initOsc 0073  
                   ??_isdigit 0073                        saved_w 007E           __size_of_USART_Init 0010  
                   ??_sprintf 004B               Lcd_Set_Cursor@a 0040               Lcd_Set_Cursor@b 0077  
     __end_of__initialization 001B           ___bmul@multiplicand 0073                __pcstackCOMMON 0070  
       ??_USART_Init_BaudRate 0073                 __end_of_setup 054C                 ??_Trasmission 0073  
              _Lcd_Set_Cursor 04E9                  ?_titulos_LCD 0070                     ?_Lcd_Init 0070  
                   ?_Lcd_Port 0070                       ??_setup 0076                    __pbssBANK0 0020  
                  __pmaintext 038D                       ?___bmul 0073                    __pintentry 0004  
   __size_of_Lcd_Write_String 0029        __end_of_Lcd_Set_Cursor 050F        __size_of_ADC_to_string 003C  
                     _S3_cont 003C                    ??_Lcd_Init 003F           __end_of_Trasmission 05DD  
                  ??_Lcd_Port 0073      __size_of_USART_INTERRUPT 0006                    __stringtab 0496  
               _eusart_toggle 007A                    _cont_usart 0029                _Lcd_Write_Char 059E  
                     _Lcd_Cmd 0584                  ??_USART_Init 0073               __size_of___bmul 0015  
               ?_Show_val_LCD 0070                       ___lwdiv 03D8                       ___lwmod 045A  
             ?_Lcd_Set_Cursor 0077                       __ptext1 05DD                       __ptext2 04C0  
                     __ptext3 0530                       __ptext4 02E1                       __ptext5 061A  
                     __ptext6 0602                       __ptext7 0620                       __ptext8 05C9  
                     __ptext9 0240                  __size_of_ISR 0021                       _dpowers 049C  
                     _initOsc 02E1                       _isdigit 05F0            __end_of_USART_Init 0612  
                     _sprintf 001F                       clrloop0 0613        __end_of_Lcd_Write_Char 05B4  
        end_of_initialization 001B                 _ADC_to_string 041E                ??_Show_val_LCD 0042  
                   _RCSTAbits 0018                     Lcd_Port@a 0073                     _PORTEbits 0009  
                 _Trasmission 05C9                     _TRISCbits 0087          __size_of_titulos_LCD 0013  
             ?_Lcd_Write_Char 0070             Lcd_Write_String@a 003F             Lcd_Write_String@i 0040  
              ?_ADC_to_string 0070                     _TXSTAbits 0098             ??_USART_INTERRUPT 0073  
              __end_of___bmul 05C9              _Lcd_Write_String 04C0           start_initialization 000F  
                 __end_of_ISR 0530             __size_of_Lcd_Init 0050             __size_of_Lcd_Port 0006  
 __end_of_USART_Init_BaudRate 0620                      ??___bmul 0074               Lcd_Write_Char@a 0075  
                 __pbssCOMMON 0078                     ___latbits 0002                 __pcstackBANK0 003F  
                _isdigit$1011 0073          __end_of_Show_val_LCD 02E1                   _data_recive 0078  
             ??_ADC_to_string 0055                      ?_Lcd_Cmd 0070                   sprintf@flag 004F  
                 sprintf@prec 0053              ___lwdiv@dividend 0075              ??_Lcd_Set_Cursor 003F  
                    ?___lwdiv 0073                      ?___lwmod 0042                     __pstrings 0496  
                    ?_initOsc 0070                      ?_isdigit 0070              ___lwdiv@quotient 0040  
                    ?_sprintf 0048                __size_of_setup 001C                 ?_ADC_channel1 0070  
               ?_ADC_channel2 0070             interrupt_function 0004                     clear_ram0 0612  
                    _PIE1bits 008C                      Lcd_Cmd@a 0076                      _PIR1bits 000C  
                    _VAL_SWAP 0024                    _ADCON0bits 001F                   __stringbase 049B  
                ?_Trasmission 0070              ??_Lcd_Write_Char 0074               _USART_INTERRUPT 0620  
                    _Lcd_Init 033D                      _Lcd_Port 0626                ??_ADC_channel1 0076  
              ??_ADC_channel2 0076                    _ADC_Config 0184      __end_of_Lcd_Write_String 04E9  
            __size_of_Lcd_Cmd 001A                    _ADC_toggle 0079              __size_of___lwdiv 0046  
            __size_of___lwmod 003C            __end_of__stringtab 049C         __size_of_Show_val_LCD 00A1  
                  sprintf@val 0050                 ??_titulos_LCD 0042              __size_of_initOsc 005C  
            __size_of_isdigit 0012               ___lwdiv@divisor 0073               ___lwdiv@counter 003F  
                    __ptext10 059E                      __ptext11 04E9                      __ptext20 05B4  
                    __ptext12 033D                      __ptext21 054C                      __ptext13 0584  
                    __ptext22 0568                      __ptext14 0626                      __ptext23 0184  
                    __ptext15 041E                      __ptext24 050F                      __ptext16 001F  
                    __ptext17 05F0                      __ptext18 045A                      __ptext19 03D8  
            __size_of_sprintf 0165                 __size_of_main 004B                  _Show_val_LCD 0240  
     __end_of_USART_INTERRUPT 0626                    _INTCONbits 000B                   _VAL_NIBBLE1 0022  
                 _VAL_NIBBLE2 0020                      isdigit@c 0074                      intlevel1 0000  
                   sprintf@ap 004E                     sprintf@sp 0052                   ?_ADC_Config 0070  
         __end_of_titulos_LCD 05F0              ___lwmod@dividend 0044                     stringcode 0496  
                  _OSCCONbits 008F  __size_of_USART_Init_BaudRate 0006          __end_of_ADC_channel1 0584  
        __end_of_ADC_channel2 0568            Lcd_Set_Cursor@temp 0041                      sprintf@c 0054  
                    sprintf@f 0048               ___lwmod@divisor 0042          __size_of_Trasmission 0014  
             ___lwmod@counter 0047                      stringdir 0496                      stringtab 0496  
       __end_of_ADC_to_string 045A                    _USART_Init 0602  
