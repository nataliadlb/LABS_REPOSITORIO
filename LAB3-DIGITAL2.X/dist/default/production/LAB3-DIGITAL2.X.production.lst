

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 22:11:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text43,local,class=CODE,merge=1,delta=2
    57                           	psect	text44,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    60                           	psect	text17_split_1,local,class=CODE,merge=1,delta=2
    61                           	dabs	1,0x7E,2
    62  0000                     
    63                           ; Version 2.20
    64                           ; Generated 12/02/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F887 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  0007                     	;# 
   105  0008                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  000E                     	;# 
   113  000F                     	;# 
   114  0010                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0014                     	;# 
   119  0015                     	;# 
   120  0015                     	;# 
   121  0016                     	;# 
   122  0017                     	;# 
   123  0018                     	;# 
   124  0019                     	;# 
   125  001A                     	;# 
   126  001B                     	;# 
   127  001B                     	;# 
   128  001C                     	;# 
   129  001D                     	;# 
   130  001E                     	;# 
   131  001F                     	;# 
   132  0081                     	;# 
   133  0085                     	;# 
   134  0086                     	;# 
   135  0087                     	;# 
   136  0088                     	;# 
   137  0089                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  008F                     	;# 
   142  0090                     	;# 
   143  0091                     	;# 
   144  0092                     	;# 
   145  0093                     	;# 
   146  0093                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0095                     	;# 
   150  0096                     	;# 
   151  0097                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009A                     	;# 
   155  009B                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  0105                     	;# 
   161  0107                     	;# 
   162  0108                     	;# 
   163  0109                     	;# 
   164  010C                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  0185                     	;# 
   170  0187                     	;# 
   171  0188                     	;# 
   172  0189                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0008                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  000E                     	;# 
   190  000E                     	;# 
   191  000F                     	;# 
   192  0010                     	;# 
   193  0011                     	;# 
   194  0012                     	;# 
   195  0013                     	;# 
   196  0014                     	;# 
   197  0015                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001D                     	;# 
   208  001E                     	;# 
   209  001F                     	;# 
   210  0081                     	;# 
   211  0085                     	;# 
   212  0086                     	;# 
   213  0087                     	;# 
   214  0088                     	;# 
   215  0089                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  008F                     	;# 
   220  0090                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0093                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0095                     	;# 
   228  0096                     	;# 
   229  0097                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  0105                     	;# 
   239  0107                     	;# 
   240  0108                     	;# 
   241  0109                     	;# 
   242  010C                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  0185                     	;# 
   248  0187                     	;# 
   249  0188                     	;# 
   250  0189                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  0000                     	;# 
   254  0001                     	;# 
   255  0002                     	;# 
   256  0003                     	;# 
   257  0004                     	;# 
   258  0005                     	;# 
   259  0006                     	;# 
   260  0007                     	;# 
   261  0008                     	;# 
   262  0009                     	;# 
   263  000A                     	;# 
   264  000B                     	;# 
   265  000C                     	;# 
   266  000D                     	;# 
   267  000E                     	;# 
   268  000E                     	;# 
   269  000F                     	;# 
   270  0010                     	;# 
   271  0011                     	;# 
   272  0012                     	;# 
   273  0013                     	;# 
   274  0014                     	;# 
   275  0015                     	;# 
   276  0015                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001B                     	;# 
   284  001C                     	;# 
   285  001D                     	;# 
   286  001E                     	;# 
   287  001F                     	;# 
   288  0081                     	;# 
   289  0085                     	;# 
   290  0086                     	;# 
   291  0087                     	;# 
   292  0088                     	;# 
   293  0089                     	;# 
   294  008C                     	;# 
   295  008D                     	;# 
   296  008E                     	;# 
   297  008F                     	;# 
   298  0090                     	;# 
   299  0091                     	;# 
   300  0092                     	;# 
   301  0093                     	;# 
   302  0093                     	;# 
   303  0093                     	;# 
   304  0094                     	;# 
   305  0095                     	;# 
   306  0096                     	;# 
   307  0097                     	;# 
   308  0098                     	;# 
   309  0099                     	;# 
   310  009A                     	;# 
   311  009B                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  009F                     	;# 
   316  0105                     	;# 
   317  0107                     	;# 
   318  0108                     	;# 
   319  0109                     	;# 
   320  010C                     	;# 
   321  010C                     	;# 
   322  010D                     	;# 
   323  010E                     	;# 
   324  010F                     	;# 
   325  0185                     	;# 
   326  0187                     	;# 
   327  0188                     	;# 
   328  0189                     	;# 
   329  018C                     	;# 
   330  018D                     	;# 
   331  0000                     	;# 
   332  0001                     	;# 
   333  0002                     	;# 
   334  0003                     	;# 
   335  0004                     	;# 
   336  0005                     	;# 
   337  0006                     	;# 
   338  0007                     	;# 
   339  0008                     	;# 
   340  0009                     	;# 
   341  000A                     	;# 
   342  000B                     	;# 
   343  000C                     	;# 
   344  000D                     	;# 
   345  000E                     	;# 
   346  000E                     	;# 
   347  000F                     	;# 
   348  0010                     	;# 
   349  0011                     	;# 
   350  0012                     	;# 
   351  0013                     	;# 
   352  0014                     	;# 
   353  0015                     	;# 
   354  0015                     	;# 
   355  0016                     	;# 
   356  0017                     	;# 
   357  0018                     	;# 
   358  0019                     	;# 
   359  001A                     	;# 
   360  001B                     	;# 
   361  001B                     	;# 
   362  001C                     	;# 
   363  001D                     	;# 
   364  001E                     	;# 
   365  001F                     	;# 
   366  0081                     	;# 
   367  0085                     	;# 
   368  0086                     	;# 
   369  0087                     	;# 
   370  0088                     	;# 
   371  0089                     	;# 
   372  008C                     	;# 
   373  008D                     	;# 
   374  008E                     	;# 
   375  008F                     	;# 
   376  0090                     	;# 
   377  0091                     	;# 
   378  0092                     	;# 
   379  0093                     	;# 
   380  0093                     	;# 
   381  0093                     	;# 
   382  0094                     	;# 
   383  0095                     	;# 
   384  0096                     	;# 
   385  0097                     	;# 
   386  0098                     	;# 
   387  0099                     	;# 
   388  009A                     	;# 
   389  009B                     	;# 
   390  009C                     	;# 
   391  009D                     	;# 
   392  009E                     	;# 
   393  009F                     	;# 
   394  0105                     	;# 
   395  0107                     	;# 
   396  0108                     	;# 
   397  0109                     	;# 
   398  010C                     	;# 
   399  010C                     	;# 
   400  010D                     	;# 
   401  010E                     	;# 
   402  010F                     	;# 
   403  0185                     	;# 
   404  0187                     	;# 
   405  0188                     	;# 
   406  0189                     	;# 
   407  018C                     	;# 
   408  018D                     	;# 
   409  0000                     	;# 
   410  0001                     	;# 
   411  0002                     	;# 
   412  0003                     	;# 
   413  0004                     	;# 
   414  0005                     	;# 
   415  0006                     	;# 
   416  0007                     	;# 
   417  0008                     	;# 
   418  0009                     	;# 
   419  000A                     	;# 
   420  000B                     	;# 
   421  000C                     	;# 
   422  000D                     	;# 
   423  000E                     	;# 
   424  000E                     	;# 
   425  000F                     	;# 
   426  0010                     	;# 
   427  0011                     	;# 
   428  0012                     	;# 
   429  0013                     	;# 
   430  0014                     	;# 
   431  0015                     	;# 
   432  0015                     	;# 
   433  0016                     	;# 
   434  0017                     	;# 
   435  0018                     	;# 
   436  0019                     	;# 
   437  001A                     	;# 
   438  001B                     	;# 
   439  001B                     	;# 
   440  001C                     	;# 
   441  001D                     	;# 
   442  001E                     	;# 
   443  001F                     	;# 
   444  0081                     	;# 
   445  0085                     	;# 
   446  0086                     	;# 
   447  0087                     	;# 
   448  0088                     	;# 
   449  0089                     	;# 
   450  008C                     	;# 
   451  008D                     	;# 
   452  008E                     	;# 
   453  008F                     	;# 
   454  0090                     	;# 
   455  0091                     	;# 
   456  0092                     	;# 
   457  0093                     	;# 
   458  0093                     	;# 
   459  0093                     	;# 
   460  0094                     	;# 
   461  0095                     	;# 
   462  0096                     	;# 
   463  0097                     	;# 
   464  0098                     	;# 
   465  0099                     	;# 
   466  009A                     	;# 
   467  009B                     	;# 
   468  009C                     	;# 
   469  009D                     	;# 
   470  009E                     	;# 
   471  009F                     	;# 
   472  0105                     	;# 
   473  0107                     	;# 
   474  0108                     	;# 
   475  0109                     	;# 
   476  010C                     	;# 
   477  010C                     	;# 
   478  010D                     	;# 
   479  010E                     	;# 
   480  010F                     	;# 
   481  0185                     	;# 
   482  0187                     	;# 
   483  0188                     	;# 
   484  0189                     	;# 
   485  018C                     	;# 
   486  018D                     	;# 
   487  0000                     	;# 
   488  0001                     	;# 
   489  0002                     	;# 
   490  0003                     	;# 
   491  0004                     	;# 
   492  0005                     	;# 
   493  0006                     	;# 
   494  0007                     	;# 
   495  0008                     	;# 
   496  0009                     	;# 
   497  000A                     	;# 
   498  000B                     	;# 
   499  000C                     	;# 
   500  000D                     	;# 
   501  000E                     	;# 
   502  000E                     	;# 
   503  000F                     	;# 
   504  0010                     	;# 
   505  0011                     	;# 
   506  0012                     	;# 
   507  0013                     	;# 
   508  0014                     	;# 
   509  0015                     	;# 
   510  0015                     	;# 
   511  0016                     	;# 
   512  0017                     	;# 
   513  0018                     	;# 
   514  0019                     	;# 
   515  001A                     	;# 
   516  001B                     	;# 
   517  001B                     	;# 
   518  001C                     	;# 
   519  001D                     	;# 
   520  001E                     	;# 
   521  001F                     	;# 
   522  0081                     	;# 
   523  0085                     	;# 
   524  0086                     	;# 
   525  0087                     	;# 
   526  0088                     	;# 
   527  0089                     	;# 
   528  008C                     	;# 
   529  008D                     	;# 
   530  008E                     	;# 
   531  008F                     	;# 
   532  0090                     	;# 
   533  0091                     	;# 
   534  0092                     	;# 
   535  0093                     	;# 
   536  0093                     	;# 
   537  0093                     	;# 
   538  0094                     	;# 
   539  0095                     	;# 
   540  0096                     	;# 
   541  0097                     	;# 
   542  0098                     	;# 
   543  0099                     	;# 
   544  009A                     	;# 
   545  009B                     	;# 
   546  009C                     	;# 
   547  009D                     	;# 
   548  009E                     	;# 
   549  009F                     	;# 
   550  0105                     	;# 
   551  0107                     	;# 
   552  0108                     	;# 
   553  0109                     	;# 
   554  010C                     	;# 
   555  010C                     	;# 
   556  010D                     	;# 
   557  010E                     	;# 
   558  010F                     	;# 
   559  0185                     	;# 
   560  0187                     	;# 
   561  0188                     	;# 
   562  0189                     	;# 
   563  018C                     	;# 
   564  018D                     	;# 
   565                           
   566                           	psect	strings
   567  1000                     __pstrings:
   568  1000                     stringtab:
   569  1000                     __stringtab:
   570                           
   571                           ;	String table - string pointers are 1 byte each
   572  1000  1BFF               	btfsc	btemp+1,7
   573  1001  280A               	ljmp	stringcode
   574  1002  1383               	bcf	3,7
   575  1003  187F               	btfsc	btemp+1,0
   576  1004  1783               	bsf	3,7
   577  1005  0800               	movf	0,w
   578  1006  0A84               	incf	4,f
   579  1007  1903               	skipnz
   580  1008  0AFF               	incf	btemp+1,f
   581  1009  0008               	return
   582  100A                     stringcode:
   583  100A                     stringdir:
   584  100A  3010               	movlw	high stringdir
   585  100B  008A               	movwf	10
   586  100C  0804               	movf	4,w
   587  100D  0A84               	incf	4,f
   588  100E  0782               	addwf	2,f
   589  100F                     __stringbase:
   590  100F  3400               	retlw	0
   591  1010                     __end_of__stringtab:
   592  1010                     __powers_:
   593  1010  3400               	retlw	0
   594  1011  3480               	retlw	128
   595  1012  343F               	retlw	63
   596  1013  3400               	retlw	0
   597  1014  3420               	retlw	32
   598  1015  3441               	retlw	65
   599  1016  3400               	retlw	0
   600  1017  34C8               	retlw	200
   601  1018  3442               	retlw	66
   602  1019  3400               	retlw	0
   603  101A  347A               	retlw	122
   604  101B  3444               	retlw	68
   605  101C  3440               	retlw	64
   606  101D  341C               	retlw	28
   607  101E  3446               	retlw	70
   608  101F  3450               	retlw	80
   609  1020  34C3               	retlw	195
   610  1021  3447               	retlw	71
   611  1022  3424               	retlw	36
   612  1023  3474               	retlw	116
   613  1024  3449               	retlw	73
   614  1025  3497               	retlw	151
   615  1026  3418               	retlw	24
   616  1027  344B               	retlw	75
   617  1028  34BC               	retlw	188
   618  1029  34BE               	retlw	190
   619  102A  344C               	retlw	76
   620  102B  346B               	retlw	107
   621  102C  346E               	retlw	110
   622  102D  344E               	retlw	78
   623  102E  3403               	retlw	3
   624  102F  3415               	retlw	21
   625  1030  3450               	retlw	80
   626  1031  3479               	retlw	121
   627  1032  34AD               	retlw	173
   628  1033  3460               	retlw	96
   629  1034  34F3               	retlw	243
   630  1035  3449               	retlw	73
   631  1036  3471               	retlw	113
   632  1037                     __end_of__powers_:
   633  1037                     __npowers_:
   634  1037  3400               	retlw	0
   635  1038  3480               	retlw	128
   636  1039  343F               	retlw	63
   637  103A  34CD               	retlw	205
   638  103B  34CC               	retlw	204
   639  103C  343D               	retlw	61
   640  103D  34D7               	retlw	215
   641  103E  3423               	retlw	35
   642  103F  343C               	retlw	60
   643  1040  3412               	retlw	18
   644  1041  3483               	retlw	131
   645  1042  343A               	retlw	58
   646  1043  34B7               	retlw	183
   647  1044  34D1               	retlw	209
   648  1045  3438               	retlw	56
   649  1046  34C6               	retlw	198
   650  1047  3427               	retlw	39
   651  1048  3437               	retlw	55
   652  1049  3438               	retlw	56
   653  104A  3486               	retlw	134
   654  104B  3435               	retlw	53
   655  104C  34C0               	retlw	192
   656  104D  34D6               	retlw	214
   657  104E  3433               	retlw	51
   658  104F  34CC               	retlw	204
   659  1050  342B               	retlw	43
   660  1051  3432               	retlw	50
   661  1052  3470               	retlw	112
   662  1053  3489               	retlw	137
   663  1054  3430               	retlw	48
   664  1055  34E7               	retlw	231
   665  1056  34DB               	retlw	219
   666  1057  342E               	retlw	46
   667  1058  34E5               	retlw	229
   668  1059  343C               	retlw	60
   669  105A  341E               	retlw	30
   670  105B  3442               	retlw	66
   671  105C  34A2               	retlw	162
   672  105D  340D               	retlw	13
   673  105E                     __end_of__npowers_:
   674  105E                     _dpowers:
   675  105E  3401               	retlw	1
   676  105F  3400               	retlw	0
   677  1060  3400               	retlw	0
   678  1061  3400               	retlw	0
   679  1062  340A               	retlw	10
   680  1063  3400               	retlw	0
   681  1064  3400               	retlw	0
   682  1065  3400               	retlw	0
   683  1066  3464               	retlw	100
   684  1067  3400               	retlw	0
   685  1068  3400               	retlw	0
   686  1069  3400               	retlw	0
   687  106A  34E8               	retlw	232
   688  106B  3403               	retlw	3
   689  106C  3400               	retlw	0
   690  106D  3400               	retlw	0
   691  106E  3410               	retlw	16
   692  106F  3427               	retlw	39
   693  1070  3400               	retlw	0
   694  1071  3400               	retlw	0
   695  1072  34A0               	retlw	160
   696  1073  3486               	retlw	134
   697  1074  3401               	retlw	1
   698  1075  3400               	retlw	0
   699  1076  3440               	retlw	64
   700  1077  3442               	retlw	66
   701  1078  340F               	retlw	15
   702  1079  3400               	retlw	0
   703  107A  3480               	retlw	128
   704  107B  3496               	retlw	150
   705  107C  3498               	retlw	152
   706  107D  3400               	retlw	0
   707  107E  3400               	retlw	0
   708  107F  34E1               	retlw	225
   709  1080  34F5               	retlw	245
   710  1081  3405               	retlw	5
   711  1082  3400               	retlw	0
   712  1083  34CA               	retlw	202
   713  1084  349A               	retlw	154
   714  1085  343B               	retlw	59
   715  1086                     __end_of_dpowers:
   716  0019                     _TXREG	set	25
   717  000B                     _INTCONbits	set	11
   718  0018                     _RCSTAbits	set	24
   719  0009                     _PORTEbits	set	9
   720  0009                     _PORTE	set	9
   721  0008                     _PORTD	set	8
   722  0007                     _PORTC	set	7
   723  0005                     _PORTA	set	5
   724  001E                     _ADRESH	set	30
   725  001F                     _ADCON0bits	set	31
   726  0006                     _PORTB	set	6
   727  001A                     _RCREG	set	26
   728  000C                     _PIR1bits	set	12
   729  0065                     _RCIF	set	101
   730  008C                     _PIE1bits	set	140
   731  0099                     _SPBRG	set	153
   732  009A                     _SPBRGH	set	154
   733  0098                     _TXSTAbits	set	152
   734  009F                     _ADCON1	set	159
   735  009E                     _ADRESL	set	158
   736  008F                     _OSCCONbits	set	143
   737  0089                     _TRISE	set	137
   738  0087                     _TRISCbits	set	135
   739  0086                     _TRISB	set	134
   740  0085                     _TRISA	set	133
   741  0088                     _TRISD	set	136
   742  04C1                     _TRMT	set	1217
   743  0189                     _ANSELH	set	393
   744  0188                     _ANSEL	set	392
   745  1086                     STR_2:
   746  1086  3425               	retlw	37	;'%'
   747  1087  3431               	retlw	49	;'1'
   748  1088  342E               	retlw	46	;'.'
   749  1089  3432               	retlw	50	;'2'
   750  108A  3466               	retlw	102	;'f'
   751  108B  3456               	retlw	86	;'V'
   752  108C  3420               	retlw	32	;' '
   753  108D  3425               	retlw	37	;'%'
   754  108E  3431               	retlw	49	;'1'
   755  108F  342E               	retlw	46	;'.'
   756  1090  3432               	retlw	50	;'2'
   757  1091  3466               	retlw	102	;'f'
   758  1092  3456               	retlw	86	;'V'
   759  1093  3420               	retlw	32	;' '
   760  1094  3420               	retlw	32	;' '
   761  1095  3425               	retlw	37	;'%'
   762  1096  3464               	retlw	100	;'d'
   763  1097  3400               	retlw	0
   764  1098                     STR_3:
   765  1098  3453               	retlw	83	;'S'
   766  1099  3431               	retlw	49	;'1'
   767  109A  343A               	retlw	58	;':'
   768  109B  3420               	retlw	32	;' '
   769  109C  3420               	retlw	32	;' '
   770  109D  3420               	retlw	32	;' '
   771  109E  3453               	retlw	83	;'S'
   772  109F  3432               	retlw	50	;'2'
   773  10A0  343A               	retlw	58	;':'
   774  10A1  3420               	retlw	32	;' '
   775  10A2  3420               	retlw	32	;' '
   776  10A3  3420               	retlw	32	;' '
   777  10A4  3453               	retlw	83	;'S'
   778  10A5  3433               	retlw	51	;'3'
   779  10A6  343A               	retlw	58	;':'
   780  10A7  3400               	retlw	0
   781  10A8                     STR_1:
   782  10A8  3453               	retlw	83	;'S'
   783  10A9  3431               	retlw	49	;'1'
   784  10AA  3420               	retlw	32	;' '
   785  10AB  3420               	retlw	32	;' '
   786  10AC  3420               	retlw	32	;' '
   787  10AD  3453               	retlw	83	;'S'
   788  10AE  3432               	retlw	50	;'2'
   789  10AF  3420               	retlw	32	;' '
   790  10B0  3420               	retlw	32	;' '
   791  10B1  3420               	retlw	32	;' '
   792  10B2  3453               	retlw	83	;'S'
   793  10B3  3433               	retlw	51	;'3'
   794  10B4  3420               	retlw	32	;' '
   795  10B5  340A               	retlw	10
   796  10B6  3400               	retlw	0
   797                           
   798                           	psect	cinit
   799  000F                     start_initialization:	
   800                           ; #config settings
   801                           
   802  000F                     __initialization:
   803                           
   804                           ; Clear objects allocated to COMMON
   805  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   806  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   807  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   808                           
   809                           ; Clear objects allocated to BANK0
   810  0012  1283               	bcf	3,5	;RP0=0, select bank0
   811  0013  1303               	bcf	3,6	;RP1=0, select bank0
   812  0014  01EE               	clrf	__pbssBANK0& (0+127)
   813                           
   814                           ; Clear objects allocated to BANK1
   815  0015  1383               	bcf	3,7	;select IRP bank0
   816  0016  30C2               	movlw	low __pbssBANK1
   817  0017  0084               	movwf	4
   818  0018  30E2               	movlw	low (__pbssBANK1+32)
   819  0019  160A  158A  2485  120A  118A  	fcall	clear_ram0
   820  001E                     end_of_initialization:	
   821                           ;End of C runtime variable initialization code
   822                           
   823  001E                     __end_of__initialization:
   824  001E  0183               	clrf	3
   825  001F  120A  118A  2F9D   	ljmp	_main	;jump to C main() function
   826                           
   827                           	psect	bssCOMMON
   828  0078                     __pbssCOMMON:
   829  0078                     _VAL:
   830  0078                     	ds	2
   831  007A                     _data_recive:
   832  007A                     	ds	1
   833                           
   834                           	psect	bssBANK0
   835  006E                     __pbssBANK0:
   836  006E                     _cont:
   837  006E                     	ds	1
   838                           
   839                           	psect	bssBANK1
   840  00C2                     __pbssBANK1:
   841  00C2                     _S2_val:
   842  00C2                     	ds	3
   843  00C5                     _S1_val:
   844  00C5                     	ds	3
   845  00C8                     _VAL_NIBBLE2:
   846  00C8                     	ds	2
   847  00CA                     _VAL_NIBBLE1:
   848  00CA                     	ds	2
   849  00CC                     _VAL_SWAP:
   850  00CC                     	ds	2
   851  00CE                     _data_total:
   852  00CE                     	ds	20
   853                           
   854                           	psect	clrtext
   855  1C85                     clear_ram0:	
   856                           ;	Called with FSR containing the base address, and
   857                           ;	W with the last address+1
   858                           
   859  1C85  0064               	clrwdt	;clear the watchdog before getting into this loop
   860  1C86                     clrloop0:
   861  1C86  0180               	clrf	0	;clear RAM location pointed to by FSR
   862  1C87  0A84               	incf	4,f	;increment pointer
   863  1C88  0604               	xorwf	4,w	;XOR with final address
   864  1C89  1903               	btfsc	3,2	;have we reached the end yet?
   865  1C8A  3400               	retlw	0	;all done for this memory range, return
   866  1C8B  0604               	xorwf	4,w	;XOR again to restore value
   867  1C8C  2C86               	goto	clrloop0	;do the next byte
   868                           
   869                           	psect	cstackBANK1
   870  00A0                     __pcstackBANK1:
   871  00A0                     ??_sprintf:
   872                           
   873                           ; 1 bytes @ 0x0
   874  00A0                     	ds	6
   875  00A6                     _sprintf$1188:
   876                           
   877                           ; 3 bytes @ 0x6
   878  00A6                     	ds	3
   879  00A9                     sprintf@ap:
   880                           
   881                           ; 1 bytes @ 0x9
   882  00A9                     	ds	1
   883  00AA                     sprintf@flag:
   884                           
   885                           ; 2 bytes @ 0xA
   886  00AA                     	ds	2
   887  00AC                     sprintf@width:
   888                           
   889                           ; 2 bytes @ 0xC
   890  00AC                     	ds	2
   891  00AE                     sprintf@tmpval:
   892                           
   893                           ; 4 bytes @ 0xE
   894  00AE                     	ds	4
   895  00B2                     sprintf@val:
   896                           
   897                           ; 4 bytes @ 0x12
   898  00B2                     	ds	4
   899  00B6                     sprintf@eexp:
   900                           
   901                           ; 2 bytes @ 0x16
   902  00B6                     	ds	2
   903  00B8                     sprintf@fval:
   904                           
   905                           ; 3 bytes @ 0x18
   906  00B8                     	ds	3
   907  00BB                     sprintf@sp:
   908                           
   909                           ; 1 bytes @ 0x1B
   910  00BB                     	ds	1
   911  00BC                     sprintf@prec:
   912                           
   913                           ; 2 bytes @ 0x1C
   914  00BC                     	ds	2
   915  00BE                     sprintf@c:
   916                           
   917                           ; 1 bytes @ 0x1E
   918  00BE                     	ds	1
   919  00BF                     ??_main:
   920                           
   921                           ; 1 bytes @ 0x1F
   922  00BF                     	ds	3
   923                           
   924                           	psect	cstackCOMMON
   925  0070                     __pcstackCOMMON:
   926  0070                     ?_isdigit:
   927  0070                     ?_setup:	
   928                           ; 1 bit 
   929                           
   930  0070                     ?_Lcd_Init:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0070                     ?_Lcd_Clear:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0070                     ?_ADC_channel1:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0070                     ?_ADC_channel2:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0070                     ?_ADC_to_string:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0070                     ?_Write_USART:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0070                     ?_Show_val_LCD:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0070                     ?_ADC_Config:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0070                     ?_initOsc:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0070                     ?_USART_Init_BaudRate:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0070                     ?_USART_Init:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0070                     ?_USART_INTERRUPT:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0070                     ?_Lcd_Port:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0070                     ?_Lcd_Cmd:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0070                     ?_ISR:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0070                     ??_ISR:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?_main:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ?_Lcd_Write_Char:	
   982                           ; 1 bytes @ 0x0
   983                           
   984                           
   985                           ; 1 bytes @ 0x0
   986  0070                     	ds	3
   987  0073                     ??_Write_USART:
   988  0073                     ??_ADC_Config:	
   989                           ; 1 bytes @ 0x3
   990                           
   991  0073                     ??_initOsc:	
   992                           ; 1 bytes @ 0x3
   993                           
   994  0073                     ??_USART_Init_BaudRate:	
   995                           ; 1 bytes @ 0x3
   996                           
   997  0073                     ??_USART_Init:	
   998                           ; 1 bytes @ 0x3
   999                           
  1000  0073                     ??_USART_INTERRUPT:	
  1001                           ; 1 bytes @ 0x3
  1002                           
  1003  0073                     ??_Lcd_Port:	
  1004                           ; 1 bytes @ 0x3
  1005                           
  1006  0073                     ??_isdigit:	
  1007                           ; 1 bytes @ 0x3
  1008                           
  1009  0073                     ??__tdiv_to_l_:	
  1010                           ; 1 bytes @ 0x3
  1011                           
  1012  0073                     ??___lldiv:	
  1013                           ; 1 bytes @ 0x3
  1014                           
  1015  0073                     ??___ftge:	
  1016                           ; 1 bytes @ 0x3
  1017                           
  1018  0073                     ?___wmul:	
  1019                           ; 1 bytes @ 0x3
  1020                           
  1021  0073                     ?___awmod:	
  1022                           ; 2 bytes @ 0x3
  1023                           
  1024  0073                     ?___lwmod:	
  1025                           ; 2 bytes @ 0x3
  1026                           
  1027  0073                     ?___ftpack:	
  1028                           ; 2 bytes @ 0x3
  1029                           
  1030  0073                     ?___ftneg:	
  1031                           ; 3 bytes @ 0x3
  1032                           
  1033  0073                     Lcd_Port@a:	
  1034                           ; 3 bytes @ 0x3
  1035                           
  1036  0073                     Write_USART@a:	
  1037                           ; 1 bytes @ 0x3
  1038                           
  1039  0073                     _isdigit$978:	
  1040                           ; 1 bytes @ 0x3
  1041                           
  1042  0073                     ___wmul@multiplier:	
  1043                           ; 1 bytes @ 0x3
  1044                           
  1045  0073                     ___awmod@divisor:	
  1046                           ; 2 bytes @ 0x3
  1047                           
  1048  0073                     ___lwmod@divisor:	
  1049                           ; 2 bytes @ 0x3
  1050                           
  1051  0073                     ___ftpack@arg:	
  1052                           ; 2 bytes @ 0x3
  1053                           
  1054  0073                     ___ftneg@f1:	
  1055                           ; 3 bytes @ 0x3
  1056                           
  1057                           
  1058                           ; 3 bytes @ 0x3
  1059  0073                     	ds	1
  1060  0074                     ?_Write_USART_String:
  1061  0074                     ??_Lcd_Cmd:	
  1062                           ; 1 bytes @ 0x4
  1063                           
  1064  0074                     ??_Lcd_Write_Char:	
  1065                           ; 1 bytes @ 0x4
  1066                           
  1067  0074                     ??___llmod:	
  1068                           ; 1 bytes @ 0x4
  1069                           
  1070  0074                     isdigit@c:	
  1071                           ; 1 bytes @ 0x4
  1072                           
  1073  0074                     Write_USART_String@a:	
  1074                           ; 1 bytes @ 0x4
  1075                           
  1076                           
  1077                           ; 2 bytes @ 0x4
  1078  0074                     	ds	1
  1079  0075                     initOsc@IRCF:
  1080  0075                     Lcd_Write_Char@a:	
  1081                           ; 1 bytes @ 0x5
  1082                           
  1083  0075                     ADC_Config@AN_num:	
  1084                           ; 1 bytes @ 0x5
  1085                           
  1086  0075                     ___llmod@counter:	
  1087                           ; 1 bytes @ 0x5
  1088                           
  1089  0075                     ___wmul@multiplicand:	
  1090                           ; 1 bytes @ 0x5
  1091                           
  1092  0075                     ___awmod@dividend:	
  1093                           ; 2 bytes @ 0x5
  1094                           
  1095  0075                     ___lwmod@dividend:	
  1096                           ; 2 bytes @ 0x5
  1097                           
  1098                           
  1099                           ; 2 bytes @ 0x5
  1100  0075                     	ds	1
  1101  0076                     ??_setup:
  1102  0076                     ??_Write_USART_String:	
  1103                           ; 1 bytes @ 0x6
  1104                           
  1105  0076                     ?_Lcd_Write_String:	
  1106                           ; 1 bytes @ 0x6
  1107                           
  1108  0076                     ??___ftneg:	
  1109                           ; 1 bytes @ 0x6
  1110                           
  1111  0076                     Lcd_Cmd@a:	
  1112                           ; 1 bytes @ 0x6
  1113                           
  1114  0076                     ___ftpack@exp:	
  1115                           ; 1 bytes @ 0x6
  1116                           
  1117  0076                     Lcd_Write_String@a:	
  1118                           ; 1 bytes @ 0x6
  1119                           
  1120                           
  1121                           ; 2 bytes @ 0x6
  1122  0076                     	ds	1
  1123  0077                     ??_Lcd_Clear:
  1124  0077                     ?_Lcd_Set_Cursor:	
  1125                           ; 1 bytes @ 0x7
  1126                           
  1127  0077                     ??___wmul:	
  1128                           ; 1 bytes @ 0x7
  1129                           
  1130  0077                     ??___awmod:	
  1131                           ; 1 bytes @ 0x7
  1132                           
  1133  0077                     ??___lwmod:	
  1134                           ; 1 bytes @ 0x7
  1135                           
  1136  0077                     Lcd_Set_Cursor@b:	
  1137                           ; 1 bytes @ 0x7
  1138                           
  1139  0077                     Write_USART_String@i:	
  1140                           ; 1 bytes @ 0x7
  1141                           
  1142  0077                     ___ftpack@sign:	
  1143                           ; 1 bytes @ 0x7
  1144                           
  1145                           
  1146                           ; 1 bytes @ 0x7
  1147  0077                     	ds	1
  1148  0078                     ??___ftsub:
  1149                           
  1150                           	psect	cstackBANK0
  1151  0020                     __pcstackBANK0:	
  1152                           ; 1 bytes @ 0x8
  1153                           
  1154  0020                     ?___ftge:
  1155  0020                     ??_Lcd_Init:	
  1156                           ; 1 bit 
  1157                           
  1158  0020                     ??_Lcd_Set_Cursor:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0020                     ??_Lcd_Write_String:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0020                     ??___ftpack:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0020                     ?__tdiv_to_l_:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0020                     ?__div_to_l_:	
  1171                           ; 4 bytes @ 0x0
  1172                           
  1173  0020                     ?___lldiv:	
  1174                           ; 4 bytes @ 0x0
  1175                           
  1176  0020                     ___awmod@counter:	
  1177                           ; 4 bytes @ 0x0
  1178                           
  1179  0020                     ___lwmod@counter:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0020                     ___wmul@product:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0020                     __div_to_l_@f1:	
  1186                           ; 2 bytes @ 0x0
  1187                           
  1188  0020                     __tdiv_to_l_@f1:	
  1189                           ; 3 bytes @ 0x0
  1190                           
  1191  0020                     ___ftge@ff1:	
  1192                           ; 3 bytes @ 0x0
  1193                           
  1194  0020                     ___lldiv@divisor:	
  1195                           ; 3 bytes @ 0x0
  1196                           
  1197                           
  1198                           ; 4 bytes @ 0x0
  1199  0020                     	ds	1
  1200  0021                     ?___lwdiv:
  1201  0021                     Lcd_Set_Cursor@a:	
  1202                           ; 2 bytes @ 0x1
  1203                           
  1204  0021                     ___awmod@sign:	
  1205                           ; 1 bytes @ 0x1
  1206                           
  1207  0021                     ___lwdiv@divisor:	
  1208                           ; 1 bytes @ 0x1
  1209                           
  1210                           
  1211                           ; 2 bytes @ 0x1
  1212  0021                     	ds	1
  1213  0022                     ?___awdiv:
  1214  0022                     Lcd_Set_Cursor@temp:	
  1215                           ; 2 bytes @ 0x2
  1216                           
  1217  0022                     ___awdiv@divisor:	
  1218                           ; 1 bytes @ 0x2
  1219                           
  1220                           
  1221                           ; 2 bytes @ 0x2
  1222  0022                     	ds	1
  1223  0023                     ?___awtoft:
  1224  0023                     ?___lltoft:	
  1225                           ; 3 bytes @ 0x3
  1226                           
  1227  0023                     Lcd_Write_String@i:	
  1228                           ; 3 bytes @ 0x3
  1229                           
  1230  0023                     ___awtoft@c:	
  1231                           ; 2 bytes @ 0x3
  1232                           
  1233  0023                     ___lwdiv@dividend:	
  1234                           ; 2 bytes @ 0x3
  1235                           
  1236  0023                     __div_to_l_@f2:	
  1237                           ; 2 bytes @ 0x3
  1238                           
  1239  0023                     __tdiv_to_l_@f2:	
  1240                           ; 3 bytes @ 0x3
  1241                           
  1242  0023                     ___ftge@ff2:	
  1243                           ; 3 bytes @ 0x3
  1244                           
  1245  0023                     ___lltoft@c:	
  1246                           ; 3 bytes @ 0x3
  1247                           
  1248                           
  1249                           ; 4 bytes @ 0x3
  1250  0023                     	ds	1
  1251  0024                     ___awdiv@dividend:
  1252  0024                     ___lldiv@dividend:	
  1253                           ; 2 bytes @ 0x4
  1254                           
  1255                           
  1256                           ; 4 bytes @ 0x4
  1257  0024                     	ds	1
  1258  0025                     ??_Show_val_LCD:
  1259  0025                     ??___lwdiv:	
  1260                           ; 1 bytes @ 0x5
  1261                           
  1262                           
  1263                           ; 1 bytes @ 0x5
  1264  0025                     	ds	1
  1265  0026                     ??__div_to_l_:
  1266  0026                     ??___awdiv:	
  1267                           ; 1 bytes @ 0x6
  1268                           
  1269  0026                     ??___awtoft:	
  1270                           ; 1 bytes @ 0x6
  1271                           
  1272  0026                     ___lwdiv@counter:	
  1273                           ; 1 bytes @ 0x6
  1274                           
  1275  0026                     __tdiv_to_l_@quot:	
  1276                           ; 1 bytes @ 0x6
  1277                           
  1278                           
  1279                           ; 4 bytes @ 0x6
  1280  0026                     	ds	1
  1281  0027                     ??___lltoft:
  1282  0027                     ___awdiv@counter:	
  1283                           ; 1 bytes @ 0x7
  1284                           
  1285  0027                     ___lwdiv@quotient:	
  1286                           ; 1 bytes @ 0x7
  1287                           
  1288                           
  1289                           ; 2 bytes @ 0x7
  1290  0027                     	ds	1
  1291  0028                     ___awdiv@sign:
  1292  0028                     ___awtoft@sign:	
  1293                           ; 1 bytes @ 0x8
  1294                           
  1295  0028                     ___lltoft@exp:	
  1296                           ; 1 bytes @ 0x8
  1297                           
  1298  0028                     ___lldiv@quotient:	
  1299                           ; 1 bytes @ 0x8
  1300                           
  1301                           
  1302                           ; 4 bytes @ 0x8
  1303  0028                     	ds	1
  1304  0029                     ___awdiv@quotient:
  1305                           
  1306                           ; 2 bytes @ 0x9
  1307  0029                     	ds	1
  1308  002A                     __tdiv_to_l_@cntr:
  1309                           
  1310                           ; 1 bytes @ 0xA
  1311  002A                     	ds	1
  1312  002B                     ?___bmul:
  1313  002B                     ___bmul@multiplicand:	
  1314                           ; 1 bytes @ 0xB
  1315                           
  1316  002B                     __tdiv_to_l_@exp1:	
  1317                           ; 1 bytes @ 0xB
  1318                           
  1319                           
  1320                           ; 1 bytes @ 0xB
  1321  002B                     	ds	1
  1322  002C                     ??___bmul:
  1323  002C                     ___lldiv@counter:	
  1324                           ; 1 bytes @ 0xC
  1325                           
  1326                           
  1327                           ; 1 bytes @ 0xC
  1328  002C                     	ds	1
  1329  002D                     ?___llmod:
  1330  002D                     ___bmul@product:	
  1331                           ; 4 bytes @ 0xD
  1332                           
  1333  002D                     ___llmod@divisor:	
  1334                           ; 1 bytes @ 0xD
  1335                           
  1336                           
  1337                           ; 4 bytes @ 0xD
  1338  002D                     	ds	1
  1339  002E                     ___bmul@multiplier:
  1340  002E                     __div_to_l_@quot:	
  1341                           ; 1 bytes @ 0xE
  1342                           
  1343                           
  1344                           ; 4 bytes @ 0xE
  1345  002E                     	ds	1
  1346  002F                     ?___ftmul:
  1347  002F                     ___ftmul@f1:	
  1348                           ; 3 bytes @ 0xF
  1349                           
  1350                           
  1351                           ; 3 bytes @ 0xF
  1352  002F                     	ds	2
  1353  0031                     ___llmod@dividend:
  1354                           
  1355                           ; 4 bytes @ 0x11
  1356  0031                     	ds	1
  1357  0032                     __div_to_l_@cntr:
  1358  0032                     ___ftmul@f2:	
  1359                           ; 1 bytes @ 0x12
  1360                           
  1361                           
  1362                           ; 3 bytes @ 0x12
  1363  0032                     	ds	1
  1364  0033                     __div_to_l_@exp1:
  1365                           
  1366                           ; 1 bytes @ 0x13
  1367  0033                     	ds	2
  1368  0035                     ??___ftmul:
  1369                           
  1370                           ; 1 bytes @ 0x15
  1371  0035                     	ds	4
  1372  0039                     ___ftmul@exp:
  1373                           
  1374                           ; 1 bytes @ 0x19
  1375  0039                     	ds	1
  1376  003A                     ___ftmul@f3_as_product:
  1377                           
  1378                           ; 3 bytes @ 0x1A
  1379  003A                     	ds	3
  1380  003D                     ___ftmul@cntr:
  1381                           
  1382                           ; 1 bytes @ 0x1D
  1383  003D                     	ds	1
  1384  003E                     ___ftmul@sign:
  1385                           
  1386                           ; 1 bytes @ 0x1E
  1387  003E                     	ds	1
  1388  003F                     ?_fround:
  1389  003F                     ?_scale:	
  1390                           ; 3 bytes @ 0x1F
  1391                           
  1392  003F                     ?___ftdiv:	
  1393                           ; 3 bytes @ 0x1F
  1394                           
  1395  003F                     ___ftdiv@f2:	
  1396                           ; 3 bytes @ 0x1F
  1397                           
  1398                           
  1399                           ; 3 bytes @ 0x1F
  1400  003F                     	ds	3
  1401  0042                     ??_fround:
  1402  0042                     ??_scale:	
  1403                           ; 1 bytes @ 0x22
  1404                           
  1405  0042                     ___ftdiv@f1:	
  1406                           ; 1 bytes @ 0x22
  1407                           
  1408                           
  1409                           ; 3 bytes @ 0x22
  1410  0042                     	ds	2
  1411  0044                     _scale$1187:
  1412                           
  1413                           ; 3 bytes @ 0x24
  1414  0044                     	ds	1
  1415  0045                     ??___ftdiv:
  1416                           
  1417                           ; 1 bytes @ 0x25
  1418  0045                     	ds	2
  1419  0047                     scale@scl:
  1420                           
  1421                           ; 1 bytes @ 0x27
  1422  0047                     	ds	1
  1423  0048                     ?___fttol:
  1424  0048                     ___fttol@f1:	
  1425                           ; 4 bytes @ 0x28
  1426                           
  1427  0048                     _fround$1186:	
  1428                           ; 3 bytes @ 0x28
  1429                           
  1430                           
  1431                           ; 3 bytes @ 0x28
  1432  0048                     	ds	1
  1433  0049                     ___ftdiv@cntr:
  1434                           
  1435                           ; 1 bytes @ 0x29
  1436  0049                     	ds	1
  1437  004A                     ___ftdiv@f3:
  1438                           
  1439                           ; 3 bytes @ 0x2A
  1440  004A                     	ds	1
  1441  004B                     _fround$1185:
  1442                           
  1443                           ; 3 bytes @ 0x2B
  1444  004B                     	ds	1
  1445  004C                     ??___fttol:
  1446                           
  1447                           ; 1 bytes @ 0x2C
  1448  004C                     	ds	1
  1449  004D                     ___ftdiv@exp:
  1450                           
  1451                           ; 1 bytes @ 0x2D
  1452  004D                     	ds	1
  1453  004E                     fround@prec:
  1454  004E                     ___ftdiv@sign:	
  1455                           ; 1 bytes @ 0x2E
  1456                           
  1457                           
  1458                           ; 1 bytes @ 0x2E
  1459  004E                     	ds	1
  1460  004F                     ??_ADC_channel1:
  1461  004F                     ??_ADC_channel2:	
  1462                           ; 1 bytes @ 0x2F
  1463                           
  1464  004F                     ?___ftadd:	
  1465                           ; 1 bytes @ 0x2F
  1466                           
  1467  004F                     ___ftadd@f1:	
  1468                           ; 3 bytes @ 0x2F
  1469                           
  1470                           
  1471                           ; 3 bytes @ 0x2F
  1472  004F                     	ds	1
  1473  0050                     ___fttol@sign1:
  1474                           
  1475                           ; 1 bytes @ 0x30
  1476  0050                     	ds	1
  1477  0051                     ___fttol@lval:
  1478                           
  1479                           ; 4 bytes @ 0x31
  1480  0051                     	ds	1
  1481  0052                     ___ftadd@f2:
  1482                           
  1483                           ; 3 bytes @ 0x32
  1484  0052                     	ds	3
  1485  0055                     ??___ftadd:
  1486  0055                     ___fttol@exp1:	
  1487                           ; 1 bytes @ 0x35
  1488                           
  1489                           
  1490                           ; 1 bytes @ 0x35
  1491  0055                     	ds	4
  1492  0059                     ___ftadd@sign:
  1493                           
  1494                           ; 1 bytes @ 0x39
  1495  0059                     	ds	1
  1496  005A                     ___ftadd@exp2:
  1497                           
  1498                           ; 1 bytes @ 0x3A
  1499  005A                     	ds	1
  1500  005B                     ___ftadd@exp1:
  1501                           
  1502                           ; 1 bytes @ 0x3B
  1503  005B                     	ds	1
  1504  005C                     ?___ftsub:
  1505  005C                     ___ftsub@f2:	
  1506                           ; 3 bytes @ 0x3C
  1507                           
  1508                           
  1509                           ; 3 bytes @ 0x3C
  1510  005C                     	ds	3
  1511  005F                     ___ftsub@f1:
  1512                           
  1513                           ; 3 bytes @ 0x3F
  1514  005F                     	ds	3
  1515  0062                     ?_sprintf:
  1516  0062                     sprintf@f:	
  1517                           ; 2 bytes @ 0x42
  1518                           
  1519                           
  1520                           ; 1 bytes @ 0x42
  1521  0062                     	ds	9
  1522  006B                     ??_ADC_to_string:
  1523                           
  1524                           ; 1 bytes @ 0x4B
  1525  006B                     	ds	3
  1526                           
  1527                           	psect	maintext
  1528  079D                     __pmaintext:	
  1529 ;;
  1530 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1531 ;;
  1532 ;; *************** function _main *****************
  1533 ;; Defined at:
  1534 ;;		line 98 in file "pseudocodigo_lab3.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : B00/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1548 ;;      Params:         0       0       0       0       0
  1549 ;;      Locals:         0       0       0       0       0
  1550 ;;      Temps:          0       0       3       0       0
  1551 ;;      Totals:         0       0       3       0       0
  1552 ;;Total ram usage:        3 bytes
  1553 ;; Hardware stack levels required when called:    6
  1554 ;; This function calls:
  1555 ;;		_ADC_channel1
  1556 ;;		_ADC_channel2
  1557 ;;		_ADC_to_string
  1558 ;;		_Lcd_Clear
  1559 ;;		_Lcd_Init
  1560 ;;		_Show_val_LCD
  1561 ;;		_Write_USART
  1562 ;;		_Write_USART_String
  1563 ;;		_setup
  1564 ;; This function is called by:
  1565 ;;		Startup code after reset
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           
  1570                           ;psect for function _main
  1571  079D                     _main:
  1572  079D                     l4491:	
  1573                           ;incstack = 0
  1574                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1575                           
  1576                           
  1577                           ;pseudocodigo_lab3.c: 99:     setup();
  1578  079D  160A  158A  25EC  120A  118A  	fcall	_setup
  1579  07A2                     l4493:
  1580                           
  1581                           ;pseudocodigo_lab3.c: 100:     TRISD = 0x00;
  1582  07A2  1683               	bsf	3,5	;RP0=1, select bank1
  1583  07A3  1303               	bcf	3,6	;RP1=0, select bank1
  1584  07A4  0188               	clrf	8	;volatile
  1585  07A5                     l4495:
  1586                           
  1587                           ;pseudocodigo_lab3.c: 101:     Lcd_Init();
  1588  07A5  160A  158A  27B0  120A  118A  	fcall	_Lcd_Init
  1589  07AA                     l4497:
  1590                           
  1591                           ;pseudocodigo_lab3.c: 103:     Lcd_Clear();
  1592  07AA  160A  158A  24AF  120A  118A  	fcall	_Lcd_Clear
  1593  07AF                     l4499:
  1594                           
  1595                           ;pseudocodigo_lab3.c: 107:         ADC_channel1();
  1596  07AF  160A  118A  2129  120A  118A  	fcall	_ADC_channel1
  1597  07B4                     l4501:
  1598                           
  1599                           ;pseudocodigo_lab3.c: 108:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1600  07B4  3003               	movlw	3
  1601  07B5  1683               	bsf	3,5	;RP0=1, select bank1
  1602  07B6  1303               	bcf	3,6	;RP1=0, select bank1
  1603  07B7  00C0               	movwf	(??_main^(0+128)+1)
  1604  07B8  3097               	movlw	151
  1605  07B9  00BF               	movwf	??_main^(0+128)
  1606  07BA                     u6657:
  1607  07BA  0BBF               	decfsz	??_main^(0+128),f
  1608  07BB  2FBA               	goto	u6657
  1609  07BC  0BC0               	decfsz	(??_main^(0+128)+1),f
  1610  07BD  2FBA               	goto	u6657
  1611  07BE                     l4503:
  1612                           
  1613                           ;pseudocodigo_lab3.c: 109:         ADC_channel2();
  1614  07BE  160A  118A  2184  120A  118A  	fcall	_ADC_channel2
  1615  07C3                     l4505:
  1616                           
  1617                           ;pseudocodigo_lab3.c: 111:         Write_USART_String("S1   S2   S3 \n");
  1618  07C3  3099               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1619  07C4  00F4               	movwf	Write_USART_String@a
  1620  07C5  3080               	movlw	128
  1621  07C6  00F5               	movwf	Write_USART_String@a+1
  1622  07C7  160A  158A  25C1  120A  118A  	fcall	_Write_USART_String
  1623  07CC                     l4507:
  1624                           
  1625                           ;pseudocodigo_lab3.c: 112:         ADC_to_string();
  1626  07CC  160A  158A  2676  120A  118A  	fcall	_ADC_to_string
  1627  07D1                     l4509:
  1628                           
  1629                           ;pseudocodigo_lab3.c: 114:         Write_USART_String(data_total);
  1630  07D1  30CE               	movlw	(low (_data_total| 0))& (0+255)
  1631  07D2  00F4               	movwf	Write_USART_String@a
  1632  07D3  3000               	movlw	0
  1633  07D4  00F5               	movwf	Write_USART_String@a+1
  1634  07D5  160A  158A  25C1  120A  118A  	fcall	_Write_USART_String
  1635  07DA                     l4511:
  1636                           
  1637                           ;pseudocodigo_lab3.c: 115:         Write_USART(13);
  1638  07DA  300D               	movlw	13
  1639  07DB  160A  158A  2497  120A  118A  	fcall	_Write_USART
  1640  07E0                     l4513:
  1641                           
  1642                           ;pseudocodigo_lab3.c: 116:         Write_USART(10);
  1643  07E0  300A               	movlw	10
  1644  07E1  160A  158A  2497  120A  118A  	fcall	_Write_USART
  1645  07E6                     l4515:
  1646                           
  1647                           ;pseudocodigo_lab3.c: 118:         Show_val_LCD();
  1648  07E6  160A  158A  2617  120A  118A  	fcall	_Show_val_LCD
  1649  07EB                     l4517:
  1650                           
  1651                           ;pseudocodigo_lab3.c: 119:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1652  07EB  3006               	movlw	6
  1653  07EC  1683               	bsf	3,5	;RP0=1, select bank1
  1654  07ED  1303               	bcf	3,6	;RP1=0, select bank1
  1655  07EE  00C1               	movwf	(??_main^(0+128)+2)
  1656  07EF  3013               	movlw	19
  1657  07F0  00C0               	movwf	(??_main^(0+128)+1)
  1658  07F1  30AD               	movlw	173
  1659  07F2  00BF               	movwf	??_main^(0+128)
  1660  07F3                     u6667:
  1661  07F3  0BBF               	decfsz	??_main^(0+128),f
  1662  07F4  2FF3               	goto	u6667
  1663  07F5  0BC0               	decfsz	(??_main^(0+128)+1),f
  1664  07F6  2FF3               	goto	u6667
  1665  07F7  0BC1               	decfsz	(??_main^(0+128)+2),f
  1666  07F8  2FF3               	goto	u6667
  1667  07F9  2FAF               	goto	l4499
  1668  07FA  120A  118A  280C   	ljmp	start
  1669  07FD                     __end_of_main:
  1670                           
  1671                           	psect	text1
  1672  1DEC                     __ptext1:	
  1673 ;; *************** function _setup *****************
  1674 ;; Defined at:
  1675 ;;		line 168 in file "pseudocodigo_lab3.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;		None
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1689 ;;      Params:         0       0       0       0       0
  1690 ;;      Locals:         0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0
  1692 ;;      Totals:         0       0       0       0       0
  1693 ;;Total ram usage:        0 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; Hardware stack levels required when called:    2
  1696 ;; This function calls:
  1697 ;;		_USART_INTERRUPT
  1698 ;;		_USART_Init
  1699 ;;		_USART_Init_BaudRate
  1700 ;;		_initOsc
  1701 ;; This function is called by:
  1702 ;;		_main
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           
  1707                           ;psect for function _setup
  1708  1DEC                     _setup:
  1709  1DEC                     l3305:	
  1710                           ;incstack = 0
  1711                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1712                           
  1713                           
  1714                           ;pseudocodigo_lab3.c: 169:     initOsc(7);
  1715  1DEC  3007               	movlw	7
  1716  1DED  160A  118A  223A  160A  158A  	fcall	_initOsc
  1717  1DF2                     l3307:
  1718                           
  1719                           ;pseudocodigo_lab3.c: 170:     ANSEL = 0b00000011;
  1720  1DF2  3003               	movlw	3
  1721  1DF3  1683               	bsf	3,5	;RP0=1, select bank3
  1722  1DF4  1703               	bsf	3,6	;RP1=1, select bank3
  1723  1DF5  0088               	movwf	8	;volatile
  1724  1DF6                     l3309:
  1725                           
  1726                           ;pseudocodigo_lab3.c: 171:     ANSELH = 0;
  1727  1DF6  0189               	clrf	9	;volatile
  1728  1DF7                     l3311:
  1729                           
  1730                           ;pseudocodigo_lab3.c: 172:     TRISA = 0b00000011;
  1731  1DF7  3003               	movlw	3
  1732  1DF8  1683               	bsf	3,5	;RP0=1, select bank1
  1733  1DF9  1303               	bcf	3,6	;RP1=0, select bank1
  1734  1DFA  0085               	movwf	5	;volatile
  1735  1DFB                     l3313:
  1736                           
  1737                           ;pseudocodigo_lab3.c: 173:     TRISB = 0;
  1738  1DFB  0186               	clrf	6	;volatile
  1739  1DFC                     l3315:
  1740                           
  1741                           ;pseudocodigo_lab3.c: 174:     TRISCbits.TRISC6 = 0;
  1742  1DFC  1307               	bcf	7,6	;volatile
  1743  1DFD                     l3317:
  1744                           
  1745                           ;pseudocodigo_lab3.c: 175:     TRISCbits.TRISC7 = 1;
  1746  1DFD  1787               	bsf	7,7	;volatile
  1747  1DFE                     l3319:
  1748                           
  1749                           ;pseudocodigo_lab3.c: 176:     TRISD = 0;
  1750  1DFE  0188               	clrf	8	;volatile
  1751  1DFF                     l3321:
  1752                           
  1753                           ;pseudocodigo_lab3.c: 177:     TRISE = 0;
  1754  1DFF  0189               	clrf	9	;volatile
  1755  1E00                     l3323:
  1756                           
  1757                           ;pseudocodigo_lab3.c: 178:     PORTA = 0;
  1758  1E00  1283               	bcf	3,5	;RP0=0, select bank0
  1759  1E01  1303               	bcf	3,6	;RP1=0, select bank0
  1760  1E02  0185               	clrf	5	;volatile
  1761  1E03                     l3325:
  1762                           
  1763                           ;pseudocodigo_lab3.c: 179:     PORTB = 0;
  1764  1E03  0186               	clrf	6	;volatile
  1765  1E04                     l3327:
  1766                           
  1767                           ;pseudocodigo_lab3.c: 180:     PORTC = 0;
  1768  1E04  0187               	clrf	7	;volatile
  1769  1E05                     l3329:
  1770                           
  1771                           ;pseudocodigo_lab3.c: 181:     PORTD = 0;
  1772  1E05  0188               	clrf	8	;volatile
  1773  1E06                     l3331:
  1774                           
  1775                           ;pseudocodigo_lab3.c: 182:     PORTE = 0;
  1776  1E06  0189               	clrf	9	;volatile
  1777  1E07                     l3333:
  1778                           
  1779                           ;pseudocodigo_lab3.c: 183:     USART_Init_BaudRate();
  1780  1E07  160A  158A  247F  160A  158A  	fcall	_USART_Init_BaudRate
  1781  1E0C                     l3335:
  1782                           
  1783                           ;pseudocodigo_lab3.c: 184:     USART_Init();
  1784  1E0C  160A  158A  24A3  160A  158A  	fcall	_USART_Init
  1785  1E11                     l3337:
  1786                           
  1787                           ;pseudocodigo_lab3.c: 185:     USART_INTERRUPT();
  1788  1E11  160A  158A  2479  160A  158A  	fcall	_USART_INTERRUPT
  1789  1E16                     l116:
  1790  1E16  0008               	return
  1791  1E17                     __end_of_setup:
  1792                           
  1793                           	psect	text2
  1794  123A                     __ptext2:	
  1795 ;; *************** function _initOsc *****************
  1796 ;; Defined at:
  1797 ;;		line 3 in file "Oscilador.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  IRCF            1    wreg     unsigned char 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  IRCF            1    5[COMMON] unsigned char 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1811 ;;      Params:         0       0       0       0       0
  1812 ;;      Locals:         1       0       0       0       0
  1813 ;;      Temps:          2       0       0       0       0
  1814 ;;      Totals:         3       0       0       0       0
  1815 ;;Total ram usage:        3 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    1
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_setup
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           
  1826                           ;psect for function _initOsc
  1827  123A                     _initOsc:
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1831                           ;initOsc@IRCF stored from wreg
  1832  123A  00F5               	movwf	initOsc@IRCF
  1833  123B                     l3231:
  1834                           
  1835                           ;Oscilador.c: 5:     switch(IRCF){
  1836  123B  2A72               	goto	l3235
  1837  123C                     l122:	
  1838                           ;Oscilador.c: 6:         case 0:
  1839                           
  1840                           
  1841                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  1842  123C  1683               	bsf	3,5	;RP0=1, select bank1
  1843  123D  1303               	bcf	3,6	;RP1=0, select bank1
  1844  123E  130F               	bcf	15,6	;volatile
  1845                           
  1846                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  1847  123F  128F               	bcf	15,5	;volatile
  1848                           
  1849                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  1850  1240  120F               	bcf	15,4	;volatile
  1851                           
  1852                           ;Oscilador.c: 10:             break;
  1853  1241  2A94               	goto	l123
  1854  1242                     l124:	
  1855                           ;Oscilador.c: 11:          case 1:
  1856                           
  1857                           
  1858                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  1859  1242  1683               	bsf	3,5	;RP0=1, select bank1
  1860  1243  1303               	bcf	3,6	;RP1=0, select bank1
  1861  1244  130F               	bcf	15,6	;volatile
  1862                           
  1863                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  1864  1245  128F               	bcf	15,5	;volatile
  1865                           
  1866                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  1867  1246  160F               	bsf	15,4	;volatile
  1868                           
  1869                           ;Oscilador.c: 15:             break;
  1870  1247  2A94               	goto	l123
  1871  1248                     l125:	
  1872                           ;Oscilador.c: 16:         case 2:
  1873                           
  1874                           
  1875                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  1876  1248  1683               	bsf	3,5	;RP0=1, select bank1
  1877  1249  1303               	bcf	3,6	;RP1=0, select bank1
  1878  124A  130F               	bcf	15,6	;volatile
  1879                           
  1880                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  1881  124B  168F               	bsf	15,5	;volatile
  1882                           
  1883                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  1884  124C  120F               	bcf	15,4	;volatile
  1885                           
  1886                           ;Oscilador.c: 20:             break;
  1887  124D  2A94               	goto	l123
  1888  124E                     l126:	
  1889                           ;Oscilador.c: 21:         case 3:
  1890                           
  1891                           
  1892                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  1893  124E  1683               	bsf	3,5	;RP0=1, select bank1
  1894  124F  1303               	bcf	3,6	;RP1=0, select bank1
  1895  1250  130F               	bcf	15,6	;volatile
  1896                           
  1897                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  1898  1251  168F               	bsf	15,5	;volatile
  1899                           
  1900                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  1901  1252  160F               	bsf	15,4	;volatile
  1902                           
  1903                           ;Oscilador.c: 25:             break;
  1904  1253  2A94               	goto	l123
  1905  1254                     l127:	
  1906                           ;Oscilador.c: 26:         case 4:
  1907                           
  1908                           
  1909                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  1910  1254  1683               	bsf	3,5	;RP0=1, select bank1
  1911  1255  1303               	bcf	3,6	;RP1=0, select bank1
  1912  1256  170F               	bsf	15,6	;volatile
  1913                           
  1914                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  1915  1257  128F               	bcf	15,5	;volatile
  1916                           
  1917                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  1918  1258  120F               	bcf	15,4	;volatile
  1919                           
  1920                           ;Oscilador.c: 30:             break;
  1921  1259  2A94               	goto	l123
  1922  125A                     l128:	
  1923                           ;Oscilador.c: 31:         case 5:
  1924                           
  1925                           
  1926                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1927  125A  1683               	bsf	3,5	;RP0=1, select bank1
  1928  125B  1303               	bcf	3,6	;RP1=0, select bank1
  1929  125C  170F               	bsf	15,6	;volatile
  1930                           
  1931                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1932  125D  128F               	bcf	15,5	;volatile
  1933                           
  1934                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1935  125E  160F               	bsf	15,4	;volatile
  1936                           
  1937                           ;Oscilador.c: 35:             break;
  1938  125F  2A94               	goto	l123
  1939  1260                     l129:	
  1940                           ;Oscilador.c: 36:         case 6:
  1941                           
  1942                           
  1943                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1944  1260  1683               	bsf	3,5	;RP0=1, select bank1
  1945  1261  1303               	bcf	3,6	;RP1=0, select bank1
  1946  1262  170F               	bsf	15,6	;volatile
  1947                           
  1948                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1949  1263  168F               	bsf	15,5	;volatile
  1950                           
  1951                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1952  1264  120F               	bcf	15,4	;volatile
  1953                           
  1954                           ;Oscilador.c: 40:             break;
  1955  1265  2A94               	goto	l123
  1956  1266                     l130:	
  1957                           ;Oscilador.c: 41:         case 7:
  1958                           
  1959                           
  1960                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1961  1266  1683               	bsf	3,5	;RP0=1, select bank1
  1962  1267  1303               	bcf	3,6	;RP1=0, select bank1
  1963  1268  170F               	bsf	15,6	;volatile
  1964                           
  1965                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1966  1269  168F               	bsf	15,5	;volatile
  1967                           
  1968                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1969  126A  160F               	bsf	15,4	;volatile
  1970                           
  1971                           ;Oscilador.c: 45:             break;
  1972  126B  2A94               	goto	l123
  1973  126C                     l131:	
  1974                           ;Oscilador.c: 46:         default:
  1975                           
  1976                           
  1977                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1978  126C  1683               	bsf	3,5	;RP0=1, select bank1
  1979  126D  1303               	bcf	3,6	;RP1=0, select bank1
  1980  126E  170F               	bsf	15,6	;volatile
  1981                           
  1982                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1983  126F  168F               	bsf	15,5	;volatile
  1984                           
  1985                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1986  1270  120F               	bcf	15,4	;volatile
  1987                           
  1988                           ;Oscilador.c: 50:             break;
  1989  1271  2A94               	goto	l123
  1990  1272                     l3235:
  1991  1272  0875               	movf	initOsc@IRCF,w
  1992  1273  00F3               	movwf	??_initOsc
  1993  1274  01F4               	clrf	??_initOsc+1
  1994                           
  1995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1996                           ; Switch size 1, requested type "simple"
  1997                           ; Number of cases is 1, Range of values is 0 to 0
  1998                           ; switch strategies available:
  1999                           ; Name         Instructions Cycles
  2000                           ; simple_byte            4     3 (average)
  2001                           ; direct_byte           11     8 (fixed)
  2002                           ; jumptable            260     6 (fixed)
  2003                           ;	Chosen strategy is simple_byte
  2004  1275  0874               	movf	??_initOsc+1,w
  2005  1276  3A00               	xorlw	0	; case 0
  2006  1277  1903               	skipnz
  2007  1278  2A7A               	goto	l4593
  2008  1279  2A6C               	goto	l131
  2009  127A                     l4593:
  2010                           
  2011                           ; Switch size 1, requested type "simple"
  2012                           ; Number of cases is 8, Range of values is 0 to 7
  2013                           ; switch strategies available:
  2014                           ; Name         Instructions Cycles
  2015                           ; simple_byte           25    13 (average)
  2016                           ; direct_byte           32     8 (fixed)
  2017                           ; jumptable            260     6 (fixed)
  2018                           ;	Chosen strategy is simple_byte
  2019  127A  0873               	movf	??_initOsc,w
  2020  127B  3A00               	xorlw	0	; case 0
  2021  127C  1903               	skipnz
  2022  127D  2A3C               	goto	l122
  2023  127E  3A01               	xorlw	1	; case 1
  2024  127F  1903               	skipnz
  2025  1280  2A42               	goto	l124
  2026  1281  3A03               	xorlw	3	; case 2
  2027  1282  1903               	skipnz
  2028  1283  2A48               	goto	l125
  2029  1284  3A01               	xorlw	1	; case 3
  2030  1285  1903               	skipnz
  2031  1286  2A4E               	goto	l126
  2032  1287  3A07               	xorlw	7	; case 4
  2033  1288  1903               	skipnz
  2034  1289  2A54               	goto	l127
  2035  128A  3A01               	xorlw	1	; case 5
  2036  128B  1903               	skipnz
  2037  128C  2A5A               	goto	l128
  2038  128D  3A03               	xorlw	3	; case 6
  2039  128E  1903               	skipnz
  2040  128F  2A60               	goto	l129
  2041  1290  3A01               	xorlw	1	; case 7
  2042  1291  1903               	skipnz
  2043  1292  2A66               	goto	l130
  2044  1293  2A6C               	goto	l131
  2045  1294                     l123:
  2046                           
  2047                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  2048  1294  140F               	bsf	15,0	;volatile
  2049  1295                     l132:
  2050  1295  0008               	return
  2051  1296                     __end_of_initOsc:
  2052                           
  2053                           	psect	text3
  2054  1C7F                     __ptext3:	
  2055 ;; *************** function _USART_Init_BaudRate *****************
  2056 ;; Defined at:
  2057 ;;		line 19 in file "USART.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2071 ;;      Params:         0       0       0       0       0
  2072 ;;      Locals:         0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0
  2074 ;;      Totals:         0       0       0       0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_setup
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _USART_Init_BaudRate
  2087  1C7F                     _USART_Init_BaudRate:
  2088  1C7F                     l3241:	
  2089                           ;incstack = 0
  2090                           ; Regs used in _USART_Init_BaudRate: [wreg+status,2]
  2091                           
  2092                           
  2093                           ;USART.c: 20:     SPBRGH = 0;
  2094  1C7F  1683               	bsf	3,5	;RP0=1, select bank1
  2095  1C80  1303               	bcf	3,6	;RP1=0, select bank1
  2096  1C81  019A               	clrf	26	;volatile
  2097  1C82                     l3243:
  2098                           
  2099                           ;USART.c: 21:     SPBRG = 12;
  2100  1C82  300C               	movlw	12
  2101  1C83  0099               	movwf	25	;volatile
  2102  1C84                     l251:
  2103  1C84  0008               	return
  2104  1C85                     __end_of_USART_Init_BaudRate:
  2105                           
  2106                           	psect	text4
  2107  1CA3                     __ptext4:	
  2108 ;; *************** function _USART_Init *****************
  2109 ;; Defined at:
  2110 ;;		line 8 in file "USART.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		status,2
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2124 ;;      Params:         0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0
  2127 ;;      Totals:         0       0       0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    1
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_setup
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _USART_Init
  2140  1CA3                     _USART_Init:
  2141  1CA3                     l3245:	
  2142                           ;incstack = 0
  2143                           ; Regs used in _USART_Init: [status,2]
  2144                           
  2145                           
  2146                           ;USART.c: 10:     RCSTAbits.SPEN = 1;
  2147  1CA3  1283               	bcf	3,5	;RP0=0, select bank0
  2148  1CA4  1303               	bcf	3,6	;RP1=0, select bank0
  2149  1CA5  1798               	bsf	24,7	;volatile
  2150                           
  2151                           ;USART.c: 11:     TXSTAbits.SYNC = 0;
  2152  1CA6  1683               	bsf	3,5	;RP0=1, select bank1
  2153  1CA7  1303               	bcf	3,6	;RP1=0, select bank1
  2154  1CA8  1218               	bcf	24,4	;volatile
  2155                           
  2156                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
  2157  1CA9  1698               	bsf	24,5	;volatile
  2158                           
  2159                           ;USART.c: 15:     RCSTAbits.CREN = 1;
  2160  1CAA  1283               	bcf	3,5	;RP0=0, select bank0
  2161  1CAB  1303               	bcf	3,6	;RP1=0, select bank0
  2162  1CAC  1618               	bsf	24,4	;volatile
  2163  1CAD                     l3247:
  2164                           
  2165                           ;USART.c: 16:     RCREG = 0;
  2166  1CAD  019A               	clrf	26	;volatile
  2167  1CAE                     l248:
  2168  1CAE  0008               	return
  2169  1CAF                     __end_of_USART_Init:
  2170                           
  2171                           	psect	text5
  2172  1C79                     __ptext5:	
  2173 ;; *************** function _USART_INTERRUPT *****************
  2174 ;; Defined at:
  2175 ;;		line 24 in file "USART.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		None
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2189 ;;      Params:         0       0       0       0       0
  2190 ;;      Locals:         0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0
  2192 ;;      Totals:         0       0       0       0       0
  2193 ;;Total ram usage:        0 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    1
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_setup
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           
  2204                           ;psect for function _USART_INTERRUPT
  2205  1C79                     _USART_INTERRUPT:
  2206  1C79                     l3249:	
  2207                           ;incstack = 0
  2208                           ; Regs used in _USART_INTERRUPT: []
  2209                           
  2210                           
  2211                           ;USART.c: 25:     INTCONbits.GIE = 1;
  2212  1C79  178B               	bsf	11,7	;volatile
  2213                           
  2214                           ;USART.c: 26:     INTCONbits.PEIE = 1;
  2215  1C7A  170B               	bsf	11,6	;volatile
  2216                           
  2217                           ;USART.c: 27:     PIE1bits.RCIE = 1;
  2218  1C7B  1683               	bsf	3,5	;RP0=1, select bank1
  2219  1C7C  1303               	bcf	3,6	;RP1=0, select bank1
  2220  1C7D  168C               	bsf	12,5	;volatile
  2221  1C7E                     l254:
  2222  1C7E  0008               	return
  2223  1C7F                     __end_of_USART_INTERRUPT:
  2224                           
  2225                           	psect	text6
  2226  1DC1                     __ptext6:	
  2227 ;; *************** function _Write_USART_String *****************
  2228 ;; Defined at:
  2229 ;;		line 37 in file "USART.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  a               2    4[COMMON] PTR unsigned char 
  2232 ;;		 -> data_total(20), STR_1(15), 
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  i               1    7[COMMON] unsigned char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2244 ;;      Params:         2       0       0       0       0
  2245 ;;      Locals:         1       0       0       0       0
  2246 ;;      Temps:          1       0       0       0       0
  2247 ;;      Totals:         4       0       0       0       0
  2248 ;;Total ram usage:        4 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:    2
  2251 ;; This function calls:
  2252 ;;		_Write_USART
  2253 ;; This function is called by:
  2254 ;;		_main
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           
  2259                           ;psect for function _Write_USART_String
  2260  1DC1                     _Write_USART_String:
  2261  1DC1                     l3369:	
  2262                           ;incstack = 0
  2263                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2264                           
  2265                           
  2266                           ;USART.c: 38:     uint8_t i;;USART.c: 39:     for(i=0;a[i]!='\0';i++){
  2267  1DC1  01F7               	clrf	Write_USART_String@i
  2268  1DC2  2DD8               	goto	l3375
  2269  1DC3                     l3371:
  2270                           
  2271                           ;USART.c: 40:         Write_USART(a[i]);
  2272  1DC3  0877               	movf	Write_USART_String@i,w
  2273  1DC4  0774               	addwf	Write_USART_String@a,w
  2274  1DC5  0084               	movwf	4
  2275  1DC6  0875               	movf	Write_USART_String@a+1,w
  2276  1DC7  1803               	skipnc
  2277  1DC8  0A75               	incf	Write_USART_String@a+1,w
  2278  1DC9  00FF               	movwf	btemp+1
  2279  1DCA  160A  118A  2000  160A  158A  	fcall	stringtab
  2280  1DCF  160A  158A  2497  160A  158A  	fcall	_Write_USART
  2281  1DD4                     l3373:
  2282                           
  2283                           ;USART.c: 41:     }
  2284  1DD4  3001               	movlw	1
  2285  1DD5  00F6               	movwf	??_Write_USART_String
  2286  1DD6  0876               	movf	??_Write_USART_String,w
  2287  1DD7  07F7               	addwf	Write_USART_String@i,f
  2288  1DD8                     l3375:
  2289  1DD8  0877               	movf	Write_USART_String@i,w
  2290  1DD9  0774               	addwf	Write_USART_String@a,w
  2291  1DDA  0084               	movwf	4
  2292  1DDB  0875               	movf	Write_USART_String@a+1,w
  2293  1DDC  1803               	skipnc
  2294  1DDD  0A75               	incf	Write_USART_String@a+1,w
  2295  1DDE  1283               	bcf	3,5	;RP0=0, select bank0
  2296  1DDF  1303               	bcf	3,6	;RP1=0, select bank0
  2297  1DE0  00FF               	movwf	btemp+1
  2298  1DE1  160A  118A  2000  160A  158A  	fcall	stringtab
  2299  1DE6  3A00               	xorlw	0
  2300  1DE7  1D03               	skipz
  2301  1DE8  2DEA               	goto	u4531
  2302  1DE9  2DEB               	goto	u4530
  2303  1DEA                     u4531:
  2304  1DEA  2DC3               	goto	l3371
  2305  1DEB                     u4530:
  2306  1DEB                     l266:
  2307  1DEB  0008               	return
  2308  1DEC                     __end_of_Write_USART_String:
  2309                           
  2310                           	psect	text7
  2311  1C97                     __ptext7:	
  2312 ;; *************** function _Write_USART *****************
  2313 ;; Defined at:
  2314 ;;		line 33 in file "USART.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  a               1    wreg     unsigned char 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  a               1    3[COMMON] unsigned char 
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2328 ;;      Params:         0       0       0       0       0
  2329 ;;      Locals:         1       0       0       0       0
  2330 ;;      Temps:          0       0       0       0       0
  2331 ;;      Totals:         1       0       0       0       0
  2332 ;;Total ram usage:        1 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    1
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		_main
  2339 ;;		_Write_USART_String
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           
  2344                           ;psect for function _Write_USART
  2345  1C97                     _Write_USART:
  2346                           
  2347                           ;incstack = 0
  2348                           ; Regs used in _Write_USART: [wreg]
  2349                           ;Write_USART@a stored from wreg
  2350  1C97  00F3               	movwf	Write_USART@a
  2351  1C98                     l2897:
  2352  1C98                     l257:	
  2353                           ;USART.c: 34:     while(!TRMT);
  2354                           
  2355  1C98  1683               	bsf	3,5	;RP0=1, select bank1
  2356  1C99  1303               	bcf	3,6	;RP1=0, select bank1
  2357  1C9A  1C98               	btfss	24,1	;volatile
  2358  1C9B  2C9D               	goto	u3821
  2359  1C9C  2C9E               	goto	u3820
  2360  1C9D                     u3821:
  2361  1C9D  2C98               	goto	l257
  2362  1C9E                     u3820:
  2363  1C9E                     l2899:
  2364                           
  2365                           ;USART.c: 35:     TXREG=a;
  2366  1C9E  0873               	movf	Write_USART@a,w
  2367  1C9F  1283               	bcf	3,5	;RP0=0, select bank0
  2368  1CA0  1303               	bcf	3,6	;RP1=0, select bank0
  2369  1CA1  0099               	movwf	25	;volatile
  2370  1CA2                     l260:
  2371  1CA2  0008               	return
  2372  1CA3                     __end_of_Write_USART:
  2373                           
  2374                           	psect	text8
  2375  1E17                     __ptext8:	
  2376 ;; *************** function _Show_val_LCD *****************
  2377 ;; Defined at:
  2378 ;;		line 132 in file "pseudocodigo_lab3.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2392 ;;      Params:         0       0       0       0       0
  2393 ;;      Locals:         0       0       0       0       0
  2394 ;;      Temps:          0       1       0       0       0
  2395 ;;      Totals:         0       1       0       0       0
  2396 ;;Total ram usage:        1 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    4
  2399 ;; This function calls:
  2400 ;;		_Lcd_Clear
  2401 ;;		_Lcd_Set_Cursor
  2402 ;;		_Lcd_Write_String
  2403 ;; This function is called by:
  2404 ;;		_main
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           
  2409                           ;psect for function _Show_val_LCD
  2410  1E17                     _Show_val_LCD:
  2411  1E17                     l4485:	
  2412                           ;incstack = 0
  2413                           ; Regs used in _Show_val_LCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2414                           
  2415                           
  2416                           ;pseudocodigo_lab3.c: 134:     Lcd_Clear();
  2417  1E17  160A  158A  24AF  160A  158A  	fcall	_Lcd_Clear
  2418                           
  2419                           ;pseudocodigo_lab3.c: 135:     Lcd_Set_Cursor(1,2);
  2420  1E1C  3002               	movlw	2
  2421  1E1D  1283               	bcf	3,5	;RP0=0, select bank0
  2422  1E1E  1303               	bcf	3,6	;RP1=0, select bank0
  2423  1E1F  00A5               	movwf	??_Show_val_LCD
  2424  1E20  0825               	movf	??_Show_val_LCD,w
  2425  1E21  00F7               	movwf	Lcd_Set_Cursor@b
  2426  1E22  3001               	movlw	1
  2427  1E23  160A  158A  2520  160A  158A  	fcall	_Lcd_Set_Cursor
  2428  1E28                     l4487:
  2429                           
  2430                           ;pseudocodigo_lab3.c: 136:     Lcd_Write_String("S1:   S2:   S3:");
  2431  1E28  3089               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2432  1E29  00F6               	movwf	Lcd_Write_String@a
  2433  1E2A  3080               	movlw	128
  2434  1E2B  00F7               	movwf	Lcd_Write_String@a+1
  2435  1E2C  160A  158A  276A  160A  158A  	fcall	_Lcd_Write_String
  2436  1E31                     l4489:
  2437                           
  2438                           ;pseudocodigo_lab3.c: 137:     Lcd_Set_Cursor(2,1);
  2439  1E31  01F7               	clrf	Lcd_Set_Cursor@b
  2440  1E32  0AF7               	incf	Lcd_Set_Cursor@b,f
  2441  1E33  3002               	movlw	2
  2442  1E34  160A  158A  2520  160A  158A  	fcall	_Lcd_Set_Cursor
  2443                           
  2444                           ;pseudocodigo_lab3.c: 138:     Lcd_Write_String(data_total);
  2445  1E39  30CE               	movlw	(low (_data_total| 0))& (0+255)
  2446  1E3A  00F6               	movwf	Lcd_Write_String@a
  2447  1E3B  3000               	movlw	0
  2448  1E3C  00F7               	movwf	Lcd_Write_String@a+1
  2449  1E3D  160A  158A  276A  160A  158A  	fcall	_Lcd_Write_String
  2450  1E42                     l101:
  2451  1E42  0008               	return
  2452  1E43                     __end_of_Show_val_LCD:
  2453                           
  2454                           	psect	text9
  2455  1F6A                     __ptext9:	
  2456 ;; *************** function _Lcd_Write_String *****************
  2457 ;; Defined at:
  2458 ;;		line 70 in file "LCD.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  a               2    6[COMMON] PTR unsigned char 
  2461 ;;		 -> STR_3(16), data_total(20), 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  i               2    3[BANK0 ] int 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2473 ;;      Params:         2       0       0       0       0
  2474 ;;      Locals:         0       2       0       0       0
  2475 ;;      Temps:          0       3       0       0       0
  2476 ;;      Totals:         2       5       0       0       0
  2477 ;;Total ram usage:        7 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    3
  2480 ;; This function calls:
  2481 ;;		_Lcd_Write_Char
  2482 ;; This function is called by:
  2483 ;;		_Show_val_LCD
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function _Lcd_Write_String
  2489  1F6A                     _Lcd_Write_String:
  2490  1F6A                     l4391:	
  2491                           ;incstack = 0
  2492                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2493                           
  2494                           
  2495                           ;LCD.c: 71:  int i;;LCD.c: 72:  for(i=0;a[i]!='\0';i++)
  2496  1F6A  1283               	bcf	3,5	;RP0=0, select bank0
  2497  1F6B  1303               	bcf	3,6	;RP1=0, select bank0
  2498  1F6C  01A3               	clrf	Lcd_Write_String@i
  2499  1F6D  01A4               	clrf	Lcd_Write_String@i+1
  2500  1F6E  2F93               	goto	l4397
  2501  1F6F                     l4393:
  2502                           
  2503                           ;LCD.c: 73:     Lcd_Write_Char(a[i]);
  2504  1F6F  0823               	movf	Lcd_Write_String@i,w
  2505  1F70  0776               	addwf	Lcd_Write_String@a,w
  2506  1F71  00A1               	movwf	??_Lcd_Write_String+1
  2507  1F72  0877               	movf	Lcd_Write_String@a+1,w
  2508  1F73  00A0               	movwf	??_Lcd_Write_String
  2509  1F74  1803               	skipnc
  2510  1F75  0AA0               	incf	??_Lcd_Write_String,f
  2511  1F76  1FA3               	btfss	Lcd_Write_String@i,7
  2512  1F77  2F79               	goto	u6510
  2513  1F78  03A0               	decf	??_Lcd_Write_String,f
  2514  1F79                     u6510:
  2515  1F79  1283               	bcf	3,5	;RP0=0, select bank0
  2516  1F7A  1303               	bcf	3,6	;RP1=0, select bank0
  2517  1F7B  0820               	movf	??_Lcd_Write_String,w
  2518  1F7C  00A2               	movwf	??_Lcd_Write_String+2
  2519  1F7D  0822               	movf	??_Lcd_Write_String+2,w
  2520  1F7E  00FF               	movwf	btemp+1
  2521  1F7F  0821               	movf	??_Lcd_Write_String+1,w
  2522  1F80  0084               	movwf	4
  2523  1F81  160A  118A  2000  160A  158A  	fcall	stringtab
  2524  1F86  160A  158A  24CE  160A  158A  	fcall	_Lcd_Write_Char
  2525  1F8B                     l4395:
  2526  1F8B  3001               	movlw	1
  2527  1F8C  1283               	bcf	3,5	;RP0=0, select bank0
  2528  1F8D  1303               	bcf	3,6	;RP1=0, select bank0
  2529  1F8E  07A3               	addwf	Lcd_Write_String@i,f
  2530  1F8F  1803               	skipnc
  2531  1F90  0AA4               	incf	Lcd_Write_String@i+1,f
  2532  1F91  3000               	movlw	0
  2533  1F92  07A4               	addwf	Lcd_Write_String@i+1,f
  2534  1F93                     l4397:
  2535  1F93  0823               	movf	Lcd_Write_String@i,w
  2536  1F94  0776               	addwf	Lcd_Write_String@a,w
  2537  1F95  00A1               	movwf	??_Lcd_Write_String+1
  2538  1F96  0877               	movf	Lcd_Write_String@a+1,w
  2539  1F97  00A0               	movwf	??_Lcd_Write_String
  2540  1F98  1803               	skipnc
  2541  1F99  0AA0               	incf	??_Lcd_Write_String,f
  2542  1F9A  1FA3               	btfss	Lcd_Write_String@i,7
  2543  1F9B  2F9D               	goto	u6520
  2544  1F9C  03A0               	decf	??_Lcd_Write_String,f
  2545  1F9D                     u6520:
  2546  1F9D  1283               	bcf	3,5	;RP0=0, select bank0
  2547  1F9E  1303               	bcf	3,6	;RP1=0, select bank0
  2548  1F9F  0820               	movf	??_Lcd_Write_String,w
  2549  1FA0  00A2               	movwf	??_Lcd_Write_String+2
  2550  1FA1  0822               	movf	??_Lcd_Write_String+2,w
  2551  1FA2  00FF               	movwf	btemp+1
  2552  1FA3  0821               	movf	??_Lcd_Write_String+1,w
  2553  1FA4  0084               	movwf	4
  2554  1FA5  160A  118A  2000  160A  158A  	fcall	stringtab
  2555  1FAA  3A00               	xorlw	0
  2556  1FAB  1D03               	skipz
  2557  1FAC  2FAE               	goto	u6531
  2558  1FAD  2FAF               	goto	u6530
  2559  1FAE                     u6531:
  2560  1FAE  2F6F               	goto	l4393
  2561  1FAF                     u6530:
  2562  1FAF                     l169:
  2563  1FAF  0008               	return
  2564  1FB0                     __end_of_Lcd_Write_String:
  2565                           
  2566                           	psect	text10
  2567  1CCE                     __ptext10:	
  2568 ;; *************** function _Lcd_Write_Char *****************
  2569 ;; Defined at:
  2570 ;;		line 61 in file "LCD.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  a               1    wreg     unsigned char 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  a               1    5[COMMON] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0, pclath, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2584 ;;      Params:         0       0       0       0       0
  2585 ;;      Locals:         1       0       0       0       0
  2586 ;;      Temps:          1       0       0       0       0
  2587 ;;      Totals:         2       0       0       0       0
  2588 ;;Total ram usage:        2 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    2
  2591 ;; This function calls:
  2592 ;;		_Lcd_Port
  2593 ;; This function is called by:
  2594 ;;		_Lcd_Write_String
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           
  2599                           ;psect for function _Lcd_Write_Char
  2600  1CCE                     _Lcd_Write_Char:
  2601                           
  2602                           ;incstack = 0
  2603                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2604                           ;Lcd_Write_Char@a stored from wreg
  2605  1CCE  00F5               	movwf	Lcd_Write_Char@a
  2606  1CCF                     l3813:
  2607                           
  2608                           ;LCD.c: 62:    PORTEbits.RE0 = 1;
  2609  1CCF  1283               	bcf	3,5	;RP0=0, select bank0
  2610  1CD0  1303               	bcf	3,6	;RP1=0, select bank0
  2611  1CD1  1409               	bsf	9,0	;volatile
  2612  1CD2                     l3815:
  2613                           
  2614                           ;LCD.c: 63:    Lcd_Port(a);
  2615  1CD2  0875               	movf	Lcd_Write_Char@a,w
  2616  1CD3  160A  158A  2473  160A  158A  	fcall	_Lcd_Port
  2617  1CD8                     l3817:
  2618                           
  2619                           ;LCD.c: 64:    PORTEbits.RE2 = 1;
  2620  1CD8  1283               	bcf	3,5	;RP0=0, select bank0
  2621  1CD9  1303               	bcf	3,6	;RP1=0, select bank0
  2622  1CDA  1509               	bsf	9,2	;volatile
  2623  1CDB                     l3819:
  2624                           
  2625                           ;LCD.c: 65:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2626  1CDB  301A               	movlw	26
  2627  1CDC  00F4               	movwf	??_Lcd_Write_Char
  2628  1CDD                     u6677:
  2629  1CDD  0BF4               	decfsz	??_Lcd_Write_Char,f
  2630  1CDE  2CDD               	goto	u6677
  2631  1CDF  0000               	nop
  2632  1CE0                     l3821:
  2633                           
  2634                           ;LCD.c: 66:    PORTEbits.RE2 = 0;
  2635  1CE0  1283               	bcf	3,5	;RP0=0, select bank0
  2636  1CE1  1303               	bcf	3,6	;RP1=0, select bank0
  2637  1CE2  1109               	bcf	9,2	;volatile
  2638  1CE3                     l163:
  2639  1CE3  0008               	return
  2640  1CE4                     __end_of_Lcd_Write_Char:
  2641                           
  2642                           	psect	text11
  2643  1D20                     __ptext11:	
  2644 ;; *************** function _Lcd_Set_Cursor *****************
  2645 ;; Defined at:
  2646 ;;		line 48 in file "LCD.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  a               1    wreg     unsigned char 
  2649 ;;  b               1    7[COMMON] unsigned char 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  a               1    1[BANK0 ] unsigned char 
  2652 ;;  temp            1    2[BANK0 ] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0, pclath, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2662 ;;      Params:         1       0       0       0       0
  2663 ;;      Locals:         0       2       0       0       0
  2664 ;;      Temps:          0       1       0       0       0
  2665 ;;      Totals:         1       3       0       0       0
  2666 ;;Total ram usage:        4 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:    3
  2669 ;; This function calls:
  2670 ;;		_Lcd_Cmd
  2671 ;; This function is called by:
  2672 ;;		_Show_val_LCD
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           
  2677                           ;psect for function _Lcd_Set_Cursor
  2678  1D20                     _Lcd_Set_Cursor:
  2679                           
  2680                           ;incstack = 0
  2681                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2682                           ;Lcd_Set_Cursor@a stored from wreg
  2683  1D20  1283               	bcf	3,5	;RP0=0, select bank0
  2684  1D21  1303               	bcf	3,6	;RP1=0, select bank0
  2685  1D22  00A1               	movwf	Lcd_Set_Cursor@a
  2686  1D23                     l4379:
  2687                           
  2688                           ;LCD.c: 49:  char temp;;LCD.c: 50:  if(a == 1){
  2689  1D23  0321               	decf	Lcd_Set_Cursor@a,w
  2690  1D24  1D03               	btfss	3,2
  2691  1D25  2D27               	goto	u6491
  2692  1D26  2D28               	goto	u6490
  2693  1D27                     u6491:
  2694  1D27  2D34               	goto	l4385
  2695  1D28                     u6490:
  2696  1D28                     l4381:
  2697                           
  2698                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2699  1D28  0877               	movf	Lcd_Set_Cursor@b,w
  2700  1D29  3E7F               	addlw	127
  2701  1D2A  00A0               	movwf	??_Lcd_Set_Cursor
  2702  1D2B  0820               	movf	??_Lcd_Set_Cursor,w
  2703  1D2C  00A2               	movwf	Lcd_Set_Cursor@temp
  2704  1D2D                     l4383:
  2705                           
  2706                           ;LCD.c: 52:         Lcd_Cmd(temp);
  2707  1D2D  0822               	movf	Lcd_Set_Cursor@temp,w
  2708  1D2E  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  2709                           
  2710                           ;LCD.c: 53:  }
  2711  1D33  2D45               	goto	l160
  2712  1D34                     l4385:
  2713  1D34  3002               	movlw	2
  2714  1D35  0621               	xorwf	Lcd_Set_Cursor@a,w
  2715  1D36  1D03               	btfss	3,2
  2716  1D37  2D39               	goto	u6501
  2717  1D38  2D3A               	goto	u6500
  2718  1D39                     u6501:
  2719  1D39  2D45               	goto	l160
  2720  1D3A                     u6500:
  2721  1D3A                     l4387:
  2722                           
  2723                           ;LCD.c: 55:   temp = 0xC0 + b - 1;
  2724  1D3A  0877               	movf	Lcd_Set_Cursor@b,w
  2725  1D3B  3EBF               	addlw	191
  2726  1D3C  00A0               	movwf	??_Lcd_Set_Cursor
  2727  1D3D  0820               	movf	??_Lcd_Set_Cursor,w
  2728  1D3E  00A2               	movwf	Lcd_Set_Cursor@temp
  2729  1D3F                     l4389:
  2730                           
  2731                           ;LCD.c: 56:   Lcd_Cmd(temp);
  2732  1D3F  0822               	movf	Lcd_Set_Cursor@temp,w
  2733  1D40  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  2734  1D45                     l160:
  2735  1D45  0008               	return
  2736  1D46                     __end_of_Lcd_Set_Cursor:
  2737                           
  2738                           	psect	text12
  2739  1CAF                     __ptext12:	
  2740 ;; *************** function _Lcd_Clear *****************
  2741 ;; Defined at:
  2742 ;;		line 42 in file "LCD.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;		None
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0, pclath, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2756 ;;      Params:         0       0       0       0       0
  2757 ;;      Locals:         0       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0
  2759 ;;      Totals:         0       0       0       0       0
  2760 ;;Total ram usage:        0 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:    3
  2763 ;; This function calls:
  2764 ;;		_Lcd_Cmd
  2765 ;; This function is called by:
  2766 ;;		_main
  2767 ;;		_Show_val_LCD
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           
  2772                           ;psect for function _Lcd_Clear
  2773  1CAF                     _Lcd_Clear:
  2774  1CAF                     l4085:	
  2775                           ;incstack = 0
  2776                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2777                           
  2778                           
  2779                           ;LCD.c: 43:  Lcd_Cmd(0);
  2780  1CAF  3000               	movlw	0
  2781  1CB0  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  2782                           
  2783                           ;LCD.c: 44:  Lcd_Cmd(1);
  2784  1CB5  3001               	movlw	1
  2785  1CB6  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  2786  1CBB                     l154:
  2787  1CBB  0008               	return
  2788  1CBC                     __end_of_Lcd_Clear:
  2789                           
  2790                           	psect	text13
  2791  1FB0                     __ptext13:	
  2792 ;; *************** function _Lcd_Init *****************
  2793 ;; Defined at:
  2794 ;;		line 14 in file "LCD.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0, pclath, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2808 ;;      Params:         0       0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0
  2810 ;;      Temps:          0       2       0       0       0
  2811 ;;      Totals:         0       2       0       0       0
  2812 ;;Total ram usage:        2 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    3
  2815 ;; This function calls:
  2816 ;;		_Lcd_Cmd
  2817 ;;		_Lcd_Port
  2818 ;; This function is called by:
  2819 ;;		_main
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           
  2824                           ;psect for function _Lcd_Init
  2825  1FB0                     _Lcd_Init:
  2826  1FB0                     l4453:	
  2827                           ;incstack = 0
  2828                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2829                           
  2830                           
  2831                           ;LCD.c: 15:   Lcd_Port(0x00);
  2832  1FB0  3000               	movlw	0
  2833  1FB1  160A  158A  2473  160A  158A  	fcall	_Lcd_Port
  2834  1FB6                     l4455:
  2835                           
  2836                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2837  1FB6  3034               	movlw	52
  2838  1FB7  1283               	bcf	3,5	;RP0=0, select bank0
  2839  1FB8  1303               	bcf	3,6	;RP1=0, select bank0
  2840  1FB9  00A1               	movwf	??_Lcd_Init+1
  2841  1FBA  30F1               	movlw	241
  2842  1FBB  00A0               	movwf	??_Lcd_Init
  2843  1FBC                     u6687:
  2844  1FBC  0BA0               	decfsz	??_Lcd_Init,f
  2845  1FBD  2FBC               	goto	u6687
  2846  1FBE  0BA1               	decfsz	??_Lcd_Init+1,f
  2847  1FBF  2FBC               	goto	u6687
  2848  1FC0                     l4457:
  2849                           
  2850                           ;LCD.c: 17:   Lcd_Cmd(0x30);
  2851  1FC0  3030               	movlw	48
  2852  1FC1  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  2853                           
  2854                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2855  1FC6  300D               	movlw	13
  2856  1FC7  1283               	bcf	3,5	;RP0=0, select bank0
  2857  1FC8  1303               	bcf	3,6	;RP1=0, select bank0
  2858  1FC9  00A1               	movwf	??_Lcd_Init+1
  2859  1FCA  30FB               	movlw	251
  2860  1FCB  00A0               	movwf	??_Lcd_Init
  2861  1FCC                     u6697:
  2862  1FCC  0BA0               	decfsz	??_Lcd_Init,f
  2863  1FCD  2FCC               	goto	u6697
  2864  1FCE  0BA1               	decfsz	??_Lcd_Init+1,f
  2865  1FCF  2FCC               	goto	u6697
  2866  1FD0                     l4459:
  2867                           
  2868                           ;LCD.c: 19:   Lcd_Cmd(0x30);
  2869  1FD0  3030               	movlw	48
  2870  1FD1  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  2871  1FD6                     l4461:
  2872                           
  2873                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2874  1FD6  301D               	movlw	29
  2875  1FD7  1283               	bcf	3,5	;RP0=0, select bank0
  2876  1FD8  1303               	bcf	3,6	;RP1=0, select bank0
  2877  1FD9  00A1               	movwf	??_Lcd_Init+1
  2878  1FDA  3090               	movlw	144
  2879  1FDB  00A0               	movwf	??_Lcd_Init
  2880  1FDC                     u6707:
  2881  1FDC  0BA0               	decfsz	??_Lcd_Init,f
  2882  1FDD  2FDC               	goto	u6707
  2883  1FDE  0BA1               	decfsz	??_Lcd_Init+1,f
  2884  1FDF  2FDC               	goto	u6707
  2885  1FE0  0000               	nop
  2886                           
  2887                           ;LCD.c: 21:   Lcd_Cmd(0x30);
  2888  1FE1  3030               	movlw	48
  2889  1FE2  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  2890                           
  2891                           ;LCD.c: 22:   Lcd_Cmd(0x38);
  2892  1FE7  3038               	movlw	56
  2893  1FE8  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  2894                           
  2895                           ;LCD.c: 23:   Lcd_Cmd(0x0C);
  2896  1FED  300C               	movlw	12
  2897  1FEE  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  2898                           
  2899                           ;LCD.c: 24:   Lcd_Cmd(0x01);
  2900  1FF3  3001               	movlw	1
  2901  1FF4  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  2902                           
  2903                           ;LCD.c: 25:   Lcd_Cmd(0x06);
  2904  1FF9  3006               	movlw	6
  2905  1FFA  160A  118A  20B9  160A  158A  	fcall	_Lcd_Cmd
  2906  1FFF                     l145:
  2907  1FFF  0008               	return
  2908  2000                     __end_of_Lcd_Init:
  2909                           
  2910                           	psect	text14
  2911  10B9                     __ptext14:	
  2912 ;; *************** function _Lcd_Cmd *****************
  2913 ;; Defined at:
  2914 ;;		line 33 in file "LCD.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  a               1    wreg     unsigned char 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  a               1    6[COMMON] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0, pclath, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2928 ;;      Params:         0       0       0       0       0
  2929 ;;      Locals:         1       0       0       0       0
  2930 ;;      Temps:          2       0       0       0       0
  2931 ;;      Totals:         3       0       0       0       0
  2932 ;;Total ram usage:        3 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    2
  2935 ;; This function calls:
  2936 ;;		_Lcd_Port
  2937 ;; This function is called by:
  2938 ;;		_Lcd_Init
  2939 ;;		_Lcd_Clear
  2940 ;;		_Lcd_Set_Cursor
  2941 ;;		_Lcd_Shift_Right
  2942 ;;		_Lcd_Shift_Left
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           
  2947                           ;psect for function _Lcd_Cmd
  2948  10B9                     _Lcd_Cmd:
  2949                           
  2950                           ;incstack = 0
  2951                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2952                           ;Lcd_Cmd@a stored from wreg
  2953  10B9  00F6               	movwf	Lcd_Cmd@a
  2954  10BA                     l3803:
  2955                           
  2956                           ;LCD.c: 34:  PORTEbits.RE0 = 0;
  2957  10BA  1283               	bcf	3,5	;RP0=0, select bank0
  2958  10BB  1303               	bcf	3,6	;RP1=0, select bank0
  2959  10BC  1009               	bcf	9,0	;volatile
  2960  10BD                     l3805:
  2961                           
  2962                           ;LCD.c: 35:  Lcd_Port(a);
  2963  10BD  0876               	movf	Lcd_Cmd@a,w
  2964  10BE  160A  158A  2473  160A  118A  	fcall	_Lcd_Port
  2965  10C3                     l3807:
  2966                           
  2967                           ;LCD.c: 36:  PORTEbits.RE2 = 1;
  2968  10C3  1283               	bcf	3,5	;RP0=0, select bank0
  2969  10C4  1303               	bcf	3,6	;RP1=0, select bank0
  2970  10C5  1509               	bsf	9,2	;volatile
  2971  10C6                     l3809:
  2972                           
  2973                           ;LCD.c: 37:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2974  10C6  300B               	movlw	11
  2975  10C7  00F5               	movwf	??_Lcd_Cmd+1
  2976  10C8  3062               	movlw	98
  2977  10C9  00F4               	movwf	??_Lcd_Cmd
  2978  10CA                     u6717:
  2979  10CA  0BF4               	decfsz	??_Lcd_Cmd,f
  2980  10CB  28CA               	goto	u6717
  2981  10CC  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2982  10CD  28CA               	goto	u6717
  2983  10CE  0000               	nop
  2984  10CF                     l3811:
  2985                           
  2986                           ;LCD.c: 38:         PORTEbits.RE2 = 0;
  2987  10CF  1283               	bcf	3,5	;RP0=0, select bank0
  2988  10D0  1303               	bcf	3,6	;RP1=0, select bank0
  2989  10D1  1109               	bcf	9,2	;volatile
  2990  10D2                     l151:
  2991  10D2  0008               	return
  2992  10D3                     __end_of_Lcd_Cmd:
  2993                           
  2994                           	psect	text15
  2995  1C73                     __ptext15:	
  2996 ;; *************** function _Lcd_Port *****************
  2997 ;; Defined at:
  2998 ;;		line 29 in file "LCD.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  a               1    wreg     unsigned char 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  a               1    3[COMMON] unsigned char 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      void 
  3005 ;; Registers used:
  3006 ;;		wreg
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3012 ;;      Params:         0       0       0       0       0
  3013 ;;      Locals:         1       0       0       0       0
  3014 ;;      Temps:          0       0       0       0       0
  3015 ;;      Totals:         1       0       0       0       0
  3016 ;;Total ram usage:        1 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    1
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_Lcd_Init
  3023 ;;		_Lcd_Cmd
  3024 ;;		_Lcd_Write_Char
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           
  3029                           ;psect for function _Lcd_Port
  3030  1C73                     _Lcd_Port:
  3031                           
  3032                           ;incstack = 0
  3033                           ; Regs used in _Lcd_Port: [wreg]
  3034                           ;Lcd_Port@a stored from wreg
  3035  1C73  00F3               	movwf	Lcd_Port@a
  3036  1C74                     l3551:
  3037                           
  3038                           ;LCD.c: 30:     PORTD = a;
  3039  1C74  0873               	movf	Lcd_Port@a,w
  3040  1C75  1283               	bcf	3,5	;RP0=0, select bank0
  3041  1C76  1303               	bcf	3,6	;RP1=0, select bank0
  3042  1C77  0088               	movwf	8	;volatile
  3043  1C78                     l148:
  3044  1C78  0008               	return
  3045  1C79                     __end_of_Lcd_Port:
  3046                           
  3047                           	psect	text16
  3048  1E76                     __ptext16:	
  3049 ;; *************** function _ADC_to_string *****************
  3050 ;; Defined at:
  3051 ;;		line 128 in file "pseudocodigo_lab3.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;		None
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;		None
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3065 ;;      Params:         0       0       0       0       0
  3066 ;;      Locals:         0       0       0       0       0
  3067 ;;      Temps:          0       3       0       0       0
  3068 ;;      Totals:         0       3       0       0       0
  3069 ;;Total ram usage:        3 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; Hardware stack levels required when called:    5
  3072 ;; This function calls:
  3073 ;;		_sprintf
  3074 ;; This function is called by:
  3075 ;;		_main
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           
  3080                           ;psect for function _ADC_to_string
  3081  1E76                     _ADC_to_string:
  3082  1E76                     l4483:	
  3083                           ;incstack = 0
  3084                           ; Regs used in _ADC_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3085                           
  3086                           
  3087                           ;pseudocodigo_lab3.c: 129:     sprintf(data_total, "%1.2fV %1.2fV  %d", S2_val, S1_val, 
      +                          cont);
  3088  1E76  3077               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3089  1E77  1283               	bcf	3,5	;RP0=0, select bank0
  3090  1E78  1303               	bcf	3,6	;RP1=0, select bank0
  3091  1E79  00EB               	movwf	??_ADC_to_string
  3092  1E7A  086B               	movf	??_ADC_to_string,w
  3093  1E7B  00E2               	movwf	sprintf@f
  3094  1E7C  1683               	bsf	3,5	;RP0=1, select bank1
  3095  1E7D  1303               	bcf	3,6	;RP1=0, select bank1
  3096  1E7E  0842               	movf	_S2_val^(0+128),w
  3097  1E7F  1283               	bcf	3,5	;RP0=0, select bank0
  3098  1E80  1303               	bcf	3,6	;RP1=0, select bank0
  3099  1E81  00E3               	movwf	?_sprintf+1
  3100  1E82  1683               	bsf	3,5	;RP0=1, select bank1
  3101  1E83  1303               	bcf	3,6	;RP1=0, select bank1
  3102  1E84  0843               	movf	(_S2_val+1)^(0+128),w
  3103  1E85  1283               	bcf	3,5	;RP0=0, select bank0
  3104  1E86  1303               	bcf	3,6	;RP1=0, select bank0
  3105  1E87  00E4               	movwf	?_sprintf+2
  3106  1E88  1683               	bsf	3,5	;RP0=1, select bank1
  3107  1E89  1303               	bcf	3,6	;RP1=0, select bank1
  3108  1E8A  0844               	movf	(_S2_val+2)^(0+128),w
  3109  1E8B  1283               	bcf	3,5	;RP0=0, select bank0
  3110  1E8C  1303               	bcf	3,6	;RP1=0, select bank0
  3111  1E8D  00E5               	movwf	?_sprintf+3
  3112  1E8E  1683               	bsf	3,5	;RP0=1, select bank1
  3113  1E8F  1303               	bcf	3,6	;RP1=0, select bank1
  3114  1E90  0845               	movf	_S1_val^(0+128),w
  3115  1E91  1283               	bcf	3,5	;RP0=0, select bank0
  3116  1E92  1303               	bcf	3,6	;RP1=0, select bank0
  3117  1E93  00E6               	movwf	?_sprintf+4
  3118  1E94  1683               	bsf	3,5	;RP0=1, select bank1
  3119  1E95  1303               	bcf	3,6	;RP1=0, select bank1
  3120  1E96  0846               	movf	(_S1_val+1)^(0+128),w
  3121  1E97  1283               	bcf	3,5	;RP0=0, select bank0
  3122  1E98  1303               	bcf	3,6	;RP1=0, select bank0
  3123  1E99  00E7               	movwf	?_sprintf+5
  3124  1E9A  1683               	bsf	3,5	;RP0=1, select bank1
  3125  1E9B  1303               	bcf	3,6	;RP1=0, select bank1
  3126  1E9C  0847               	movf	(_S1_val+2)^(0+128),w
  3127  1E9D  1283               	bcf	3,5	;RP0=0, select bank0
  3128  1E9E  1303               	bcf	3,6	;RP1=0, select bank0
  3129  1E9F  00E8               	movwf	?_sprintf+6
  3130  1EA0  086E               	movf	_cont,w
  3131  1EA1  00EC               	movwf	??_ADC_to_string+1
  3132  1EA2  01ED               	clrf	??_ADC_to_string+2
  3133  1EA3  086C               	movf	??_ADC_to_string+1,w
  3134  1EA4  00E9               	movwf	?_sprintf+7
  3135  1EA5  086D               	movf	??_ADC_to_string+2,w
  3136  1EA6  00EA               	movwf	?_sprintf+8
  3137  1EA7  30CE               	movlw	(low (_data_total| 0))& (0+255)
  3138  1EA8  120A  158A  2528  160A  158A  	fcall	_sprintf
  3139  1EAD                     l98:
  3140  1EAD  0008               	return
  3141  1EAE                     __end_of_ADC_to_string:
  3142                           
  3143                           	psect	text17
  3144  0D28                     __ptext17:	
  3145 ;; *************** function _sprintf *****************
  3146 ;; Defined at:
  3147 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  sp              1    wreg     PTR unsigned char 
  3150 ;;		 -> data_total(20), 
  3151 ;;  f               1   66[BANK0 ] PTR const unsigned char 
  3152 ;;		 -> STR_2(18), 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  3155 ;;		 -> data_total(20), 
  3156 ;;  val             4   18[BANK1 ] unsigned long 
  3157 ;;  tmpval          4   14[BANK1 ] struct .
  3158 ;;  fval            3   24[BANK1 ] struct .
  3159 ;;  prec            2   28[BANK1 ] int 
  3160 ;;  eexp            2   22[BANK1 ] int 
  3161 ;;  width           2   12[BANK1 ] int 
  3162 ;;  flag            2   10[BANK1 ] unsigned short 
  3163 ;;  cp              2    0        PTR const unsigned char 
  3164 ;;  len             2    0        unsigned int 
  3165 ;;  c               1   30[BANK1 ] unsigned char 
  3166 ;;  ap              1    9[BANK1 ] PTR void [1]
  3167 ;;		 -> ?_sprintf(2), 
  3168 ;;  d               1    0        unsigned char 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  2   66[BANK0 ] int 
  3171 ;; Registers used:
  3172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3178 ;;      Params:         0       9       0       0       0
  3179 ;;      Locals:         0       0      25       0       0
  3180 ;;      Temps:          0       0       6       0       0
  3181 ;;      Totals:         0       9      31       0       0
  3182 ;;Total ram usage:       40 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; Hardware stack levels required when called:    4
  3185 ;; This function calls:
  3186 ;;		___awdiv
  3187 ;;		___ftadd
  3188 ;;		___ftge
  3189 ;;		___ftmul
  3190 ;;		___ftneg
  3191 ;;		___ftsub
  3192 ;;		___fttol
  3193 ;;		___lldiv
  3194 ;;		___llmod
  3195 ;;		___lltoft
  3196 ;;		___wmul
  3197 ;;		__div_to_l_
  3198 ;;		__tdiv_to_l_
  3199 ;;		_fround
  3200 ;;		_isdigit
  3201 ;;		_scale
  3202 ;; This function is called by:
  3203 ;;		_ADC_to_string
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           
  3208                           ;psect for function _sprintf
  3209  0D28                     _sprintf:
  3210                           
  3211                           ;incstack = 0
  3212                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3213                           ;sprintf@sp stored from wreg
  3214  0D28  1683               	bsf	3,5	;RP0=1, select bank1
  3215  0D29  1303               	bcf	3,6	;RP1=0, select bank1
  3216  0D2A  00BB               	movwf	sprintf@sp^(0+128)
  3217  0D2B                     l4087:
  3218                           
  3219                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  3220  0D2B  3063               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3221  0D2C  00A0               	movwf	??_sprintf^(0+128)
  3222  0D2D  0820               	movf	??_sprintf^(0+128),w
  3223  0D2E  00A9               	movwf	sprintf@ap^(0+128)
  3224  0D2F                     L1:
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3227  0D2F  120A  118A  2E4A   	goto	l4367
  3228  0D32                     l4089:
  3229                           
  3230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3231  0D32  3025               	movlw	37
  3232  0D33  063E               	xorwf	sprintf@c^(0+128),w
  3233  0D34  1903               	btfsc	3,2
  3234  0D35  2D37               	goto	u5951
  3235  0D36  2D38               	goto	u5950
  3236  0D37                     u5951:
  3237  0D37  2D44               	goto	l4095
  3238  0D38                     u5950:
  3239  0D38                     l4091:
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3242  0D38  083E               	movf	sprintf@c^(0+128),w
  3243  0D39  00A0               	movwf	??_sprintf^(0+128)
  3244  0D3A  083B               	movf	sprintf@sp^(0+128),w
  3245  0D3B  0084               	movwf	4
  3246  0D3C  0820               	movf	??_sprintf^(0+128),w
  3247  0D3D  1383               	bcf	3,7	;select IRP bank0
  3248  0D3E  0080               	movwf	0
  3249  0D3F                     l4093:
  3250  0D3F  3001               	movlw	1
  3251  0D40  00A0               	movwf	??_sprintf^(0+128)
  3252  0D41  0820               	movf	??_sprintf^(0+128),w
  3253  0D42  07BB               	addwf	sprintf@sp^(0+128),f
  3254                           
  3255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  3256  0D43  2D2F               	goto	L1
  3257  0D44                     l4095:
  3258                           
  3259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  3260  0D44  01AC               	clrf	sprintf@width^(0+128)
  3261  0D45  01AD               	clrf	(sprintf@width+1)^(0+128)
  3262                           
  3263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3264  0D46  01AA               	clrf	sprintf@flag^(0+128)
  3265  0D47  01AB               	clrf	(sprintf@flag+1)^(0+128)
  3266  0D48                     l4097:
  3267                           
  3268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  3269  0D48  1283               	bcf	3,5	;RP0=0, select bank0
  3270  0D49  1303               	bcf	3,6	;RP1=0, select bank0
  3271  0D4A  0862               	movf	sprintf@f,w
  3272  0D4B  0084               	movwf	4
  3273  0D4C  160A  118A  200A  120A  158A  	fcall	stringdir
  3274  0D51  160A  158A  24BC  120A  158A  	fcall	_isdigit
  3275  0D56  1C03               	btfss	3,0
  3276  0D57  2D59               	goto	u5961
  3277  0D58  2D5A               	goto	u5960
  3278  0D59                     u5961:
  3279  0D59  2DA0               	goto	l4109
  3280  0D5A                     u5960:
  3281  0D5A                     l4099:
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  3284  0D5A  1683               	bsf	3,5	;RP0=1, select bank1
  3285  0D5B  1303               	bcf	3,6	;RP1=0, select bank1
  3286  0D5C  01AC               	clrf	sprintf@width^(0+128)
  3287  0D5D  01AD               	clrf	(sprintf@width+1)^(0+128)
  3288  0D5E                     l4101:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  3291  0D5E  300A               	movlw	10
  3292  0D5F  00F3               	movwf	___wmul@multiplier
  3293  0D60  3000               	movlw	0
  3294  0D61  00F4               	movwf	___wmul@multiplier+1
  3295  0D62  1683               	bsf	3,5	;RP0=1, select bank1
  3296  0D63  1303               	bcf	3,6	;RP1=0, select bank1
  3297  0D64  082D               	movf	(sprintf@width+1)^(0+128),w
  3298  0D65  00F6               	movwf	___wmul@multiplicand+1
  3299  0D66  082C               	movf	sprintf@width^(0+128),w
  3300  0D67  00F5               	movwf	___wmul@multiplicand
  3301  0D68  160A  158A  2596  120A  158A  	fcall	___wmul
  3302  0D6D  0874               	movf	?___wmul+1,w
  3303  0D6E  1683               	bsf	3,5	;RP0=1, select bank1
  3304  0D6F  1303               	bcf	3,6	;RP1=0, select bank1
  3305  0D70  00AD               	movwf	(sprintf@width+1)^(0+128)
  3306  0D71  0873               	movf	?___wmul,w
  3307  0D72  00AC               	movwf	sprintf@width^(0+128)
  3308  0D73                     l4103:
  3309                           
  3310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  3311  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  3312  0D74  1303               	bcf	3,6	;RP1=0, select bank0
  3313  0D75  0862               	movf	sprintf@f,w
  3314  0D76  0084               	movwf	4
  3315  0D77  160A  118A  200A  120A  158A  	fcall	stringdir
  3316  0D7C  3ED0               	addlw	208
  3317  0D7D  1683               	bsf	3,5	;RP0=1, select bank1
  3318  0D7E  1303               	bcf	3,6	;RP1=0, select bank1
  3319  0D7F  00A0               	movwf	??_sprintf^(0+128)
  3320  0D80  30FF               	movlw	255
  3321  0D81  1803               	skipnc
  3322  0D82  3000               	movlw	0
  3323  0D83  00A1               	movwf	(??_sprintf^(0+128)+1)
  3324  0D84  0820               	movf	??_sprintf^(0+128),w
  3325  0D85  07AC               	addwf	sprintf@width^(0+128),f
  3326  0D86  1803               	skipnc
  3327  0D87  0AAD               	incf	(sprintf@width+1)^(0+128),f
  3328  0D88  0821               	movf	(??_sprintf+1)^(0+128),w
  3329  0D89  07AD               	addwf	(sprintf@width+1)^(0+128),f
  3330  0D8A                     l4105:
  3331  0D8A  3001               	movlw	1
  3332  0D8B  00A0               	movwf	??_sprintf^(0+128)
  3333  0D8C  0820               	movf	??_sprintf^(0+128),w
  3334  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  3335  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  3336  0D8F  07E2               	addwf	sprintf@f,f
  3337  0D90                     l4107:
  3338                           
  3339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  3340  0D90  0862               	movf	sprintf@f,w
  3341  0D91  0084               	movwf	4
  3342  0D92  160A  118A  200A  120A  158A  	fcall	stringdir
  3343  0D97  160A  158A  24BC  120A  158A  	fcall	_isdigit
  3344  0D9C  1803               	btfsc	3,0
  3345  0D9D  2D9F               	goto	u5971
  3346  0D9E  2DA0               	goto	u5970
  3347  0D9F                     u5971:
  3348  0D9F  2D5E               	goto	l4101
  3349  0DA0                     u5970:
  3350  0DA0                     l4109:
  3351                           
  3352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  3353  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0DA1  1303               	bcf	3,6	;RP1=0, select bank0
  3355  0DA2  0862               	movf	sprintf@f,w
  3356  0DA3  0084               	movwf	4
  3357  0DA4  160A  118A  200A  120A  158A  	fcall	stringdir
  3358  0DA9  3A2E               	xorlw	46
  3359  0DAA  1D03               	skipz
  3360  0DAB  2DAD               	goto	u5981
  3361  0DAC  2DAE               	goto	u5980
  3362  0DAD                     u5981:
  3363  0DAD  2E00               	goto	l4125
  3364  0DAE                     u5980:
  3365  0DAE                     l4111:
  3366                           
  3367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  3368  0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  3369  0DAF  1303               	bcf	3,6	;RP1=0, select bank1
  3370  0DB0  172B               	bsf	(sprintf@flag^(0+128)+1),6
  3371  0DB1                     l4113:
  3372                           
  3373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  3374  0DB1  3001               	movlw	1
  3375  0DB2  00A0               	movwf	??_sprintf^(0+128)
  3376  0DB3  0820               	movf	??_sprintf^(0+128),w
  3377  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  3378  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  3379  0DB6  07E2               	addwf	sprintf@f,f
  3380  0DB7                     l4115:
  3381                           
  3382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  3383  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  3384  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  3385  0DB9  01BC               	clrf	sprintf@prec^(0+128)
  3386  0DBA  01BD               	clrf	(sprintf@prec+1)^(0+128)
  3387                           
  3388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  3389  0DBB  2DEE               	goto	l4123
  3390  0DBC                     l4117:
  3391                           
  3392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  3393  0DBC  300A               	movlw	10
  3394  0DBD  00F3               	movwf	___wmul@multiplier
  3395  0DBE  3000               	movlw	0
  3396  0DBF  00F4               	movwf	___wmul@multiplier+1
  3397  0DC0  1683               	bsf	3,5	;RP0=1, select bank1
  3398  0DC1  1303               	bcf	3,6	;RP1=0, select bank1
  3399  0DC2  083D               	movf	(sprintf@prec+1)^(0+128),w
  3400  0DC3  00F6               	movwf	___wmul@multiplicand+1
  3401  0DC4  083C               	movf	sprintf@prec^(0+128),w
  3402  0DC5  00F5               	movwf	___wmul@multiplicand
  3403  0DC6  160A  158A  2596  120A  158A  	fcall	___wmul
  3404  0DCB  0874               	movf	?___wmul+1,w
  3405  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  3406  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  3407  0DCE  00BD               	movwf	(sprintf@prec+1)^(0+128)
  3408  0DCF  0873               	movf	?___wmul,w
  3409  0DD0  00BC               	movwf	sprintf@prec^(0+128)
  3410  0DD1                     l4119:
  3411                           
  3412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  3413  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  3414  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  3415  0DD3  0862               	movf	sprintf@f,w
  3416  0DD4  0084               	movwf	4
  3417  0DD5  160A  118A  200A  120A  158A  	fcall	stringdir
  3418  0DDA  3ED0               	addlw	208
  3419  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  3420  0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  3421  0DDD  00A0               	movwf	??_sprintf^(0+128)
  3422  0DDE  30FF               	movlw	255
  3423  0DDF  1803               	skipnc
  3424  0DE0  3000               	movlw	0
  3425  0DE1  00A1               	movwf	(??_sprintf^(0+128)+1)
  3426  0DE2  0820               	movf	??_sprintf^(0+128),w
  3427  0DE3  07BC               	addwf	sprintf@prec^(0+128),f
  3428  0DE4  1803               	skipnc
  3429  0DE5  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3430  0DE6  0821               	movf	(??_sprintf+1)^(0+128),w
  3431  0DE7  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3432  0DE8                     l4121:
  3433  0DE8  3001               	movlw	1
  3434  0DE9  00A0               	movwf	??_sprintf^(0+128)
  3435  0DEA  0820               	movf	??_sprintf^(0+128),w
  3436  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  3437  0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  3438  0DED  07E2               	addwf	sprintf@f,f
  3439  0DEE                     l4123:
  3440                           
  3441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  3442  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  3443  0DEF  0862               	movf	sprintf@f,w
  3444  0DF0  0084               	movwf	4
  3445  0DF1  160A  118A  200A  120A  158A  	fcall	stringdir
  3446  0DF6  160A  158A  24BC  120A  158A  	fcall	_isdigit
  3447  0DFB  1803               	btfsc	3,0
  3448  0DFC  2DFE               	goto	u5991
  3449  0DFD  2DFF               	goto	u5990
  3450  0DFE                     u5991:
  3451  0DFE  2DBC               	goto	l4117
  3452  0DFF                     u5990:
  3453  0DFF  2E08               	goto	l4131
  3454  0E00                     l4125:
  3455                           
  3456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  3457  0E00  1683               	bsf	3,5	;RP0=1, select bank1
  3458  0E01  1303               	bcf	3,6	;RP1=0, select bank1
  3459  0E02  01BC               	clrf	sprintf@prec^(0+128)
  3460  0E03  01BD               	clrf	(sprintf@prec+1)^(0+128)
  3461  0E04                     l4127:
  3462                           
  3463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  3464  0E04  162B               	bsf	(sprintf@flag^(0+128)+1),4
  3465  0E05  2E08               	goto	l4131
  3466  0E06                     l403:	
  3467                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  3468                           
  3469                           
  3470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  3471  0E06  152B               	bsf	(sprintf@flag^(0+128)+1),2
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  3474  0E07  2E2C               	goto	l4133
  3475  0E08                     l4131:
  3476  0E08  3001               	movlw	1
  3477  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  3478  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  3479  0E0B  07E2               	addwf	sprintf@f,f
  3480  0E0C  30FF               	movlw	-1
  3481  0E0D  0762               	addwf	sprintf@f,w
  3482  0E0E  0084               	movwf	4
  3483  0E0F  160A  118A  200A  120A  158A  	fcall	stringdir
  3484  0E14  1683               	bsf	3,5	;RP0=1, select bank1
  3485  0E15  1303               	bcf	3,6	;RP1=0, select bank1
  3486  0E16  00BE               	movwf	sprintf@c^(0+128)
  3487  0E17  00A0               	movwf	??_sprintf^(0+128)
  3488  0E18  01A1               	clrf	(??_sprintf^(0+128)+1)
  3489                           
  3490                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3491                           ; Switch size 1, requested type "simple"
  3492                           ; Number of cases is 1, Range of values is 0 to 0
  3493                           ; switch strategies available:
  3494                           ; Name         Instructions Cycles
  3495                           ; simple_byte            4     3 (average)
  3496                           ; direct_byte           11     8 (fixed)
  3497                           ; jumptable            260     6 (fixed)
  3498                           ;	Chosen strategy is simple_byte
  3499  0E19  0821               	movf	(??_sprintf+1)^(0+128),w
  3500  0E1A  3A00               	xorlw	0	; case 0
  3501  0E1B  1903               	skipnz
  3502  0E1C  2E1E               	goto	l4595
  3503  0E1D  2D2F               	goto	L1
  3504  0E1E                     l4595:
  3505                           
  3506                           ; Switch size 1, requested type "simple"
  3507                           ; Number of cases is 4, Range of values is 0 to 105
  3508                           ; switch strategies available:
  3509                           ; Name         Instructions Cycles
  3510                           ; simple_byte           13     7 (average)
  3511                           ; jumptable            260     6 (fixed)
  3512                           ;	Chosen strategy is simple_byte
  3513  0E1E  0820               	movf	??_sprintf^(0+128),w
  3514  0E1F  3A00               	xorlw	0	; case 0
  3515  0E20  1903               	skipnz
  3516  0E21  2FFD               	goto	L3
  3517  0E22  3A64               	xorlw	100	; case 100
  3518  0E23  1903               	skipnz
  3519  0E24  2E2C               	goto	l4133
  3520  0E25  3A02               	xorlw	2	; case 102
  3521  0E26  1903               	skipnz
  3522  0E27  2E06               	goto	l403
  3523  0E28  3A0F               	xorlw	15	; case 105
  3524  0E29  1903               	skipnz
  3525  0E2A  2E2C               	goto	l4133
  3526  0E2B  2D2F               	goto	L1
  3527  0E2C                     l4133:
  3528                           
  3529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  3530  0E2C  3000               	movlw	0
  3531  0E2D  052A               	andwf	sprintf@flag^(0+128),w
  3532  0E2E  00A0               	movwf	??_sprintf^(0+128)
  3533  0E2F  3007               	movlw	7
  3534  0E30  052B               	andwf	(sprintf@flag+1)^(0+128),w
  3535  0E31  00A1               	movwf	(??_sprintf+1)^(0+128)
  3536  0E32  0820               	movf	??_sprintf^(0+128),w
  3537  0E33  0421               	iorwf	(??_sprintf^(0+128)+1),w
  3538  0E34  1903               	btfsc	3,2
  3539  0E35  2E37               	goto	u6001
  3540  0E36  2E3A               	goto	u6000
  3541  0E37                     u6001:
  3542  0E37  120A  118A  2C9B   	goto	l4289
  3543  0E3A                     u6000:
  3544  0E3A                     l4135:
  3545                           
  3546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  3547  0E3A  1E2B               	btfss	(sprintf@flag+1)^(0+128),4
  3548  0E3B  2E3D               	goto	u6011
  3549  0E3C  2E3E               	goto	u6010
  3550  0E3D                     u6011:
  3551  0E3D  2E42               	goto	l4139
  3552  0E3E                     u6010:
  3553  0E3E                     l4137:
  3554                           
  3555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  3556  0E3E  3006               	movlw	6
  3557  0E3F  00BC               	movwf	sprintf@prec^(0+128)
  3558  0E40  3000               	movlw	0
  3559  0E41  00BD               	movwf	(sprintf@prec^(0+128)+1)
  3560  0E42                     l4139:
  3561                           
  3562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  3563  0E42  0829               	movf	sprintf@ap^(0+128),w
  3564  0E43  0084               	movwf	4
  3565  0E44  1383               	bcf	3,7	;select IRP bank0
  3566  0E45  0800               	movf	0,w
  3567  0E46  00B8               	movwf	sprintf@fval^(0+128)
  3568  0E47  0A84               	incf	4,f
  3569  0E48  0800               	movf	0,w
  3570  0E49  00B9               	movwf	(sprintf@fval+1)^(0+128)
  3571  0E4A  0A84               	incf	4,f
  3572  0E4B  0800               	movf	0,w
  3573  0E4C  00BA               	movwf	(sprintf@fval+2)^(0+128)
  3574  0E4D                     l4141:
  3575  0E4D  3003               	movlw	3
  3576  0E4E  00A0               	movwf	??_sprintf^(0+128)
  3577  0E4F  0820               	movf	??_sprintf^(0+128),w
  3578  0E50  07A9               	addwf	sprintf@ap^(0+128),f
  3579  0E51                     l4143:
  3580                           
  3581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  3582  0E51  0838               	movf	sprintf@fval^(0+128),w
  3583  0E52  1283               	bcf	3,5	;RP0=0, select bank0
  3584  0E53  1303               	bcf	3,6	;RP1=0, select bank0
  3585  0E54  00A0               	movwf	___ftge@ff1
  3586  0E55  1683               	bsf	3,5	;RP0=1, select bank1
  3587  0E56  1303               	bcf	3,6	;RP1=0, select bank1
  3588  0E57  0839               	movf	(sprintf@fval+1)^(0+128),w
  3589  0E58  1283               	bcf	3,5	;RP0=0, select bank0
  3590  0E59  1303               	bcf	3,6	;RP1=0, select bank0
  3591  0E5A  00A1               	movwf	___ftge@ff1+1
  3592  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  3593  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  3594  0E5D  083A               	movf	(sprintf@fval+2)^(0+128),w
  3595  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  3596  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  3597  0E60  00A2               	movwf	___ftge@ff1+2
  3598  0E61  3000               	movlw	0
  3599  0E62  00A3               	movwf	___ftge@ff2
  3600  0E63  3000               	movlw	0
  3601  0E64  00A4               	movwf	___ftge@ff2+1
  3602  0E65  3000               	movlw	0
  3603  0E66  00A5               	movwf	___ftge@ff2+2
  3604  0E67  160A  158A  26AE  120A  158A  	fcall	___ftge
  3605  0E6C  1803               	btfsc	3,0
  3606  0E6D  2E6F               	goto	u6021
  3607  0E6E  2E70               	goto	u6020
  3608  0E6F                     u6021:
  3609  0E6F  2E89               	goto	l4149
  3610  0E70                     u6020:
  3611  0E70                     l4145:
  3612                           
  3613                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  3614  0E70  1683               	bsf	3,5	;RP0=1, select bank1
  3615  0E71  1303               	bcf	3,6	;RP1=0, select bank1
  3616  0E72  0838               	movf	sprintf@fval^(0+128),w
  3617  0E73  00F3               	movwf	___ftneg@f1
  3618  0E74  0839               	movf	(sprintf@fval+1)^(0+128),w
  3619  0E75  00F4               	movwf	___ftneg@f1+1
  3620  0E76  083A               	movf	(sprintf@fval+2)^(0+128),w
  3621  0E77  00F5               	movwf	___ftneg@f1+2
  3622  0E78  160A  158A  248D  120A  158A  	fcall	___ftneg
  3623  0E7D  0873               	movf	?___ftneg,w
  3624  0E7E  1683               	bsf	3,5	;RP0=1, select bank1
  3625  0E7F  1303               	bcf	3,6	;RP1=0, select bank1
  3626  0E80  00B8               	movwf	sprintf@fval^(0+128)
  3627  0E81  0874               	movf	?___ftneg+1,w
  3628  0E82  00B9               	movwf	(sprintf@fval+1)^(0+128)
  3629  0E83  0875               	movf	?___ftneg+2,w
  3630  0E84  00BA               	movwf	(sprintf@fval+2)^(0+128)
  3631  0E85                     l4147:
  3632                           
  3633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  3634  0E85  3003               	movlw	3
  3635  0E86  04AA               	iorwf	sprintf@flag^(0+128),f
  3636  0E87  3000               	movlw	0
  3637  0E88  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
  3638  0E89                     l4149:
  3639                           
  3640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  3641  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  3642  0E8A  1303               	bcf	3,6	;RP1=0, select bank1
  3643  0E8B  01B6               	clrf	sprintf@eexp^(0+128)
  3644  0E8C  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  3645  0E8D                     l4151:
  3646                           
  3647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  3648  0E8D  083A               	movf	(sprintf@fval+2)^(0+128),w
  3649  0E8E  0439               	iorwf	(sprintf@fval+1)^(0+128),w
  3650  0E8F  0438               	iorwf	sprintf@fval^(0+128),w
  3651  0E90  1903               	skipnz
  3652  0E91  2E93               	goto	u6031
  3653  0E92  2E94               	goto	u6030
  3654  0E93                     u6031:
  3655  0E93  2FA2               	goto	l4177
  3656  0E94                     u6030:
  3657  0E94                     l4153:
  3658                           
  3659                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  3660  0E94  30B8               	movlw	low (sprintf@fval| 0)
  3661  0E95  0084               	movwf	4
  3662  0E96  1383               	bcf	3,7	;select IRP bank1
  3663  0E97  0800               	movf	0,w
  3664  0E98  00A0               	movwf	??_sprintf^(0+128)
  3665  0E99  0A84               	incf	4,f
  3666  0E9A  0800               	movf	0,w
  3667  0E9B  00A1               	movwf	(??_sprintf^(0+128)+1)
  3668  0E9C  0A84               	incf	4,f
  3669  0E9D  0800               	movf	0,w
  3670  0E9E  00A2               	movwf	(??_sprintf^(0+128)+2)
  3671  0E9F  0A84               	incf	4,f
  3672  0EA0  0800               	movf	0,w
  3673  0EA1  00A3               	movwf	(??_sprintf^(0+128)+3)
  3674  0EA2  300F               	movlw	15
  3675  0EA3                     u6045:
  3676  0EA3  1003               	clrc
  3677  0EA4  0CA3               	rrf	(??_sprintf^(0+128)+3),f
  3678  0EA5  0CA2               	rrf	(??_sprintf^(0+128)+2),f
  3679  0EA6  0CA1               	rrf	(??_sprintf^(0+128)+1),f
  3680  0EA7  0CA0               	rrf	??_sprintf^(0+128),f
  3681  0EA8                     u6040:
  3682  0EA8  3EFF               	addlw	-1
  3683  0EA9  1D03               	skipz
  3684  0EAA  2EA3               	goto	u6045
  3685  0EAB  30FF               	movlw	255
  3686  0EAC  0520               	andwf	??_sprintf^(0+128),w
  3687  0EAD  00A4               	movwf	(??_sprintf+4)^(0+128)
  3688  0EAE  3000               	movlw	0
  3689  0EAF  0521               	andwf	(??_sprintf+1)^(0+128),w
  3690  0EB0  00A5               	movwf	(??_sprintf+5)^(0+128)
  3691  0EB1  0824               	movf	(??_sprintf+4)^(0+128),w
  3692  0EB2  3E82               	addlw	130
  3693  0EB3  00B6               	movwf	sprintf@eexp^(0+128)
  3694  0EB4  0825               	movf	(??_sprintf+5)^(0+128),w
  3695  0EB5  1803               	skipnc
  3696  0EB6  3E01               	addlw	1
  3697  0EB7  3EFF               	addlw	255
  3698  0EB8  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  3699  0EB9                     l4155:
  3700                           
  3701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  3702  0EB9  30FF               	movlw	255
  3703  0EBA  07B6               	addwf	sprintf@eexp^(0+128),f
  3704  0EBB  1803               	skipnc
  3705  0EBC  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  3706  0EBD  30FF               	movlw	255
  3707  0EBE  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  3708  0EBF                     l4157:
  3709                           
  3710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  3711  0EBF  3003               	movlw	3
  3712  0EC0  00F3               	movwf	___wmul@multiplier
  3713  0EC1  3000               	movlw	0
  3714  0EC2  00F4               	movwf	___wmul@multiplier+1
  3715  0EC3  0837               	movf	(sprintf@eexp+1)^(0+128),w
  3716  0EC4  00F6               	movwf	___wmul@multiplicand+1
  3717  0EC5  0836               	movf	sprintf@eexp^(0+128),w
  3718  0EC6  00F5               	movwf	___wmul@multiplicand
  3719  0EC7  160A  158A  2596  120A  158A  	fcall	___wmul
  3720  0ECC  0874               	movf	?___wmul+1,w
  3721  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  3722  0ECE  1303               	bcf	3,6	;RP1=0, select bank1
  3723  0ECF  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  3724  0ED0  0873               	movf	?___wmul,w
  3725  0ED1  00B6               	movwf	sprintf@eexp^(0+128)
  3726  0ED2                     l4159:
  3727                           
  3728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  3729  0ED2  300A               	movlw	10
  3730  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  3731  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  3732  0ED5  00A2               	movwf	___awdiv@divisor
  3733  0ED6  3000               	movlw	0
  3734  0ED7  00A3               	movwf	___awdiv@divisor+1
  3735  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  3736  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  3737  0EDA  0837               	movf	(sprintf@eexp+1)^(0+128),w
  3738  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  3739  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  3740  0EDD  00A5               	movwf	___awdiv@dividend+1
  3741  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  3742  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  3743  0EE0  0836               	movf	sprintf@eexp^(0+128),w
  3744  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3745  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  3746  0EE3  00A4               	movwf	___awdiv@dividend
  3747  0EE4  160A  118A  22FE  120A  158A  	fcall	___awdiv
  3748  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  3749  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  3750  0EEB  0823               	movf	?___awdiv+1,w
  3751  0EEC  1683               	bsf	3,5	;RP0=1, select bank1
  3752  0EED  1303               	bcf	3,6	;RP1=0, select bank1
  3753  0EEE  00B7               	movwf	(sprintf@eexp+1)^(0+128)
  3754  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  3755  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  3756  0EF1  0822               	movf	?___awdiv,w
  3757  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  3758  0EF3  1303               	bcf	3,6	;RP1=0, select bank1
  3759  0EF4  00B6               	movwf	sprintf@eexp^(0+128)
  3760  0EF5                     l4161:
  3761                           
  3762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  3763  0EF5  1FB7               	btfss	(sprintf@eexp+1)^(0+128),7
  3764  0EF6  2EF8               	goto	u6051
  3765  0EF7  2EF9               	goto	u6050
  3766  0EF8                     u6051:
  3767  0EF8  2EFF               	goto	l4165
  3768  0EF9                     u6050:
  3769  0EF9                     l4163:
  3770                           
  3771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  3772  0EF9  30FF               	movlw	255
  3773  0EFA  07B6               	addwf	sprintf@eexp^(0+128),f
  3774  0EFB  1803               	skipnc
  3775  0EFC  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  3776  0EFD  30FF               	movlw	255
  3777  0EFE  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  3778  0EFF                     l4165:
  3779                           
  3780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  3781  0EFF  0336               	decf	sprintf@eexp^(0+128),w
  3782  0F00  3AFF               	xorlw	255
  3783  0F01  120A  158A  226D  120A  158A  	fcall	_scale
  3784  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  3785  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  3786  0F08  083F               	movf	?_scale,w
  3787  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  3788  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  3789  0F0B  00AE               	movwf	sprintf@tmpval^(0+128)
  3790  0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  3791  0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  3792  0F0E  0840               	movf	?_scale+1,w
  3793  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  3794  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  3795  0F11  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  3796  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  3797  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  3798  0F14  0841               	movf	?_scale+2,w
  3799  0F15  1683               	bsf	3,5	;RP0=1, select bank1
  3800  0F16  1303               	bcf	3,6	;RP1=0, select bank1
  3801  0F17  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  3802  0F18                     l4167:
  3803                           
  3804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  3805  0F18  0838               	movf	sprintf@fval^(0+128),w
  3806  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3807  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  3808  0F1B  00AF               	movwf	___ftmul@f1
  3809  0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  3810  0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  3811  0F1E  0839               	movf	(sprintf@fval+1)^(0+128),w
  3812  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  3813  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  3814  0F21  00B0               	movwf	___ftmul@f1+1
  3815  0F22  1683               	bsf	3,5	;RP0=1, select bank1
  3816  0F23  1303               	bcf	3,6	;RP1=0, select bank1
  3817  0F24  083A               	movf	(sprintf@fval+2)^(0+128),w
  3818  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  3819  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  3820  0F27  00B1               	movwf	___ftmul@f1+2
  3821  0F28  1683               	bsf	3,5	;RP0=1, select bank1
  3822  0F29  1303               	bcf	3,6	;RP1=0, select bank1
  3823  0F2A  082E               	movf	sprintf@tmpval^(0+128),w
  3824  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  3825  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  3826  0F2D  00B2               	movwf	___ftmul@f2
  3827  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
  3828  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
  3829  0F30  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  3830  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  3831  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  3832  0F33  00B3               	movwf	___ftmul@f2+1
  3833  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  3834  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  3835  0F36  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  3836  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  3837  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  3838  0F39  00B4               	movwf	___ftmul@f2+2
  3839  0F3A  160A  118A  25EE  120A  158A  	fcall	___ftmul
  3840  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3841  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3842  0F41  082F               	movf	?___ftmul,w
  3843  0F42  1683               	bsf	3,5	;RP0=1, select bank1
  3844  0F43  1303               	bcf	3,6	;RP1=0, select bank1
  3845  0F44  00AE               	movwf	sprintf@tmpval^(0+128)
  3846  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  3847  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  3848  0F47  0830               	movf	?___ftmul+1,w
  3849  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  3850  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  3851  0F4A  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  3852  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  3853  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  3854  0F4D  0831               	movf	?___ftmul+2,w
  3855  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  3856  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  3857  0F50  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  3858  0F51                     l4169:
  3859                           
  3860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  3861  0F51  082E               	movf	sprintf@tmpval^(0+128),w
  3862  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3863  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  3864  0F54  00A0               	movwf	___ftge@ff1
  3865  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  3866  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  3867  0F57  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  3868  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  3869  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  3870  0F5A  00A1               	movwf	___ftge@ff1+1
  3871  0F5B  1683               	bsf	3,5	;RP0=1, select bank1
  3872  0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  3873  0F5D  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  3874  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3875  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3876  0F60  00A2               	movwf	___ftge@ff1+2
  3877  0F61  3000               	movlw	0
  3878  0F62  00A3               	movwf	___ftge@ff2
  3879  0F63  3080               	movlw	128
  3880  0F64  00A4               	movwf	___ftge@ff2+1
  3881  0F65  303F               	movlw	63
  3882  0F66  00A5               	movwf	___ftge@ff2+2
  3883  0F67  160A  158A  26AE  120A  158A  	fcall	___ftge
  3884  0F6C  1803               	btfsc	3,0
  3885  0F6D  2F6F               	goto	u6061
  3886  0F6E  2F70               	goto	u6060
  3887  0F6F                     u6061:
  3888  0F6F  2F79               	goto	l4173
  3889  0F70                     u6060:
  3890  0F70                     l4171:
  3891                           
  3892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3893  0F70  30FF               	movlw	255
  3894  0F71  1683               	bsf	3,5	;RP0=1, select bank1
  3895  0F72  1303               	bcf	3,6	;RP1=0, select bank1
  3896  0F73  07B6               	addwf	sprintf@eexp^(0+128),f
  3897  0F74  1803               	skipnc
  3898  0F75  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  3899  0F76  30FF               	movlw	255
  3900  0F77  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  3901  0F78  2FA2               	goto	l4177
  3902  0F79                     l4173:
  3903  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  3904  0F7A  1303               	bcf	3,6	;RP1=0, select bank1
  3905  0F7B  082E               	movf	sprintf@tmpval^(0+128),w
  3906  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  3907  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  3908  0F7E  00A0               	movwf	___ftge@ff1
  3909  0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  3910  0F80  1303               	bcf	3,6	;RP1=0, select bank1
  3911  0F81  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  3912  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  3913  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  3914  0F84  00A1               	movwf	___ftge@ff1+1
  3915  0F85  1683               	bsf	3,5	;RP0=1, select bank1
  3916  0F86  1303               	bcf	3,6	;RP1=0, select bank1
  3917  0F87  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  3918  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  3919  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  3920  0F8A  00A2               	movwf	___ftge@ff1+2
  3921  0F8B  3000               	movlw	0
  3922  0F8C  00A3               	movwf	___ftge@ff2
  3923  0F8D  3020               	movlw	32
  3924  0F8E  00A4               	movwf	___ftge@ff2+1
  3925  0F8F  3041               	movlw	65
  3926  0F90  00A5               	movwf	___ftge@ff2+2
  3927  0F91  160A  158A  26AE  120A  158A  	fcall	___ftge
  3928  0F96  1C03               	btfss	3,0
  3929  0F97  2F99               	goto	u6071
  3930  0F98  2F9A               	goto	u6070
  3931  0F99                     u6071:
  3932  0F99  2FA2               	goto	l4177
  3933  0F9A                     u6070:
  3934  0F9A                     l4175:
  3935                           
  3936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3937  0F9A  3001               	movlw	1
  3938  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  3939  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  3940  0F9D  07B6               	addwf	sprintf@eexp^(0+128),f
  3941  0F9E  1803               	skipnc
  3942  0F9F  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  3943  0FA0  3000               	movlw	0
  3944  0FA1  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  3945  0FA2                     l4177:
  3946                           
  3947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3948  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  3949  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  3950  0FA4  083D               	movf	(sprintf@prec+1)^(0+128),w
  3951  0FA5  3A80               	xorlw	128
  3952  0FA6  00FF               	movwf	btemp+1
  3953  0FA7  3080               	movlw	128
  3954  0FA8  027F               	subwf	btemp+1,w
  3955  0FA9  1D03               	skipz
  3956  0FAA  2FAD               	goto	u6085
  3957  0FAB  300D               	movlw	13
  3958  0FAC  023C               	subwf	sprintf@prec^(0+128),w
  3959  0FAD                     u6085:
  3960  0FAD  1803               	skipnc
  3961  0FAE  2FB0               	goto	u6081
  3962  0FAF  2FB1               	goto	u6080
  3963  0FB0                     u6081:
  3964  0FB0  2FEA               	goto	l4181
  3965  0FB1                     u6080:
  3966  0FB1                     l4179:
  3967                           
  3968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3969  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  3970  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  3971  0FB3  083C               	movf	sprintf@prec^(0+128),w
  3972  0FB4  120A  158A  20C4  120A  158A  	fcall	_fround
  3973  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  3974  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  3975  0FBB  083F               	movf	?_fround,w
  3976  0FBC  00CF               	movwf	___ftadd@f1
  3977  0FBD  0840               	movf	?_fround+1,w
  3978  0FBE  00D0               	movwf	___ftadd@f1+1
  3979  0FBF  0841               	movf	?_fround+2,w
  3980  0FC0  00D1               	movwf	___ftadd@f1+2
  3981  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  3982  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  3983  0FC3  0838               	movf	sprintf@fval^(0+128),w
  3984  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  3985  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  3986  0FC6  00D2               	movwf	___ftadd@f2
  3987  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  3988  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  3989  0FC9  0839               	movf	(sprintf@fval+1)^(0+128),w
  3990  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3991  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3992  0FCC  00D3               	movwf	___ftadd@f2+1
  3993  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  3994  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  3995  0FCF  083A               	movf	(sprintf@fval+2)^(0+128),w
  3996  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3997  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  3998  0FD2  00D4               	movwf	___ftadd@f2+2
  3999  0FD3  120A  118A  2667  120A  158A  	fcall	___ftadd
  4000  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  4001  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  4002  0FDA  084F               	movf	?___ftadd,w
  4003  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  4004  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  4005  0FDD  00B8               	movwf	sprintf@fval^(0+128)
  4006  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  4007  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  4008  0FE0  0850               	movf	?___ftadd+1,w
  4009  0FE1  1683               	bsf	3,5	;RP0=1, select bank1
  4010  0FE2  1303               	bcf	3,6	;RP1=0, select bank1
  4011  0FE3  00B9               	movwf	(sprintf@fval+1)^(0+128)
  4012  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
  4013  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
  4014  0FE6  0851               	movf	?___ftadd+2,w
  4015  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  4016  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  4017  0FE9  00BA               	movwf	(sprintf@fval+2)^(0+128)
  4018  0FEA                     l4181:
  4019                           
  4020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  4021  0FEA  1683               	bsf	3,5	;RP0=1, select bank1
  4022  0FEB  1303               	bcf	3,6	;RP1=0, select bank1
  4023  0FEC  0837               	movf	(sprintf@eexp+1)^(0+128),w
  4024  0FED  3A80               	xorlw	128
  4025  0FEE  00FF               	movwf	btemp+1
  4026  0FEF  3080               	movlw	128
  4027  0FF0  027F               	subwf	btemp+1,w
  4028  0FF1  1D03               	skipz
  4029  0FF2  2FF5               	goto	u6095
  4030  0FF3  300A               	movlw	10
  4031  0FF4  0236               	subwf	sprintf@eexp^(0+128),w
  4032  0FF5                     u6095:
  4033  0FF5  1803               	skipnc
  4034  0FF6  2FFA               	goto	u6091
  4035  0FF7  120A  118A  2822   	goto	u6090
  4036  0FFA                     u6091:
  4037  0FFA  120A  118A  2859   	goto	l4189
  4038  0FFD                     L3:
  4039  0FFD                     L2:
  4040  0FFD  120A  118A  2E62   	ljmp	l4369
  4041                           
  4042                           	psect	text18
  4043  0A6D                     __ptext18:	
  4044 ;; *************** function _scale *****************
  4045 ;; Defined at:
  4046 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  scl             1    wreg     char 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  scl             1   39[BANK0 ] char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  3   31[BANK0 ] char 
  4053 ;; Registers used:
  4054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4060 ;;      Params:         0       3       0       0       0
  4061 ;;      Locals:         0       4       0       0       0
  4062 ;;      Temps:          0       2       0       0       0
  4063 ;;      Totals:         0       9       0       0       0
  4064 ;;Total ram usage:        9 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; Hardware stack levels required when called:    3
  4067 ;; This function calls:
  4068 ;;		___awdiv
  4069 ;;		___awmod
  4070 ;;		___bmul
  4071 ;;		___ftmul
  4072 ;; This function is called by:
  4073 ;;		_sprintf
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           
  4078                           ;psect for function _scale
  4079  0A6D                     _scale:
  4080                           
  4081                           ;incstack = 0
  4082                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4083                           ;scale@scl stored from wreg
  4084  0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  4085  0A6E  1303               	bcf	3,6	;RP1=0, select bank0
  4086  0A6F  00C7               	movwf	scale@scl
  4087  0A70                     l3845:
  4088                           
  4089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4090  0A70  1FC7               	btfss	scale@scl,7
  4091  0A71  2A73               	goto	u5421
  4092  0A72  2A74               	goto	u5420
  4093  0A73                     u5421:
  4094  0A73  2BCF               	goto	l3867
  4095  0A74                     u5420:
  4096  0A74                     l3847:
  4097                           
  4098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4099  0A74  09C7               	comf	scale@scl,f
  4100  0A75  0AC7               	incf	scale@scl,f
  4101  0A76                     l3849:
  4102                           
  4103                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4104  0A76  0847               	movf	scale@scl,w
  4105  0A77  3A80               	xorlw	128
  4106  0A78  3E12               	addlw	-238
  4107  0A79  1C03               	skipc
  4108  0A7A  2A7C               	goto	u5431
  4109  0A7B  2A7D               	goto	u5430
  4110  0A7C                     u5431:
  4111  0A7C  2B3B               	goto	l3857
  4112  0A7D                     u5430:
  4113  0A7D                     l3851:
  4114                           
  4115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4116  0A7D  3003               	movlw	3
  4117  0A7E  00C2               	movwf	??_scale
  4118  0A7F  0842               	movf	??_scale,w
  4119  0A80  00AB               	movwf	___bmul@multiplicand
  4120  0A81  0847               	movf	scale@scl,w
  4121  0A82  00F5               	movwf	___awmod@dividend
  4122  0A83  01F6               	clrf	___awmod@dividend+1
  4123  0A84  1BF5               	btfsc	___awmod@dividend,7
  4124  0A85  03F6               	decf	___awmod@dividend+1,f
  4125  0A86  3064               	movlw	100
  4126  0A87  00F3               	movwf	___awmod@divisor
  4127  0A88  3000               	movlw	0
  4128  0A89  00F4               	movwf	___awmod@divisor+1
  4129  0A8A  160A  118A  21DF  120A  158A  	fcall	___awmod
  4130  0A8F  0874               	movf	?___awmod+1,w
  4131  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  4132  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  4133  0A92  00A5               	movwf	___awdiv@dividend+1
  4134  0A93  0873               	movf	?___awmod,w
  4135  0A94  00A4               	movwf	___awdiv@dividend
  4136  0A95  300A               	movlw	10
  4137  0A96  00A2               	movwf	___awdiv@divisor
  4138  0A97  3000               	movlw	0
  4139  0A98  00A3               	movwf	___awdiv@divisor+1
  4140  0A99  160A  118A  22FE  120A  158A  	fcall	___awdiv
  4141  0A9E  1283               	bcf	3,5	;RP0=0, select bank0
  4142  0A9F  1303               	bcf	3,6	;RP1=0, select bank0
  4143  0AA0  0822               	movf	?___awdiv,w
  4144  0AA1  160A  158A  24E4  120A  158A  	fcall	___bmul
  4145  0AA6  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  4146  0AA7  0084               	movwf	4
  4147  0AA8  160A  118A  200A  120A  158A  	fcall	stringdir
  4148  0AAD  1283               	bcf	3,5	;RP0=0, select bank0
  4149  0AAE  1303               	bcf	3,6	;RP1=0, select bank0
  4150  0AAF  00AF               	movwf	___ftmul@f1
  4151  0AB0  160A  118A  200A  120A  158A  	fcall	stringdir
  4152  0AB5  00B0               	movwf	___ftmul@f1+1
  4153  0AB6  160A  118A  200A  120A  158A  	fcall	stringdir
  4154  0ABB  00B1               	movwf	___ftmul@f1+2
  4155  0ABC  3003               	movlw	3
  4156  0ABD  00C3               	movwf	??_scale+1
  4157  0ABE  0843               	movf	??_scale+1,w
  4158  0ABF  00AB               	movwf	___bmul@multiplicand
  4159  0AC0  0847               	movf	scale@scl,w
  4160  0AC1  00A4               	movwf	___awdiv@dividend
  4161  0AC2  01A5               	clrf	___awdiv@dividend+1
  4162  0AC3  1BA4               	btfsc	___awdiv@dividend,7
  4163  0AC4  03A5               	decf	___awdiv@dividend+1,f
  4164  0AC5  3064               	movlw	100
  4165  0AC6  00A2               	movwf	___awdiv@divisor
  4166  0AC7  3000               	movlw	0
  4167  0AC8  00A3               	movwf	___awdiv@divisor+1
  4168  0AC9  160A  118A  22FE  120A  158A  	fcall	___awdiv
  4169  0ACE  1283               	bcf	3,5	;RP0=0, select bank0
  4170  0ACF  1303               	bcf	3,6	;RP1=0, select bank0
  4171  0AD0  0822               	movf	?___awdiv,w
  4172  0AD1  160A  158A  24E4  120A  158A  	fcall	___bmul
  4173  0AD6  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  4174  0AD7  0084               	movwf	4
  4175  0AD8  160A  118A  200A  120A  158A  	fcall	stringdir
  4176  0ADD  1283               	bcf	3,5	;RP0=0, select bank0
  4177  0ADE  1303               	bcf	3,6	;RP1=0, select bank0
  4178  0ADF  00B2               	movwf	___ftmul@f2
  4179  0AE0  160A  118A  200A  120A  158A  	fcall	stringdir
  4180  0AE5  00B3               	movwf	___ftmul@f2+1
  4181  0AE6  160A  118A  200A  120A  158A  	fcall	stringdir
  4182  0AEB  00B4               	movwf	___ftmul@f2+2
  4183  0AEC  160A  118A  25EE  120A  158A  	fcall	___ftmul
  4184  0AF1  1283               	bcf	3,5	;RP0=0, select bank0
  4185  0AF2  1303               	bcf	3,6	;RP1=0, select bank0
  4186  0AF3  082F               	movf	?___ftmul,w
  4187  0AF4  00C4               	movwf	_scale$1187
  4188  0AF5  0830               	movf	?___ftmul+1,w
  4189  0AF6  00C5               	movwf	_scale$1187+1
  4190  0AF7  0831               	movf	?___ftmul+2,w
  4191  0AF8  00C6               	movwf	_scale$1187+2
  4192                           
  4193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4194  0AF9  3003               	movlw	3
  4195  0AFA  00C2               	movwf	??_scale
  4196  0AFB  0842               	movf	??_scale,w
  4197  0AFC  00AB               	movwf	___bmul@multiplicand
  4198  0AFD  0847               	movf	scale@scl,w
  4199  0AFE  00F5               	movwf	___awmod@dividend
  4200  0AFF  01F6               	clrf	___awmod@dividend+1
  4201  0B00  1BF5               	btfsc	___awmod@dividend,7
  4202  0B01  03F6               	decf	___awmod@dividend+1,f
  4203  0B02  300A               	movlw	10
  4204  0B03  00F3               	movwf	___awmod@divisor
  4205  0B04  3000               	movlw	0
  4206  0B05  00F4               	movwf	___awmod@divisor+1
  4207  0B06  160A  118A  21DF  120A  158A  	fcall	___awmod
  4208  0B0B  0873               	movf	?___awmod,w
  4209  0B0C  160A  158A  24E4  120A  158A  	fcall	___bmul
  4210  0B11  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4211  0B12  0084               	movwf	4
  4212  0B13  160A  118A  200A  120A  158A  	fcall	stringdir
  4213  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  4214  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  4215  0B1A  00AF               	movwf	___ftmul@f1
  4216  0B1B  160A  118A  200A  120A  158A  	fcall	stringdir
  4217  0B20  00B0               	movwf	___ftmul@f1+1
  4218  0B21  160A  118A  200A  120A  158A  	fcall	stringdir
  4219  0B26  00B1               	movwf	___ftmul@f1+2
  4220  0B27  0844               	movf	_scale$1187,w
  4221  0B28  00B2               	movwf	___ftmul@f2
  4222  0B29  0845               	movf	_scale$1187+1,w
  4223  0B2A  00B3               	movwf	___ftmul@f2+1
  4224  0B2B  0846               	movf	_scale$1187+2,w
  4225  0B2C  00B4               	movwf	___ftmul@f2+2
  4226  0B2D  160A  118A  25EE  120A  158A  	fcall	___ftmul
  4227  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  4228  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  4229  0B34  082F               	movf	?___ftmul,w
  4230  0B35  00BF               	movwf	?_scale
  4231  0B36  0830               	movf	?___ftmul+1,w
  4232  0B37  00C0               	movwf	?_scale+1
  4233  0B38  0831               	movf	?___ftmul+2,w
  4234  0B39  00C1               	movwf	?_scale+2
  4235  0B3A  2D27               	goto	l381
  4236  0B3B                     l3857:
  4237  0B3B  0847               	movf	scale@scl,w
  4238  0B3C  3A80               	xorlw	128
  4239  0B3D  3E75               	addlw	-139
  4240  0B3E  1C03               	skipc
  4241  0B3F  2B41               	goto	u5441
  4242  0B40  2B42               	goto	u5440
  4243  0B41                     u5441:
  4244  0B41  2BAE               	goto	l3863
  4245  0B42                     u5440:
  4246  0B42                     l3859:
  4247                           
  4248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4249  0B42  3003               	movlw	3
  4250  0B43  00C2               	movwf	??_scale
  4251  0B44  0842               	movf	??_scale,w
  4252  0B45  00AB               	movwf	___bmul@multiplicand
  4253  0B46  0847               	movf	scale@scl,w
  4254  0B47  00F5               	movwf	___awmod@dividend
  4255  0B48  01F6               	clrf	___awmod@dividend+1
  4256  0B49  1BF5               	btfsc	___awmod@dividend,7
  4257  0B4A  03F6               	decf	___awmod@dividend+1,f
  4258  0B4B  300A               	movlw	10
  4259  0B4C  00F3               	movwf	___awmod@divisor
  4260  0B4D  3000               	movlw	0
  4261  0B4E  00F4               	movwf	___awmod@divisor+1
  4262  0B4F  160A  118A  21DF  120A  158A  	fcall	___awmod
  4263  0B54  0873               	movf	?___awmod,w
  4264  0B55  160A  158A  24E4  120A  158A  	fcall	___bmul
  4265  0B5A  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4266  0B5B  0084               	movwf	4
  4267  0B5C  160A  118A  200A  120A  158A  	fcall	stringdir
  4268  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  4269  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  4270  0B63  00AF               	movwf	___ftmul@f1
  4271  0B64  160A  118A  200A  120A  158A  	fcall	stringdir
  4272  0B69  00B0               	movwf	___ftmul@f1+1
  4273  0B6A  160A  118A  200A  120A  158A  	fcall	stringdir
  4274  0B6F  00B1               	movwf	___ftmul@f1+2
  4275  0B70  3003               	movlw	3
  4276  0B71  00C3               	movwf	??_scale+1
  4277  0B72  0843               	movf	??_scale+1,w
  4278  0B73  00AB               	movwf	___bmul@multiplicand
  4279  0B74  0847               	movf	scale@scl,w
  4280  0B75  00A4               	movwf	___awdiv@dividend
  4281  0B76  01A5               	clrf	___awdiv@dividend+1
  4282  0B77  1BA4               	btfsc	___awdiv@dividend,7
  4283  0B78  03A5               	decf	___awdiv@dividend+1,f
  4284  0B79  300A               	movlw	10
  4285  0B7A  00A2               	movwf	___awdiv@divisor
  4286  0B7B  3000               	movlw	0
  4287  0B7C  00A3               	movwf	___awdiv@divisor+1
  4288  0B7D  160A  118A  22FE  120A  158A  	fcall	___awdiv
  4289  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  4290  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  4291  0B84  0822               	movf	?___awdiv,w
  4292  0B85  160A  158A  24E4  120A  158A  	fcall	___bmul
  4293  0B8A  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  4294  0B8B  0084               	movwf	4
  4295  0B8C  160A  118A  200A  120A  158A  	fcall	stringdir
  4296  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  4297  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  4298  0B93  00B2               	movwf	___ftmul@f2
  4299  0B94  160A  118A  200A  120A  158A  	fcall	stringdir
  4300  0B99  00B3               	movwf	___ftmul@f2+1
  4301  0B9A  160A  118A  200A  120A  158A  	fcall	stringdir
  4302  0B9F  00B4               	movwf	___ftmul@f2+2
  4303  0BA0  160A  118A  25EE  120A  158A  	fcall	___ftmul
  4304  0BA5  1283               	bcf	3,5	;RP0=0, select bank0
  4305  0BA6  1303               	bcf	3,6	;RP1=0, select bank0
  4306  0BA7  082F               	movf	?___ftmul,w
  4307  0BA8  00BF               	movwf	?_scale
  4308  0BA9  0830               	movf	?___ftmul+1,w
  4309  0BAA  00C0               	movwf	?_scale+1
  4310  0BAB  0831               	movf	?___ftmul+2,w
  4311  0BAC  00C1               	movwf	?_scale+2
  4312  0BAD  2D27               	goto	l381
  4313  0BAE                     l3863:
  4314                           
  4315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4316  0BAE  3003               	movlw	3
  4317  0BAF  00C2               	movwf	??_scale
  4318  0BB0  0842               	movf	??_scale,w
  4319  0BB1  00AB               	movwf	___bmul@multiplicand
  4320  0BB2  0847               	movf	scale@scl,w
  4321  0BB3  160A  158A  24E4  120A  158A  	fcall	___bmul
  4322  0BB8  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4323  0BB9  0084               	movwf	4
  4324  0BBA  160A  118A  200A  120A  158A  	fcall	stringdir
  4325  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  4326  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  4327  0BC1  00BF               	movwf	?_scale
  4328  0BC2  160A  118A  200A  120A  158A  	fcall	stringdir
  4329  0BC7  00C0               	movwf	?_scale+1
  4330  0BC8  160A  118A  200A  120A  158A  	fcall	stringdir
  4331  0BCD  00C1               	movwf	?_scale+2
  4332  0BCE  2D27               	goto	l381
  4333  0BCF                     l3867:
  4334                           
  4335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4336  0BCF  0847               	movf	scale@scl,w
  4337  0BD0  3A80               	xorlw	128
  4338  0BD1  3E12               	addlw	-238
  4339  0BD2  1C03               	skipc
  4340  0BD3  2BD5               	goto	u5451
  4341  0BD4  2BD6               	goto	u5450
  4342  0BD5                     u5451:
  4343  0BD5  2C94               	goto	l3875
  4344  0BD6                     u5450:
  4345  0BD6                     l3869:
  4346                           
  4347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4348  0BD6  3003               	movlw	3
  4349  0BD7  00C2               	movwf	??_scale
  4350  0BD8  0842               	movf	??_scale,w
  4351  0BD9  00AB               	movwf	___bmul@multiplicand
  4352  0BDA  0847               	movf	scale@scl,w
  4353  0BDB  00F5               	movwf	___awmod@dividend
  4354  0BDC  01F6               	clrf	___awmod@dividend+1
  4355  0BDD  1BF5               	btfsc	___awmod@dividend,7
  4356  0BDE  03F6               	decf	___awmod@dividend+1,f
  4357  0BDF  3064               	movlw	100
  4358  0BE0  00F3               	movwf	___awmod@divisor
  4359  0BE1  3000               	movlw	0
  4360  0BE2  00F4               	movwf	___awmod@divisor+1
  4361  0BE3  160A  118A  21DF  120A  158A  	fcall	___awmod
  4362  0BE8  0874               	movf	?___awmod+1,w
  4363  0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  4364  0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  4365  0BEB  00A5               	movwf	___awdiv@dividend+1
  4366  0BEC  0873               	movf	?___awmod,w
  4367  0BED  00A4               	movwf	___awdiv@dividend
  4368  0BEE  300A               	movlw	10
  4369  0BEF  00A2               	movwf	___awdiv@divisor
  4370  0BF0  3000               	movlw	0
  4371  0BF1  00A3               	movwf	___awdiv@divisor+1
  4372  0BF2  160A  118A  22FE  120A  158A  	fcall	___awdiv
  4373  0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  4374  0BF8  1303               	bcf	3,6	;RP1=0, select bank0
  4375  0BF9  0822               	movf	?___awdiv,w
  4376  0BFA  160A  158A  24E4  120A  158A  	fcall	___bmul
  4377  0BFF  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  4378  0C00  0084               	movwf	4
  4379  0C01  160A  118A  200A  120A  158A  	fcall	stringdir
  4380  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  4381  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  4382  0C08  00AF               	movwf	___ftmul@f1
  4383  0C09  160A  118A  200A  120A  158A  	fcall	stringdir
  4384  0C0E  00B0               	movwf	___ftmul@f1+1
  4385  0C0F  160A  118A  200A  120A  158A  	fcall	stringdir
  4386  0C14  00B1               	movwf	___ftmul@f1+2
  4387  0C15  3003               	movlw	3
  4388  0C16  00C3               	movwf	??_scale+1
  4389  0C17  0843               	movf	??_scale+1,w
  4390  0C18  00AB               	movwf	___bmul@multiplicand
  4391  0C19  0847               	movf	scale@scl,w
  4392  0C1A  00A4               	movwf	___awdiv@dividend
  4393  0C1B  01A5               	clrf	___awdiv@dividend+1
  4394  0C1C  1BA4               	btfsc	___awdiv@dividend,7
  4395  0C1D  03A5               	decf	___awdiv@dividend+1,f
  4396  0C1E  3064               	movlw	100
  4397  0C1F  00A2               	movwf	___awdiv@divisor
  4398  0C20  3000               	movlw	0
  4399  0C21  00A3               	movwf	___awdiv@divisor+1
  4400  0C22  160A  118A  22FE  120A  158A  	fcall	___awdiv
  4401  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  4402  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  4403  0C29  0822               	movf	?___awdiv,w
  4404  0C2A  160A  158A  24E4  120A  158A  	fcall	___bmul
  4405  0C2F  3E37               	addlw	low (((__powers_-__stringbase)| (0+32768)+54))
  4406  0C30  0084               	movwf	4
  4407  0C31  160A  118A  200A  120A  158A  	fcall	stringdir
  4408  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  4409  0C37  1303               	bcf	3,6	;RP1=0, select bank0
  4410  0C38  00B2               	movwf	___ftmul@f2
  4411  0C39  160A  118A  200A  120A  158A  	fcall	stringdir
  4412  0C3E  00B3               	movwf	___ftmul@f2+1
  4413  0C3F  160A  118A  200A  120A  158A  	fcall	stringdir
  4414  0C44  00B4               	movwf	___ftmul@f2+2
  4415  0C45  160A  118A  25EE  120A  158A  	fcall	___ftmul
  4416  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  4417  0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  4418  0C4C  082F               	movf	?___ftmul,w
  4419  0C4D  00C4               	movwf	_scale$1187
  4420  0C4E  0830               	movf	?___ftmul+1,w
  4421  0C4F  00C5               	movwf	_scale$1187+1
  4422  0C50  0831               	movf	?___ftmul+2,w
  4423  0C51  00C6               	movwf	_scale$1187+2
  4424                           
  4425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4426  0C52  3003               	movlw	3
  4427  0C53  00C2               	movwf	??_scale
  4428  0C54  0842               	movf	??_scale,w
  4429  0C55  00AB               	movwf	___bmul@multiplicand
  4430  0C56  0847               	movf	scale@scl,w
  4431  0C57  00F5               	movwf	___awmod@dividend
  4432  0C58  01F6               	clrf	___awmod@dividend+1
  4433  0C59  1BF5               	btfsc	___awmod@dividend,7
  4434  0C5A  03F6               	decf	___awmod@dividend+1,f
  4435  0C5B  300A               	movlw	10
  4436  0C5C  00F3               	movwf	___awmod@divisor
  4437  0C5D  3000               	movlw	0
  4438  0C5E  00F4               	movwf	___awmod@divisor+1
  4439  0C5F  160A  118A  21DF  120A  158A  	fcall	___awmod
  4440  0C64  0873               	movf	?___awmod,w
  4441  0C65  160A  158A  24E4  120A  158A  	fcall	___bmul
  4442  0C6A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4443  0C6B  0084               	movwf	4
  4444  0C6C  160A  118A  200A  120A  158A  	fcall	stringdir
  4445  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  4446  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  4447  0C73  00AF               	movwf	___ftmul@f1
  4448  0C74  160A  118A  200A  120A  158A  	fcall	stringdir
  4449  0C79  00B0               	movwf	___ftmul@f1+1
  4450  0C7A  160A  118A  200A  120A  158A  	fcall	stringdir
  4451  0C7F  00B1               	movwf	___ftmul@f1+2
  4452  0C80  0844               	movf	_scale$1187,w
  4453  0C81  00B2               	movwf	___ftmul@f2
  4454  0C82  0845               	movf	_scale$1187+1,w
  4455  0C83  00B3               	movwf	___ftmul@f2+1
  4456  0C84  0846               	movf	_scale$1187+2,w
  4457  0C85  00B4               	movwf	___ftmul@f2+2
  4458  0C86  160A  118A  25EE  120A  158A  	fcall	___ftmul
  4459  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  4460  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  4461  0C8D  082F               	movf	?___ftmul,w
  4462  0C8E  00BF               	movwf	?_scale
  4463  0C8F  0830               	movf	?___ftmul+1,w
  4464  0C90  00C0               	movwf	?_scale+1
  4465  0C91  0831               	movf	?___ftmul+2,w
  4466  0C92  00C1               	movwf	?_scale+2
  4467  0C93  2D27               	goto	l381
  4468  0C94                     l3875:
  4469  0C94  0847               	movf	scale@scl,w
  4470  0C95  3A80               	xorlw	128
  4471  0C96  3E75               	addlw	-139
  4472  0C97  1C03               	skipc
  4473  0C98  2C9A               	goto	u5461
  4474  0C99  2C9B               	goto	u5460
  4475  0C9A                     u5461:
  4476  0C9A  2D07               	goto	l3881
  4477  0C9B                     u5460:
  4478  0C9B                     l3877:
  4479                           
  4480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4481  0C9B  3003               	movlw	3
  4482  0C9C  00C2               	movwf	??_scale
  4483  0C9D  0842               	movf	??_scale,w
  4484  0C9E  00AB               	movwf	___bmul@multiplicand
  4485  0C9F  0847               	movf	scale@scl,w
  4486  0CA0  00F5               	movwf	___awmod@dividend
  4487  0CA1  01F6               	clrf	___awmod@dividend+1
  4488  0CA2  1BF5               	btfsc	___awmod@dividend,7
  4489  0CA3  03F6               	decf	___awmod@dividend+1,f
  4490  0CA4  300A               	movlw	10
  4491  0CA5  00F3               	movwf	___awmod@divisor
  4492  0CA6  3000               	movlw	0
  4493  0CA7  00F4               	movwf	___awmod@divisor+1
  4494  0CA8  160A  118A  21DF  120A  158A  	fcall	___awmod
  4495  0CAD  0873               	movf	?___awmod,w
  4496  0CAE  160A  158A  24E4  120A  158A  	fcall	___bmul
  4497  0CB3  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4498  0CB4  0084               	movwf	4
  4499  0CB5  160A  118A  200A  120A  158A  	fcall	stringdir
  4500  0CBA  1283               	bcf	3,5	;RP0=0, select bank0
  4501  0CBB  1303               	bcf	3,6	;RP1=0, select bank0
  4502  0CBC  00AF               	movwf	___ftmul@f1
  4503  0CBD  160A  118A  200A  120A  158A  	fcall	stringdir
  4504  0CC2  00B0               	movwf	___ftmul@f1+1
  4505  0CC3  160A  118A  200A  120A  158A  	fcall	stringdir
  4506  0CC8  00B1               	movwf	___ftmul@f1+2
  4507  0CC9  3003               	movlw	3
  4508  0CCA  00C3               	movwf	??_scale+1
  4509  0CCB  0843               	movf	??_scale+1,w
  4510  0CCC  00AB               	movwf	___bmul@multiplicand
  4511  0CCD  0847               	movf	scale@scl,w
  4512  0CCE  00A4               	movwf	___awdiv@dividend
  4513  0CCF  01A5               	clrf	___awdiv@dividend+1
  4514  0CD0  1BA4               	btfsc	___awdiv@dividend,7
  4515  0CD1  03A5               	decf	___awdiv@dividend+1,f
  4516  0CD2  300A               	movlw	10
  4517  0CD3  00A2               	movwf	___awdiv@divisor
  4518  0CD4  3000               	movlw	0
  4519  0CD5  00A3               	movwf	___awdiv@divisor+1
  4520  0CD6  160A  118A  22FE  120A  158A  	fcall	___awdiv
  4521  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  4522  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  4523  0CDD  0822               	movf	?___awdiv,w
  4524  0CDE  160A  158A  24E4  120A  158A  	fcall	___bmul
  4525  0CE3  3E1C               	addlw	low (((__powers_-__stringbase)| (0+32768)+27))
  4526  0CE4  0084               	movwf	4
  4527  0CE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4528  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  4529  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  4530  0CEC  00B2               	movwf	___ftmul@f2
  4531  0CED  160A  118A  200A  120A  158A  	fcall	stringdir
  4532  0CF2  00B3               	movwf	___ftmul@f2+1
  4533  0CF3  160A  118A  200A  120A  158A  	fcall	stringdir
  4534  0CF8  00B4               	movwf	___ftmul@f2+2
  4535  0CF9  160A  118A  25EE  120A  158A  	fcall	___ftmul
  4536  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  4537  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  4538  0D00  082F               	movf	?___ftmul,w
  4539  0D01  00BF               	movwf	?_scale
  4540  0D02  0830               	movf	?___ftmul+1,w
  4541  0D03  00C0               	movwf	?_scale+1
  4542  0D04  0831               	movf	?___ftmul+2,w
  4543  0D05  00C1               	movwf	?_scale+2
  4544  0D06  2D27               	goto	l381
  4545  0D07                     l3881:
  4546                           
  4547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4548  0D07  3003               	movlw	3
  4549  0D08  00C2               	movwf	??_scale
  4550  0D09  0842               	movf	??_scale,w
  4551  0D0A  00AB               	movwf	___bmul@multiplicand
  4552  0D0B  0847               	movf	scale@scl,w
  4553  0D0C  160A  158A  24E4  120A  158A  	fcall	___bmul
  4554  0D11  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4555  0D12  0084               	movwf	4
  4556  0D13  160A  118A  200A  120A  158A  	fcall	stringdir
  4557  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  4558  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  4559  0D1A  00BF               	movwf	?_scale
  4560  0D1B  160A  118A  200A  120A  158A  	fcall	stringdir
  4561  0D20  00C0               	movwf	?_scale+1
  4562  0D21  160A  118A  200A  120A  158A  	fcall	stringdir
  4563  0D26  00C1               	movwf	?_scale+2
  4564  0D27                     l381:
  4565  0D27  0008               	return
  4566  0D28                     __end_of_scale:
  4567                           
  4568                           	psect	text19
  4569  11DF                     __ptext19:	
  4570 ;; *************** function ___awmod *****************
  4571 ;; Defined at:
  4572 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;  divisor         2    3[COMMON] int 
  4575 ;;  dividend        2    5[COMMON] int 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  sign            1    1[BANK0 ] unsigned char 
  4578 ;;  counter         1    0[BANK0 ] unsigned char 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  2    3[COMMON] int 
  4581 ;; Registers used:
  4582 ;;		wreg, status,2, status,0
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4588 ;;      Params:         4       0       0       0       0
  4589 ;;      Locals:         0       2       0       0       0
  4590 ;;      Temps:          1       0       0       0       0
  4591 ;;      Totals:         5       2       0       0       0
  4592 ;;Total ram usage:        7 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:    1
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_scale
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           
  4603                           ;psect for function ___awmod
  4604  11DF                     ___awmod:
  4605  11DF                     l3597:	
  4606                           ;incstack = 0
  4607                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4608                           
  4609  11DF  1283               	bcf	3,5	;RP0=0, select bank0
  4610  11E0  1303               	bcf	3,6	;RP1=0, select bank0
  4611  11E1  01A1               	clrf	___awmod@sign
  4612  11E2                     l3599:
  4613  11E2  1FF6               	btfss	___awmod@dividend+1,7
  4614  11E3  29E5               	goto	u4801
  4615  11E4  29E6               	goto	u4800
  4616  11E5                     u4801:
  4617  11E5  29ED               	goto	l3605
  4618  11E6                     u4800:
  4619  11E6                     l3601:
  4620  11E6  09F5               	comf	___awmod@dividend,f
  4621  11E7  09F6               	comf	___awmod@dividend+1,f
  4622  11E8  0AF5               	incf	___awmod@dividend,f
  4623  11E9  1903               	skipnz
  4624  11EA  0AF6               	incf	___awmod@dividend+1,f
  4625  11EB                     l3603:
  4626  11EB  01A1               	clrf	___awmod@sign
  4627  11EC  0AA1               	incf	___awmod@sign,f
  4628  11ED                     l3605:
  4629  11ED  1FF4               	btfss	___awmod@divisor+1,7
  4630  11EE  29F0               	goto	u4811
  4631  11EF  29F1               	goto	u4810
  4632  11F0                     u4811:
  4633  11F0  29F6               	goto	l3609
  4634  11F1                     u4810:
  4635  11F1                     l3607:
  4636  11F1  09F3               	comf	___awmod@divisor,f
  4637  11F2  09F4               	comf	___awmod@divisor+1,f
  4638  11F3  0AF3               	incf	___awmod@divisor,f
  4639  11F4  1903               	skipnz
  4640  11F5  0AF4               	incf	___awmod@divisor+1,f
  4641  11F6                     l3609:
  4642  11F6  0873               	movf	___awmod@divisor,w
  4643  11F7  0474               	iorwf	___awmod@divisor+1,w
  4644  11F8  1903               	btfsc	3,2
  4645  11F9  29FB               	goto	u4821
  4646  11FA  29FC               	goto	u4820
  4647  11FB                     u4821:
  4648  11FB  2A2B               	goto	l3627
  4649  11FC                     u4820:
  4650  11FC                     l3611:
  4651  11FC  01A0               	clrf	___awmod@counter
  4652  11FD  0AA0               	incf	___awmod@counter,f
  4653  11FE  2A0A               	goto	l3617
  4654  11FF                     l3613:
  4655  11FF  3001               	movlw	1
  4656  1200                     u4835:
  4657  1200  1003               	clrc
  4658  1201  0DF3               	rlf	___awmod@divisor,f
  4659  1202  0DF4               	rlf	___awmod@divisor+1,f
  4660  1203  3EFF               	addlw	-1
  4661  1204  1D03               	skipz
  4662  1205  2A00               	goto	u4835
  4663  1206                     l3615:
  4664  1206  3001               	movlw	1
  4665  1207  00F7               	movwf	??___awmod
  4666  1208  0877               	movf	??___awmod,w
  4667  1209  07A0               	addwf	___awmod@counter,f
  4668  120A                     l3617:
  4669  120A  1FF4               	btfss	___awmod@divisor+1,7
  4670  120B  2A0D               	goto	u4841
  4671  120C  2A0E               	goto	u4840
  4672  120D                     u4841:
  4673  120D  29FF               	goto	l3613
  4674  120E                     u4840:
  4675  120E                     l3619:
  4676  120E  0874               	movf	___awmod@divisor+1,w
  4677  120F  0276               	subwf	___awmod@dividend+1,w
  4678  1210  1D03               	skipz
  4679  1211  2A14               	goto	u4855
  4680  1212  0873               	movf	___awmod@divisor,w
  4681  1213  0275               	subwf	___awmod@dividend,w
  4682  1214                     u4855:
  4683  1214  1C03               	skipc
  4684  1215  2A17               	goto	u4851
  4685  1216  2A18               	goto	u4850
  4686  1217                     u4851:
  4687  1217  2A1E               	goto	l3623
  4688  1218                     u4850:
  4689  1218                     l3621:
  4690  1218  0873               	movf	___awmod@divisor,w
  4691  1219  02F5               	subwf	___awmod@dividend,f
  4692  121A  0874               	movf	___awmod@divisor+1,w
  4693  121B  1C03               	skipc
  4694  121C  03F6               	decf	___awmod@dividend+1,f
  4695  121D  02F6               	subwf	___awmod@dividend+1,f
  4696  121E                     l3623:
  4697  121E  3001               	movlw	1
  4698  121F                     u4865:
  4699  121F  1003               	clrc
  4700  1220  0CF4               	rrf	___awmod@divisor+1,f
  4701  1221  0CF3               	rrf	___awmod@divisor,f
  4702  1222  3EFF               	addlw	-1
  4703  1223  1D03               	skipz
  4704  1224  2A1F               	goto	u4865
  4705  1225                     l3625:
  4706  1225  3001               	movlw	1
  4707  1226  02A0               	subwf	___awmod@counter,f
  4708  1227  1D03               	btfss	3,2
  4709  1228  2A2A               	goto	u4871
  4710  1229  2A2B               	goto	u4870
  4711  122A                     u4871:
  4712  122A  2A0E               	goto	l3619
  4713  122B                     u4870:
  4714  122B                     l3627:
  4715  122B  0821               	movf	___awmod@sign,w
  4716  122C  1903               	btfsc	3,2
  4717  122D  2A2F               	goto	u4881
  4718  122E  2A30               	goto	u4880
  4719  122F                     u4881:
  4720  122F  2A35               	goto	l3631
  4721  1230                     u4880:
  4722  1230                     l3629:
  4723  1230  09F5               	comf	___awmod@dividend,f
  4724  1231  09F6               	comf	___awmod@dividend+1,f
  4725  1232  0AF5               	incf	___awmod@dividend,f
  4726  1233  1903               	skipnz
  4727  1234  0AF6               	incf	___awmod@dividend+1,f
  4728  1235                     l3631:
  4729  1235  0876               	movf	___awmod@dividend+1,w
  4730  1236  00F4               	movwf	?___awmod+1
  4731  1237  0875               	movf	___awmod@dividend,w
  4732  1238  00F3               	movwf	?___awmod
  4733  1239                     l673:
  4734  1239  0008               	return
  4735  123A                     __end_of___awmod:
  4736                           
  4737                           	psect	text20
  4738  12FE                     __ptext20:	
  4739 ;; *************** function ___awdiv *****************
  4740 ;; Defined at:
  4741 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  divisor         2    2[BANK0 ] int 
  4744 ;;  dividend        2    4[BANK0 ] int 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  quotient        2    9[BANK0 ] int 
  4747 ;;  sign            1    8[BANK0 ] unsigned char 
  4748 ;;  counter         1    7[BANK0 ] unsigned char 
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  2    2[BANK0 ] int 
  4751 ;; Registers used:
  4752 ;;		wreg, status,2, status,0
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4758 ;;      Params:         0       4       0       0       0
  4759 ;;      Locals:         0       4       0       0       0
  4760 ;;      Temps:          0       1       0       0       0
  4761 ;;      Totals:         0       9       0       0       0
  4762 ;;Total ram usage:        9 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    1
  4765 ;; This function calls:
  4766 ;;		Nothing
  4767 ;; This function is called by:
  4768 ;;		_scale
  4769 ;;		_sprintf
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           
  4774                           ;psect for function ___awdiv
  4775  12FE                     ___awdiv:
  4776  12FE                     l3553:	
  4777                           ;incstack = 0
  4778                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4779                           
  4780  12FE  1283               	bcf	3,5	;RP0=0, select bank0
  4781  12FF  1303               	bcf	3,6	;RP1=0, select bank0
  4782  1300  01A8               	clrf	___awdiv@sign
  4783  1301                     l3555:
  4784  1301  1FA3               	btfss	___awdiv@divisor+1,7
  4785  1302  2B04               	goto	u4701
  4786  1303  2B05               	goto	u4700
  4787  1304                     u4701:
  4788  1304  2B0C               	goto	l3561
  4789  1305                     u4700:
  4790  1305                     l3557:
  4791  1305  09A2               	comf	___awdiv@divisor,f
  4792  1306  09A3               	comf	___awdiv@divisor+1,f
  4793  1307  0AA2               	incf	___awdiv@divisor,f
  4794  1308  1903               	skipnz
  4795  1309  0AA3               	incf	___awdiv@divisor+1,f
  4796  130A                     l3559:
  4797  130A  01A8               	clrf	___awdiv@sign
  4798  130B  0AA8               	incf	___awdiv@sign,f
  4799  130C                     l3561:
  4800  130C  1FA5               	btfss	___awdiv@dividend+1,7
  4801  130D  2B0F               	goto	u4711
  4802  130E  2B10               	goto	u4710
  4803  130F                     u4711:
  4804  130F  2B19               	goto	l3567
  4805  1310                     u4710:
  4806  1310                     l3563:
  4807  1310  09A4               	comf	___awdiv@dividend,f
  4808  1311  09A5               	comf	___awdiv@dividend+1,f
  4809  1312  0AA4               	incf	___awdiv@dividend,f
  4810  1313  1903               	skipnz
  4811  1314  0AA5               	incf	___awdiv@dividend+1,f
  4812  1315                     l3565:
  4813  1315  3001               	movlw	1
  4814  1316  00A6               	movwf	??___awdiv
  4815  1317  0826               	movf	??___awdiv,w
  4816  1318  06A8               	xorwf	___awdiv@sign,f
  4817  1319                     l3567:
  4818  1319  01A9               	clrf	___awdiv@quotient
  4819  131A  01AA               	clrf	___awdiv@quotient+1
  4820  131B                     l3569:
  4821  131B  0822               	movf	___awdiv@divisor,w
  4822  131C  0423               	iorwf	___awdiv@divisor+1,w
  4823  131D  1903               	btfsc	3,2
  4824  131E  2B20               	goto	u4721
  4825  131F  2B21               	goto	u4720
  4826  1320                     u4721:
  4827  1320  2B58               	goto	l3589
  4828  1321                     u4720:
  4829  1321                     l3571:
  4830  1321  01A7               	clrf	___awdiv@counter
  4831  1322  0AA7               	incf	___awdiv@counter,f
  4832  1323  2B2F               	goto	l3577
  4833  1324                     l3573:
  4834  1324  3001               	movlw	1
  4835  1325                     u4735:
  4836  1325  1003               	clrc
  4837  1326  0DA2               	rlf	___awdiv@divisor,f
  4838  1327  0DA3               	rlf	___awdiv@divisor+1,f
  4839  1328  3EFF               	addlw	-1
  4840  1329  1D03               	skipz
  4841  132A  2B25               	goto	u4735
  4842  132B                     l3575:
  4843  132B  3001               	movlw	1
  4844  132C  00A6               	movwf	??___awdiv
  4845  132D  0826               	movf	??___awdiv,w
  4846  132E  07A7               	addwf	___awdiv@counter,f
  4847  132F                     l3577:
  4848  132F  1FA3               	btfss	___awdiv@divisor+1,7
  4849  1330  2B32               	goto	u4741
  4850  1331  2B33               	goto	u4740
  4851  1332                     u4741:
  4852  1332  2B24               	goto	l3573
  4853  1333                     u4740:
  4854  1333                     l3579:
  4855  1333  3001               	movlw	1
  4856  1334                     u4755:
  4857  1334  1003               	clrc
  4858  1335  0DA9               	rlf	___awdiv@quotient,f
  4859  1336  0DAA               	rlf	___awdiv@quotient+1,f
  4860  1337  3EFF               	addlw	-1
  4861  1338  1D03               	skipz
  4862  1339  2B34               	goto	u4755
  4863  133A  0823               	movf	___awdiv@divisor+1,w
  4864  133B  0225               	subwf	___awdiv@dividend+1,w
  4865  133C  1D03               	skipz
  4866  133D  2B40               	goto	u4765
  4867  133E  0822               	movf	___awdiv@divisor,w
  4868  133F  0224               	subwf	___awdiv@dividend,w
  4869  1340                     u4765:
  4870  1340  1C03               	skipc
  4871  1341  2B43               	goto	u4761
  4872  1342  2B44               	goto	u4760
  4873  1343                     u4761:
  4874  1343  2B4B               	goto	l3585
  4875  1344                     u4760:
  4876  1344                     l3581:
  4877  1344  0822               	movf	___awdiv@divisor,w
  4878  1345  02A4               	subwf	___awdiv@dividend,f
  4879  1346  0823               	movf	___awdiv@divisor+1,w
  4880  1347  1C03               	skipc
  4881  1348  03A5               	decf	___awdiv@dividend+1,f
  4882  1349  02A5               	subwf	___awdiv@dividend+1,f
  4883  134A                     l3583:
  4884  134A  1429               	bsf	___awdiv@quotient,0
  4885  134B                     l3585:
  4886  134B  3001               	movlw	1
  4887  134C                     u4775:
  4888  134C  1003               	clrc
  4889  134D  0CA3               	rrf	___awdiv@divisor+1,f
  4890  134E  0CA2               	rrf	___awdiv@divisor,f
  4891  134F  3EFF               	addlw	-1
  4892  1350  1D03               	skipz
  4893  1351  2B4C               	goto	u4775
  4894  1352                     l3587:
  4895  1352  3001               	movlw	1
  4896  1353  02A7               	subwf	___awdiv@counter,f
  4897  1354  1D03               	btfss	3,2
  4898  1355  2B57               	goto	u4781
  4899  1356  2B58               	goto	u4780
  4900  1357                     u4781:
  4901  1357  2B33               	goto	l3579
  4902  1358                     u4780:
  4903  1358                     l3589:
  4904  1358  0828               	movf	___awdiv@sign,w
  4905  1359  1903               	btfsc	3,2
  4906  135A  2B5C               	goto	u4791
  4907  135B  2B5D               	goto	u4790
  4908  135C                     u4791:
  4909  135C  2B62               	goto	l3593
  4910  135D                     u4790:
  4911  135D                     l3591:
  4912  135D  09A9               	comf	___awdiv@quotient,f
  4913  135E  09AA               	comf	___awdiv@quotient+1,f
  4914  135F  0AA9               	incf	___awdiv@quotient,f
  4915  1360  1903               	skipnz
  4916  1361  0AAA               	incf	___awdiv@quotient+1,f
  4917  1362                     l3593:
  4918  1362  082A               	movf	___awdiv@quotient+1,w
  4919  1363  00A3               	movwf	?___awdiv+1
  4920  1364  0829               	movf	___awdiv@quotient,w
  4921  1365  00A2               	movwf	?___awdiv
  4922  1366                     l660:
  4923  1366  0008               	return
  4924  1367                     __end_of___awdiv:
  4925                           
  4926                           	psect	text21
  4927  1CBC                     __ptext21:	
  4928 ;; *************** function _isdigit *****************
  4929 ;; Defined at:
  4930 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  c               1    wreg     unsigned char 
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;  c               1    4[COMMON] unsigned char 
  4935 ;; Return value:  Size  Location     Type
  4936 ;;		None               void
  4937 ;; Registers used:
  4938 ;;		wreg, status,2, status,0
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4944 ;;      Params:         0       0       0       0       0
  4945 ;;      Locals:         2       0       0       0       0
  4946 ;;      Temps:          0       0       0       0       0
  4947 ;;      Totals:         2       0       0       0       0
  4948 ;;Total ram usage:        2 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; Hardware stack levels required when called:    1
  4951 ;; This function calls:
  4952 ;;		Nothing
  4953 ;; This function is called by:
  4954 ;;		_sprintf
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           
  4959                           ;psect for function _isdigit
  4960  1CBC                     _isdigit:
  4961                           
  4962                           ;incstack = 0
  4963                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4964                           ;isdigit@c stored from wreg
  4965  1CBC  00F4               	movwf	isdigit@c
  4966  1CBD                     l2633:
  4967  1CBD  01F3               	clrf	_isdigit$978
  4968  1CBE                     l2635:
  4969  1CBE  303A               	movlw	58
  4970  1CBF  0274               	subwf	isdigit@c,w
  4971  1CC0  1803               	skipnc
  4972  1CC1  2CC3               	goto	u3211
  4973  1CC2  2CC4               	goto	u3210
  4974  1CC3                     u3211:
  4975  1CC3  2CCC               	goto	l2641
  4976  1CC4                     u3210:
  4977  1CC4                     l2637:
  4978  1CC4  3030               	movlw	48
  4979  1CC5  0274               	subwf	isdigit@c,w
  4980  1CC6  1C03               	skipc
  4981  1CC7  2CC9               	goto	u3221
  4982  1CC8  2CCA               	goto	u3220
  4983  1CC9                     u3221:
  4984  1CC9  2CCC               	goto	l2641
  4985  1CCA                     u3220:
  4986  1CCA                     l2639:
  4987  1CCA  01F3               	clrf	_isdigit$978
  4988  1CCB  0AF3               	incf	_isdigit$978,f
  4989  1CCC                     l2641:
  4990  1CCC  0C73               	rrf	_isdigit$978,w
  4991  1CCD                     l939:
  4992  1CCD  0008               	return
  4993  1CCE                     __end_of_isdigit:
  4994                           
  4995                           	psect	text22
  4996  08C4                     __ptext22:	
  4997 ;; *************** function _fround *****************
  4998 ;; Defined at:
  4999 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;  prec            1    wreg     unsigned char 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;  prec            1   46[BANK0 ] unsigned char 
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  3   31[BANK0 ] unsigned char 
  5006 ;; Registers used:
  5007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5013 ;;      Params:         0       3       0       0       0
  5014 ;;      Locals:         0       7       0       0       0
  5015 ;;      Temps:          0       6       0       0       0
  5016 ;;      Totals:         0      16       0       0       0
  5017 ;;Total ram usage:       16 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    3
  5020 ;; This function calls:
  5021 ;;		___bmul
  5022 ;;		___ftmul
  5023 ;;		___lwdiv
  5024 ;;		___lwmod
  5025 ;; This function is called by:
  5026 ;;		_sprintf
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           
  5031                           ;psect for function _fround
  5032  08C4                     _fround:
  5033                           
  5034                           ;incstack = 0
  5035                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5036                           ;fround@prec stored from wreg
  5037  08C4  1283               	bcf	3,5	;RP0=0, select bank0
  5038  08C5  1303               	bcf	3,6	;RP1=0, select bank0
  5039  08C6  00CE               	movwf	fround@prec
  5040  08C7                     l3823:
  5041                           
  5042                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5043  08C7  306E               	movlw	110
  5044  08C8  024E               	subwf	fround@prec,w
  5045  08C9  1C03               	skipc
  5046  08CA  28CC               	goto	u5401
  5047  08CB  28CD               	goto	u5400
  5048  08CC                     u5401:
  5049  08CC  29AA               	goto	l3833
  5050  08CD                     u5400:
  5051  08CD                     l3825:
  5052                           
  5053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5054  08CD  3003               	movlw	3
  5055  08CE  00C2               	movwf	??_fround
  5056  08CF  0842               	movf	??_fround,w
  5057  08D0  00AB               	movwf	___bmul@multiplicand
  5058  08D1  084E               	movf	fround@prec,w
  5059  08D2  00C3               	movwf	??_fround+1
  5060  08D3  01C4               	clrf	??_fround+2
  5061  08D4  0843               	movf	??_fround+1,w
  5062  08D5  00F5               	movwf	___lwmod@dividend
  5063  08D6  0844               	movf	??_fround+2,w
  5064  08D7  00F6               	movwf	___lwmod@dividend+1
  5065  08D8  3064               	movlw	100
  5066  08D9  00F3               	movwf	___lwmod@divisor
  5067  08DA  3000               	movlw	0
  5068  08DB  00F4               	movwf	___lwmod@divisor+1
  5069  08DC  160A  158A  26E8  120A  158A  	fcall	___lwmod
  5070  08E1  0874               	movf	?___lwmod+1,w
  5071  08E2  1283               	bcf	3,5	;RP0=0, select bank0
  5072  08E3  1303               	bcf	3,6	;RP1=0, select bank0
  5073  08E4  00A4               	movwf	___lwdiv@dividend+1
  5074  08E5  0873               	movf	?___lwmod,w
  5075  08E6  00A3               	movwf	___lwdiv@dividend
  5076  08E7  300A               	movlw	10
  5077  08E8  00A1               	movwf	___lwdiv@divisor
  5078  08E9  3000               	movlw	0
  5079  08EA  00A2               	movwf	___lwdiv@divisor+1
  5080  08EB  160A  158A  2724  120A  158A  	fcall	___lwdiv
  5081  08F0  1283               	bcf	3,5	;RP0=0, select bank0
  5082  08F1  1303               	bcf	3,6	;RP1=0, select bank0
  5083  08F2  0821               	movf	?___lwdiv,w
  5084  08F3  160A  158A  24E4  120A  158A  	fcall	___bmul
  5085  08F8  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  5086  08F9  0084               	movwf	4
  5087  08FA  160A  118A  200A  120A  158A  	fcall	stringdir
  5088  08FF  1283               	bcf	3,5	;RP0=0, select bank0
  5089  0900  1303               	bcf	3,6	;RP1=0, select bank0
  5090  0901  00AF               	movwf	___ftmul@f1
  5091  0902  160A  118A  200A  120A  158A  	fcall	stringdir
  5092  0907  00B0               	movwf	___ftmul@f1+1
  5093  0908  160A  118A  200A  120A  158A  	fcall	stringdir
  5094  090D  00B1               	movwf	___ftmul@f1+2
  5095  090E  3003               	movlw	3
  5096  090F  00C5               	movwf	??_fround+3
  5097  0910  0845               	movf	??_fround+3,w
  5098  0911  00AB               	movwf	___bmul@multiplicand
  5099  0912  084E               	movf	fround@prec,w
  5100  0913  00C6               	movwf	??_fround+4
  5101  0914  01C7               	clrf	??_fround+5
  5102  0915  0846               	movf	??_fround+4,w
  5103  0916  00A3               	movwf	___lwdiv@dividend
  5104  0917  0847               	movf	??_fround+5,w
  5105  0918  00A4               	movwf	___lwdiv@dividend+1
  5106  0919  3064               	movlw	100
  5107  091A  00A1               	movwf	___lwdiv@divisor
  5108  091B  3000               	movlw	0
  5109  091C  00A2               	movwf	___lwdiv@divisor+1
  5110  091D  160A  158A  2724  120A  158A  	fcall	___lwdiv
  5111  0922  1283               	bcf	3,5	;RP0=0, select bank0
  5112  0923  1303               	bcf	3,6	;RP1=0, select bank0
  5113  0924  0821               	movf	?___lwdiv,w
  5114  0925  160A  158A  24E4  120A  158A  	fcall	___bmul
  5115  092A  3E5E               	addlw	low (((__npowers_-__stringbase)| (0+32768)+54))
  5116  092B  0084               	movwf	4
  5117  092C  160A  118A  200A  120A  158A  	fcall	stringdir
  5118  0931  1283               	bcf	3,5	;RP0=0, select bank0
  5119  0932  1303               	bcf	3,6	;RP1=0, select bank0
  5120  0933  00B2               	movwf	___ftmul@f2
  5121  0934  160A  118A  200A  120A  158A  	fcall	stringdir
  5122  0939  00B3               	movwf	___ftmul@f2+1
  5123  093A  160A  118A  200A  120A  158A  	fcall	stringdir
  5124  093F  00B4               	movwf	___ftmul@f2+2
  5125  0940  160A  118A  25EE  120A  158A  	fcall	___ftmul
  5126  0945  1283               	bcf	3,5	;RP0=0, select bank0
  5127  0946  1303               	bcf	3,6	;RP1=0, select bank0
  5128  0947  082F               	movf	?___ftmul,w
  5129  0948  00CB               	movwf	_fround$1185
  5130  0949  0830               	movf	?___ftmul+1,w
  5131  094A  00CC               	movwf	_fround$1185+1
  5132  094B  0831               	movf	?___ftmul+2,w
  5133  094C  00CD               	movwf	_fround$1185+2
  5134                           
  5135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5136  094D  3003               	movlw	3
  5137  094E  00C2               	movwf	??_fround
  5138  094F  0842               	movf	??_fround,w
  5139  0950  00AB               	movwf	___bmul@multiplicand
  5140  0951  084E               	movf	fround@prec,w
  5141  0952  00C3               	movwf	??_fround+1
  5142  0953  01C4               	clrf	??_fround+2
  5143  0954  0843               	movf	??_fround+1,w
  5144  0955  00F5               	movwf	___lwmod@dividend
  5145  0956  0844               	movf	??_fround+2,w
  5146  0957  00F6               	movwf	___lwmod@dividend+1
  5147  0958  300A               	movlw	10
  5148  0959  00F3               	movwf	___lwmod@divisor
  5149  095A  3000               	movlw	0
  5150  095B  00F4               	movwf	___lwmod@divisor+1
  5151  095C  160A  158A  26E8  120A  158A  	fcall	___lwmod
  5152  0961  0873               	movf	?___lwmod,w
  5153  0962  160A  158A  24E4  120A  158A  	fcall	___bmul
  5154  0967  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5155  0968  0084               	movwf	4
  5156  0969  160A  118A  200A  120A  158A  	fcall	stringdir
  5157  096E  1283               	bcf	3,5	;RP0=0, select bank0
  5158  096F  1303               	bcf	3,6	;RP1=0, select bank0
  5159  0970  00AF               	movwf	___ftmul@f1
  5160  0971  160A  118A  200A  120A  158A  	fcall	stringdir
  5161  0976  00B0               	movwf	___ftmul@f1+1
  5162  0977  160A  118A  200A  120A  158A  	fcall	stringdir
  5163  097C  00B1               	movwf	___ftmul@f1+2
  5164  097D  084B               	movf	_fround$1185,w
  5165  097E  00B2               	movwf	___ftmul@f2
  5166  097F  084C               	movf	_fround$1185+1,w
  5167  0980  00B3               	movwf	___ftmul@f2+1
  5168  0981  084D               	movf	_fround$1185+2,w
  5169  0982  00B4               	movwf	___ftmul@f2+2
  5170  0983  160A  118A  25EE  120A  158A  	fcall	___ftmul
  5171  0988  1283               	bcf	3,5	;RP0=0, select bank0
  5172  0989  1303               	bcf	3,6	;RP1=0, select bank0
  5173  098A  082F               	movf	?___ftmul,w
  5174  098B  00C8               	movwf	_fround$1186
  5175  098C  0830               	movf	?___ftmul+1,w
  5176  098D  00C9               	movwf	_fround$1186+1
  5177  098E  0831               	movf	?___ftmul+2,w
  5178  098F  00CA               	movwf	_fround$1186+2
  5179  0990                     l3827:
  5180                           
  5181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5182  0990  3000               	movlw	0
  5183  0991  00AF               	movwf	___ftmul@f1
  5184  0992  3000               	movlw	0
  5185  0993  00B0               	movwf	___ftmul@f1+1
  5186  0994  303F               	movlw	63
  5187  0995  00B1               	movwf	___ftmul@f1+2
  5188  0996  0848               	movf	_fround$1186,w
  5189  0997  00B2               	movwf	___ftmul@f2
  5190  0998  0849               	movf	_fround$1186+1,w
  5191  0999  00B3               	movwf	___ftmul@f2+1
  5192  099A  084A               	movf	_fround$1186+2,w
  5193  099B  00B4               	movwf	___ftmul@f2+2
  5194  099C  160A  118A  25EE  120A  158A  	fcall	___ftmul
  5195  09A1  1283               	bcf	3,5	;RP0=0, select bank0
  5196  09A2  1303               	bcf	3,6	;RP1=0, select bank0
  5197  09A3  082F               	movf	?___ftmul,w
  5198  09A4  00BF               	movwf	?_fround
  5199  09A5  0830               	movf	?___ftmul+1,w
  5200  09A6  00C0               	movwf	?_fround+1
  5201  09A7  0831               	movf	?___ftmul+2,w
  5202  09A8  00C1               	movwf	?_fround+2
  5203  09A9  2A6C               	goto	l374
  5204  09AA                     l3833:
  5205  09AA  300B               	movlw	11
  5206  09AB  024E               	subwf	fround@prec,w
  5207  09AC  1C03               	skipc
  5208  09AD  29AF               	goto	u5411
  5209  09AE  29B0               	goto	u5410
  5210  09AF                     u5411:
  5211  09AF  2A39               	goto	l3841
  5212  09B0                     u5410:
  5213  09B0                     l3835:
  5214                           
  5215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5216  09B0  3003               	movlw	3
  5217  09B1  00C2               	movwf	??_fround
  5218  09B2  0842               	movf	??_fround,w
  5219  09B3  00AB               	movwf	___bmul@multiplicand
  5220  09B4  084E               	movf	fround@prec,w
  5221  09B5  00C3               	movwf	??_fround+1
  5222  09B6  01C4               	clrf	??_fround+2
  5223  09B7  0843               	movf	??_fround+1,w
  5224  09B8  00F5               	movwf	___lwmod@dividend
  5225  09B9  0844               	movf	??_fround+2,w
  5226  09BA  00F6               	movwf	___lwmod@dividend+1
  5227  09BB  300A               	movlw	10
  5228  09BC  00F3               	movwf	___lwmod@divisor
  5229  09BD  3000               	movlw	0
  5230  09BE  00F4               	movwf	___lwmod@divisor+1
  5231  09BF  160A  158A  26E8  120A  158A  	fcall	___lwmod
  5232  09C4  0873               	movf	?___lwmod,w
  5233  09C5  160A  158A  24E4  120A  158A  	fcall	___bmul
  5234  09CA  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5235  09CB  0084               	movwf	4
  5236  09CC  160A  118A  200A  120A  158A  	fcall	stringdir
  5237  09D1  1283               	bcf	3,5	;RP0=0, select bank0
  5238  09D2  1303               	bcf	3,6	;RP1=0, select bank0
  5239  09D3  00AF               	movwf	___ftmul@f1
  5240  09D4  160A  118A  200A  120A  158A  	fcall	stringdir
  5241  09D9  00B0               	movwf	___ftmul@f1+1
  5242  09DA  160A  118A  200A  120A  158A  	fcall	stringdir
  5243  09DF  00B1               	movwf	___ftmul@f1+2
  5244  09E0  3003               	movlw	3
  5245  09E1  00C5               	movwf	??_fround+3
  5246  09E2  0845               	movf	??_fround+3,w
  5247  09E3  00AB               	movwf	___bmul@multiplicand
  5248  09E4  084E               	movf	fround@prec,w
  5249  09E5  00C6               	movwf	??_fround+4
  5250  09E6  01C7               	clrf	??_fround+5
  5251  09E7  0846               	movf	??_fround+4,w
  5252  09E8  00A3               	movwf	___lwdiv@dividend
  5253  09E9  0847               	movf	??_fround+5,w
  5254  09EA  00A4               	movwf	___lwdiv@dividend+1
  5255  09EB  300A               	movlw	10
  5256  09EC  00A1               	movwf	___lwdiv@divisor
  5257  09ED  3000               	movlw	0
  5258  09EE  00A2               	movwf	___lwdiv@divisor+1
  5259  09EF  160A  158A  2724  120A  158A  	fcall	___lwdiv
  5260  09F4  1283               	bcf	3,5	;RP0=0, select bank0
  5261  09F5  1303               	bcf	3,6	;RP1=0, select bank0
  5262  09F6  0821               	movf	?___lwdiv,w
  5263  09F7  160A  158A  24E4  120A  158A  	fcall	___bmul
  5264  09FC  3E43               	addlw	low (((__npowers_-__stringbase)| (0+32768)+27))
  5265  09FD  0084               	movwf	4
  5266  09FE  160A  118A  200A  120A  158A  	fcall	stringdir
  5267  0A03  1283               	bcf	3,5	;RP0=0, select bank0
  5268  0A04  1303               	bcf	3,6	;RP1=0, select bank0
  5269  0A05  00B2               	movwf	___ftmul@f2
  5270  0A06  160A  118A  200A  120A  158A  	fcall	stringdir
  5271  0A0B  00B3               	movwf	___ftmul@f2+1
  5272  0A0C  160A  118A  200A  120A  158A  	fcall	stringdir
  5273  0A11  00B4               	movwf	___ftmul@f2+2
  5274  0A12  160A  118A  25EE  120A  158A  	fcall	___ftmul
  5275  0A17  1283               	bcf	3,5	;RP0=0, select bank0
  5276  0A18  1303               	bcf	3,6	;RP1=0, select bank0
  5277  0A19  082F               	movf	?___ftmul,w
  5278  0A1A  00CB               	movwf	_fround$1185
  5279  0A1B  0830               	movf	?___ftmul+1,w
  5280  0A1C  00CC               	movwf	_fround$1185+1
  5281  0A1D  0831               	movf	?___ftmul+2,w
  5282  0A1E  00CD               	movwf	_fround$1185+2
  5283  0A1F                     l3837:
  5284                           
  5285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5286  0A1F  3000               	movlw	0
  5287  0A20  00AF               	movwf	___ftmul@f1
  5288  0A21  3000               	movlw	0
  5289  0A22  00B0               	movwf	___ftmul@f1+1
  5290  0A23  303F               	movlw	63
  5291  0A24  00B1               	movwf	___ftmul@f1+2
  5292  0A25  084B               	movf	_fround$1185,w
  5293  0A26  00B2               	movwf	___ftmul@f2
  5294  0A27  084C               	movf	_fround$1185+1,w
  5295  0A28  00B3               	movwf	___ftmul@f2+1
  5296  0A29  084D               	movf	_fround$1185+2,w
  5297  0A2A  00B4               	movwf	___ftmul@f2+2
  5298  0A2B  160A  118A  25EE  120A  158A  	fcall	___ftmul
  5299  0A30  1283               	bcf	3,5	;RP0=0, select bank0
  5300  0A31  1303               	bcf	3,6	;RP1=0, select bank0
  5301  0A32  082F               	movf	?___ftmul,w
  5302  0A33  00BF               	movwf	?_fround
  5303  0A34  0830               	movf	?___ftmul+1,w
  5304  0A35  00C0               	movwf	?_fround+1
  5305  0A36  0831               	movf	?___ftmul+2,w
  5306  0A37  00C1               	movwf	?_fround+2
  5307  0A38  2A6C               	goto	l374
  5308  0A39                     l3841:
  5309                           
  5310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5311  0A39  3000               	movlw	0
  5312  0A3A  00AF               	movwf	___ftmul@f1
  5313  0A3B  3000               	movlw	0
  5314  0A3C  00B0               	movwf	___ftmul@f1+1
  5315  0A3D  303F               	movlw	63
  5316  0A3E  00B1               	movwf	___ftmul@f1+2
  5317  0A3F  3003               	movlw	3
  5318  0A40  00C2               	movwf	??_fround
  5319  0A41  0842               	movf	??_fround,w
  5320  0A42  00AB               	movwf	___bmul@multiplicand
  5321  0A43  084E               	movf	fround@prec,w
  5322  0A44  160A  158A  24E4  120A  158A  	fcall	___bmul
  5323  0A49  3E28               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5324  0A4A  0084               	movwf	4
  5325  0A4B  160A  118A  200A  120A  158A  	fcall	stringdir
  5326  0A50  1283               	bcf	3,5	;RP0=0, select bank0
  5327  0A51  1303               	bcf	3,6	;RP1=0, select bank0
  5328  0A52  00B2               	movwf	___ftmul@f2
  5329  0A53  160A  118A  200A  120A  158A  	fcall	stringdir
  5330  0A58  00B3               	movwf	___ftmul@f2+1
  5331  0A59  160A  118A  200A  120A  158A  	fcall	stringdir
  5332  0A5E  00B4               	movwf	___ftmul@f2+2
  5333  0A5F  160A  118A  25EE  120A  158A  	fcall	___ftmul
  5334  0A64  1283               	bcf	3,5	;RP0=0, select bank0
  5335  0A65  1303               	bcf	3,6	;RP1=0, select bank0
  5336  0A66  082F               	movf	?___ftmul,w
  5337  0A67  00BF               	movwf	?_fround
  5338  0A68  0830               	movf	?___ftmul+1,w
  5339  0A69  00C0               	movwf	?_fround+1
  5340  0A6A  0831               	movf	?___ftmul+2,w
  5341  0A6B  00C1               	movwf	?_fround+2
  5342  0A6C                     l374:
  5343  0A6C  0008               	return
  5344  0A6D                     __end_of_fround:
  5345                           
  5346                           	psect	text23
  5347  1EE8                     __ptext23:	
  5348 ;; *************** function ___lwmod *****************
  5349 ;; Defined at:
  5350 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  divisor         2    3[COMMON] unsigned int 
  5353 ;;  dividend        2    5[COMMON] unsigned int 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  counter         1    0[BANK0 ] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  2    3[COMMON] unsigned int 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5365 ;;      Params:         4       0       0       0       0
  5366 ;;      Locals:         0       1       0       0       0
  5367 ;;      Temps:          1       0       0       0       0
  5368 ;;      Totals:         5       1       0       0       0
  5369 ;;Total ram usage:        6 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    1
  5372 ;; This function calls:
  5373 ;;		Nothing
  5374 ;; This function is called by:
  5375 ;;		_fround
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           
  5380                           ;psect for function ___lwmod
  5381  1EE8                     ___lwmod:
  5382  1EE8                     l3781:	
  5383                           ;incstack = 0
  5384                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5385                           
  5386  1EE8  0873               	movf	___lwmod@divisor,w
  5387  1EE9  0474               	iorwf	___lwmod@divisor+1,w
  5388  1EEA  1903               	btfsc	3,2
  5389  1EEB  2EED               	goto	u5341
  5390  1EEC  2EEE               	goto	u5340
  5391  1EED                     u5341:
  5392  1EED  2F1F               	goto	l3799
  5393  1EEE                     u5340:
  5394  1EEE                     l3783:
  5395  1EEE  1283               	bcf	3,5	;RP0=0, select bank0
  5396  1EEF  1303               	bcf	3,6	;RP1=0, select bank0
  5397  1EF0  01A0               	clrf	___lwmod@counter
  5398  1EF1  0AA0               	incf	___lwmod@counter,f
  5399  1EF2  2EFE               	goto	l3789
  5400  1EF3                     l3785:
  5401  1EF3  3001               	movlw	1
  5402  1EF4                     u5355:
  5403  1EF4  1003               	clrc
  5404  1EF5  0DF3               	rlf	___lwmod@divisor,f
  5405  1EF6  0DF4               	rlf	___lwmod@divisor+1,f
  5406  1EF7  3EFF               	addlw	-1
  5407  1EF8  1D03               	skipz
  5408  1EF9  2EF4               	goto	u5355
  5409  1EFA                     l3787:
  5410  1EFA  3001               	movlw	1
  5411  1EFB  00F7               	movwf	??___lwmod
  5412  1EFC  0877               	movf	??___lwmod,w
  5413  1EFD  07A0               	addwf	___lwmod@counter,f
  5414  1EFE                     l3789:
  5415  1EFE  1FF4               	btfss	___lwmod@divisor+1,7
  5416  1EFF  2F01               	goto	u5361
  5417  1F00  2F02               	goto	u5360
  5418  1F01                     u5361:
  5419  1F01  2EF3               	goto	l3785
  5420  1F02                     u5360:
  5421  1F02                     l3791:
  5422  1F02  0874               	movf	___lwmod@divisor+1,w
  5423  1F03  0276               	subwf	___lwmod@dividend+1,w
  5424  1F04  1D03               	skipz
  5425  1F05  2F08               	goto	u5375
  5426  1F06  0873               	movf	___lwmod@divisor,w
  5427  1F07  0275               	subwf	___lwmod@dividend,w
  5428  1F08                     u5375:
  5429  1F08  1C03               	skipc
  5430  1F09  2F0B               	goto	u5371
  5431  1F0A  2F0C               	goto	u5370
  5432  1F0B                     u5371:
  5433  1F0B  2F12               	goto	l3795
  5434  1F0C                     u5370:
  5435  1F0C                     l3793:
  5436  1F0C  0873               	movf	___lwmod@divisor,w
  5437  1F0D  02F5               	subwf	___lwmod@dividend,f
  5438  1F0E  0874               	movf	___lwmod@divisor+1,w
  5439  1F0F  1C03               	skipc
  5440  1F10  03F6               	decf	___lwmod@dividend+1,f
  5441  1F11  02F6               	subwf	___lwmod@dividend+1,f
  5442  1F12                     l3795:
  5443  1F12  3001               	movlw	1
  5444  1F13                     u5385:
  5445  1F13  1003               	clrc
  5446  1F14  0CF4               	rrf	___lwmod@divisor+1,f
  5447  1F15  0CF3               	rrf	___lwmod@divisor,f
  5448  1F16  3EFF               	addlw	-1
  5449  1F17  1D03               	skipz
  5450  1F18  2F13               	goto	u5385
  5451  1F19                     l3797:
  5452  1F19  3001               	movlw	1
  5453  1F1A  02A0               	subwf	___lwmod@counter,f
  5454  1F1B  1D03               	btfss	3,2
  5455  1F1C  2F1E               	goto	u5391
  5456  1F1D  2F1F               	goto	u5390
  5457  1F1E                     u5391:
  5458  1F1E  2F02               	goto	l3791
  5459  1F1F                     u5390:
  5460  1F1F                     l3799:
  5461  1F1F  0876               	movf	___lwmod@dividend+1,w
  5462  1F20  00F4               	movwf	?___lwmod+1
  5463  1F21  0875               	movf	___lwmod@dividend,w
  5464  1F22  00F3               	movwf	?___lwmod
  5465  1F23                     l929:
  5466  1F23  0008               	return
  5467  1F24                     __end_of___lwmod:
  5468                           
  5469                           	psect	text24
  5470  1F24                     __ptext24:	
  5471 ;; *************** function ___lwdiv *****************
  5472 ;; Defined at:
  5473 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  divisor         2    1[BANK0 ] unsigned int 
  5476 ;;  dividend        2    3[BANK0 ] unsigned int 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;  quotient        2    7[BANK0 ] unsigned int 
  5479 ;;  counter         1    6[BANK0 ] unsigned char 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  2    1[BANK0 ] unsigned int 
  5482 ;; Registers used:
  5483 ;;		wreg, status,2, status,0
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5489 ;;      Params:         0       4       0       0       0
  5490 ;;      Locals:         0       3       0       0       0
  5491 ;;      Temps:          0       1       0       0       0
  5492 ;;      Totals:         0       8       0       0       0
  5493 ;;Total ram usage:        8 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; Hardware stack levels required when called:    1
  5496 ;; This function calls:
  5497 ;;		Nothing
  5498 ;; This function is called by:
  5499 ;;		_fround
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           
  5504                           ;psect for function ___lwdiv
  5505  1F24                     ___lwdiv:
  5506  1F24                     l3755:	
  5507                           ;incstack = 0
  5508                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5509                           
  5510  1F24  1283               	bcf	3,5	;RP0=0, select bank0
  5511  1F25  1303               	bcf	3,6	;RP1=0, select bank0
  5512  1F26  01A7               	clrf	___lwdiv@quotient
  5513  1F27  01A8               	clrf	___lwdiv@quotient+1
  5514  1F28                     l3757:
  5515  1F28  0821               	movf	___lwdiv@divisor,w
  5516  1F29  0422               	iorwf	___lwdiv@divisor+1,w
  5517  1F2A  1903               	btfsc	3,2
  5518  1F2B  2F2D               	goto	u5271
  5519  1F2C  2F2E               	goto	u5270
  5520  1F2D                     u5271:
  5521  1F2D  2F65               	goto	l3777
  5522  1F2E                     u5270:
  5523  1F2E                     l3759:
  5524  1F2E  01A6               	clrf	___lwdiv@counter
  5525  1F2F  0AA6               	incf	___lwdiv@counter,f
  5526  1F30  2F3C               	goto	l3765
  5527  1F31                     l3761:
  5528  1F31  3001               	movlw	1
  5529  1F32                     u5285:
  5530  1F32  1003               	clrc
  5531  1F33  0DA1               	rlf	___lwdiv@divisor,f
  5532  1F34  0DA2               	rlf	___lwdiv@divisor+1,f
  5533  1F35  3EFF               	addlw	-1
  5534  1F36  1D03               	skipz
  5535  1F37  2F32               	goto	u5285
  5536  1F38                     l3763:
  5537  1F38  3001               	movlw	1
  5538  1F39  00A5               	movwf	??___lwdiv
  5539  1F3A  0825               	movf	??___lwdiv,w
  5540  1F3B  07A6               	addwf	___lwdiv@counter,f
  5541  1F3C                     l3765:
  5542  1F3C  1FA2               	btfss	___lwdiv@divisor+1,7
  5543  1F3D  2F3F               	goto	u5291
  5544  1F3E  2F40               	goto	u5290
  5545  1F3F                     u5291:
  5546  1F3F  2F31               	goto	l3761
  5547  1F40                     u5290:
  5548  1F40                     l3767:
  5549  1F40  3001               	movlw	1
  5550  1F41                     u5305:
  5551  1F41  1003               	clrc
  5552  1F42  0DA7               	rlf	___lwdiv@quotient,f
  5553  1F43  0DA8               	rlf	___lwdiv@quotient+1,f
  5554  1F44  3EFF               	addlw	-1
  5555  1F45  1D03               	skipz
  5556  1F46  2F41               	goto	u5305
  5557  1F47  0822               	movf	___lwdiv@divisor+1,w
  5558  1F48  0224               	subwf	___lwdiv@dividend+1,w
  5559  1F49  1D03               	skipz
  5560  1F4A  2F4D               	goto	u5315
  5561  1F4B  0821               	movf	___lwdiv@divisor,w
  5562  1F4C  0223               	subwf	___lwdiv@dividend,w
  5563  1F4D                     u5315:
  5564  1F4D  1C03               	skipc
  5565  1F4E  2F50               	goto	u5311
  5566  1F4F  2F51               	goto	u5310
  5567  1F50                     u5311:
  5568  1F50  2F58               	goto	l3773
  5569  1F51                     u5310:
  5570  1F51                     l3769:
  5571  1F51  0821               	movf	___lwdiv@divisor,w
  5572  1F52  02A3               	subwf	___lwdiv@dividend,f
  5573  1F53  0822               	movf	___lwdiv@divisor+1,w
  5574  1F54  1C03               	skipc
  5575  1F55  03A4               	decf	___lwdiv@dividend+1,f
  5576  1F56  02A4               	subwf	___lwdiv@dividend+1,f
  5577  1F57                     l3771:
  5578  1F57  1427               	bsf	___lwdiv@quotient,0
  5579  1F58                     l3773:
  5580  1F58  3001               	movlw	1
  5581  1F59                     u5325:
  5582  1F59  1003               	clrc
  5583  1F5A  0CA2               	rrf	___lwdiv@divisor+1,f
  5584  1F5B  0CA1               	rrf	___lwdiv@divisor,f
  5585  1F5C  3EFF               	addlw	-1
  5586  1F5D  1D03               	skipz
  5587  1F5E  2F59               	goto	u5325
  5588  1F5F                     l3775:
  5589  1F5F  3001               	movlw	1
  5590  1F60  02A6               	subwf	___lwdiv@counter,f
  5591  1F61  1D03               	btfss	3,2
  5592  1F62  2F64               	goto	u5331
  5593  1F63  2F65               	goto	u5330
  5594  1F64                     u5331:
  5595  1F64  2F40               	goto	l3767
  5596  1F65                     u5330:
  5597  1F65                     l3777:
  5598  1F65  0828               	movf	___lwdiv@quotient+1,w
  5599  1F66  00A2               	movwf	?___lwdiv+1
  5600  1F67  0827               	movf	___lwdiv@quotient,w
  5601  1F68  00A1               	movwf	?___lwdiv
  5602  1F69                     l919:
  5603  1F69  0008               	return
  5604  1F6A                     __end_of___lwdiv:
  5605                           
  5606                           	psect	text25
  5607  1CE4                     __ptext25:	
  5608 ;; *************** function ___bmul *****************
  5609 ;; Defined at:
  5610 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;  multiplier      1    wreg     unsigned char 
  5613 ;;  multiplicand    1   11[BANK0 ] unsigned char 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  multiplier      1   14[BANK0 ] unsigned char 
  5616 ;;  product         1   13[BANK0 ] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      unsigned char 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2, status,0
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5626 ;;      Params:         0       1       0       0       0
  5627 ;;      Locals:         0       2       0       0       0
  5628 ;;      Temps:          0       1       0       0       0
  5629 ;;      Totals:         0       4       0       0       0
  5630 ;;Total ram usage:        4 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:    1
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_fround
  5637 ;;		_scale
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           
  5642                           ;psect for function ___bmul
  5643  1CE4                     ___bmul:
  5644                           
  5645                           ;incstack = 0
  5646                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5647                           ;___bmul@multiplier stored from wreg
  5648  1CE4  1283               	bcf	3,5	;RP0=0, select bank0
  5649  1CE5  1303               	bcf	3,6	;RP1=0, select bank0
  5650  1CE6  00AE               	movwf	___bmul@multiplier
  5651  1CE7                     l2287:
  5652  1CE7  01AD               	clrf	___bmul@product
  5653  1CE8                     l2289:
  5654  1CE8  1C2E               	btfss	___bmul@multiplier,0
  5655  1CE9  2CEB               	goto	u2421
  5656  1CEA  2CEC               	goto	u2420
  5657  1CEB                     u2421:
  5658  1CEB  2CF0               	goto	l2293
  5659  1CEC                     u2420:
  5660  1CEC                     l2291:
  5661  1CEC  082B               	movf	___bmul@multiplicand,w
  5662  1CED  00AC               	movwf	??___bmul
  5663  1CEE  082C               	movf	??___bmul,w
  5664  1CEF  07AD               	addwf	___bmul@product,f
  5665  1CF0                     l2293:
  5666  1CF0  1003               	clrc
  5667  1CF1  0DAB               	rlf	___bmul@multiplicand,f
  5668  1CF2                     l2295:
  5669  1CF2  1003               	clrc
  5670  1CF3  0CAE               	rrf	___bmul@multiplier,f
  5671  1CF4  082E               	movf	___bmul@multiplier,w
  5672  1CF5  1D03               	btfss	3,2
  5673  1CF6  2CF8               	goto	u2431
  5674  1CF7  2CF9               	goto	u2430
  5675  1CF8                     u2431:
  5676  1CF8  2CE8               	goto	l2289
  5677  1CF9                     u2430:
  5678  1CF9                     l2297:
  5679  1CF9  082D               	movf	___bmul@product,w
  5680  1CFA                     l503:
  5681  1CFA  0008               	return
  5682  1CFB                     __end_of___bmul:
  5683                           
  5684                           	psect	text26
  5685  1531                     __ptext26:	
  5686 ;; *************** function __tdiv_to_l_ *****************
  5687 ;; Defined at:
  5688 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;  f1              3    0[BANK0 ] float 
  5691 ;;  f2              3    3[BANK0 ] float 
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;  quot            4    6[BANK0 ] unsigned long 
  5694 ;;  exp1            1   11[BANK0 ] unsigned char 
  5695 ;;  cntr            1   10[BANK0 ] unsigned char 
  5696 ;; Return value:  Size  Location     Type
  5697 ;;                  4    0[BANK0 ] unsigned long 
  5698 ;; Registers used:
  5699 ;;		wreg, status,2, status,0
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/0
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5705 ;;      Params:         0       6       0       0       0
  5706 ;;      Locals:         0       6       0       0       0
  5707 ;;      Temps:          4       0       0       0       0
  5708 ;;      Totals:         4      12       0       0       0
  5709 ;;Total ram usage:       16 bytes
  5710 ;; Hardware stack levels used:    1
  5711 ;; Hardware stack levels required when called:    1
  5712 ;; This function calls:
  5713 ;;		Nothing
  5714 ;; This function is called by:
  5715 ;;		_sprintf
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           
  5720                           ;psect for function __tdiv_to_l_
  5721  1531                     __tdiv_to_l_:
  5722  1531                     l3885:	
  5723                           ;incstack = 0
  5724                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5725                           
  5726  1531  1283               	bcf	3,5	;RP0=0, select bank0
  5727  1532  1303               	bcf	3,6	;RP1=0, select bank0
  5728  1533  0820               	movf	__tdiv_to_l_@f1,w
  5729  1534  00F3               	movwf	??__tdiv_to_l_
  5730  1535  0821               	movf	__tdiv_to_l_@f1+1,w
  5731  1536  00F4               	movwf	??__tdiv_to_l_+1
  5732  1537  0822               	movf	__tdiv_to_l_@f1+2,w
  5733  1538  00F5               	movwf	??__tdiv_to_l_+2
  5734  1539  1003               	clrc
  5735  153A  0D74               	rlf	??__tdiv_to_l_+1,w
  5736  153B  0D75               	rlf	??__tdiv_to_l_+2,w
  5737  153C  00F6               	movwf	??__tdiv_to_l_+3
  5738  153D  0876               	movf	??__tdiv_to_l_+3,w
  5739  153E  00AB               	movwf	__tdiv_to_l_@exp1
  5740  153F  082B               	movf	__tdiv_to_l_@exp1,w
  5741  1540  1D03               	btfss	3,2
  5742  1541  2D43               	goto	u5471
  5743  1542  2D44               	goto	u5470
  5744  1543                     u5471:
  5745  1543  2D4D               	goto	l3891
  5746  1544                     u5470:
  5747  1544                     l3887:
  5748  1544  3000               	movlw	0
  5749  1545  00A3               	movwf	?__tdiv_to_l_+3
  5750  1546  3000               	movlw	0
  5751  1547  00A2               	movwf	?__tdiv_to_l_+2
  5752  1548  3000               	movlw	0
  5753  1549  00A1               	movwf	?__tdiv_to_l_+1
  5754  154A  3000               	movlw	0
  5755  154B  00A0               	movwf	?__tdiv_to_l_
  5756  154C  2DED               	goto	l762
  5757  154D                     l3891:
  5758  154D  0823               	movf	__tdiv_to_l_@f2,w
  5759  154E  00F3               	movwf	??__tdiv_to_l_
  5760  154F  0824               	movf	__tdiv_to_l_@f2+1,w
  5761  1550  00F4               	movwf	??__tdiv_to_l_+1
  5762  1551  0825               	movf	__tdiv_to_l_@f2+2,w
  5763  1552  00F5               	movwf	??__tdiv_to_l_+2
  5764  1553  1003               	clrc
  5765  1554  0D74               	rlf	??__tdiv_to_l_+1,w
  5766  1555  0D75               	rlf	??__tdiv_to_l_+2,w
  5767  1556  00F6               	movwf	??__tdiv_to_l_+3
  5768  1557  0876               	movf	??__tdiv_to_l_+3,w
  5769  1558  00AA               	movwf	__tdiv_to_l_@cntr
  5770  1559  082A               	movf	__tdiv_to_l_@cntr,w
  5771  155A  1D03               	btfss	3,2
  5772  155B  2D5D               	goto	u5481
  5773  155C  2D5E               	goto	u5480
  5774  155D                     u5481:
  5775  155D  2D5F               	goto	l763
  5776  155E                     u5480:
  5777  155E  2D44               	goto	l3887
  5778  155F                     l763:
  5779  155F  17A1               	bsf	__tdiv_to_l_@f1+1,7
  5780  1560                     l3897:
  5781  1560  30FF               	movlw	255
  5782  1561  05A0               	andwf	__tdiv_to_l_@f1,f
  5783  1562  30FF               	movlw	255
  5784  1563  05A1               	andwf	__tdiv_to_l_@f1+1,f
  5785  1564  3000               	movlw	0
  5786  1565  05A2               	andwf	__tdiv_to_l_@f1+2,f
  5787  1566                     l3899:
  5788  1566  17A4               	bsf	__tdiv_to_l_@f2+1,7
  5789  1567  30FF               	movlw	255
  5790  1568  05A3               	andwf	__tdiv_to_l_@f2,f
  5791  1569  30FF               	movlw	255
  5792  156A  05A4               	andwf	__tdiv_to_l_@f2+1,f
  5793  156B  3000               	movlw	0
  5794  156C  05A5               	andwf	__tdiv_to_l_@f2+2,f
  5795  156D  3000               	movlw	0
  5796  156E  00A9               	movwf	__tdiv_to_l_@quot+3
  5797  156F  3000               	movlw	0
  5798  1570  00A8               	movwf	__tdiv_to_l_@quot+2
  5799  1571  3000               	movlw	0
  5800  1572  00A7               	movwf	__tdiv_to_l_@quot+1
  5801  1573  3000               	movlw	0
  5802  1574  00A6               	movwf	__tdiv_to_l_@quot
  5803  1575                     l3901:
  5804  1575  307F               	movlw	127
  5805  1576  02AB               	subwf	__tdiv_to_l_@exp1,f
  5806  1577                     l3903:
  5807  1577  3098               	movlw	152
  5808  1578  072A               	addwf	__tdiv_to_l_@cntr,w
  5809  1579  00F3               	movwf	??__tdiv_to_l_
  5810  157A  0873               	movf	??__tdiv_to_l_,w
  5811  157B  02AB               	subwf	__tdiv_to_l_@exp1,f
  5812  157C  3018               	movlw	24
  5813  157D  00F3               	movwf	??__tdiv_to_l_
  5814  157E  0873               	movf	??__tdiv_to_l_,w
  5815  157F  00AA               	movwf	__tdiv_to_l_@cntr
  5816  1580                     l3905:
  5817  1580  3001               	movlw	1
  5818  1581  00F3               	movwf	??__tdiv_to_l_
  5819  1582                     u5495:
  5820  1582  1003               	clrc
  5821  1583  0DA6               	rlf	__tdiv_to_l_@quot,f
  5822  1584  0DA7               	rlf	__tdiv_to_l_@quot+1,f
  5823  1585  0DA8               	rlf	__tdiv_to_l_@quot+2,f
  5824  1586  0DA9               	rlf	__tdiv_to_l_@quot+3,f
  5825  1587  0BF3               	decfsz	??__tdiv_to_l_,f
  5826  1588  2D82               	goto	u5495
  5827  1589                     l3907:
  5828  1589  0825               	movf	__tdiv_to_l_@f2+2,w
  5829  158A  0222               	subwf	__tdiv_to_l_@f1+2,w
  5830  158B  1D03               	skipz
  5831  158C  2D93               	goto	u5505
  5832  158D  0824               	movf	__tdiv_to_l_@f2+1,w
  5833  158E  0221               	subwf	__tdiv_to_l_@f1+1,w
  5834  158F  1D03               	skipz
  5835  1590  2D93               	goto	u5505
  5836  1591  0823               	movf	__tdiv_to_l_@f2,w
  5837  1592  0220               	subwf	__tdiv_to_l_@f1,w
  5838  1593                     u5505:
  5839  1593  1C03               	skipc
  5840  1594  2D96               	goto	u5501
  5841  1595  2D97               	goto	u5500
  5842  1596                     u5501:
  5843  1596  2DA2               	goto	l3913
  5844  1597                     u5500:
  5845  1597                     l3909:
  5846  1597  0823               	movf	__tdiv_to_l_@f2,w
  5847  1598  02A0               	subwf	__tdiv_to_l_@f1,f
  5848  1599  0824               	movf	__tdiv_to_l_@f2+1,w
  5849  159A  1C03               	skipc
  5850  159B  0F24               	incfsz	__tdiv_to_l_@f2+1,w
  5851  159C  02A1               	subwf	__tdiv_to_l_@f1+1,f
  5852  159D  0825               	movf	__tdiv_to_l_@f2+2,w
  5853  159E  1C03               	skipc
  5854  159F  0A25               	incf	__tdiv_to_l_@f2+2,w
  5855  15A0  02A2               	subwf	__tdiv_to_l_@f1+2,f
  5856  15A1                     l3911:
  5857  15A1  1426               	bsf	__tdiv_to_l_@quot,0
  5858  15A2                     l3913:
  5859  15A2  3001               	movlw	1
  5860  15A3                     u5515:
  5861  15A3  1003               	clrc
  5862  15A4  0DA0               	rlf	__tdiv_to_l_@f1,f
  5863  15A5  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  5864  15A6  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  5865  15A7  3EFF               	addlw	-1
  5866  15A8  1D03               	skipz
  5867  15A9  2DA3               	goto	u5515
  5868  15AA                     l3915:
  5869  15AA  3001               	movlw	1
  5870  15AB  02AA               	subwf	__tdiv_to_l_@cntr,f
  5871  15AC  1D03               	btfss	3,2
  5872  15AD  2DAF               	goto	u5521
  5873  15AE  2DB0               	goto	u5520
  5874  15AF                     u5521:
  5875  15AF  2D80               	goto	l3905
  5876  15B0                     u5520:
  5877  15B0                     l766:
  5878  15B0  1FAB               	btfss	__tdiv_to_l_@exp1,7
  5879  15B1  2DB3               	goto	u5531
  5880  15B2  2DB4               	goto	u5530
  5881  15B3                     u5531:
  5882  15B3  2DCE               	goto	l3925
  5883  15B4                     u5530:
  5884  15B4                     l3917:
  5885  15B4  082B               	movf	__tdiv_to_l_@exp1,w
  5886  15B5  3A80               	xorlw	128
  5887  15B6  3E97               	addlw	151
  5888  15B7  1803               	skipnc
  5889  15B8  2DBA               	goto	u5541
  5890  15B9  2DBB               	goto	u5540
  5891  15BA                     u5541:
  5892  15BA  2DBC               	goto	l3923
  5893  15BB                     u5540:
  5894  15BB  2D44               	goto	l3887
  5895  15BC                     l3923:
  5896  15BC  3001               	movlw	1
  5897  15BD                     u5555:
  5898  15BD  1003               	clrc
  5899  15BE  0CA9               	rrf	__tdiv_to_l_@quot+3,f
  5900  15BF  0CA8               	rrf	__tdiv_to_l_@quot+2,f
  5901  15C0  0CA7               	rrf	__tdiv_to_l_@quot+1,f
  5902  15C1  0CA6               	rrf	__tdiv_to_l_@quot,f
  5903  15C2  3EFF               	addlw	-1
  5904  15C3  1D03               	skipz
  5905  15C4  2DBD               	goto	u5555
  5906  15C5  3001               	movlw	1
  5907  15C6  00F3               	movwf	??__tdiv_to_l_
  5908  15C7  0873               	movf	??__tdiv_to_l_,w
  5909  15C8  07AB               	addwf	__tdiv_to_l_@exp1,f
  5910  15C9  1D03               	btfss	3,2
  5911  15CA  2DCC               	goto	u5561
  5912  15CB  2DCD               	goto	u5560
  5913  15CC                     u5561:
  5914  15CC  2DBC               	goto	l3923
  5915  15CD                     u5560:
  5916  15CD  2DE5               	goto	l3933
  5917  15CE                     l3925:
  5918  15CE  3018               	movlw	24
  5919  15CF  022B               	subwf	__tdiv_to_l_@exp1,w
  5920  15D0  1C03               	skipc
  5921  15D1  2DD3               	goto	u5571
  5922  15D2  2DD4               	goto	u5570
  5923  15D3                     u5571:
  5924  15D3  2DE0               	goto	l773
  5925  15D4                     u5570:
  5926  15D4  2D44               	goto	l3887
  5927  15D5                     l3931:
  5928  15D5  3001               	movlw	1
  5929  15D6  00F3               	movwf	??__tdiv_to_l_
  5930  15D7                     u5585:
  5931  15D7  1003               	clrc
  5932  15D8  0DA6               	rlf	__tdiv_to_l_@quot,f
  5933  15D9  0DA7               	rlf	__tdiv_to_l_@quot+1,f
  5934  15DA  0DA8               	rlf	__tdiv_to_l_@quot+2,f
  5935  15DB  0DA9               	rlf	__tdiv_to_l_@quot+3,f
  5936  15DC  0BF3               	decfsz	??__tdiv_to_l_,f
  5937  15DD  2DD7               	goto	u5585
  5938  15DE  3001               	movlw	1
  5939  15DF  02AB               	subwf	__tdiv_to_l_@exp1,f
  5940  15E0                     l773:
  5941  15E0  082B               	movf	__tdiv_to_l_@exp1,w
  5942  15E1  1D03               	btfss	3,2
  5943  15E2  2DE4               	goto	u5591
  5944  15E3  2DE5               	goto	u5590
  5945  15E4                     u5591:
  5946  15E4  2DD5               	goto	l3931
  5947  15E5                     u5590:
  5948  15E5                     l3933:
  5949  15E5  0829               	movf	__tdiv_to_l_@quot+3,w
  5950  15E6  00A3               	movwf	?__tdiv_to_l_+3
  5951  15E7  0828               	movf	__tdiv_to_l_@quot+2,w
  5952  15E8  00A2               	movwf	?__tdiv_to_l_+2
  5953  15E9  0827               	movf	__tdiv_to_l_@quot+1,w
  5954  15EA  00A1               	movwf	?__tdiv_to_l_+1
  5955  15EB  0826               	movf	__tdiv_to_l_@quot,w
  5956  15EC  00A0               	movwf	?__tdiv_to_l_
  5957  15ED                     l762:
  5958  15ED  0008               	return
  5959  15EE                     __end_of__tdiv_to_l_:
  5960                           
  5961                           	psect	text27
  5962  16D3                     __ptext27:	
  5963 ;; *************** function __div_to_l_ *****************
  5964 ;; Defined at:
  5965 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;  f1              3    0[BANK0 ] unsigned long 
  5968 ;;  f2              3    3[BANK0 ] unsigned long 
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;  quot            4   14[BANK0 ] unsigned long 
  5971 ;;  exp1            1   19[BANK0 ] unsigned char 
  5972 ;;  cntr            1   18[BANK0 ] unsigned char 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  4    0[BANK0 ] unsigned long 
  5975 ;; Registers used:
  5976 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5982 ;;      Params:         0       6       0       0       0
  5983 ;;      Locals:         0       6       0       0       0
  5984 ;;      Temps:          0       8       0       0       0
  5985 ;;      Totals:         0      20       0       0       0
  5986 ;;Total ram usage:       20 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; Hardware stack levels required when called:    1
  5989 ;; This function calls:
  5990 ;;		Nothing
  5991 ;; This function is called by:
  5992 ;;		_sprintf
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           
  5997                           ;psect for function __div_to_l_
  5998  16D3                     __div_to_l_:
  5999  16D3                     l3937:	
  6000                           ;incstack = 0
  6001                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6002                           
  6003  16D3  3020               	movlw	low (__div_to_l_@f1| 0)
  6004  16D4  0084               	movwf	4
  6005  16D5  1383               	bcf	3,7	;select IRP bank0
  6006  16D6  0800               	movf	0,w
  6007  16D7  1283               	bcf	3,5	;RP0=0, select bank0
  6008  16D8  1303               	bcf	3,6	;RP1=0, select bank0
  6009  16D9  00A6               	movwf	??__div_to_l_
  6010  16DA  0A84               	incf	4,f
  6011  16DB  0800               	movf	0,w
  6012  16DC  00A7               	movwf	??__div_to_l_+1
  6013  16DD  0A84               	incf	4,f
  6014  16DE  0800               	movf	0,w
  6015  16DF  00A8               	movwf	??__div_to_l_+2
  6016  16E0  0A84               	incf	4,f
  6017  16E1  0800               	movf	0,w
  6018  16E2  00A9               	movwf	??__div_to_l_+3
  6019  16E3  1003               	clrc
  6020  16E4  0D28               	rlf	??__div_to_l_+2,w
  6021  16E5  0D29               	rlf	??__div_to_l_+3,w
  6022  16E6  00AA               	movwf	??__div_to_l_+4
  6023  16E7  082A               	movf	??__div_to_l_+4,w
  6024  16E8  00B3               	movwf	__div_to_l_@exp1
  6025  16E9  0833               	movf	__div_to_l_@exp1,w
  6026  16EA  1D03               	btfss	3,2
  6027  16EB  2EED               	goto	u5601
  6028  16EC  2EEE               	goto	u5600
  6029  16ED                     u5601:
  6030  16ED  2EF7               	goto	l3943
  6031  16EE                     u5600:
  6032  16EE                     l3939:
  6033  16EE  3000               	movlw	0
  6034  16EF  00A3               	movwf	?__div_to_l_+3
  6035  16F0  3000               	movlw	0
  6036  16F1  00A2               	movwf	?__div_to_l_+2
  6037  16F2  3000               	movlw	0
  6038  16F3  00A1               	movwf	?__div_to_l_+1
  6039  16F4  3000               	movlw	0
  6040  16F5  00A0               	movwf	?__div_to_l_
  6041  16F6  2FFF               	goto	l683
  6042  16F7                     l3943:
  6043  16F7  3023               	movlw	low (__div_to_l_@f2| 0)
  6044  16F8  0084               	movwf	4
  6045  16F9  0800               	movf	0,w
  6046  16FA  00A6               	movwf	??__div_to_l_
  6047  16FB  0A84               	incf	4,f
  6048  16FC  0800               	movf	0,w
  6049  16FD  00A7               	movwf	??__div_to_l_+1
  6050  16FE  0A84               	incf	4,f
  6051  16FF  0800               	movf	0,w
  6052  1700  00A8               	movwf	??__div_to_l_+2
  6053  1701  0A84               	incf	4,f
  6054  1702  0800               	movf	0,w
  6055  1703  00A9               	movwf	??__div_to_l_+3
  6056  1704  1003               	clrc
  6057  1705  0D28               	rlf	??__div_to_l_+2,w
  6058  1706  0D29               	rlf	??__div_to_l_+3,w
  6059  1707  00AA               	movwf	??__div_to_l_+4
  6060  1708  082A               	movf	??__div_to_l_+4,w
  6061  1709  00B2               	movwf	__div_to_l_@cntr
  6062  170A  0832               	movf	__div_to_l_@cntr,w
  6063  170B  1D03               	btfss	3,2
  6064  170C  2F0E               	goto	u5611
  6065  170D  2F0F               	goto	u5610
  6066  170E                     u5611:
  6067  170E  2F10               	goto	l3949
  6068  170F                     u5610:
  6069  170F  2EEE               	goto	l3939
  6070  1710                     l3949:
  6071  1710  3020               	movlw	low (__div_to_l_@f1| 0)
  6072  1711  0084               	movwf	4
  6073  1712  3000               	movlw	0
  6074  1713  0480               	iorwf	0,f
  6075  1714  0A84               	incf	4,f
  6076  1715  3000               	movlw	0
  6077  1716  0480               	iorwf	0,f
  6078  1717  0A84               	incf	4,f
  6079  1718  3080               	movlw	128
  6080  1719  0480               	iorwf	0,f
  6081  171A  0A84               	incf	4,f
  6082  171B  3000               	movlw	0
  6083  171C  0480               	iorwf	0,f
  6084  171D  3020               	movlw	low (__div_to_l_@f1| 0)
  6085  171E  0084               	movwf	4
  6086  171F  30FF               	movlw	255
  6087  1720  0580               	andwf	0,f
  6088  1721  0A84               	incf	4,f
  6089  1722  30FF               	movlw	255
  6090  1723  0580               	andwf	0,f
  6091  1724  0A84               	incf	4,f
  6092  1725  30FF               	movlw	255
  6093  1726  0580               	andwf	0,f
  6094  1727  0A84               	incf	4,f
  6095  1728  3000               	movlw	0
  6096  1729  0580               	andwf	0,f
  6097  172A  3023               	movlw	low (__div_to_l_@f2| 0)
  6098  172B  0084               	movwf	4
  6099  172C  3000               	movlw	0
  6100  172D  0480               	iorwf	0,f
  6101  172E  0A84               	incf	4,f
  6102  172F  3000               	movlw	0
  6103  1730  0480               	iorwf	0,f
  6104  1731  0A84               	incf	4,f
  6105  1732  3080               	movlw	128
  6106  1733  0480               	iorwf	0,f
  6107  1734  0A84               	incf	4,f
  6108  1735  3000               	movlw	0
  6109  1736  0480               	iorwf	0,f
  6110  1737  3023               	movlw	low (__div_to_l_@f2| 0)
  6111  1738  0084               	movwf	4
  6112  1739  30FF               	movlw	255
  6113  173A  0580               	andwf	0,f
  6114  173B  0A84               	incf	4,f
  6115  173C  30FF               	movlw	255
  6116  173D  0580               	andwf	0,f
  6117  173E  0A84               	incf	4,f
  6118  173F  30FF               	movlw	255
  6119  1740  0580               	andwf	0,f
  6120  1741  0A84               	incf	4,f
  6121  1742  3000               	movlw	0
  6122  1743  0580               	andwf	0,f
  6123  1744                     l3951:
  6124  1744  3000               	movlw	0
  6125  1745  00B1               	movwf	__div_to_l_@quot+3
  6126  1746  3000               	movlw	0
  6127  1747  00B0               	movwf	__div_to_l_@quot+2
  6128  1748  3000               	movlw	0
  6129  1749  00AF               	movwf	__div_to_l_@quot+1
  6130  174A  3000               	movlw	0
  6131  174B  00AE               	movwf	__div_to_l_@quot
  6132  174C                     l3953:
  6133  174C  307F               	movlw	127
  6134  174D  02B3               	subwf	__div_to_l_@exp1,f
  6135  174E                     l3955:
  6136  174E  30A0               	movlw	160
  6137  174F  0732               	addwf	__div_to_l_@cntr,w
  6138  1750  00A6               	movwf	??__div_to_l_
  6139  1751  0826               	movf	??__div_to_l_,w
  6140  1752  02B3               	subwf	__div_to_l_@exp1,f
  6141  1753                     l3957:
  6142  1753  3020               	movlw	32
  6143  1754  00A6               	movwf	??__div_to_l_
  6144  1755  0826               	movf	??__div_to_l_,w
  6145  1756  00B2               	movwf	__div_to_l_@cntr
  6146  1757                     l3959:
  6147  1757  3001               	movlw	1
  6148  1758  00A6               	movwf	??__div_to_l_
  6149  1759                     u5625:
  6150  1759  1003               	clrc
  6151  175A  0DAE               	rlf	__div_to_l_@quot,f
  6152  175B  0DAF               	rlf	__div_to_l_@quot+1,f
  6153  175C  0DB0               	rlf	__div_to_l_@quot+2,f
  6154  175D  0DB1               	rlf	__div_to_l_@quot+3,f
  6155  175E  0BA6               	decfsz	??__div_to_l_,f
  6156  175F  2F59               	goto	u5625
  6157  1760                     l3961:
  6158  1760  3023               	movlw	low (__div_to_l_@f2| 0)
  6159  1761  0084               	movwf	4
  6160  1762  0800               	movf	0,w
  6161  1763  00A6               	movwf	??__div_to_l_
  6162  1764  0A84               	incf	4,f
  6163  1765  0800               	movf	0,w
  6164  1766  00A7               	movwf	??__div_to_l_+1
  6165  1767  0A84               	incf	4,f
  6166  1768  0800               	movf	0,w
  6167  1769  00A8               	movwf	??__div_to_l_+2
  6168  176A  0A84               	incf	4,f
  6169  176B  0800               	movf	0,w
  6170  176C  00A9               	movwf	??__div_to_l_+3
  6171  176D  3020               	movlw	low (__div_to_l_@f1| 0)
  6172  176E  0084               	movwf	4
  6173  176F  0800               	movf	0,w
  6174  1770  00AA               	movwf	??__div_to_l_+4
  6175  1771  0A84               	incf	4,f
  6176  1772  0800               	movf	0,w
  6177  1773  00AB               	movwf	??__div_to_l_+5
  6178  1774  0A84               	incf	4,f
  6179  1775  0800               	movf	0,w
  6180  1776  00AC               	movwf	??__div_to_l_+6
  6181  1777  0A84               	incf	4,f
  6182  1778  0800               	movf	0,w
  6183  1779  00AD               	movwf	??__div_to_l_+7
  6184  177A  0829               	movf	??__div_to_l_+3,w
  6185  177B  022D               	subwf	??__div_to_l_+7,w
  6186  177C  1D03               	skipz
  6187  177D  2F88               	goto	u5635
  6188  177E  0828               	movf	??__div_to_l_+2,w
  6189  177F  022C               	subwf	??__div_to_l_+6,w
  6190  1780  1D03               	skipz
  6191  1781  2F88               	goto	u5635
  6192  1782  0827               	movf	??__div_to_l_+1,w
  6193  1783  022B               	subwf	??__div_to_l_+5,w
  6194  1784  1D03               	skipz
  6195  1785  2F88               	goto	u5635
  6196  1786  0826               	movf	??__div_to_l_,w
  6197  1787  022A               	subwf	??__div_to_l_+4,w
  6198  1788                     u5635:
  6199  1788  1C03               	skipc
  6200  1789  2F8B               	goto	u5631
  6201  178A  2F8C               	goto	u5630
  6202  178B                     u5631:
  6203  178B  2FAF               	goto	l686
  6204  178C                     u5630:
  6205  178C                     l3963:
  6206  178C  3023               	movlw	low (__div_to_l_@f2| 0)
  6207  178D  0084               	movwf	4
  6208  178E  0800               	movf	0,w
  6209  178F  00A6               	movwf	??__div_to_l_
  6210  1790  0A84               	incf	4,f
  6211  1791  0800               	movf	0,w
  6212  1792  00A7               	movwf	??__div_to_l_+1
  6213  1793  0A84               	incf	4,f
  6214  1794  0800               	movf	0,w
  6215  1795  00A8               	movwf	??__div_to_l_+2
  6216  1796  0A84               	incf	4,f
  6217  1797  0800               	movf	0,w
  6218  1798  00A9               	movwf	??__div_to_l_+3
  6219  1799  3020               	movlw	low (__div_to_l_@f1| 0)
  6220  179A  0084               	movwf	4
  6221  179B  0826               	movf	??__div_to_l_,w
  6222  179C  0280               	subwf	0,f
  6223  179D  0A84               	incf	4,f
  6224  179E  0827               	movf	??__div_to_l_+1,w
  6225  179F  1C03               	skipc
  6226  17A0  0F27               	incfsz	??__div_to_l_+1,w
  6227  17A1  0280               	subwf	0,f
  6228  17A2  0A84               	incf	4,f
  6229  17A3  0828               	movf	??__div_to_l_+2,w
  6230  17A4  1C03               	skipc
  6231  17A5  0F28               	incfsz	??__div_to_l_+2,w
  6232  17A6  0280               	subwf	0,f
  6233  17A7  0A84               	incf	4,f
  6234  17A8  0829               	movf	??__div_to_l_+3,w
  6235  17A9  1C03               	skipc
  6236  17AA  0A29               	incf	??__div_to_l_+3,w
  6237  17AB  0280               	subwf	0,f
  6238  17AC  3003               	movlw	3
  6239  17AD  0284               	subwf	4,f
  6240  17AE                     l3965:
  6241  17AE  142E               	bsf	__div_to_l_@quot,0
  6242  17AF                     l686:
  6243  17AF  3020               	movlw	low (__div_to_l_@f1| 0)
  6244  17B0  0084               	movwf	4
  6245  17B1  1003               	clrc
  6246  17B2  0D80               	rlf	0,f
  6247  17B3  0A84               	incf	4,f
  6248  17B4  0D80               	rlf	0,f
  6249  17B5  0A84               	incf	4,f
  6250  17B6  0D80               	rlf	0,f
  6251  17B7  0A84               	incf	4,f
  6252  17B8  0D80               	rlf	0,f
  6253  17B9  0384               	decf	4,f
  6254  17BA  0384               	decf	4,f
  6255  17BB  0384               	decf	4,f
  6256  17BC                     l3967:
  6257  17BC  3001               	movlw	1
  6258  17BD  02B2               	subwf	__div_to_l_@cntr,f
  6259  17BE  1D03               	btfss	3,2
  6260  17BF  2FC1               	goto	u5641
  6261  17C0  2FC2               	goto	u5640
  6262  17C1                     u5641:
  6263  17C1  2F57               	goto	l3959
  6264  17C2                     u5640:
  6265  17C2                     l687:
  6266  17C2  1FB3               	btfss	__div_to_l_@exp1,7
  6267  17C3  2FC5               	goto	u5651
  6268  17C4  2FC6               	goto	u5650
  6269  17C5                     u5651:
  6270  17C5  2FE0               	goto	l3977
  6271  17C6                     u5650:
  6272  17C6                     l3969:
  6273  17C6  0833               	movf	__div_to_l_@exp1,w
  6274  17C7  3A80               	xorlw	128
  6275  17C8  3E9F               	addlw	159
  6276  17C9  1803               	skipnc
  6277  17CA  2FCC               	goto	u5661
  6278  17CB  2FCD               	goto	u5660
  6279  17CC                     u5661:
  6280  17CC  2FCE               	goto	l3975
  6281  17CD                     u5660:
  6282  17CD  2EEE               	goto	l3939
  6283  17CE                     l3975:
  6284  17CE  3001               	movlw	1
  6285  17CF                     u5675:
  6286  17CF  1003               	clrc
  6287  17D0  0CB1               	rrf	__div_to_l_@quot+3,f
  6288  17D1  0CB0               	rrf	__div_to_l_@quot+2,f
  6289  17D2  0CAF               	rrf	__div_to_l_@quot+1,f
  6290  17D3  0CAE               	rrf	__div_to_l_@quot,f
  6291  17D4  3EFF               	addlw	-1
  6292  17D5  1D03               	skipz
  6293  17D6  2FCF               	goto	u5675
  6294  17D7  3001               	movlw	1
  6295  17D8  00A6               	movwf	??__div_to_l_
  6296  17D9  0826               	movf	??__div_to_l_,w
  6297  17DA  07B3               	addwf	__div_to_l_@exp1,f
  6298  17DB  1D03               	btfss	3,2
  6299  17DC  2FDE               	goto	u5681
  6300  17DD  2FDF               	goto	u5680
  6301  17DE                     u5681:
  6302  17DE  2FCE               	goto	l3975
  6303  17DF                     u5680:
  6304  17DF  2FF7               	goto	l3985
  6305  17E0                     l3977:
  6306  17E0  3020               	movlw	32
  6307  17E1  0233               	subwf	__div_to_l_@exp1,w
  6308  17E2  1C03               	skipc
  6309  17E3  2FE5               	goto	u5691
  6310  17E4  2FE6               	goto	u5690
  6311  17E5                     u5691:
  6312  17E5  2FF2               	goto	l694
  6313  17E6                     u5690:
  6314  17E6  2EEE               	goto	l3939
  6315  17E7                     l3983:
  6316  17E7  3001               	movlw	1
  6317  17E8  00A6               	movwf	??__div_to_l_
  6318  17E9                     u5705:
  6319  17E9  1003               	clrc
  6320  17EA  0DAE               	rlf	__div_to_l_@quot,f
  6321  17EB  0DAF               	rlf	__div_to_l_@quot+1,f
  6322  17EC  0DB0               	rlf	__div_to_l_@quot+2,f
  6323  17ED  0DB1               	rlf	__div_to_l_@quot+3,f
  6324  17EE  0BA6               	decfsz	??__div_to_l_,f
  6325  17EF  2FE9               	goto	u5705
  6326  17F0  3001               	movlw	1
  6327  17F1  02B3               	subwf	__div_to_l_@exp1,f
  6328  17F2                     l694:
  6329  17F2  0833               	movf	__div_to_l_@exp1,w
  6330  17F3  1D03               	btfss	3,2
  6331  17F4  2FF6               	goto	u5711
  6332  17F5  2FF7               	goto	u5710
  6333  17F6                     u5711:
  6334  17F6  2FE7               	goto	l3983
  6335  17F7                     u5710:
  6336  17F7                     l3985:
  6337  17F7  0831               	movf	__div_to_l_@quot+3,w
  6338  17F8  00A3               	movwf	?__div_to_l_+3
  6339  17F9  0830               	movf	__div_to_l_@quot+2,w
  6340  17FA  00A2               	movwf	?__div_to_l_+2
  6341  17FB  082F               	movf	__div_to_l_@quot+1,w
  6342  17FC  00A1               	movwf	?__div_to_l_+1
  6343  17FD  082E               	movf	__div_to_l_@quot,w
  6344  17FE  00A0               	movwf	?__div_to_l_
  6345  17FF                     l683:
  6346  17FF  0008               	return
  6347  1800                     __end_of__div_to_l_:
  6348                           
  6349                           	psect	text28
  6350  1D96                     __ptext28:	
  6351 ;; *************** function ___wmul *****************
  6352 ;; Defined at:
  6353 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;  multiplier      2    3[COMMON] unsigned int 
  6356 ;;  multiplicand    2    5[COMMON] unsigned int 
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;  product         2    0[BANK0 ] unsigned int 
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  2    3[COMMON] unsigned int 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2, status,0
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6368 ;;      Params:         4       0       0       0       0
  6369 ;;      Locals:         0       2       0       0       0
  6370 ;;      Temps:          0       0       0       0       0
  6371 ;;      Totals:         4       2       0       0       0
  6372 ;;Total ram usage:        6 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; Hardware stack levels required when called:    1
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		_sprintf
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           
  6383                           ;psect for function ___wmul
  6384  1D96                     ___wmul:
  6385  1D96                     l3989:	
  6386                           ;incstack = 0
  6387                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6388                           
  6389  1D96  1283               	bcf	3,5	;RP0=0, select bank0
  6390  1D97  1303               	bcf	3,6	;RP1=0, select bank0
  6391  1D98  01A0               	clrf	___wmul@product
  6392  1D99  01A1               	clrf	___wmul@product+1
  6393  1D9A                     l3991:
  6394  1D9A  1C73               	btfss	___wmul@multiplier,0
  6395  1D9B  2D9D               	goto	u5721
  6396  1D9C  2D9E               	goto	u5720
  6397  1D9D                     u5721:
  6398  1D9D  2DA6               	goto	l477
  6399  1D9E                     u5720:
  6400  1D9E                     l3993:
  6401  1D9E  0875               	movf	___wmul@multiplicand,w
  6402  1D9F  1283               	bcf	3,5	;RP0=0, select bank0
  6403  1DA0  1303               	bcf	3,6	;RP1=0, select bank0
  6404  1DA1  07A0               	addwf	___wmul@product,f
  6405  1DA2  1803               	skipnc
  6406  1DA3  0AA1               	incf	___wmul@product+1,f
  6407  1DA4  0876               	movf	___wmul@multiplicand+1,w
  6408  1DA5  07A1               	addwf	___wmul@product+1,f
  6409  1DA6                     l477:
  6410  1DA6  3001               	movlw	1
  6411  1DA7                     u5735:
  6412  1DA7  1003               	clrc
  6413  1DA8  0DF5               	rlf	___wmul@multiplicand,f
  6414  1DA9  0DF6               	rlf	___wmul@multiplicand+1,f
  6415  1DAA  3EFF               	addlw	-1
  6416  1DAB  1D03               	skipz
  6417  1DAC  2DA7               	goto	u5735
  6418  1DAD                     l3995:
  6419  1DAD  3001               	movlw	1
  6420  1DAE                     u5745:
  6421  1DAE  1003               	clrc
  6422  1DAF  0CF4               	rrf	___wmul@multiplier+1,f
  6423  1DB0  0CF3               	rrf	___wmul@multiplier,f
  6424  1DB1  3EFF               	addlw	-1
  6425  1DB2  1D03               	skipz
  6426  1DB3  2DAE               	goto	u5745
  6427  1DB4                     l3997:
  6428  1DB4  0873               	movf	___wmul@multiplier,w
  6429  1DB5  0474               	iorwf	___wmul@multiplier+1,w
  6430  1DB6  1D03               	btfss	3,2
  6431  1DB7  2DB9               	goto	u5751
  6432  1DB8  2DBA               	goto	u5750
  6433  1DB9                     u5751:
  6434  1DB9  2D9A               	goto	l3991
  6435  1DBA                     u5750:
  6436  1DBA                     l3999:
  6437  1DBA  1283               	bcf	3,5	;RP0=0, select bank0
  6438  1DBB  1303               	bcf	3,6	;RP1=0, select bank0
  6439  1DBC  0821               	movf	___wmul@product+1,w
  6440  1DBD  00F4               	movwf	?___wmul+1
  6441  1DBE  0820               	movf	___wmul@product,w
  6442  1DBF  00F3               	movwf	?___wmul
  6443  1DC0                     l479:
  6444  1DC0  0008               	return
  6445  1DC1                     __end_of___wmul:
  6446                           
  6447                           	psect	text29
  6448  1E43                     __ptext29:	
  6449 ;; *************** function ___lltoft *****************
  6450 ;; Defined at:
  6451 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lltoft.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;  c               4    3[BANK0 ] unsigned long 
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;  exp             1    8[BANK0 ] unsigned char 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  3    3[BANK0 ] float 
  6458 ;; Registers used:
  6459 ;;		wreg, status,2, status,0, pclath, cstack
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6465 ;;      Params:         0       4       0       0       0
  6466 ;;      Locals:         0       1       0       0       0
  6467 ;;      Temps:          0       1       0       0       0
  6468 ;;      Totals:         0       6       0       0       0
  6469 ;;Total ram usage:        6 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; Hardware stack levels required when called:    2
  6472 ;; This function calls:
  6473 ;;		___ftpack
  6474 ;; This function is called by:
  6475 ;;		_sprintf
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           
  6480                           ;psect for function ___lltoft
  6481  1E43                     ___lltoft:
  6482  1E43                     l4075:	
  6483                           ;incstack = 0
  6484                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  6485                           
  6486  1E43  308E               	movlw	142
  6487  1E44  1283               	bcf	3,5	;RP0=0, select bank0
  6488  1E45  1303               	bcf	3,6	;RP1=0, select bank0
  6489  1E46  00A7               	movwf	??___lltoft
  6490  1E47  0827               	movf	??___lltoft,w
  6491  1E48  00A8               	movwf	___lltoft@exp
  6492  1E49  2E57               	goto	l4079
  6493  1E4A                     l4077:
  6494  1E4A  3001               	movlw	1
  6495  1E4B                     u5935:
  6496  1E4B  1003               	clrc
  6497  1E4C  0CA6               	rrf	___lltoft@c+3,f
  6498  1E4D  0CA5               	rrf	___lltoft@c+2,f
  6499  1E4E  0CA4               	rrf	___lltoft@c+1,f
  6500  1E4F  0CA3               	rrf	___lltoft@c,f
  6501  1E50  3EFF               	addlw	-1
  6502  1E51  1D03               	skipz
  6503  1E52  2E4B               	goto	u5935
  6504  1E53  3001               	movlw	1
  6505  1E54  00A7               	movwf	??___lltoft
  6506  1E55  0827               	movf	??___lltoft,w
  6507  1E56  07A8               	addwf	___lltoft@exp,f
  6508  1E57                     l4079:
  6509  1E57  30FF               	movlw	255
  6510  1E58  0526               	andwf	___lltoft@c+3,w
  6511  1E59  1D03               	btfss	3,2
  6512  1E5A  2E5C               	goto	u5941
  6513  1E5B  2E5D               	goto	u5940
  6514  1E5C                     u5941:
  6515  1E5C  2E4A               	goto	l4077
  6516  1E5D                     u5940:
  6517  1E5D                     l4081:
  6518  1E5D  0823               	movf	___lltoft@c,w
  6519  1E5E  00F3               	movwf	___ftpack@arg
  6520  1E5F  0824               	movf	___lltoft@c+1,w
  6521  1E60  00F4               	movwf	___ftpack@arg+1
  6522  1E61  0825               	movf	___lltoft@c+2,w
  6523  1E62  00F5               	movwf	___ftpack@arg+2
  6524  1E63  0828               	movf	___lltoft@exp,w
  6525  1E64  00A7               	movwf	??___lltoft
  6526  1E65  0827               	movf	??___lltoft,w
  6527  1E66  00F6               	movwf	___ftpack@exp
  6528  1E67  01F7               	clrf	___ftpack@sign
  6529  1E68  160A  118A  2367  160A  158A  	fcall	___ftpack
  6530  1E6D  0873               	movf	?___ftpack,w
  6531  1E6E  1283               	bcf	3,5	;RP0=0, select bank0
  6532  1E6F  1303               	bcf	3,6	;RP1=0, select bank0
  6533  1E70  00A3               	movwf	?___lltoft
  6534  1E71  0874               	movf	?___ftpack+1,w
  6535  1E72  00A4               	movwf	?___lltoft+1
  6536  1E73  0875               	movf	?___ftpack+2,w
  6537  1E74  00A5               	movwf	?___lltoft+2
  6538  1E75                     l856:
  6539  1E75  0008               	return
  6540  1E76                     __end_of___lltoft:
  6541                           
  6542                           	psect	text30
  6543  10D3                     __ptext30:	
  6544 ;; *************** function ___llmod *****************
  6545 ;; Defined at:
  6546 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;  divisor         4   13[BANK0 ] unsigned long 
  6549 ;;  dividend        4   17[BANK0 ] unsigned long 
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;  counter         1    5[COMMON] unsigned char 
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  4   13[BANK0 ] unsigned long 
  6554 ;; Registers used:
  6555 ;;		wreg, status,2, status,0
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6561 ;;      Params:         0       8       0       0       0
  6562 ;;      Locals:         1       0       0       0       0
  6563 ;;      Temps:          1       0       0       0       0
  6564 ;;      Totals:         2       8       0       0       0
  6565 ;;Total ram usage:       10 bytes
  6566 ;; Hardware stack levels used:    1
  6567 ;; Hardware stack levels required when called:    1
  6568 ;; This function calls:
  6569 ;;		Nothing
  6570 ;; This function is called by:
  6571 ;;		_sprintf
  6572 ;; This function uses a non-reentrant model
  6573 ;;
  6574                           
  6575                           
  6576                           ;psect for function ___llmod
  6577  10D3                     ___llmod:
  6578  10D3                     l4055:	
  6579                           ;incstack = 0
  6580                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6581                           
  6582  10D3  1283               	bcf	3,5	;RP0=0, select bank0
  6583  10D4  1303               	bcf	3,6	;RP1=0, select bank0
  6584  10D5  0830               	movf	___llmod@divisor+3,w
  6585  10D6  042F               	iorwf	___llmod@divisor+2,w
  6586  10D7  042E               	iorwf	___llmod@divisor+1,w
  6587  10D8  042D               	iorwf	___llmod@divisor,w
  6588  10D9  1903               	skipnz
  6589  10DA  28DC               	goto	u5871
  6590  10DB  28DD               	goto	u5870
  6591  10DC                     u5871:
  6592  10DC  2920               	goto	l4071
  6593  10DD                     u5870:
  6594  10DD                     l4057:
  6595  10DD  01F5               	clrf	___llmod@counter
  6596  10DE  0AF5               	incf	___llmod@counter,f
  6597  10DF  28ED               	goto	l4061
  6598  10E0                     l4059:
  6599  10E0  3001               	movlw	1
  6600  10E1  00F4               	movwf	??___llmod
  6601  10E2                     u5885:
  6602  10E2  1003               	clrc
  6603  10E3  0DAD               	rlf	___llmod@divisor,f
  6604  10E4  0DAE               	rlf	___llmod@divisor+1,f
  6605  10E5  0DAF               	rlf	___llmod@divisor+2,f
  6606  10E6  0DB0               	rlf	___llmod@divisor+3,f
  6607  10E7  0BF4               	decfsz	??___llmod,f
  6608  10E8  28E2               	goto	u5885
  6609  10E9  3001               	movlw	1
  6610  10EA  00F4               	movwf	??___llmod
  6611  10EB  0874               	movf	??___llmod,w
  6612  10EC  07F5               	addwf	___llmod@counter,f
  6613  10ED                     l4061:
  6614  10ED  1FB0               	btfss	___llmod@divisor+3,7
  6615  10EE  28F0               	goto	u5891
  6616  10EF  28F1               	goto	u5890
  6617  10F0                     u5891:
  6618  10F0  28E0               	goto	l4059
  6619  10F1                     u5890:
  6620  10F1                     l4063:
  6621  10F1  0830               	movf	___llmod@divisor+3,w
  6622  10F2  0234               	subwf	___llmod@dividend+3,w
  6623  10F3  1D03               	skipz
  6624  10F4  28FF               	goto	u5905
  6625  10F5  082F               	movf	___llmod@divisor+2,w
  6626  10F6  0233               	subwf	___llmod@dividend+2,w
  6627  10F7  1D03               	skipz
  6628  10F8  28FF               	goto	u5905
  6629  10F9  082E               	movf	___llmod@divisor+1,w
  6630  10FA  0232               	subwf	___llmod@dividend+1,w
  6631  10FB  1D03               	skipz
  6632  10FC  28FF               	goto	u5905
  6633  10FD  082D               	movf	___llmod@divisor,w
  6634  10FE  0231               	subwf	___llmod@dividend,w
  6635  10FF                     u5905:
  6636  10FF  1C03               	skipc
  6637  1100  2902               	goto	u5901
  6638  1101  2903               	goto	u5900
  6639  1102                     u5901:
  6640  1102  2911               	goto	l4067
  6641  1103                     u5900:
  6642  1103                     l4065:
  6643  1103  082D               	movf	___llmod@divisor,w
  6644  1104  02B1               	subwf	___llmod@dividend,f
  6645  1105  082E               	movf	___llmod@divisor+1,w
  6646  1106  1C03               	skipc
  6647  1107  0F2E               	incfsz	___llmod@divisor+1,w
  6648  1108  02B2               	subwf	___llmod@dividend+1,f
  6649  1109  082F               	movf	___llmod@divisor+2,w
  6650  110A  1C03               	skipc
  6651  110B  0F2F               	incfsz	___llmod@divisor+2,w
  6652  110C  02B3               	subwf	___llmod@dividend+2,f
  6653  110D  0830               	movf	___llmod@divisor+3,w
  6654  110E  1C03               	skipc
  6655  110F  0F30               	incfsz	___llmod@divisor+3,w
  6656  1110  02B4               	subwf	___llmod@dividend+3,f
  6657  1111                     l4067:
  6658  1111  3001               	movlw	1
  6659  1112                     u5915:
  6660  1112  1003               	clrc
  6661  1113  0CB0               	rrf	___llmod@divisor+3,f
  6662  1114  0CAF               	rrf	___llmod@divisor+2,f
  6663  1115  0CAE               	rrf	___llmod@divisor+1,f
  6664  1116  0CAD               	rrf	___llmod@divisor,f
  6665  1117  3EFF               	addlw	-1
  6666  1118  1D03               	skipz
  6667  1119  2912               	goto	u5915
  6668  111A                     l4069:
  6669  111A  3001               	movlw	1
  6670  111B  02F5               	subwf	___llmod@counter,f
  6671  111C  1D03               	btfss	3,2
  6672  111D  291F               	goto	u5921
  6673  111E  2920               	goto	u5920
  6674  111F                     u5921:
  6675  111F  28F1               	goto	l4063
  6676  1120                     u5920:
  6677  1120                     l4071:
  6678  1120  0834               	movf	___llmod@dividend+3,w
  6679  1121  00B0               	movwf	?___llmod+3
  6680  1122  0833               	movf	___llmod@dividend+2,w
  6681  1123  00AF               	movwf	?___llmod+2
  6682  1124  0832               	movf	___llmod@dividend+1,w
  6683  1125  00AE               	movwf	?___llmod+1
  6684  1126  0831               	movf	___llmod@dividend,w
  6685  1127  00AD               	movwf	?___llmod
  6686  1128                     l848:
  6687  1128  0008               	return
  6688  1129                     __end_of___llmod:
  6689                           
  6690                           	psect	text31
  6691  1296                     __ptext31:	
  6692 ;; *************** function ___lldiv *****************
  6693 ;; Defined at:
  6694 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  divisor         4    0[BANK0 ] unsigned long 
  6697 ;;  dividend        4    4[BANK0 ] unsigned long 
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  quotient        4    8[BANK0 ] unsigned long 
  6700 ;;  counter         1   12[BANK0 ] unsigned char 
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  4    0[BANK0 ] unsigned long 
  6703 ;; Registers used:
  6704 ;;		wreg, status,2, status,0
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6710 ;;      Params:         0       8       0       0       0
  6711 ;;      Locals:         0       5       0       0       0
  6712 ;;      Temps:          1       0       0       0       0
  6713 ;;      Totals:         1      13       0       0       0
  6714 ;;Total ram usage:       14 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; Hardware stack levels required when called:    1
  6717 ;; This function calls:
  6718 ;;		Nothing
  6719 ;; This function is called by:
  6720 ;;		_sprintf
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           
  6725                           ;psect for function ___lldiv
  6726  1296                     ___lldiv:
  6727  1296                     l4003:	
  6728                           ;incstack = 0
  6729                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6730                           
  6731  1296  3000               	movlw	0
  6732  1297  1283               	bcf	3,5	;RP0=0, select bank0
  6733  1298  1303               	bcf	3,6	;RP1=0, select bank0
  6734  1299  00AB               	movwf	___lldiv@quotient+3
  6735  129A  3000               	movlw	0
  6736  129B  00AA               	movwf	___lldiv@quotient+2
  6737  129C  3000               	movlw	0
  6738  129D  00A9               	movwf	___lldiv@quotient+1
  6739  129E  3000               	movlw	0
  6740  129F  00A8               	movwf	___lldiv@quotient
  6741  12A0  0823               	movf	___lldiv@divisor+3,w
  6742  12A1  0422               	iorwf	___lldiv@divisor+2,w
  6743  12A2  0421               	iorwf	___lldiv@divisor+1,w
  6744  12A3  0420               	iorwf	___lldiv@divisor,w
  6745  12A4  1903               	skipnz
  6746  12A5  2AA7               	goto	u5761
  6747  12A6  2AA8               	goto	u5760
  6748  12A7                     u5761:
  6749  12A7  2AF5               	goto	l4023
  6750  12A8                     u5760:
  6751  12A8                     l4005:
  6752  12A8  01AC               	clrf	___lldiv@counter
  6753  12A9  0AAC               	incf	___lldiv@counter,f
  6754  12AA  2AB8               	goto	l4009
  6755  12AB                     l4007:
  6756  12AB  3001               	movlw	1
  6757  12AC  00F3               	movwf	??___lldiv
  6758  12AD                     u5775:
  6759  12AD  1003               	clrc
  6760  12AE  0DA0               	rlf	___lldiv@divisor,f
  6761  12AF  0DA1               	rlf	___lldiv@divisor+1,f
  6762  12B0  0DA2               	rlf	___lldiv@divisor+2,f
  6763  12B1  0DA3               	rlf	___lldiv@divisor+3,f
  6764  12B2  0BF3               	decfsz	??___lldiv,f
  6765  12B3  2AAD               	goto	u5775
  6766  12B4  3001               	movlw	1
  6767  12B5  00F3               	movwf	??___lldiv
  6768  12B6  0873               	movf	??___lldiv,w
  6769  12B7  07AC               	addwf	___lldiv@counter,f
  6770  12B8                     l4009:
  6771  12B8  1FA3               	btfss	___lldiv@divisor+3,7
  6772  12B9  2ABB               	goto	u5781
  6773  12BA  2ABC               	goto	u5780
  6774  12BB                     u5781:
  6775  12BB  2AAB               	goto	l4007
  6776  12BC                     u5780:
  6777  12BC                     l4011:
  6778  12BC  3001               	movlw	1
  6779  12BD  00F3               	movwf	??___lldiv
  6780  12BE                     u5795:
  6781  12BE  1003               	clrc
  6782  12BF  0DA8               	rlf	___lldiv@quotient,f
  6783  12C0  0DA9               	rlf	___lldiv@quotient+1,f
  6784  12C1  0DAA               	rlf	___lldiv@quotient+2,f
  6785  12C2  0DAB               	rlf	___lldiv@quotient+3,f
  6786  12C3  0BF3               	decfsz	??___lldiv,f
  6787  12C4  2ABE               	goto	u5795
  6788  12C5                     l4013:
  6789  12C5  0823               	movf	___lldiv@divisor+3,w
  6790  12C6  0227               	subwf	___lldiv@dividend+3,w
  6791  12C7  1D03               	skipz
  6792  12C8  2AD3               	goto	u5805
  6793  12C9  0822               	movf	___lldiv@divisor+2,w
  6794  12CA  0226               	subwf	___lldiv@dividend+2,w
  6795  12CB  1D03               	skipz
  6796  12CC  2AD3               	goto	u5805
  6797  12CD  0821               	movf	___lldiv@divisor+1,w
  6798  12CE  0225               	subwf	___lldiv@dividend+1,w
  6799  12CF  1D03               	skipz
  6800  12D0  2AD3               	goto	u5805
  6801  12D1  0820               	movf	___lldiv@divisor,w
  6802  12D2  0224               	subwf	___lldiv@dividend,w
  6803  12D3                     u5805:
  6804  12D3  1C03               	skipc
  6805  12D4  2AD6               	goto	u5801
  6806  12D5  2AD7               	goto	u5800
  6807  12D6                     u5801:
  6808  12D6  2AE6               	goto	l4019
  6809  12D7                     u5800:
  6810  12D7                     l4015:
  6811  12D7  0820               	movf	___lldiv@divisor,w
  6812  12D8  02A4               	subwf	___lldiv@dividend,f
  6813  12D9  0821               	movf	___lldiv@divisor+1,w
  6814  12DA  1C03               	skipc
  6815  12DB  0F21               	incfsz	___lldiv@divisor+1,w
  6816  12DC  02A5               	subwf	___lldiv@dividend+1,f
  6817  12DD  0822               	movf	___lldiv@divisor+2,w
  6818  12DE  1C03               	skipc
  6819  12DF  0F22               	incfsz	___lldiv@divisor+2,w
  6820  12E0  02A6               	subwf	___lldiv@dividend+2,f
  6821  12E1  0823               	movf	___lldiv@divisor+3,w
  6822  12E2  1C03               	skipc
  6823  12E3  0F23               	incfsz	___lldiv@divisor+3,w
  6824  12E4  02A7               	subwf	___lldiv@dividend+3,f
  6825  12E5                     l4017:
  6826  12E5  1428               	bsf	___lldiv@quotient,0
  6827  12E6                     l4019:
  6828  12E6  3001               	movlw	1
  6829  12E7                     u5815:
  6830  12E7  1003               	clrc
  6831  12E8  0CA3               	rrf	___lldiv@divisor+3,f
  6832  12E9  0CA2               	rrf	___lldiv@divisor+2,f
  6833  12EA  0CA1               	rrf	___lldiv@divisor+1,f
  6834  12EB  0CA0               	rrf	___lldiv@divisor,f
  6835  12EC  3EFF               	addlw	-1
  6836  12ED  1D03               	skipz
  6837  12EE  2AE7               	goto	u5815
  6838  12EF                     l4021:
  6839  12EF  3001               	movlw	1
  6840  12F0  02AC               	subwf	___lldiv@counter,f
  6841  12F1  1D03               	btfss	3,2
  6842  12F2  2AF4               	goto	u5821
  6843  12F3  2AF5               	goto	u5820
  6844  12F4                     u5821:
  6845  12F4  2ABC               	goto	l4011
  6846  12F5                     u5820:
  6847  12F5                     l4023:
  6848  12F5  082B               	movf	___lldiv@quotient+3,w
  6849  12F6  00A3               	movwf	?___lldiv+3
  6850  12F7  082A               	movf	___lldiv@quotient+2,w
  6851  12F8  00A2               	movwf	?___lldiv+2
  6852  12F9  0829               	movf	___lldiv@quotient+1,w
  6853  12FA  00A1               	movwf	?___lldiv+1
  6854  12FB  0828               	movf	___lldiv@quotient,w
  6855  12FC  00A0               	movwf	?___lldiv
  6856  12FD                     l513:
  6857  12FD  0008               	return
  6858  12FE                     __end_of___lldiv:
  6859                           
  6860                           	psect	text32
  6861  13E9                     __ptext32:	
  6862 ;; *************** function ___fttol *****************
  6863 ;; Defined at:
  6864 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fttol.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  f1              3   40[BANK0 ] float 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;  lval            4   49[BANK0 ] unsigned long 
  6869 ;;  exp1            1   53[BANK0 ] unsigned char 
  6870 ;;  sign1           1   48[BANK0 ] unsigned char 
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  4   40[BANK0 ] long 
  6873 ;; Registers used:
  6874 ;;		wreg, status,2, status,0
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6880 ;;      Params:         0       4       0       0       0
  6881 ;;      Locals:         0       6       0       0       0
  6882 ;;      Temps:          0       4       0       0       0
  6883 ;;      Totals:         0      14       0       0       0
  6884 ;;Total ram usage:       14 bytes
  6885 ;; Hardware stack levels used:    1
  6886 ;; Hardware stack levels required when called:    1
  6887 ;; This function calls:
  6888 ;;		Nothing
  6889 ;; This function is called by:
  6890 ;;		_sprintf
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           
  6895                           ;psect for function ___fttol
  6896  13E9                     ___fttol:
  6897  13E9                     l2823:	
  6898                           ;incstack = 0
  6899                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6900                           
  6901  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  6902  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  6903  13EB  0848               	movf	___fttol@f1,w
  6904  13EC  00CC               	movwf	??___fttol
  6905  13ED  0849               	movf	___fttol@f1+1,w
  6906  13EE  00CD               	movwf	??___fttol+1
  6907  13EF  084A               	movf	___fttol@f1+2,w
  6908  13F0  00CE               	movwf	??___fttol+2
  6909  13F1  1003               	clrc
  6910  13F2  0D4D               	rlf	??___fttol+1,w
  6911  13F3  0D4E               	rlf	??___fttol+2,w
  6912  13F4  00CF               	movwf	??___fttol+3
  6913  13F5  084F               	movf	??___fttol+3,w
  6914  13F6  00D5               	movwf	___fttol@exp1
  6915  13F7  0855               	movf	___fttol@exp1,w
  6916  13F8  1D03               	btfss	3,2
  6917  13F9  2BFB               	goto	u3641
  6918  13FA  2BFC               	goto	u3640
  6919  13FB                     u3641:
  6920  13FB  2C05               	goto	l2829
  6921  13FC                     u3640:
  6922  13FC                     l2825:
  6923  13FC  3000               	movlw	0
  6924  13FD  00CB               	movwf	?___fttol+3
  6925  13FE  3000               	movlw	0
  6926  13FF  00CA               	movwf	?___fttol+2
  6927  1400  3000               	movlw	0
  6928  1401  00C9               	movwf	?___fttol+1
  6929  1402  3000               	movlw	0
  6930  1403  00C8               	movwf	?___fttol
  6931  1404  2C74               	goto	l807
  6932  1405                     l2829:
  6933  1405  0848               	movf	___fttol@f1,w
  6934  1406  00CC               	movwf	??___fttol
  6935  1407  0849               	movf	___fttol@f1+1,w
  6936  1408  00CD               	movwf	??___fttol+1
  6937  1409  084A               	movf	___fttol@f1+2,w
  6938  140A  00CE               	movwf	??___fttol+2
  6939  140B  3017               	movlw	23
  6940  140C                     u3655:
  6941  140C  1003               	clrc
  6942  140D  0CCE               	rrf	??___fttol+2,f
  6943  140E  0CCD               	rrf	??___fttol+1,f
  6944  140F  0CCC               	rrf	??___fttol,f
  6945  1410                     u3650:
  6946  1410  3EFF               	addlw	-1
  6947  1411  1D03               	skipz
  6948  1412  2C0C               	goto	u3655
  6949  1413  084C               	movf	??___fttol,w
  6950  1414  00CF               	movwf	??___fttol+3
  6951  1415  084F               	movf	??___fttol+3,w
  6952  1416  00D0               	movwf	___fttol@sign1
  6953  1417                     l2831:
  6954  1417  17C9               	bsf	___fttol@f1+1,7
  6955  1418                     l2833:
  6956  1418  30FF               	movlw	255
  6957  1419  05C8               	andwf	___fttol@f1,f
  6958  141A  30FF               	movlw	255
  6959  141B  05C9               	andwf	___fttol@f1+1,f
  6960  141C  3000               	movlw	0
  6961  141D  05CA               	andwf	___fttol@f1+2,f
  6962  141E                     l2835:
  6963  141E  0848               	movf	___fttol@f1,w
  6964  141F  00D1               	movwf	___fttol@lval
  6965  1420  0849               	movf	___fttol@f1+1,w
  6966  1421  00D2               	movwf	___fttol@lval+1
  6967  1422  084A               	movf	___fttol@f1+2,w
  6968  1423  00D3               	movwf	___fttol@lval+2
  6969  1424  01D4               	clrf	___fttol@lval+3
  6970  1425                     l2837:
  6971  1425  308E               	movlw	142
  6972  1426  02D5               	subwf	___fttol@exp1,f
  6973  1427                     l2839:
  6974  1427  1FD5               	btfss	___fttol@exp1,7
  6975  1428  2C2A               	goto	u3661
  6976  1429  2C2B               	goto	u3660
  6977  142A                     u3661:
  6978  142A  2C45               	goto	l2849
  6979  142B                     u3660:
  6980  142B                     l2841:
  6981  142B  0855               	movf	___fttol@exp1,w
  6982  142C  3A80               	xorlw	128
  6983  142D  3E8F               	addlw	143
  6984  142E  1803               	skipnc
  6985  142F  2C31               	goto	u3671
  6986  1430  2C32               	goto	u3670
  6987  1431                     u3671:
  6988  1431  2C33               	goto	l2847
  6989  1432                     u3670:
  6990  1432  2BFC               	goto	l2825
  6991  1433                     l2847:
  6992  1433  3001               	movlw	1
  6993  1434                     u3685:
  6994  1434  1003               	clrc
  6995  1435  0CD4               	rrf	___fttol@lval+3,f
  6996  1436  0CD3               	rrf	___fttol@lval+2,f
  6997  1437  0CD2               	rrf	___fttol@lval+1,f
  6998  1438  0CD1               	rrf	___fttol@lval,f
  6999  1439  3EFF               	addlw	-1
  7000  143A  1D03               	skipz
  7001  143B  2C34               	goto	u3685
  7002  143C  3001               	movlw	1
  7003  143D  00CC               	movwf	??___fttol
  7004  143E  084C               	movf	??___fttol,w
  7005  143F  07D5               	addwf	___fttol@exp1,f
  7006  1440  1D03               	btfss	3,2
  7007  1441  2C43               	goto	u3691
  7008  1442  2C44               	goto	u3690
  7009  1443                     u3691:
  7010  1443  2C33               	goto	l2847
  7011  1444                     u3690:
  7012  1444  2C5C               	goto	l2857
  7013  1445                     l2849:
  7014  1445  3018               	movlw	24
  7015  1446  0255               	subwf	___fttol@exp1,w
  7016  1447  1C03               	skipc
  7017  1448  2C4A               	goto	u3701
  7018  1449  2C4B               	goto	u3700
  7019  144A                     u3701:
  7020  144A  2C57               	goto	l814
  7021  144B                     u3700:
  7022  144B  2BFC               	goto	l2825
  7023  144C                     l2855:
  7024  144C  3001               	movlw	1
  7025  144D  00CC               	movwf	??___fttol
  7026  144E                     u3715:
  7027  144E  1003               	clrc
  7028  144F  0DD1               	rlf	___fttol@lval,f
  7029  1450  0DD2               	rlf	___fttol@lval+1,f
  7030  1451  0DD3               	rlf	___fttol@lval+2,f
  7031  1452  0DD4               	rlf	___fttol@lval+3,f
  7032  1453  0BCC               	decfsz	??___fttol,f
  7033  1454  2C4E               	goto	u3715
  7034  1455  3001               	movlw	1
  7035  1456  02D5               	subwf	___fttol@exp1,f
  7036  1457                     l814:
  7037  1457  0855               	movf	___fttol@exp1,w
  7038  1458  1D03               	btfss	3,2
  7039  1459  2C5B               	goto	u3721
  7040  145A  2C5C               	goto	u3720
  7041  145B                     u3721:
  7042  145B  2C4C               	goto	l2855
  7043  145C                     u3720:
  7044  145C                     l2857:
  7045  145C  0850               	movf	___fttol@sign1,w
  7046  145D  1903               	btfsc	3,2
  7047  145E  2C60               	goto	u3731
  7048  145F  2C61               	goto	u3730
  7049  1460                     u3731:
  7050  1460  2C6C               	goto	l2861
  7051  1461                     u3730:
  7052  1461                     l2859:
  7053  1461  09D1               	comf	___fttol@lval,f
  7054  1462  09D2               	comf	___fttol@lval+1,f
  7055  1463  09D3               	comf	___fttol@lval+2,f
  7056  1464  09D4               	comf	___fttol@lval+3,f
  7057  1465  0AD1               	incf	___fttol@lval,f
  7058  1466  1903               	skipnz
  7059  1467  0AD2               	incf	___fttol@lval+1,f
  7060  1468  1903               	skipnz
  7061  1469  0AD3               	incf	___fttol@lval+2,f
  7062  146A  1903               	skipnz
  7063  146B  0AD4               	incf	___fttol@lval+3,f
  7064  146C                     l2861:
  7065  146C  0854               	movf	___fttol@lval+3,w
  7066  146D  00CB               	movwf	?___fttol+3
  7067  146E  0853               	movf	___fttol@lval+2,w
  7068  146F  00CA               	movwf	?___fttol+2
  7069  1470  0852               	movf	___fttol@lval+1,w
  7070  1471  00C9               	movwf	?___fttol+1
  7071  1472  0851               	movf	___fttol@lval,w
  7072  1473  00C8               	movwf	?___fttol
  7073  1474                     l807:
  7074  1474  0008               	return
  7075  1475                     __end_of___fttol:
  7076                           
  7077                           	psect	text33
  7078  1CFB                     __ptext33:	
  7079 ;; *************** function ___ftsub *****************
  7080 ;; Defined at:
  7081 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftsub.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;  f2              3   60[BANK0 ] float 
  7084 ;;  f1              3   63[BANK0 ] float 
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;		None
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  3   60[BANK0 ] float 
  7089 ;; Registers used:
  7090 ;;		wreg, status,2, status,0, pclath, cstack
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7096 ;;      Params:         0       6       0       0       0
  7097 ;;      Locals:         0       0       0       0       0
  7098 ;;      Temps:          0       0       0       0       0
  7099 ;;      Totals:         0       6       0       0       0
  7100 ;;Total ram usage:        6 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:    3
  7103 ;; This function calls:
  7104 ;;		___ftadd
  7105 ;; This function is called by:
  7106 ;;		_sprintf
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           
  7111                           ;psect for function ___ftsub
  7112  1CFB                     ___ftsub:
  7113  1CFB                     l4047:	
  7114                           ;incstack = 0
  7115                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7116                           
  7117  1CFB  1283               	bcf	3,5	;RP0=0, select bank0
  7118  1CFC  1303               	bcf	3,6	;RP1=0, select bank0
  7119  1CFD  085E               	movf	___ftsub@f2+2,w
  7120  1CFE  045D               	iorwf	___ftsub@f2+1,w
  7121  1CFF  045C               	iorwf	___ftsub@f2,w
  7122  1D00  1903               	skipnz
  7123  1D01  2D03               	goto	u5861
  7124  1D02  2D04               	goto	u5860
  7125  1D03                     u5861:
  7126  1D03  2D06               	goto	l4051
  7127  1D04                     u5860:
  7128  1D04                     l4049:
  7129  1D04  3080               	movlw	128
  7130  1D05  06DE               	xorwf	___ftsub@f2+2,f
  7131  1D06                     l4051:
  7132  1D06  085F               	movf	___ftsub@f1,w
  7133  1D07  00CF               	movwf	___ftadd@f1
  7134  1D08  0860               	movf	___ftsub@f1+1,w
  7135  1D09  00D0               	movwf	___ftadd@f1+1
  7136  1D0A  0861               	movf	___ftsub@f1+2,w
  7137  1D0B  00D1               	movwf	___ftadd@f1+2
  7138  1D0C  085C               	movf	___ftsub@f2,w
  7139  1D0D  00D2               	movwf	___ftadd@f2
  7140  1D0E  085D               	movf	___ftsub@f2+1,w
  7141  1D0F  00D3               	movwf	___ftadd@f2+1
  7142  1D10  085E               	movf	___ftsub@f2+2,w
  7143  1D11  00D4               	movwf	___ftadd@f2+2
  7144  1D12  120A  118A  2667  160A  158A  	fcall	___ftadd
  7145  1D17  1283               	bcf	3,5	;RP0=0, select bank0
  7146  1D18  1303               	bcf	3,6	;RP1=0, select bank0
  7147  1D19  084F               	movf	?___ftadd,w
  7148  1D1A  00DC               	movwf	?___ftsub
  7149  1D1B  0850               	movf	?___ftadd+1,w
  7150  1D1C  00DD               	movwf	?___ftsub+1
  7151  1D1D  0851               	movf	?___ftadd+2,w
  7152  1D1E  00DE               	movwf	?___ftsub+2
  7153  1D1F                     l803:
  7154  1D1F  0008               	return
  7155  1D20                     __end_of___ftsub:
  7156                           
  7157                           	psect	text34
  7158  0667                     __ptext34:	
  7159 ;; *************** function ___ftadd *****************
  7160 ;; Defined at:
  7161 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftadd.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;  f1              3   47[BANK0 ] float 
  7164 ;;  f2              3   50[BANK0 ] float 
  7165 ;; Auto vars:     Size  Location     Type
  7166 ;;  exp1            1   59[BANK0 ] unsigned char 
  7167 ;;  exp2            1   58[BANK0 ] unsigned char 
  7168 ;;  sign            1   57[BANK0 ] unsigned char 
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  3   47[BANK0 ] float 
  7171 ;; Registers used:
  7172 ;;		wreg, status,2, status,0, pclath, cstack
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7178 ;;      Params:         0       6       0       0       0
  7179 ;;      Locals:         0       3       0       0       0
  7180 ;;      Temps:          0       4       0       0       0
  7181 ;;      Totals:         0      13       0       0       0
  7182 ;;Total ram usage:       13 bytes
  7183 ;; Hardware stack levels used:    1
  7184 ;; Hardware stack levels required when called:    2
  7185 ;; This function calls:
  7186 ;;		___ftpack
  7187 ;; This function is called by:
  7188 ;;		_sprintf
  7189 ;;		___ftsub
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           
  7194                           ;psect for function ___ftadd
  7195  0667                     ___ftadd:
  7196  0667                     l3635:	
  7197                           ;incstack = 0
  7198                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7199                           
  7200  0667  1283               	bcf	3,5	;RP0=0, select bank0
  7201  0668  1303               	bcf	3,6	;RP1=0, select bank0
  7202  0669  084F               	movf	___ftadd@f1,w
  7203  066A  00D5               	movwf	??___ftadd
  7204  066B  0850               	movf	___ftadd@f1+1,w
  7205  066C  00D6               	movwf	??___ftadd+1
  7206  066D  0851               	movf	___ftadd@f1+2,w
  7207  066E  00D7               	movwf	??___ftadd+2
  7208  066F  1003               	clrc
  7209  0670  0D56               	rlf	??___ftadd+1,w
  7210  0671  0D57               	rlf	??___ftadd+2,w
  7211  0672  00D8               	movwf	??___ftadd+3
  7212  0673  0858               	movf	??___ftadd+3,w
  7213  0674  00DB               	movwf	___ftadd@exp1
  7214  0675  0852               	movf	___ftadd@f2,w
  7215  0676  00D5               	movwf	??___ftadd
  7216  0677  0853               	movf	___ftadd@f2+1,w
  7217  0678  00D6               	movwf	??___ftadd+1
  7218  0679  0854               	movf	___ftadd@f2+2,w
  7219  067A  00D7               	movwf	??___ftadd+2
  7220  067B  1003               	clrc
  7221  067C  0D56               	rlf	??___ftadd+1,w
  7222  067D  0D57               	rlf	??___ftadd+2,w
  7223  067E  00D8               	movwf	??___ftadd+3
  7224  067F  0858               	movf	??___ftadd+3,w
  7225  0680  00DA               	movwf	___ftadd@exp2
  7226  0681  085B               	movf	___ftadd@exp1,w
  7227  0682  1903               	btfsc	3,2
  7228  0683  2E85               	goto	u4891
  7229  0684  2E86               	goto	u4890
  7230  0685                     u4891:
  7231  0685  2E96               	goto	l3641
  7232  0686                     u4890:
  7233  0686                     l3637:
  7234  0686  085A               	movf	___ftadd@exp2,w
  7235  0687  025B               	subwf	___ftadd@exp1,w
  7236  0688  1803               	skipnc
  7237  0689  2E8B               	goto	u4901
  7238  068A  2E8C               	goto	u4900
  7239  068B                     u4901:
  7240  068B  2E9D               	goto	l3645
  7241  068C                     u4900:
  7242  068C                     l3639:
  7243  068C  085A               	movf	___ftadd@exp2,w
  7244  068D  00D5               	movwf	??___ftadd
  7245  068E  085B               	movf	___ftadd@exp1,w
  7246  068F  02D5               	subwf	??___ftadd,f
  7247  0690  3019               	movlw	25
  7248  0691  0255               	subwf	??___ftadd,w
  7249  0692  1C03               	skipc
  7250  0693  2E95               	goto	u4911
  7251  0694  2E96               	goto	u4910
  7252  0695                     u4911:
  7253  0695  2E9D               	goto	l3645
  7254  0696                     u4910:
  7255  0696                     l3641:
  7256  0696  0852               	movf	___ftadd@f2,w
  7257  0697  00CF               	movwf	?___ftadd
  7258  0698  0853               	movf	___ftadd@f2+1,w
  7259  0699  00D0               	movwf	?___ftadd+1
  7260  069A  0854               	movf	___ftadd@f2+2,w
  7261  069B  00D1               	movwf	?___ftadd+2
  7262  069C  2F9C               	goto	l723
  7263  069D                     l3645:
  7264  069D  085A               	movf	___ftadd@exp2,w
  7265  069E  1903               	btfsc	3,2
  7266  069F  2EA1               	goto	u4921
  7267  06A0  2EA2               	goto	u4920
  7268  06A1                     u4921:
  7269  06A1  2EB2               	goto	l726
  7270  06A2                     u4920:
  7271  06A2                     l3647:
  7272  06A2  085B               	movf	___ftadd@exp1,w
  7273  06A3  025A               	subwf	___ftadd@exp2,w
  7274  06A4  1803               	skipnc
  7275  06A5  2EA7               	goto	u4931
  7276  06A6  2EA8               	goto	u4930
  7277  06A7                     u4931:
  7278  06A7  2EB3               	goto	l3651
  7279  06A8                     u4930:
  7280  06A8                     l3649:
  7281  06A8  085B               	movf	___ftadd@exp1,w
  7282  06A9  00D5               	movwf	??___ftadd
  7283  06AA  085A               	movf	___ftadd@exp2,w
  7284  06AB  02D5               	subwf	??___ftadd,f
  7285  06AC  3019               	movlw	25
  7286  06AD  0255               	subwf	??___ftadd,w
  7287  06AE  1C03               	skipc
  7288  06AF  2EB1               	goto	u4941
  7289  06B0  2EB2               	goto	u4940
  7290  06B1                     u4941:
  7291  06B1  2EB3               	goto	l3651
  7292  06B2                     u4940:
  7293  06B2                     l726:
  7294  06B2  2F9C               	goto	l723
  7295  06B3                     l3651:
  7296  06B3  3006               	movlw	6
  7297  06B4  00D5               	movwf	??___ftadd
  7298  06B5  0855               	movf	??___ftadd,w
  7299  06B6  00D9               	movwf	___ftadd@sign
  7300  06B7                     l3653:
  7301  06B7  1FD1               	btfss	___ftadd@f1+2,7
  7302  06B8  2EBA               	goto	u4951
  7303  06B9  2EBB               	goto	u4950
  7304  06BA                     u4951:
  7305  06BA  2EBC               	goto	l727
  7306  06BB                     u4950:
  7307  06BB                     l3655:
  7308  06BB  17D9               	bsf	___ftadd@sign,7
  7309  06BC                     l727:
  7310  06BC  1FD4               	btfss	___ftadd@f2+2,7
  7311  06BD  2EBF               	goto	u4961
  7312  06BE  2EC0               	goto	u4960
  7313  06BF                     u4961:
  7314  06BF  2EC1               	goto	l728
  7315  06C0                     u4960:
  7316  06C0                     l3657:
  7317  06C0  1759               	bsf	___ftadd@sign,6
  7318  06C1                     l728:
  7319  06C1  17D0               	bsf	___ftadd@f1+1,7
  7320  06C2                     l3659:
  7321  06C2  30FF               	movlw	255
  7322  06C3  05CF               	andwf	___ftadd@f1,f
  7323  06C4  30FF               	movlw	255
  7324  06C5  05D0               	andwf	___ftadd@f1+1,f
  7325  06C6  3000               	movlw	0
  7326  06C7  05D1               	andwf	___ftadd@f1+2,f
  7327  06C8                     l3661:
  7328  06C8  17D3               	bsf	___ftadd@f2+1,7
  7329  06C9  30FF               	movlw	255
  7330  06CA  05D2               	andwf	___ftadd@f2,f
  7331  06CB  30FF               	movlw	255
  7332  06CC  05D3               	andwf	___ftadd@f2+1,f
  7333  06CD  3000               	movlw	0
  7334  06CE  05D4               	andwf	___ftadd@f2+2,f
  7335  06CF  085A               	movf	___ftadd@exp2,w
  7336  06D0  025B               	subwf	___ftadd@exp1,w
  7337  06D1  1803               	skipnc
  7338  06D2  2ED4               	goto	u4971
  7339  06D3  2ED5               	goto	u4970
  7340  06D4                     u4971:
  7341  06D4  2F01               	goto	l3673
  7342  06D5                     u4970:
  7343  06D5                     l3663:
  7344  06D5  3001               	movlw	1
  7345  06D6                     u4985:
  7346  06D6  1003               	clrc
  7347  06D7  0DD2               	rlf	___ftadd@f2,f
  7348  06D8  0DD3               	rlf	___ftadd@f2+1,f
  7349  06D9  0DD4               	rlf	___ftadd@f2+2,f
  7350  06DA  3EFF               	addlw	-1
  7351  06DB  1D03               	skipz
  7352  06DC  2ED6               	goto	u4985
  7353  06DD  3001               	movlw	1
  7354  06DE  02DA               	subwf	___ftadd@exp2,f
  7355  06DF                     l3665:
  7356  06DF  085A               	movf	___ftadd@exp2,w
  7357  06E0  065B               	xorwf	___ftadd@exp1,w
  7358  06E1  1903               	skipnz
  7359  06E2  2EE4               	goto	u4991
  7360  06E3  2EE5               	goto	u4990
  7361  06E4                     u4991:
  7362  06E4  2EFA               	goto	l3671
  7363  06E5                     u4990:
  7364  06E5                     l3667:
  7365  06E5  3001               	movlw	1
  7366  06E6  02D9               	subwf	___ftadd@sign,f
  7367  06E7  0859               	movf	___ftadd@sign,w
  7368  06E8  3907               	andlw	7
  7369  06E9  1D03               	btfss	3,2
  7370  06EA  2EEC               	goto	u5001
  7371  06EB  2EED               	goto	u5000
  7372  06EC                     u5001:
  7373  06EC  2ED5               	goto	l3663
  7374  06ED                     u5000:
  7375  06ED  2EFA               	goto	l3671
  7376  06EE                     l3669:
  7377  06EE  3001               	movlw	1
  7378  06EF                     u5015:
  7379  06EF  1003               	clrc
  7380  06F0  0CD1               	rrf	___ftadd@f1+2,f
  7381  06F1  0CD0               	rrf	___ftadd@f1+1,f
  7382  06F2  0CCF               	rrf	___ftadd@f1,f
  7383  06F3  3EFF               	addlw	-1
  7384  06F4  1D03               	skipz
  7385  06F5  2EEF               	goto	u5015
  7386  06F6  3001               	movlw	1
  7387  06F7  00D5               	movwf	??___ftadd
  7388  06F8  0855               	movf	??___ftadd,w
  7389  06F9  07DB               	addwf	___ftadd@exp1,f
  7390  06FA                     l3671:
  7391  06FA  085B               	movf	___ftadd@exp1,w
  7392  06FB  065A               	xorwf	___ftadd@exp2,w
  7393  06FC  1D03               	skipz
  7394  06FD  2EFF               	goto	u5021
  7395  06FE  2F00               	goto	u5020
  7396  06FF                     u5021:
  7397  06FF  2EEE               	goto	l3669
  7398  0700                     u5020:
  7399  0700  2F32               	goto	l737
  7400  0701                     l3673:
  7401  0701  085B               	movf	___ftadd@exp1,w
  7402  0702  025A               	subwf	___ftadd@exp2,w
  7403  0703  1803               	skipnc
  7404  0704  2F06               	goto	u5031
  7405  0705  2F07               	goto	u5030
  7406  0706                     u5031:
  7407  0706  2F32               	goto	l737
  7408  0707                     u5030:
  7409  0707                     l3675:
  7410  0707  3001               	movlw	1
  7411  0708                     u5045:
  7412  0708  1003               	clrc
  7413  0709  0DCF               	rlf	___ftadd@f1,f
  7414  070A  0DD0               	rlf	___ftadd@f1+1,f
  7415  070B  0DD1               	rlf	___ftadd@f1+2,f
  7416  070C  3EFF               	addlw	-1
  7417  070D  1D03               	skipz
  7418  070E  2F08               	goto	u5045
  7419  070F  3001               	movlw	1
  7420  0710  02DB               	subwf	___ftadd@exp1,f
  7421  0711                     l3677:
  7422  0711  085A               	movf	___ftadd@exp2,w
  7423  0712  065B               	xorwf	___ftadd@exp1,w
  7424  0713  1903               	skipnz
  7425  0714  2F16               	goto	u5051
  7426  0715  2F17               	goto	u5050
  7427  0716                     u5051:
  7428  0716  2F2C               	goto	l3683
  7429  0717                     u5050:
  7430  0717                     l3679:
  7431  0717  3001               	movlw	1
  7432  0718  02D9               	subwf	___ftadd@sign,f
  7433  0719  0859               	movf	___ftadd@sign,w
  7434  071A  3907               	andlw	7
  7435  071B  1D03               	btfss	3,2
  7436  071C  2F1E               	goto	u5061
  7437  071D  2F1F               	goto	u5060
  7438  071E                     u5061:
  7439  071E  2F07               	goto	l3675
  7440  071F                     u5060:
  7441  071F  2F2C               	goto	l3683
  7442  0720                     l3681:
  7443  0720  3001               	movlw	1
  7444  0721                     u5075:
  7445  0721  1003               	clrc
  7446  0722  0CD4               	rrf	___ftadd@f2+2,f
  7447  0723  0CD3               	rrf	___ftadd@f2+1,f
  7448  0724  0CD2               	rrf	___ftadd@f2,f
  7449  0725  3EFF               	addlw	-1
  7450  0726  1D03               	skipz
  7451  0727  2F21               	goto	u5075
  7452  0728  3001               	movlw	1
  7453  0729  00D5               	movwf	??___ftadd
  7454  072A  0855               	movf	??___ftadd,w
  7455  072B  07DA               	addwf	___ftadd@exp2,f
  7456  072C                     l3683:
  7457  072C  085B               	movf	___ftadd@exp1,w
  7458  072D  065A               	xorwf	___ftadd@exp2,w
  7459  072E  1D03               	skipz
  7460  072F  2F31               	goto	u5081
  7461  0730  2F32               	goto	u5080
  7462  0731                     u5081:
  7463  0731  2F20               	goto	l3681
  7464  0732                     u5080:
  7465  0732                     l737:
  7466  0732  1FD9               	btfss	___ftadd@sign,7
  7467  0733  2F35               	goto	u5091
  7468  0734  2F36               	goto	u5090
  7469  0735                     u5091:
  7470  0735  2F46               	goto	l3687
  7471  0736                     u5090:
  7472  0736                     l3685:
  7473  0736  30FF               	movlw	255
  7474  0737  06CF               	xorwf	___ftadd@f1,f
  7475  0738  30FF               	movlw	255
  7476  0739  06D0               	xorwf	___ftadd@f1+1,f
  7477  073A  30FF               	movlw	255
  7478  073B  06D1               	xorwf	___ftadd@f1+2,f
  7479  073C  3001               	movlw	1
  7480  073D  07CF               	addwf	___ftadd@f1,f
  7481  073E  3000               	movlw	0
  7482  073F  1803               	skipnc
  7483  0740  3001               	movlw	1
  7484  0741  07D0               	addwf	___ftadd@f1+1,f
  7485  0742  3000               	movlw	0
  7486  0743  1803               	skipnc
  7487  0744  3001               	movlw	1
  7488  0745  07D1               	addwf	___ftadd@f1+2,f
  7489  0746                     l3687:
  7490  0746  1F59               	btfss	___ftadd@sign,6
  7491  0747  2F49               	goto	u5101
  7492  0748  2F4A               	goto	u5100
  7493  0749                     u5101:
  7494  0749  2F5A               	goto	l3691
  7495  074A                     u5100:
  7496  074A                     l3689:
  7497  074A  30FF               	movlw	255
  7498  074B  06D2               	xorwf	___ftadd@f2,f
  7499  074C  30FF               	movlw	255
  7500  074D  06D3               	xorwf	___ftadd@f2+1,f
  7501  074E  30FF               	movlw	255
  7502  074F  06D4               	xorwf	___ftadd@f2+2,f
  7503  0750  3001               	movlw	1
  7504  0751  07D2               	addwf	___ftadd@f2,f
  7505  0752  3000               	movlw	0
  7506  0753  1803               	skipnc
  7507  0754  3001               	movlw	1
  7508  0755  07D3               	addwf	___ftadd@f2+1,f
  7509  0756  3000               	movlw	0
  7510  0757  1803               	skipnc
  7511  0758  3001               	movlw	1
  7512  0759  07D4               	addwf	___ftadd@f2+2,f
  7513  075A                     l3691:
  7514  075A  01D9               	clrf	___ftadd@sign
  7515  075B                     l3693:
  7516  075B  084F               	movf	___ftadd@f1,w
  7517  075C  07D2               	addwf	___ftadd@f2,f
  7518  075D  0850               	movf	___ftadd@f1+1,w
  7519  075E  1103               	clrz
  7520  075F  1803               	skipnc
  7521  0760  0A50               	incf	___ftadd@f1+1,w
  7522  0761  1903               	skipnz
  7523  0762  2F64               	goto	u5111
  7524  0763  07D3               	addwf	___ftadd@f2+1,f
  7525  0764                     u5111:
  7526  0764  0851               	movf	___ftadd@f1+2,w
  7527  0765  1103               	clrz
  7528  0766  1803               	skipnc
  7529  0767  0A51               	incf	___ftadd@f1+2,w
  7530  0768  1903               	skipnz
  7531  0769  2F6B               	goto	u5112
  7532  076A  07D4               	addwf	___ftadd@f2+2,f
  7533  076B                     u5112:
  7534  076B                     l3695:
  7535  076B  1FD4               	btfss	___ftadd@f2+2,7
  7536  076C  2F6E               	goto	u5121
  7537  076D  2F6F               	goto	u5120
  7538  076E                     u5121:
  7539  076E  2F81               	goto	l3701
  7540  076F                     u5120:
  7541  076F                     l3697:
  7542  076F  30FF               	movlw	255
  7543  0770  06D2               	xorwf	___ftadd@f2,f
  7544  0771  30FF               	movlw	255
  7545  0772  06D3               	xorwf	___ftadd@f2+1,f
  7546  0773  30FF               	movlw	255
  7547  0774  06D4               	xorwf	___ftadd@f2+2,f
  7548  0775  3001               	movlw	1
  7549  0776  07D2               	addwf	___ftadd@f2,f
  7550  0777  3000               	movlw	0
  7551  0778  1803               	skipnc
  7552  0779  3001               	movlw	1
  7553  077A  07D3               	addwf	___ftadd@f2+1,f
  7554  077B  3000               	movlw	0
  7555  077C  1803               	skipnc
  7556  077D  3001               	movlw	1
  7557  077E  07D4               	addwf	___ftadd@f2+2,f
  7558  077F                     l3699:
  7559  077F  01D9               	clrf	___ftadd@sign
  7560  0780  0AD9               	incf	___ftadd@sign,f
  7561  0781                     l3701:
  7562  0781  0852               	movf	___ftadd@f2,w
  7563  0782  00F3               	movwf	___ftpack@arg
  7564  0783  0853               	movf	___ftadd@f2+1,w
  7565  0784  00F4               	movwf	___ftpack@arg+1
  7566  0785  0854               	movf	___ftadd@f2+2,w
  7567  0786  00F5               	movwf	___ftpack@arg+2
  7568  0787  085B               	movf	___ftadd@exp1,w
  7569  0788  00D5               	movwf	??___ftadd
  7570  0789  0855               	movf	??___ftadd,w
  7571  078A  00F6               	movwf	___ftpack@exp
  7572  078B  0859               	movf	___ftadd@sign,w
  7573  078C  00D6               	movwf	??___ftadd+1
  7574  078D  0856               	movf	??___ftadd+1,w
  7575  078E  00F7               	movwf	___ftpack@sign
  7576  078F  160A  118A  2367  120A  118A  	fcall	___ftpack
  7577  0794  0873               	movf	?___ftpack,w
  7578  0795  1283               	bcf	3,5	;RP0=0, select bank0
  7579  0796  1303               	bcf	3,6	;RP1=0, select bank0
  7580  0797  00CF               	movwf	?___ftadd
  7581  0798  0874               	movf	?___ftpack+1,w
  7582  0799  00D0               	movwf	?___ftadd+1
  7583  079A  0875               	movf	?___ftpack+2,w
  7584  079B  00D1               	movwf	?___ftadd+2
  7585  079C                     l723:
  7586  079C  0008               	return
  7587  079D                     __end_of___ftadd:
  7588                           
  7589                           	psect	text35
  7590  1C8D                     __ptext35:	
  7591 ;; *************** function ___ftneg *****************
  7592 ;; Defined at:
  7593 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftneg.c"
  7594 ;; Parameters:    Size  Location     Type
  7595 ;;  f1              3    3[COMMON] float 
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;		None
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  3    3[COMMON] float 
  7600 ;; Registers used:
  7601 ;;		wreg
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7607 ;;      Params:         3       0       0       0       0
  7608 ;;      Locals:         0       0       0       0       0
  7609 ;;      Temps:          0       0       0       0       0
  7610 ;;      Totals:         3       0       0       0       0
  7611 ;;Total ram usage:        3 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    1
  7614 ;; This function calls:
  7615 ;;		Nothing
  7616 ;; This function is called by:
  7617 ;;		_sprintf
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621                           
  7622                           ;psect for function ___ftneg
  7623  1C8D                     ___ftneg:
  7624  1C8D                     l2807:	
  7625                           ;incstack = 0
  7626                           ; Regs used in ___ftneg: [wreg]
  7627                           
  7628  1C8D  0875               	movf	___ftneg@f1+2,w
  7629  1C8E  0474               	iorwf	___ftneg@f1+1,w
  7630  1C8F  0473               	iorwf	___ftneg@f1,w
  7631  1C90  1903               	skipnz
  7632  1C91  2C93               	goto	u3621
  7633  1C92  2C94               	goto	u3620
  7634  1C93                     u3621:
  7635  1C93  2C96               	goto	l2811
  7636  1C94                     u3620:
  7637  1C94                     l2809:
  7638  1C94  3080               	movlw	128
  7639  1C95  06F5               	xorwf	___ftneg@f1+2,f
  7640  1C96                     l2811:
  7641  1C96                     l797:
  7642  1C96  0008               	return
  7643  1C97                     __end_of___ftneg:
  7644                           
  7645                           	psect	text36
  7646  1EAE                     __ptext36:	
  7647 ;; *************** function ___ftge *****************
  7648 ;; Defined at:
  7649 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftge.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  ff1             3    0[BANK0 ] float 
  7652 ;;  ff2             3    3[BANK0 ] float 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;		None
  7655 ;; Return value:  Size  Location     Type
  7656 ;;		None               void
  7657 ;; Registers used:
  7658 ;;		wreg, status,2, status,0
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7664 ;;      Params:         0       6       0       0       0
  7665 ;;      Locals:         0       0       0       0       0
  7666 ;;      Temps:          0       0       0       0       0
  7667 ;;      Totals:         0       6       0       0       0
  7668 ;;Total ram usage:        6 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:    1
  7671 ;; This function calls:
  7672 ;;		Nothing
  7673 ;; This function is called by:
  7674 ;;		_sprintf
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           
  7679                           ;psect for function ___ftge
  7680  1EAE                     ___ftge:
  7681  1EAE                     l4027:	
  7682                           ;incstack = 0
  7683                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7684                           
  7685  1EAE  1283               	bcf	3,5	;RP0=0, select bank0
  7686  1EAF  1303               	bcf	3,6	;RP1=0, select bank0
  7687  1EB0  1FA2               	btfss	___ftge@ff1+2,7
  7688  1EB1  2EB3               	goto	u5831
  7689  1EB2  2EB4               	goto	u5830
  7690  1EB3                     u5831:
  7691  1EB3  2EC1               	goto	l4031
  7692  1EB4                     u5830:
  7693  1EB4                     l4029:
  7694  1EB4  0820               	movf	___ftge@ff1,w
  7695  1EB5  3C00               	sublw	0
  7696  1EB6  00A0               	movwf	___ftge@ff1
  7697  1EB7  0821               	movf	___ftge@ff1+1,w
  7698  1EB8  1C03               	skipc
  7699  1EB9  0F21               	incfsz	___ftge@ff1+1,w
  7700  1EBA  3C00               	sublw	0
  7701  1EBB  00A1               	movwf	___ftge@ff1+1
  7702  1EBC  0822               	movf	___ftge@ff1+2,w
  7703  1EBD  1C03               	skipc
  7704  1EBE  0F22               	incfsz	___ftge@ff1+2,w
  7705  1EBF  3C80               	sublw	128
  7706  1EC0  00A2               	movwf	___ftge@ff1+2
  7707  1EC1                     l4031:
  7708  1EC1  1FA5               	btfss	___ftge@ff2+2,7
  7709  1EC2  2EC4               	goto	u5841
  7710  1EC3  2EC5               	goto	u5840
  7711  1EC4                     u5841:
  7712  1EC4  2ED2               	goto	l4035
  7713  1EC5                     u5840:
  7714  1EC5                     l4033:
  7715  1EC5  0823               	movf	___ftge@ff2,w
  7716  1EC6  3C00               	sublw	0
  7717  1EC7  00A3               	movwf	___ftge@ff2
  7718  1EC8  0824               	movf	___ftge@ff2+1,w
  7719  1EC9  1C03               	skipc
  7720  1ECA  0F24               	incfsz	___ftge@ff2+1,w
  7721  1ECB  3C00               	sublw	0
  7722  1ECC  00A4               	movwf	___ftge@ff2+1
  7723  1ECD  0825               	movf	___ftge@ff2+2,w
  7724  1ECE  1C03               	skipc
  7725  1ECF  0F25               	incfsz	___ftge@ff2+2,w
  7726  1ED0  3C80               	sublw	128
  7727  1ED1  00A5               	movwf	___ftge@ff2+2
  7728  1ED2                     l4035:
  7729  1ED2  3080               	movlw	128
  7730  1ED3  06A2               	xorwf	___ftge@ff1+2,f
  7731  1ED4                     l4037:
  7732  1ED4  3080               	movlw	128
  7733  1ED5  06A5               	xorwf	___ftge@ff2+2,f
  7734  1ED6                     l4039:
  7735  1ED6  0825               	movf	___ftge@ff2+2,w
  7736  1ED7  0222               	subwf	___ftge@ff1+2,w
  7737  1ED8  1D03               	skipz
  7738  1ED9  2EE0               	goto	u5855
  7739  1EDA  0824               	movf	___ftge@ff2+1,w
  7740  1EDB  0221               	subwf	___ftge@ff1+1,w
  7741  1EDC  1D03               	skipz
  7742  1EDD  2EE0               	goto	u5855
  7743  1EDE  0823               	movf	___ftge@ff2,w
  7744  1EDF  0220               	subwf	___ftge@ff1,w
  7745  1EE0                     u5855:
  7746  1EE0  1803               	skipnc
  7747  1EE1  2EE3               	goto	u5851
  7748  1EE2  2EE4               	goto	u5850
  7749  1EE3                     u5851:
  7750  1EE3  2EE6               	goto	l4043
  7751  1EE4                     u5850:
  7752  1EE4                     l4041:
  7753  1EE4  1003               	clrc
  7754  1EE5  2EE7               	goto	l780
  7755  1EE6                     l4043:
  7756  1EE6  1403               	setc
  7757  1EE7                     l780:
  7758  1EE7  0008               	return
  7759  1EE8                     __end_of___ftge:
  7760                           
  7761                           	psect	text37
  7762  1184                     __ptext37:	
  7763 ;; *************** function _ADC_channel2 *****************
  7764 ;; Defined at:
  7765 ;;		line 155 in file "pseudocodigo_lab3.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;		None
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;		None
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  1    wreg      void 
  7772 ;; Registers used:
  7773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7779 ;;      Params:         0       0       0       0       0
  7780 ;;      Locals:         0       0       0       0       0
  7781 ;;      Temps:          0       2       0       0       0
  7782 ;;      Totals:         0       2       0       0       0
  7783 ;;Total ram usage:        2 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; Hardware stack levels required when called:    3
  7786 ;; This function calls:
  7787 ;;		_ADC_Config
  7788 ;;		___awtoft
  7789 ;;		___ftdiv
  7790 ;;		___ftmul
  7791 ;; This function is called by:
  7792 ;;		_main
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           
  7797                           ;psect for function _ADC_channel2
  7798  1184                     _ADC_channel2:
  7799  1184                     l4473:	
  7800                           ;incstack = 0
  7801                           ; Regs used in _ADC_channel2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7802                           
  7803                           
  7804                           ;pseudocodigo_lab3.c: 156:     ADC_Config (1);
  7805  1184  3001               	movlw	1
  7806  1185  160A  118A  2475  160A  118A  	fcall	_ADC_Config
  7807  118A                     l4475:
  7808                           
  7809                           ;pseudocodigo_lab3.c: 160:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  7810  118A  3019               	movlw	25
  7811  118B  1283               	bcf	3,5	;RP0=0, select bank0
  7812  118C  1303               	bcf	3,6	;RP1=0, select bank0
  7813  118D  00CF               	movwf	??_ADC_channel2
  7814  118E                     u6727:
  7815  118E  0BCF               	decfsz	??_ADC_channel2,f
  7816  118F  298E               	goto	u6727
  7817  1190  2991               	nop2
  7818  1191                     l4477:
  7819                           
  7820                           ;pseudocodigo_lab3.c: 161:     ADCON0bits.GO = 1;
  7821  1191  1283               	bcf	3,5	;RP0=0, select bank0
  7822  1192  1303               	bcf	3,6	;RP1=0, select bank0
  7823  1193  149F               	bsf	31,1	;volatile
  7824                           
  7825                           ;pseudocodigo_lab3.c: 162:     while (ADCON0bits.GO != 0) {
  7826  1194  29D9               	goto	l4481
  7827  1195                     l4479:
  7828                           
  7829                           ;pseudocodigo_lab3.c: 163:         S2_val = ((ADRESH * 5.0) / 255);
  7830  1195  3000               	movlw	0
  7831  1196  00BF               	movwf	___ftdiv@f2
  7832  1197  307F               	movlw	127
  7833  1198  00C0               	movwf	___ftdiv@f2+1
  7834  1199  3043               	movlw	67
  7835  119A  00C1               	movwf	___ftdiv@f2+2
  7836  119B  3000               	movlw	0
  7837  119C  00AF               	movwf	___ftmul@f1
  7838  119D  30A0               	movlw	160
  7839  119E  00B0               	movwf	___ftmul@f1+1
  7840  119F  3040               	movlw	64
  7841  11A0  00B1               	movwf	___ftmul@f1+2
  7842  11A1  081E               	movf	30,w	;volatile
  7843  11A2  00CF               	movwf	??_ADC_channel2
  7844  11A3  01D0               	clrf	??_ADC_channel2+1
  7845  11A4  084F               	movf	??_ADC_channel2,w
  7846  11A5  00A3               	movwf	___awtoft@c
  7847  11A6  0850               	movf	??_ADC_channel2+1,w
  7848  11A7  00A4               	movwf	___awtoft@c+1
  7849  11A8  160A  158A  256D  160A  118A  	fcall	___awtoft
  7850  11AD  1283               	bcf	3,5	;RP0=0, select bank0
  7851  11AE  1303               	bcf	3,6	;RP1=0, select bank0
  7852  11AF  0823               	movf	?___awtoft,w
  7853  11B0  00B2               	movwf	___ftmul@f2
  7854  11B1  0824               	movf	?___awtoft+1,w
  7855  11B2  00B3               	movwf	___ftmul@f2+1
  7856  11B3  0825               	movf	?___awtoft+2,w
  7857  11B4  00B4               	movwf	___ftmul@f2+2
  7858  11B5  160A  118A  25EE  160A  118A  	fcall	___ftmul
  7859  11BA  1283               	bcf	3,5	;RP0=0, select bank0
  7860  11BB  1303               	bcf	3,6	;RP1=0, select bank0
  7861  11BC  082F               	movf	?___ftmul,w
  7862  11BD  00C2               	movwf	___ftdiv@f1
  7863  11BE  0830               	movf	?___ftmul+1,w
  7864  11BF  00C3               	movwf	___ftdiv@f1+1
  7865  11C0  0831               	movf	?___ftmul+2,w
  7866  11C1  00C4               	movwf	___ftdiv@f1+2
  7867  11C2  120A  158A  2002  160A  118A  	fcall	___ftdiv
  7868  11C7  1283               	bcf	3,5	;RP0=0, select bank0
  7869  11C8  1303               	bcf	3,6	;RP1=0, select bank0
  7870  11C9  083F               	movf	?___ftdiv,w
  7871  11CA  1683               	bsf	3,5	;RP0=1, select bank1
  7872  11CB  1303               	bcf	3,6	;RP1=0, select bank1
  7873  11CC  00C2               	movwf	_S2_val^(0+128)
  7874  11CD  1283               	bcf	3,5	;RP0=0, select bank0
  7875  11CE  1303               	bcf	3,6	;RP1=0, select bank0
  7876  11CF  0840               	movf	?___ftdiv+1,w
  7877  11D0  1683               	bsf	3,5	;RP0=1, select bank1
  7878  11D1  1303               	bcf	3,6	;RP1=0, select bank1
  7879  11D2  00C3               	movwf	(_S2_val+1)^(0+128)
  7880  11D3  1283               	bcf	3,5	;RP0=0, select bank0
  7881  11D4  1303               	bcf	3,6	;RP1=0, select bank0
  7882  11D5  0841               	movf	?___ftdiv+2,w
  7883  11D6  1683               	bsf	3,5	;RP0=1, select bank1
  7884  11D7  1303               	bcf	3,6	;RP1=0, select bank1
  7885  11D8  00C4               	movwf	(_S2_val+2)^(0+128)
  7886  11D9                     l4481:
  7887                           
  7888                           ;pseudocodigo_lab3.c: 162:     while (ADCON0bits.GO != 0) {
  7889  11D9  1283               	bcf	3,5	;RP0=0, select bank0
  7890  11DA  189F               	btfsc	31,1	;volatile
  7891  11DB  29DD               	goto	u6641
  7892  11DC  29DE               	goto	u6640
  7893  11DD                     u6641:
  7894  11DD  2995               	goto	l4479
  7895  11DE                     u6640:
  7896  11DE                     l113:
  7897  11DE  0008               	return
  7898  11DF                     __end_of_ADC_channel2:
  7899                           
  7900                           	psect	text38
  7901  1129                     __ptext38:	
  7902 ;; *************** function _ADC_channel1 *****************
  7903 ;; Defined at:
  7904 ;;		line 141 in file "pseudocodigo_lab3.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;		None
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;		None
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  1    wreg      void 
  7911 ;; Registers used:
  7912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7918 ;;      Params:         0       0       0       0       0
  7919 ;;      Locals:         0       0       0       0       0
  7920 ;;      Temps:          0       2       0       0       0
  7921 ;;      Totals:         0       2       0       0       0
  7922 ;;Total ram usage:        2 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; Hardware stack levels required when called:    3
  7925 ;; This function calls:
  7926 ;;		_ADC_Config
  7927 ;;		___awtoft
  7928 ;;		___ftdiv
  7929 ;;		___ftmul
  7930 ;; This function is called by:
  7931 ;;		_main
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           
  7936                           ;psect for function _ADC_channel1
  7937  1129                     _ADC_channel1:
  7938  1129                     l4463:	
  7939                           ;incstack = 0
  7940                           ; Regs used in _ADC_channel1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7941                           
  7942                           
  7943                           ;pseudocodigo_lab3.c: 142:     ADC_Config (0);
  7944  1129  3000               	movlw	0
  7945  112A  160A  118A  2475  160A  118A  	fcall	_ADC_Config
  7946  112F                     l4465:
  7947                           
  7948                           ;pseudocodigo_lab3.c: 147:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  7949  112F  3019               	movlw	25
  7950  1130  1283               	bcf	3,5	;RP0=0, select bank0
  7951  1131  1303               	bcf	3,6	;RP1=0, select bank0
  7952  1132  00CF               	movwf	??_ADC_channel1
  7953  1133                     u6737:
  7954  1133  0BCF               	decfsz	??_ADC_channel1,f
  7955  1134  2933               	goto	u6737
  7956  1135  2936               	nop2
  7957  1136                     l4467:
  7958                           
  7959                           ;pseudocodigo_lab3.c: 148:     ADCON0bits.GO = 1;
  7960  1136  1283               	bcf	3,5	;RP0=0, select bank0
  7961  1137  1303               	bcf	3,6	;RP1=0, select bank0
  7962  1138  149F               	bsf	31,1	;volatile
  7963                           
  7964                           ;pseudocodigo_lab3.c: 149:     while (ADCON0bits.GO != 0) {
  7965  1139  297E               	goto	l4471
  7966  113A                     l4469:
  7967                           
  7968                           ;pseudocodigo_lab3.c: 150:         S1_val = ((ADRESH * 5.0) / 255);
  7969  113A  3000               	movlw	0
  7970  113B  00BF               	movwf	___ftdiv@f2
  7971  113C  307F               	movlw	127
  7972  113D  00C0               	movwf	___ftdiv@f2+1
  7973  113E  3043               	movlw	67
  7974  113F  00C1               	movwf	___ftdiv@f2+2
  7975  1140  3000               	movlw	0
  7976  1141  00AF               	movwf	___ftmul@f1
  7977  1142  30A0               	movlw	160
  7978  1143  00B0               	movwf	___ftmul@f1+1
  7979  1144  3040               	movlw	64
  7980  1145  00B1               	movwf	___ftmul@f1+2
  7981  1146  081E               	movf	30,w	;volatile
  7982  1147  00CF               	movwf	??_ADC_channel1
  7983  1148  01D0               	clrf	??_ADC_channel1+1
  7984  1149  084F               	movf	??_ADC_channel1,w
  7985  114A  00A3               	movwf	___awtoft@c
  7986  114B  0850               	movf	??_ADC_channel1+1,w
  7987  114C  00A4               	movwf	___awtoft@c+1
  7988  114D  160A  158A  256D  160A  118A  	fcall	___awtoft
  7989  1152  1283               	bcf	3,5	;RP0=0, select bank0
  7990  1153  1303               	bcf	3,6	;RP1=0, select bank0
  7991  1154  0823               	movf	?___awtoft,w
  7992  1155  00B2               	movwf	___ftmul@f2
  7993  1156  0824               	movf	?___awtoft+1,w
  7994  1157  00B3               	movwf	___ftmul@f2+1
  7995  1158  0825               	movf	?___awtoft+2,w
  7996  1159  00B4               	movwf	___ftmul@f2+2
  7997  115A  160A  118A  25EE  160A  118A  	fcall	___ftmul
  7998  115F  1283               	bcf	3,5	;RP0=0, select bank0
  7999  1160  1303               	bcf	3,6	;RP1=0, select bank0
  8000  1161  082F               	movf	?___ftmul,w
  8001  1162  00C2               	movwf	___ftdiv@f1
  8002  1163  0830               	movf	?___ftmul+1,w
  8003  1164  00C3               	movwf	___ftdiv@f1+1
  8004  1165  0831               	movf	?___ftmul+2,w
  8005  1166  00C4               	movwf	___ftdiv@f1+2
  8006  1167  120A  158A  2002  160A  118A  	fcall	___ftdiv
  8007  116C  1283               	bcf	3,5	;RP0=0, select bank0
  8008  116D  1303               	bcf	3,6	;RP1=0, select bank0
  8009  116E  083F               	movf	?___ftdiv,w
  8010  116F  1683               	bsf	3,5	;RP0=1, select bank1
  8011  1170  1303               	bcf	3,6	;RP1=0, select bank1
  8012  1171  00C5               	movwf	_S1_val^(0+128)
  8013  1172  1283               	bcf	3,5	;RP0=0, select bank0
  8014  1173  1303               	bcf	3,6	;RP1=0, select bank0
  8015  1174  0840               	movf	?___ftdiv+1,w
  8016  1175  1683               	bsf	3,5	;RP0=1, select bank1
  8017  1176  1303               	bcf	3,6	;RP1=0, select bank1
  8018  1177  00C6               	movwf	(_S1_val+1)^(0+128)
  8019  1178  1283               	bcf	3,5	;RP0=0, select bank0
  8020  1179  1303               	bcf	3,6	;RP1=0, select bank0
  8021  117A  0841               	movf	?___ftdiv+2,w
  8022  117B  1683               	bsf	3,5	;RP0=1, select bank1
  8023  117C  1303               	bcf	3,6	;RP1=0, select bank1
  8024  117D  00C7               	movwf	(_S1_val+2)^(0+128)
  8025  117E                     l4471:
  8026                           
  8027                           ;pseudocodigo_lab3.c: 149:     while (ADCON0bits.GO != 0) {
  8028  117E  1283               	bcf	3,5	;RP0=0, select bank0
  8029  117F  189F               	btfsc	31,1	;volatile
  8030  1180  2982               	goto	u6631
  8031  1181  2983               	goto	u6630
  8032  1182                     u6631:
  8033  1182  293A               	goto	l4469
  8034  1183                     u6630:
  8035  1183                     l107:
  8036  1183  0008               	return
  8037  1184                     __end_of_ADC_channel1:
  8038                           
  8039                           	psect	text39
  8040  15EE                     __ptext39:	
  8041 ;; *************** function ___ftmul *****************
  8042 ;; Defined at:
  8043 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftmul.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;  f1              3   15[BANK0 ] float 
  8046 ;;  f2              3   18[BANK0 ] float 
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;  f3_as_produc    3   26[BANK0 ] unsigned um
  8049 ;;  sign            1   30[BANK0 ] unsigned char 
  8050 ;;  cntr            1   29[BANK0 ] unsigned char 
  8051 ;;  exp             1   25[BANK0 ] unsigned char 
  8052 ;; Return value:  Size  Location     Type
  8053 ;;                  3   15[BANK0 ] float 
  8054 ;; Registers used:
  8055 ;;		wreg, status,2, status,0, pclath, cstack
  8056 ;; Tracked objects:
  8057 ;;		On entry : 0/0
  8058 ;;		On exit  : 0/0
  8059 ;;		Unchanged: 0/0
  8060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8061 ;;      Params:         0       6       0       0       0
  8062 ;;      Locals:         0       6       0       0       0
  8063 ;;      Temps:          0       4       0       0       0
  8064 ;;      Totals:         0      16       0       0       0
  8065 ;;Total ram usage:       16 bytes
  8066 ;; Hardware stack levels used:    1
  8067 ;; Hardware stack levels required when called:    2
  8068 ;; This function calls:
  8069 ;;		___ftpack
  8070 ;; This function is called by:
  8071 ;;		_ADC_channel1
  8072 ;;		_ADC_channel2
  8073 ;;		_fround
  8074 ;;		_scale
  8075 ;;		_sprintf
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           
  8080                           ;psect for function ___ftmul
  8081  15EE                     ___ftmul:
  8082  15EE                     l3705:	
  8083                           ;incstack = 0
  8084                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8085                           
  8086  15EE  1283               	bcf	3,5	;RP0=0, select bank0
  8087  15EF  1303               	bcf	3,6	;RP1=0, select bank0
  8088  15F0  082F               	movf	___ftmul@f1,w
  8089  15F1  00B5               	movwf	??___ftmul
  8090  15F2  0830               	movf	___ftmul@f1+1,w
  8091  15F3  00B6               	movwf	??___ftmul+1
  8092  15F4  0831               	movf	___ftmul@f1+2,w
  8093  15F5  00B7               	movwf	??___ftmul+2
  8094  15F6  1003               	clrc
  8095  15F7  0D36               	rlf	??___ftmul+1,w
  8096  15F8  0D37               	rlf	??___ftmul+2,w
  8097  15F9  00B8               	movwf	??___ftmul+3
  8098  15FA  0838               	movf	??___ftmul+3,w
  8099  15FB  00B9               	movwf	___ftmul@exp
  8100  15FC  0839               	movf	___ftmul@exp,w
  8101  15FD  1D03               	btfss	3,2
  8102  15FE  2E00               	goto	u5131
  8103  15FF  2E01               	goto	u5130
  8104  1600                     u5131:
  8105  1600  2E08               	goto	l3711
  8106  1601                     u5130:
  8107  1601                     l3707:
  8108  1601  3000               	movlw	0
  8109  1602  00AF               	movwf	?___ftmul
  8110  1603  3000               	movlw	0
  8111  1604  00B0               	movwf	?___ftmul+1
  8112  1605  3000               	movlw	0
  8113  1606  00B1               	movwf	?___ftmul+2
  8114  1607  2ED2               	goto	l786
  8115  1608                     l3711:
  8116  1608  0832               	movf	___ftmul@f2,w
  8117  1609  00B5               	movwf	??___ftmul
  8118  160A  0833               	movf	___ftmul@f2+1,w
  8119  160B  00B6               	movwf	??___ftmul+1
  8120  160C  0834               	movf	___ftmul@f2+2,w
  8121  160D  00B7               	movwf	??___ftmul+2
  8122  160E  1003               	clrc
  8123  160F  0D36               	rlf	??___ftmul+1,w
  8124  1610  0D37               	rlf	??___ftmul+2,w
  8125  1611  00B8               	movwf	??___ftmul+3
  8126  1612  0838               	movf	??___ftmul+3,w
  8127  1613  00BE               	movwf	___ftmul@sign
  8128  1614  083E               	movf	___ftmul@sign,w
  8129  1615  1D03               	btfss	3,2
  8130  1616  2E18               	goto	u5141
  8131  1617  2E19               	goto	u5140
  8132  1618                     u5141:
  8133  1618  2E20               	goto	l3717
  8134  1619                     u5140:
  8135  1619                     l3713:
  8136  1619  3000               	movlw	0
  8137  161A  00AF               	movwf	?___ftmul
  8138  161B  3000               	movlw	0
  8139  161C  00B0               	movwf	?___ftmul+1
  8140  161D  3000               	movlw	0
  8141  161E  00B1               	movwf	?___ftmul+2
  8142  161F  2ED2               	goto	l786
  8143  1620                     l3717:
  8144  1620  083E               	movf	___ftmul@sign,w
  8145  1621  3E7B               	addlw	123
  8146  1622  00B5               	movwf	??___ftmul
  8147  1623  0835               	movf	??___ftmul,w
  8148  1624  07B9               	addwf	___ftmul@exp,f
  8149  1625  082F               	movf	___ftmul@f1,w
  8150  1626  00B5               	movwf	??___ftmul
  8151  1627  0830               	movf	___ftmul@f1+1,w
  8152  1628  00B6               	movwf	??___ftmul+1
  8153  1629  0831               	movf	___ftmul@f1+2,w
  8154  162A  00B7               	movwf	??___ftmul+2
  8155  162B  3010               	movlw	16
  8156  162C                     u5155:
  8157  162C  1003               	clrc
  8158  162D  0CB7               	rrf	??___ftmul+2,f
  8159  162E  0CB6               	rrf	??___ftmul+1,f
  8160  162F  0CB5               	rrf	??___ftmul,f
  8161  1630                     u5150:
  8162  1630  3EFF               	addlw	-1
  8163  1631  1D03               	skipz
  8164  1632  2E2C               	goto	u5155
  8165  1633  0835               	movf	??___ftmul,w
  8166  1634  00B8               	movwf	??___ftmul+3
  8167  1635  0838               	movf	??___ftmul+3,w
  8168  1636  00BE               	movwf	___ftmul@sign
  8169  1637  0832               	movf	___ftmul@f2,w
  8170  1638  00B5               	movwf	??___ftmul
  8171  1639  0833               	movf	___ftmul@f2+1,w
  8172  163A  00B6               	movwf	??___ftmul+1
  8173  163B  0834               	movf	___ftmul@f2+2,w
  8174  163C  00B7               	movwf	??___ftmul+2
  8175  163D  3010               	movlw	16
  8176  163E                     u5165:
  8177  163E  1003               	clrc
  8178  163F  0CB7               	rrf	??___ftmul+2,f
  8179  1640  0CB6               	rrf	??___ftmul+1,f
  8180  1641  0CB5               	rrf	??___ftmul,f
  8181  1642                     u5160:
  8182  1642  3EFF               	addlw	-1
  8183  1643  1D03               	skipz
  8184  1644  2E3E               	goto	u5165
  8185  1645  0835               	movf	??___ftmul,w
  8186  1646  00B8               	movwf	??___ftmul+3
  8187  1647  0838               	movf	??___ftmul+3,w
  8188  1648  06BE               	xorwf	___ftmul@sign,f
  8189  1649  3080               	movlw	128
  8190  164A  00B5               	movwf	??___ftmul
  8191  164B  0835               	movf	??___ftmul,w
  8192  164C  05BE               	andwf	___ftmul@sign,f
  8193  164D                     l3719:
  8194  164D  17B0               	bsf	___ftmul@f1+1,7
  8195  164E                     l3721:
  8196  164E  17B3               	bsf	___ftmul@f2+1,7
  8197  164F                     l3723:
  8198  164F  30FF               	movlw	255
  8199  1650  05B2               	andwf	___ftmul@f2,f
  8200  1651  30FF               	movlw	255
  8201  1652  05B3               	andwf	___ftmul@f2+1,f
  8202  1653  3000               	movlw	0
  8203  1654  05B4               	andwf	___ftmul@f2+2,f
  8204  1655                     l3725:
  8205  1655  3000               	movlw	0
  8206  1656  00BA               	movwf	___ftmul@f3_as_product
  8207  1657  3000               	movlw	0
  8208  1658  00BB               	movwf	___ftmul@f3_as_product+1
  8209  1659  3000               	movlw	0
  8210  165A  00BC               	movwf	___ftmul@f3_as_product+2
  8211  165B                     l3727:
  8212  165B  3007               	movlw	7
  8213  165C  00B5               	movwf	??___ftmul
  8214  165D  0835               	movf	??___ftmul,w
  8215  165E  00BD               	movwf	___ftmul@cntr
  8216  165F                     l3729:
  8217  165F  1C2F               	btfss	___ftmul@f1,0
  8218  1660  2E62               	goto	u5171
  8219  1661  2E63               	goto	u5170
  8220  1662                     u5171:
  8221  1662  2E73               	goto	l3733
  8222  1663                     u5170:
  8223  1663                     l3731:
  8224  1663  0832               	movf	___ftmul@f2,w
  8225  1664  07BA               	addwf	___ftmul@f3_as_product,f
  8226  1665  0833               	movf	___ftmul@f2+1,w
  8227  1666  1103               	clrz
  8228  1667  1803               	skipnc
  8229  1668  0A33               	incf	___ftmul@f2+1,w
  8230  1669  1903               	skipnz
  8231  166A  2E6C               	goto	u5181
  8232  166B  07BB               	addwf	___ftmul@f3_as_product+1,f
  8233  166C                     u5181:
  8234  166C  0834               	movf	___ftmul@f2+2,w
  8235  166D  1103               	clrz
  8236  166E  1803               	skipnc
  8237  166F  0A34               	incf	___ftmul@f2+2,w
  8238  1670  1903               	skipnz
  8239  1671  2E73               	goto	u5182
  8240  1672  07BC               	addwf	___ftmul@f3_as_product+2,f
  8241  1673                     u5182:
  8242  1673                     l3733:
  8243  1673  3001               	movlw	1
  8244  1674                     u5195:
  8245  1674  1003               	clrc
  8246  1675  0CB1               	rrf	___ftmul@f1+2,f
  8247  1676  0CB0               	rrf	___ftmul@f1+1,f
  8248  1677  0CAF               	rrf	___ftmul@f1,f
  8249  1678  3EFF               	addlw	-1
  8250  1679  1D03               	skipz
  8251  167A  2E74               	goto	u5195
  8252  167B                     l3735:
  8253  167B  3001               	movlw	1
  8254  167C                     u5205:
  8255  167C  1003               	clrc
  8256  167D  0DB2               	rlf	___ftmul@f2,f
  8257  167E  0DB3               	rlf	___ftmul@f2+1,f
  8258  167F  0DB4               	rlf	___ftmul@f2+2,f
  8259  1680  3EFF               	addlw	-1
  8260  1681  1D03               	skipz
  8261  1682  2E7C               	goto	u5205
  8262  1683                     l3737:
  8263  1683  3001               	movlw	1
  8264  1684  02BD               	subwf	___ftmul@cntr,f
  8265  1685  1D03               	btfss	3,2
  8266  1686  2E88               	goto	u5211
  8267  1687  2E89               	goto	u5210
  8268  1688                     u5211:
  8269  1688  2E5F               	goto	l3729
  8270  1689                     u5210:
  8271  1689                     l3739:
  8272  1689  3009               	movlw	9
  8273  168A  00B5               	movwf	??___ftmul
  8274  168B  0835               	movf	??___ftmul,w
  8275  168C  00BD               	movwf	___ftmul@cntr
  8276  168D                     l3741:
  8277  168D  1C2F               	btfss	___ftmul@f1,0
  8278  168E  2E90               	goto	u5221
  8279  168F  2E91               	goto	u5220
  8280  1690                     u5221:
  8281  1690  2EA1               	goto	l3745
  8282  1691                     u5220:
  8283  1691                     l3743:
  8284  1691  0832               	movf	___ftmul@f2,w
  8285  1692  07BA               	addwf	___ftmul@f3_as_product,f
  8286  1693  0833               	movf	___ftmul@f2+1,w
  8287  1694  1103               	clrz
  8288  1695  1803               	skipnc
  8289  1696  0A33               	incf	___ftmul@f2+1,w
  8290  1697  1903               	skipnz
  8291  1698  2E9A               	goto	u5231
  8292  1699  07BB               	addwf	___ftmul@f3_as_product+1,f
  8293  169A                     u5231:
  8294  169A  0834               	movf	___ftmul@f2+2,w
  8295  169B  1103               	clrz
  8296  169C  1803               	skipnc
  8297  169D  0A34               	incf	___ftmul@f2+2,w
  8298  169E  1903               	skipnz
  8299  169F  2EA1               	goto	u5232
  8300  16A0  07BC               	addwf	___ftmul@f3_as_product+2,f
  8301  16A1                     u5232:
  8302  16A1                     l3745:
  8303  16A1  3001               	movlw	1
  8304  16A2                     u5245:
  8305  16A2  1003               	clrc
  8306  16A3  0CB1               	rrf	___ftmul@f1+2,f
  8307  16A4  0CB0               	rrf	___ftmul@f1+1,f
  8308  16A5  0CAF               	rrf	___ftmul@f1,f
  8309  16A6  3EFF               	addlw	-1
  8310  16A7  1D03               	skipz
  8311  16A8  2EA2               	goto	u5245
  8312  16A9                     l3747:
  8313  16A9  3001               	movlw	1
  8314  16AA                     u5255:
  8315  16AA  1003               	clrc
  8316  16AB  0CBC               	rrf	___ftmul@f3_as_product+2,f
  8317  16AC  0CBB               	rrf	___ftmul@f3_as_product+1,f
  8318  16AD  0CBA               	rrf	___ftmul@f3_as_product,f
  8319  16AE  3EFF               	addlw	-1
  8320  16AF  1D03               	skipz
  8321  16B0  2EAA               	goto	u5255
  8322  16B1                     l3749:
  8323  16B1  3001               	movlw	1
  8324  16B2  02BD               	subwf	___ftmul@cntr,f
  8325  16B3  1D03               	btfss	3,2
  8326  16B4  2EB6               	goto	u5261
  8327  16B5  2EB7               	goto	u5260
  8328  16B6                     u5261:
  8329  16B6  2E8D               	goto	l3741
  8330  16B7                     u5260:
  8331  16B7                     l3751:
  8332  16B7  083A               	movf	___ftmul@f3_as_product,w
  8333  16B8  00F3               	movwf	___ftpack@arg
  8334  16B9  083B               	movf	___ftmul@f3_as_product+1,w
  8335  16BA  00F4               	movwf	___ftpack@arg+1
  8336  16BB  083C               	movf	___ftmul@f3_as_product+2,w
  8337  16BC  00F5               	movwf	___ftpack@arg+2
  8338  16BD  0839               	movf	___ftmul@exp,w
  8339  16BE  00B5               	movwf	??___ftmul
  8340  16BF  0835               	movf	??___ftmul,w
  8341  16C0  00F6               	movwf	___ftpack@exp
  8342  16C1  083E               	movf	___ftmul@sign,w
  8343  16C2  00B6               	movwf	??___ftmul+1
  8344  16C3  0836               	movf	??___ftmul+1,w
  8345  16C4  00F7               	movwf	___ftpack@sign
  8346  16C5  160A  118A  2367  160A  118A  	fcall	___ftpack
  8347  16CA  0873               	movf	?___ftpack,w
  8348  16CB  1283               	bcf	3,5	;RP0=0, select bank0
  8349  16CC  1303               	bcf	3,6	;RP1=0, select bank0
  8350  16CD  00AF               	movwf	?___ftmul
  8351  16CE  0874               	movf	?___ftpack+1,w
  8352  16CF  00B0               	movwf	?___ftmul+1
  8353  16D0  0875               	movf	?___ftpack+2,w
  8354  16D1  00B1               	movwf	?___ftmul+2
  8355  16D2                     l786:
  8356  16D2  0008               	return
  8357  16D3                     __end_of___ftmul:
  8358                           
  8359                           	psect	text40
  8360  0802                     __ptext40:	
  8361 ;; *************** function ___ftdiv *****************
  8362 ;; Defined at:
  8363 ;;		line 56 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdiv.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;  f2              3   31[BANK0 ] float 
  8366 ;;  f1              3   34[BANK0 ] float 
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;  f3              3   42[BANK0 ] float 
  8369 ;;  sign            1   46[BANK0 ] unsigned char 
  8370 ;;  exp             1   45[BANK0 ] unsigned char 
  8371 ;;  cntr            1   41[BANK0 ] unsigned char 
  8372 ;; Return value:  Size  Location     Type
  8373 ;;                  3   31[BANK0 ] float 
  8374 ;; Registers used:
  8375 ;;		wreg, status,2, status,0, pclath, cstack
  8376 ;; Tracked objects:
  8377 ;;		On entry : 0/0
  8378 ;;		On exit  : 0/0
  8379 ;;		Unchanged: 0/0
  8380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8381 ;;      Params:         0       6       0       0       0
  8382 ;;      Locals:         0       6       0       0       0
  8383 ;;      Temps:          0       4       0       0       0
  8384 ;;      Totals:         0      16       0       0       0
  8385 ;;Total ram usage:       16 bytes
  8386 ;; Hardware stack levels used:    1
  8387 ;; Hardware stack levels required when called:    2
  8388 ;; This function calls:
  8389 ;;		___ftpack
  8390 ;; This function is called by:
  8391 ;;		_ADC_channel1
  8392 ;;		_ADC_channel2
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395                           
  8396                           
  8397                           ;psect for function ___ftdiv
  8398  0802                     ___ftdiv:
  8399  0802                     l4411:	
  8400                           ;incstack = 0
  8401                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8402                           
  8403  0802  1283               	bcf	3,5	;RP0=0, select bank0
  8404  0803  1303               	bcf	3,6	;RP1=0, select bank0
  8405  0804  0842               	movf	___ftdiv@f1,w
  8406  0805  00C5               	movwf	??___ftdiv
  8407  0806  0843               	movf	___ftdiv@f1+1,w
  8408  0807  00C6               	movwf	??___ftdiv+1
  8409  0808  0844               	movf	___ftdiv@f1+2,w
  8410  0809  00C7               	movwf	??___ftdiv+2
  8411  080A  1003               	clrc
  8412  080B  0D46               	rlf	??___ftdiv+1,w
  8413  080C  0D47               	rlf	??___ftdiv+2,w
  8414  080D  00C8               	movwf	??___ftdiv+3
  8415  080E  0848               	movf	??___ftdiv+3,w
  8416  080F  00CD               	movwf	___ftdiv@exp
  8417  0810  084D               	movf	___ftdiv@exp,w
  8418  0811  1D03               	btfss	3,2
  8419  0812  2814               	goto	u6551
  8420  0813  2815               	goto	u6550
  8421  0814                     u6551:
  8422  0814  281C               	goto	l4417
  8423  0815                     u6550:
  8424  0815                     l4413:
  8425  0815  3000               	movlw	0
  8426  0816  00BF               	movwf	?___ftdiv
  8427  0817  3000               	movlw	0
  8428  0818  00C0               	movwf	?___ftdiv+1
  8429  0819  3000               	movlw	0
  8430  081A  00C1               	movwf	?___ftdiv+2
  8431  081B  28C3               	goto	l754
  8432  081C                     l4417:
  8433  081C  083F               	movf	___ftdiv@f2,w
  8434  081D  00C5               	movwf	??___ftdiv
  8435  081E  0840               	movf	___ftdiv@f2+1,w
  8436  081F  00C6               	movwf	??___ftdiv+1
  8437  0820  0841               	movf	___ftdiv@f2+2,w
  8438  0821  00C7               	movwf	??___ftdiv+2
  8439  0822  1003               	clrc
  8440  0823  0D46               	rlf	??___ftdiv+1,w
  8441  0824  0D47               	rlf	??___ftdiv+2,w
  8442  0825  00C8               	movwf	??___ftdiv+3
  8443  0826  0848               	movf	??___ftdiv+3,w
  8444  0827  00CE               	movwf	___ftdiv@sign
  8445  0828  084E               	movf	___ftdiv@sign,w
  8446  0829  1D03               	btfss	3,2
  8447  082A  282C               	goto	u6561
  8448  082B  282D               	goto	u6560
  8449  082C                     u6561:
  8450  082C  2834               	goto	l4423
  8451  082D                     u6560:
  8452  082D                     l4419:
  8453  082D  3000               	movlw	0
  8454  082E  00BF               	movwf	?___ftdiv
  8455  082F  3000               	movlw	0
  8456  0830  00C0               	movwf	?___ftdiv+1
  8457  0831  3000               	movlw	0
  8458  0832  00C1               	movwf	?___ftdiv+2
  8459  0833  28C3               	goto	l754
  8460  0834                     l4423:
  8461  0834  3000               	movlw	0
  8462  0835  00CA               	movwf	___ftdiv@f3
  8463  0836  3000               	movlw	0
  8464  0837  00CB               	movwf	___ftdiv@f3+1
  8465  0838  3000               	movlw	0
  8466  0839  00CC               	movwf	___ftdiv@f3+2
  8467  083A                     l4425:
  8468  083A  3089               	movlw	137
  8469  083B  074E               	addwf	___ftdiv@sign,w
  8470  083C  00C5               	movwf	??___ftdiv
  8471  083D  0845               	movf	??___ftdiv,w
  8472  083E  02CD               	subwf	___ftdiv@exp,f
  8473  083F                     l4427:
  8474  083F  0842               	movf	___ftdiv@f1,w
  8475  0840  00C5               	movwf	??___ftdiv
  8476  0841  0843               	movf	___ftdiv@f1+1,w
  8477  0842  00C6               	movwf	??___ftdiv+1
  8478  0843  0844               	movf	___ftdiv@f1+2,w
  8479  0844  00C7               	movwf	??___ftdiv+2
  8480  0845  3010               	movlw	16
  8481  0846                     u6575:
  8482  0846  1003               	clrc
  8483  0847  0CC7               	rrf	??___ftdiv+2,f
  8484  0848  0CC6               	rrf	??___ftdiv+1,f
  8485  0849  0CC5               	rrf	??___ftdiv,f
  8486  084A                     u6570:
  8487  084A  3EFF               	addlw	-1
  8488  084B  1D03               	skipz
  8489  084C  2846               	goto	u6575
  8490  084D  0845               	movf	??___ftdiv,w
  8491  084E  00C8               	movwf	??___ftdiv+3
  8492  084F  0848               	movf	??___ftdiv+3,w
  8493  0850  00CE               	movwf	___ftdiv@sign
  8494  0851                     l4429:
  8495  0851  083F               	movf	___ftdiv@f2,w
  8496  0852  00C5               	movwf	??___ftdiv
  8497  0853  0840               	movf	___ftdiv@f2+1,w
  8498  0854  00C6               	movwf	??___ftdiv+1
  8499  0855  0841               	movf	___ftdiv@f2+2,w
  8500  0856  00C7               	movwf	??___ftdiv+2
  8501  0857  3010               	movlw	16
  8502  0858                     u6585:
  8503  0858  1003               	clrc
  8504  0859  0CC7               	rrf	??___ftdiv+2,f
  8505  085A  0CC6               	rrf	??___ftdiv+1,f
  8506  085B  0CC5               	rrf	??___ftdiv,f
  8507  085C                     u6580:
  8508  085C  3EFF               	addlw	-1
  8509  085D  1D03               	skipz
  8510  085E  2858               	goto	u6585
  8511  085F  0845               	movf	??___ftdiv,w
  8512  0860  00C8               	movwf	??___ftdiv+3
  8513  0861  0848               	movf	??___ftdiv+3,w
  8514  0862  06CE               	xorwf	___ftdiv@sign,f
  8515  0863                     l4431:
  8516  0863  3080               	movlw	128
  8517  0864  00C5               	movwf	??___ftdiv
  8518  0865  0845               	movf	??___ftdiv,w
  8519  0866  05CE               	andwf	___ftdiv@sign,f
  8520  0867                     l4433:
  8521  0867  17C3               	bsf	___ftdiv@f1+1,7
  8522  0868  30FF               	movlw	255
  8523  0869  05C2               	andwf	___ftdiv@f1,f
  8524  086A  30FF               	movlw	255
  8525  086B  05C3               	andwf	___ftdiv@f1+1,f
  8526  086C  3000               	movlw	0
  8527  086D  05C4               	andwf	___ftdiv@f1+2,f
  8528  086E                     l4435:
  8529  086E  17C0               	bsf	___ftdiv@f2+1,7
  8530  086F  30FF               	movlw	255
  8531  0870  05BF               	andwf	___ftdiv@f2,f
  8532  0871  30FF               	movlw	255
  8533  0872  05C0               	andwf	___ftdiv@f2+1,f
  8534  0873  3000               	movlw	0
  8535  0874  05C1               	andwf	___ftdiv@f2+2,f
  8536  0875  3018               	movlw	24
  8537  0876  00C5               	movwf	??___ftdiv
  8538  0877  0845               	movf	??___ftdiv,w
  8539  0878  00C9               	movwf	___ftdiv@cntr
  8540  0879                     l4437:
  8541  0879  3001               	movlw	1
  8542  087A                     u6595:
  8543  087A  1003               	clrc
  8544  087B  0DCA               	rlf	___ftdiv@f3,f
  8545  087C  0DCB               	rlf	___ftdiv@f3+1,f
  8546  087D  0DCC               	rlf	___ftdiv@f3+2,f
  8547  087E  3EFF               	addlw	-1
  8548  087F  1D03               	skipz
  8549  0880  287A               	goto	u6595
  8550  0881                     l4439:
  8551  0881  0841               	movf	___ftdiv@f2+2,w
  8552  0882  0244               	subwf	___ftdiv@f1+2,w
  8553  0883  1D03               	skipz
  8554  0884  288B               	goto	u6605
  8555  0885  0840               	movf	___ftdiv@f2+1,w
  8556  0886  0243               	subwf	___ftdiv@f1+1,w
  8557  0887  1D03               	skipz
  8558  0888  288B               	goto	u6605
  8559  0889  083F               	movf	___ftdiv@f2,w
  8560  088A  0242               	subwf	___ftdiv@f1,w
  8561  088B                     u6605:
  8562  088B  1C03               	skipc
  8563  088C  288E               	goto	u6601
  8564  088D  288F               	goto	u6600
  8565  088E                     u6601:
  8566  088E  289A               	goto	l4445
  8567  088F                     u6600:
  8568  088F                     l4441:
  8569  088F  083F               	movf	___ftdiv@f2,w
  8570  0890  02C2               	subwf	___ftdiv@f1,f
  8571  0891  0840               	movf	___ftdiv@f2+1,w
  8572  0892  1C03               	skipc
  8573  0893  0F40               	incfsz	___ftdiv@f2+1,w
  8574  0894  02C3               	subwf	___ftdiv@f1+1,f
  8575  0895  0841               	movf	___ftdiv@f2+2,w
  8576  0896  1C03               	skipc
  8577  0897  0A41               	incf	___ftdiv@f2+2,w
  8578  0898  02C4               	subwf	___ftdiv@f1+2,f
  8579  0899                     l4443:
  8580  0899  144A               	bsf	___ftdiv@f3,0
  8581  089A                     l4445:
  8582  089A  3001               	movlw	1
  8583  089B                     u6615:
  8584  089B  1003               	clrc
  8585  089C  0DC2               	rlf	___ftdiv@f1,f
  8586  089D  0DC3               	rlf	___ftdiv@f1+1,f
  8587  089E  0DC4               	rlf	___ftdiv@f1+2,f
  8588  089F  3EFF               	addlw	-1
  8589  08A0  1D03               	skipz
  8590  08A1  289B               	goto	u6615
  8591  08A2                     l4447:
  8592  08A2  3001               	movlw	1
  8593  08A3  02C9               	subwf	___ftdiv@cntr,f
  8594  08A4  1D03               	btfss	3,2
  8595  08A5  28A7               	goto	u6621
  8596  08A6  28A8               	goto	u6620
  8597  08A7                     u6621:
  8598  08A7  2879               	goto	l4437
  8599  08A8                     u6620:
  8600  08A8                     l4449:
  8601  08A8  084A               	movf	___ftdiv@f3,w
  8602  08A9  00F3               	movwf	___ftpack@arg
  8603  08AA  084B               	movf	___ftdiv@f3+1,w
  8604  08AB  00F4               	movwf	___ftpack@arg+1
  8605  08AC  084C               	movf	___ftdiv@f3+2,w
  8606  08AD  00F5               	movwf	___ftpack@arg+2
  8607  08AE  084D               	movf	___ftdiv@exp,w
  8608  08AF  00C5               	movwf	??___ftdiv
  8609  08B0  0845               	movf	??___ftdiv,w
  8610  08B1  00F6               	movwf	___ftpack@exp
  8611  08B2  084E               	movf	___ftdiv@sign,w
  8612  08B3  00C6               	movwf	??___ftdiv+1
  8613  08B4  0846               	movf	??___ftdiv+1,w
  8614  08B5  00F7               	movwf	___ftpack@sign
  8615  08B6  160A  118A  2367  120A  158A  	fcall	___ftpack
  8616  08BB  0873               	movf	?___ftpack,w
  8617  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  8618  08BD  1303               	bcf	3,6	;RP1=0, select bank0
  8619  08BE  00BF               	movwf	?___ftdiv
  8620  08BF  0874               	movf	?___ftpack+1,w
  8621  08C0  00C0               	movwf	?___ftdiv+1
  8622  08C1  0875               	movf	?___ftpack+2,w
  8623  08C2  00C1               	movwf	?___ftdiv+2
  8624  08C3                     l754:
  8625  08C3  0008               	return
  8626  08C4                     __end_of___ftdiv:
  8627                           
  8628                           	psect	text41
  8629  1D6D                     __ptext41:	
  8630 ;; *************** function ___awtoft *****************
  8631 ;; Defined at:
  8632 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awtoft.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;  c               2    3[BANK0 ] int 
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;  sign            1    8[BANK0 ] unsigned char 
  8637 ;; Return value:  Size  Location     Type
  8638 ;;                  3    3[BANK0 ] float 
  8639 ;; Registers used:
  8640 ;;		wreg, status,2, status,0, pclath, cstack
  8641 ;; Tracked objects:
  8642 ;;		On entry : 0/0
  8643 ;;		On exit  : 0/0
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8646 ;;      Params:         0       3       0       0       0
  8647 ;;      Locals:         0       1       0       0       0
  8648 ;;      Temps:          0       2       0       0       0
  8649 ;;      Totals:         0       6       0       0       0
  8650 ;;Total ram usage:        6 bytes
  8651 ;; Hardware stack levels used:    1
  8652 ;; Hardware stack levels required when called:    2
  8653 ;; This function calls:
  8654 ;;		___ftpack
  8655 ;; This function is called by:
  8656 ;;		_ADC_channel1
  8657 ;;		_ADC_channel2
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           
  8662                           ;psect for function ___awtoft
  8663  1D6D                     ___awtoft:
  8664  1D6D                     l4399:	
  8665                           ;incstack = 0
  8666                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8667                           
  8668  1D6D  1283               	bcf	3,5	;RP0=0, select bank0
  8669  1D6E  1303               	bcf	3,6	;RP1=0, select bank0
  8670  1D6F  01A8               	clrf	___awtoft@sign
  8671  1D70                     l4401:
  8672  1D70  1FA4               	btfss	___awtoft@c+1,7
  8673  1D71  2D73               	goto	u6541
  8674  1D72  2D74               	goto	u6540
  8675  1D73                     u6541:
  8676  1D73  2D7B               	goto	l4407
  8677  1D74                     u6540:
  8678  1D74                     l4403:
  8679  1D74  09A3               	comf	___awtoft@c,f
  8680  1D75  09A4               	comf	___awtoft@c+1,f
  8681  1D76  0AA3               	incf	___awtoft@c,f
  8682  1D77  1903               	skipnz
  8683  1D78  0AA4               	incf	___awtoft@c+1,f
  8684  1D79                     l4405:
  8685  1D79  01A8               	clrf	___awtoft@sign
  8686  1D7A  0AA8               	incf	___awtoft@sign,f
  8687  1D7B                     l4407:
  8688  1D7B  0823               	movf	___awtoft@c,w
  8689  1D7C  00F3               	movwf	___ftpack@arg
  8690  1D7D  0824               	movf	___awtoft@c+1,w
  8691  1D7E  00F4               	movwf	___ftpack@arg+1
  8692  1D7F  01F5               	clrf	___ftpack@arg+2
  8693  1D80  308E               	movlw	142
  8694  1D81  00A6               	movwf	??___awtoft
  8695  1D82  0826               	movf	??___awtoft,w
  8696  1D83  00F6               	movwf	___ftpack@exp
  8697  1D84  0828               	movf	___awtoft@sign,w
  8698  1D85  00A7               	movwf	??___awtoft+1
  8699  1D86  0827               	movf	??___awtoft+1,w
  8700  1D87  00F7               	movwf	___ftpack@sign
  8701  1D88  160A  118A  2367  160A  158A  	fcall	___ftpack
  8702  1D8D  0873               	movf	?___ftpack,w
  8703  1D8E  1283               	bcf	3,5	;RP0=0, select bank0
  8704  1D8F  1303               	bcf	3,6	;RP1=0, select bank0
  8705  1D90  00A3               	movwf	?___awtoft
  8706  1D91  0874               	movf	?___ftpack+1,w
  8707  1D92  00A4               	movwf	?___awtoft+1
  8708  1D93  0875               	movf	?___ftpack+2,w
  8709  1D94  00A5               	movwf	?___awtoft+2
  8710  1D95                     l679:
  8711  1D95  0008               	return
  8712  1D96                     __end_of___awtoft:
  8713                           
  8714                           	psect	text42
  8715  1367                     __ptext42:	
  8716 ;; *************** function ___ftpack *****************
  8717 ;; Defined at:
  8718 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\float.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;  arg             3    3[COMMON] unsigned um
  8721 ;;  exp             1    6[COMMON] unsigned char 
  8722 ;;  sign            1    7[COMMON] unsigned char 
  8723 ;; Auto vars:     Size  Location     Type
  8724 ;;		None
  8725 ;; Return value:  Size  Location     Type
  8726 ;;                  3    3[COMMON] float 
  8727 ;; Registers used:
  8728 ;;		wreg, status,2, status,0
  8729 ;; Tracked objects:
  8730 ;;		On entry : 0/0
  8731 ;;		On exit  : 0/0
  8732 ;;		Unchanged: 0/0
  8733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8734 ;;      Params:         5       0       0       0       0
  8735 ;;      Locals:         0       0       0       0       0
  8736 ;;      Temps:          0       3       0       0       0
  8737 ;;      Totals:         5       3       0       0       0
  8738 ;;Total ram usage:        8 bytes
  8739 ;; Hardware stack levels used:    1
  8740 ;; Hardware stack levels required when called:    1
  8741 ;; This function calls:
  8742 ;;		Nothing
  8743 ;; This function is called by:
  8744 ;;		___awtoft
  8745 ;;		___ftadd
  8746 ;;		___ftdiv
  8747 ;;		___ftmul
  8748 ;;		___lltoft
  8749 ;; This function uses a non-reentrant model
  8750 ;;
  8751                           
  8752                           
  8753                           ;psect for function ___ftpack
  8754  1367                     ___ftpack:
  8755  1367                     l3519:	
  8756                           ;incstack = 0
  8757                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8758                           
  8759  1367  0876               	movf	___ftpack@exp,w
  8760  1368  1903               	btfsc	3,2
  8761  1369  2B6B               	goto	u4581
  8762  136A  2B6C               	goto	u4580
  8763  136B                     u4581:
  8764  136B  2B73               	goto	l3523
  8765  136C                     u4580:
  8766  136C                     l3521:
  8767  136C  0875               	movf	___ftpack@arg+2,w
  8768  136D  0474               	iorwf	___ftpack@arg+1,w
  8769  136E  0473               	iorwf	___ftpack@arg,w
  8770  136F  1D03               	skipz
  8771  1370  2B72               	goto	u4591
  8772  1371  2B73               	goto	u4590
  8773  1372                     u4591:
  8774  1372  2B88               	goto	l3529
  8775  1373                     u4590:
  8776  1373                     l3523:
  8777  1373  3000               	movlw	0
  8778  1374  00F3               	movwf	?___ftpack
  8779  1375  3000               	movlw	0
  8780  1376  00F4               	movwf	?___ftpack+1
  8781  1377  3000               	movlw	0
  8782  1378  00F5               	movwf	?___ftpack+2
  8783  1379  2BE8               	goto	l702
  8784  137A                     l3527:
  8785  137A  3001               	movlw	1
  8786  137B  1283               	bcf	3,5	;RP0=0, select bank0
  8787  137C  1303               	bcf	3,6	;RP1=0, select bank0
  8788  137D  00A0               	movwf	??___ftpack
  8789  137E  0820               	movf	??___ftpack,w
  8790  137F  07F6               	addwf	___ftpack@exp,f
  8791  1380  3001               	movlw	1
  8792  1381                     u4605:
  8793  1381  1003               	clrc
  8794  1382  0CF5               	rrf	___ftpack@arg+2,f
  8795  1383  0CF4               	rrf	___ftpack@arg+1,f
  8796  1384  0CF3               	rrf	___ftpack@arg,f
  8797  1385  3EFF               	addlw	-1
  8798  1386  1D03               	skipz
  8799  1387  2B81               	goto	u4605
  8800  1388                     l3529:
  8801  1388  30FE               	movlw	254
  8802  1389  0575               	andwf	___ftpack@arg+2,w
  8803  138A  1D03               	btfss	3,2
  8804  138B  2B8D               	goto	u4611
  8805  138C  2B8E               	goto	u4610
  8806  138D                     u4611:
  8807  138D  2B7A               	goto	l3527
  8808  138E                     u4610:
  8809  138E  2BA7               	goto	l706
  8810  138F                     l3531:
  8811  138F  3001               	movlw	1
  8812  1390  1283               	bcf	3,5	;RP0=0, select bank0
  8813  1391  1303               	bcf	3,6	;RP1=0, select bank0
  8814  1392  00A0               	movwf	??___ftpack
  8815  1393  0820               	movf	??___ftpack,w
  8816  1394  07F6               	addwf	___ftpack@exp,f
  8817  1395                     l3533:
  8818  1395  3001               	movlw	1
  8819  1396  07F3               	addwf	___ftpack@arg,f
  8820  1397  3000               	movlw	0
  8821  1398  1803               	skipnc
  8822  1399  3001               	movlw	1
  8823  139A  07F4               	addwf	___ftpack@arg+1,f
  8824  139B  3000               	movlw	0
  8825  139C  1803               	skipnc
  8826  139D  3001               	movlw	1
  8827  139E  07F5               	addwf	___ftpack@arg+2,f
  8828  139F                     l3535:
  8829  139F  3001               	movlw	1
  8830  13A0                     u4625:
  8831  13A0  1003               	clrc
  8832  13A1  0CF5               	rrf	___ftpack@arg+2,f
  8833  13A2  0CF4               	rrf	___ftpack@arg+1,f
  8834  13A3  0CF3               	rrf	___ftpack@arg,f
  8835  13A4  3EFF               	addlw	-1
  8836  13A5  1D03               	skipz
  8837  13A6  2BA0               	goto	u4625
  8838  13A7                     l706:
  8839  13A7  30FF               	movlw	255
  8840  13A8  0575               	andwf	___ftpack@arg+2,w
  8841  13A9  1D03               	btfss	3,2
  8842  13AA  2BAC               	goto	u4631
  8843  13AB  2BAD               	goto	u4630
  8844  13AC                     u4631:
  8845  13AC  2B8F               	goto	l3531
  8846  13AD                     u4630:
  8847  13AD  2BB8               	goto	l3539
  8848  13AE                     l3537:
  8849  13AE  3001               	movlw	1
  8850  13AF  02F6               	subwf	___ftpack@exp,f
  8851  13B0  3001               	movlw	1
  8852  13B1                     u4645:
  8853  13B1  1003               	clrc
  8854  13B2  0DF3               	rlf	___ftpack@arg,f
  8855  13B3  0DF4               	rlf	___ftpack@arg+1,f
  8856  13B4  0DF5               	rlf	___ftpack@arg+2,f
  8857  13B5  3EFF               	addlw	-1
  8858  13B6  1D03               	skipz
  8859  13B7  2BB1               	goto	u4645
  8860  13B8                     l3539:
  8861  13B8  1BF4               	btfsc	___ftpack@arg+1,7
  8862  13B9  2BBB               	goto	u4651
  8863  13BA  2BBC               	goto	u4650
  8864  13BB                     u4651:
  8865  13BB  2BC2               	goto	l713
  8866  13BC                     u4650:
  8867  13BC                     l3541:
  8868  13BC  3002               	movlw	2
  8869  13BD  0276               	subwf	___ftpack@exp,w
  8870  13BE  1803               	skipnc
  8871  13BF  2BC1               	goto	u4661
  8872  13C0  2BC2               	goto	u4660
  8873  13C1                     u4661:
  8874  13C1  2BAE               	goto	l3537
  8875  13C2                     u4660:
  8876  13C2                     l713:
  8877  13C2  1876               	btfsc	___ftpack@exp,0
  8878  13C3  2BC5               	goto	u4671
  8879  13C4  2BC6               	goto	u4670
  8880  13C5                     u4671:
  8881  13C5  2BCC               	goto	l714
  8882  13C6                     u4670:
  8883  13C6                     l3543:
  8884  13C6  30FF               	movlw	255
  8885  13C7  05F3               	andwf	___ftpack@arg,f
  8886  13C8  307F               	movlw	127
  8887  13C9  05F4               	andwf	___ftpack@arg+1,f
  8888  13CA  30FF               	movlw	255
  8889  13CB  05F5               	andwf	___ftpack@arg+2,f
  8890  13CC                     l714:
  8891  13CC  1003               	clrc
  8892  13CD  0CF6               	rrf	___ftpack@exp,f
  8893  13CE                     l3545:
  8894  13CE  0876               	movf	___ftpack@exp,w
  8895  13CF  1283               	bcf	3,5	;RP0=0, select bank0
  8896  13D0  1303               	bcf	3,6	;RP1=0, select bank0
  8897  13D1  00A0               	movwf	??___ftpack
  8898  13D2  01A1               	clrf	??___ftpack+1
  8899  13D3  01A2               	clrf	??___ftpack+2
  8900  13D4  3010               	movlw	16
  8901  13D5                     u4685:
  8902  13D5  1003               	clrc
  8903  13D6  0DA0               	rlf	??___ftpack,f
  8904  13D7  0DA1               	rlf	??___ftpack+1,f
  8905  13D8  0DA2               	rlf	??___ftpack+2,f
  8906  13D9                     u4680:
  8907  13D9  3EFF               	addlw	-1
  8908  13DA  1D03               	skipz
  8909  13DB  2BD5               	goto	u4685
  8910  13DC  0820               	movf	??___ftpack,w
  8911  13DD  04F3               	iorwf	___ftpack@arg,f
  8912  13DE  0821               	movf	??___ftpack+1,w
  8913  13DF  04F4               	iorwf	___ftpack@arg+1,f
  8914  13E0  0822               	movf	??___ftpack+2,w
  8915  13E1  04F5               	iorwf	___ftpack@arg+2,f
  8916  13E2                     l3547:
  8917  13E2  0877               	movf	___ftpack@sign,w
  8918  13E3  1903               	btfsc	3,2
  8919  13E4  2BE6               	goto	u4691
  8920  13E5  2BE7               	goto	u4690
  8921  13E6                     u4691:
  8922  13E6  2BE8               	goto	l715
  8923  13E7                     u4690:
  8924  13E7                     l3549:
  8925  13E7  17F5               	bsf	___ftpack@arg+2,7
  8926  13E8                     l715:
  8927  13E8                     l702:
  8928  13E8  0008               	return
  8929  13E9                     __end_of___ftpack:
  8930                           
  8931                           	psect	text43
  8932  1475                     __ptext43:	
  8933 ;; *************** function _ADC_Config *****************
  8934 ;; Defined at:
  8935 ;;		line 31 in file "Config_ADC.c"
  8936 ;; Parameters:    Size  Location     Type
  8937 ;;  AN_num          1    wreg     unsigned char 
  8938 ;; Auto vars:     Size  Location     Type
  8939 ;;  AN_num          1    5[COMMON] unsigned char 
  8940 ;; Return value:  Size  Location     Type
  8941 ;;                  1    wreg      void 
  8942 ;; Registers used:
  8943 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8944 ;; Tracked objects:
  8945 ;;		On entry : 0/0
  8946 ;;		On exit  : 0/0
  8947 ;;		Unchanged: 0/0
  8948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8949 ;;      Params:         0       0       0       0       0
  8950 ;;      Locals:         1       0       0       0       0
  8951 ;;      Temps:          2       0       0       0       0
  8952 ;;      Totals:         3       0       0       0       0
  8953 ;;Total ram usage:        3 bytes
  8954 ;; Hardware stack levels used:    1
  8955 ;; Hardware stack levels required when called:    1
  8956 ;; This function calls:
  8957 ;;		Nothing
  8958 ;; This function is called by:
  8959 ;;		_ADC_channel1
  8960 ;;		_ADC_channel2
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           
  8965                           ;psect for function _ADC_Config
  8966  1475                     _ADC_Config:
  8967                           
  8968                           ;incstack = 0
  8969                           ; Regs used in _ADC_Config: [wreg-fsr0h+status,2+status,0]
  8970                           ;ADC_Config@AN_num stored from wreg
  8971  1475  00F5               	movwf	ADC_Config@AN_num
  8972  1476                     l3213:
  8973                           
  8974                           ;Config_ADC.c: 33:     switch(AN_num){
  8975  1476  2CEE               	goto	l3217
  8976  1477                     l207:	
  8977                           ;Config_ADC.c: 34:         case 0:
  8978                           
  8979                           
  8980                           ;Config_ADC.c: 35:             ADCON0bits.CHS3 = 0;
  8981  1477  1283               	bcf	3,5	;RP0=0, select bank0
  8982  1478  1303               	bcf	3,6	;RP1=0, select bank0
  8983  1479  129F               	bcf	31,5	;volatile
  8984                           
  8985                           ;Config_ADC.c: 36:             ADCON0bits.CHS2 = 0;
  8986  147A  121F               	bcf	31,4	;volatile
  8987                           
  8988                           ;Config_ADC.c: 37:             ADCON0bits.CHS1 = 0;
  8989  147B  119F               	bcf	31,3	;volatile
  8990                           
  8991                           ;Config_ADC.c: 38:             ADCON0bits.CHS0 = 0;
  8992  147C  111F               	bcf	31,2	;volatile
  8993                           
  8994                           ;Config_ADC.c: 39:             break;
  8995  147D  2D28               	goto	l3219
  8996  147E                     l209:	
  8997                           ;Config_ADC.c: 40:         case 1:
  8998                           
  8999                           
  9000                           ;Config_ADC.c: 41:             ADCON0bits.CHS3 = 0;
  9001  147E  1283               	bcf	3,5	;RP0=0, select bank0
  9002  147F  1303               	bcf	3,6	;RP1=0, select bank0
  9003  1480  129F               	bcf	31,5	;volatile
  9004                           
  9005                           ;Config_ADC.c: 42:             ADCON0bits.CHS2 = 0;
  9006  1481  121F               	bcf	31,4	;volatile
  9007                           
  9008                           ;Config_ADC.c: 43:             ADCON0bits.CHS1 = 0;
  9009  1482  119F               	bcf	31,3	;volatile
  9010                           
  9011                           ;Config_ADC.c: 44:             ADCON0bits.CHS0 = 1;
  9012  1483  151F               	bsf	31,2	;volatile
  9013                           
  9014                           ;Config_ADC.c: 45:             break;
  9015  1484  2D28               	goto	l3219
  9016  1485                     l210:	
  9017                           ;Config_ADC.c: 46:         case 2:
  9018                           
  9019                           
  9020                           ;Config_ADC.c: 47:             ADCON0bits.CHS3 = 0;
  9021  1485  1283               	bcf	3,5	;RP0=0, select bank0
  9022  1486  1303               	bcf	3,6	;RP1=0, select bank0
  9023  1487  129F               	bcf	31,5	;volatile
  9024                           
  9025                           ;Config_ADC.c: 48:             ADCON0bits.CHS2 = 0;
  9026  1488  121F               	bcf	31,4	;volatile
  9027                           
  9028                           ;Config_ADC.c: 49:             ADCON0bits.CHS1 = 1;
  9029  1489  159F               	bsf	31,3	;volatile
  9030                           
  9031                           ;Config_ADC.c: 50:             ADCON0bits.CHS0 = 0;
  9032  148A  111F               	bcf	31,2	;volatile
  9033                           
  9034                           ;Config_ADC.c: 51:             break;
  9035  148B  2D28               	goto	l3219
  9036  148C                     l211:	
  9037                           ;Config_ADC.c: 52:         case 3:
  9038                           
  9039                           
  9040                           ;Config_ADC.c: 53:             ADCON0bits.CHS3 = 0;
  9041  148C  1283               	bcf	3,5	;RP0=0, select bank0
  9042  148D  1303               	bcf	3,6	;RP1=0, select bank0
  9043  148E  129F               	bcf	31,5	;volatile
  9044                           
  9045                           ;Config_ADC.c: 54:             ADCON0bits.CHS2 = 0;
  9046  148F  121F               	bcf	31,4	;volatile
  9047                           
  9048                           ;Config_ADC.c: 55:             ADCON0bits.CHS1 = 1;
  9049  1490  159F               	bsf	31,3	;volatile
  9050                           
  9051                           ;Config_ADC.c: 56:             ADCON0bits.CHS0 = 1;
  9052  1491  151F               	bsf	31,2	;volatile
  9053                           
  9054                           ;Config_ADC.c: 57:             break;
  9055  1492  2D28               	goto	l3219
  9056  1493                     l212:	
  9057                           ;Config_ADC.c: 58:         case 4:
  9058                           
  9059                           
  9060                           ;Config_ADC.c: 59:             ADCON0bits.CHS3 = 0;
  9061  1493  1283               	bcf	3,5	;RP0=0, select bank0
  9062  1494  1303               	bcf	3,6	;RP1=0, select bank0
  9063  1495  129F               	bcf	31,5	;volatile
  9064                           
  9065                           ;Config_ADC.c: 60:             ADCON0bits.CHS2 = 1;
  9066  1496  161F               	bsf	31,4	;volatile
  9067                           
  9068                           ;Config_ADC.c: 61:             ADCON0bits.CHS1 = 0;
  9069  1497  119F               	bcf	31,3	;volatile
  9070                           
  9071                           ;Config_ADC.c: 62:             ADCON0bits.CHS0 = 0;
  9072  1498  111F               	bcf	31,2	;volatile
  9073                           
  9074                           ;Config_ADC.c: 63:             break;
  9075  1499  2D28               	goto	l3219
  9076  149A                     l213:	
  9077                           ;Config_ADC.c: 64:         case 5:
  9078                           
  9079                           
  9080                           ;Config_ADC.c: 65:             ADCON0bits.CHS3 = 0;
  9081  149A  1283               	bcf	3,5	;RP0=0, select bank0
  9082  149B  1303               	bcf	3,6	;RP1=0, select bank0
  9083  149C  129F               	bcf	31,5	;volatile
  9084                           
  9085                           ;Config_ADC.c: 66:             ADCON0bits.CHS2 = 1;
  9086  149D  161F               	bsf	31,4	;volatile
  9087                           
  9088                           ;Config_ADC.c: 67:             ADCON0bits.CHS1 = 0;
  9089  149E  119F               	bcf	31,3	;volatile
  9090                           
  9091                           ;Config_ADC.c: 68:             ADCON0bits.CHS0 = 1;
  9092  149F  151F               	bsf	31,2	;volatile
  9093                           
  9094                           ;Config_ADC.c: 69:             break;
  9095  14A0  2D28               	goto	l3219
  9096  14A1                     l214:	
  9097                           ;Config_ADC.c: 70:         case 6:
  9098                           
  9099                           
  9100                           ;Config_ADC.c: 71:             ADCON0bits.CHS3 = 0;
  9101  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  9102  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  9103  14A3  129F               	bcf	31,5	;volatile
  9104                           
  9105                           ;Config_ADC.c: 72:             ADCON0bits.CHS2 = 1;
  9106  14A4  161F               	bsf	31,4	;volatile
  9107                           
  9108                           ;Config_ADC.c: 73:             ADCON0bits.CHS1 = 1;
  9109  14A5  159F               	bsf	31,3	;volatile
  9110                           
  9111                           ;Config_ADC.c: 74:             ADCON0bits.CHS0 = 0;
  9112  14A6  111F               	bcf	31,2	;volatile
  9113                           
  9114                           ;Config_ADC.c: 75:             break;
  9115  14A7  2D28               	goto	l3219
  9116  14A8                     l215:	
  9117                           ;Config_ADC.c: 76:         case 7:
  9118                           
  9119                           
  9120                           ;Config_ADC.c: 77:             ADCON0bits.CHS3 = 0;
  9121  14A8  1283               	bcf	3,5	;RP0=0, select bank0
  9122  14A9  1303               	bcf	3,6	;RP1=0, select bank0
  9123  14AA  129F               	bcf	31,5	;volatile
  9124                           
  9125                           ;Config_ADC.c: 78:             ADCON0bits.CHS2 = 1;
  9126  14AB  161F               	bsf	31,4	;volatile
  9127                           
  9128                           ;Config_ADC.c: 79:             ADCON0bits.CHS1 = 1;
  9129  14AC  159F               	bsf	31,3	;volatile
  9130                           
  9131                           ;Config_ADC.c: 80:             ADCON0bits.CHS0 = 1;
  9132  14AD  151F               	bsf	31,2	;volatile
  9133                           
  9134                           ;Config_ADC.c: 81:             break;
  9135  14AE  2D28               	goto	l3219
  9136  14AF                     l216:	
  9137                           ;Config_ADC.c: 82:         case 8:
  9138                           
  9139                           
  9140                           ;Config_ADC.c: 83:             ADCON0bits.CHS3 = 1;
  9141  14AF  1283               	bcf	3,5	;RP0=0, select bank0
  9142  14B0  1303               	bcf	3,6	;RP1=0, select bank0
  9143  14B1  169F               	bsf	31,5	;volatile
  9144                           
  9145                           ;Config_ADC.c: 84:             ADCON0bits.CHS2 = 0;
  9146  14B2  121F               	bcf	31,4	;volatile
  9147                           
  9148                           ;Config_ADC.c: 85:             ADCON0bits.CHS1 = 0;
  9149  14B3  119F               	bcf	31,3	;volatile
  9150                           
  9151                           ;Config_ADC.c: 86:             ADCON0bits.CHS0 = 0;
  9152  14B4  111F               	bcf	31,2	;volatile
  9153                           
  9154                           ;Config_ADC.c: 87:             break;
  9155  14B5  2D28               	goto	l3219
  9156  14B6                     l217:	
  9157                           ;Config_ADC.c: 88:         case 9:
  9158                           
  9159                           
  9160                           ;Config_ADC.c: 89:             ADCON0bits.CHS3 = 1;
  9161  14B6  1283               	bcf	3,5	;RP0=0, select bank0
  9162  14B7  1303               	bcf	3,6	;RP1=0, select bank0
  9163  14B8  169F               	bsf	31,5	;volatile
  9164                           
  9165                           ;Config_ADC.c: 90:             ADCON0bits.CHS2 = 0;
  9166  14B9  121F               	bcf	31,4	;volatile
  9167                           
  9168                           ;Config_ADC.c: 91:             ADCON0bits.CHS1 = 0;
  9169  14BA  119F               	bcf	31,3	;volatile
  9170                           
  9171                           ;Config_ADC.c: 92:             ADCON0bits.CHS0 = 1;
  9172  14BB  151F               	bsf	31,2	;volatile
  9173                           
  9174                           ;Config_ADC.c: 93:             break;
  9175  14BC  2D28               	goto	l3219
  9176  14BD                     l218:	
  9177                           ;Config_ADC.c: 94:         case 10:
  9178                           
  9179                           
  9180                           ;Config_ADC.c: 95:             ADCON0bits.CHS3 = 1;
  9181  14BD  1283               	bcf	3,5	;RP0=0, select bank0
  9182  14BE  1303               	bcf	3,6	;RP1=0, select bank0
  9183  14BF  169F               	bsf	31,5	;volatile
  9184                           
  9185                           ;Config_ADC.c: 96:             ADCON0bits.CHS2 = 0;
  9186  14C0  121F               	bcf	31,4	;volatile
  9187                           
  9188                           ;Config_ADC.c: 97:             ADCON0bits.CHS1 = 1;
  9189  14C1  159F               	bsf	31,3	;volatile
  9190                           
  9191                           ;Config_ADC.c: 98:             ADCON0bits.CHS0 = 0;
  9192  14C2  111F               	bcf	31,2	;volatile
  9193                           
  9194                           ;Config_ADC.c: 99:             break;
  9195  14C3  2D28               	goto	l3219
  9196  14C4                     l219:	
  9197                           ;Config_ADC.c: 100:         case 11:
  9198                           
  9199                           
  9200                           ;Config_ADC.c: 101:             ADCON0bits.CHS3 = 1;
  9201  14C4  1283               	bcf	3,5	;RP0=0, select bank0
  9202  14C5  1303               	bcf	3,6	;RP1=0, select bank0
  9203  14C6  169F               	bsf	31,5	;volatile
  9204                           
  9205                           ;Config_ADC.c: 102:             ADCON0bits.CHS2 = 0;
  9206  14C7  121F               	bcf	31,4	;volatile
  9207                           
  9208                           ;Config_ADC.c: 103:             ADCON0bits.CHS1 = 1;
  9209  14C8  159F               	bsf	31,3	;volatile
  9210                           
  9211                           ;Config_ADC.c: 104:             ADCON0bits.CHS0 = 1;
  9212  14C9  151F               	bsf	31,2	;volatile
  9213                           
  9214                           ;Config_ADC.c: 105:             break;
  9215  14CA  2D28               	goto	l3219
  9216  14CB                     l220:	
  9217                           ;Config_ADC.c: 106:         case 12:
  9218                           
  9219                           
  9220                           ;Config_ADC.c: 107:             ADCON0bits.CHS3 = 1;
  9221  14CB  1283               	bcf	3,5	;RP0=0, select bank0
  9222  14CC  1303               	bcf	3,6	;RP1=0, select bank0
  9223  14CD  169F               	bsf	31,5	;volatile
  9224                           
  9225                           ;Config_ADC.c: 108:             ADCON0bits.CHS2 = 1;
  9226  14CE  161F               	bsf	31,4	;volatile
  9227                           
  9228                           ;Config_ADC.c: 109:             ADCON0bits.CHS1 = 0;
  9229  14CF  119F               	bcf	31,3	;volatile
  9230                           
  9231                           ;Config_ADC.c: 110:             ADCON0bits.CHS0 = 0;
  9232  14D0  111F               	bcf	31,2	;volatile
  9233                           
  9234                           ;Config_ADC.c: 111:             break;
  9235  14D1  2D28               	goto	l3219
  9236  14D2                     l221:	
  9237                           ;Config_ADC.c: 112:         case 13:
  9238                           
  9239                           
  9240                           ;Config_ADC.c: 113:             ADCON0bits.CHS3 = 1;
  9241  14D2  1283               	bcf	3,5	;RP0=0, select bank0
  9242  14D3  1303               	bcf	3,6	;RP1=0, select bank0
  9243  14D4  169F               	bsf	31,5	;volatile
  9244                           
  9245                           ;Config_ADC.c: 114:             ADCON0bits.CHS2 = 1;
  9246  14D5  161F               	bsf	31,4	;volatile
  9247                           
  9248                           ;Config_ADC.c: 115:             ADCON0bits.CHS1 = 0;
  9249  14D6  119F               	bcf	31,3	;volatile
  9250                           
  9251                           ;Config_ADC.c: 116:             ADCON0bits.CHS0 = 1;
  9252  14D7  151F               	bsf	31,2	;volatile
  9253                           
  9254                           ;Config_ADC.c: 117:             break;
  9255  14D8  2D28               	goto	l3219
  9256  14D9                     l222:	
  9257                           ;Config_ADC.c: 118:         case 14:
  9258                           
  9259                           
  9260                           ;Config_ADC.c: 119:             ADCON0bits.CHS3 = 1;
  9261  14D9  1283               	bcf	3,5	;RP0=0, select bank0
  9262  14DA  1303               	bcf	3,6	;RP1=0, select bank0
  9263  14DB  169F               	bsf	31,5	;volatile
  9264                           
  9265                           ;Config_ADC.c: 120:             ADCON0bits.CHS2 = 1;
  9266  14DC  161F               	bsf	31,4	;volatile
  9267                           
  9268                           ;Config_ADC.c: 121:             ADCON0bits.CHS1 = 1;
  9269  14DD  159F               	bsf	31,3	;volatile
  9270                           
  9271                           ;Config_ADC.c: 122:             ADCON0bits.CHS0 = 0;
  9272  14DE  111F               	bcf	31,2	;volatile
  9273                           
  9274                           ;Config_ADC.c: 123:             break;
  9275  14DF  2D28               	goto	l3219
  9276  14E0                     l223:	
  9277                           ;Config_ADC.c: 124:         case 15:
  9278                           
  9279                           
  9280                           ;Config_ADC.c: 125:             ADCON0bits.CHS3 = 1;
  9281  14E0  1283               	bcf	3,5	;RP0=0, select bank0
  9282  14E1  1303               	bcf	3,6	;RP1=0, select bank0
  9283  14E2  169F               	bsf	31,5	;volatile
  9284                           
  9285                           ;Config_ADC.c: 126:             ADCON0bits.CHS2 = 1;
  9286  14E3  161F               	bsf	31,4	;volatile
  9287                           
  9288                           ;Config_ADC.c: 127:             ADCON0bits.CHS1 = 1;
  9289  14E4  159F               	bsf	31,3	;volatile
  9290                           
  9291                           ;Config_ADC.c: 128:             ADCON0bits.CHS0 = 1;
  9292  14E5  151F               	bsf	31,2	;volatile
  9293                           
  9294                           ;Config_ADC.c: 129:             break;
  9295  14E6  2D28               	goto	l3219
  9296  14E7                     l224:	
  9297                           ;Config_ADC.c: 130:         default:
  9298                           
  9299                           
  9300                           ;Config_ADC.c: 131:             ADCON0bits.CHS3 = 0;
  9301  14E7  1283               	bcf	3,5	;RP0=0, select bank0
  9302  14E8  1303               	bcf	3,6	;RP1=0, select bank0
  9303  14E9  129F               	bcf	31,5	;volatile
  9304                           
  9305                           ;Config_ADC.c: 132:             ADCON0bits.CHS2 = 0;
  9306  14EA  121F               	bcf	31,4	;volatile
  9307                           
  9308                           ;Config_ADC.c: 133:             ADCON0bits.CHS1 = 0;
  9309  14EB  119F               	bcf	31,3	;volatile
  9310                           
  9311                           ;Config_ADC.c: 134:             ADCON0bits.CHS0 = 0;
  9312  14EC  111F               	bcf	31,2	;volatile
  9313                           
  9314                           ;Config_ADC.c: 135:             break;
  9315  14ED  2D28               	goto	l3219
  9316  14EE                     l3217:
  9317  14EE  0875               	movf	ADC_Config@AN_num,w
  9318  14EF  00F3               	movwf	??_ADC_Config
  9319  14F0  01F4               	clrf	??_ADC_Config+1
  9320                           
  9321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9322                           ; Switch size 1, requested type "simple"
  9323                           ; Number of cases is 1, Range of values is 0 to 0
  9324                           ; switch strategies available:
  9325                           ; Name         Instructions Cycles
  9326                           ; simple_byte            4     3 (average)
  9327                           ; direct_byte           11     8 (fixed)
  9328                           ; jumptable            260     6 (fixed)
  9329                           ;	Chosen strategy is simple_byte
  9330  14F1  0874               	movf	??_ADC_Config+1,w
  9331  14F2  3A00               	xorlw	0	; case 0
  9332  14F3  1903               	skipnz
  9333  14F4  2CF6               	goto	l4597
  9334  14F5  2CE7               	goto	l224
  9335  14F6                     l4597:
  9336                           
  9337                           ; Switch size 1, requested type "simple"
  9338                           ; Number of cases is 16, Range of values is 0 to 15
  9339                           ; switch strategies available:
  9340                           ; Name         Instructions Cycles
  9341                           ; simple_byte           49    25 (average)
  9342                           ; direct_byte           56     8 (fixed)
  9343                           ; jumptable            260     6 (fixed)
  9344                           ;	Chosen strategy is simple_byte
  9345  14F6  0873               	movf	??_ADC_Config,w
  9346  14F7  3A00               	xorlw	0	; case 0
  9347  14F8  1903               	skipnz
  9348  14F9  2C77               	goto	l207
  9349  14FA  3A01               	xorlw	1	; case 1
  9350  14FB  1903               	skipnz
  9351  14FC  2C7E               	goto	l209
  9352  14FD  3A03               	xorlw	3	; case 2
  9353  14FE  1903               	skipnz
  9354  14FF  2C85               	goto	l210
  9355  1500  3A01               	xorlw	1	; case 3
  9356  1501  1903               	skipnz
  9357  1502  2C8C               	goto	l211
  9358  1503  3A07               	xorlw	7	; case 4
  9359  1504  1903               	skipnz
  9360  1505  2C93               	goto	l212
  9361  1506  3A01               	xorlw	1	; case 5
  9362  1507  1903               	skipnz
  9363  1508  2C9A               	goto	l213
  9364  1509  3A03               	xorlw	3	; case 6
  9365  150A  1903               	skipnz
  9366  150B  2CA1               	goto	l214
  9367  150C  3A01               	xorlw	1	; case 7
  9368  150D  1903               	skipnz
  9369  150E  2CA8               	goto	l215
  9370  150F  3A0F               	xorlw	15	; case 8
  9371  1510  1903               	skipnz
  9372  1511  2CAF               	goto	l216
  9373  1512  3A01               	xorlw	1	; case 9
  9374  1513  1903               	skipnz
  9375  1514  2CB6               	goto	l217
  9376  1515  3A03               	xorlw	3	; case 10
  9377  1516  1903               	skipnz
  9378  1517  2CBD               	goto	l218
  9379  1518  3A01               	xorlw	1	; case 11
  9380  1519  1903               	skipnz
  9381  151A  2CC4               	goto	l219
  9382  151B  3A07               	xorlw	7	; case 12
  9383  151C  1903               	skipnz
  9384  151D  2CCB               	goto	l220
  9385  151E  3A01               	xorlw	1	; case 13
  9386  151F  1903               	skipnz
  9387  1520  2CD2               	goto	l221
  9388  1521  3A03               	xorlw	3	; case 14
  9389  1522  1903               	skipnz
  9390  1523  2CD9               	goto	l222
  9391  1524  3A01               	xorlw	1	; case 15
  9392  1525  1903               	skipnz
  9393  1526  2CE0               	goto	l223
  9394  1527  2CE7               	goto	l224
  9395  1528                     l3219:
  9396                           
  9397                           ;Config_ADC.c: 137:     ADCON1 = 0b00000000;
  9398  1528  1683               	bsf	3,5	;RP0=1, select bank1
  9399  1529  1303               	bcf	3,6	;RP1=0, select bank1
  9400  152A  019F               	clrf	31	;volatile
  9401  152B                     l3221:
  9402                           
  9403                           ;Config_ADC.c: 138:     ADCON0bits.ADCS1 = 1;
  9404  152B  1283               	bcf	3,5	;RP0=0, select bank0
  9405  152C  1303               	bcf	3,6	;RP1=0, select bank0
  9406  152D  179F               	bsf	31,7	;volatile
  9407  152E                     l3223:
  9408                           
  9409                           ;Config_ADC.c: 139:     ADCON0bits.ADCS0 = 0;
  9410  152E  131F               	bcf	31,6	;volatile
  9411  152F                     l3225:
  9412                           
  9413                           ;Config_ADC.c: 140:     ADCON0bits.ADON = 1;
  9414  152F  141F               	bsf	31,0	;volatile
  9415  1530                     l225:
  9416  1530  0008               	return
  9417  1531                     __end_of_ADC_Config:
  9418                           
  9419                           	psect	text44
  9420  1D46                     __ptext44:	
  9421 ;; *************** function _ISR *****************
  9422 ;; Defined at:
  9423 ;;		line 79 in file "pseudocodigo_lab3.c"
  9424 ;; Parameters:    Size  Location     Type
  9425 ;;		None
  9426 ;; Auto vars:     Size  Location     Type
  9427 ;;		None
  9428 ;; Return value:  Size  Location     Type
  9429 ;;                  1    wreg      void 
  9430 ;; Registers used:
  9431 ;;		wreg, status,2, status,0
  9432 ;; Tracked objects:
  9433 ;;		On entry : 0/0
  9434 ;;		On exit  : 0/0
  9435 ;;		Unchanged: 0/0
  9436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9437 ;;      Params:         0       0       0       0       0
  9438 ;;      Locals:         0       0       0       0       0
  9439 ;;      Temps:          3       0       0       0       0
  9440 ;;      Totals:         3       0       0       0       0
  9441 ;;Total ram usage:        3 bytes
  9442 ;; Hardware stack levels used:    1
  9443 ;; This function calls:
  9444 ;;		Nothing
  9445 ;; This function is called by:
  9446 ;;		Interrupt level 1
  9447 ;; This function uses a non-reentrant model
  9448 ;;
  9449                           
  9450                           
  9451                           ;psect for function _ISR
  9452  1D46                     _ISR:
  9453  1D46                     i1l3385:
  9454                           
  9455                           ;pseudocodigo_lab3.c: 80:     if(PIR1bits.RCIF == 1){
  9456  1D46  1283               	bcf	3,5	;RP0=0, select bank0
  9457  1D47  1303               	bcf	3,6	;RP1=0, select bank0
  9458  1D48  1E8C               	btfss	12,5	;volatile
  9459  1D49  2D4B               	goto	u454_21
  9460  1D4A  2D4C               	goto	u454_20
  9461  1D4B                     u454_21:
  9462  1D4B  2D66               	goto	i1l87
  9463  1D4C                     u454_20:
  9464  1D4C                     i1l3387:
  9465                           
  9466                           ;pseudocodigo_lab3.c: 81:         data_recive = RCREG;
  9467  1D4C  081A               	movf	26,w	;volatile
  9468  1D4D  00F0               	movwf	??_ISR
  9469  1D4E  0870               	movf	??_ISR,w
  9470  1D4F  00FA               	movwf	_data_recive
  9471  1D50                     i1l3389:
  9472                           
  9473                           ;pseudocodigo_lab3.c: 83:         if (data_recive == '+'){
  9474  1D50  302B               	movlw	43
  9475  1D51  067A               	xorwf	_data_recive,w
  9476  1D52  1D03               	btfss	3,2
  9477  1D53  2D55               	goto	u455_21
  9478  1D54  2D56               	goto	u455_20
  9479  1D55                     u455_21:
  9480  1D55  2D5D               	goto	i1l3395
  9481  1D56                     u455_20:
  9482  1D56                     i1l3391:
  9483                           
  9484                           ;pseudocodigo_lab3.c: 84:             cont++;
  9485  1D56  3001               	movlw	1
  9486  1D57  00F0               	movwf	??_ISR
  9487  1D58  0870               	movf	??_ISR,w
  9488  1D59  07EE               	addwf	_cont,f
  9489  1D5A                     i1l3393:
  9490                           
  9491                           ;pseudocodigo_lab3.c: 85:             PORTB = cont;
  9492  1D5A  086E               	movf	_cont,w
  9493  1D5B  0086               	movwf	6	;volatile
  9494                           
  9495                           ;pseudocodigo_lab3.c: 86:         }
  9496  1D5C  2D65               	goto	i1l3399
  9497  1D5D                     i1l3395:
  9498  1D5D  302D               	movlw	45
  9499  1D5E  067A               	xorwf	_data_recive,w
  9500  1D5F  1D03               	btfss	3,2
  9501  1D60  2D62               	goto	u456_21
  9502  1D61  2D63               	goto	u456_20
  9503  1D62                     u456_21:
  9504  1D62  2D65               	goto	i1l3399
  9505  1D63                     u456_20:
  9506  1D63                     i1l3397:
  9507                           
  9508                           ;pseudocodigo_lab3.c: 88:             cont--;
  9509  1D63  3001               	movlw	1
  9510  1D64  02EE               	subwf	_cont,f
  9511  1D65                     i1l3399:
  9512                           
  9513                           ;pseudocodigo_lab3.c: 90:         data_recive = 0;
  9514  1D65  01FA               	clrf	_data_recive
  9515  1D66                     i1l87:
  9516  1D66  0872               	movf	??_ISR+2,w
  9517  1D67  008A               	movwf	10
  9518  1D68  0E71               	swapf	??_ISR+1,w
  9519  1D69  0083               	movwf	3
  9520  1D6A  0EFE               	swapf	btemp,f
  9521  1D6B  0E7E               	swapf	btemp,w
  9522  1D6C  0009               	retfie
  9523  1D6D                     __end_of_ISR:
  9524  007E                     btemp	set	126	;btemp
  9525  007E                     wtemp0	set	126
  9526                           
  9527                           	psect	intentry
  9528  0004                     __pintentry:	
  9529                           ;incstack = 0
  9530                           ; Regs used in _ISR: [wreg+status,2+status,0]
  9531                           
  9532  0004                     interrupt_function:
  9533  007E                     saved_w	set	btemp
  9534  0004  00FE               	movwf	btemp
  9535  0005  0E03               	swapf	3,w
  9536  0006  00F1               	movwf	??_ISR+1
  9537  0007  080A               	movf	10,w
  9538  0008  00F2               	movwf	??_ISR+2
  9539  0009  160A  158A  2D46   	ljmp	_ISR
  9540                           
  9541                           	psect	config
  9542                           
  9543                           ;Config register CONFIG1 @ 0x2007
  9544                           ;	Oscillator Selection bits
  9545                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  9546                           ;	Watchdog Timer Enable bit
  9547                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9548                           ;	Power-up Timer Enable bit
  9549                           ;	PWRTE = OFF, PWRT disabled
  9550                           ;	RE3/MCLR pin function select bit
  9551                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9552                           ;	Code Protection bit
  9553                           ;	CP = OFF, Program memory code protection is disabled
  9554                           ;	Data Code Protection bit
  9555                           ;	CPD = OFF, Data memory code protection is disabled
  9556                           ;	Brown Out Reset Selection bits
  9557                           ;	BOREN = OFF, BOR disabled
  9558                           ;	Internal External Switchover bit
  9559                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9560                           ;	Fail-Safe Clock Monitor Enabled bit
  9561                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9562                           ;	Low Voltage Programming Enable bit
  9563                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9564                           ;	In-Circuit Debugger Mode bit
  9565                           ;	DEBUG = 0x1, unprogrammed default
  9566  2007                     	org	8199
  9567  2007  20D2               	dw	8402
  9568                           
  9569                           ;Config register CONFIG2 @ 0x2008
  9570                           ;	Brown-out Reset Selection bit
  9571                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9572                           ;	Flash Program Memory Self Write Enable bits
  9573                           ;	WRT = OFF, Write protection off
  9574  2008                     	org	8200
  9575  2008  3FFF               	dw	16383
  9576                           
  9577                           	psect	text17_split_1
  9578  0022                     u6090:
  9579  0022                     l4183:
  9580  0022  1683               	bsf	3,5	;RP0=1, select bank1
  9581  0023  1303               	bcf	3,6	;RP1=0, select bank1
  9582  0024  083A               	movf	(sprintf@fval+2)^(0+128),w
  9583  0025  0439               	iorwf	(sprintf@fval+1)^(0+128),w
  9584  0026  0438               	iorwf	sprintf@fval^(0+128),w
  9585  0027  1903               	skipnz
  9586  0028  282A               	goto	u6101
  9587  0029  282B               	goto	u6100
  9588  002A                     u6101:
  9589  002A  28E9               	goto	l4203
  9590  002B                     u6100:
  9591  002B                     l4185:
  9592  002B  0838               	movf	sprintf@fval^(0+128),w
  9593  002C  1283               	bcf	3,5	;RP0=0, select bank0
  9594  002D  1303               	bcf	3,6	;RP1=0, select bank0
  9595  002E  00C8               	movwf	___fttol@f1
  9596  002F  1683               	bsf	3,5	;RP0=1, select bank1
  9597  0030  1303               	bcf	3,6	;RP1=0, select bank1
  9598  0031  0839               	movf	(sprintf@fval+1)^(0+128),w
  9599  0032  1283               	bcf	3,5	;RP0=0, select bank0
  9600  0033  1303               	bcf	3,6	;RP1=0, select bank0
  9601  0034  00C9               	movwf	___fttol@f1+1
  9602  0035  1683               	bsf	3,5	;RP0=1, select bank1
  9603  0036  1303               	bcf	3,6	;RP1=0, select bank1
  9604  0037  083A               	movf	(sprintf@fval+2)^(0+128),w
  9605  0038  1283               	bcf	3,5	;RP0=0, select bank0
  9606  0039  1303               	bcf	3,6	;RP1=0, select bank0
  9607  003A  00CA               	movwf	___fttol@f1+2
  9608  003B  160A  118A  23E9  120A  118A  	fcall	___fttol
  9609  0040  1283               	bcf	3,5	;RP0=0, select bank0
  9610  0041  1303               	bcf	3,6	;RP1=0, select bank0
  9611  0042  084B               	movf	?___fttol+3,w
  9612  0043  044A               	iorwf	?___fttol+2,w
  9613  0044  0449               	iorwf	?___fttol+1,w
  9614  0045  0448               	iorwf	?___fttol,w
  9615  0046  1D03               	skipz
  9616  0047  2849               	goto	u6111
  9617  0048  284A               	goto	u6110
  9618  0049                     u6111:
  9619  0049  28E9               	goto	l4203
  9620  004A                     u6110:
  9621  004A                     l4187:
  9622  004A  1683               	bsf	3,5	;RP0=1, select bank1
  9623  004B  1303               	bcf	3,6	;RP1=0, select bank1
  9624  004C  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9625  004D  3A80               	xorlw	128
  9626  004E  00FF               	movwf	btemp+1
  9627  004F  3080               	movlw	128
  9628  0050  027F               	subwf	btemp+1,w
  9629  0051  1D03               	skipz
  9630  0052  2855               	goto	u6125
  9631  0053  3002               	movlw	2
  9632  0054  0236               	subwf	sprintf@eexp^(0+128),w
  9633  0055                     u6125:
  9634  0055  1C03               	skipc
  9635  0056  2858               	goto	u6121
  9636  0057  2859               	goto	u6120
  9637  0058                     u6121:
  9638  0058  28E9               	goto	l4203
  9639  0059                     u6120:
  9640  0059                     l4189:
  9641                           
  9642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9643  0059  1683               	bsf	3,5	;RP0=1, select bank1
  9644  005A  1303               	bcf	3,6	;RP1=0, select bank1
  9645  005B  082E               	movf	sprintf@tmpval^(0+128),w
  9646  005C  1283               	bcf	3,5	;RP0=0, select bank0
  9647  005D  1303               	bcf	3,6	;RP1=0, select bank0
  9648  005E  00A0               	movwf	___ftge@ff1
  9649  005F  1683               	bsf	3,5	;RP0=1, select bank1
  9650  0060  1303               	bcf	3,6	;RP1=0, select bank1
  9651  0061  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9652  0062  1283               	bcf	3,5	;RP0=0, select bank0
  9653  0063  1303               	bcf	3,6	;RP1=0, select bank0
  9654  0064  00A1               	movwf	___ftge@ff1+1
  9655  0065  1683               	bsf	3,5	;RP0=1, select bank1
  9656  0066  1303               	bcf	3,6	;RP1=0, select bank1
  9657  0067  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9658  0068  1283               	bcf	3,5	;RP0=0, select bank0
  9659  0069  1303               	bcf	3,6	;RP1=0, select bank0
  9660  006A  00A2               	movwf	___ftge@ff1+2
  9661  006B  3070               	movlw	112
  9662  006C  00A3               	movwf	___ftge@ff2
  9663  006D  3089               	movlw	137
  9664  006E  00A4               	movwf	___ftge@ff2+1
  9665  006F  3040               	movlw	64
  9666  0070  00A5               	movwf	___ftge@ff2+2
  9667  0071  160A  158A  26AE  120A  118A  	fcall	___ftge
  9668  0076  1803               	btfsc	3,0
  9669  0077  2879               	goto	u6131
  9670  0078  287A               	goto	u6130
  9671  0079                     u6131:
  9672  0079  2883               	goto	l4193
  9673  007A                     u6130:
  9674  007A                     l4191:
  9675                           
  9676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9677  007A  30F7               	movlw	247
  9678  007B  1683               	bsf	3,5	;RP0=1, select bank1
  9679  007C  1303               	bcf	3,6	;RP1=0, select bank1
  9680  007D  07B6               	addwf	sprintf@eexp^(0+128),f
  9681  007E  1803               	skipnc
  9682  007F  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9683  0080  30FF               	movlw	255
  9684  0081  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9685                           
  9686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9687  0082  288B               	goto	l4195
  9688  0083                     l4193:
  9689                           
  9690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9691  0083  30F8               	movlw	248
  9692  0084  1683               	bsf	3,5	;RP0=1, select bank1
  9693  0085  1303               	bcf	3,6	;RP1=0, select bank1
  9694  0086  07B6               	addwf	sprintf@eexp^(0+128),f
  9695  0087  1803               	skipnc
  9696  0088  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
  9697  0089  30FF               	movlw	255
  9698  008A  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
  9699  008B                     l4195:
  9700                           
  9701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1151:      tmpval
      +                          .integ = scale(eexp);
  9702  008B  0836               	movf	sprintf@eexp^(0+128),w
  9703  008C  120A  158A  226D  120A  118A  	fcall	_scale
  9704  0091  1283               	bcf	3,5	;RP0=0, select bank0
  9705  0092  1303               	bcf	3,6	;RP1=0, select bank0
  9706  0093  083F               	movf	?_scale,w
  9707  0094  1683               	bsf	3,5	;RP0=1, select bank1
  9708  0095  1303               	bcf	3,6	;RP1=0, select bank1
  9709  0096  00AE               	movwf	sprintf@tmpval^(0+128)
  9710  0097  1283               	bcf	3,5	;RP0=0, select bank0
  9711  0098  1303               	bcf	3,6	;RP1=0, select bank0
  9712  0099  0840               	movf	?_scale+1,w
  9713  009A  1683               	bsf	3,5	;RP0=1, select bank1
  9714  009B  1303               	bcf	3,6	;RP1=0, select bank1
  9715  009C  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
  9716  009D  1283               	bcf	3,5	;RP0=0, select bank0
  9717  009E  1303               	bcf	3,6	;RP1=0, select bank0
  9718  009F  0841               	movf	?_scale+2,w
  9719  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  9720  00A1  1303               	bcf	3,6	;RP1=0, select bank1
  9721  00A2  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
  9722  00A3                     l4199:	
  9723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9724                           
  9725  00A3  0838               	movf	sprintf@fval^(0+128),w
  9726  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  9727  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  9728  00A6  00A0               	movwf	__tdiv_to_l_@f1
  9729  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  9730  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  9731  00A9  0839               	movf	(sprintf@fval+1)^(0+128),w
  9732  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  9733  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  9734  00AC  00A1               	movwf	__tdiv_to_l_@f1+1
  9735  00AD  1683               	bsf	3,5	;RP0=1, select bank1
  9736  00AE  1303               	bcf	3,6	;RP1=0, select bank1
  9737  00AF  083A               	movf	(sprintf@fval+2)^(0+128),w
  9738  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  9739  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  9740  00B2  00A2               	movwf	__tdiv_to_l_@f1+2
  9741  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  9742  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  9743  00B5  082E               	movf	sprintf@tmpval^(0+128),w
  9744  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  9745  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  9746  00B8  00A3               	movwf	__tdiv_to_l_@f2
  9747  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  9748  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  9749  00BB  082F               	movf	(sprintf@tmpval+1)^(0+128),w
  9750  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  9751  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  9752  00BE  00A4               	movwf	__tdiv_to_l_@f2+1
  9753  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  9754  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  9755  00C1  0830               	movf	(sprintf@tmpval+2)^(0+128),w
  9756  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  9757  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  9758  00C4  00A5               	movwf	__tdiv_to_l_@f2+2
  9759  00C5  160A  118A  2531  120A  118A  	fcall	__tdiv_to_l_
  9760  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  9761  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  9762  00CC  0823               	movf	?__tdiv_to_l_+3,w
  9763  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  9764  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  9765  00CF  00B5               	movwf	(sprintf@val+3)^(0+128)
  9766  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  9767  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  9768  00D2  0822               	movf	?__tdiv_to_l_+2,w
  9769  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  9770  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  9771  00D5  00B4               	movwf	(sprintf@val+2)^(0+128)
  9772  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  9773  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  9774  00D8  0821               	movf	?__tdiv_to_l_+1,w
  9775  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  9776  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  9777  00DB  00B3               	movwf	(sprintf@val+1)^(0+128)
  9778  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  9779  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  9780  00DE  0820               	movf	?__tdiv_to_l_,w
  9781  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  9782  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  9783  00E1  00B2               	movwf	sprintf@val^(0+128)
  9784  00E2                     l4201:
  9785                           
  9786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9787  00E2  3000               	movlw	0
  9788  00E3  00B8               	movwf	sprintf@fval^(0+128)
  9789  00E4  3000               	movlw	0
  9790  00E5  00B9               	movwf	(sprintf@fval+1)^(0+128)
  9791  00E6  3000               	movlw	0
  9792  00E7  00BA               	movwf	(sprintf@fval+2)^(0+128)
  9793                           
  9794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9795  00E8  2966               	goto	l4207
  9796  00E9                     l4203:
  9797                           
  9798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9799  00E9  1683               	bsf	3,5	;RP0=1, select bank1
  9800  00EA  1303               	bcf	3,6	;RP1=0, select bank1
  9801  00EB  0838               	movf	sprintf@fval^(0+128),w
  9802  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  9803  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  9804  00EE  00C8               	movwf	___fttol@f1
  9805  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  9806  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  9807  00F1  0839               	movf	(sprintf@fval+1)^(0+128),w
  9808  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  9809  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  9810  00F4  00C9               	movwf	___fttol@f1+1
  9811  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  9812  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  9813  00F7  083A               	movf	(sprintf@fval+2)^(0+128),w
  9814  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  9815  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  9816  00FA  00CA               	movwf	___fttol@f1+2
  9817  00FB  160A  118A  23E9  120A  118A  	fcall	___fttol
  9818  0100  1283               	bcf	3,5	;RP0=0, select bank0
  9819  0101  1303               	bcf	3,6	;RP1=0, select bank0
  9820  0102  084B               	movf	?___fttol+3,w
  9821  0103  1683               	bsf	3,5	;RP0=1, select bank1
  9822  0104  1303               	bcf	3,6	;RP1=0, select bank1
  9823  0105  00B5               	movwf	(sprintf@val+3)^(0+128)
  9824  0106  1283               	bcf	3,5	;RP0=0, select bank0
  9825  0107  1303               	bcf	3,6	;RP1=0, select bank0
  9826  0108  084A               	movf	?___fttol+2,w
  9827  0109  1683               	bsf	3,5	;RP0=1, select bank1
  9828  010A  1303               	bcf	3,6	;RP1=0, select bank1
  9829  010B  00B4               	movwf	(sprintf@val+2)^(0+128)
  9830  010C  1283               	bcf	3,5	;RP0=0, select bank0
  9831  010D  1303               	bcf	3,6	;RP1=0, select bank0
  9832  010E  0849               	movf	?___fttol+1,w
  9833  010F  1683               	bsf	3,5	;RP0=1, select bank1
  9834  0110  1303               	bcf	3,6	;RP1=0, select bank1
  9835  0111  00B3               	movwf	(sprintf@val+1)^(0+128)
  9836  0112  1283               	bcf	3,5	;RP0=0, select bank0
  9837  0113  1303               	bcf	3,6	;RP1=0, select bank0
  9838  0114  0848               	movf	?___fttol,w
  9839  0115  1683               	bsf	3,5	;RP0=1, select bank1
  9840  0116  1303               	bcf	3,6	;RP1=0, select bank1
  9841  0117  00B2               	movwf	sprintf@val^(0+128)
  9842                           
  9843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9844  0118  0835               	movf	(sprintf@val+3)^(0+128),w
  9845  0119  1283               	bcf	3,5	;RP0=0, select bank0
  9846  011A  1303               	bcf	3,6	;RP1=0, select bank0
  9847  011B  00A6               	movwf	___lltoft@c+3
  9848  011C  1683               	bsf	3,5	;RP0=1, select bank1
  9849  011D  1303               	bcf	3,6	;RP1=0, select bank1
  9850  011E  0834               	movf	(sprintf@val+2)^(0+128),w
  9851  011F  1283               	bcf	3,5	;RP0=0, select bank0
  9852  0120  1303               	bcf	3,6	;RP1=0, select bank0
  9853  0121  00A5               	movwf	___lltoft@c+2
  9854  0122  1683               	bsf	3,5	;RP0=1, select bank1
  9855  0123  1303               	bcf	3,6	;RP1=0, select bank1
  9856  0124  0833               	movf	(sprintf@val+1)^(0+128),w
  9857  0125  1283               	bcf	3,5	;RP0=0, select bank0
  9858  0126  1303               	bcf	3,6	;RP1=0, select bank0
  9859  0127  00A4               	movwf	___lltoft@c+1
  9860  0128  1683               	bsf	3,5	;RP0=1, select bank1
  9861  0129  1303               	bcf	3,6	;RP1=0, select bank1
  9862  012A  0832               	movf	sprintf@val^(0+128),w
  9863  012B  1283               	bcf	3,5	;RP0=0, select bank0
  9864  012C  1303               	bcf	3,6	;RP1=0, select bank0
  9865  012D  00A3               	movwf	___lltoft@c
  9866  012E  160A  158A  2643  120A  118A  	fcall	___lltoft
  9867  0133  1283               	bcf	3,5	;RP0=0, select bank0
  9868  0134  1303               	bcf	3,6	;RP1=0, select bank0
  9869  0135  0823               	movf	?___lltoft,w
  9870  0136  00DC               	movwf	___ftsub@f2
  9871  0137  0824               	movf	?___lltoft+1,w
  9872  0138  00DD               	movwf	___ftsub@f2+1
  9873  0139  0825               	movf	?___lltoft+2,w
  9874  013A  00DE               	movwf	___ftsub@f2+2
  9875  013B  1683               	bsf	3,5	;RP0=1, select bank1
  9876  013C  1303               	bcf	3,6	;RP1=0, select bank1
  9877  013D  0838               	movf	sprintf@fval^(0+128),w
  9878  013E  1283               	bcf	3,5	;RP0=0, select bank0
  9879  013F  1303               	bcf	3,6	;RP1=0, select bank0
  9880  0140  00DF               	movwf	___ftsub@f1
  9881  0141  1683               	bsf	3,5	;RP0=1, select bank1
  9882  0142  1303               	bcf	3,6	;RP1=0, select bank1
  9883  0143  0839               	movf	(sprintf@fval+1)^(0+128),w
  9884  0144  1283               	bcf	3,5	;RP0=0, select bank0
  9885  0145  1303               	bcf	3,6	;RP1=0, select bank0
  9886  0146  00E0               	movwf	___ftsub@f1+1
  9887  0147  1683               	bsf	3,5	;RP0=1, select bank1
  9888  0148  1303               	bcf	3,6	;RP1=0, select bank1
  9889  0149  083A               	movf	(sprintf@fval+2)^(0+128),w
  9890  014A  1283               	bcf	3,5	;RP0=0, select bank0
  9891  014B  1303               	bcf	3,6	;RP1=0, select bank0
  9892  014C  00E1               	movwf	___ftsub@f1+2
  9893  014D  160A  158A  24FB  120A  118A  	fcall	___ftsub
  9894  0152  1283               	bcf	3,5	;RP0=0, select bank0
  9895  0153  1303               	bcf	3,6	;RP1=0, select bank0
  9896  0154  085C               	movf	?___ftsub,w
  9897  0155  1683               	bsf	3,5	;RP0=1, select bank1
  9898  0156  1303               	bcf	3,6	;RP1=0, select bank1
  9899  0157  00B8               	movwf	sprintf@fval^(0+128)
  9900  0158  1283               	bcf	3,5	;RP0=0, select bank0
  9901  0159  1303               	bcf	3,6	;RP1=0, select bank0
  9902  015A  085D               	movf	?___ftsub+1,w
  9903  015B  1683               	bsf	3,5	;RP0=1, select bank1
  9904  015C  1303               	bcf	3,6	;RP1=0, select bank1
  9905  015D  00B9               	movwf	(sprintf@fval+1)^(0+128)
  9906  015E  1283               	bcf	3,5	;RP0=0, select bank0
  9907  015F  1303               	bcf	3,6	;RP1=0, select bank0
  9908  0160  085E               	movf	?___ftsub+2,w
  9909  0161  1683               	bsf	3,5	;RP0=1, select bank1
  9910  0162  1303               	bcf	3,6	;RP1=0, select bank1
  9911  0163  00BA               	movwf	(sprintf@fval+2)^(0+128)
  9912  0164                     l4205:
  9913                           
  9914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9915  0164  01B6               	clrf	sprintf@eexp^(0+128)
  9916  0165  01B7               	clrf	(sprintf@eexp+1)^(0+128)
  9917  0166                     l4207:
  9918                           
  9919                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9920  0166  01BE               	clrf	sprintf@c^(0+128)
  9921  0167  0ABE               	incf	sprintf@c^(0+128),f
  9922  0168                     l4213:
  9923                           
  9924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9925  0168  083E               	movf	sprintf@c^(0+128),w
  9926  0169  00A0               	movwf	??_sprintf^(0+128)
  9927  016A  3001               	movlw	1
  9928  016B                     u6145:
  9929  016B  1003               	clrc
  9930  016C  0DA0               	rlf	??_sprintf^(0+128),f
  9931  016D  3EFF               	addlw	-1
  9932  016E  1D03               	skipz
  9933  016F  296B               	goto	u6145
  9934  0170  1003               	clrc
  9935  0171  0D20               	rlf	??_sprintf^(0+128),w
  9936  0172  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9937  0173  0084               	movwf	4
  9938  0174  160A  118A  200A  120A  118A  	fcall	stringdir
  9939  0179  00A1               	movwf	(??_sprintf+1)^(0+128)
  9940  017A  160A  118A  200A  120A  118A  	fcall	stringdir
  9941  017F  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  9942  0180  160A  118A  200A  120A  118A  	fcall	stringdir
  9943  0185  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
  9944  0186  160A  118A  200A  120A  118A  	fcall	stringdir
  9945  018B  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
  9946  018C  0824               	movf	(??_sprintf+4)^(0+128),w
  9947  018D  0235               	subwf	(sprintf@val+3)^(0+128),w
  9948  018E  1D03               	skipz
  9949  018F  299A               	goto	u6155
  9950  0190  0823               	movf	(??_sprintf+3)^(0+128),w
  9951  0191  0234               	subwf	(sprintf@val+2)^(0+128),w
  9952  0192  1D03               	skipz
  9953  0193  299A               	goto	u6155
  9954  0194  0822               	movf	(??_sprintf+2)^(0+128),w
  9955  0195  0233               	subwf	(sprintf@val+1)^(0+128),w
  9956  0196  1D03               	skipz
  9957  0197  299A               	goto	u6155
  9958  0198  0821               	movf	(??_sprintf+1)^(0+128),w
  9959  0199  0232               	subwf	sprintf@val^(0+128),w
  9960  019A                     u6155:
  9961  019A  1803               	skipnc
  9962  019B  299D               	goto	u6151
  9963  019C  299E               	goto	u6150
  9964  019D                     u6151:
  9965  019D  299F               	goto	l4217
  9966  019E                     u6150:
  9967  019E  29A9               	goto	l4219
  9968  019F                     l4217:
  9969  019F  3001               	movlw	1
  9970  01A0  00A0               	movwf	??_sprintf^(0+128)
  9971  01A1  0820               	movf	??_sprintf^(0+128),w
  9972  01A2  07BE               	addwf	sprintf@c^(0+128),f
  9973  01A3  300A               	movlw	10
  9974  01A4  063E               	xorwf	sprintf@c^(0+128),w
  9975  01A5  1D03               	btfss	3,2
  9976  01A6  29A8               	goto	u6161
  9977  01A7  29A9               	goto	u6160
  9978  01A8                     u6161:
  9979  01A8  2968               	goto	l4213
  9980  01A9                     u6160:
  9981  01A9                     l4219:
  9982                           
  9983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9984  01A9  083E               	movf	sprintf@c^(0+128),w
  9985  01AA  073C               	addwf	sprintf@prec^(0+128),w
  9986  01AB  00A0               	movwf	??_sprintf^(0+128)
  9987  01AC  083D               	movf	(sprintf@prec+1)^(0+128),w
  9988  01AD  1803               	skipnc
  9989  01AE  0A3D               	incf	(sprintf@prec+1)^(0+128),w
  9990  01AF  00A1               	movwf	(??_sprintf^(0+128)+1)
  9991  01B0  0836               	movf	sprintf@eexp^(0+128),w
  9992  01B1  0720               	addwf	??_sprintf^(0+128),w
  9993  01B2  00A2               	movwf	(??_sprintf+2)^(0+128)
  9994  01B3  0837               	movf	(sprintf@eexp+1)^(0+128),w
  9995  01B4  1803               	skipnc
  9996  01B5  0A37               	incf	(sprintf@eexp+1)^(0+128),w
  9997  01B6  0721               	addwf	(??_sprintf+1)^(0+128),w
  9998  01B7  00A3               	movwf	(??_sprintf+3)^(0+128)
  9999  01B8  0822               	movf	(??_sprintf+2)^(0+128),w
 10000  01B9  02AC               	subwf	sprintf@width^(0+128),f
 10001  01BA  0823               	movf	(??_sprintf+3)^(0+128),w
 10002  01BB  1C03               	skipc
 10003  01BC  03AD               	decf	(sprintf@width+1)^(0+128),f
 10004  01BD  02AD               	subwf	(sprintf@width+1)^(0+128),f
 10005                           
 10006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10007  01BE  083C               	movf	sprintf@prec^(0+128),w
 10008  01BF  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10009  01C0  1903               	btfsc	3,2
 10010  01C1  29C3               	goto	u6171
 10011  01C2  29C4               	goto	u6170
 10012  01C3                     u6171:
 10013  01C3  29CA               	goto	l4223
 10014  01C4                     u6170:
 10015  01C4                     l4221:
 10016                           
 10017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10018  01C4  30FF               	movlw	255
 10019  01C5  07AC               	addwf	sprintf@width^(0+128),f
 10020  01C6  1803               	skipnc
 10021  01C7  0AAD               	incf	(sprintf@width+1)^(0+128),f
 10022  01C8  30FF               	movlw	255
 10023  01C9  07AD               	addwf	(sprintf@width+1)^(0+128),f
 10024  01CA                     l4223:
 10025                           
 10026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10027  01CA  3003               	movlw	3
 10028  01CB  052A               	andwf	sprintf@flag^(0+128),w
 10029  01CC  00A0               	movwf	??_sprintf^(0+128)
 10030  01CD  3000               	movlw	0
 10031  01CE  052B               	andwf	(sprintf@flag+1)^(0+128),w
 10032  01CF  00A1               	movwf	(??_sprintf+1)^(0+128)
 10033  01D0  0820               	movf	??_sprintf^(0+128),w
 10034  01D1  0421               	iorwf	(??_sprintf^(0+128)+1),w
 10035  01D2  1903               	btfsc	3,2
 10036  01D3  29D5               	goto	u6181
 10037  01D4  29D6               	goto	u6180
 10038  01D5                     u6181:
 10039  01D5  29EB               	goto	l4233
 10040  01D6                     u6180:
 10041  01D6                     l4225:
 10042                           
 10043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10044  01D6  30FF               	movlw	255
 10045  01D7  07AC               	addwf	sprintf@width^(0+128),f
 10046  01D8  1803               	skipnc
 10047  01D9  0AAD               	incf	(sprintf@width+1)^(0+128),f
 10048  01DA  30FF               	movlw	255
 10049  01DB  07AD               	addwf	(sprintf@width+1)^(0+128),f
 10050  01DC  29EB               	goto	l4233
 10051  01DD                     l4227:
 10052                           
 10053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10054  01DD  3020               	movlw	32
 10055  01DE  1683               	bsf	3,5	;RP0=1, select bank1
 10056  01DF  1303               	bcf	3,6	;RP1=0, select bank1
 10057  01E0  00A0               	movwf	??_sprintf^(0+128)
 10058  01E1  083B               	movf	sprintf@sp^(0+128),w
 10059  01E2  0084               	movwf	4
 10060  01E3  0820               	movf	??_sprintf^(0+128),w
 10061  01E4  1383               	bcf	3,7	;select IRP bank0
 10062  01E5  0080               	movwf	0
 10063  01E6                     l4229:
 10064  01E6  3001               	movlw	1
 10065  01E7  00A0               	movwf	??_sprintf^(0+128)
 10066  01E8  0820               	movf	??_sprintf^(0+128),w
 10067  01E9  07BB               	addwf	sprintf@sp^(0+128),f
 10068  01EA  29D6               	goto	l4225
 10069  01EB                     l4233:
 10070                           
 10071                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10072  01EB  082D               	movf	(sprintf@width+1)^(0+128),w
 10073  01EC  3A80               	xorlw	128
 10074  01ED  00FF               	movwf	btemp+1
 10075  01EE  3080               	movlw	128
 10076  01EF  027F               	subwf	btemp+1,w
 10077  01F0  1D03               	skipz
 10078  01F1  29F4               	goto	u6195
 10079  01F2  3001               	movlw	1
 10080  01F3  022C               	subwf	sprintf@width^(0+128),w
 10081  01F4                     u6195:
 10082  01F4  1803               	skipnc
 10083  01F5  29F7               	goto	u6191
 10084  01F6  29F8               	goto	u6190
 10085  01F7                     u6191:
 10086  01F7  29DD               	goto	l4227
 10087  01F8                     u6190:
 10088  01F8                     l4235:
 10089                           
 10090                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10091  01F8  3003               	movlw	3
 10092  01F9  1683               	bsf	3,5	;RP0=1, select bank1
 10093  01FA  1303               	bcf	3,6	;RP1=0, select bank1
 10094  01FB  052A               	andwf	sprintf@flag^(0+128),w
 10095  01FC  00A0               	movwf	??_sprintf^(0+128)
 10096  01FD  3000               	movlw	0
 10097  01FE  052B               	andwf	(sprintf@flag+1)^(0+128),w
 10098  01FF  00A1               	movwf	(??_sprintf+1)^(0+128)
 10099  0200  0820               	movf	??_sprintf^(0+128),w
 10100  0201  0421               	iorwf	(??_sprintf^(0+128)+1),w
 10101  0202  1903               	btfsc	3,2
 10102  0203  2A05               	goto	u6201
 10103  0204  2A06               	goto	u6200
 10104  0205                     u6201:
 10105  0205  2AB8               	goto	l436
 10106  0206                     u6200:
 10107  0206                     l4237:
 10108                           
 10109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10110  0206  302D               	movlw	45
 10111  0207  00A0               	movwf	??_sprintf^(0+128)
 10112  0208  083B               	movf	sprintf@sp^(0+128),w
 10113  0209  0084               	movwf	4
 10114  020A  0820               	movf	??_sprintf^(0+128),w
 10115  020B  1383               	bcf	3,7	;select IRP bank0
 10116  020C  0080               	movwf	0
 10117  020D                     l4239:
 10118  020D  3001               	movlw	1
 10119  020E  00A0               	movwf	??_sprintf^(0+128)
 10120  020F  0820               	movf	??_sprintf^(0+128),w
 10121  0210  07BB               	addwf	sprintf@sp^(0+128),f
 10122  0211  2AB8               	goto	l436
 10123  0212                     l4241:
 10124                           
 10125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10126  0212  083E               	movf	sprintf@c^(0+128),w
 10127  0213  00A0               	movwf	??_sprintf^(0+128)
 10128  0214  3001               	movlw	1
 10129  0215                     u6215:
 10130  0215  1003               	clrc
 10131  0216  0DA0               	rlf	??_sprintf^(0+128),f
 10132  0217  3EFF               	addlw	-1
 10133  0218  1D03               	skipz
 10134  0219  2A15               	goto	u6215
 10135  021A  1003               	clrc
 10136  021B  0D20               	rlf	??_sprintf^(0+128),w
 10137  021C  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10138  021D  0084               	movwf	4
 10139  021E  160A  118A  200A  120A  118A  	fcall	stringdir
 10140  0223  1283               	bcf	3,5	;RP0=0, select bank0
 10141  0224  1303               	bcf	3,6	;RP1=0, select bank0
 10142  0225  00A0               	movwf	___lldiv@divisor
 10143  0226  160A  118A  200A  120A  118A  	fcall	stringdir
 10144  022B  00A1               	movwf	___lldiv@divisor+1
 10145  022C  160A  118A  200A  120A  118A  	fcall	stringdir
 10146  0231  00A2               	movwf	___lldiv@divisor+2
 10147  0232  160A  118A  200A  120A  118A  	fcall	stringdir
 10148  0237  00A3               	movwf	___lldiv@divisor+3
 10149  0238  1683               	bsf	3,5	;RP0=1, select bank1
 10150  0239  1303               	bcf	3,6	;RP1=0, select bank1
 10151  023A  0835               	movf	(sprintf@val+3)^(0+128),w
 10152  023B  1283               	bcf	3,5	;RP0=0, select bank0
 10153  023C  1303               	bcf	3,6	;RP1=0, select bank0
 10154  023D  00A7               	movwf	___lldiv@dividend+3
 10155  023E  1683               	bsf	3,5	;RP0=1, select bank1
 10156  023F  1303               	bcf	3,6	;RP1=0, select bank1
 10157  0240  0834               	movf	(sprintf@val+2)^(0+128),w
 10158  0241  1283               	bcf	3,5	;RP0=0, select bank0
 10159  0242  1303               	bcf	3,6	;RP1=0, select bank0
 10160  0243  00A6               	movwf	___lldiv@dividend+2
 10161  0244  1683               	bsf	3,5	;RP0=1, select bank1
 10162  0245  1303               	bcf	3,6	;RP1=0, select bank1
 10163  0246  0833               	movf	(sprintf@val+1)^(0+128),w
 10164  0247  1283               	bcf	3,5	;RP0=0, select bank0
 10165  0248  1303               	bcf	3,6	;RP1=0, select bank0
 10166  0249  00A5               	movwf	___lldiv@dividend+1
 10167  024A  1683               	bsf	3,5	;RP0=1, select bank1
 10168  024B  1303               	bcf	3,6	;RP1=0, select bank1
 10169  024C  0832               	movf	sprintf@val^(0+128),w
 10170  024D  1283               	bcf	3,5	;RP0=0, select bank0
 10171  024E  1303               	bcf	3,6	;RP1=0, select bank0
 10172  024F  00A4               	movwf	___lldiv@dividend
 10173  0250  160A  118A  2296  120A  118A  	fcall	___lldiv
 10174  0255  1283               	bcf	3,5	;RP0=0, select bank0
 10175  0256  1303               	bcf	3,6	;RP1=0, select bank0
 10176  0257  0823               	movf	?___lldiv+3,w
 10177  0258  1683               	bsf	3,5	;RP0=1, select bank1
 10178  0259  1303               	bcf	3,6	;RP1=0, select bank1
 10179  025A  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
 10180  025B  1283               	bcf	3,5	;RP0=0, select bank0
 10181  025C  1303               	bcf	3,6	;RP1=0, select bank0
 10182  025D  0822               	movf	?___lldiv+2,w
 10183  025E  1683               	bsf	3,5	;RP0=1, select bank1
 10184  025F  1303               	bcf	3,6	;RP1=0, select bank1
 10185  0260  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
 10186  0261  1283               	bcf	3,5	;RP0=0, select bank0
 10187  0262  1303               	bcf	3,6	;RP1=0, select bank0
 10188  0263  0821               	movf	?___lldiv+1,w
 10189  0264  1683               	bsf	3,5	;RP0=1, select bank1
 10190  0265  1303               	bcf	3,6	;RP1=0, select bank1
 10191  0266  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
 10192  0267  1283               	bcf	3,5	;RP0=0, select bank0
 10193  0268  1303               	bcf	3,6	;RP1=0, select bank0
 10194  0269  0820               	movf	?___lldiv,w
 10195  026A  1683               	bsf	3,5	;RP0=1, select bank1
 10196  026B  1303               	bcf	3,6	;RP1=0, select bank1
 10197  026C  00AE               	movwf	sprintf@tmpval^(0+128)
 10198  026D                     l4243:
 10199                           
 10200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10201  026D  3000               	movlw	0
 10202  026E  1283               	bcf	3,5	;RP0=0, select bank0
 10203  026F  1303               	bcf	3,6	;RP1=0, select bank0
 10204  0270  00B0               	movwf	___llmod@divisor+3
 10205  0271  3000               	movlw	0
 10206  0272  00AF               	movwf	___llmod@divisor+2
 10207  0273  3000               	movlw	0
 10208  0274  00AE               	movwf	___llmod@divisor+1
 10209  0275  300A               	movlw	10
 10210  0276  00AD               	movwf	___llmod@divisor
 10211  0277  1683               	bsf	3,5	;RP0=1, select bank1
 10212  0278  1303               	bcf	3,6	;RP1=0, select bank1
 10213  0279  0831               	movf	(sprintf@tmpval+3)^(0+128),w
 10214  027A  1283               	bcf	3,5	;RP0=0, select bank0
 10215  027B  1303               	bcf	3,6	;RP1=0, select bank0
 10216  027C  00B4               	movwf	___llmod@dividend+3
 10217  027D  1683               	bsf	3,5	;RP0=1, select bank1
 10218  027E  1303               	bcf	3,6	;RP1=0, select bank1
 10219  027F  0830               	movf	(sprintf@tmpval+2)^(0+128),w
 10220  0280  1283               	bcf	3,5	;RP0=0, select bank0
 10221  0281  1303               	bcf	3,6	;RP1=0, select bank0
 10222  0282  00B3               	movwf	___llmod@dividend+2
 10223  0283  1683               	bsf	3,5	;RP0=1, select bank1
 10224  0284  1303               	bcf	3,6	;RP1=0, select bank1
 10225  0285  082F               	movf	(sprintf@tmpval+1)^(0+128),w
 10226  0286  1283               	bcf	3,5	;RP0=0, select bank0
 10227  0287  1303               	bcf	3,6	;RP1=0, select bank0
 10228  0288  00B2               	movwf	___llmod@dividend+1
 10229  0289  1683               	bsf	3,5	;RP0=1, select bank1
 10230  028A  1303               	bcf	3,6	;RP1=0, select bank1
 10231  028B  082E               	movf	sprintf@tmpval^(0+128),w
 10232  028C  1283               	bcf	3,5	;RP0=0, select bank0
 10233  028D  1303               	bcf	3,6	;RP1=0, select bank0
 10234  028E  00B1               	movwf	___llmod@dividend
 10235  028F  160A  118A  20D3  120A  118A  	fcall	___llmod
 10236  0294  1283               	bcf	3,5	;RP0=0, select bank0
 10237  0295  1303               	bcf	3,6	;RP1=0, select bank0
 10238  0296  0830               	movf	?___llmod+3,w
 10239  0297  1683               	bsf	3,5	;RP0=1, select bank1
 10240  0298  1303               	bcf	3,6	;RP1=0, select bank1
 10241  0299  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
 10242  029A  1283               	bcf	3,5	;RP0=0, select bank0
 10243  029B  1303               	bcf	3,6	;RP1=0, select bank0
 10244  029C  082F               	movf	?___llmod+2,w
 10245  029D  1683               	bsf	3,5	;RP0=1, select bank1
 10246  029E  1303               	bcf	3,6	;RP1=0, select bank1
 10247  029F  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
 10248  02A0  1283               	bcf	3,5	;RP0=0, select bank0
 10249  02A1  1303               	bcf	3,6	;RP1=0, select bank0
 10250  02A2  082E               	movf	?___llmod+1,w
 10251  02A3  1683               	bsf	3,5	;RP0=1, select bank1
 10252  02A4  1303               	bcf	3,6	;RP1=0, select bank1
 10253  02A5  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
 10254  02A6  1283               	bcf	3,5	;RP0=0, select bank0
 10255  02A7  1303               	bcf	3,6	;RP1=0, select bank0
 10256  02A8  082D               	movf	?___llmod,w
 10257  02A9  1683               	bsf	3,5	;RP0=1, select bank1
 10258  02AA  1303               	bcf	3,6	;RP1=0, select bank1
 10259  02AB  00AE               	movwf	sprintf@tmpval^(0+128)
 10260  02AC                     l4245:
 10261                           
 10262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10263  02AC  082E               	movf	sprintf@tmpval^(0+128),w
 10264  02AD  3E30               	addlw	48
 10265  02AE  00A0               	movwf	??_sprintf^(0+128)
 10266  02AF  083B               	movf	sprintf@sp^(0+128),w
 10267  02B0  0084               	movwf	4
 10268  02B1  0820               	movf	??_sprintf^(0+128),w
 10269  02B2  1383               	bcf	3,7	;select IRP bank0
 10270  02B3  0080               	movwf	0
 10271  02B4  3001               	movlw	1
 10272  02B5  00A0               	movwf	??_sprintf^(0+128)
 10273  02B6  0820               	movf	??_sprintf^(0+128),w
 10274  02B7  07BB               	addwf	sprintf@sp^(0+128),f
 10275  02B8                     l436:	
 10276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10277                           
 10278                           
 10279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10280  02B8  3001               	movlw	1
 10281  02B9  02BE               	subwf	sprintf@c^(0+128),f
 10282  02BA  0A3E               	incf	sprintf@c^(0+128),w
 10283  02BB  1D03               	btfss	3,2
 10284  02BC  2ABE               	goto	u6221
 10285  02BD  2ABF               	goto	u6220
 10286  02BE                     u6221:
 10287  02BE  2A12               	goto	l4241
 10288  02BF                     u6220:
 10289  02BF  2AD3               	goto	l4253
 10290  02C0                     l4247:
 10291                           
 10292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10293  02C0  3030               	movlw	48
 10294  02C1  1683               	bsf	3,5	;RP0=1, select bank1
 10295  02C2  1303               	bcf	3,6	;RP1=0, select bank1
 10296  02C3  00A0               	movwf	??_sprintf^(0+128)
 10297  02C4  083B               	movf	sprintf@sp^(0+128),w
 10298  02C5  0084               	movwf	4
 10299  02C6  0820               	movf	??_sprintf^(0+128),w
 10300  02C7  1383               	bcf	3,7	;select IRP bank0
 10301  02C8  0080               	movwf	0
 10302  02C9                     l4249:
 10303  02C9  3001               	movlw	1
 10304  02CA  00A0               	movwf	??_sprintf^(0+128)
 10305  02CB  0820               	movf	??_sprintf^(0+128),w
 10306  02CC  07BB               	addwf	sprintf@sp^(0+128),f
 10307  02CD                     l4251:
 10308                           
 10309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10310  02CD  30FF               	movlw	255
 10311  02CE  07B6               	addwf	sprintf@eexp^(0+128),f
 10312  02CF  1803               	skipnc
 10313  02D0  0AB7               	incf	(sprintf@eexp+1)^(0+128),f
 10314  02D1  30FF               	movlw	255
 10315  02D2  07B7               	addwf	(sprintf@eexp+1)^(0+128),f
 10316  02D3                     l4253:
 10317                           
 10318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10319  02D3  0837               	movf	(sprintf@eexp+1)^(0+128),w
 10320  02D4  3A80               	xorlw	128
 10321  02D5  00FF               	movwf	btemp+1
 10322  02D6  3080               	movlw	128
 10323  02D7  027F               	subwf	btemp+1,w
 10324  02D8  1D03               	skipz
 10325  02D9  2ADC               	goto	u6235
 10326  02DA  3001               	movlw	1
 10327  02DB  0236               	subwf	sprintf@eexp^(0+128),w
 10328  02DC                     u6235:
 10329  02DC  1803               	skipnc
 10330  02DD  2ADF               	goto	u6231
 10331  02DE  2AE0               	goto	u6230
 10332  02DF                     u6231:
 10333  02DF  2AC0               	goto	l4247
 10334  02E0                     u6230:
 10335  02E0                     l4255:
 10336                           
 10337                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10338  02E0  1683               	bsf	3,5	;RP0=1, select bank1
 10339  02E1  1303               	bcf	3,6	;RP1=0, select bank1
 10340  02E2  083D               	movf	(sprintf@prec+1)^(0+128),w
 10341  02E3  3A80               	xorlw	128
 10342  02E4  00FF               	movwf	btemp+1
 10343  02E5  3080               	movlw	128
 10344  02E6  027F               	subwf	btemp+1,w
 10345  02E7  1D03               	skipz
 10346  02E8  2AEB               	goto	u6245
 10347  02E9  3009               	movlw	9
 10348  02EA  023C               	subwf	sprintf@prec^(0+128),w
 10349  02EB                     u6245:
 10350  02EB  1C03               	skipc
 10351  02EC  2AEE               	goto	u6241
 10352  02ED  2AEF               	goto	u6240
 10353  02EE                     u6241:
 10354  02EE  2AF6               	goto	l4259
 10355  02EF                     u6240:
 10356  02EF                     l4257:
 10357                           
 10358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10359  02EF  3008               	movlw	8
 10360  02F0  1683               	bsf	3,5	;RP0=1, select bank1
 10361  02F1  1303               	bcf	3,6	;RP1=0, select bank1
 10362  02F2  00A0               	movwf	??_sprintf^(0+128)
 10363  02F3  0820               	movf	??_sprintf^(0+128),w
 10364  02F4  00BE               	movwf	sprintf@c^(0+128)
 10365  02F5  2AFC               	goto	l443
 10366  02F6                     l4259:
 10367                           
 10368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10369  02F6  1683               	bsf	3,5	;RP0=1, select bank1
 10370  02F7  1303               	bcf	3,6	;RP1=0, select bank1
 10371  02F8  083C               	movf	sprintf@prec^(0+128),w
 10372  02F9  00A0               	movwf	??_sprintf^(0+128)
 10373  02FA  0820               	movf	??_sprintf^(0+128),w
 10374  02FB  00BE               	movwf	sprintf@c^(0+128)
 10375  02FC                     l443:
 10376                           
 10377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10378  02FC  083E               	movf	sprintf@c^(0+128),w
 10379  02FD  00A0               	movwf	??_sprintf^(0+128)
 10380  02FE  01A1               	clrf	(??_sprintf^(0+128)+1)
 10381  02FF  0820               	movf	??_sprintf^(0+128),w
 10382  0300  02BC               	subwf	sprintf@prec^(0+128),f
 10383  0301  0821               	movf	(??_sprintf+1)^(0+128),w
 10384  0302  1C03               	skipc
 10385  0303  03BD               	decf	(sprintf@prec+1)^(0+128),f
 10386  0304  02BD               	subwf	(sprintf@prec+1)^(0+128),f
 10387  0305                     l4261:
 10388                           
 10389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10390  0305  083E               	movf	sprintf@c^(0+128),w
 10391  0306  1903               	btfsc	3,2
 10392  0307  2B09               	goto	u6251
 10393  0308  2B0A               	goto	u6250
 10394  0309                     u6251:
 10395  0309  2B15               	goto	l4267
 10396  030A                     u6250:
 10397  030A                     l4263:
 10398                           
 10399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10400  030A  302E               	movlw	46
 10401  030B  00A0               	movwf	??_sprintf^(0+128)
 10402  030C  083B               	movf	sprintf@sp^(0+128),w
 10403  030D  0084               	movwf	4
 10404  030E  0820               	movf	??_sprintf^(0+128),w
 10405  030F  1383               	bcf	3,7	;select IRP bank0
 10406  0310  0080               	movwf	0
 10407  0311                     l4265:
 10408  0311  3001               	movlw	1
 10409  0312  00A0               	movwf	??_sprintf^(0+128)
 10410  0313  0820               	movf	??_sprintf^(0+128),w
 10411  0314  07BB               	addwf	sprintf@sp^(0+128),f
 10412  0315                     l4267:
 10413                           
 10414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10415  0315  083E               	movf	sprintf@c^(0+128),w
 10416  0316  120A  158A  226D  120A  118A  	fcall	_scale
 10417  031B  1283               	bcf	3,5	;RP0=0, select bank0
 10418  031C  1303               	bcf	3,6	;RP1=0, select bank0
 10419  031D  083F               	movf	?_scale,w
 10420  031E  1683               	bsf	3,5	;RP0=1, select bank1
 10421  031F  1303               	bcf	3,6	;RP1=0, select bank1
 10422  0320  00A6               	movwf	_sprintf$1188^(0+128)
 10423  0321  1283               	bcf	3,5	;RP0=0, select bank0
 10424  0322  1303               	bcf	3,6	;RP1=0, select bank0
 10425  0323  0840               	movf	?_scale+1,w
 10426  0324  1683               	bsf	3,5	;RP0=1, select bank1
 10427  0325  1303               	bcf	3,6	;RP1=0, select bank1
 10428  0326  00A7               	movwf	(_sprintf$1188+1)^(0+128)
 10429  0327  1283               	bcf	3,5	;RP0=0, select bank0
 10430  0328  1303               	bcf	3,6	;RP1=0, select bank0
 10431  0329  0841               	movf	?_scale+2,w
 10432  032A  1683               	bsf	3,5	;RP0=1, select bank1
 10433  032B  1303               	bcf	3,6	;RP1=0, select bank1
 10434  032C  00A8               	movwf	(_sprintf$1188+2)^(0+128)
 10435  032D                     l4269:
 10436                           
 10437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10438  032D  0826               	movf	_sprintf$1188^(0+128),w
 10439  032E  1283               	bcf	3,5	;RP0=0, select bank0
 10440  032F  1303               	bcf	3,6	;RP1=0, select bank0
 10441  0330  00B2               	movwf	___ftmul@f2
 10442  0331  1683               	bsf	3,5	;RP0=1, select bank1
 10443  0332  1303               	bcf	3,6	;RP1=0, select bank1
 10444  0333  0827               	movf	(_sprintf$1188+1)^(0+128),w
 10445  0334  1283               	bcf	3,5	;RP0=0, select bank0
 10446  0335  1303               	bcf	3,6	;RP1=0, select bank0
 10447  0336  00B3               	movwf	___ftmul@f2+1
 10448  0337  1683               	bsf	3,5	;RP0=1, select bank1
 10449  0338  1303               	bcf	3,6	;RP1=0, select bank1
 10450  0339  0828               	movf	(_sprintf$1188+2)^(0+128),w
 10451  033A  1283               	bcf	3,5	;RP0=0, select bank0
 10452  033B  1303               	bcf	3,6	;RP1=0, select bank0
 10453  033C  00B4               	movwf	___ftmul@f2+2
 10454  033D  1683               	bsf	3,5	;RP0=1, select bank1
 10455  033E  1303               	bcf	3,6	;RP1=0, select bank1
 10456  033F  0838               	movf	sprintf@fval^(0+128),w
 10457  0340  1283               	bcf	3,5	;RP0=0, select bank0
 10458  0341  1303               	bcf	3,6	;RP1=0, select bank0
 10459  0342  00AF               	movwf	___ftmul@f1
 10460  0343  1683               	bsf	3,5	;RP0=1, select bank1
 10461  0344  1303               	bcf	3,6	;RP1=0, select bank1
 10462  0345  0839               	movf	(sprintf@fval+1)^(0+128),w
 10463  0346  1283               	bcf	3,5	;RP0=0, select bank0
 10464  0347  1303               	bcf	3,6	;RP1=0, select bank0
 10465  0348  00B0               	movwf	___ftmul@f1+1
 10466  0349  1683               	bsf	3,5	;RP0=1, select bank1
 10467  034A  1303               	bcf	3,6	;RP1=0, select bank1
 10468  034B  083A               	movf	(sprintf@fval+2)^(0+128),w
 10469  034C  1283               	bcf	3,5	;RP0=0, select bank0
 10470  034D  1303               	bcf	3,6	;RP1=0, select bank0
 10471  034E  00B1               	movwf	___ftmul@f1+2
 10472  034F  160A  118A  25EE  120A  118A  	fcall	___ftmul
 10473  0354  1283               	bcf	3,5	;RP0=0, select bank0
 10474  0355  1303               	bcf	3,6	;RP1=0, select bank0
 10475  0356  082F               	movf	?___ftmul,w
 10476  0357  00C8               	movwf	___fttol@f1
 10477  0358  0830               	movf	?___ftmul+1,w
 10478  0359  00C9               	movwf	___fttol@f1+1
 10479  035A  0831               	movf	?___ftmul+2,w
 10480  035B  00CA               	movwf	___fttol@f1+2
 10481  035C  160A  118A  23E9  120A  118A  	fcall	___fttol
 10482  0361  1283               	bcf	3,5	;RP0=0, select bank0
 10483  0362  1303               	bcf	3,6	;RP1=0, select bank0
 10484  0363  084B               	movf	?___fttol+3,w
 10485  0364  1683               	bsf	3,5	;RP0=1, select bank1
 10486  0365  1303               	bcf	3,6	;RP1=0, select bank1
 10487  0366  00B5               	movwf	(sprintf@val+3)^(0+128)
 10488  0367  1283               	bcf	3,5	;RP0=0, select bank0
 10489  0368  1303               	bcf	3,6	;RP1=0, select bank0
 10490  0369  084A               	movf	?___fttol+2,w
 10491  036A  1683               	bsf	3,5	;RP0=1, select bank1
 10492  036B  1303               	bcf	3,6	;RP1=0, select bank1
 10493  036C  00B4               	movwf	(sprintf@val+2)^(0+128)
 10494  036D  1283               	bcf	3,5	;RP0=0, select bank0
 10495  036E  1303               	bcf	3,6	;RP1=0, select bank0
 10496  036F  0849               	movf	?___fttol+1,w
 10497  0370  1683               	bsf	3,5	;RP0=1, select bank1
 10498  0371  1303               	bcf	3,6	;RP1=0, select bank1
 10499  0372  00B3               	movwf	(sprintf@val+1)^(0+128)
 10500  0373  1283               	bcf	3,5	;RP0=0, select bank0
 10501  0374  1303               	bcf	3,6	;RP1=0, select bank0
 10502  0375  0848               	movf	?___fttol,w
 10503  0376  1683               	bsf	3,5	;RP0=1, select bank1
 10504  0377  1303               	bcf	3,6	;RP1=0, select bank1
 10505  0378  00B2               	movwf	sprintf@val^(0+128)
 10506                           
 10507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10508  0379  2C7B               	goto	l4279
 10509  037A                     l4271:
 10510                           
 10511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10512  037A  083E               	movf	sprintf@c^(0+128),w
 10513  037B  00A0               	movwf	??_sprintf^(0+128)
 10514  037C  3001               	movlw	1
 10515  037D                     u6265:
 10516  037D  1003               	clrc
 10517  037E  0DA0               	rlf	??_sprintf^(0+128),f
 10518  037F  3EFF               	addlw	-1
 10519  0380  1D03               	skipz
 10520  0381  2B7D               	goto	u6265
 10521  0382  1003               	clrc
 10522  0383  0D20               	rlf	??_sprintf^(0+128),w
 10523  0384  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10524  0385  0084               	movwf	4
 10525  0386  160A  118A  200A  120A  118A  	fcall	stringdir
 10526  038B  1283               	bcf	3,5	;RP0=0, select bank0
 10527  038C  1303               	bcf	3,6	;RP1=0, select bank0
 10528  038D  00A0               	movwf	___lldiv@divisor
 10529  038E  160A  118A  200A  120A  118A  	fcall	stringdir
 10530  0393  00A1               	movwf	___lldiv@divisor+1
 10531  0394  160A  118A  200A  120A  118A  	fcall	stringdir
 10532  0399  00A2               	movwf	___lldiv@divisor+2
 10533  039A  160A  118A  200A  120A  118A  	fcall	stringdir
 10534  039F  00A3               	movwf	___lldiv@divisor+3
 10535  03A0  1683               	bsf	3,5	;RP0=1, select bank1
 10536  03A1  1303               	bcf	3,6	;RP1=0, select bank1
 10537  03A2  0835               	movf	(sprintf@val+3)^(0+128),w
 10538  03A3  1283               	bcf	3,5	;RP0=0, select bank0
 10539  03A4  1303               	bcf	3,6	;RP1=0, select bank0
 10540  03A5  00A7               	movwf	___lldiv@dividend+3
 10541  03A6  1683               	bsf	3,5	;RP0=1, select bank1
 10542  03A7  1303               	bcf	3,6	;RP1=0, select bank1
 10543  03A8  0834               	movf	(sprintf@val+2)^(0+128),w
 10544  03A9  1283               	bcf	3,5	;RP0=0, select bank0
 10545  03AA  1303               	bcf	3,6	;RP1=0, select bank0
 10546  03AB  00A6               	movwf	___lldiv@dividend+2
 10547  03AC  1683               	bsf	3,5	;RP0=1, select bank1
 10548  03AD  1303               	bcf	3,6	;RP1=0, select bank1
 10549  03AE  0833               	movf	(sprintf@val+1)^(0+128),w
 10550  03AF  1283               	bcf	3,5	;RP0=0, select bank0
 10551  03B0  1303               	bcf	3,6	;RP1=0, select bank0
 10552  03B1  00A5               	movwf	___lldiv@dividend+1
 10553  03B2  1683               	bsf	3,5	;RP0=1, select bank1
 10554  03B3  1303               	bcf	3,6	;RP1=0, select bank1
 10555  03B4  0832               	movf	sprintf@val^(0+128),w
 10556  03B5  1283               	bcf	3,5	;RP0=0, select bank0
 10557  03B6  1303               	bcf	3,6	;RP1=0, select bank0
 10558  03B7  00A4               	movwf	___lldiv@dividend
 10559  03B8  160A  118A  2296  120A  118A  	fcall	___lldiv
 10560  03BD  1283               	bcf	3,5	;RP0=0, select bank0
 10561  03BE  1303               	bcf	3,6	;RP1=0, select bank0
 10562  03BF  0823               	movf	?___lldiv+3,w
 10563  03C0  1683               	bsf	3,5	;RP0=1, select bank1
 10564  03C1  1303               	bcf	3,6	;RP1=0, select bank1
 10565  03C2  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
 10566  03C3  1283               	bcf	3,5	;RP0=0, select bank0
 10567  03C4  1303               	bcf	3,6	;RP1=0, select bank0
 10568  03C5  0822               	movf	?___lldiv+2,w
 10569  03C6  1683               	bsf	3,5	;RP0=1, select bank1
 10570  03C7  1303               	bcf	3,6	;RP1=0, select bank1
 10571  03C8  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
 10572  03C9  1283               	bcf	3,5	;RP0=0, select bank0
 10573  03CA  1303               	bcf	3,6	;RP1=0, select bank0
 10574  03CB  0821               	movf	?___lldiv+1,w
 10575  03CC  1683               	bsf	3,5	;RP0=1, select bank1
 10576  03CD  1303               	bcf	3,6	;RP1=0, select bank1
 10577  03CE  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
 10578  03CF  1283               	bcf	3,5	;RP0=0, select bank0
 10579  03D0  1303               	bcf	3,6	;RP1=0, select bank0
 10580  03D1  0820               	movf	?___lldiv,w
 10581  03D2  1683               	bsf	3,5	;RP0=1, select bank1
 10582  03D3  1303               	bcf	3,6	;RP1=0, select bank1
 10583  03D4  00AE               	movwf	sprintf@tmpval^(0+128)
 10584  03D5                     l4273:
 10585                           
 10586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10587  03D5  3000               	movlw	0
 10588  03D6  1283               	bcf	3,5	;RP0=0, select bank0
 10589  03D7  1303               	bcf	3,6	;RP1=0, select bank0
 10590  03D8  00B0               	movwf	___llmod@divisor+3
 10591  03D9  3000               	movlw	0
 10592  03DA  00AF               	movwf	___llmod@divisor+2
 10593  03DB  3000               	movlw	0
 10594  03DC  00AE               	movwf	___llmod@divisor+1
 10595  03DD  300A               	movlw	10
 10596  03DE  00AD               	movwf	___llmod@divisor
 10597  03DF  1683               	bsf	3,5	;RP0=1, select bank1
 10598  03E0  1303               	bcf	3,6	;RP1=0, select bank1
 10599  03E1  0831               	movf	(sprintf@tmpval+3)^(0+128),w
 10600  03E2  1283               	bcf	3,5	;RP0=0, select bank0
 10601  03E3  1303               	bcf	3,6	;RP1=0, select bank0
 10602  03E4  00B4               	movwf	___llmod@dividend+3
 10603  03E5  1683               	bsf	3,5	;RP0=1, select bank1
 10604  03E6  1303               	bcf	3,6	;RP1=0, select bank1
 10605  03E7  0830               	movf	(sprintf@tmpval+2)^(0+128),w
 10606  03E8  1283               	bcf	3,5	;RP0=0, select bank0
 10607  03E9  1303               	bcf	3,6	;RP1=0, select bank0
 10608  03EA  00B3               	movwf	___llmod@dividend+2
 10609  03EB  1683               	bsf	3,5	;RP0=1, select bank1
 10610  03EC  1303               	bcf	3,6	;RP1=0, select bank1
 10611  03ED  082F               	movf	(sprintf@tmpval+1)^(0+128),w
 10612  03EE  1283               	bcf	3,5	;RP0=0, select bank0
 10613  03EF  1303               	bcf	3,6	;RP1=0, select bank0
 10614  03F0  00B2               	movwf	___llmod@dividend+1
 10615  03F1  1683               	bsf	3,5	;RP0=1, select bank1
 10616  03F2  1303               	bcf	3,6	;RP1=0, select bank1
 10617  03F3  082E               	movf	sprintf@tmpval^(0+128),w
 10618  03F4  1283               	bcf	3,5	;RP0=0, select bank0
 10619  03F5  1303               	bcf	3,6	;RP1=0, select bank0
 10620  03F6  00B1               	movwf	___llmod@dividend
 10621  03F7  160A  118A  20D3  120A  118A  	fcall	___llmod
 10622  03FC  1283               	bcf	3,5	;RP0=0, select bank0
 10623  03FD  1303               	bcf	3,6	;RP1=0, select bank0
 10624  03FE  0830               	movf	?___llmod+3,w
 10625  03FF  1683               	bsf	3,5	;RP0=1, select bank1
 10626  0400  1303               	bcf	3,6	;RP1=0, select bank1
 10627  0401  00B1               	movwf	(sprintf@tmpval+3)^(0+128)
 10628  0402  1283               	bcf	3,5	;RP0=0, select bank0
 10629  0403  1303               	bcf	3,6	;RP1=0, select bank0
 10630  0404  082F               	movf	?___llmod+2,w
 10631  0405  1683               	bsf	3,5	;RP0=1, select bank1
 10632  0406  1303               	bcf	3,6	;RP1=0, select bank1
 10633  0407  00B0               	movwf	(sprintf@tmpval+2)^(0+128)
 10634  0408  1283               	bcf	3,5	;RP0=0, select bank0
 10635  0409  1303               	bcf	3,6	;RP1=0, select bank0
 10636  040A  082E               	movf	?___llmod+1,w
 10637  040B  1683               	bsf	3,5	;RP0=1, select bank1
 10638  040C  1303               	bcf	3,6	;RP1=0, select bank1
 10639  040D  00AF               	movwf	(sprintf@tmpval+1)^(0+128)
 10640  040E  1283               	bcf	3,5	;RP0=0, select bank0
 10641  040F  1303               	bcf	3,6	;RP1=0, select bank0
 10642  0410  082D               	movf	?___llmod,w
 10643  0411  1683               	bsf	3,5	;RP0=1, select bank1
 10644  0412  1303               	bcf	3,6	;RP1=0, select bank1
 10645  0413  00AE               	movwf	sprintf@tmpval^(0+128)
 10646  0414                     l4275:
 10647                           
 10648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10649  0414  082E               	movf	sprintf@tmpval^(0+128),w
 10650  0415  3E30               	addlw	48
 10651  0416  00A0               	movwf	??_sprintf^(0+128)
 10652  0417  083B               	movf	sprintf@sp^(0+128),w
 10653  0418  0084               	movwf	4
 10654  0419  0820               	movf	??_sprintf^(0+128),w
 10655  041A  1383               	bcf	3,7	;select IRP bank0
 10656  041B  0080               	movwf	0
 10657  041C  3001               	movlw	1
 10658  041D  00A0               	movwf	??_sprintf^(0+128)
 10659  041E  0820               	movf	??_sprintf^(0+128),w
 10660  041F  07BB               	addwf	sprintf@sp^(0+128),f
 10661  0420                     l4277:
 10662                           
 10663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10664  0420  083E               	movf	sprintf@c^(0+128),w
 10665  0421  00A0               	movwf	??_sprintf^(0+128)
 10666  0422  3001               	movlw	1
 10667  0423                     u6275:
 10668  0423  1003               	clrc
 10669  0424  0DA0               	rlf	??_sprintf^(0+128),f
 10670  0425  3EFF               	addlw	-1
 10671  0426  1D03               	skipz
 10672  0427  2C23               	goto	u6275
 10673  0428  1003               	clrc
 10674  0429  0D20               	rlf	??_sprintf^(0+128),w
 10675  042A  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10676  042B  0084               	movwf	4
 10677  042C  160A  118A  200A  120A  118A  	fcall	stringdir
 10678  0431  1283               	bcf	3,5	;RP0=0, select bank0
 10679  0432  1303               	bcf	3,6	;RP1=0, select bank0
 10680  0433  00AD               	movwf	___llmod@divisor
 10681  0434  160A  118A  200A  120A  118A  	fcall	stringdir
 10682  0439  00AE               	movwf	___llmod@divisor+1
 10683  043A  160A  118A  200A  120A  118A  	fcall	stringdir
 10684  043F  00AF               	movwf	___llmod@divisor+2
 10685  0440  160A  118A  200A  120A  118A  	fcall	stringdir
 10686  0445  00B0               	movwf	___llmod@divisor+3
 10687  0446  1683               	bsf	3,5	;RP0=1, select bank1
 10688  0447  1303               	bcf	3,6	;RP1=0, select bank1
 10689  0448  0835               	movf	(sprintf@val+3)^(0+128),w
 10690  0449  1283               	bcf	3,5	;RP0=0, select bank0
 10691  044A  1303               	bcf	3,6	;RP1=0, select bank0
 10692  044B  00B4               	movwf	___llmod@dividend+3
 10693  044C  1683               	bsf	3,5	;RP0=1, select bank1
 10694  044D  1303               	bcf	3,6	;RP1=0, select bank1
 10695  044E  0834               	movf	(sprintf@val+2)^(0+128),w
 10696  044F  1283               	bcf	3,5	;RP0=0, select bank0
 10697  0450  1303               	bcf	3,6	;RP1=0, select bank0
 10698  0451  00B3               	movwf	___llmod@dividend+2
 10699  0452  1683               	bsf	3,5	;RP0=1, select bank1
 10700  0453  1303               	bcf	3,6	;RP1=0, select bank1
 10701  0454  0833               	movf	(sprintf@val+1)^(0+128),w
 10702  0455  1283               	bcf	3,5	;RP0=0, select bank0
 10703  0456  1303               	bcf	3,6	;RP1=0, select bank0
 10704  0457  00B2               	movwf	___llmod@dividend+1
 10705  0458  1683               	bsf	3,5	;RP0=1, select bank1
 10706  0459  1303               	bcf	3,6	;RP1=0, select bank1
 10707  045A  0832               	movf	sprintf@val^(0+128),w
 10708  045B  1283               	bcf	3,5	;RP0=0, select bank0
 10709  045C  1303               	bcf	3,6	;RP1=0, select bank0
 10710  045D  00B1               	movwf	___llmod@dividend
 10711  045E  160A  118A  20D3  120A  118A  	fcall	___llmod
 10712  0463  1283               	bcf	3,5	;RP0=0, select bank0
 10713  0464  1303               	bcf	3,6	;RP1=0, select bank0
 10714  0465  0830               	movf	?___llmod+3,w
 10715  0466  1683               	bsf	3,5	;RP0=1, select bank1
 10716  0467  1303               	bcf	3,6	;RP1=0, select bank1
 10717  0468  00B5               	movwf	(sprintf@val+3)^(0+128)
 10718  0469  1283               	bcf	3,5	;RP0=0, select bank0
 10719  046A  1303               	bcf	3,6	;RP1=0, select bank0
 10720  046B  082F               	movf	?___llmod+2,w
 10721  046C  1683               	bsf	3,5	;RP0=1, select bank1
 10722  046D  1303               	bcf	3,6	;RP1=0, select bank1
 10723  046E  00B4               	movwf	(sprintf@val+2)^(0+128)
 10724  046F  1283               	bcf	3,5	;RP0=0, select bank0
 10725  0470  1303               	bcf	3,6	;RP1=0, select bank0
 10726  0471  082E               	movf	?___llmod+1,w
 10727  0472  1683               	bsf	3,5	;RP0=1, select bank1
 10728  0473  1303               	bcf	3,6	;RP1=0, select bank1
 10729  0474  00B3               	movwf	(sprintf@val+1)^(0+128)
 10730  0475  1283               	bcf	3,5	;RP0=0, select bank0
 10731  0476  1303               	bcf	3,6	;RP1=0, select bank0
 10732  0477  082D               	movf	?___llmod,w
 10733  0478  1683               	bsf	3,5	;RP0=1, select bank1
 10734  0479  1303               	bcf	3,6	;RP1=0, select bank1
 10735  047A  00B2               	movwf	sprintf@val^(0+128)
 10736  047B                     l4279:
 10737                           
 10738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10739  047B  3001               	movlw	1
 10740  047C  02BE               	subwf	sprintf@c^(0+128),f
 10741  047D  0A3E               	incf	sprintf@c^(0+128),w
 10742  047E  1D03               	btfss	3,2
 10743  047F  2C81               	goto	u6281
 10744  0480  2C82               	goto	u6280
 10745  0481                     u6281:
 10746  0481  2B7A               	goto	l4271
 10747  0482                     u6280:
 10748  0482  2C94               	goto	l4287
 10749  0483                     l4281:
 10750                           
 10751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10752  0483  3030               	movlw	48
 10753  0484  00A0               	movwf	??_sprintf^(0+128)
 10754  0485  083B               	movf	sprintf@sp^(0+128),w
 10755  0486  0084               	movwf	4
 10756  0487  0820               	movf	??_sprintf^(0+128),w
 10757  0488  1383               	bcf	3,7	;select IRP bank0
 10758  0489  0080               	movwf	0
 10759  048A                     l4283:
 10760  048A  3001               	movlw	1
 10761  048B  00A0               	movwf	??_sprintf^(0+128)
 10762  048C  0820               	movf	??_sprintf^(0+128),w
 10763  048D  07BB               	addwf	sprintf@sp^(0+128),f
 10764  048E                     l4285:
 10765                           
 10766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10767  048E  30FF               	movlw	255
 10768  048F  07BC               	addwf	sprintf@prec^(0+128),f
 10769  0490  1803               	skipnc
 10770  0491  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10771  0492  30FF               	movlw	255
 10772  0493  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10773  0494                     l4287:
 10774                           
 10775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10776  0494  083C               	movf	sprintf@prec^(0+128),w
 10777  0495  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10778  0496  1D03               	btfss	3,2
 10779  0497  2C99               	goto	u6291
 10780  0498  2C9A               	goto	u6290
 10781  0499                     u6291:
 10782  0499  2C83               	goto	l4281
 10783  049A                     u6290:
 10784  049A  2E4A               	goto	l4367
 10785  049B                     l4289:
 10786                           
 10787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10788  049B  0829               	movf	sprintf@ap^(0+128),w
 10789  049C  0084               	movwf	4
 10790  049D  1383               	bcf	3,7	;select IRP bank0
 10791  049E  0800               	movf	0,w
 10792  049F  00A0               	movwf	??_sprintf^(0+128)
 10793  04A0  0A84               	incf	4,f
 10794  04A1  0800               	movf	0,w
 10795  04A2  00A1               	movwf	(??_sprintf^(0+128)+1)
 10796  04A3  0820               	movf	??_sprintf^(0+128),w
 10797  04A4  00B2               	movwf	sprintf@val^(0+128)
 10798  04A5  0821               	movf	(??_sprintf+1)^(0+128),w
 10799  04A6  00B3               	movwf	(sprintf@val+1)^(0+128)
 10800  04A7  3000               	movlw	0
 10801  04A8  1BB3               	btfsc	(sprintf@val+1)^(0+128),7
 10802  04A9  30FF               	movlw	255
 10803  04AA  00B4               	movwf	(sprintf@val+2)^(0+128)
 10804  04AB  00B5               	movwf	(sprintf@val+3)^(0+128)
 10805  04AC                     l4291:
 10806  04AC  3002               	movlw	2
 10807  04AD  00A0               	movwf	??_sprintf^(0+128)
 10808  04AE  0820               	movf	??_sprintf^(0+128),w
 10809  04AF  07A9               	addwf	sprintf@ap^(0+128),f
 10810  04B0                     l4293:
 10811                           
 10812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 10813  04B0  1FB5               	btfss	(sprintf@val+3)^(0+128),7
 10814  04B1  2CB3               	goto	u6301
 10815  04B2  2CB4               	goto	u6300
 10816  04B3                     u6301:
 10817  04B3  2CC3               	goto	l4299
 10818  04B4                     u6300:
 10819  04B4                     l4295:
 10820                           
 10821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 10822  04B4  3003               	movlw	3
 10823  04B5  04AA               	iorwf	sprintf@flag^(0+128),f
 10824  04B6  3000               	movlw	0
 10825  04B7  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
 10826  04B8                     l4297:
 10827                           
 10828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 10829  04B8  09B2               	comf	sprintf@val^(0+128),f
 10830  04B9  09B3               	comf	(sprintf@val+1)^(0+128),f
 10831  04BA  09B4               	comf	(sprintf@val+2)^(0+128),f
 10832  04BB  09B5               	comf	(sprintf@val+3)^(0+128),f
 10833  04BC  0AB2               	incf	sprintf@val^(0+128),f
 10834  04BD  1903               	skipnz
 10835  04BE  0AB3               	incf	(sprintf@val+1)^(0+128),f
 10836  04BF  1903               	skipnz
 10837  04C0  0AB4               	incf	(sprintf@val+2)^(0+128),f
 10838  04C1  1903               	skipnz
 10839  04C2  0AB5               	incf	(sprintf@val+3)^(0+128),f
 10840  04C3                     l4299:
 10841                           
 10842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 10843  04C3  083C               	movf	sprintf@prec^(0+128),w
 10844  04C4  043D               	iorwf	(sprintf@prec+1)^(0+128),w
 10845  04C5  1D03               	btfss	3,2
 10846  04C6  2CC8               	goto	u6311
 10847  04C7  2CC9               	goto	u6310
 10848  04C8                     u6311:
 10849  04C8  2CD7               	goto	l4305
 10850  04C9                     u6310:
 10851  04C9                     l4301:
 10852  04C9  0835               	movf	(sprintf@val+3)^(0+128),w
 10853  04CA  0434               	iorwf	(sprintf@val+2)^(0+128),w
 10854  04CB  0433               	iorwf	(sprintf@val+1)^(0+128),w
 10855  04CC  0432               	iorwf	sprintf@val^(0+128),w
 10856  04CD  1D03               	skipz
 10857  04CE  2CD0               	goto	u6321
 10858  04CF  2CD1               	goto	u6320
 10859  04D0                     u6321:
 10860  04D0  2CD7               	goto	l4305
 10861  04D1                     u6320:
 10862  04D1                     l4303:
 10863                           
 10864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10865  04D1  3001               	movlw	1
 10866  04D2  07BC               	addwf	sprintf@prec^(0+128),f
 10867  04D3  1803               	skipnc
 10868  04D4  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 10869  04D5  3000               	movlw	0
 10870  04D6  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 10871  04D7                     l4305:
 10872                           
 10873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10874  04D7  01BE               	clrf	sprintf@c^(0+128)
 10875  04D8  0ABE               	incf	sprintf@c^(0+128),f
 10876  04D9                     l4311:
 10877                           
 10878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 10879  04D9  083E               	movf	sprintf@c^(0+128),w
 10880  04DA  00A0               	movwf	??_sprintf^(0+128)
 10881  04DB  3001               	movlw	1
 10882  04DC                     u6335:
 10883  04DC  1003               	clrc
 10884  04DD  0DA0               	rlf	??_sprintf^(0+128),f
 10885  04DE  3EFF               	addlw	-1
 10886  04DF  1D03               	skipz
 10887  04E0  2CDC               	goto	u6335
 10888  04E1  1003               	clrc
 10889  04E2  0D20               	rlf	??_sprintf^(0+128),w
 10890  04E3  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10891  04E4  0084               	movwf	4
 10892  04E5  160A  118A  200A  120A  118A  	fcall	stringdir
 10893  04EA  00A1               	movwf	(??_sprintf+1)^(0+128)
 10894  04EB  160A  118A  200A  120A  118A  	fcall	stringdir
 10895  04F0  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
 10896  04F1  160A  118A  200A  120A  118A  	fcall	stringdir
 10897  04F6  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
 10898  04F7  160A  118A  200A  120A  118A  	fcall	stringdir
 10899  04FC  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
 10900  04FD  0824               	movf	(??_sprintf+4)^(0+128),w
 10901  04FE  0235               	subwf	(sprintf@val+3)^(0+128),w
 10902  04FF  1D03               	skipz
 10903  0500  2D0B               	goto	u6345
 10904  0501  0823               	movf	(??_sprintf+3)^(0+128),w
 10905  0502  0234               	subwf	(sprintf@val+2)^(0+128),w
 10906  0503  1D03               	skipz
 10907  0504  2D0B               	goto	u6345
 10908  0505  0822               	movf	(??_sprintf+2)^(0+128),w
 10909  0506  0233               	subwf	(sprintf@val+1)^(0+128),w
 10910  0507  1D03               	skipz
 10911  0508  2D0B               	goto	u6345
 10912  0509  0821               	movf	(??_sprintf+1)^(0+128),w
 10913  050A  0232               	subwf	sprintf@val^(0+128),w
 10914  050B                     u6345:
 10915  050B  1803               	skipnc
 10916  050C  2D0E               	goto	u6341
 10917  050D  2D0F               	goto	u6340
 10918  050E                     u6341:
 10919  050E  2D10               	goto	l4315
 10920  050F                     u6340:
 10921  050F  2D1A               	goto	l4317
 10922  0510                     l4315:
 10923  0510  3001               	movlw	1
 10924  0511  00A0               	movwf	??_sprintf^(0+128)
 10925  0512  0820               	movf	??_sprintf^(0+128),w
 10926  0513  07BE               	addwf	sprintf@c^(0+128),f
 10927  0514  300A               	movlw	10
 10928  0515  063E               	xorwf	sprintf@c^(0+128),w
 10929  0516  1D03               	btfss	3,2
 10930  0517  2D19               	goto	u6351
 10931  0518  2D1A               	goto	u6350
 10932  0519                     u6351:
 10933  0519  2CD9               	goto	l4311
 10934  051A                     u6350:
 10935  051A                     l4317:
 10936                           
 10937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10938  051A  083D               	movf	(sprintf@prec+1)^(0+128),w
 10939  051B  3A80               	xorlw	128
 10940  051C  3C80               	sublw	128
 10941  051D  1D03               	skipz
 10942  051E  2D21               	goto	u6365
 10943  051F  083C               	movf	sprintf@prec^(0+128),w
 10944  0520  023E               	subwf	sprintf@c^(0+128),w
 10945  0521                     u6365:
 10946  0521  1803               	skipnc
 10947  0522  2D24               	goto	u6361
 10948  0523  2D25               	goto	u6360
 10949  0524                     u6361:
 10950  0524  2D2C               	goto	l4321
 10951  0525                     u6360:
 10952  0525                     l4319:
 10953                           
 10954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10955  0525  1683               	bsf	3,5	;RP0=1, select bank1
 10956  0526  1303               	bcf	3,6	;RP1=0, select bank1
 10957  0527  083C               	movf	sprintf@prec^(0+128),w
 10958  0528  00A0               	movwf	??_sprintf^(0+128)
 10959  0529  0820               	movf	??_sprintf^(0+128),w
 10960  052A  00BE               	movwf	sprintf@c^(0+128)
 10961  052B  2D44               	goto	l4325
 10962  052C                     l4321:
 10963  052C  1683               	bsf	3,5	;RP0=1, select bank1
 10964  052D  1303               	bcf	3,6	;RP1=0, select bank1
 10965  052E  083D               	movf	(sprintf@prec+1)^(0+128),w
 10966  052F  3A80               	xorlw	128
 10967  0530  00A0               	movwf	??_sprintf^(0+128)
 10968  0531  3080               	movlw	128
 10969  0532  0220               	subwf	??_sprintf^(0+128),w
 10970  0533  1D03               	skipz
 10971  0534  2D37               	goto	u6375
 10972  0535  083E               	movf	sprintf@c^(0+128),w
 10973  0536  023C               	subwf	sprintf@prec^(0+128),w
 10974  0537                     u6375:
 10975  0537  1803               	skipnc
 10976  0538  2D3A               	goto	u6371
 10977  0539  2D3B               	goto	u6370
 10978  053A                     u6371:
 10979  053A  2D44               	goto	l4325
 10980  053B                     u6370:
 10981  053B                     l4323:
 10982                           
 10983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10984  053B  1683               	bsf	3,5	;RP0=1, select bank1
 10985  053C  1303               	bcf	3,6	;RP1=0, select bank1
 10986  053D  083E               	movf	sprintf@c^(0+128),w
 10987  053E  00A0               	movwf	??_sprintf^(0+128)
 10988  053F  01A1               	clrf	(??_sprintf^(0+128)+1)
 10989  0540  0820               	movf	??_sprintf^(0+128),w
 10990  0541  00BC               	movwf	sprintf@prec^(0+128)
 10991  0542  0821               	movf	(??_sprintf+1)^(0+128),w
 10992  0543  00BD               	movwf	(sprintf@prec+1)^(0+128)
 10993  0544                     l4325:
 10994                           
 10995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10996  0544  1683               	bsf	3,5	;RP0=1, select bank1
 10997  0545  1303               	bcf	3,6	;RP1=0, select bank1
 10998  0546  082C               	movf	sprintf@width^(0+128),w
 10999  0547  042D               	iorwf	(sprintf@width+1)^(0+128),w
 11000  0548  1903               	btfsc	3,2
 11001  0549  2D4B               	goto	u6381
 11002  054A  2D4C               	goto	u6380
 11003  054B                     u6381:
 11004  054B  2D5E               	goto	l4331
 11005  054C                     u6380:
 11006  054C                     l4327:
 11007  054C  3003               	movlw	3
 11008  054D  052A               	andwf	sprintf@flag^(0+128),w
 11009  054E  00A0               	movwf	??_sprintf^(0+128)
 11010  054F  3000               	movlw	0
 11011  0550  052B               	andwf	(sprintf@flag+1)^(0+128),w
 11012  0551  00A1               	movwf	(??_sprintf+1)^(0+128)
 11013  0552  0820               	movf	??_sprintf^(0+128),w
 11014  0553  0421               	iorwf	(??_sprintf^(0+128)+1),w
 11015  0554  1903               	btfsc	3,2
 11016  0555  2D57               	goto	u6391
 11017  0556  2D58               	goto	u6390
 11018  0557                     u6391:
 11019  0557  2D5E               	goto	l4331
 11020  0558                     u6390:
 11021  0558                     l4329:
 11022                           
 11023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11024  0558  30FF               	movlw	255
 11025  0559  07AC               	addwf	sprintf@width^(0+128),f
 11026  055A  1803               	skipnc
 11027  055B  0AAD               	incf	(sprintf@width+1)^(0+128),f
 11028  055C  30FF               	movlw	255
 11029  055D  07AD               	addwf	(sprintf@width+1)^(0+128),f
 11030  055E                     l4331:
 11031                           
 11032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11033  055E  1F2B               	btfss	(sprintf@flag+1)^(0+128),6
 11034  055F  2D61               	goto	u6401
 11035  0560  2D62               	goto	u6400
 11036  0561                     u6401:
 11037  0561  2D7D               	goto	l4339
 11038  0562                     u6400:
 11039  0562                     l4333:
 11040                           
 11041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11042  0562  083D               	movf	(sprintf@prec+1)^(0+128),w
 11043  0563  3A80               	xorlw	128
 11044  0564  00A0               	movwf	??_sprintf^(0+128)
 11045  0565  082D               	movf	(sprintf@width+1)^(0+128),w
 11046  0566  3A80               	xorlw	128
 11047  0567  0220               	subwf	??_sprintf^(0+128),w
 11048  0568  1D03               	skipz
 11049  0569  2D6C               	goto	u6415
 11050  056A  082C               	movf	sprintf@width^(0+128),w
 11051  056B  023C               	subwf	sprintf@prec^(0+128),w
 11052  056C                     u6415:
 11053  056C  1803               	skipnc
 11054  056D  2D6F               	goto	u6411
 11055  056E  2D70               	goto	u6410
 11056  056F                     u6411:
 11057  056F  2D79               	goto	l4337
 11058  0570                     u6410:
 11059  0570                     l4335:
 11060                           
 11061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11062  0570  1683               	bsf	3,5	;RP0=1, select bank1
 11063  0571  1303               	bcf	3,6	;RP1=0, select bank1
 11064  0572  083C               	movf	sprintf@prec^(0+128),w
 11065  0573  02AC               	subwf	sprintf@width^(0+128),f
 11066  0574  083D               	movf	(sprintf@prec+1)^(0+128),w
 11067  0575  1C03               	skipc
 11068  0576  03AD               	decf	(sprintf@width+1)^(0+128),f
 11069  0577  02AD               	subwf	(sprintf@width+1)^(0+128),f
 11070  0578  2D7D               	goto	l4339
 11071  0579                     l4337:
 11072                           
 11073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11074  0579  1683               	bsf	3,5	;RP0=1, select bank1
 11075  057A  1303               	bcf	3,6	;RP1=0, select bank1
 11076  057B  01AC               	clrf	sprintf@width^(0+128)
 11077  057C  01AD               	clrf	(sprintf@width+1)^(0+128)
 11078  057D                     l4339:
 11079                           
 11080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11081  057D  082D               	movf	(sprintf@width+1)^(0+128),w
 11082  057E  3A80               	xorlw	128
 11083  057F  3C80               	sublw	128
 11084  0580  1D03               	skipz
 11085  0581  2D84               	goto	u6425
 11086  0582  082C               	movf	sprintf@width^(0+128),w
 11087  0583  023E               	subwf	sprintf@c^(0+128),w
 11088  0584                     u6425:
 11089  0584  1803               	skipnc
 11090  0585  2D87               	goto	u6421
 11091  0586  2D88               	goto	u6420
 11092  0587                     u6421:
 11093  0587  2D94               	goto	l4343
 11094  0588                     u6420:
 11095  0588                     l4341:
 11096                           
 11097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11098  0588  1683               	bsf	3,5	;RP0=1, select bank1
 11099  0589  1303               	bcf	3,6	;RP1=0, select bank1
 11100  058A  083E               	movf	sprintf@c^(0+128),w
 11101  058B  00A0               	movwf	??_sprintf^(0+128)
 11102  058C  01A1               	clrf	(??_sprintf^(0+128)+1)
 11103  058D  0820               	movf	??_sprintf^(0+128),w
 11104  058E  02AC               	subwf	sprintf@width^(0+128),f
 11105  058F  0821               	movf	(??_sprintf+1)^(0+128),w
 11106  0590  1C03               	skipc
 11107  0591  03AD               	decf	(sprintf@width+1)^(0+128),f
 11108  0592  02AD               	subwf	(sprintf@width+1)^(0+128),f
 11109  0593  2D98               	goto	l4345
 11110  0594                     l4343:
 11111                           
 11112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11113  0594  1683               	bsf	3,5	;RP0=1, select bank1
 11114  0595  1303               	bcf	3,6	;RP1=0, select bank1
 11115  0596  01AC               	clrf	sprintf@width^(0+128)
 11116  0597  01AD               	clrf	(sprintf@width+1)^(0+128)
 11117  0598                     l4345:
 11118                           
 11119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11120  0598  082C               	movf	sprintf@width^(0+128),w
 11121  0599  042D               	iorwf	(sprintf@width+1)^(0+128),w
 11122  059A  1903               	btfsc	3,2
 11123  059B  2D9D               	goto	u6431
 11124  059C  2D9E               	goto	u6430
 11125  059D                     u6431:
 11126  059D  2DB5               	goto	l4353
 11127  059E                     u6430:
 11128  059E                     l4347:
 11129                           
 11130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11131  059E  3020               	movlw	32
 11132  059F  00A0               	movwf	??_sprintf^(0+128)
 11133  05A0  083B               	movf	sprintf@sp^(0+128),w
 11134  05A1  0084               	movwf	4
 11135  05A2  0820               	movf	??_sprintf^(0+128),w
 11136  05A3  1383               	bcf	3,7	;select IRP bank0
 11137  05A4  0080               	movwf	0
 11138  05A5                     l4349:
 11139  05A5  3001               	movlw	1
 11140  05A6  00A0               	movwf	??_sprintf^(0+128)
 11141  05A7  0820               	movf	??_sprintf^(0+128),w
 11142  05A8  07BB               	addwf	sprintf@sp^(0+128),f
 11143  05A9                     l4351:
 11144  05A9  30FF               	movlw	255
 11145  05AA  07AC               	addwf	sprintf@width^(0+128),f
 11146  05AB  1803               	skipnc
 11147  05AC  0AAD               	incf	(sprintf@width+1)^(0+128),f
 11148  05AD  30FF               	movlw	255
 11149  05AE  07AD               	addwf	(sprintf@width+1)^(0+128),f
 11150  05AF  082C               	movf	sprintf@width^(0+128),w
 11151  05B0  042D               	iorwf	(sprintf@width+1)^(0+128),w
 11152  05B1  1D03               	btfss	3,2
 11153  05B2  2DB4               	goto	u6441
 11154  05B3  2DB5               	goto	u6440
 11155  05B4                     u6441:
 11156  05B4  2D9E               	goto	l4347
 11157  05B5                     u6440:
 11158  05B5                     l4353:
 11159                           
 11160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11161  05B5  3003               	movlw	3
 11162  05B6  052A               	andwf	sprintf@flag^(0+128),w
 11163  05B7  00A0               	movwf	??_sprintf^(0+128)
 11164  05B8  3000               	movlw	0
 11165  05B9  052B               	andwf	(sprintf@flag+1)^(0+128),w
 11166  05BA  00A1               	movwf	(??_sprintf+1)^(0+128)
 11167  05BB  0820               	movf	??_sprintf^(0+128),w
 11168  05BC  0421               	iorwf	(??_sprintf^(0+128)+1),w
 11169  05BD  1903               	btfsc	3,2
 11170  05BE  2DC0               	goto	u6451
 11171  05BF  2DC1               	goto	u6450
 11172  05C0                     u6451:
 11173  05C0  2E3C               	goto	l4365
 11174  05C1                     u6450:
 11175  05C1                     l4355:
 11176                           
 11177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11178  05C1  302D               	movlw	45
 11179  05C2  00A0               	movwf	??_sprintf^(0+128)
 11180  05C3  083B               	movf	sprintf@sp^(0+128),w
 11181  05C4  0084               	movwf	4
 11182  05C5  0820               	movf	??_sprintf^(0+128),w
 11183  05C6  1383               	bcf	3,7	;select IRP bank0
 11184  05C7  0080               	movwf	0
 11185  05C8                     l4357:
 11186  05C8  3001               	movlw	1
 11187  05C9  00A0               	movwf	??_sprintf^(0+128)
 11188  05CA  0820               	movf	??_sprintf^(0+128),w
 11189  05CB  07BB               	addwf	sprintf@sp^(0+128),f
 11190  05CC  2E3C               	goto	l4365
 11191  05CD                     l4359:
 11192                           
 11193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11194  05CD  3000               	movlw	0
 11195  05CE  1283               	bcf	3,5	;RP0=0, select bank0
 11196  05CF  1303               	bcf	3,6	;RP1=0, select bank0
 11197  05D0  00B0               	movwf	___llmod@divisor+3
 11198  05D1  3000               	movlw	0
 11199  05D2  00AF               	movwf	___llmod@divisor+2
 11200  05D3  3000               	movlw	0
 11201  05D4  00AE               	movwf	___llmod@divisor+1
 11202  05D5  300A               	movlw	10
 11203  05D6  00AD               	movwf	___llmod@divisor
 11204  05D7  1683               	bsf	3,5	;RP0=1, select bank1
 11205  05D8  1303               	bcf	3,6	;RP1=0, select bank1
 11206  05D9  083C               	movf	sprintf@prec^(0+128),w
 11207  05DA  00A0               	movwf	??_sprintf^(0+128)
 11208  05DB  3001               	movlw	1
 11209  05DC                     u6465:
 11210  05DC  1003               	clrc
 11211  05DD  0DA0               	rlf	??_sprintf^(0+128),f
 11212  05DE  3EFF               	addlw	-1
 11213  05DF  1D03               	skipz
 11214  05E0  2DDC               	goto	u6465
 11215  05E1  1003               	clrc
 11216  05E2  0D20               	rlf	??_sprintf^(0+128),w
 11217  05E3  3E4F               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11218  05E4  0084               	movwf	4
 11219  05E5  160A  118A  200A  120A  118A  	fcall	stringdir
 11220  05EA  1283               	bcf	3,5	;RP0=0, select bank0
 11221  05EB  1303               	bcf	3,6	;RP1=0, select bank0
 11222  05EC  00A0               	movwf	___lldiv@divisor
 11223  05ED  160A  118A  200A  120A  118A  	fcall	stringdir
 11224  05F2  00A1               	movwf	___lldiv@divisor+1
 11225  05F3  160A  118A  200A  120A  118A  	fcall	stringdir
 11226  05F8  00A2               	movwf	___lldiv@divisor+2
 11227  05F9  160A  118A  200A  120A  118A  	fcall	stringdir
 11228  05FE  00A3               	movwf	___lldiv@divisor+3
 11229  05FF  1683               	bsf	3,5	;RP0=1, select bank1
 11230  0600  1303               	bcf	3,6	;RP1=0, select bank1
 11231  0601  0835               	movf	(sprintf@val+3)^(0+128),w
 11232  0602  1283               	bcf	3,5	;RP0=0, select bank0
 11233  0603  1303               	bcf	3,6	;RP1=0, select bank0
 11234  0604  00A7               	movwf	___lldiv@dividend+3
 11235  0605  1683               	bsf	3,5	;RP0=1, select bank1
 11236  0606  1303               	bcf	3,6	;RP1=0, select bank1
 11237  0607  0834               	movf	(sprintf@val+2)^(0+128),w
 11238  0608  1283               	bcf	3,5	;RP0=0, select bank0
 11239  0609  1303               	bcf	3,6	;RP1=0, select bank0
 11240  060A  00A6               	movwf	___lldiv@dividend+2
 11241  060B  1683               	bsf	3,5	;RP0=1, select bank1
 11242  060C  1303               	bcf	3,6	;RP1=0, select bank1
 11243  060D  0833               	movf	(sprintf@val+1)^(0+128),w
 11244  060E  1283               	bcf	3,5	;RP0=0, select bank0
 11245  060F  1303               	bcf	3,6	;RP1=0, select bank0
 11246  0610  00A5               	movwf	___lldiv@dividend+1
 11247  0611  1683               	bsf	3,5	;RP0=1, select bank1
 11248  0612  1303               	bcf	3,6	;RP1=0, select bank1
 11249  0613  0832               	movf	sprintf@val^(0+128),w
 11250  0614  1283               	bcf	3,5	;RP0=0, select bank0
 11251  0615  1303               	bcf	3,6	;RP1=0, select bank0
 11252  0616  00A4               	movwf	___lldiv@dividend
 11253  0617  160A  118A  2296  120A  118A  	fcall	___lldiv
 11254  061C  1283               	bcf	3,5	;RP0=0, select bank0
 11255  061D  1303               	bcf	3,6	;RP1=0, select bank0
 11256  061E  0823               	movf	?___lldiv+3,w
 11257  061F  00B4               	movwf	___llmod@dividend+3
 11258  0620  0822               	movf	?___lldiv+2,w
 11259  0621  00B3               	movwf	___llmod@dividend+2
 11260  0622  0821               	movf	?___lldiv+1,w
 11261  0623  00B2               	movwf	___llmod@dividend+1
 11262  0624  0820               	movf	?___lldiv,w
 11263  0625  00B1               	movwf	___llmod@dividend
 11264  0626  160A  118A  20D3  120A  118A  	fcall	___llmod
 11265  062B  1283               	bcf	3,5	;RP0=0, select bank0
 11266  062C  1303               	bcf	3,6	;RP1=0, select bank0
 11267  062D  082D               	movf	?___llmod,w
 11268  062E  3E30               	addlw	48
 11269  062F  1683               	bsf	3,5	;RP0=1, select bank1
 11270  0630  1303               	bcf	3,6	;RP1=0, select bank1
 11271  0631  00A1               	movwf	(??_sprintf+1)^(0+128)
 11272  0632  0821               	movf	(??_sprintf+1)^(0+128),w
 11273  0633  00BE               	movwf	sprintf@c^(0+128)
 11274  0634                     l4361:
 11275                           
 11276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11277  0634  083E               	movf	sprintf@c^(0+128),w
 11278  0635  00A0               	movwf	??_sprintf^(0+128)
 11279  0636  083B               	movf	sprintf@sp^(0+128),w
 11280  0637  0084               	movwf	4
 11281  0638  0820               	movf	??_sprintf^(0+128),w
 11282  0639  1383               	bcf	3,7	;select IRP bank0
 11283  063A  0080               	movwf	0
 11284  063B  2DC8               	goto	l4357
 11285  063C                     l4365:
 11286                           
 11287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11288  063C  30FF               	movlw	255
 11289  063D  07BC               	addwf	sprintf@prec^(0+128),f
 11290  063E  1803               	skipnc
 11291  063F  0ABD               	incf	(sprintf@prec+1)^(0+128),f
 11292  0640  30FF               	movlw	255
 11293  0641  07BD               	addwf	(sprintf@prec+1)^(0+128),f
 11294  0642  0A3C               	incf	sprintf@prec^(0+128),w
 11295  0643  1D03               	skipz
 11296  0644  2E49               	goto	u6471
 11297  0645  0A3D               	incf	(sprintf@prec+1)^(0+128),w
 11298  0646  1D03               	btfss	3,2
 11299  0647  2E49               	goto	u6471
 11300  0648  2E4A               	goto	u6470
 11301  0649                     u6471:
 11302  0649  2DCD               	goto	l4359
 11303  064A                     u6470:
 11304  064A                     l4367:
 11305                           
 11306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11307  064A  3001               	movlw	1
 11308  064B  1283               	bcf	3,5	;RP0=0, select bank0
 11309  064C  1303               	bcf	3,6	;RP1=0, select bank0
 11310  064D  07E2               	addwf	sprintf@f,f
 11311  064E  30FF               	movlw	-1
 11312  064F  0762               	addwf	sprintf@f,w
 11313  0650  0084               	movwf	4
 11314  0651  160A  118A  200A  120A  118A  	fcall	stringdir
 11315  0656  1683               	bsf	3,5	;RP0=1, select bank1
 11316  0657  1303               	bcf	3,6	;RP1=0, select bank1
 11317  0658  00A0               	movwf	??_sprintf^(0+128)
 11318  0659  0820               	movf	??_sprintf^(0+128),w
 11319  065A  00BE               	movwf	sprintf@c^(0+128)
 11320  065B  083E               	movf	sprintf@c^(0+128),w
 11321  065C  1D03               	btfss	3,2
 11322  065D  2E5F               	goto	u6481
 11323  065E  2E62               	goto	u6480
 11324  065F                     u6481:
 11325  065F  120A  158A  2D32   	goto	l4089
 11326  0662                     u6480:
 11327  0662                     l4369:
 11328                           
 11329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11330  0662  083B               	movf	sprintf@sp^(0+128),w
 11331  0663  0084               	movwf	4
 11332  0664  1383               	bcf	3,7	;select IRP bank0
 11333  0665  0180               	clrf	0
 11334  0666                     l473:
 11335  0666  0008               	return
 11336  0667                     __end_of_sprintf:

Data Sizes:
    Strings     49
    Constant    118
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     78      79
    BANK1            80     34      66
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_2(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> data_total(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> data_total(BANK1[20]), STR_1(CODE[15]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[16]), data_total(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->_Write_USART_String
    _setup->_initOsc
    _Write_USART_String->_Write_USART
    _Show_val_LCD->_Lcd_Set_Cursor
    _Show_val_LCD->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    ___bmul->___awmod
    ___bmul->___lwmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftadd->___ftpack
    ___ftmul->___awmod
    ___ftmul->___ftpack
    ___ftmul->___lwmod
    ___ftdiv->___ftpack
    ___awtoft->___ftpack

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ADC_to_string
    _Show_val_LCD->_Lcd_Write_String
    _ADC_to_string->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    ___awdiv->___awmod
    _fround->___ftmul
    ___lwdiv->___lwmod
    ___bmul->___awdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _ADC_channel2->___ftdiv
    _ADC_channel1->___ftdiv
    ___ftmul->___bmul
    ___ftdiv->___ftmul
    ___awtoft->___ftpack

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _ADC_to_string->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   65057
                                             31 BANK1      3     3      0
                       _ADC_channel1
                       _ADC_channel2
                      _ADC_to_string
                          _Lcd_Clear
                           _Lcd_Init
                       _Show_val_LCD
                        _Write_USART
                 _Write_USART_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                    _USART_INTERRUPT
                         _USART_Init
                _USART_Init_BaudRate
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _USART_Init_BaudRate                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_INTERRUPT                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     218
                                              4 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Show_val_LCD                                         1     1      0     768
                                              5 BANK0      1     1      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     322
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     384
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_to_string                                        3     3      0   42418
                                             75 BANK0      3     3      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             45    36      9   42418
                                             66 BANK0      9     0      9
                                              0 BANK1     31    31      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                                9     6      3    8723
                                             31 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1213
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1355
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              16    13      3    7129
                                             31 BANK0     16    13      3
                             ___bmul
                            ___ftmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     622
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     631
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     560
                                             11 BANK0      4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         16    10      6     584
                                              3 COMMON     4     4      0
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          20    14      6     803
                                              0 BANK0     20    14      6
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1606
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    2565
                                              3 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     752
                                              4 COMMON     2     2      0
                                             13 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     631
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     411
                                             40 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4109
                                             60 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3883
                                             47 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                              3 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               6     0      6     718
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _ADC_channel2                                         2     2      0   10727
                                             47 BANK0      2     2      0
                         _ADC_Config
                           ___awtoft
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (1) _ADC_channel1                                         2     2      0   10727
                                             47 BANK0      2     2      0
                         _ADC_Config
                           ___awtoft
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    4966
                                             15 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3078
                                             31 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2661
                                              3 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2398
                                              3 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Config                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_channel1
     _ADC_Config
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
   _ADC_channel2
     _ADC_Config
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftpack (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
   _ADC_to_string
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftpack (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
               ___ftpack (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___ftpack (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___ftpack (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Show_val_LCD
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _Write_USART
   _Write_USART_String
     _Write_USART
   _setup
     _USART_INTERRUPT
     _USART_Init
     _USART_Init_BaudRate
     _initOsc

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     22      42       7       82.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 22:11:39 2021

                           pc 0002                ___bmul@product 002D                            l98 1EAD  
                ___awdiv@sign 0028                            fsr 0004           ___wmul@multiplicand 0075  
         __size_of_ADC_Config 00BC                  ___ftadd@exp1 005B                  ___ftadd@exp2 005A  
        __size_of_Write_USART 000C              ?_USART_INTERRUPT 0070                  ___ftadd@sign 0059  
                         l101 1E42                           l113 11DE                           l210 1485  
                         l130 1266                           l122 123C                           l211 148C  
                         l107 1183                           l131 126C                           l123 1294  
                         l220 14CB                           l212 1493                           l132 1295  
                         l124 1242                           l116 1E16                           l221 14D2  
                         l213 149A                           l125 1248                           l222 14D9  
                         l214 14A1                           l126 124E                           l223 14E0  
                         l215 14A8                           l207 1477                           l151 10D2  
                         l127 1254                           l224 14E7                           l216 14AF  
                         l160 1D45                           l128 125A                           l225 1530  
                         l217 14B6                           l209 147E                           l145 1FFF  
                         l129 1260                           l218 14BD                           l154 1CBB  
                         l219 14C4                           l403 0E06                           l163 1CE3  
                         l251 1C84                           l148 1C78                           l260 1CA2  
                         l254 1C7E                           l503 1CFA                           l248 1CAE  
                         l513 12FD                           l169 1FAF                           l257 1C98  
                         l266 1DEB                           l443 02FC                           l436 02B8  
                         l381 0D27                           l702 13E8                           l374 0A6C  
                         l713 13C2                           l473 0666                           l714 13CC  
                         l706 13A7                           l715 13E8                           l723 079C  
                         l803 1D1F                           l660 1366                           l477 1DA6  
                         l726 06B2                           l814 1457                           l727 06BC  
                         l807 1474                           l479 1DC0                           l728 06C1  
                         l737 0732                           l673 1239                           l754 08C3  
                         l762 15ED                           l683 17FF                           l763 155F  
                         l780 1EE7                           l773 15E0                           l694 17F2  
                         l686 17AF                           l766 15B0                           l679 1D95  
                         l687 17C2                           l919 1F69                           l848 1128  
                         l856 1E75                           l929 1F23                           l786 16D2  
                         l939 1CCD                           l797 1C96                           _ISR 1D46  
                         _VAL 0078                           fsr0 0004                           indf 0000  
                ___awmod@sign 0021   __size_of_Write_USART_String 002B                          ?_ISR 0070  
                ___ftdiv@cntr 0049                  ___ftdiv@sign 004E                          l4011 12BC  
                        l4003 1296                          l3221 152B                          l3213 1476  
                        l4021 12EF                          l4013 12C5                          l4005 12A8  
                        l4101 0D5E                          l3223 152E                          l4031 1EC1  
                        l4015 12D7                          l4007 12AB                          l4023 12F5  
                        l4111 0DAE                          l4103 0D73                          l3231 123B  
                        l3311 1DF7                          l3225 152F                          l3217 14EE  
                        l4041 1EE4                          l4033 1EC5                          l4017 12E5  
                        l4009 12B8                          l4201 00E2                          l4121 0DE8  
                        l4113 0DB1                          l4105 0D8A                          l3241 1C7F  
                        l3321 1DFF                          l3313 1DFB                          l3305 1DEC  
                        l3219 1528                          l4043 1EE6                          l4035 1ED2  
                        l4027 1EAE                          l4051 1D06                          l4019 12E6  
                        l2291 1CEC                          l4203 00E9                          l4131 0E08  
                        l4123 0DEE                          l4115 0DB7                          l4107 0D90  
                        l3243 1C82                          l3235 1272                          l3331 1E06  
                        l3323 1E00                          l3315 1DFC                          l3307 1DF2  
                        l4037 1ED4                          l4029 1EB4                          l4061 10ED  
                        l2293 1CF0                          l4301 04C9                          l4221 01C4  
                        l4213 0168                          l4205 0164                          l4141 0E4D  
                        l4133 0E2C                          l4117 0DBC                          l4125 0E00  
                        l4109 0DA0                          l3245 1CA3                          l3333 1E07  
                        l3325 1E03                          l3317 1DFD                          l3309 1DF6  
                        l4039 1ED6                          l4047 1CFB                          l4063 10F1  
                        l4071 1120                          l4055 10D3                          l2295 1CF2  
                        l2287 1CE7                          l4311 04D9                          l4303 04D1  
                        l4223 01CA                          l4207 0166                          l4151 0E8D  
                        l4143 0E51                          l4135 0E3A                          l4127 0E04  
                        l4119 0DD1                          l3247 1CAD                          l3335 1E0C  
                        l3327 1E04                          l3319 1DFE                          l3521 136C  
                        l4401 1D70                          l4049 1D04                          l4065 1103  
                        l4057 10DD                          l4081 1E5D                          l2297 1CF9  
                        l2289 1CE8                          l2641 1CCC                          l2633 1CBD  
                        l3601 11E6                          l4321 052C                          l4305 04D7  
                        l4241 0212                          l4225 01D6                          l4233 01EB  
                        l4217 019F                          l4161 0EF5                          l4153 0E94  
                        l4145 0E70                          l4137 0E3E                          l3249 1C79  
                        l3337 1E11                          l3329 1E05                          l3531 138F  
                        l3523 1373                          l4403 1D74                          l4411 0802  
                        l2811 1C96                          l4067 1111                          l4059 10E0  
                        l4075 1E43                          l2635 1CBE                          l3611 11FC  
                        l3603 11EB                          l4331 055E                          l4323 053B  
                        l4315 0510                          l4251 02CD                          l4243 026D  
                        l4235 01F8                          l4227 01DD                          l4219 01A9  
                        l4171 0F70                          l4163 0EF9                          l4155 0EB9  
                        l4147 0E85                          l4139 0E42                          l4091 0D38  
                        l3371 1DC3                          l3541 13BC                          l3533 1395  
                        l4405 1D79                          l4413 0815                          l3701 0781  
                        l4069 111A                          l4077 1E4A                          l2637 1CC4  
                        l3621 1218                          l3613 11FF                          l3605 11ED  
                        l4341 0588                          l4333 0562                          l4325 0544  
                        l4317 051A                          l4261 0305                          l4253 02D3  
                        l4245 02AC                          l4237 0206                          l4229 01E6  
                        l4181 0FEA                          l4173 0F79                          l4165 0EFF  
                        l4157 0EBF                          l4149 0E89                          l4093 0D3F  
                        l4085 1CAF                          l3373 1DD4                          l4501 07B4  
                        l3543 13C6                          l3535 139F                          l3527 137A  
                        l3519 1367                          l4407 1D7B                          l4431 0863  
                        l4423 0834                          l3711 1608                          l2807 1C8D  
                        l2831 1417                          l2823 13E9                          l4079 1E57  
                        l2639 1CCA                          l3631 1235                          l3623 121E  
                        l3615 1206                          l3607 11F1                          l4351 05A9  
                        l4343 0594                          l4335 0570                          l4327 054C  
                        l4319 0525                          l4271 037A                          l4263 030A  
                        l4255 02E0                          l4247 02C0                          l4239 020D  
                        l4191 007A                          l4183 0022                          l4175 0F9A  
                        l4167 0F18                          l4159 0ED2                          l4095 0D44  
                        l4087 0D2B                          l3551 1C74                          l3375 1DD8  
                        l4511 07DA                          l4503 07BE                          l3545 13CE  
                        l3537 13AE                          l3529 1388                          l4441 088F  
                        l4433 0867                          l4425 083A                          l4417 081C  
                        l3721 164E                          l3713 1619                          l3705 15EE  
                        l2809 1C94                          l3641 0696                          l2841 142B  
                        l2833 1418                          l2825 13FC                          l3561 130C  
                        l3553 12FE                          l3625 1225                          l3617 120A  
                        l3609 11F6                          l4361 0634                          l4353 05B5  
                        l4345 0598                          l4337 0579                          l4329 0558  
                        l4281 0483                          l4273 03D5                          l4265 0311  
                        l4257 02EF                          l4249 02C9                          l4193 0083  
                        l4185 002B                          l4169 0F51                          l4177 0FA2  
                        l4097 0D48                          l4089 0D32                          l3369 1DC1  
                        l4513 07E0                          l4505 07C3                          l3547 13E2  
                        l3539 13B8                          l4443 0899                          l4435 086E  
                        l4427 083F                          l4419 082D                          l3731 1663  
                        l3723 164F                          l3707 1601                          l3651 06B3  
                        l3635 0667                          l2835 141E                          l3571 1321  
                        l3563 1310                          l3555 1301                          l3619 120E  
                        l3627 122B                          l4355 05C1                          l4347 059E  
                        l4339 057D                          l4291 04AC                          l4283 048A  
                        l4275 0414                          l4267 0315                          l4259 02F6  
                        l4195 008B                          l4187 004A                          l4179 0FB1  
                        l4099 0D5A                          l3811 10CF                          l3803 10BA  
                        l4515 07E6                          l4507 07CC                          l3549 13E7  
                        l4445 089A                          l4437 0879                          l4429 0851  
                        l3741 168D                          l3733 1673                          l3725 1655  
                        l3717 1620                          l3661 06C8                          l3653 06B7  
                        l3645 069D                          l3637 0686                          l2861 146C  
                        l2837 1425                          l2829 1405                          l3901 1575  
                        l3581 1344                          l3573 1324                          l3565 1315  
                        l3557 1305                          l3629 1230                          l4357 05C8  
                        l4365 063C                          l4349 05A5                          l4293 04B0  
                        l4285 048E                          l4277 0420                          l4269 032D  
                        l4189 0059                          l3805 10BD                          l4461 1FD6  
                        l4453 1FB0                          l4381 1D28                          l3821 1CE0  
                        l3813 1CCF                          l4517 07EB                          l4509 07D1  
                        l4447 08A2                          l4439 0881                          l3751 16B7  
                        l3743 1691                          l3735 167B                          l3727 165B  
                        l3719 164D                          l4471 117E                          l4463 1129  
                        l3671 06FA                          l3663 06D5                          l3655 06BB  
                        l3647 06A2                          l3639 068C                          l2855 144C  
                        l2847 1433                          l2839 1427                          l3911 15A1  
                        l3903 1577                          l3823 08C7                          l3591 135D  
                        l3583 134A                          l3575 132B                          l3567 1319  
                        l3559 130A                          l4359 05CD                          l4295 04B4  
                        l4287 0494                          l4279 047B                          l4199 00A3  
                        l4367 064A                          l3807 10C3                          l4455 1FB6  
                        l4383 1D2D                          l3815 1CD2                          l4391 1F6A  
                        l4449 08A8                          l3745 16A1                          l3737 1683  
                        l3729 165F                          l4465 112F                          l4481 11D9  
                        l4473 1184                          l3681 0720                          l3665 06DF  
                        l3673 0701                          l3657 06C0                          l3649 06A8  
                        l2857 145C                          l2849 1445                          l3913 15A2  
                        l3905 1580                          l3761 1F31                          l3841 0A39  
                        l3825 08CD                          l3833 09AA                          l3593 1362  
                        l3585 134B                          l3577 132F                          l3569 131B  
                        l4297 04B8                          l4289 049B                          l4369 0662  
                        l3809 10C6                          l4457 1FC0                          l4385 1D34  
                        l3817 1CD8                          l4393 1F6F                          l3747 16A9  
                        l3739 1689                          l4467 1136                          l4475 118A  
                        l3691 075A                          l3683 072C                          l3675 0707  
                        l3667 06E5                          l3659 06C2                          l2859 1461  
                        l3931 15D5                          l3923 15BC                          l3915 15AA  
                        l3907 1589                          l3771 1F57                          l3763 1F38  
                        l3755 1F24                          l3835 09B0                          l3827 0990  
                        l3587 1352                          l3579 1333                          l3851 0A7D  
                        l4299 04C3                          l4483 1E76                          l4459 1FD0  
                        l4387 1D3A                          l4379 1D23                          l3819 1CDB  
                        l4395 1F8B                          l4491 079D                          l3749 16B1  
                        l4469 113A                          l4477 1191                          l3693 075B  
                        l3685 0736                          l3677 0711                          l3669 06EE  
                        l3933 15E5                          l3917 15B4                          l3925 15CE  
                        l3909 1597                          l3773 1F58                          l3765 1F3C  
                        l3757 1F28                          l3781 1EE8                          l3837 0A1F  
                        l3589 1358                          l3597 11DF                          l3845 0A70  
                        l4389 1D3F                          l4397 1F93                          l4485 1E17  
                        l4493 07A2                          l4399 1D6D                          l4479 1195  
                        l3695 076B                          l3687 0746                          l3679 0717  
                        l3951 1744                          l3943 16F7                          l3775 1F5F  
                        l3767 1F40                          l3759 1F2E                          l3791 1F02  
                        l3783 1EEE                          l3599 11E2                          l3863 0BAE  
                        l3847 0A74                          l4487 1E28                          l4495 07A5  
                        l3697 076F                          l3689 074A                          l3961 1760  
                        l3953 174C                          l3937 16D3                          l3769 1F51  
                        l3777 1F65                          l3793 1F0C                          l3785 1EF3  
                        l3881 0D07                          l3857 0B3B                          l3849 0A76  
                        l4489 1E31                          l2897 1C98                          l4593 127A  
                        l4497 07AA                          l3699 077F                          l3963 178C  
                        l3955 174E                          l3939 16EE                          l3891 154D  
                        l3795 1F12                          l3787 1EFA                          l3875 0C94  
                        l3859 0B42                          l3867 0BCF                          l4595 0E1E  
                        l2899 1C9E                          l4499 07AF                          l4597 14F6  
                        l3965 17AE                          l3957 1753                          l3949 1710  
                        l3885 1531                          l3797 1F19                          l3789 1EFE  
                        l3877 0C9B                          l3869 0BD6                          l3991 1D9A  
                        l3983 17E7                          l3975 17CE                          l3967 17BC  
                        l3959 1757                          l3887 1544                          l3799 1F1F  
                        l3993 1D9E                          l3985 17F7                          l3969 17C6  
                        l3977 17E0                          l3897 1560                          l3995 1DAD  
                        l3899 1566                          l3997 1DB4                          l3989 1D96  
                        l3999 1DBA                          STR_1 10A8                          STR_2 1086  
                        STR_3 1098                          u3210 1CC4                          u3211 1CC3  
                        u2420 1CEC                          u3220 1CCA                          u2421 1CEB  
                        u3221 1CC9                          u2430 1CF9                          u2431 1CF8  
                        u5000 06ED                          u5001 06EC                          u5100 074A  
                        u5020 0700                          u5101 0749                          u5021 06FF  
                        u5030 0707                          u5111 0764                          u5031 0706  
                        u5015 06EF                          u5120 076F                          u5112 076B  
                        u6000 0E3A                          u5121 076E                          u6001 0E37  
                        u5210 1689                          u5130 1601                          u5050 0717  
                        u6010 0E3E                          u5211 1688                          u5131 1600  
                        u5051 0716                          u6011 0E3D                          u5220 1691  
                        u5140 1619                          u3620 1C94                          u5060 071F  
                        u3700 144B                          u6100 002B                          u6020 0E70  
                        u5221 1690                          u5205 167C                          u5141 1618  
                        u3621 1C93                          u5061 071E                          u5045 0708  
                        u3701 144A                          u6101 002A                          u6021 0E6F  
                        u5150 1630                          u5310 1F51                          u6110 004A  
                        u6030 0E94                          u5231 169A                          u5311 1F50  
                        u6111 0049                          u6031 0E93                          u5232 16A1  
                        u5160 1642                          u5080 0732                          u3720 145C  
                        u3640 13FC                          u5400 08CD                          u6200 0206  
                        u6120 0059                          u6040 0EA8                          u5081 0731  
                        u3721 145B                          u3641 13FB                          u5305 1F41  
                        u5401 08CC                          u6201 0205                          u6121 0058  
                        u4610 138E                          u5170 1663                          u5090 0736  
                        u3730 1461                          u3650 1410                          u5330 1F65  
                        u5410 09B0                          u6130 007A                          u6050 0EF9  
                        u4530 1DEB                          u4611 138D                          u5171 1662  
                        u5155 162C                          u5091 0735                          u5075 0721  
                        u3731 1460                          u3715 144E                          u5331 1F64  
                        u5315 1F4D                          u5411 09AF                          u6131 0079  
                        u6051 0EF8                          u4531 1DEA                          u5260 16B7  
                        u3660 142B                          u5500 1597                          u5340 1EEE  
                        u4700 1305                          u5420 0A74                          u6300 04B4  
                        u6220 02BF                          u6060 0F70                          u3820 1C9E  
                        u4605 1381                          u5261 16B6                          u5245 16A2  
                        u5181 166C                          u5165 163E                          u3661 142A  
                        u5501 1596                          u5325 1F59                          u5341 1EED  
                        u4701 1304                          u5421 0A73                          u6301 04B3  
                        u6221 02BE                          u6125 0055                          u6061 0F6F  
                        u6045 0EA3                          u3821 1C9D                          u4630 13AD  
                        u5182 1673                          u3670 1432                          u5270 1F2E  
                        u4710 1310                          u5430 0A7D                          u6310 04C9  
                        u6230 02E0                          u6150 019E                          u6070 0F9A  
                        u4631 13AC                          u5255 16AA                          u3671 1431  
                        u3655 140C                          u5271 1F2D                          u4711 130F  
                        u5431 0A7C                          u6311 04C8                          u6231 02DF  
                        u6215 0215                          u6151 019D                          u6071 0F99  
                        u5600 16EE                          u5520 15B0                          u5360 1F02  
                        u4720 1321                          u4800 11E6                          u5440 0B42  
                        u6400 0562                          u6320 04D1                          u6240 02EF  
                        u6160 01A9                          u6080 0FB1                          u4625 13A0  
                        u5601 16ED                          u5521 15AF                          u5505 1593  
                        u5361 1F01                          u4721 1320                          u4801 11E5  
                        u5441 0B41                          u6401 0561                          u6321 04D0  
                        u6241 02EE                          u6161 01A8                          u6145 016B  
                        u6081 0FB0                          u4650 13BC                          u3690 1444  
                        u5610 170F                          u5530 15B4                          u5290 1F40  
                        u5370 1F0C                          u4810 11F1                          u5450 0BD6  
                        u6410 0570                          u6250 030A                          u6170 01C4  
                        u6090 0022                          u4651 13BB                          u5195 1674  
                        u3691 1443                          u5611 170E                          u5531 15B3  
                        u5515 15A3                          u5291 1F3F                          u5371 1F0B  
                        u5355 1EF4                          u4811 11F0                          u5451 0BD5  
                        u6411 056F                          u6251 0309                          u6235 02DC  
                        u6171 01C3                          u6155 019A                          u6091 0FFA  
                        u4660 13C2                          u4580 136C                          u4900 068C  
                        u5540 15BB                          u4740 1333                          u4820 11FC  
                        u5460 0C9B                          u6420 0588                          u6340 050F  
                        u6180 01D6                          u6500 1D3A                          _RCIF 0065  
                        u4661 13C1                          u4645 13B1                          u4581 136B  
                        u4901 068B                          u3685 1434                          u5541 15BA  
                        u5285 1F32                          u4741 1332                          u4821 11FB  
                        u5461 0C9A                          u6421 0587                          u6341 050E  
                        u6245 02EB                          u6181 01D5                          u6085 0FAD  
                        u6501 1D39                          u4670 13C6                          u4590 1373  
                        u4910 0696                          u5710 17F7                          u5630 178C  
                        u5470 1544                          u5390 1F1F                          u6430 059E  
                        u6350 051A                          u6190 01F8                          u6510 1F79  
                        u4671 13C5                          u4591 1372                          u4911 0695  
                        u5711 17F6                          u5631 178B                          u5471 1543  
                        u5391 1F1E                          u5375 1F08                          u4735 1325  
                        u6431 059D                          u6415 056C                          u6351 0519  
                        u6335 04DC                          u6191 01F7                          u6095 0FF5  
                        u4680 13D9                          u6600 088F                          u4920 06A2  
                        u5800 12D7                          u5720 1D9E                          u5640 17C2  
                        u5560 15CD                          u5480 155E                          u4760 1344  
                        u4840 120E                          u6440 05B5                          u6360 0525  
                        u6280 0482                          u6520 1F9D                          u6601 088E  
                        u4921 06A1                          u5801 12D6                          u5721 1D9D  
                        u5705 17E9                          u5641 17C1                          u5625 1759  
                        u5561 15CC                          u5481 155D                          u5385 1F13  
                        u4761 1343                          u4841 120D                          u6441 05B4  
                        u6425 0584                          u6361 0524                          u6345 050B  
                        u6281 0481                          u6265 037D                          u4690 13E7  
                        u4930 06A8                          u5650 17C6                          u5570 15D4  
                        u4850 1218                          u6450 05C1                          u6370 053B  
                        u6290 049A                          u6530 1FAF                          u4691 13E6  
                        u4931 06A7                          u5651 17C5                          u5635 1788  
                        u5571 15D3                          u5555 15BD                          u4755 1334  
                        u4851 1217                          u4835 1200                          u6451 05C0  
                        u6371 053A                          u6291 0499                          u6275 0423  
                        u6195 01F4                          u6531 1FAE                          u6540 1D74  
                        u6620 08A8                          u4940 06B2                          u5820 12F5  
                        u5900 1103                          u5660 17CD                          u4780 1358  
                        u6380 054C                          u4685 13D5                          u6541 1D73  
                        u6621 08A7                          u6605 088B                          u4941 06B1  
                        u5821 12F4                          u5805 12D3                          u5901 1102  
                        u5661 17CC                          u4781 1357                          u4765 1340  
                        u6381 054B                          u6365 0521                          u6550 0815  
                        u6630 1183                          u5830 1EB4                          u4950 06BB  
                        u5750 1DBA                          u5590 15E5                          u4790 135D  
                        u4870 122B                          u6470 064A                          u6390 0558  
                        i1l87 1D66                          u6615 089B                          u6551 0814  
                        u6631 1182                          u5831 1EB3                          u4951 06BA  
                        u5815 12E7                          u5751 1DB9                          u5735 1DA7  
                        u5591 15E4                          u5495 1582                          u4791 135C  
                        u4775 134C                          u4871 122A                          u4855 1214  
                        u6471 0649                          u6391 0557                          u6375 0537  
                        u6560 082D                          u6640 11DE                          u5840 1EC5  
                        u4960 06C0                          u5760 12A8                          u5920 1120  
                        u5680 17DF                          u4880 1230                          u6480 0662  
                        u6561 082C                          u6641 11DD                          u5841 1EC4  
                        u4961 06BF                          u5761 12A7                          u5921 111F  
                        u5905 10FF                          u5745 1DAE                          u5681 17DE  
                        u5585 15D7                          u4881 122F                          u4865 121F  
                        u6481 065F                          u6465 05DC                          u6570 084A  
                        u5850 1EE4                          u4970 06D5                          u4890 0686  
                        u5690 17E6                          u6490 1D28                          u5851 1EE3  
                        u4971 06D4                          u4891 0685                          u5915 1112  
                        u5691 17E5                          u5675 17CF                          u6707 1FDC  
                        u6491 1D27                          u6580 085C                          u5860 1D04  
                        u5780 12BC                          u5940 1E5D                          u5861 1D03  
                        u5781 12BB                          u5941 1E5C                          u6717 10CA  
                        u4990 06E5                          u5870 10DD                          u5950 0D38  
                        u6575 0846                          u6727 118E                          u5855 1EE0  
                        u4991 06E4                          u5775 12AD                          u5871 10DC  
                        u5935 1E4B                          u5951 0D37                          u5960 0D5A  
                        u6585 0858                          u6737 1133                          u4985 06D6  
                        u5961 0D59                          u6657 07BA                          u5890 10F1  
                        u5970 0DA0                          u6595 087A                          u5795 12BE  
                        u5891 10F0                          u5971 0D9F                          u6667 07F3  
                        u5980 0DAE                          u5885 10E2                          u5981 0DAD  
                        u6677 1CDD                          u5990 0DFF                          u5991 0DFE  
                        u6687 1FBC                          u6697 1FCC                          _TRMT 04C1  
           ?_Lcd_Write_String 0076                          _cont 006E                          _main 079D  
                ___ftpack@arg 0073                  ___ftpack@exp 0076                          btemp 007E  
                        start 000C            ??_Lcd_Write_String 0020                  _sprintf$1188 00A6  
             __end_of_Lcd_Cmd 10D3             ___bmul@multiplier 002E                  ___ftmul@cntr 003D  
                ___ftmul@sign 003E                         ??_ISR 0070                  ___fttol@exp1 0055  
                ___fttol@lval 0051                         ?_main 0070               __end_of___awdiv 1367  
             __end_of___ftadd 079D               __end_of___awmod 123A               __end_of___ftdiv 08C4  
             __end_of___ftneg 1C97                         _ANSEL 0188               __end_of___lldiv 12FE  
             __end_of___ftmul 16D3               ___awdiv@divisor 0022               __end_of___llmod 1129  
             __end_of___ftsub 1D20               __end_of___fttol 1475               __end_of___lwdiv 1F6A  
             __end_of___lwmod 1F24               ___awdiv@counter 0027                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
     __size_of_Lcd_Set_Cursor 0026                         _TRISA 0085                         _TRISB 0086  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
            ADC_Config@AN_num 0075                  ___lltoft@exp 0028                 ___awtoft@sign 0028  
             __end_of_dpowers 1086               __end_of_initOsc 1296                         _scale 0A6D  
             __end_of_isdigit 1CCE                 ___ftpack@sign 0077                         _setup 1DEC  
                       pclath 000A                         status 0003                         wtemp0 007E  
             __end_of_sprintf 0667                   ?_USART_Init 0070              __end_of_Lcd_Init 2000  
       __size_of_ADC_channel1 005B         __size_of_ADC_channel2 005B              __end_of_Lcd_Port 1C79  
             __initialization 000F                  __end_of_main 07FD                        ??_main 00BF  
               ___fttol@sign1 0050            __size_of_Lcd_Clear 000D          __size_of__tdiv_to_l_ 00BD  
                      _ADCON1 009F              ___llmod@dividend 0031                        ?_scale 003F  
                      _ADRESH 001E                        _ADRESL 009E                   initOsc@IRCF 0075  
            ___awdiv@dividend 0024           _USART_Init_BaudRate 1C7F                        ?_setup 0070  
            __end_of___awtoft 1D96              __end_of___ftpack 13E9                        _ANSELH 0189  
            __end_of___lltoft 1E76                  ??_ADC_Config 0073                        i1l3391 1D56  
                      i1l3393 1D5A                        i1l3385 1D46                        i1l3395 1D5D  
                      i1l3387 1D4C                        i1l3397 1D63                        i1l3389 1D50  
                      i1l3399 1D65                  _ADC_channel1 1129                  _ADC_channel2 1184  
                      u454_20 1D4C                        u454_21 1D4B                        u455_20 1D56  
                      u455_21 1D55                        u456_20 1D63                        u456_21 1D62  
                   ??_Lcd_Cmd 0074                        _S1_val 00C5                        _S2_val 00C2  
                      _SPBRGH 009A       __size_of_Lcd_Write_Char 0016              __end_of__powers_ 1037  
                      ___bmul 1CE4                        ___ftge 1EAE                        ___wmul 1D96  
                   ??___awdiv 0026                     ??___ftadd 0055                     ??___awmod 0077  
        ?_USART_Init_BaudRate 0070                     ??___ftdiv 0045                     ??___ftneg 0076  
                   ??___lldiv 0073                     ??___ftmul 0035                     ??___llmod 0074  
                   ??___ftsub 0078                     ??___fttol 004C                     ??___lwdiv 0025  
                   ??___lwmod 0077                        _fround 08C4              ___awdiv@quotient 0029  
             ___awmod@divisor 0073               ___awmod@counter 0020            __end_of_ADC_Config 1531  
       ___ftmul@f3_as_product 003A                     ??_initOsc 0073                     ??_isdigit 0073  
                      saved_w 007E           __size_of_USART_Init 000C                     ??_sprintf 00A0  
             Lcd_Set_Cursor@a 0021               Lcd_Set_Cursor@b 0077       __end_of__initialization 001E  
                  ___ftadd@f1 004F                    ___ftadd@f2 0052                    ___ftge@ff1 0020  
                  ___ftge@ff2 0023             __end_of_Lcd_Clear 1CBC                    ___ftdiv@f1 0042  
                  ___ftdiv@f2 003F                    ___ftdiv@f3 004A                    ___ftneg@f1 0073  
                  ___awtoft@c 0023           ___bmul@multiplicand 002B                    ___ftmul@f1 002F  
                  ___ftmul@f2 0032                    ___ftsub@f1 005F                    ___ftsub@f2 005C  
                  ___fttol@f1 0048                __pcstackCOMMON 0070         ??_USART_Init_BaudRate 0073  
                  ___lltoft@c 0023                 __end_of_scale 0D28                 __end_of_setup 1E17  
              _Lcd_Set_Cursor 1D20                    __div_to_l_ 16D3                     ?_Lcd_Init 0070  
                   ?_Lcd_Port 0070               __div_to_l_@exp1 0033               __div_to_l_@cntr 0032  
                     ??_scale 0042               __div_to_l_@quot 002E                  sprintf@width 00AC  
                     ??_setup 0076                  Write_USART@a 0073                    __pbssBANK0 006E  
                  __pbssBANK1 00C2                    _data_total 00CE                 __div_to_l_@f1 0020  
               __div_to_l_@f2 0023                    __pmaintext 079D                       ?___bmul 002B  
                     ?___ftge 0020                       ?___wmul 0073                 ??_Write_USART 0073  
                  __pintentry 0004                       ?_fround 003F     __size_of_Lcd_Write_String 0046  
                   ?___awtoft 0023                     ?___ftpack 0073        __end_of_Lcd_Set_Cursor 1D46  
                   ?___lltoft 0023        __size_of_ADC_to_string 0038    __end_of_Write_USART_String 1DEC  
                  ??_Lcd_Init 0020                    ??_Lcd_Port 0073      __size_of_USART_INTERRUPT 0006  
                  __stringtab 1000                _Lcd_Write_Char 1CCE                       _Lcd_Cmd 10B9  
                ??_USART_Init 0073             __end_of__npowers_ 105E                    _scale$1187 0044  
             __size_of___bmul 0017                 ?_Show_val_LCD 0070               __size_of___ftge 003A  
                     ___awdiv 12FE                       ___ftadd 0667                       ___awmod 11DF  
                     ___ftdiv 0802                       ___ftneg 1C8D                       ___lldiv 1296  
             __size_of___wmul 002B                       ___ftmul 15EE                       ___llmod 10D3  
                     ___ftsub 1CFB                       ___fttol 13E9                       ___lwdiv 1F24  
                     ___lwmod 1EE8                    ??___awtoft 0026                    ??___ftpack 0020  
             __size_of_fround 01A9               ?_Lcd_Set_Cursor 0077                    ??___lltoft 0027  
                     __ptext1 1DEC                       __ptext2 123A                       __ptext3 1C7F  
                     __ptext4 1CA3                       __ptext5 1C79                       __ptext6 1DC1  
                     __ptext7 1C97                       __ptext8 1E17                       __ptext9 1F6A  
                __size_of_ISR 0027                   ?__div_to_l_ 0020                       _dpowers 105E  
                     _initOsc 123A           __end_of_Write_USART 1CA3                       _isdigit 1CBC  
            ___awmod@dividend 0075            __end_of_USART_Init 1CAF                       _sprintf 0D28  
                     clrloop0 1C86        __end_of_Lcd_Write_Char 1CE4          end_of_initialization 001E  
               _ADC_to_string 1E76               ___lldiv@divisor 0020               ___lldiv@counter 002C  
              ??_Show_val_LCD 0025                     _RCSTAbits 0018                       psplit$0 1C003A  
                   Lcd_Port@a 0073                __tdiv_to_l_@f1 0020                __tdiv_to_l_@f2 0023  
               ??__tdiv_to_l_ 0073                     _PORTEbits 0009                     _TRISCbits 0087  
             ?_Lcd_Write_Char 0070             Lcd_Write_String@a 0076             Lcd_Write_String@i 0023  
              ?_ADC_to_string 0070                   ___ftdiv@exp 004D                     _TXSTAbits 0098  
           ??_USART_INTERRUPT 0073           __size_of__div_to_l_ 012D                   ___ftmul@exp 0039  
                   _Lcd_Clear 1CAF                __end_of___bmul 1CFB                __end_of___ftge 1EE8  
                 _Write_USART 1C97                __end_of___wmul 1DC1              _Lcd_Write_String 1F6A  
              __end_of_fround 0A6D           start_initialization 000F                   __end_of_ISR 1D6D  
         __end_of__tdiv_to_l_ 15EE             __size_of_Lcd_Init 0050             __size_of_Lcd_Port 0006  
             ___llmod@divisor 002D   __end_of_USART_Init_BaudRate 1C85               ___llmod@counter 0075  
                  ?_Lcd_Clear 0070                      ??___bmul 002C                      ??___ftge 0073  
                    ??___wmul 0077               Lcd_Write_Char@a 0075                      ??_fround 0042  
               sprintf@tmpval 00AE                    fround@prec 004E             __size_of___awtoft 0029  
           __size_of___ftpack 0082             __size_of___lltoft 0033                   __pbssCOMMON 0078  
                   ___latbits 0002                 __pcstackBANK0 0020                 __pcstackBANK1 00A0  
        __end_of_Show_val_LCD 1E43                   _data_recive 007A               ??_ADC_to_string 006B  
                    ?_Lcd_Cmd 0070                   sprintf@flag 00AA                   sprintf@eexp 00B6  
                 sprintf@fval 00B8            _Write_USART_String 1DC1                   sprintf@prec 00BC  
            ___lwdiv@dividend 0023              ??_Lcd_Set_Cursor 0020           ?_Write_USART_String 0074  
                    ?___awdiv 0022                      ?___ftadd 004F                      ?___awmod 0073  
                    ?___ftdiv 003F                      ?___ftneg 0073                      ?___lldiv 0020  
                    ?___ftmul 002F                      ?___llmod 002D                      ?___ftsub 005C  
                   __npowers_ 1037                      ?___fttol 0048                      ?___lwdiv 0021  
                    ?___lwmod 0073                     __pstrings 1000                   __tdiv_to_l_ 1531  
                ??__div_to_l_ 0026                      ?_initOsc 0070                      ?_isdigit 0070  
        ??_Write_USART_String 0076              ___lwdiv@quotient 0027                    pnum$text17 001C  
                    ?_sprintf 0062                __size_of_scale 02BB                __size_of_setup 002B  
               ?_ADC_channel1 0070                 ?_ADC_channel2 0070             interrupt_function 0004  
              ___wmul@product 0020                     clear_ram0 1C85                      _PIE1bits 008C  
                    Lcd_Cmd@a 0076                      _PIR1bits 000C            __end_of__div_to_l_ 1800  
                 ??_Lcd_Clear 0077                      _VAL_SWAP 00CC                    _ADCON0bits 001F  
                 __stringbase 100F             ___wmul@multiplier 0073              ??_Lcd_Write_Char 0074  
             _USART_INTERRUPT 1C79                      _Lcd_Init 1FB0                      _Lcd_Port 1C73  
              ??_ADC_channel1 004F                ??_ADC_channel2 004F                    _ADC_Config 1475  
    __end_of_Lcd_Write_String 1FB0              __size_of_Lcd_Cmd 001A                  ?_Write_USART 0070  
            __size_of___awdiv 0069              __size_of___ftadd 0136              __size_of___awmod 005B  
            __size_of___ftdiv 00C2              __size_of___ftneg 000A              __size_of___lldiv 0068  
            __size_of___ftmul 00E5              __size_of___llmod 0056              __size_of___ftsub 0025  
            __size_of___fttol 008C              __size_of___lwdiv 0046              __size_of___lwmod 003C  
                    ___awtoft 1D6D                      ___ftpack 1367                   _fround$1185 004B  
                 _fround$1186 0048            __end_of__stringtab 1010                      ___lltoft 1E43  
                 _isdigit$978 0073         __size_of_Show_val_LCD 002C                    sprintf@val 00B2  
            __size_of_initOsc 005C              __size_of_isdigit 0012               ___lwdiv@divisor 0021  
             ___lwdiv@counter 0026                      __ptext10 1CCE                      __ptext11 1D20  
                    __ptext20 12FE                      __ptext12 1CAF                      __ptext21 1CBC  
                    __ptext13 1FB0                      __ptext30 10D3                      __ptext22 08C4  
                    __ptext14 10B9                      __ptext31 1296                      __ptext23 1EE8  
                    __ptext15 1C73                      __ptext40 0802                      __ptext32 13E9  
                    __ptext24 1F24                      __ptext16 1E76                      __ptext41 1D6D  
                    __ptext33 1CFB                      __ptext25 1CE4                      __ptext17 0D28  
                    __ptext42 1367                      __ptext34 0667                      __ptext26 1531  
                    __ptext18 0A6D                      __ptext43 1475                      __ptext35 1C8D  
                    __ptext27 16D3                      __ptext19 11DF                      __ptext44 1D46  
                    __ptext36 1EAE                      __ptext28 1D96                      __ptext37 1184  
                    __ptext29 1E43                      __ptext38 1129                      __ptext39 15EE  
                    __powers_ 1010              __size_of_sprintf F93F                 __size_of_main 0060  
                _Show_val_LCD 1E17       __end_of_USART_INTERRUPT 1C7F            pnum$text17_split_1 003A  
                  _INTCONbits 000B           Write_USART_String@a 0074           Write_USART_String@i 0077  
                 _VAL_NIBBLE1 00CA                   _VAL_NIBBLE2 00C8                      isdigit@c 0074  
                    scale@scl 0047                      intlevel1 0000                     sprintf@ap 00A9  
            __tdiv_to_l_@exp1 002B              __tdiv_to_l_@cntr 002A                     sprintf@sp 00BB  
                 ?_ADC_Config 0070              __tdiv_to_l_@quot 0026              ___lwmod@dividend 0075  
            ___lldiv@dividend 0024                     stringcode 100A                    _OSCCONbits 008F  
__size_of_USART_Init_BaudRate 0006          __end_of_ADC_channel1 1184          __end_of_ADC_channel2 11DF  
          Lcd_Set_Cursor@temp 0022                  ?__tdiv_to_l_ 0020                      sprintf@c 00BE  
                    sprintf@f 0062              ___lldiv@quotient 0028               ___lwmod@divisor 0073  
             ___lwmod@counter 0020                      stringdir 100A                      stringtab 1000  
       __end_of_ADC_to_string 1EAE                    _USART_Init 1CA3  
