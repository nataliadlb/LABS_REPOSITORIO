

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 13:28:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0088                     	;# 
   408  0089                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  008F                     	;# 
   413  0090                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0094                     	;# 
   420  0095                     	;# 
   421  0096                     	;# 
   422  0097                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  009F                     	;# 
   431  0105                     	;# 
   432  0107                     	;# 
   433  0108                     	;# 
   434  0109                     	;# 
   435  010C                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  010F                     	;# 
   440  0185                     	;# 
   441  0187                     	;# 
   442  0188                     	;# 
   443  0189                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  001F                     _ADCON0bits	set	31
   447  001E                     _ADRESH	set	30
   448  0009                     _PORTEbits	set	9
   449  000C                     _PIR1bits	set	12
   450  000B                     _INTCON	set	11
   451  0009                     _PORTE	set	9
   452  0008                     _PORTD	set	8
   453  0007                     _PORTC	set	7
   454  0006                     _PORTB	set	6
   455  0005                     _PORTA	set	5
   456  009F                     _ADCON1	set	159
   457  009E                     _ADRESL	set	158
   458  008F                     _OSCCONbits	set	143
   459  008C                     _PIE1bits	set	140
   460  0089                     _TRISE	set	137
   461  0088                     _TRISD	set	136
   462  0087                     _TRISC	set	135
   463  0086                     _TRISB	set	134
   464  0085                     _TRISA	set	133
   465  0189                     _ANSELH	set	393
   466  0188                     _ANSEL	set	392
   467                           
   468                           	psect	strings
   469  0003                     __pstrings:
   470  0003                     stringtab:
   471  0003                     __stringtab:
   472  0003                     stringcode:	
   473                           ;	String table - string pointers are 1 byte each
   474                           
   475  0003                     stringdir:
   476  0003  3000               	movlw	high stringdir
   477  0004  008A               	movwf	10
   478  0005  0804               	movf	4,w
   479  0006  0A84               	incf	4,f
   480  0007  0782               	addwf	2,f
   481  0008                     __stringbase:
   482  0008  3400               	retlw	0
   483  0009                     __end_of__stringtab:
   484  0009                     STR_1:
   485  0009  3453               	retlw	83	;'S'
   486  000A  3431               	retlw	49	;'1'
   487  000B  343A               	retlw	58	;':'
   488  000C  3400               	retlw	0
   489  000D                     STR_2:
   490  000D  3453               	retlw	83	;'S'
   491  000E  3432               	retlw	50	;'2'
   492  000F  343A               	retlw	58	;':'
   493  0010  3400               	retlw	0
   494  0011                     STR_3:
   495  0011  3453               	retlw	83	;'S'
   496  0012  3433               	retlw	51	;'3'
   497  0013  343A               	retlw	58	;':'
   498  0014  3400               	retlw	0
   499                           
   500                           	psect	cinit
   501  07EA                     start_initialization:	
   502                           ; #config settings
   503                           
   504  07EA                     __initialization:
   505                           
   506                           ; Clear objects allocated to COMMON
   507  07EA  01F9               	clrf	__pbssCOMMON& (0+127)
   508  07EB  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   509  07EC  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   510  07ED  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   511                           
   512                           ; Clear objects allocated to BANK0
   513  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   514  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   515  07F0  01A0               	clrf	__pbssBANK0& (0+127)
   516  07F1  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   517  07F2  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   518  07F3  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   519  07F4  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   520  07F5  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   521  07F6  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   522  07F7  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   523  07F8  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   524  07F9  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   525  07FA  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   526  07FB  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   527  07FC                     end_of_initialization:	
   528                           ;End of C runtime variable initialization code
   529                           
   530  07FC                     __end_of__initialization:
   531  07FC  0183               	clrf	3
   532  07FD  120A  118A  2F00   	ljmp	_main	;jump to C main() function
   533                           
   534                           	psect	bssCOMMON
   535  0079                     __pbssCOMMON:
   536  0079                     _ADC_VALOR_1:
   537  0079                     	ds	2
   538  007B                     _S3_cont:
   539  007B                     	ds	1
   540  007C                     _a:
   541  007C                     	ds	1
   542                           
   543                           	psect	bssBANK0
   544  0020                     __pbssBANK0:
   545  0020                     _VAL_NIBBLE2:
   546  0020                     	ds	2
   547  0022                     _VAL_NIBBLE1:
   548  0022                     	ds	2
   549  0024                     _VAL_SWAP:
   550  0024                     	ds	2
   551  0026                     _VAL:
   552  0026                     	ds	2
   553  0028                     _x:
   554  0028                     	ds	2
   555  002A                     _ADC_VALOR_2:
   556  002A                     	ds	2
   557                           
   558                           	psect	cstackCOMMON
   559  0070                     __pcstackCOMMON:
   560  0070                     ?_setup:
   561  0070                     ?_Lcd_Init:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_Lcd_Clear:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_Lcd_Write_String:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_initOsc:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ??_initOsc:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_Lcd_Port:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ??_Lcd_Port:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_Lcd_Cmd:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_main:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_Lcd_Write_Char:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     Lcd_Port@a:	
   592                           ; 1 bytes @ 0x0
   593                           
   594                           
   595                           ; 1 bytes @ 0x0
   596  0070                     	ds	1
   597  0071                     ??_Lcd_Cmd:
   598  0071                     ??_Lcd_Write_Char:	
   599                           ; 1 bytes @ 0x1
   600                           
   601                           
   602                           ; 1 bytes @ 0x1
   603  0071                     	ds	1
   604  0072                     initOsc@IRCF:
   605  0072                     Lcd_Write_Char@a:	
   606                           ; 1 bytes @ 0x2
   607                           
   608                           
   609                           ; 1 bytes @ 0x2
   610  0072                     	ds	1
   611  0073                     ??_setup:
   612  0073                     ??_Lcd_Write_String:	
   613                           ; 1 bytes @ 0x3
   614                           
   615  0073                     Lcd_Cmd@a:	
   616                           ; 1 bytes @ 0x3
   617                           
   618  0073                     Lcd_Write_String@i:	
   619                           ; 1 bytes @ 0x3
   620                           
   621                           
   622                           ; 2 bytes @ 0x3
   623  0073                     	ds	1
   624  0074                     ??_Lcd_Init:
   625  0074                     ??_Lcd_Clear:	
   626                           ; 1 bytes @ 0x4
   627                           
   628  0074                     ?_Lcd_Set_Cursor:	
   629                           ; 1 bytes @ 0x4
   630                           
   631  0074                     Lcd_Set_Cursor@b:	
   632                           ; 1 bytes @ 0x4
   633                           
   634                           
   635                           ; 1 bytes @ 0x4
   636  0074                     	ds	1
   637  0075                     ??_Lcd_Set_Cursor:
   638  0075                     Lcd_Write_String@a:	
   639                           ; 1 bytes @ 0x5
   640                           
   641                           
   642                           ; 1 bytes @ 0x5
   643  0075                     	ds	1
   644  0076                     Lcd_Set_Cursor@a:
   645                           
   646                           ; 1 bytes @ 0x6
   647  0076                     	ds	1
   648  0077                     Lcd_Set_Cursor@temp:
   649                           
   650                           ; 1 bytes @ 0x7
   651  0077                     	ds	1
   652  0078                     ??_main:
   653                           
   654                           ; 1 bytes @ 0x8
   655  0078                     	ds	1
   656                           
   657                           	psect	maintext
   658  0700                     __pmaintext:	
   659 ;;
   660 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   661 ;;
   662 ;; *************** function _main *****************
   663 ;; Defined at:
   664 ;;		line 109 in file "pseudocodigo_lab3.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : B00/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0
   680 ;;      Temps:          1       0       0       0       0
   681 ;;      Totals:         1       0       0       0       0
   682 ;;Total ram usage:        1 bytes
   683 ;; Hardware stack levels required when called:    3
   684 ;; This function calls:
   685 ;;		_Lcd_Clear
   686 ;;		_Lcd_Init
   687 ;;		_Lcd_Set_Cursor
   688 ;;		_Lcd_Write_String
   689 ;;		_setup
   690 ;; This function is called by:
   691 ;;		Startup code after reset
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _main
   697  0700                     _main:
   698  0700                     l955:	
   699                           ;incstack = 0
   700                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   701                           
   702                           
   703                           ;pseudocodigo_lab3.c: 110:     setup();
   704  0700  120A  118A  269C  120A  118A  	fcall	_setup
   705  0705                     l957:
   706                           
   707                           ;pseudocodigo_lab3.c: 112:     Lcd_Init();
   708  0705  120A  118A  2743  120A  118A  	fcall	_Lcd_Init
   709  070A                     l959:
   710                           
   711                           ;pseudocodigo_lab3.c: 123:         Lcd_Clear();
   712  070A  120A  118A  265F  120A  118A  	fcall	_Lcd_Clear
   713  070F                     l961:
   714                           
   715                           ;pseudocodigo_lab3.c: 124:         Lcd_Set_Cursor(1,2);
   716  070F  3002               	movlw	2
   717  0710  00F8               	movwf	??_main
   718  0711  0878               	movf	??_main,w
   719  0712  00F4               	movwf	Lcd_Set_Cursor@b
   720  0713  3001               	movlw	1
   721  0714  120A  118A  26B7  120A  118A  	fcall	_Lcd_Set_Cursor
   722  0719                     l963:
   723                           
   724                           ;pseudocodigo_lab3.c: 125:         Lcd_Write_String("S1:");
   725  0719  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   726  071A  120A  118A  26DB  120A  118A  	fcall	_Lcd_Write_String
   727                           
   728                           ;pseudocodigo_lab3.c: 126:         Lcd_Set_Cursor(1,8);
   729  071F  3008               	movlw	8
   730  0720  00F8               	movwf	??_main
   731  0721  0878               	movf	??_main,w
   732  0722  00F4               	movwf	Lcd_Set_Cursor@b
   733  0723  3001               	movlw	1
   734  0724  120A  118A  26B7  120A  118A  	fcall	_Lcd_Set_Cursor
   735  0729                     l965:
   736                           
   737                           ;pseudocodigo_lab3.c: 127:         Lcd_Write_String("S2:");
   738  0729  3005               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   739  072A  120A  118A  26DB  120A  118A  	fcall	_Lcd_Write_String
   740  072F                     l967:
   741                           
   742                           ;pseudocodigo_lab3.c: 128:         Lcd_Set_Cursor(1,13);
   743  072F  300D               	movlw	13
   744  0730  00F8               	movwf	??_main
   745  0731  0878               	movf	??_main,w
   746  0732  00F4               	movwf	Lcd_Set_Cursor@b
   747  0733  3001               	movlw	1
   748  0734  120A  118A  26B7  120A  118A  	fcall	_Lcd_Set_Cursor
   749                           
   750                           ;pseudocodigo_lab3.c: 129:         Lcd_Write_String("S3:");
   751  0739  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   752  073A  120A  118A  26DB  120A  118A  	fcall	_Lcd_Write_String
   753  073F  2F0A               	goto	l959
   754  0740  120A  118A  2800   	ljmp	start
   755  0743                     __end_of_main:
   756                           
   757                           	psect	text1
   758  069C                     __ptext1:	
   759 ;; *************** function _setup *****************
   760 ;; Defined at:
   761 ;;		line 161 in file "pseudocodigo_lab3.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   775 ;;      Params:         0       0       0       0       0
   776 ;;      Locals:         0       0       0       0       0
   777 ;;      Temps:          0       0       0       0       0
   778 ;;      Totals:         0       0       0       0       0
   779 ;;Total ram usage:        0 bytes
   780 ;; Hardware stack levels used:    1
   781 ;; Hardware stack levels required when called:    1
   782 ;; This function calls:
   783 ;;		_initOsc
   784 ;; This function is called by:
   785 ;;		_main
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           
   790                           ;psect for function _setup
   791  069C                     _setup:
   792  069C                     l799:	
   793                           ;incstack = 0
   794                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   795                           
   796                           
   797                           ;pseudocodigo_lab3.c: 162:     initOsc(0b00000111);
   798  069C  3007               	movlw	7
   799  069D  120A  118A  278E  120A  118A  	fcall	_initOsc
   800  06A2                     l801:
   801                           
   802                           ;pseudocodigo_lab3.c: 163:     ANSEL = 0b00000011;
   803  06A2  3003               	movlw	3
   804  06A3  1683               	bsf	3,5	;RP0=1, select bank3
   805  06A4  1703               	bsf	3,6	;RP1=1, select bank3
   806  06A5  0088               	movwf	8	;volatile
   807  06A6                     l803:
   808                           
   809                           ;pseudocodigo_lab3.c: 164:     ANSELH = 0;
   810  06A6  0189               	clrf	9	;volatile
   811  06A7                     l805:
   812                           
   813                           ;pseudocodigo_lab3.c: 165:     TRISA = 0b00000011;
   814  06A7  3003               	movlw	3
   815  06A8  1683               	bsf	3,5	;RP0=1, select bank1
   816  06A9  1303               	bcf	3,6	;RP1=0, select bank1
   817  06AA  0085               	movwf	5	;volatile
   818  06AB                     l807:
   819                           
   820                           ;pseudocodigo_lab3.c: 166:     TRISB = 0;
   821  06AB  0186               	clrf	6	;volatile
   822  06AC                     l809:
   823                           
   824                           ;pseudocodigo_lab3.c: 167:     TRISC = 0;
   825  06AC  0187               	clrf	7	;volatile
   826  06AD                     l811:
   827                           
   828                           ;pseudocodigo_lab3.c: 168:     TRISD = 0;
   829  06AD  0188               	clrf	8	;volatile
   830  06AE                     l813:
   831                           
   832                           ;pseudocodigo_lab3.c: 169:     TRISE = 0;
   833  06AE  0189               	clrf	9	;volatile
   834  06AF                     l815:
   835                           
   836                           ;pseudocodigo_lab3.c: 170:     PORTA = 0;
   837  06AF  1283               	bcf	3,5	;RP0=0, select bank0
   838  06B0  1303               	bcf	3,6	;RP1=0, select bank0
   839  06B1  0185               	clrf	5	;volatile
   840  06B2                     l817:
   841                           
   842                           ;pseudocodigo_lab3.c: 171:     PORTB = 0;
   843  06B2  0186               	clrf	6	;volatile
   844  06B3                     l819:
   845                           
   846                           ;pseudocodigo_lab3.c: 172:     PORTC = 0;
   847  06B3  0187               	clrf	7	;volatile
   848  06B4                     l821:
   849                           
   850                           ;pseudocodigo_lab3.c: 173:     PORTD = 0;
   851  06B4  0188               	clrf	8	;volatile
   852  06B5                     l823:
   853                           
   854                           ;pseudocodigo_lab3.c: 174:     PORTE = 0;
   855  06B5  0189               	clrf	9	;volatile
   856  06B6                     l63:
   857  06B6  0008               	return
   858  06B7                     __end_of_setup:
   859                           
   860                           	psect	text2
   861  078E                     __ptext2:	
   862 ;; *************** function _initOsc *****************
   863 ;; Defined at:
   864 ;;		line 3 in file "Oscilador.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  IRCF            1    wreg     unsigned char 
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  IRCF            1    2[COMMON] unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       0       0       0       0
   879 ;;      Locals:         1       0       0       0       0
   880 ;;      Temps:          2       0       0       0       0
   881 ;;      Totals:         3       0       0       0       0
   882 ;;Total ram usage:        3 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_setup
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           
   892                           ;psect for function _initOsc
   893  078E                     _initOsc:
   894                           
   895                           ;incstack = 0
   896                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   897                           ;initOsc@IRCF stored from wreg
   898  078E  00F2               	movwf	initOsc@IRCF
   899  078F                     l769:
   900                           
   901                           ;Oscilador.c: 5:     switch(IRCF){
   902  078F  2FC6               	goto	l773
   903  0790                     l72:	
   904                           ;Oscilador.c: 6:         case 0:
   905                           
   906                           
   907                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   908  0790  1683               	bsf	3,5	;RP0=1, select bank1
   909  0791  1303               	bcf	3,6	;RP1=0, select bank1
   910  0792  130F               	bcf	15,6	;volatile
   911                           
   912                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   913  0793  128F               	bcf	15,5	;volatile
   914                           
   915                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   916  0794  120F               	bcf	15,4	;volatile
   917                           
   918                           ;Oscilador.c: 10:             break;
   919  0795  2FE8               	goto	l73
   920  0796                     l74:	
   921                           ;Oscilador.c: 11:          case 1:
   922                           
   923                           
   924                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   925  0796  1683               	bsf	3,5	;RP0=1, select bank1
   926  0797  1303               	bcf	3,6	;RP1=0, select bank1
   927  0798  130F               	bcf	15,6	;volatile
   928                           
   929                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   930  0799  128F               	bcf	15,5	;volatile
   931                           
   932                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   933  079A  160F               	bsf	15,4	;volatile
   934                           
   935                           ;Oscilador.c: 15:             break;
   936  079B  2FE8               	goto	l73
   937  079C                     l75:	
   938                           ;Oscilador.c: 16:         case 2:
   939                           
   940                           
   941                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   942  079C  1683               	bsf	3,5	;RP0=1, select bank1
   943  079D  1303               	bcf	3,6	;RP1=0, select bank1
   944  079E  130F               	bcf	15,6	;volatile
   945                           
   946                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   947  079F  168F               	bsf	15,5	;volatile
   948                           
   949                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   950  07A0  120F               	bcf	15,4	;volatile
   951                           
   952                           ;Oscilador.c: 20:             break;
   953  07A1  2FE8               	goto	l73
   954  07A2                     l76:	
   955                           ;Oscilador.c: 21:         case 3:
   956                           
   957                           
   958                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   959  07A2  1683               	bsf	3,5	;RP0=1, select bank1
   960  07A3  1303               	bcf	3,6	;RP1=0, select bank1
   961  07A4  130F               	bcf	15,6	;volatile
   962                           
   963                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   964  07A5  168F               	bsf	15,5	;volatile
   965                           
   966                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   967  07A6  160F               	bsf	15,4	;volatile
   968                           
   969                           ;Oscilador.c: 25:             break;
   970  07A7  2FE8               	goto	l73
   971  07A8                     l77:	
   972                           ;Oscilador.c: 26:         case 4:
   973                           
   974                           
   975                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   976  07A8  1683               	bsf	3,5	;RP0=1, select bank1
   977  07A9  1303               	bcf	3,6	;RP1=0, select bank1
   978  07AA  170F               	bsf	15,6	;volatile
   979                           
   980                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   981  07AB  128F               	bcf	15,5	;volatile
   982                           
   983                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   984  07AC  120F               	bcf	15,4	;volatile
   985                           
   986                           ;Oscilador.c: 30:             break;
   987  07AD  2FE8               	goto	l73
   988  07AE                     l78:	
   989                           ;Oscilador.c: 31:         case 5:
   990                           
   991                           
   992                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   993  07AE  1683               	bsf	3,5	;RP0=1, select bank1
   994  07AF  1303               	bcf	3,6	;RP1=0, select bank1
   995  07B0  170F               	bsf	15,6	;volatile
   996                           
   997                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
   998  07B1  128F               	bcf	15,5	;volatile
   999                           
  1000                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1001  07B2  160F               	bsf	15,4	;volatile
  1002                           
  1003                           ;Oscilador.c: 35:             break;
  1004  07B3  2FE8               	goto	l73
  1005  07B4                     l79:	
  1006                           ;Oscilador.c: 36:         case 6:
  1007                           
  1008                           
  1009                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1010  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  1011  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  1012  07B6  170F               	bsf	15,6	;volatile
  1013                           
  1014                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1015  07B7  168F               	bsf	15,5	;volatile
  1016                           
  1017                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1018  07B8  120F               	bcf	15,4	;volatile
  1019                           
  1020                           ;Oscilador.c: 40:             break;
  1021  07B9  2FE8               	goto	l73
  1022  07BA                     l80:	
  1023                           ;Oscilador.c: 41:         case 7:
  1024                           
  1025                           
  1026                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1027  07BA  1683               	bsf	3,5	;RP0=1, select bank1
  1028  07BB  1303               	bcf	3,6	;RP1=0, select bank1
  1029  07BC  170F               	bsf	15,6	;volatile
  1030                           
  1031                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1032  07BD  168F               	bsf	15,5	;volatile
  1033                           
  1034                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1035  07BE  160F               	bsf	15,4	;volatile
  1036                           
  1037                           ;Oscilador.c: 45:             break;
  1038  07BF  2FE8               	goto	l73
  1039  07C0                     l81:	
  1040                           ;Oscilador.c: 46:         default:
  1041                           
  1042                           
  1043                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1044  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  1045  07C1  1303               	bcf	3,6	;RP1=0, select bank1
  1046  07C2  170F               	bsf	15,6	;volatile
  1047                           
  1048                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1049  07C3  168F               	bsf	15,5	;volatile
  1050                           
  1051                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1052  07C4  120F               	bcf	15,4	;volatile
  1053                           
  1054                           ;Oscilador.c: 50:             break;
  1055  07C5  2FE8               	goto	l73
  1056  07C6                     l773:
  1057  07C6  0872               	movf	initOsc@IRCF,w
  1058  07C7  00F0               	movwf	??_initOsc
  1059  07C8  01F1               	clrf	??_initOsc+1
  1060                           
  1061                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1062                           ; Switch size 1, requested type "simple"
  1063                           ; Number of cases is 1, Range of values is 0 to 0
  1064                           ; switch strategies available:
  1065                           ; Name         Instructions Cycles
  1066                           ; simple_byte            4     3 (average)
  1067                           ; direct_byte           11     8 (fixed)
  1068                           ; jumptable            260     6 (fixed)
  1069                           ;	Chosen strategy is simple_byte
  1070  07C9  0871               	movf	??_initOsc+1,w
  1071  07CA  3A00               	xorlw	0	; case 0
  1072  07CB  1903               	skipnz
  1073  07CC  2FCE               	goto	l1005
  1074  07CD  2FC0               	goto	l81
  1075  07CE                     l1005:
  1076                           
  1077                           ; Switch size 1, requested type "simple"
  1078                           ; Number of cases is 8, Range of values is 0 to 7
  1079                           ; switch strategies available:
  1080                           ; Name         Instructions Cycles
  1081                           ; simple_byte           25    13 (average)
  1082                           ; direct_byte           32     8 (fixed)
  1083                           ; jumptable            260     6 (fixed)
  1084                           ;	Chosen strategy is simple_byte
  1085  07CE  0870               	movf	??_initOsc,w
  1086  07CF  3A00               	xorlw	0	; case 0
  1087  07D0  1903               	skipnz
  1088  07D1  2F90               	goto	l72
  1089  07D2  3A01               	xorlw	1	; case 1
  1090  07D3  1903               	skipnz
  1091  07D4  2F96               	goto	l74
  1092  07D5  3A03               	xorlw	3	; case 2
  1093  07D6  1903               	skipnz
  1094  07D7  2F9C               	goto	l75
  1095  07D8  3A01               	xorlw	1	; case 3
  1096  07D9  1903               	skipnz
  1097  07DA  2FA2               	goto	l76
  1098  07DB  3A07               	xorlw	7	; case 4
  1099  07DC  1903               	skipnz
  1100  07DD  2FA8               	goto	l77
  1101  07DE  3A01               	xorlw	1	; case 5
  1102  07DF  1903               	skipnz
  1103  07E0  2FAE               	goto	l78
  1104  07E1  3A03               	xorlw	3	; case 6
  1105  07E2  1903               	skipnz
  1106  07E3  2FB4               	goto	l79
  1107  07E4  3A01               	xorlw	1	; case 7
  1108  07E5  1903               	skipnz
  1109  07E6  2FBA               	goto	l80
  1110  07E7  2FC0               	goto	l81
  1111  07E8                     l73:
  1112                           
  1113                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1114  07E8  140F               	bsf	15,0	;volatile
  1115  07E9                     l82:
  1116  07E9  0008               	return
  1117  07EA                     __end_of_initOsc:
  1118                           
  1119                           	psect	text3
  1120  06DB                     __ptext3:	
  1121 ;; *************** function _Lcd_Write_String *****************
  1122 ;; Defined at:
  1123 ;;		line 123 in file "LCD.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;  a               1    wreg     PTR unsigned char 
  1126 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  a               1    5[COMMON] PTR unsigned char 
  1129 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1130 ;;  i               2    3[COMMON] int 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         0       0       0       0       0
  1141 ;;      Locals:         3       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0
  1143 ;;      Totals:         3       0       0       0       0
  1144 ;;Total ram usage:        3 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    2
  1147 ;; This function calls:
  1148 ;;		_Lcd_Write_Char
  1149 ;; This function is called by:
  1150 ;;		_main
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           
  1155                           ;psect for function _Lcd_Write_String
  1156  06DB                     _Lcd_Write_String:
  1157                           
  1158                           ;incstack = 0
  1159                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1160                           ;Lcd_Write_String@a stored from wreg
  1161  06DB  00F5               	movwf	Lcd_Write_String@a
  1162  06DC                     l947:
  1163                           
  1164                           ;LCD.c: 124:  int i;;LCD.c: 125:  for(i=0;a[i]!='\0';i++)
  1165  06DC  01F3               	clrf	Lcd_Write_String@i
  1166  06DD  01F4               	clrf	Lcd_Write_String@i+1
  1167  06DE  2EF2               	goto	l953
  1168  06DF                     l949:
  1169                           
  1170                           ;LCD.c: 126:     Lcd_Write_Char(a[i]);
  1171  06DF  0873               	movf	Lcd_Write_String@i,w
  1172  06E0  0775               	addwf	Lcd_Write_String@a,w
  1173  06E1  0084               	movwf	4
  1174  06E2  120A  118A  2003  120A  118A  	fcall	stringdir
  1175  06E7  120A  118A  266C  120A  118A  	fcall	_Lcd_Write_Char
  1176  06EC                     l951:
  1177  06EC  3001               	movlw	1
  1178  06ED  07F3               	addwf	Lcd_Write_String@i,f
  1179  06EE  1803               	skipnc
  1180  06EF  0AF4               	incf	Lcd_Write_String@i+1,f
  1181  06F0  3000               	movlw	0
  1182  06F1  07F4               	addwf	Lcd_Write_String@i+1,f
  1183  06F2                     l953:
  1184  06F2  0873               	movf	Lcd_Write_String@i,w
  1185  06F3  0775               	addwf	Lcd_Write_String@a,w
  1186  06F4  0084               	movwf	4
  1187  06F5  120A  118A  2003  120A  118A  	fcall	stringdir
  1188  06FA  3A00               	xorlw	0
  1189  06FB  1D03               	skipz
  1190  06FC  2EFE               	goto	u71
  1191  06FD  2EFF               	goto	u70
  1192  06FE                     u71:
  1193  06FE  2EDF               	goto	l949
  1194  06FF                     u70:
  1195  06FF                     l119:
  1196  06FF  0008               	return
  1197  0700                     __end_of_Lcd_Write_String:
  1198                           
  1199                           	psect	text4
  1200  066C                     __ptext4:	
  1201 ;; *************** function _Lcd_Write_Char *****************
  1202 ;; Defined at:
  1203 ;;		line 107 in file "LCD.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;  a               1    wreg     unsigned char 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  a               1    2[COMMON] unsigned char 
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0, pclath, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1217 ;;      Params:         0       0       0       0       0
  1218 ;;      Locals:         1       0       0       0       0
  1219 ;;      Temps:          1       0       0       0       0
  1220 ;;      Totals:         2       0       0       0       0
  1221 ;;Total ram usage:        2 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    1
  1224 ;; This function calls:
  1225 ;;		_Lcd_Port
  1226 ;; This function is called by:
  1227 ;;		_Lcd_Write_String
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           
  1232                           ;psect for function _Lcd_Write_Char
  1233  066C                     _Lcd_Write_Char:
  1234                           
  1235                           ;incstack = 0
  1236                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1237                           ;Lcd_Write_Char@a stored from wreg
  1238  066C  00F2               	movwf	Lcd_Write_Char@a
  1239  066D                     l789:
  1240                           
  1241                           ;LCD.c: 111:    PORTEbits.RE0 = 1;
  1242  066D  1283               	bcf	3,5	;RP0=0, select bank0
  1243  066E  1303               	bcf	3,6	;RP1=0, select bank0
  1244  066F  1409               	bsf	9,0	;volatile
  1245  0670                     l791:
  1246                           
  1247                           ;LCD.c: 112:    Lcd_Port(a);
  1248  0670  0872               	movf	Lcd_Write_Char@a,w
  1249  0671  120A  118A  2659  120A  118A  	fcall	_Lcd_Port
  1250  0676                     l793:
  1251                           
  1252                           ;LCD.c: 113:    PORTEbits.RE2 = 1;
  1253  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1254  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0678  1509               	bsf	9,2	;volatile
  1256  0679                     l795:
  1257                           
  1258                           ;LCD.c: 114:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1259  0679  301A               	movlw	26
  1260  067A  00F1               	movwf	??_Lcd_Write_Char
  1261  067B                     u97:
  1262  067B  0BF1               	decfsz	??_Lcd_Write_Char,f
  1263  067C  2E7B               	goto	u97
  1264  067D  0000               	nop
  1265  067E                     l797:
  1266                           
  1267                           ;LCD.c: 115:    PORTEbits.RE2 = 0;
  1268  067E  1283               	bcf	3,5	;RP0=0, select bank0
  1269  067F  1303               	bcf	3,6	;RP1=0, select bank0
  1270  0680  1109               	bcf	9,2	;volatile
  1271  0681                     l113:
  1272  0681  0008               	return
  1273  0682                     __end_of_Lcd_Write_Char:
  1274                           
  1275                           	psect	text5
  1276  06B7                     __ptext5:	
  1277 ;; *************** function _Lcd_Set_Cursor *****************
  1278 ;; Defined at:
  1279 ;;		line 88 in file "LCD.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  a               1    wreg     unsigned char 
  1282 ;;  b               1    4[COMMON] unsigned char 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  a               1    6[COMMON] unsigned char 
  1285 ;;  temp            1    7[COMMON] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0, pclath, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1295 ;;      Params:         1       0       0       0       0
  1296 ;;      Locals:         2       0       0       0       0
  1297 ;;      Temps:          1       0       0       0       0
  1298 ;;      Totals:         4       0       0       0       0
  1299 ;;Total ram usage:        4 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    2
  1302 ;; This function calls:
  1303 ;;		_Lcd_Cmd
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _Lcd_Set_Cursor
  1311  06B7                     _Lcd_Set_Cursor:
  1312                           
  1313                           ;incstack = 0
  1314                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1315                           ;Lcd_Set_Cursor@a stored from wreg
  1316  06B7  00F6               	movwf	Lcd_Set_Cursor@a
  1317  06B8                     l935:
  1318                           
  1319                           ;LCD.c: 89:  char temp;;LCD.c: 90:  if(a == 1){
  1320  06B8  0376               	decf	Lcd_Set_Cursor@a,w
  1321  06B9  1D03               	btfss	3,2
  1322  06BA  2EBC               	goto	u51
  1323  06BB  2EBD               	goto	u50
  1324  06BC                     u51:
  1325  06BC  2EC9               	goto	l941
  1326  06BD                     u50:
  1327  06BD                     l937:
  1328                           
  1329                           ;LCD.c: 91:         temp = 0x80 + b - 1;
  1330  06BD  0874               	movf	Lcd_Set_Cursor@b,w
  1331  06BE  3E7F               	addlw	127
  1332  06BF  00F5               	movwf	??_Lcd_Set_Cursor
  1333  06C0  0875               	movf	??_Lcd_Set_Cursor,w
  1334  06C1  00F7               	movwf	Lcd_Set_Cursor@temp
  1335  06C2                     l939:
  1336                           
  1337                           ;LCD.c: 95:         Lcd_Cmd(temp);
  1338  06C2  0877               	movf	Lcd_Set_Cursor@temp,w
  1339  06C3  120A  118A  2682  120A  118A  	fcall	_Lcd_Cmd
  1340                           
  1341                           ;LCD.c: 96:  }
  1342  06C8  2EDA               	goto	l110
  1343  06C9                     l941:
  1344  06C9  3002               	movlw	2
  1345  06CA  0676               	xorwf	Lcd_Set_Cursor@a,w
  1346  06CB  1D03               	btfss	3,2
  1347  06CC  2ECE               	goto	u61
  1348  06CD  2ECF               	goto	u60
  1349  06CE                     u61:
  1350  06CE  2EDA               	goto	l110
  1351  06CF                     u60:
  1352  06CF                     l943:
  1353                           
  1354                           ;LCD.c: 98:   temp = 0xC0 + b - 1;
  1355  06CF  0874               	movf	Lcd_Set_Cursor@b,w
  1356  06D0  3EBF               	addlw	191
  1357  06D1  00F5               	movwf	??_Lcd_Set_Cursor
  1358  06D2  0875               	movf	??_Lcd_Set_Cursor,w
  1359  06D3  00F7               	movwf	Lcd_Set_Cursor@temp
  1360  06D4                     l945:
  1361                           
  1362                           ;LCD.c: 102:   Lcd_Cmd(temp);
  1363  06D4  0877               	movf	Lcd_Set_Cursor@temp,w
  1364  06D5  120A  118A  2682  120A  118A  	fcall	_Lcd_Cmd
  1365  06DA                     l110:
  1366  06DA  0008               	return
  1367  06DB                     __end_of_Lcd_Set_Cursor:
  1368                           
  1369                           	psect	text6
  1370  0743                     __ptext6:	
  1371 ;; *************** function _Lcd_Init *****************
  1372 ;; Defined at:
  1373 ;;		line 14 in file "LCD.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2, status,0, pclath, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       0       0       0       0
  1388 ;;      Locals:         0       0       0       0       0
  1389 ;;      Temps:          2       0       0       0       0
  1390 ;;      Totals:         2       0       0       0       0
  1391 ;;Total ram usage:        2 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    2
  1394 ;; This function calls:
  1395 ;;		_Lcd_Cmd
  1396 ;;		_Lcd_Port
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _Lcd_Init
  1404  0743                     _Lcd_Init:
  1405  0743                     l825:	
  1406                           ;incstack = 0
  1407                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1408                           
  1409                           
  1410                           ;LCD.c: 15:   Lcd_Port(0x00);
  1411  0743  3000               	movlw	0
  1412  0744  120A  118A  2659  120A  118A  	fcall	_Lcd_Port
  1413  0749                     l827:
  1414                           
  1415                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1416  0749  3034               	movlw	52
  1417  074A  00F5               	movwf	??_Lcd_Init+1
  1418  074B  30F1               	movlw	241
  1419  074C  00F4               	movwf	??_Lcd_Init
  1420  074D                     u107:
  1421  074D  0BF4               	decfsz	??_Lcd_Init,f
  1422  074E  2F4D               	goto	u107
  1423  074F  0BF5               	decfsz	??_Lcd_Init+1,f
  1424  0750  2F4D               	goto	u107
  1425  0751  2F52               	nop2
  1426  0752                     l829:
  1427                           
  1428                           ;LCD.c: 17:   Lcd_Cmd(0x030);
  1429  0752  3030               	movlw	48
  1430  0753  120A  118A  2682  120A  118A  	fcall	_Lcd_Cmd
  1431                           
  1432                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1433  0758  300D               	movlw	13
  1434  0759  00F5               	movwf	??_Lcd_Init+1
  1435  075A  30FB               	movlw	251
  1436  075B  00F4               	movwf	??_Lcd_Init
  1437  075C                     u117:
  1438  075C  0BF4               	decfsz	??_Lcd_Init,f
  1439  075D  2F5C               	goto	u117
  1440  075E  0BF5               	decfsz	??_Lcd_Init+1,f
  1441  075F  2F5C               	goto	u117
  1442  0760  2F61               	nop2
  1443  0761                     l831:
  1444                           
  1445                           ;LCD.c: 19:   Lcd_Cmd(0x030);
  1446  0761  3030               	movlw	48
  1447  0762  120A  118A  2682  120A  118A  	fcall	_Lcd_Cmd
  1448  0767                     l833:
  1449                           
  1450                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1451  0767  301D               	movlw	29
  1452  0768  00F5               	movwf	??_Lcd_Init+1
  1453  0769  3091               	movlw	145
  1454  076A  00F4               	movwf	??_Lcd_Init
  1455  076B                     u127:
  1456  076B  0BF4               	decfsz	??_Lcd_Init,f
  1457  076C  2F6B               	goto	u127
  1458  076D  0BF5               	decfsz	??_Lcd_Init+1,f
  1459  076E  2F6B               	goto	u127
  1460                           
  1461                           ;LCD.c: 21:   Lcd_Cmd(0x030);
  1462  076F  3030               	movlw	48
  1463  0770  120A  118A  2682  120A  118A  	fcall	_Lcd_Cmd
  1464                           
  1465                           ;LCD.c: 22:   Lcd_Cmd(0x038);
  1466  0775  3038               	movlw	56
  1467  0776  120A  118A  2682  120A  118A  	fcall	_Lcd_Cmd
  1468                           
  1469                           ;LCD.c: 23:   Lcd_Cmd(0x008);
  1470  077B  3008               	movlw	8
  1471  077C  120A  118A  2682  120A  118A  	fcall	_Lcd_Cmd
  1472                           
  1473                           ;LCD.c: 24:   Lcd_Cmd(0x001);
  1474  0781  3001               	movlw	1
  1475  0782  120A  118A  2682  120A  118A  	fcall	_Lcd_Cmd
  1476                           
  1477                           ;LCD.c: 25:   Lcd_Cmd(0x006);
  1478  0787  3006               	movlw	6
  1479  0788  120A  118A  2682  120A  118A  	fcall	_Lcd_Cmd
  1480  078D                     l95:
  1481  078D  0008               	return
  1482  078E                     __end_of_Lcd_Init:
  1483                           
  1484                           	psect	text7
  1485  065F                     __ptext7:	
  1486 ;; *************** function _Lcd_Clear *****************
  1487 ;; Defined at:
  1488 ;;		line 82 in file "LCD.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0, pclath, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1502 ;;      Params:         0       0       0       0       0
  1503 ;;      Locals:         0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0
  1505 ;;      Totals:         0       0       0       0       0
  1506 ;;Total ram usage:        0 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    2
  1509 ;; This function calls:
  1510 ;;		_Lcd_Cmd
  1511 ;; This function is called by:
  1512 ;;		_main
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           
  1517                           ;psect for function _Lcd_Clear
  1518  065F                     _Lcd_Clear:
  1519  065F                     l835:	
  1520                           ;incstack = 0
  1521                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1522                           
  1523                           
  1524                           ;LCD.c: 83:  Lcd_Cmd(0);
  1525  065F  3000               	movlw	0
  1526  0660  120A  118A  2682  120A  118A  	fcall	_Lcd_Cmd
  1527                           
  1528                           ;LCD.c: 84:  Lcd_Cmd(1);
  1529  0665  3001               	movlw	1
  1530  0666  120A  118A  2682  120A  118A  	fcall	_Lcd_Cmd
  1531  066B                     l104:
  1532  066B  0008               	return
  1533  066C                     __end_of_Lcd_Clear:
  1534                           
  1535                           	psect	text8
  1536  0682                     __ptext8:	
  1537 ;; *************** function _Lcd_Cmd *****************
  1538 ;; Defined at:
  1539 ;;		line 73 in file "LCD.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  a               1    wreg     unsigned char 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  a               1    3[COMMON] unsigned char 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, status,0, pclath, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1553 ;;      Params:         0       0       0       0       0
  1554 ;;      Locals:         1       0       0       0       0
  1555 ;;      Temps:          2       0       0       0       0
  1556 ;;      Totals:         3       0       0       0       0
  1557 ;;Total ram usage:        3 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    1
  1560 ;; This function calls:
  1561 ;;		_Lcd_Port
  1562 ;; This function is called by:
  1563 ;;		_Lcd_Init
  1564 ;;		_Lcd_Clear
  1565 ;;		_Lcd_Set_Cursor
  1566 ;;		_Lcd_Shift_Right
  1567 ;;		_Lcd_Shift_Left
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           
  1572                           ;psect for function _Lcd_Cmd
  1573  0682                     _Lcd_Cmd:
  1574                           
  1575                           ;incstack = 0
  1576                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1577                           ;Lcd_Cmd@a stored from wreg
  1578  0682  00F3               	movwf	Lcd_Cmd@a
  1579  0683                     l779:
  1580                           
  1581                           ;LCD.c: 74:  PORTEbits.RE0 = 0;
  1582  0683  1283               	bcf	3,5	;RP0=0, select bank0
  1583  0684  1303               	bcf	3,6	;RP1=0, select bank0
  1584  0685  1009               	bcf	9,0	;volatile
  1585  0686                     l781:
  1586                           
  1587                           ;LCD.c: 75:  Lcd_Port(a);
  1588  0686  0873               	movf	Lcd_Cmd@a,w
  1589  0687  120A  118A  2659  120A  118A  	fcall	_Lcd_Port
  1590  068C                     l783:
  1591                           
  1592                           ;LCD.c: 76:  PORTEbits.RE2 = 1;
  1593  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1594  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1595  068E  1509               	bsf	9,2	;volatile
  1596  068F                     l785:
  1597                           
  1598                           ;LCD.c: 77:         _delay((unsigned long)((4)*(8000000/4000.0)));
  1599  068F  300B               	movlw	11
  1600  0690  00F2               	movwf	??_Lcd_Cmd+1
  1601  0691  3062               	movlw	98
  1602  0692  00F1               	movwf	??_Lcd_Cmd
  1603  0693                     u137:
  1604  0693  0BF1               	decfsz	??_Lcd_Cmd,f
  1605  0694  2E93               	goto	u137
  1606  0695  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1607  0696  2E93               	goto	u137
  1608  0697  0000               	nop
  1609  0698                     l787:
  1610                           
  1611                           ;LCD.c: 78:         PORTEbits.RE2 = 0;
  1612  0698  1283               	bcf	3,5	;RP0=0, select bank0
  1613  0699  1303               	bcf	3,6	;RP1=0, select bank0
  1614  069A  1109               	bcf	9,2	;volatile
  1615  069B                     l101:
  1616  069B  0008               	return
  1617  069C                     __end_of_Lcd_Cmd:
  1618                           
  1619                           	psect	text9
  1620  0659                     __ptext9:	
  1621 ;; *************** function _Lcd_Port *****************
  1622 ;; Defined at:
  1623 ;;		line 29 in file "LCD.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  a               1    wreg     unsigned char 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  a               1    0[COMMON] unsigned char 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1637 ;;      Params:         0       0       0       0       0
  1638 ;;      Locals:         1       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0
  1640 ;;      Totals:         1       0       0       0       0
  1641 ;;Total ram usage:        1 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_Lcd_Init
  1647 ;;		_Lcd_Cmd
  1648 ;;		_Lcd_Write_Char
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           
  1653                           ;psect for function _Lcd_Port
  1654  0659                     _Lcd_Port:
  1655                           
  1656                           ;incstack = 0
  1657                           ; Regs used in _Lcd_Port: [wreg]
  1658                           ;Lcd_Port@a stored from wreg
  1659  0659  00F0               	movwf	Lcd_Port@a
  1660  065A                     l767:
  1661                           
  1662                           ;LCD.c: 30:     PORTD = a;
  1663  065A  0870               	movf	Lcd_Port@a,w
  1664  065B  1283               	bcf	3,5	;RP0=0, select bank0
  1665  065C  1303               	bcf	3,6	;RP1=0, select bank0
  1666  065D  0088               	movwf	8	;volatile
  1667  065E                     l98:
  1668  065E  0008               	return
  1669  065F                     __end_of_Lcd_Port:
  1670  007E                     btemp	set	126	;btemp
  1671  007E                     wtemp0	set	126
  1672                           
  1673                           	psect	config
  1674                           
  1675                           ;Config register CONFIG1 @ 0x2007
  1676                           ;	Oscillator Selection bits
  1677                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1678                           ;	Watchdog Timer Enable bit
  1679                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1680                           ;	Power-up Timer Enable bit
  1681                           ;	PWRTE = OFF, PWRT disabled
  1682                           ;	RE3/MCLR pin function select bit
  1683                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1684                           ;	Code Protection bit
  1685                           ;	CP = OFF, Program memory code protection is disabled
  1686                           ;	Data Code Protection bit
  1687                           ;	CPD = OFF, Data memory code protection is disabled
  1688                           ;	Brown Out Reset Selection bits
  1689                           ;	BOREN = OFF, BOR disabled
  1690                           ;	Internal External Switchover bit
  1691                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1692                           ;	Fail-Safe Clock Monitor Enabled bit
  1693                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1694                           ;	Low Voltage Programming Enable bit
  1695                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1696                           ;	In-Circuit Debugger Mode bit
  1697                           ;	DEBUG = 0x1, unprogrammed default
  1698  2007                     	org	8199
  1699  2007  20D1               	dw	8401
  1700                           
  1701                           ;Config register CONFIG2 @ 0x2008
  1702                           ;	Brown-out Reset Selection bit
  1703                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1704                           ;	Flash Program Memory Self Write Enable bits
  1705                           ;	WRT = OFF, Write protection off
  1706  2008                     	org	8200
  1707  2008  3FFF               	dw	16383

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80      0      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _setup->_initOsc
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     701
                                              8 COMMON     1     1      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     219
                                              3 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      30
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     392
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      45
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      30
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      30
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _initOsc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      19       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      19      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 13:28:47 2021

                        _a 007C                          _x 0028                          pc 0002  
                       l63 06B6                         l80 07BA                         l72 0790  
                       l81 07C0                         l73 07E8                         l82 07E9  
                       l74 0796                         l75 079C                         l76 07A2  
                       l77 07A8                         l78 07AE                         l95 078D  
                       l79 07B4                         l98 065E                         u50 06BD  
                       u51 06BC                         u60 06CF                         u61 06CE  
                       u70 06FF                         u71 06FE                         u97 067B  
                       fsr 0004                        l101 069B                        l110 06DA  
                      l104 066B                        l113 0681                        l119 06FF  
                      l801 06A2                        l811 06AD                        l803 06A6  
                      l821 06B4                        l813 06AE                        l805 06A7  
                      l831 0761                        l823 06B5                        l815 06AF  
                      l807 06AB                        l833 0767                        l825 0743  
                      l817 06B2                        l809 06AC                        l835 065F  
                      l827 0749                        l819 06B3                        l781 0686  
                      l829 0752                        l941 06C9                        l773 07C6  
                      l767 065A                        l783 068C                        l943 06CF  
                      l935 06B8                        l791 0670                        l951 06EC  
                      l785 068F                        l945 06D4                        l937 06BD  
                      l793 0676                        l953 06F2                        l769 078F  
                      l961 070F                        l787 0698                        l779 0683  
                      l939 06C2                        l795 0679                        l947 06DC  
                      l963 0719                        l955 0700                        l797 067E  
                      l789 066D                        l949 06DF                        l965 0729  
                      l957 0705                        l799 069C                        l967 072F  
                      l959 070A                        u107 074D                        u117 075C  
                      u127 076B                        u137 0693                        _VAL 0026  
                      fsr0 0004                       l1005 07CE                       STR_1 0009  
                     STR_2 000D                       STR_3 0011          ?_Lcd_Write_String 0070  
                     _main 0700                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0073            __end_of_Lcd_Cmd 069C                      ?_main 0070  
                    _ANSEL 0188                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
          __end_of_initOsc 07EA                      _setup 069C                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 078E  
         __end_of_Lcd_Port 065F            __initialization 07EA               __end_of_main 0743  
                   ??_main 0078         __size_of_Lcd_Clear 000D                     _ADCON1 009F  
                   _ADRESH 001E                     _ADRESL 009E                initOsc@IRCF 0072  
                   ?_setup 0070                     _ANSELH 0189                     _INTCON 000B  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0016                  ??_initOsc 0070  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 066C             __pcstackCOMMON 0070              __end_of_setup 06B7  
           _Lcd_Set_Cursor 06B7                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0073                 __pbssBANK0 0020                 __pmaintext 0700  
__size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 06DB                    _S3_cont 007B  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 0003  
           _Lcd_Write_Char 066C                    _Lcd_Cmd 0682            ?_Lcd_Set_Cursor 0074  
                  __ptext1 069C                    __ptext2 078E                    __ptext3 06DB  
                  __ptext4 066C                    __ptext5 06B7                    __ptext6 0743  
                  __ptext7 065F                    __ptext8 0682                    __ptext9 0659  
                  _initOsc 078E     __end_of_Lcd_Write_Char 0682       end_of_initialization 07FC  
                Lcd_Port@a 0070                  _PORTEbits 0009            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0075          Lcd_Write_String@i 0073                  _Lcd_Clear 065F  
              _ADC_VALOR_1 0079                _ADC_VALOR_2 002A           _Lcd_Write_String 06DB  
      start_initialization 07EA          __size_of_Lcd_Init 004B          __size_of_Lcd_Port 0006  
               ?_Lcd_Clear 0070            Lcd_Write_Char@a 0072                __pbssCOMMON 0079  
                ___latbits 0002                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0075  
                __pstrings 0003                   ?_initOsc 0070             __size_of_setup 001B  
                 _PIE1bits 008C                   Lcd_Cmd@a 0073                   _PIR1bits 000C  
              ??_Lcd_Clear 0074                   _VAL_SWAP 0024                 _ADCON0bits 001F  
              __stringbase 0008           ??_Lcd_Write_Char 0071                   _Lcd_Init 0743  
                 _Lcd_Port 0659   __end_of_Lcd_Write_String 0700           __size_of_Lcd_Cmd 001A  
       __end_of__stringtab 0009           __size_of_initOsc 005C              __size_of_main 0043  
              _VAL_NIBBLE1 0022                _VAL_NIBBLE2 0020                  stringcode 0003  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 0077                   stringdir 0003  
                 stringtab 0003  
