

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 11 12:35:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  0105                     	;# 
   150  0107                     	;# 
   151  0108                     	;# 
   152  0109                     	;# 
   153  010C                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0185                     	;# 
   159  0187                     	;# 
   160  0188                     	;# 
   161  0189                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  0105                     	;# 
   228  0107                     	;# 
   229  0108                     	;# 
   230  0109                     	;# 
   231  010C                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  0185                     	;# 
   237  0187                     	;# 
   238  0188                     	;# 
   239  0189                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001D                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0086                     	;# 
   280  0087                     	;# 
   281  0088                     	;# 
   282  0089                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  0105                     	;# 
   306  0107                     	;# 
   307  0108                     	;# 
   308  0109                     	;# 
   309  010C                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  0185                     	;# 
   315  0187                     	;# 
   316  0188                     	;# 
   317  0189                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  000E                     	;# 
   336  000F                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0014                     	;# 
   342  0015                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0017                     	;# 
   346  0018                     	;# 
   347  0019                     	;# 
   348  001A                     	;# 
   349  001B                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001D                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  0081                     	;# 
   356  0085                     	;# 
   357  0086                     	;# 
   358  0087                     	;# 
   359  0088                     	;# 
   360  0089                     	;# 
   361  008C                     	;# 
   362  008D                     	;# 
   363  008E                     	;# 
   364  008F                     	;# 
   365  0090                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0095                     	;# 
   373  0096                     	;# 
   374  0097                     	;# 
   375  0098                     	;# 
   376  0099                     	;# 
   377  009A                     	;# 
   378  009B                     	;# 
   379  009C                     	;# 
   380  009D                     	;# 
   381  009E                     	;# 
   382  009F                     	;# 
   383  0105                     	;# 
   384  0107                     	;# 
   385  0108                     	;# 
   386  0109                     	;# 
   387  010C                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  010F                     	;# 
   392  0185                     	;# 
   393  0187                     	;# 
   394  0188                     	;# 
   395  0189                     	;# 
   396  018C                     	;# 
   397  018D                     	;# 
   398  0000                     	;# 
   399  0001                     	;# 
   400  0002                     	;# 
   401  0003                     	;# 
   402  0004                     	;# 
   403  0005                     	;# 
   404  0006                     	;# 
   405  0007                     	;# 
   406  0008                     	;# 
   407  0009                     	;# 
   408  000A                     	;# 
   409  000B                     	;# 
   410  000C                     	;# 
   411  000D                     	;# 
   412  000E                     	;# 
   413  000E                     	;# 
   414  000F                     	;# 
   415  0010                     	;# 
   416  0011                     	;# 
   417  0012                     	;# 
   418  0013                     	;# 
   419  0014                     	;# 
   420  0015                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  001D                     	;# 
   431  001E                     	;# 
   432  001F                     	;# 
   433  0081                     	;# 
   434  0085                     	;# 
   435  0086                     	;# 
   436  0087                     	;# 
   437  0088                     	;# 
   438  0089                     	;# 
   439  008C                     	;# 
   440  008D                     	;# 
   441  008E                     	;# 
   442  008F                     	;# 
   443  0090                     	;# 
   444  0091                     	;# 
   445  0092                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0093                     	;# 
   449  0094                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  009F                     	;# 
   461  0105                     	;# 
   462  0107                     	;# 
   463  0108                     	;# 
   464  0109                     	;# 
   465  010C                     	;# 
   466  010C                     	;# 
   467  010D                     	;# 
   468  010E                     	;# 
   469  010F                     	;# 
   470  0185                     	;# 
   471  0187                     	;# 
   472  0188                     	;# 
   473  0189                     	;# 
   474  018C                     	;# 
   475  018D                     	;# 
   476                           
   477                           	psect	strings
   478  1800                     __pstrings:
   479  1800                     stringtab:
   480  1800                     __stringtab:
   481                           
   482                           ;	String table - string pointers are 1 byte each
   483  1800  1BFF               	btfsc	btemp+1,7
   484  1801  280A               	ljmp	stringcode
   485  1802  1383               	bcf	3,7
   486  1803  187F               	btfsc	btemp+1,0
   487  1804  1783               	bsf	3,7
   488  1805  0800               	movf	0,w
   489  1806  0A84               	incf	4,f
   490  1807  1903               	skipnz
   491  1808  0AFF               	incf	btemp+1,f
   492  1809  0008               	return
   493  180A                     stringcode:
   494  180A                     stringdir:
   495  180A  3018               	movlw	high stringdir
   496  180B  008A               	movwf	10
   497  180C  0804               	movf	4,w
   498  180D  0A84               	incf	4,f
   499  180E  0782               	addwf	2,f
   500  180F                     __stringbase:
   501  180F  3400               	retlw	0
   502  1810                     __end_of__stringtab:
   503  1810                     __powers_:
   504  1810  3400               	retlw	0
   505  1811  3400               	retlw	0
   506  1812  3480               	retlw	128
   507  1813  343F               	retlw	63
   508  1814  3400               	retlw	0
   509  1815  3400               	retlw	0
   510  1816  3420               	retlw	32
   511  1817  3441               	retlw	65
   512  1818  3400               	retlw	0
   513  1819  3400               	retlw	0
   514  181A  34C8               	retlw	200
   515  181B  3442               	retlw	66
   516  181C  3400               	retlw	0
   517  181D  3400               	retlw	0
   518  181E  347A               	retlw	122
   519  181F  3444               	retlw	68
   520  1820  3400               	retlw	0
   521  1821  3440               	retlw	64
   522  1822  341C               	retlw	28
   523  1823  3446               	retlw	70
   524  1824  3400               	retlw	0
   525  1825  3450               	retlw	80
   526  1826  34C3               	retlw	195
   527  1827  3447               	retlw	71
   528  1828  3400               	retlw	0
   529  1829  3424               	retlw	36
   530  182A  3474               	retlw	116
   531  182B  3449               	retlw	73
   532  182C  3480               	retlw	128
   533  182D  3496               	retlw	150
   534  182E  3418               	retlw	24
   535  182F  344B               	retlw	75
   536  1830  3420               	retlw	32
   537  1831  34BC               	retlw	188
   538  1832  34BE               	retlw	190
   539  1833  344C               	retlw	76
   540  1834  3428               	retlw	40
   541  1835  346B               	retlw	107
   542  1836  346E               	retlw	110
   543  1837  344E               	retlw	78
   544  1838  34F9               	retlw	249
   545  1839  3402               	retlw	2
   546  183A  3415               	retlw	21
   547  183B  3450               	retlw	80
   548  183C  34EC               	retlw	236
   549  183D  3478               	retlw	120
   550  183E  34AD               	retlw	173
   551  183F  3460               	retlw	96
   552  1840  34CA               	retlw	202
   553  1841  34F2               	retlw	242
   554  1842  3449               	retlw	73
   555  1843  3471               	retlw	113
   556  1844                     __end_of__powers_:
   557  1844                     __npowers_:
   558  1844  3400               	retlw	0
   559  1845  3400               	retlw	0
   560  1846  3480               	retlw	128
   561  1847  343F               	retlw	63
   562  1848  34CD               	retlw	205
   563  1849  34CC               	retlw	204
   564  184A  34CC               	retlw	204
   565  184B  343D               	retlw	61
   566  184C  340A               	retlw	10
   567  184D  34D7               	retlw	215
   568  184E  3423               	retlw	35
   569  184F  343C               	retlw	60
   570  1850  346F               	retlw	111
   571  1851  3412               	retlw	18
   572  1852  3483               	retlw	131
   573  1853  343A               	retlw	58
   574  1854  3417               	retlw	23
   575  1855  34B7               	retlw	183
   576  1856  34D1               	retlw	209
   577  1857  3438               	retlw	56
   578  1858  34AC               	retlw	172
   579  1859  34C5               	retlw	197
   580  185A  3427               	retlw	39
   581  185B  3437               	retlw	55
   582  185C  34BD               	retlw	189
   583  185D  3437               	retlw	55
   584  185E  3486               	retlw	134
   585  185F  3435               	retlw	53
   586  1860  3495               	retlw	149
   587  1861  34BF               	retlw	191
   588  1862  34D6               	retlw	214
   589  1863  3433               	retlw	51
   590  1864  3477               	retlw	119
   591  1865  34CC               	retlw	204
   592  1866  342B               	retlw	43
   593  1867  3432               	retlw	50
   594  1868  345F               	retlw	95
   595  1869  3470               	retlw	112
   596  186A  3489               	retlw	137
   597  186B  3430               	retlw	48
   598  186C  34FF               	retlw	255
   599  186D  34E6               	retlw	230
   600  186E  34DB               	retlw	219
   601  186F  342E               	retlw	46
   602  1870  3408               	retlw	8
   603  1871  34E5               	retlw	229
   604  1872  343C               	retlw	60
   605  1873  341E               	retlw	30
   606  1874  3460               	retlw	96
   607  1875  3442               	retlw	66
   608  1876  34A2               	retlw	162
   609  1877  340D               	retlw	13
   610  1878                     __end_of__npowers_:
   611  1878                     _dpowers:
   612  1878  3401               	retlw	1
   613  1879  3400               	retlw	0
   614  187A  3400               	retlw	0
   615  187B  3400               	retlw	0
   616  187C  340A               	retlw	10
   617  187D  3400               	retlw	0
   618  187E  3400               	retlw	0
   619  187F  3400               	retlw	0
   620  1880  3464               	retlw	100
   621  1881  3400               	retlw	0
   622  1882  3400               	retlw	0
   623  1883  3400               	retlw	0
   624  1884  34E8               	retlw	232
   625  1885  3403               	retlw	3
   626  1886  3400               	retlw	0
   627  1887  3400               	retlw	0
   628  1888  3410               	retlw	16
   629  1889  3427               	retlw	39
   630  188A  3400               	retlw	0
   631  188B  3400               	retlw	0
   632  188C  34A0               	retlw	160
   633  188D  3486               	retlw	134
   634  188E  3401               	retlw	1
   635  188F  3400               	retlw	0
   636  1890  3440               	retlw	64
   637  1891  3442               	retlw	66
   638  1892  340F               	retlw	15
   639  1893  3400               	retlw	0
   640  1894  3480               	retlw	128
   641  1895  3496               	retlw	150
   642  1896  3498               	retlw	152
   643  1897  3400               	retlw	0
   644  1898  3400               	retlw	0
   645  1899  34E1               	retlw	225
   646  189A  34F5               	retlw	245
   647  189B  3405               	retlw	5
   648  189C  3400               	retlw	0
   649  189D  34CA               	retlw	202
   650  189E  349A               	retlw	154
   651  189F  343B               	retlw	59
   652  18A0                     __end_of_dpowers:
   653  0009                     _PORTEbits	set	9
   654  0009                     _PORTE	set	9
   655  0008                     _PORTD	set	8
   656  0007                     _PORTC	set	7
   657  0006                     _PORTB	set	6
   658  0005                     _PORTA	set	5
   659  001E                     _ADRESH	set	30
   660  001F                     _ADCON0bits	set	31
   661  009F                     _ADCON1	set	159
   662  009E                     _ADRESL	set	158
   663  008F                     _OSCCONbits	set	143
   664  0089                     _TRISE	set	137
   665  0088                     _TRISD	set	136
   666  0087                     _TRISC	set	135
   667  0086                     _TRISB	set	134
   668  0085                     _TRISA	set	133
   669  0189                     _ANSELH	set	393
   670  0188                     _ANSEL	set	392
   671  18A0                     STR_4:
   672  18A0  3425               	retlw	37	;'%'
   673  18A1  3431               	retlw	49	;'1'
   674  18A2  342E               	retlw	46	;'.'
   675  18A3  3432               	retlw	50	;'2'
   676  18A4  3466               	retlw	102	;'f'
   677  18A5  3420               	retlw	32	;' '
   678  18A6  3420               	retlw	32	;' '
   679  18A7  3425               	retlw	37	;'%'
   680  18A8  3431               	retlw	49	;'1'
   681  18A9  342E               	retlw	46	;'.'
   682  18AA  3432               	retlw	50	;'2'
   683  18AB  3466               	retlw	102	;'f'
   684  18AC  3400               	retlw	0
   685  18AD                     STR_1:
   686  18AD  3453               	retlw	83	;'S'
   687  18AE  3431               	retlw	49	;'1'
   688  18AF  343A               	retlw	58	;':'
   689  18B0  3400               	retlw	0
   690  18B1                     STR_2:
   691  18B1  3453               	retlw	83	;'S'
   692  18B2  3432               	retlw	50	;'2'
   693  18B3  343A               	retlw	58	;':'
   694  18B4  3400               	retlw	0
   695  18B5                     STR_3:
   696  18B5  3453               	retlw	83	;'S'
   697  18B6  3433               	retlw	51	;'3'
   698  18B7  343A               	retlw	58	;':'
   699  18B8  3400               	retlw	0
   700                           
   701                           	psect	cinit
   702  07F0                     start_initialization:	
   703                           ; #config settings
   704                           
   705  07F0                     __initialization:
   706                           
   707                           ; Clear objects allocated to BANK0
   708  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   709  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   710  07F2  01EF               	clrf	__pbssBANK0& (0+127)
   711                           
   712                           ; Clear objects allocated to BANK1
   713  07F3  1383               	bcf	3,7	;select IRP bank0
   714  07F4  30CB               	movlw	low __pbssBANK1
   715  07F5  0084               	movwf	4
   716  07F6  30EB               	movlw	low (__pbssBANK1+32)
   717  07F7  120A  118A  2004  120A  118A  	fcall	clear_ram0
   718  07FC                     end_of_initialization:	
   719                           ;End of C runtime variable initialization code
   720                           
   721  07FC                     __end_of__initialization:
   722  07FC  0183               	clrf	3
   723  07FD  160A  158A  2B6F   	ljmp	_main	;jump to C main() function
   724                           
   725                           	psect	bssBANK0
   726  006F                     __pbssBANK0:
   727  006F                     _S3_cont:
   728  006F                     	ds	1
   729                           
   730                           	psect	bssBANK1
   731  00CB                     __pbssBANK1:
   732  00CB                     _S2_val:
   733  00CB                     	ds	4
   734  00CF                     _S1_val:
   735  00CF                     	ds	4
   736  00D3                     _VAL_NIBBLE2:
   737  00D3                     	ds	2
   738  00D5                     _VAL_NIBBLE1:
   739  00D5                     	ds	2
   740  00D7                     _VAL_SWAP:
   741  00D7                     	ds	2
   742  00D9                     _VAL:
   743  00D9                     	ds	2
   744  00DB                     _data:
   745  00DB                     	ds	16
   746                           
   747                           	psect	clrtext
   748  0004                     clear_ram0:	
   749                           ;	Called with FSR containing the base address, and
   750                           ;	W with the last address+1
   751                           
   752  0004  0064               	clrwdt	;clear the watchdog before getting into this loop
   753  0005                     clrloop0:
   754  0005  0180               	clrf	0	;clear RAM location pointed to by FSR
   755  0006  0A84               	incf	4,f	;increment pointer
   756  0007  0604               	xorwf	4,w	;XOR with final address
   757  0008  1903               	btfsc	3,2	;have we reached the end yet?
   758  0009  3400               	retlw	0	;all done for this memory range, return
   759  000A  0604               	xorwf	4,w	;XOR again to restore value
   760  000B  2805               	goto	clrloop0	;do the next byte
   761                           
   762                           	psect	cstackBANK1
   763  00A0                     __pcstackBANK1:
   764  00A0                     ?_sprintf:
   765  00A0                     sprintf@f:	
   766                           ; 2 bytes @ 0x0
   767                           
   768                           
   769                           ; 1 bytes @ 0x0
   770  00A0                     	ds	9
   771  00A9                     ??_sprintf:
   772                           
   773                           ; 1 bytes @ 0x9
   774  00A9                     	ds	5
   775  00AE                     _sprintf$999:
   776                           
   777                           ; 4 bytes @ 0xE
   778  00AE                     	ds	4
   779  00B2                     sprintf@ap:
   780                           
   781                           ; 1 bytes @ 0x12
   782  00B2                     	ds	1
   783  00B3                     sprintf@val:
   784                           
   785                           ; 4 bytes @ 0x13
   786  00B3                     	ds	4
   787  00B7                     sprintf@flag:
   788                           
   789                           ; 2 bytes @ 0x17
   790  00B7                     	ds	2
   791  00B9                     sprintf@width:
   792                           
   793                           ; 2 bytes @ 0x19
   794  00B9                     	ds	2
   795  00BB                     sprintf@tmpval:
   796                           
   797                           ; 4 bytes @ 0x1B
   798  00BB                     	ds	4
   799  00BF                     sprintf@eexp:
   800                           
   801                           ; 2 bytes @ 0x1F
   802  00BF                     	ds	2
   803  00C1                     sprintf@fval:
   804                           
   805                           ; 4 bytes @ 0x21
   806  00C1                     	ds	4
   807  00C5                     sprintf@sp:
   808                           
   809                           ; 1 bytes @ 0x25
   810  00C5                     	ds	1
   811  00C6                     sprintf@prec:
   812                           
   813                           ; 2 bytes @ 0x26
   814  00C6                     	ds	2
   815  00C8                     sprintf@c:
   816                           
   817                           ; 1 bytes @ 0x28
   818  00C8                     	ds	1
   819  00C9                     ??_main:
   820                           
   821                           ; 1 bytes @ 0x29
   822  00C9                     	ds	2
   823                           
   824                           	psect	cstackCOMMON
   825  0070                     __pcstackCOMMON:
   826  0070                     ?_isdigit:
   827  0070                     ?___fleq:	
   828                           ; 1 bit 
   829                           
   830  0070                     ?___flge:	
   831                           ; 1 bit 
   832                           
   833  0070                     ?_setup:	
   834                           ; 1 bit 
   835                           
   836  0070                     ?_Lcd_Init:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_titulos_LCD:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_ADC_channel1:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_ADC_channel2:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_float_to_string:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ?_ADC_Config:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0070                     ??_ADC_Config:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ?_initOsc:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ??_initOsc:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ?_Lcd_Port:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ??_Lcd_Port:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ?_Lcd_Cmd:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ??_isdigit:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0070                     ?_main:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0070                     ?_Lcd_Write_Char:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0070                     ?__Umul8_16:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     ?___wmul:	
   885                           ; 2 bytes @ 0x0
   886                           
   887  0070                     ?___awmod:	
   888                           ; 2 bytes @ 0x0
   889                           
   890  0070                     ?___lwmod:	
   891                           ; 2 bytes @ 0x0
   892                           
   893  0070                     ?__tdiv_to_l_:	
   894                           ; 2 bytes @ 0x0
   895                           
   896  0070                     ?__div_to_l_:	
   897                           ; 4 bytes @ 0x0
   898                           
   899  0070                     ?___lldiv:	
   900                           ; 4 bytes @ 0x0
   901                           
   902  0070                     ?___flneg:	
   903                           ; 4 bytes @ 0x0
   904                           
   905  0070                     ?___llmod:	
   906                           ; 4 bytes @ 0x0
   907                           
   908  0070                     ?___xxtofl:	
   909                           ; 4 bytes @ 0x0
   910                           
   911  0070                     Lcd_Port@a:	
   912                           ; 4 bytes @ 0x0
   913                           
   914  0070                     __Umul8_16@multiplicand:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     _isdigit$807:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ___wmul@multiplier:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ___awmod@divisor:	
   924                           ; 2 bytes @ 0x0
   925                           
   926  0070                     ___lwmod@divisor:	
   927                           ; 2 bytes @ 0x0
   928                           
   929  0070                     ___lldiv@divisor:	
   930                           ; 2 bytes @ 0x0
   931                           
   932  0070                     __div_to_l_@f1:	
   933                           ; 4 bytes @ 0x0
   934                           
   935  0070                     ___fleq@ff1:	
   936                           ; 4 bytes @ 0x0
   937                           
   938  0070                     ___flge@ff1:	
   939                           ; 4 bytes @ 0x0
   940                           
   941  0070                     ___flneg@f1:	
   942                           ; 4 bytes @ 0x0
   943                           
   944  0070                     __tdiv_to_l_@f1:	
   945                           ; 4 bytes @ 0x0
   946                           
   947  0070                     ___llmod@divisor:	
   948                           ; 4 bytes @ 0x0
   949                           
   950  0070                     ___xxtofl@val:	
   951                           ; 4 bytes @ 0x0
   952                           
   953                           
   954                           ; 4 bytes @ 0x0
   955  0070                     	ds	1
   956  0071                     ??_Lcd_Cmd:
   957  0071                     ??_Lcd_Write_Char:	
   958                           ; 1 bytes @ 0x1
   959                           
   960  0071                     isdigit@c:	
   961                           ; 1 bytes @ 0x1
   962                           
   963                           
   964                           ; 1 bytes @ 0x1
   965  0071                     	ds	1
   966  0072                     ??__Umul8_16:
   967  0072                     initOsc@IRCF:	
   968                           ; 1 bytes @ 0x2
   969                           
   970  0072                     Lcd_Write_Char@a:	
   971                           ; 1 bytes @ 0x2
   972                           
   973  0072                     ADC_Config@AN_num:	
   974                           ; 1 bytes @ 0x2
   975                           
   976  0072                     ___wmul@multiplicand:	
   977                           ; 1 bytes @ 0x2
   978                           
   979  0072                     ___awmod@dividend:	
   980                           ; 2 bytes @ 0x2
   981                           
   982  0072                     ___lwmod@dividend:	
   983                           ; 2 bytes @ 0x2
   984                           
   985                           
   986                           ; 2 bytes @ 0x2
   987  0072                     	ds	1
   988  0073                     ??_setup:
   989  0073                     ?_Lcd_Write_String:	
   990                           ; 1 bytes @ 0x3
   991                           
   992  0073                     Lcd_Cmd@a:	
   993                           ; 1 bytes @ 0x3
   994                           
   995  0073                     Lcd_Write_String@a:	
   996                           ; 1 bytes @ 0x3
   997                           
   998                           
   999                           ; 2 bytes @ 0x3
  1000  0073                     	ds	1
  1001  0074                     ??_Lcd_Init:
  1002  0074                     ?_Lcd_Set_Cursor:	
  1003                           ; 1 bytes @ 0x4
  1004                           
  1005  0074                     ??___wmul:	
  1006                           ; 1 bytes @ 0x4
  1007                           
  1008  0074                     ??___awmod:	
  1009                           ; 1 bytes @ 0x4
  1010                           
  1011  0074                     ??___flneg:	
  1012                           ; 1 bytes @ 0x4
  1013                           
  1014  0074                     ??___lwmod:	
  1015                           ; 1 bytes @ 0x4
  1016                           
  1017  0074                     ??___xxtofl:	
  1018                           ; 1 bytes @ 0x4
  1019                           
  1020  0074                     Lcd_Set_Cursor@b:	
  1021                           ; 1 bytes @ 0x4
  1022                           
  1023  0074                     ___wmul@product:	
  1024                           ; 1 bytes @ 0x4
  1025                           
  1026  0074                     __Umul8_16@product:	
  1027                           ; 2 bytes @ 0x4
  1028                           
  1029  0074                     ___lldiv@dividend:	
  1030                           ; 2 bytes @ 0x4
  1031                           
  1032  0074                     __div_to_l_@f2:	
  1033                           ; 4 bytes @ 0x4
  1034                           
  1035  0074                     ___fleq@ff2:	
  1036                           ; 4 bytes @ 0x4
  1037                           
  1038  0074                     ___flge@ff2:	
  1039                           ; 4 bytes @ 0x4
  1040                           
  1041  0074                     __tdiv_to_l_@f2:	
  1042                           ; 4 bytes @ 0x4
  1043                           
  1044  0074                     ___llmod@dividend:	
  1045                           ; 4 bytes @ 0x4
  1046                           
  1047                           
  1048                           ; 4 bytes @ 0x4
  1049  0074                     	ds	1
  1050  0075                     ??_Lcd_Set_Cursor:
  1051  0075                     ??_Lcd_Write_String:	
  1052                           ; 1 bytes @ 0x5
  1053                           
  1054  0075                     ___awmod@counter:	
  1055                           ; 1 bytes @ 0x5
  1056                           
  1057  0075                     ___lwmod@counter:	
  1058                           ; 1 bytes @ 0x5
  1059                           
  1060                           
  1061                           ; 1 bytes @ 0x5
  1062  0075                     	ds	1
  1063  0076                     ?___lwdiv:
  1064  0076                     Lcd_Set_Cursor@a:	
  1065                           ; 2 bytes @ 0x6
  1066                           
  1067  0076                     ___awmod@sign:	
  1068                           ; 1 bytes @ 0x6
  1069                           
  1070  0076                     ___lwdiv@divisor:	
  1071                           ; 1 bytes @ 0x6
  1072                           
  1073  0076                     __Umul8_16@word_mpld:	
  1074                           ; 2 bytes @ 0x6
  1075                           
  1076                           
  1077                           ; 2 bytes @ 0x6
  1078  0076                     	ds	1
  1079  0077                     ?___awdiv:
  1080  0077                     Lcd_Set_Cursor@temp:	
  1081                           ; 2 bytes @ 0x7
  1082                           
  1083  0077                     ___awdiv@divisor:	
  1084                           ; 1 bytes @ 0x7
  1085                           
  1086                           
  1087                           ; 2 bytes @ 0x7
  1088  0077                     	ds	1
  1089  0078                     ??__tdiv_to_l_:
  1090  0078                     ??__div_to_l_:	
  1091                           ; 1 bytes @ 0x8
  1092                           
  1093  0078                     ??___lldiv:	
  1094                           ; 1 bytes @ 0x8
  1095                           
  1096  0078                     ??___fleq:	
  1097                           ; 1 bytes @ 0x8
  1098                           
  1099  0078                     ??___flge:	
  1100                           ; 1 bytes @ 0x8
  1101                           
  1102  0078                     ??___llmod:	
  1103                           ; 1 bytes @ 0x8
  1104                           
  1105  0078                     __Umul8_16@multiplier:	
  1106                           ; 1 bytes @ 0x8
  1107                           
  1108  0078                     ___xxtofl@sign:	
  1109                           ; 1 bytes @ 0x8
  1110                           
  1111  0078                     Lcd_Write_String@i:	
  1112                           ; 1 bytes @ 0x8
  1113                           
  1114  0078                     ___lwdiv@dividend:	
  1115                           ; 2 bytes @ 0x8
  1116                           
  1117                           
  1118                           ; 2 bytes @ 0x8
  1119  0078                     	ds	1
  1120  0079                     ___llmod@counter:
  1121  0079                     ___xxtofl@exp:	
  1122                           ; 1 bytes @ 0x9
  1123                           
  1124  0079                     ___awdiv@dividend:	
  1125                           ; 1 bytes @ 0x9
  1126                           
  1127  0079                     ___lldiv@quotient:	
  1128                           ; 2 bytes @ 0x9
  1129                           
  1130                           
  1131                           ; 4 bytes @ 0x9
  1132  0079                     	ds	1
  1133  007A                     ??_titulos_LCD:
  1134  007A                     ??___lwdiv:	
  1135                           ; 1 bytes @ 0xA
  1136                           
  1137  007A                     ___xxtofl@arg:	
  1138                           ; 1 bytes @ 0xA
  1139                           
  1140                           
  1141                           ; 4 bytes @ 0xA
  1142  007A                     	ds	1
  1143  007B                     ??___awdiv:
  1144  007B                     ___lwdiv@quotient:	
  1145                           ; 1 bytes @ 0xB
  1146                           
  1147                           
  1148                           ; 2 bytes @ 0xB
  1149  007B                     	ds	2
  1150  007D                     ___lldiv@counter:
  1151  007D                     ___lwdiv@counter:	
  1152                           ; 1 bytes @ 0xD
  1153                           
  1154                           
  1155                           ; 1 bytes @ 0xD
  1156  007D                     	ds	1
  1157  007E                     ??___flsub:
  1158                           
  1159                           	psect	cstackBANK0
  1160  0020                     __pcstackBANK0:	
  1161                           ; 1 bytes @ 0xE
  1162                           
  1163  0020                     ___awdiv@counter:
  1164  0020                     __div_to_l_@quot:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0020                     __tdiv_to_l_@quot:	
  1168                           ; 4 bytes @ 0x0
  1169                           
  1170                           
  1171                           ; 4 bytes @ 0x0
  1172  0020                     	ds	1
  1173  0021                     ___awdiv@sign:
  1174                           
  1175                           ; 1 bytes @ 0x1
  1176  0021                     	ds	1
  1177  0022                     ___awdiv@quotient:
  1178                           
  1179                           ; 2 bytes @ 0x2
  1180  0022                     	ds	2
  1181  0024                     ?___flmul:
  1182  0024                     __div_to_l_@cntr:	
  1183                           ; 4 bytes @ 0x4
  1184                           
  1185  0024                     __tdiv_to_l_@cntr:	
  1186                           ; 1 bytes @ 0x4
  1187                           
  1188  0024                     ___flmul@b:	
  1189                           ; 1 bytes @ 0x4
  1190                           
  1191                           
  1192                           ; 4 bytes @ 0x4
  1193  0024                     	ds	1
  1194  0025                     __div_to_l_@exp1:
  1195  0025                     __tdiv_to_l_@exp1:	
  1196                           ; 1 bytes @ 0x5
  1197                           
  1198                           
  1199                           ; 1 bytes @ 0x5
  1200  0025                     	ds	3
  1201  0028                     ___flmul@a:
  1202                           
  1203                           ; 4 bytes @ 0x8
  1204  0028                     	ds	4
  1205  002C                     ??___flmul:
  1206                           
  1207                           ; 1 bytes @ 0xC
  1208  002C                     	ds	5
  1209  0031                     ___flmul@sign:
  1210                           
  1211                           ; 1 bytes @ 0x11
  1212  0031                     	ds	1
  1213  0032                     ___flmul@grs:
  1214                           
  1215                           ; 4 bytes @ 0x12
  1216  0032                     	ds	4
  1217  0036                     ___flmul@aexp:
  1218                           
  1219                           ; 1 bytes @ 0x16
  1220  0036                     	ds	1
  1221  0037                     ___flmul@bexp:
  1222                           
  1223                           ; 1 bytes @ 0x17
  1224  0037                     	ds	1
  1225  0038                     ___flmul@prod:
  1226                           
  1227                           ; 4 bytes @ 0x18
  1228  0038                     	ds	4
  1229  003C                     ___flmul@temp:
  1230                           
  1231                           ; 2 bytes @ 0x1C
  1232  003C                     	ds	2
  1233  003E                     ?_fround:
  1234  003E                     ?_scale:	
  1235                           ; 4 bytes @ 0x1E
  1236                           
  1237  003E                     ?___fldiv:	
  1238                           ; 4 bytes @ 0x1E
  1239                           
  1240  003E                     ___fldiv@a:	
  1241                           ; 4 bytes @ 0x1E
  1242                           
  1243                           
  1244                           ; 4 bytes @ 0x1E
  1245  003E                     	ds	4
  1246  0042                     ??_fround:
  1247  0042                     ??_scale:	
  1248                           ; 1 bytes @ 0x22
  1249                           
  1250  0042                     ___fldiv@b:	
  1251                           ; 1 bytes @ 0x22
  1252                           
  1253                           
  1254                           ; 4 bytes @ 0x22
  1255  0042                     	ds	4
  1256  0046                     ??___fldiv:
  1257                           
  1258                           ; 1 bytes @ 0x26
  1259  0046                     	ds	3
  1260  0049                     _fround$997:
  1261                           
  1262                           ; 4 bytes @ 0x29
  1263  0049                     	ds	2
  1264  004B                     ___fldiv@rem:
  1265                           
  1266                           ; 4 bytes @ 0x2B
  1267  004B                     	ds	1
  1268  004C                     _scale$998:
  1269                           
  1270                           ; 4 bytes @ 0x2C
  1271  004C                     	ds	1
  1272  004D                     _fround$996:
  1273                           
  1274                           ; 4 bytes @ 0x2D
  1275  004D                     	ds	2
  1276  004F                     ___fldiv@sign:
  1277                           
  1278                           ; 1 bytes @ 0x2F
  1279  004F                     	ds	1
  1280  0050                     scale@scl:
  1281  0050                     ___fldiv@new_exp:	
  1282                           ; 1 bytes @ 0x30
  1283                           
  1284                           
  1285                           ; 2 bytes @ 0x30
  1286  0050                     	ds	1
  1287  0051                     ?___fltol:
  1288  0051                     fround@prec:	
  1289                           ; 4 bytes @ 0x31
  1290                           
  1291  0051                     ___fltol@f1:	
  1292                           ; 1 bytes @ 0x31
  1293                           
  1294                           
  1295                           ; 4 bytes @ 0x31
  1296  0051                     	ds	1
  1297  0052                     ?___fladd:
  1298  0052                     ___fladd@b:	
  1299                           ; 4 bytes @ 0x32
  1300                           
  1301  0052                     ___fldiv@grs:	
  1302                           ; 4 bytes @ 0x32
  1303                           
  1304                           
  1305                           ; 4 bytes @ 0x32
  1306  0052                     	ds	3
  1307  0055                     ??___fltol:
  1308                           
  1309                           ; 1 bytes @ 0x35
  1310  0055                     	ds	1
  1311  0056                     ___fldiv@bexp:
  1312  0056                     ___fladd@a:	
  1313                           ; 1 bytes @ 0x36
  1314                           
  1315                           
  1316                           ; 4 bytes @ 0x36
  1317  0056                     	ds	1
  1318  0057                     ___fldiv@aexp:
  1319                           
  1320                           ; 1 bytes @ 0x37
  1321  0057                     	ds	1
  1322  0058                     ??_ADC_channel1:
  1323  0058                     ??_ADC_channel2:	
  1324                           ; 1 bytes @ 0x38
  1325                           
  1326                           
  1327                           ; 1 bytes @ 0x38
  1328  0058                     	ds	2
  1329  005A                     ??___fladd:
  1330  005A                     ___fltol@sign1:	
  1331                           ; 1 bytes @ 0x3A
  1332                           
  1333                           
  1334                           ; 1 bytes @ 0x3A
  1335  005A                     	ds	1
  1336  005B                     ___fltol@exp1:
  1337                           
  1338                           ; 1 bytes @ 0x3B
  1339  005B                     	ds	7
  1340  0062                     ___fladd@signs:
  1341                           
  1342                           ; 1 bytes @ 0x42
  1343  0062                     	ds	1
  1344  0063                     ___fladd@aexp:
  1345                           
  1346                           ; 1 bytes @ 0x43
  1347  0063                     	ds	1
  1348  0064                     ___fladd@bexp:
  1349                           
  1350                           ; 1 bytes @ 0x44
  1351  0064                     	ds	1
  1352  0065                     ___fladd@grs:
  1353                           
  1354                           ; 1 bytes @ 0x45
  1355  0065                     	ds	1
  1356  0066                     ?___flsub:
  1357  0066                     ___flsub@a:	
  1358                           ; 4 bytes @ 0x46
  1359                           
  1360                           
  1361                           ; 4 bytes @ 0x46
  1362  0066                     	ds	4
  1363  006A                     ___flsub@b:
  1364                           
  1365                           ; 4 bytes @ 0x4A
  1366  006A                     	ds	4
  1367  006E                     ??_float_to_string:
  1368                           
  1369                           ; 1 bytes @ 0x4E
  1370  006E                     	ds	1
  1371                           
  1372                           	psect	maintext
  1373  1B6F                     __pmaintext:	
  1374 ;;
  1375 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1376 ;;
  1377 ;; *************** function _main *****************
  1378 ;; Defined at:
  1379 ;;		line 93 in file "pseudocodigo_lab3.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : B00/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1393 ;;      Params:         0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0
  1395 ;;      Temps:          0       0       2       0       0
  1396 ;;      Totals:         0       0       2       0       0
  1397 ;;Total ram usage:        2 bytes
  1398 ;; Hardware stack levels required when called:    5
  1399 ;; This function calls:
  1400 ;;		_ADC_channel1
  1401 ;;		_ADC_channel2
  1402 ;;		_Lcd_Init
  1403 ;;		_Lcd_Set_Cursor
  1404 ;;		_Lcd_Write_String
  1405 ;;		_float_to_string
  1406 ;;		_setup
  1407 ;;		_titulos_LCD
  1408 ;; This function is called by:
  1409 ;;		Startup code after reset
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           
  1414                           ;psect for function _main
  1415  1B6F                     _main:
  1416  1B6F                     l3843:	
  1417                           ;incstack = 0
  1418                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1419                           
  1420                           
  1421                           ;pseudocodigo_lab3.c: 94:     setup();
  1422  1B6F  160A  158A  21A7  160A  158A  	fcall	_setup
  1423  1B74                     l3845:
  1424                           
  1425                           ;pseudocodigo_lab3.c: 95:     Lcd_Init();
  1426  1B74  160A  158A  23B6  160A  158A  	fcall	_Lcd_Init
  1427  1B79                     l3847:
  1428                           
  1429                           ;pseudocodigo_lab3.c: 96:     titulos_LCD();
  1430  1B79  160A  158A  22AF  160A  158A  	fcall	_titulos_LCD
  1431  1B7E                     l3849:
  1432                           
  1433                           ;pseudocodigo_lab3.c: 104:         ADC_channel1();
  1434  1B7E  160A  158A  25BE  160A  158A  	fcall	_ADC_channel1
  1435  1B83                     l3851:
  1436                           
  1437                           ;pseudocodigo_lab3.c: 105:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1438  1B83  3003               	movlw	3
  1439  1B84  1683               	bsf	3,5	;RP0=1, select bank1
  1440  1B85  1303               	bcf	3,6	;RP1=0, select bank1
  1441  1B86  00CA               	movwf	(??_main^(0+128)+1)
  1442  1B87  3097               	movlw	151
  1443  1B88  00C9               	movwf	??_main^(0+128)
  1444  1B89                     u6157:
  1445  1B89  0BC9               	decfsz	??_main^(0+128),f
  1446  1B8A  2B89               	goto	u6157
  1447  1B8B  0BCA               	decfsz	(??_main^(0+128)+1),f
  1448  1B8C  2B89               	goto	u6157
  1449  1B8D                     l3853:
  1450                           
  1451                           ;pseudocodigo_lab3.c: 106:         ADC_channel2();
  1452  1B8D  160A  158A  2631  160A  158A  	fcall	_ADC_channel2
  1453  1B92                     l3855:
  1454                           
  1455                           ;pseudocodigo_lab3.c: 107:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1456  1B92  3003               	movlw	3
  1457  1B93  1683               	bsf	3,5	;RP0=1, select bank1
  1458  1B94  1303               	bcf	3,6	;RP1=0, select bank1
  1459  1B95  00CA               	movwf	(??_main^(0+128)+1)
  1460  1B96  3097               	movlw	151
  1461  1B97  00C9               	movwf	??_main^(0+128)
  1462  1B98                     u6167:
  1463  1B98  0BC9               	decfsz	??_main^(0+128),f
  1464  1B99  2B98               	goto	u6167
  1465  1B9A  0BCA               	decfsz	(??_main^(0+128)+1),f
  1466  1B9B  2B98               	goto	u6167
  1467  1B9C                     l3857:
  1468                           
  1469                           ;pseudocodigo_lab3.c: 109:         float_to_string();
  1470  1B9C  160A  158A  21C2  160A  158A  	fcall	_float_to_string
  1471  1BA1                     l3859:
  1472                           
  1473                           ;pseudocodigo_lab3.c: 111:         Lcd_Set_Cursor(2,1);
  1474  1BA1  01F4               	clrf	Lcd_Set_Cursor@b
  1475  1BA2  0AF4               	incf	Lcd_Set_Cursor@b,f
  1476  1BA3  3002               	movlw	2
  1477  1BA4  160A  158A  2205  160A  158A  	fcall	_Lcd_Set_Cursor
  1478  1BA9                     l3861:
  1479                           
  1480                           ;pseudocodigo_lab3.c: 112:         Lcd_Write_String(data);
  1481  1BA9  30DB               	movlw	(low (_data| 0))& (0+255)
  1482  1BAA  00F3               	movwf	Lcd_Write_String@a
  1483  1BAB  3000               	movlw	0
  1484  1BAC  00F4               	movwf	Lcd_Write_String@a+1
  1485  1BAD  160A  158A  22E9  160A  158A  	fcall	_Lcd_Write_String
  1486  1BB2  2B7E               	goto	l3849
  1487  1BB3  120A  118A  2800   	ljmp	start
  1488  1BB6                     __end_of_main:
  1489                           
  1490                           	psect	text1
  1491  1AAF                     __ptext1:	
  1492 ;; *************** function _titulos_LCD *****************
  1493 ;; Defined at:
  1494 ;;		line 126 in file "pseudocodigo_lab3.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1508 ;;      Params:         0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0
  1510 ;;      Temps:          1       0       0       0       0
  1511 ;;      Totals:         1       0       0       0       0
  1512 ;;Total ram usage:        1 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    3
  1515 ;; This function calls:
  1516 ;;		_Lcd_Set_Cursor
  1517 ;;		_Lcd_Write_String
  1518 ;; This function is called by:
  1519 ;;		_main
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           
  1524                           ;psect for function _titulos_LCD
  1525  1AAF                     _titulos_LCD:
  1526  1AAF                     l3811:	
  1527                           ;incstack = 0
  1528                           ; Regs used in _titulos_LCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1529                           
  1530                           
  1531                           ;pseudocodigo_lab3.c: 128:         Lcd_Set_Cursor(1,2);
  1532  1AAF  3002               	movlw	2
  1533  1AB0  00FA               	movwf	??_titulos_LCD
  1534  1AB1  087A               	movf	??_titulos_LCD,w
  1535  1AB2  00F4               	movwf	Lcd_Set_Cursor@b
  1536  1AB3  3001               	movlw	1
  1537  1AB4  160A  158A  2205  160A  158A  	fcall	_Lcd_Set_Cursor
  1538  1AB9                     l3813:
  1539                           
  1540                           ;pseudocodigo_lab3.c: 129:         Lcd_Write_String("S1:");
  1541  1AB9  309E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1542  1ABA  00F3               	movwf	Lcd_Write_String@a
  1543  1ABB  3080               	movlw	128
  1544  1ABC  00F4               	movwf	Lcd_Write_String@a+1
  1545  1ABD  160A  158A  22E9  160A  158A  	fcall	_Lcd_Write_String
  1546  1AC2                     l3815:
  1547                           
  1548                           ;pseudocodigo_lab3.c: 130:         Lcd_Set_Cursor(1,8);
  1549  1AC2  3008               	movlw	8
  1550  1AC3  00FA               	movwf	??_titulos_LCD
  1551  1AC4  087A               	movf	??_titulos_LCD,w
  1552  1AC5  00F4               	movwf	Lcd_Set_Cursor@b
  1553  1AC6  3001               	movlw	1
  1554  1AC7  160A  158A  2205  160A  158A  	fcall	_Lcd_Set_Cursor
  1555                           
  1556                           ;pseudocodigo_lab3.c: 131:         Lcd_Write_String("S2:");
  1557  1ACC  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1558  1ACD  00F3               	movwf	Lcd_Write_String@a
  1559  1ACE  3080               	movlw	128
  1560  1ACF  00F4               	movwf	Lcd_Write_String@a+1
  1561  1AD0  160A  158A  22E9  160A  158A  	fcall	_Lcd_Write_String
  1562  1AD5                     l3817:
  1563                           
  1564                           ;pseudocodigo_lab3.c: 132:         Lcd_Set_Cursor(1,13);
  1565  1AD5  300D               	movlw	13
  1566  1AD6  00FA               	movwf	??_titulos_LCD
  1567  1AD7  087A               	movf	??_titulos_LCD,w
  1568  1AD8  00F4               	movwf	Lcd_Set_Cursor@b
  1569  1AD9  3001               	movlw	1
  1570  1ADA  160A  158A  2205  160A  158A  	fcall	_Lcd_Set_Cursor
  1571  1ADF                     l3819:
  1572                           
  1573                           ;pseudocodigo_lab3.c: 133:         Lcd_Write_String("S3:");
  1574  1ADF  30A6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1575  1AE0  00F3               	movwf	Lcd_Write_String@a
  1576  1AE1  3080               	movlw	128
  1577  1AE2  00F4               	movwf	Lcd_Write_String@a+1
  1578  1AE3  160A  158A  22E9  160A  158A  	fcall	_Lcd_Write_String
  1579  1AE8                     l71:
  1580  1AE8  0008               	return
  1581  1AE9                     __end_of_titulos_LCD:
  1582                           
  1583                           	psect	text2
  1584  1AE9                     __ptext2:	
  1585 ;; *************** function _Lcd_Write_String *****************
  1586 ;; Defined at:
  1587 ;;		line 110 in file "LCD.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  a               2    3[COMMON] PTR unsigned char 
  1590 ;;		 -> STR_3(4), STR_2(4), STR_1(4), data(16), 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  i               2    8[COMMON] int 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1602 ;;      Params:         2       0       0       0       0
  1603 ;;      Locals:         2       0       0       0       0
  1604 ;;      Temps:          3       0       0       0       0
  1605 ;;      Totals:         7       0       0       0       0
  1606 ;;Total ram usage:        7 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    2
  1609 ;; This function calls:
  1610 ;;		_Lcd_Write_Char
  1611 ;; This function is called by:
  1612 ;;		_main
  1613 ;;		_titulos_LCD
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           
  1618                           ;psect for function _Lcd_Write_String
  1619  1AE9                     _Lcd_Write_String:
  1620  1AE9                     l3335:	
  1621                           ;incstack = 0
  1622                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1623                           
  1624                           
  1625                           ;LCD.c: 111:  int i;;LCD.c: 112:  for(i=0;a[i]!='\0';i++)
  1626  1AE9  01F8               	clrf	Lcd_Write_String@i
  1627  1AEA  01F9               	clrf	Lcd_Write_String@i+1
  1628  1AEB  2B0E               	goto	l3341
  1629  1AEC                     l3337:
  1630                           
  1631                           ;LCD.c: 113:     Lcd_Write_Char(a[i]);
  1632  1AEC  0878               	movf	Lcd_Write_String@i,w
  1633  1AED  0773               	addwf	Lcd_Write_String@a,w
  1634  1AEE  00F6               	movwf	??_Lcd_Write_String+1
  1635  1AEF  0874               	movf	Lcd_Write_String@a+1,w
  1636  1AF0  00F5               	movwf	??_Lcd_Write_String
  1637  1AF1  1803               	skipnc
  1638  1AF2  0AF5               	incf	??_Lcd_Write_String,f
  1639  1AF3  1FF8               	btfss	Lcd_Write_String@i,7
  1640  1AF4  2AF6               	goto	u5330
  1641  1AF5  03F5               	decf	??_Lcd_Write_String,f
  1642  1AF6                     u5330:
  1643  1AF6  0875               	movf	??_Lcd_Write_String,w
  1644  1AF7  00F7               	movwf	??_Lcd_Write_String+2
  1645  1AF8  0877               	movf	??_Lcd_Write_String+2,w
  1646  1AF9  1283               	bcf	3,5	;RP0=0, select bank0
  1647  1AFA  1303               	bcf	3,6	;RP1=0, select bank0
  1648  1AFB  00FF               	movwf	btemp+1
  1649  1AFC  0876               	movf	??_Lcd_Write_String+1,w
  1650  1AFD  0084               	movwf	4
  1651  1AFE  160A  158A  2000  160A  158A  	fcall	stringtab
  1652  1B03  160A  118A  2001  160A  158A  	fcall	_Lcd_Write_Char
  1653  1B08                     l3339:
  1654  1B08  3001               	movlw	1
  1655  1B09  07F8               	addwf	Lcd_Write_String@i,f
  1656  1B0A  1803               	skipnc
  1657  1B0B  0AF9               	incf	Lcd_Write_String@i+1,f
  1658  1B0C  3000               	movlw	0
  1659  1B0D  07F9               	addwf	Lcd_Write_String@i+1,f
  1660  1B0E                     l3341:
  1661  1B0E  0878               	movf	Lcd_Write_String@i,w
  1662  1B0F  0773               	addwf	Lcd_Write_String@a,w
  1663  1B10  00F6               	movwf	??_Lcd_Write_String+1
  1664  1B11  0874               	movf	Lcd_Write_String@a+1,w
  1665  1B12  00F5               	movwf	??_Lcd_Write_String
  1666  1B13  1803               	skipnc
  1667  1B14  0AF5               	incf	??_Lcd_Write_String,f
  1668  1B15  1FF8               	btfss	Lcd_Write_String@i,7
  1669  1B16  2B18               	goto	u5340
  1670  1B17  03F5               	decf	??_Lcd_Write_String,f
  1671  1B18                     u5340:
  1672  1B18  0875               	movf	??_Lcd_Write_String,w
  1673  1B19  00F7               	movwf	??_Lcd_Write_String+2
  1674  1B1A  0877               	movf	??_Lcd_Write_String+2,w
  1675  1B1B  1283               	bcf	3,5	;RP0=0, select bank0
  1676  1B1C  1303               	bcf	3,6	;RP1=0, select bank0
  1677  1B1D  00FF               	movwf	btemp+1
  1678  1B1E  0876               	movf	??_Lcd_Write_String+1,w
  1679  1B1F  0084               	movwf	4
  1680  1B20  160A  158A  2000  160A  158A  	fcall	stringtab
  1681  1B25  3A00               	xorlw	0
  1682  1B26  1D03               	skipz
  1683  1B27  2B29               	goto	u5351
  1684  1B28  2B2A               	goto	u5350
  1685  1B29                     u5351:
  1686  1B29  2AEC               	goto	l3337
  1687  1B2A                     u5350:
  1688  1B2A                     l142:
  1689  1B2A  0008               	return
  1690  1B2B                     __end_of_Lcd_Write_String:
  1691                           
  1692                           	psect	text3
  1693  1001                     __ptext3:	
  1694 ;; *************** function _Lcd_Write_Char *****************
  1695 ;; Defined at:
  1696 ;;		line 101 in file "LCD.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  a               1    wreg     unsigned char 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  a               1    2[COMMON] unsigned char 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2, status,0, pclath, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1710 ;;      Params:         0       0       0       0       0
  1711 ;;      Locals:         1       0       0       0       0
  1712 ;;      Temps:          1       0       0       0       0
  1713 ;;      Totals:         2       0       0       0       0
  1714 ;;Total ram usage:        2 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    1
  1717 ;; This function calls:
  1718 ;;		_Lcd_Port
  1719 ;; This function is called by:
  1720 ;;		_Lcd_Write_String
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           
  1725                           ;psect for function _Lcd_Write_Char
  1726  1001                     _Lcd_Write_Char:
  1727                           
  1728                           ;incstack = 0
  1729                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1730                           ;Lcd_Write_Char@a stored from wreg
  1731  1001  00F2               	movwf	Lcd_Write_Char@a
  1732  1002                     l2955:
  1733                           
  1734                           ;LCD.c: 102:    PORTEbits.RE0 = 1;
  1735  1002  1283               	bcf	3,5	;RP0=0, select bank0
  1736  1003  1303               	bcf	3,6	;RP1=0, select bank0
  1737  1004  1409               	bsf	9,0	;volatile
  1738  1005                     l2957:
  1739                           
  1740                           ;LCD.c: 103:    Lcd_Port(a);
  1741  1005  0872               	movf	Lcd_Write_Char@a,w
  1742  1006  120A  158A  2000  160A  118A  	fcall	_Lcd_Port
  1743  100B                     l2959:
  1744                           
  1745                           ;LCD.c: 104:    PORTEbits.RE2 = 1;
  1746  100B  1283               	bcf	3,5	;RP0=0, select bank0
  1747  100C  1303               	bcf	3,6	;RP1=0, select bank0
  1748  100D  1509               	bsf	9,2	;volatile
  1749  100E                     l2961:
  1750                           
  1751                           ;LCD.c: 105:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1752  100E  301A               	movlw	26
  1753  100F  00F1               	movwf	??_Lcd_Write_Char
  1754  1010                     u6177:
  1755  1010  0BF1               	decfsz	??_Lcd_Write_Char,f
  1756  1011  2810               	goto	u6177
  1757  1012  0000               	nop
  1758  1013                     l2963:
  1759                           
  1760                           ;LCD.c: 106:    PORTEbits.RE2 = 0;
  1761  1013  1283               	bcf	3,5	;RP0=0, select bank0
  1762  1014  1303               	bcf	3,6	;RP1=0, select bank0
  1763  1015  1109               	bcf	9,2	;volatile
  1764  1016                     l136:
  1765  1016  0008               	return
  1766  1017                     __end_of_Lcd_Write_Char:
  1767                           
  1768                           	psect	text4
  1769  1A05                     __ptext4:	
  1770 ;; *************** function _Lcd_Set_Cursor *****************
  1771 ;; Defined at:
  1772 ;;		line 88 in file "LCD.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  a               1    wreg     unsigned char 
  1775 ;;  b               1    4[COMMON] unsigned char 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  a               1    6[COMMON] unsigned char 
  1778 ;;  temp            1    7[COMMON] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, status,0, pclath, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1788 ;;      Params:         1       0       0       0       0
  1789 ;;      Locals:         2       0       0       0       0
  1790 ;;      Temps:          1       0       0       0       0
  1791 ;;      Totals:         4       0       0       0       0
  1792 ;;Total ram usage:        4 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    2
  1795 ;; This function calls:
  1796 ;;		_Lcd_Cmd
  1797 ;; This function is called by:
  1798 ;;		_main
  1799 ;;		_titulos_LCD
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function _Lcd_Set_Cursor
  1805  1A05                     _Lcd_Set_Cursor:
  1806                           
  1807                           ;incstack = 0
  1808                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1809                           ;Lcd_Set_Cursor@a stored from wreg
  1810  1A05  00F6               	movwf	Lcd_Set_Cursor@a
  1811  1A06                     l3323:
  1812                           
  1813                           ;LCD.c: 89:  char temp;;LCD.c: 90:  if(a == 1){
  1814  1A06  0376               	decf	Lcd_Set_Cursor@a,w
  1815  1A07  1D03               	btfss	3,2
  1816  1A08  2A0A               	goto	u5311
  1817  1A09  2A0B               	goto	u5310
  1818  1A0A                     u5311:
  1819  1A0A  2A17               	goto	l3329
  1820  1A0B                     u5310:
  1821  1A0B                     l3325:
  1822                           
  1823                           ;LCD.c: 91:         temp = 0x80 + b - 1;
  1824  1A0B  0874               	movf	Lcd_Set_Cursor@b,w
  1825  1A0C  3E7F               	addlw	127
  1826  1A0D  00F5               	movwf	??_Lcd_Set_Cursor
  1827  1A0E  0875               	movf	??_Lcd_Set_Cursor,w
  1828  1A0F  00F7               	movwf	Lcd_Set_Cursor@temp
  1829  1A10                     l3327:
  1830                           
  1831                           ;LCD.c: 92:         Lcd_Cmd(temp);
  1832  1A10  0877               	movf	Lcd_Set_Cursor@temp,w
  1833  1A11  160A  158A  218D  160A  158A  	fcall	_Lcd_Cmd
  1834                           
  1835                           ;LCD.c: 93:  }
  1836  1A16  2A28               	goto	l133
  1837  1A17                     l3329:
  1838  1A17  3002               	movlw	2
  1839  1A18  0676               	xorwf	Lcd_Set_Cursor@a,w
  1840  1A19  1D03               	btfss	3,2
  1841  1A1A  2A1C               	goto	u5321
  1842  1A1B  2A1D               	goto	u5320
  1843  1A1C                     u5321:
  1844  1A1C  2A28               	goto	l133
  1845  1A1D                     u5320:
  1846  1A1D                     l3331:
  1847                           
  1848                           ;LCD.c: 95:   temp = 0xC0 + b - 1;
  1849  1A1D  0874               	movf	Lcd_Set_Cursor@b,w
  1850  1A1E  3EBF               	addlw	191
  1851  1A1F  00F5               	movwf	??_Lcd_Set_Cursor
  1852  1A20  0875               	movf	??_Lcd_Set_Cursor,w
  1853  1A21  00F7               	movwf	Lcd_Set_Cursor@temp
  1854  1A22                     l3333:
  1855                           
  1856                           ;LCD.c: 96:   Lcd_Cmd(temp);
  1857  1A22  0877               	movf	Lcd_Set_Cursor@temp,w
  1858  1A23  160A  158A  218D  160A  158A  	fcall	_Lcd_Cmd
  1859  1A28                     l133:
  1860  1A28  0008               	return
  1861  1A29                     __end_of_Lcd_Set_Cursor:
  1862                           
  1863                           	psect	text5
  1864  19A7                     __ptext5:	
  1865 ;; *************** function _setup *****************
  1866 ;; Defined at:
  1867 ;;		line 169 in file "pseudocodigo_lab3.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;		None
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;		None
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1881 ;;      Params:         0       0       0       0       0
  1882 ;;      Locals:         0       0       0       0       0
  1883 ;;      Temps:          0       0       0       0       0
  1884 ;;      Totals:         0       0       0       0       0
  1885 ;;Total ram usage:        0 bytes
  1886 ;; Hardware stack levels used:    1
  1887 ;; Hardware stack levels required when called:    1
  1888 ;; This function calls:
  1889 ;;		_initOsc
  1890 ;; This function is called by:
  1891 ;;		_main
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           
  1896                           ;psect for function _setup
  1897  19A7                     _setup:
  1898  19A7                     l3775:	
  1899                           ;incstack = 0
  1900                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1901                           
  1902                           
  1903                           ;pseudocodigo_lab3.c: 170:     initOsc(0b00000110);
  1904  19A7  3006               	movlw	6
  1905  19A8  160A  158A  24FC  160A  158A  	fcall	_initOsc
  1906  19AD                     l3777:
  1907                           
  1908                           ;pseudocodigo_lab3.c: 171:     ANSEL = 0b00000011;
  1909  19AD  3003               	movlw	3
  1910  19AE  1683               	bsf	3,5	;RP0=1, select bank3
  1911  19AF  1703               	bsf	3,6	;RP1=1, select bank3
  1912  19B0  0088               	movwf	8	;volatile
  1913  19B1                     l3779:
  1914                           
  1915                           ;pseudocodigo_lab3.c: 172:     ANSELH = 0;
  1916  19B1  0189               	clrf	9	;volatile
  1917  19B2                     l3781:
  1918                           
  1919                           ;pseudocodigo_lab3.c: 173:     TRISA = 0b00000011;
  1920  19B2  3003               	movlw	3
  1921  19B3  1683               	bsf	3,5	;RP0=1, select bank1
  1922  19B4  1303               	bcf	3,6	;RP1=0, select bank1
  1923  19B5  0085               	movwf	5	;volatile
  1924  19B6                     l3783:
  1925                           
  1926                           ;pseudocodigo_lab3.c: 174:     TRISB = 0;
  1927  19B6  0186               	clrf	6	;volatile
  1928  19B7                     l3785:
  1929                           
  1930                           ;pseudocodigo_lab3.c: 175:     TRISC = 0;
  1931  19B7  0187               	clrf	7	;volatile
  1932  19B8                     l3787:
  1933                           
  1934                           ;pseudocodigo_lab3.c: 176:     TRISD = 0;
  1935  19B8  0188               	clrf	8	;volatile
  1936  19B9                     l3789:
  1937                           
  1938                           ;pseudocodigo_lab3.c: 177:     TRISE = 0;
  1939  19B9  0189               	clrf	9	;volatile
  1940  19BA                     l3791:
  1941                           
  1942                           ;pseudocodigo_lab3.c: 178:     PORTA = 0;
  1943  19BA  1283               	bcf	3,5	;RP0=0, select bank0
  1944  19BB  1303               	bcf	3,6	;RP1=0, select bank0
  1945  19BC  0185               	clrf	5	;volatile
  1946  19BD                     l3793:
  1947                           
  1948                           ;pseudocodigo_lab3.c: 179:     PORTB = 0;
  1949  19BD  0186               	clrf	6	;volatile
  1950  19BE                     l3795:
  1951                           
  1952                           ;pseudocodigo_lab3.c: 180:     PORTC = 0;
  1953  19BE  0187               	clrf	7	;volatile
  1954  19BF                     l3797:
  1955                           
  1956                           ;pseudocodigo_lab3.c: 181:     PORTD = 0;
  1957  19BF  0188               	clrf	8	;volatile
  1958  19C0                     l3799:
  1959                           
  1960                           ;pseudocodigo_lab3.c: 182:     PORTE = 0;
  1961  19C0  0189               	clrf	9	;volatile
  1962  19C1                     l89:
  1963  19C1  0008               	return
  1964  19C2                     __end_of_setup:
  1965                           
  1966                           	psect	text6
  1967  1CFC                     __ptext6:	
  1968 ;; *************** function _initOsc *****************
  1969 ;; Defined at:
  1970 ;;		line 3 in file "Oscilador.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  IRCF            1    wreg     unsigned char 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  IRCF            1    2[COMMON] unsigned char 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         0       0       0       0       0
  1985 ;;      Locals:         1       0       0       0       0
  1986 ;;      Temps:          2       0       0       0       0
  1987 ;;      Totals:         3       0       0       0       0
  1988 ;;Total ram usage:        3 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_setup
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           
  1998                           ;psect for function _initOsc
  1999  1CFC                     _initOsc:
  2000                           
  2001                           ;incstack = 0
  2002                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  2003                           ;initOsc@IRCF stored from wreg
  2004  1CFC  00F2               	movwf	initOsc@IRCF
  2005  1CFD                     l3623:
  2006                           
  2007                           ;Oscilador.c: 5:     switch(IRCF){
  2008  1CFD  2D34               	goto	l3627
  2009  1CFE                     l95:	
  2010                           ;Oscilador.c: 6:         case 0:
  2011                           
  2012                           
  2013                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  2014  1CFE  1683               	bsf	3,5	;RP0=1, select bank1
  2015  1CFF  1303               	bcf	3,6	;RP1=0, select bank1
  2016  1D00  130F               	bcf	15,6	;volatile
  2017                           
  2018                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  2019  1D01  128F               	bcf	15,5	;volatile
  2020                           
  2021                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  2022  1D02  120F               	bcf	15,4	;volatile
  2023                           
  2024                           ;Oscilador.c: 10:             break;
  2025  1D03  2D56               	goto	l96
  2026  1D04                     l97:	
  2027                           ;Oscilador.c: 11:          case 1:
  2028                           
  2029                           
  2030                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  2031  1D04  1683               	bsf	3,5	;RP0=1, select bank1
  2032  1D05  1303               	bcf	3,6	;RP1=0, select bank1
  2033  1D06  130F               	bcf	15,6	;volatile
  2034                           
  2035                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  2036  1D07  128F               	bcf	15,5	;volatile
  2037                           
  2038                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  2039  1D08  160F               	bsf	15,4	;volatile
  2040                           
  2041                           ;Oscilador.c: 15:             break;
  2042  1D09  2D56               	goto	l96
  2043  1D0A                     l98:	
  2044                           ;Oscilador.c: 16:         case 2:
  2045                           
  2046                           
  2047                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  2048  1D0A  1683               	bsf	3,5	;RP0=1, select bank1
  2049  1D0B  1303               	bcf	3,6	;RP1=0, select bank1
  2050  1D0C  130F               	bcf	15,6	;volatile
  2051                           
  2052                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  2053  1D0D  168F               	bsf	15,5	;volatile
  2054                           
  2055                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  2056  1D0E  120F               	bcf	15,4	;volatile
  2057                           
  2058                           ;Oscilador.c: 20:             break;
  2059  1D0F  2D56               	goto	l96
  2060  1D10                     l99:	
  2061                           ;Oscilador.c: 21:         case 3:
  2062                           
  2063                           
  2064                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  2065  1D10  1683               	bsf	3,5	;RP0=1, select bank1
  2066  1D11  1303               	bcf	3,6	;RP1=0, select bank1
  2067  1D12  130F               	bcf	15,6	;volatile
  2068                           
  2069                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  2070  1D13  168F               	bsf	15,5	;volatile
  2071                           
  2072                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  2073  1D14  160F               	bsf	15,4	;volatile
  2074                           
  2075                           ;Oscilador.c: 25:             break;
  2076  1D15  2D56               	goto	l96
  2077  1D16                     l100:	
  2078                           ;Oscilador.c: 26:         case 4:
  2079                           
  2080                           
  2081                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  2082  1D16  1683               	bsf	3,5	;RP0=1, select bank1
  2083  1D17  1303               	bcf	3,6	;RP1=0, select bank1
  2084  1D18  170F               	bsf	15,6	;volatile
  2085                           
  2086                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  2087  1D19  128F               	bcf	15,5	;volatile
  2088                           
  2089                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  2090  1D1A  120F               	bcf	15,4	;volatile
  2091                           
  2092                           ;Oscilador.c: 30:             break;
  2093  1D1B  2D56               	goto	l96
  2094  1D1C                     l101:	
  2095                           ;Oscilador.c: 31:         case 5:
  2096                           
  2097                           
  2098                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  2099  1D1C  1683               	bsf	3,5	;RP0=1, select bank1
  2100  1D1D  1303               	bcf	3,6	;RP1=0, select bank1
  2101  1D1E  170F               	bsf	15,6	;volatile
  2102                           
  2103                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  2104  1D1F  128F               	bcf	15,5	;volatile
  2105                           
  2106                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  2107  1D20  160F               	bsf	15,4	;volatile
  2108                           
  2109                           ;Oscilador.c: 35:             break;
  2110  1D21  2D56               	goto	l96
  2111  1D22                     l102:	
  2112                           ;Oscilador.c: 36:         case 6:
  2113                           
  2114                           
  2115                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  2116  1D22  1683               	bsf	3,5	;RP0=1, select bank1
  2117  1D23  1303               	bcf	3,6	;RP1=0, select bank1
  2118  1D24  170F               	bsf	15,6	;volatile
  2119                           
  2120                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  2121  1D25  168F               	bsf	15,5	;volatile
  2122                           
  2123                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  2124  1D26  120F               	bcf	15,4	;volatile
  2125                           
  2126                           ;Oscilador.c: 40:             break;
  2127  1D27  2D56               	goto	l96
  2128  1D28                     l103:	
  2129                           ;Oscilador.c: 41:         case 7:
  2130                           
  2131                           
  2132                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  2133  1D28  1683               	bsf	3,5	;RP0=1, select bank1
  2134  1D29  1303               	bcf	3,6	;RP1=0, select bank1
  2135  1D2A  170F               	bsf	15,6	;volatile
  2136                           
  2137                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  2138  1D2B  168F               	bsf	15,5	;volatile
  2139                           
  2140                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  2141  1D2C  160F               	bsf	15,4	;volatile
  2142                           
  2143                           ;Oscilador.c: 45:             break;
  2144  1D2D  2D56               	goto	l96
  2145  1D2E                     l104:	
  2146                           ;Oscilador.c: 46:         default:
  2147                           
  2148                           
  2149                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  2150  1D2E  1683               	bsf	3,5	;RP0=1, select bank1
  2151  1D2F  1303               	bcf	3,6	;RP1=0, select bank1
  2152  1D30  170F               	bsf	15,6	;volatile
  2153                           
  2154                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  2155  1D31  168F               	bsf	15,5	;volatile
  2156                           
  2157                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  2158  1D32  120F               	bcf	15,4	;volatile
  2159                           
  2160                           ;Oscilador.c: 50:             break;
  2161  1D33  2D56               	goto	l96
  2162  1D34                     l3627:
  2163  1D34  0872               	movf	initOsc@IRCF,w
  2164  1D35  00F0               	movwf	??_initOsc
  2165  1D36  01F1               	clrf	??_initOsc+1
  2166                           
  2167                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2168                           ; Switch size 1, requested type "simple"
  2169                           ; Number of cases is 1, Range of values is 0 to 0
  2170                           ; switch strategies available:
  2171                           ; Name         Instructions Cycles
  2172                           ; simple_byte            4     3 (average)
  2173                           ; direct_byte           11     8 (fixed)
  2174                           ; jumptable            260     6 (fixed)
  2175                           ;	Chosen strategy is simple_byte
  2176  1D37  0871               	movf	??_initOsc+1,w
  2177  1D38  3A00               	xorlw	0	; case 0
  2178  1D39  1903               	skipnz
  2179  1D3A  2D3C               	goto	l3955
  2180  1D3B  2D2E               	goto	l104
  2181  1D3C                     l3955:
  2182                           
  2183                           ; Switch size 1, requested type "simple"
  2184                           ; Number of cases is 8, Range of values is 0 to 7
  2185                           ; switch strategies available:
  2186                           ; Name         Instructions Cycles
  2187                           ; simple_byte           25    13 (average)
  2188                           ; direct_byte           32     8 (fixed)
  2189                           ; jumptable            260     6 (fixed)
  2190                           ;	Chosen strategy is simple_byte
  2191  1D3C  0870               	movf	??_initOsc,w
  2192  1D3D  3A00               	xorlw	0	; case 0
  2193  1D3E  1903               	skipnz
  2194  1D3F  2CFE               	goto	l95
  2195  1D40  3A01               	xorlw	1	; case 1
  2196  1D41  1903               	skipnz
  2197  1D42  2D04               	goto	l97
  2198  1D43  3A03               	xorlw	3	; case 2
  2199  1D44  1903               	skipnz
  2200  1D45  2D0A               	goto	l98
  2201  1D46  3A01               	xorlw	1	; case 3
  2202  1D47  1903               	skipnz
  2203  1D48  2D10               	goto	l99
  2204  1D49  3A07               	xorlw	7	; case 4
  2205  1D4A  1903               	skipnz
  2206  1D4B  2D16               	goto	l100
  2207  1D4C  3A01               	xorlw	1	; case 5
  2208  1D4D  1903               	skipnz
  2209  1D4E  2D1C               	goto	l101
  2210  1D4F  3A03               	xorlw	3	; case 6
  2211  1D50  1903               	skipnz
  2212  1D51  2D22               	goto	l102
  2213  1D52  3A01               	xorlw	1	; case 7
  2214  1D53  1903               	skipnz
  2215  1D54  2D28               	goto	l103
  2216  1D55  2D2E               	goto	l104
  2217  1D56                     l96:
  2218                           
  2219                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  2220  1D56  140F               	bsf	15,0	;volatile
  2221  1D57                     l105:
  2222  1D57  0008               	return
  2223  1D58                     __end_of_initOsc:
  2224                           
  2225                           	psect	text7
  2226  19C2                     __ptext7:	
  2227 ;; *************** function _float_to_string *****************
  2228 ;; Defined at:
  2229 ;;		line 154 in file "pseudocodigo_lab3.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2243 ;;      Params:         0       0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0
  2245 ;;      Temps:          0       1       0       0       0
  2246 ;;      Totals:         0       1       0       0       0
  2247 ;;Total ram usage:        1 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    4
  2250 ;; This function calls:
  2251 ;;		_sprintf
  2252 ;; This function is called by:
  2253 ;;		_main
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           
  2258                           ;psect for function _float_to_string
  2259  19C2                     _float_to_string:
  2260  19C2                     l3841:	
  2261                           ;incstack = 0
  2262                           ; Regs used in _float_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2263                           
  2264                           
  2265                           ;pseudocodigo_lab3.c: 155:     sprintf(data, "%1.2f  " "%1.2f", S2_val, S1_val);
  2266  19C2  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2267  19C3  1283               	bcf	3,5	;RP0=0, select bank0
  2268  19C4  1303               	bcf	3,6	;RP1=0, select bank0
  2269  19C5  00EE               	movwf	??_float_to_string
  2270  19C6  086E               	movf	??_float_to_string,w
  2271  19C7  1683               	bsf	3,5	;RP0=1, select bank1
  2272  19C8  1303               	bcf	3,6	;RP1=0, select bank1
  2273  19C9  00A0               	movwf	sprintf@f^(0+128)
  2274  19CA  084E               	movf	(_S2_val+3)^(0+128),w
  2275  19CB  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2276  19CC  084D               	movf	(_S2_val+2)^(0+128),w
  2277  19CD  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2278  19CE  084C               	movf	(_S2_val+1)^(0+128),w
  2279  19CF  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2280  19D0  084B               	movf	_S2_val^(0+128),w
  2281  19D1  00A1               	movwf	(?_sprintf^(0+128)+1)
  2282  19D2  0852               	movf	(_S1_val+3)^(0+128),w
  2283  19D3  00A8               	movwf	((?_sprintf+3)^(0+128)+5)
  2284  19D4  0851               	movf	(_S1_val+2)^(0+128),w
  2285  19D5  00A7               	movwf	((?_sprintf+2)^(0+128)+5)
  2286  19D6  0850               	movf	(_S1_val+1)^(0+128),w
  2287  19D7  00A6               	movwf	((?_sprintf+1)^(0+128)+5)
  2288  19D8  084F               	movf	_S1_val^(0+128),w
  2289  19D9  00A5               	movwf	(?_sprintf^(0+128)+5)
  2290  19DA  30DB               	movlw	(low (_data| 0))& (0+255)
  2291  19DB  120A  118A  2075  160A  158A  	fcall	_sprintf
  2292  19E0                     l86:
  2293  19E0  0008               	return
  2294  19E1                     __end_of_float_to_string:
  2295                           
  2296                           	psect	text8
  2297  0075                     __ptext8:	
  2298 ;; *************** function _sprintf *****************
  2299 ;; Defined at:
  2300 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  sp              1    wreg     PTR unsigned char 
  2303 ;;		 -> data(16), 
  2304 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2305 ;;		 -> STR_4(13), 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  sp              1   37[BANK1 ] PTR unsigned char 
  2308 ;;		 -> data(16), 
  2309 ;;  fval            4   33[BANK1 ] PTR unsigned char 
  2310 ;;  tmpval          4   27[BANK1 ] struct .
  2311 ;;  val             4   19[BANK1 ] unsigned long 
  2312 ;;  prec            2   38[BANK1 ] int 
  2313 ;;  eexp            2   31[BANK1 ] int 
  2314 ;;  width           2   25[BANK1 ] int 
  2315 ;;  flag            2   23[BANK1 ] unsigned short 
  2316 ;;  cp              2    0        PTR const unsigned char 
  2317 ;;  len             2    0        unsigned int 
  2318 ;;  c               1   40[BANK1 ] unsigned char 
  2319 ;;  ap              1   18[BANK1 ] PTR void [1]
  2320 ;;		 -> ?_sprintf(2), 
  2321 ;;  d               1    0        unsigned char 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  2    0[BANK1 ] int 
  2324 ;; Registers used:
  2325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2331 ;;      Params:         0       0       9       0       0
  2332 ;;      Locals:         0       0      27       0       0
  2333 ;;      Temps:          0       0       5       0       0
  2334 ;;      Totals:         0       0      41       0       0
  2335 ;;Total ram usage:       41 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    3
  2338 ;; This function calls:
  2339 ;;		___awdiv
  2340 ;;		___fladd
  2341 ;;		___fleq
  2342 ;;		___flge
  2343 ;;		___flmul
  2344 ;;		___flneg
  2345 ;;		___flsub
  2346 ;;		___fltol
  2347 ;;		___lldiv
  2348 ;;		___llmod
  2349 ;;		___wmul
  2350 ;;		___xxtofl
  2351 ;;		__div_to_l_
  2352 ;;		__tdiv_to_l_
  2353 ;;		_fround
  2354 ;;		_isdigit
  2355 ;;		_scale
  2356 ;; This function is called by:
  2357 ;;		_float_to_string
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function _sprintf
  2363  0075                     _sprintf:
  2364                           
  2365                           ;incstack = 0
  2366                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2367                           ;sprintf@sp stored from wreg
  2368  0075  1683               	bsf	3,5	;RP0=1, select bank1
  2369  0076  1303               	bcf	3,6	;RP1=0, select bank1
  2370  0077  00C5               	movwf	sprintf@sp^(0+128)
  2371  0078                     l3361:
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2374  0078  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2375  0079  00A9               	movwf	??_sprintf^(0+128)
  2376  007A  0829               	movf	??_sprintf^(0+128),w
  2377  007B  00B2               	movwf	sprintf@ap^(0+128)
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2380  007C  2FD9               	goto	l3611
  2381  007D                     l3363:
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2384  007D  3025               	movlw	37
  2385  007E  0648               	xorwf	sprintf@c^(0+128),w
  2386  007F  1903               	btfsc	3,2
  2387  0080  2882               	goto	u5361
  2388  0081  2883               	goto	u5360
  2389  0082                     u5361:
  2390  0082  288F               	goto	l3369
  2391  0083                     u5360:
  2392  0083                     l3365:
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2395  0083  0848               	movf	sprintf@c^(0+128),w
  2396  0084  00A9               	movwf	??_sprintf^(0+128)
  2397  0085  0845               	movf	sprintf@sp^(0+128),w
  2398  0086  0084               	movwf	4
  2399  0087  0829               	movf	??_sprintf^(0+128),w
  2400  0088  1383               	bcf	3,7	;select IRP bank0
  2401  0089  0080               	movwf	0
  2402  008A                     l3367:
  2403  008A  3001               	movlw	1
  2404  008B  00A9               	movwf	??_sprintf^(0+128)
  2405  008C  0829               	movf	??_sprintf^(0+128),w
  2406  008D  07C5               	addwf	sprintf@sp^(0+128),f
  2407                           
  2408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2409  008E  2FD9               	goto	l3611
  2410  008F                     l3369:
  2411                           
  2412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2413  008F  01B9               	clrf	sprintf@width^(0+128)
  2414  0090  01BA               	clrf	(sprintf@width+1)^(0+128)
  2415                           
  2416                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2417  0091  01B7               	clrf	sprintf@flag^(0+128)
  2418  0092  01B8               	clrf	(sprintf@flag+1)^(0+128)
  2419  0093                     l3371:
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2422  0093  0820               	movf	sprintf@f^(0+128),w
  2423  0094  0084               	movwf	4
  2424  0095  160A  158A  200A  120A  118A  	fcall	stringdir
  2425  009A  160A  158A  217B  120A  118A  	fcall	_isdigit
  2426  009F  1C03               	btfss	3,0
  2427  00A0  28A2               	goto	u5371
  2428  00A1  28A3               	goto	u5370
  2429  00A2                     u5371:
  2430  00A2  28E3               	goto	l3383
  2431  00A3                     u5370:
  2432  00A3                     l3373:
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2435  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  2436  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  2437  00A5  01B9               	clrf	sprintf@width^(0+128)
  2438  00A6  01BA               	clrf	(sprintf@width+1)^(0+128)
  2439  00A7                     l3375:
  2440                           
  2441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2442  00A7  300A               	movlw	10
  2443  00A8  00F0               	movwf	___wmul@multiplier
  2444  00A9  3000               	movlw	0
  2445  00AA  00F1               	movwf	___wmul@multiplier+1
  2446  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  2447  00AC  1303               	bcf	3,6	;RP1=0, select bank1
  2448  00AD  083A               	movf	(sprintf@width+1)^(0+128),w
  2449  00AE  00F3               	movwf	___wmul@multiplicand+1
  2450  00AF  0839               	movf	sprintf@width^(0+128),w
  2451  00B0  00F2               	movwf	___wmul@multiplicand
  2452  00B1  160A  158A  2229  120A  118A  	fcall	___wmul
  2453  00B6  0871               	movf	?___wmul+1,w
  2454  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  2455  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  2456  00B9  00BA               	movwf	(sprintf@width+1)^(0+128)
  2457  00BA  0870               	movf	?___wmul,w
  2458  00BB  00B9               	movwf	sprintf@width^(0+128)
  2459  00BC                     l3377:
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2462  00BC  0820               	movf	sprintf@f^(0+128),w
  2463  00BD  0084               	movwf	4
  2464  00BE  160A  158A  200A  120A  118A  	fcall	stringdir
  2465  00C3  3ED0               	addlw	208
  2466  00C4  00A9               	movwf	??_sprintf^(0+128)
  2467  00C5  30FF               	movlw	255
  2468  00C6  1803               	skipnc
  2469  00C7  3000               	movlw	0
  2470  00C8  00AA               	movwf	(??_sprintf^(0+128)+1)
  2471  00C9  0829               	movf	??_sprintf^(0+128),w
  2472  00CA  07B9               	addwf	sprintf@width^(0+128),f
  2473  00CB  1803               	skipnc
  2474  00CC  0ABA               	incf	(sprintf@width+1)^(0+128),f
  2475  00CD  082A               	movf	(??_sprintf+1)^(0+128),w
  2476  00CE  07BA               	addwf	(sprintf@width+1)^(0+128),f
  2477  00CF                     l3379:
  2478  00CF  3001               	movlw	1
  2479  00D0  00A9               	movwf	??_sprintf^(0+128)
  2480  00D1  0829               	movf	??_sprintf^(0+128),w
  2481  00D2  07A0               	addwf	sprintf@f^(0+128),f
  2482  00D3                     l3381:
  2483                           
  2484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2485  00D3  0820               	movf	sprintf@f^(0+128),w
  2486  00D4  0084               	movwf	4
  2487  00D5  160A  158A  200A  120A  118A  	fcall	stringdir
  2488  00DA  160A  158A  217B  120A  118A  	fcall	_isdigit
  2489  00DF  1803               	btfsc	3,0
  2490  00E0  28E2               	goto	u5381
  2491  00E1  28E3               	goto	u5380
  2492  00E2                     u5381:
  2493  00E2  28A7               	goto	l3375
  2494  00E3                     u5380:
  2495  00E3                     l3383:
  2496                           
  2497                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2498  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  2499  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  2500  00E5  0820               	movf	sprintf@f^(0+128),w
  2501  00E6  0084               	movwf	4
  2502  00E7  160A  158A  200A  120A  118A  	fcall	stringdir
  2503  00EC  3A2E               	xorlw	46
  2504  00ED  1D03               	skipz
  2505  00EE  28F0               	goto	u5391
  2506  00EF  28F1               	goto	u5390
  2507  00F0                     u5391:
  2508  00F0  2936               	goto	l3399
  2509  00F1                     u5390:
  2510  00F1                     l3385:
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2513  00F1  1738               	bsf	(sprintf@flag^(0+128)+1),6
  2514  00F2                     l3387:
  2515                           
  2516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2517  00F2  3001               	movlw	1
  2518  00F3  00A9               	movwf	??_sprintf^(0+128)
  2519  00F4  0829               	movf	??_sprintf^(0+128),w
  2520  00F5  07A0               	addwf	sprintf@f^(0+128),f
  2521  00F6                     l3389:
  2522                           
  2523                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2524  00F6  01C6               	clrf	sprintf@prec^(0+128)
  2525  00F7  01C7               	clrf	(sprintf@prec+1)^(0+128)
  2526                           
  2527                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2528  00F8  2925               	goto	l3397
  2529  00F9                     l3391:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2532  00F9  300A               	movlw	10
  2533  00FA  00F0               	movwf	___wmul@multiplier
  2534  00FB  3000               	movlw	0
  2535  00FC  00F1               	movwf	___wmul@multiplier+1
  2536  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  2537  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  2538  00FF  0847               	movf	(sprintf@prec+1)^(0+128),w
  2539  0100  00F3               	movwf	___wmul@multiplicand+1
  2540  0101  0846               	movf	sprintf@prec^(0+128),w
  2541  0102  00F2               	movwf	___wmul@multiplicand
  2542  0103  160A  158A  2229  120A  118A  	fcall	___wmul
  2543  0108  0871               	movf	?___wmul+1,w
  2544  0109  1683               	bsf	3,5	;RP0=1, select bank1
  2545  010A  1303               	bcf	3,6	;RP1=0, select bank1
  2546  010B  00C7               	movwf	(sprintf@prec+1)^(0+128)
  2547  010C  0870               	movf	?___wmul,w
  2548  010D  00C6               	movwf	sprintf@prec^(0+128)
  2549  010E                     l3393:
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2552  010E  0820               	movf	sprintf@f^(0+128),w
  2553  010F  0084               	movwf	4
  2554  0110  160A  158A  200A  120A  118A  	fcall	stringdir
  2555  0115  3ED0               	addlw	208
  2556  0116  00A9               	movwf	??_sprintf^(0+128)
  2557  0117  30FF               	movlw	255
  2558  0118  1803               	skipnc
  2559  0119  3000               	movlw	0
  2560  011A  00AA               	movwf	(??_sprintf^(0+128)+1)
  2561  011B  0829               	movf	??_sprintf^(0+128),w
  2562  011C  07C6               	addwf	sprintf@prec^(0+128),f
  2563  011D  1803               	skipnc
  2564  011E  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  2565  011F  082A               	movf	(??_sprintf+1)^(0+128),w
  2566  0120  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  2567  0121                     l3395:
  2568  0121  3001               	movlw	1
  2569  0122  00A9               	movwf	??_sprintf^(0+128)
  2570  0123  0829               	movf	??_sprintf^(0+128),w
  2571  0124  07A0               	addwf	sprintf@f^(0+128),f
  2572  0125                     l3397:
  2573                           
  2574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2575  0125  0820               	movf	sprintf@f^(0+128),w
  2576  0126  0084               	movwf	4
  2577  0127  160A  158A  200A  120A  118A  	fcall	stringdir
  2578  012C  160A  158A  217B  120A  118A  	fcall	_isdigit
  2579  0131  1803               	btfsc	3,0
  2580  0132  2934               	goto	u5401
  2581  0133  2935               	goto	u5400
  2582  0134                     u5401:
  2583  0134  28F9               	goto	l3391
  2584  0135                     u5400:
  2585  0135  293C               	goto	l3405
  2586  0136                     l3399:
  2587                           
  2588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2589  0136  01C6               	clrf	sprintf@prec^(0+128)
  2590  0137  01C7               	clrf	(sprintf@prec+1)^(0+128)
  2591  0138                     l3401:
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2594  0138  1638               	bsf	(sprintf@flag^(0+128)+1),4
  2595  0139  293C               	goto	l3405
  2596  013A                     l329:	
  2597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2598                           
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2601  013A  1538               	bsf	(sprintf@flag^(0+128)+1),2
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2604  013B  2958               	goto	l3407
  2605  013C                     l3405:
  2606  013C  3001               	movlw	1
  2607  013D  1683               	bsf	3,5	;RP0=1, select bank1
  2608  013E  1303               	bcf	3,6	;RP1=0, select bank1
  2609  013F  07A0               	addwf	sprintf@f^(0+128),f
  2610  0140  30FF               	movlw	-1
  2611  0141  0720               	addwf	sprintf@f^(0+128),w
  2612  0142  0084               	movwf	4
  2613  0143  160A  158A  200A  120A  118A  	fcall	stringdir
  2614  0148  00C8               	movwf	sprintf@c^(0+128)
  2615  0149  00A9               	movwf	??_sprintf^(0+128)
  2616  014A  01AA               	clrf	(??_sprintf^(0+128)+1)
  2617                           
  2618                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2619                           ; Switch size 1, requested type "simple"
  2620                           ; Number of cases is 1, Range of values is 0 to 0
  2621                           ; switch strategies available:
  2622                           ; Name         Instructions Cycles
  2623                           ; simple_byte            4     3 (average)
  2624                           ; direct_byte           11     8 (fixed)
  2625                           ; jumptable            260     6 (fixed)
  2626                           ;	Chosen strategy is simple_byte
  2627  014B  082A               	movf	(??_sprintf+1)^(0+128),w
  2628  014C  3A00               	xorlw	0	; case 0
  2629  014D  1903               	skipnz
  2630  014E  2950               	goto	l3957
  2631  014F  2FD9               	goto	l3611
  2632  0150                     l3957:
  2633                           
  2634                           ; Switch size 1, requested type "simple"
  2635                           ; Number of cases is 2, Range of values is 0 to 102
  2636                           ; switch strategies available:
  2637                           ; Name         Instructions Cycles
  2638                           ; simple_byte            7     4 (average)
  2639                           ; jumptable            260     6 (fixed)
  2640                           ;	Chosen strategy is simple_byte
  2641  0150  0829               	movf	??_sprintf^(0+128),w
  2642  0151  3A00               	xorlw	0	; case 0
  2643  0152  1903               	skipnz
  2644  0153  2FEB               	goto	l3613
  2645  0154  3A66               	xorlw	102	; case 102
  2646  0155  1903               	skipnz
  2647  0156  293A               	goto	l329
  2648  0157  2FD9               	goto	l3611
  2649  0158                     l3407:
  2650                           
  2651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2652  0158  3000               	movlw	0
  2653  0159  0537               	andwf	sprintf@flag^(0+128),w
  2654  015A  00A9               	movwf	??_sprintf^(0+128)
  2655  015B  3007               	movlw	7
  2656  015C  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2657  015D  00AA               	movwf	(??_sprintf+1)^(0+128)
  2658  015E  0829               	movf	??_sprintf^(0+128),w
  2659  015F  042A               	iorwf	(??_sprintf^(0+128)+1),w
  2660  0160  1903               	btfsc	3,2
  2661  0161  2963               	goto	u5411
  2662  0162  2964               	goto	u5410
  2663  0163                     u5411:
  2664  0163  2F16               	goto	l3565
  2665  0164                     u5410:
  2666  0164                     l3409:
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2669  0164  1E38               	btfss	(sprintf@flag+1)^(0+128),4
  2670  0165  2967               	goto	u5421
  2671  0166  2968               	goto	u5420
  2672  0167                     u5421:
  2673  0167  296C               	goto	l3413
  2674  0168                     u5420:
  2675  0168                     l3411:
  2676                           
  2677                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2678  0168  3006               	movlw	6
  2679  0169  00C6               	movwf	sprintf@prec^(0+128)
  2680  016A  3000               	movlw	0
  2681  016B  00C7               	movwf	(sprintf@prec^(0+128)+1)
  2682  016C                     l3413:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2685  016C  0832               	movf	sprintf@ap^(0+128),w
  2686  016D  0084               	movwf	4
  2687  016E  1383               	bcf	3,7	;select IRP bank0
  2688  016F  0800               	movf	0,w
  2689  0170  00C1               	movwf	sprintf@fval^(0+128)
  2690  0171  0A84               	incf	4,f
  2691  0172  0800               	movf	0,w
  2692  0173  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2693  0174  0A84               	incf	4,f
  2694  0175  0800               	movf	0,w
  2695  0176  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2696  0177  0A84               	incf	4,f
  2697  0178  0800               	movf	0,w
  2698  0179  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2699  017A                     l3415:
  2700  017A  3004               	movlw	4
  2701  017B  00A9               	movwf	??_sprintf^(0+128)
  2702  017C  0829               	movf	??_sprintf^(0+128),w
  2703  017D  07B2               	addwf	sprintf@ap^(0+128),f
  2704  017E                     l3417:
  2705                           
  2706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2707  017E  0844               	movf	(sprintf@fval+3)^(0+128),w
  2708  017F  00F3               	movwf	___flge@ff1+3
  2709  0180  0843               	movf	(sprintf@fval+2)^(0+128),w
  2710  0181  00F2               	movwf	___flge@ff1+2
  2711  0182  0842               	movf	(sprintf@fval+1)^(0+128),w
  2712  0183  00F1               	movwf	___flge@ff1+1
  2713  0184  0841               	movf	sprintf@fval^(0+128),w
  2714  0185  00F0               	movwf	___flge@ff1
  2715  0186  3000               	movlw	0
  2716  0187  00F7               	movwf	___flge@ff2+3
  2717  0188  3000               	movlw	0
  2718  0189  00F6               	movwf	___flge@ff2+2
  2719  018A  3000               	movlw	0
  2720  018B  00F5               	movwf	___flge@ff2+1
  2721  018C  3000               	movlw	0
  2722  018D  00F4               	movwf	___flge@ff2
  2723  018E  160A  158A  26A4  120A  118A  	fcall	___flge
  2724  0193  1803               	btfsc	3,0
  2725  0194  2996               	goto	u5431
  2726  0195  2997               	goto	u5430
  2727  0196                     u5431:
  2728  0196  29B4               	goto	l3423
  2729  0197                     u5430:
  2730  0197                     l3419:
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2733  0197  1683               	bsf	3,5	;RP0=1, select bank1
  2734  0198  1303               	bcf	3,6	;RP1=0, select bank1
  2735  0199  0844               	movf	(sprintf@fval+3)^(0+128),w
  2736  019A  00F3               	movwf	___flneg@f1+3
  2737  019B  0843               	movf	(sprintf@fval+2)^(0+128),w
  2738  019C  00F2               	movwf	___flneg@f1+2
  2739  019D  0842               	movf	(sprintf@fval+1)^(0+128),w
  2740  019E  00F1               	movwf	___flneg@f1+1
  2741  019F  0841               	movf	sprintf@fval^(0+128),w
  2742  01A0  00F0               	movwf	___flneg@f1
  2743  01A1  160A  158A  2170  120A  118A  	fcall	___flneg
  2744  01A6  0873               	movf	?___flneg+3,w
  2745  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  2746  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  2747  01A9  00C4               	movwf	(sprintf@fval+3)^(0+128)
  2748  01AA  0872               	movf	?___flneg+2,w
  2749  01AB  00C3               	movwf	(sprintf@fval+2)^(0+128)
  2750  01AC  0871               	movf	?___flneg+1,w
  2751  01AD  00C2               	movwf	(sprintf@fval+1)^(0+128)
  2752  01AE  0870               	movf	?___flneg,w
  2753  01AF  00C1               	movwf	sprintf@fval^(0+128)
  2754  01B0                     l3421:
  2755                           
  2756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2757  01B0  3003               	movlw	3
  2758  01B1  04B7               	iorwf	sprintf@flag^(0+128),f
  2759  01B2  3000               	movlw	0
  2760  01B3  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
  2761  01B4                     l3423:
  2762                           
  2763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2764  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  2765  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  2766  01B6  01BF               	clrf	sprintf@eexp^(0+128)
  2767  01B7  01C0               	clrf	(sprintf@eexp+1)^(0+128)
  2768  01B8                     l3425:
  2769                           
  2770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2771  01B8  0844               	movf	(sprintf@fval+3)^(0+128),w
  2772  01B9  00F3               	movwf	___fleq@ff1+3
  2773  01BA  0843               	movf	(sprintf@fval+2)^(0+128),w
  2774  01BB  00F2               	movwf	___fleq@ff1+2
  2775  01BC  0842               	movf	(sprintf@fval+1)^(0+128),w
  2776  01BD  00F1               	movwf	___fleq@ff1+1
  2777  01BE  0841               	movf	sprintf@fval^(0+128),w
  2778  01BF  00F0               	movwf	___fleq@ff1
  2779  01C0  3000               	movlw	0
  2780  01C1  00F7               	movwf	___fleq@ff2+3
  2781  01C2  3000               	movlw	0
  2782  01C3  00F6               	movwf	___fleq@ff2+2
  2783  01C4  3000               	movlw	0
  2784  01C5  00F5               	movwf	___fleq@ff2+1
  2785  01C6  3000               	movlw	0
  2786  01C7  00F4               	movwf	___fleq@ff2
  2787  01C8  160A  158A  2401  120A  118A  	fcall	___fleq
  2788  01CD  1803               	btfsc	3,0
  2789  01CE  29D0               	goto	u5441
  2790  01CF  29D1               	goto	u5440
  2791  01D0                     u5441:
  2792  01D0  2AC1               	goto	l3451
  2793  01D1                     u5440:
  2794  01D1                     l3427:
  2795                           
  2796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2797  01D1  1003               	clrc
  2798  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2799  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2800  01D4  0D43               	rlf	(sprintf@fval+2)^(0+128),w
  2801  01D5  0D44               	rlf	(sprintf@fval+3)^(0+128),w
  2802  01D6  3E82               	addlw	130
  2803  01D7  00BF               	movwf	sprintf@eexp^(0+128)
  2804  01D8  30FF               	movlw	255
  2805  01D9  1803               	skipnc
  2806  01DA  3000               	movlw	0
  2807  01DB  00C0               	movwf	(sprintf@eexp^(0+128)+1)
  2808  01DC                     l3429:
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2811  01DC  30FF               	movlw	255
  2812  01DD  07BF               	addwf	sprintf@eexp^(0+128),f
  2813  01DE  1803               	skipnc
  2814  01DF  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2815  01E0  30FF               	movlw	255
  2816  01E1  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2817  01E2                     l3431:
  2818                           
  2819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2820  01E2  3003               	movlw	3
  2821  01E3  00F0               	movwf	___wmul@multiplier
  2822  01E4  3000               	movlw	0
  2823  01E5  00F1               	movwf	___wmul@multiplier+1
  2824  01E6  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2825  01E7  00F3               	movwf	___wmul@multiplicand+1
  2826  01E8  083F               	movf	sprintf@eexp^(0+128),w
  2827  01E9  00F2               	movwf	___wmul@multiplicand
  2828  01EA  160A  158A  2229  120A  118A  	fcall	___wmul
  2829  01EF  0871               	movf	?___wmul+1,w
  2830  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  2831  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  2832  01F2  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  2833  01F3  0870               	movf	?___wmul,w
  2834  01F4  00BF               	movwf	sprintf@eexp^(0+128)
  2835  01F5                     l3433:
  2836                           
  2837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2838  01F5  300A               	movlw	10
  2839  01F6  00F7               	movwf	___awdiv@divisor
  2840  01F7  3000               	movlw	0
  2841  01F8  00F8               	movwf	___awdiv@divisor+1
  2842  01F9  0840               	movf	(sprintf@eexp+1)^(0+128),w
  2843  01FA  00FA               	movwf	___awdiv@dividend+1
  2844  01FB  083F               	movf	sprintf@eexp^(0+128),w
  2845  01FC  00F9               	movwf	___awdiv@dividend
  2846  01FD  120A  118A  200C  120A  118A  	fcall	___awdiv
  2847  0202  0878               	movf	?___awdiv+1,w
  2848  0203  1683               	bsf	3,5	;RP0=1, select bank1
  2849  0204  1303               	bcf	3,6	;RP1=0, select bank1
  2850  0205  00C0               	movwf	(sprintf@eexp+1)^(0+128)
  2851  0206  0877               	movf	?___awdiv,w
  2852  0207  00BF               	movwf	sprintf@eexp^(0+128)
  2853  0208                     l3435:
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2856  0208  1FC0               	btfss	(sprintf@eexp+1)^(0+128),7
  2857  0209  2A0B               	goto	u5451
  2858  020A  2A0C               	goto	u5450
  2859  020B                     u5451:
  2860  020B  2A12               	goto	l3439
  2861  020C                     u5450:
  2862  020C                     l3437:
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2865  020C  30FF               	movlw	255
  2866  020D  07BF               	addwf	sprintf@eexp^(0+128),f
  2867  020E  1803               	skipnc
  2868  020F  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  2869  0210  30FF               	movlw	255
  2870  0211  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  2871  0212                     l3439:
  2872                           
  2873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2874  0212  033F               	decf	sprintf@eexp^(0+128),w
  2875  0213  3AFF               	xorlw	255
  2876  0214  120A  158A  2140  120A  118A  	fcall	_scale
  2877  0219  1283               	bcf	3,5	;RP0=0, select bank0
  2878  021A  1303               	bcf	3,6	;RP1=0, select bank0
  2879  021B  0841               	movf	?_scale+3,w
  2880  021C  1683               	bsf	3,5	;RP0=1, select bank1
  2881  021D  1303               	bcf	3,6	;RP1=0, select bank1
  2882  021E  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2883  021F  1283               	bcf	3,5	;RP0=0, select bank0
  2884  0220  1303               	bcf	3,6	;RP1=0, select bank0
  2885  0221  0840               	movf	?_scale+2,w
  2886  0222  1683               	bsf	3,5	;RP0=1, select bank1
  2887  0223  1303               	bcf	3,6	;RP1=0, select bank1
  2888  0224  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2889  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0226  1303               	bcf	3,6	;RP1=0, select bank0
  2891  0227  083F               	movf	?_scale+1,w
  2892  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2893  0229  1303               	bcf	3,6	;RP1=0, select bank1
  2894  022A  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2895  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2896  022C  1303               	bcf	3,6	;RP1=0, select bank0
  2897  022D  083E               	movf	?_scale,w
  2898  022E  1683               	bsf	3,5	;RP0=1, select bank1
  2899  022F  1303               	bcf	3,6	;RP1=0, select bank1
  2900  0230  00BB               	movwf	sprintf@tmpval^(0+128)
  2901  0231                     l3441:
  2902                           
  2903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2904  0231  0844               	movf	(sprintf@fval+3)^(0+128),w
  2905  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0234  00A7               	movwf	___flmul@b+3
  2908  0235  1683               	bsf	3,5	;RP0=1, select bank1
  2909  0236  1303               	bcf	3,6	;RP1=0, select bank1
  2910  0237  0843               	movf	(sprintf@fval+2)^(0+128),w
  2911  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2912  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2913  023A  00A6               	movwf	___flmul@b+2
  2914  023B  1683               	bsf	3,5	;RP0=1, select bank1
  2915  023C  1303               	bcf	3,6	;RP1=0, select bank1
  2916  023D  0842               	movf	(sprintf@fval+1)^(0+128),w
  2917  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2918  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2919  0240  00A5               	movwf	___flmul@b+1
  2920  0241  1683               	bsf	3,5	;RP0=1, select bank1
  2921  0242  1303               	bcf	3,6	;RP1=0, select bank1
  2922  0243  0841               	movf	sprintf@fval^(0+128),w
  2923  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2924  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2925  0246  00A4               	movwf	___flmul@b
  2926  0247  1683               	bsf	3,5	;RP0=1, select bank1
  2927  0248  1303               	bcf	3,6	;RP1=0, select bank1
  2928  0249  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2929  024A  1283               	bcf	3,5	;RP0=0, select bank0
  2930  024B  1303               	bcf	3,6	;RP1=0, select bank0
  2931  024C  00AB               	movwf	___flmul@a+3
  2932  024D  1683               	bsf	3,5	;RP0=1, select bank1
  2933  024E  1303               	bcf	3,6	;RP1=0, select bank1
  2934  024F  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2935  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2936  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2937  0252  00AA               	movwf	___flmul@a+2
  2938  0253  1683               	bsf	3,5	;RP0=1, select bank1
  2939  0254  1303               	bcf	3,6	;RP1=0, select bank1
  2940  0255  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2941  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2942  0257  1303               	bcf	3,6	;RP1=0, select bank0
  2943  0258  00A9               	movwf	___flmul@a+1
  2944  0259  1683               	bsf	3,5	;RP0=1, select bank1
  2945  025A  1303               	bcf	3,6	;RP1=0, select bank1
  2946  025B  083B               	movf	sprintf@tmpval^(0+128),w
  2947  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2948  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2949  025E  00A8               	movwf	___flmul@a
  2950  025F  120A  158A  249F  120A  118A  	fcall	___flmul
  2951  0264  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0265  1303               	bcf	3,6	;RP1=0, select bank0
  2953  0266  0827               	movf	?___flmul+3,w
  2954  0267  1683               	bsf	3,5	;RP0=1, select bank1
  2955  0268  1303               	bcf	3,6	;RP1=0, select bank1
  2956  0269  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2957  026A  1283               	bcf	3,5	;RP0=0, select bank0
  2958  026B  1303               	bcf	3,6	;RP1=0, select bank0
  2959  026C  0826               	movf	?___flmul+2,w
  2960  026D  1683               	bsf	3,5	;RP0=1, select bank1
  2961  026E  1303               	bcf	3,6	;RP1=0, select bank1
  2962  026F  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2963  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2964  0271  1303               	bcf	3,6	;RP1=0, select bank0
  2965  0272  0825               	movf	?___flmul+1,w
  2966  0273  1683               	bsf	3,5	;RP0=1, select bank1
  2967  0274  1303               	bcf	3,6	;RP1=0, select bank1
  2968  0275  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2969  0276  1283               	bcf	3,5	;RP0=0, select bank0
  2970  0277  1303               	bcf	3,6	;RP1=0, select bank0
  2971  0278  0824               	movf	?___flmul,w
  2972  0279  1683               	bsf	3,5	;RP0=1, select bank1
  2973  027A  1303               	bcf	3,6	;RP1=0, select bank1
  2974  027B  00BB               	movwf	sprintf@tmpval^(0+128)
  2975  027C                     l3443:
  2976                           
  2977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2978  027C  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2979  027D  00F3               	movwf	___flge@ff1+3
  2980  027E  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2981  027F  00F2               	movwf	___flge@ff1+2
  2982  0280  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2983  0281  00F1               	movwf	___flge@ff1+1
  2984  0282  083B               	movf	sprintf@tmpval^(0+128),w
  2985  0283  00F0               	movwf	___flge@ff1
  2986  0284  303F               	movlw	63
  2987  0285  00F7               	movwf	___flge@ff2+3
  2988  0286  3080               	movlw	128
  2989  0287  00F6               	movwf	___flge@ff2+2
  2990  0288  3000               	movlw	0
  2991  0289  00F5               	movwf	___flge@ff2+1
  2992  028A  3000               	movlw	0
  2993  028B  00F4               	movwf	___flge@ff2
  2994  028C  160A  158A  26A4  120A  118A  	fcall	___flge
  2995  0291  1803               	btfsc	3,0
  2996  0292  2A94               	goto	u5461
  2997  0293  2A95               	goto	u5460
  2998  0294                     u5461:
  2999  0294  2A9E               	goto	l3447
  3000  0295                     u5460:
  3001  0295                     l3445:
  3002                           
  3003                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3004  0295  30FF               	movlw	255
  3005  0296  1683               	bsf	3,5	;RP0=1, select bank1
  3006  0297  1303               	bcf	3,6	;RP1=0, select bank1
  3007  0298  07BF               	addwf	sprintf@eexp^(0+128),f
  3008  0299  1803               	skipnc
  3009  029A  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  3010  029B  30FF               	movlw	255
  3011  029C  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  3012  029D  2AC1               	goto	l3451
  3013  029E                     l3447:
  3014  029E  1683               	bsf	3,5	;RP0=1, select bank1
  3015  029F  1303               	bcf	3,6	;RP1=0, select bank1
  3016  02A0  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  3017  02A1  00F3               	movwf	___flge@ff1+3
  3018  02A2  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  3019  02A3  00F2               	movwf	___flge@ff1+2
  3020  02A4  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  3021  02A5  00F1               	movwf	___flge@ff1+1
  3022  02A6  083B               	movf	sprintf@tmpval^(0+128),w
  3023  02A7  00F0               	movwf	___flge@ff1
  3024  02A8  3041               	movlw	65
  3025  02A9  00F7               	movwf	___flge@ff2+3
  3026  02AA  3020               	movlw	32
  3027  02AB  00F6               	movwf	___flge@ff2+2
  3028  02AC  3000               	movlw	0
  3029  02AD  00F5               	movwf	___flge@ff2+1
  3030  02AE  3000               	movlw	0
  3031  02AF  00F4               	movwf	___flge@ff2
  3032  02B0  160A  158A  26A4  120A  118A  	fcall	___flge
  3033  02B5  1C03               	btfss	3,0
  3034  02B6  2AB8               	goto	u5471
  3035  02B7  2AB9               	goto	u5470
  3036  02B8                     u5471:
  3037  02B8  2AC1               	goto	l3451
  3038  02B9                     u5470:
  3039  02B9                     l3449:
  3040                           
  3041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3042  02B9  3001               	movlw	1
  3043  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  3044  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  3045  02BC  07BF               	addwf	sprintf@eexp^(0+128),f
  3046  02BD  1803               	skipnc
  3047  02BE  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  3048  02BF  3000               	movlw	0
  3049  02C0  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  3050  02C1                     l3451:
  3051                           
  3052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3053  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  3054  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  3055  02C3  0847               	movf	(sprintf@prec+1)^(0+128),w
  3056  02C4  3A80               	xorlw	128
  3057  02C5  00FF               	movwf	btemp+1
  3058  02C6  3080               	movlw	128
  3059  02C7  027F               	subwf	btemp+1,w
  3060  02C8  1D03               	skipz
  3061  02C9  2ACC               	goto	u5485
  3062  02CA  300D               	movlw	13
  3063  02CB  0246               	subwf	sprintf@prec^(0+128),w
  3064  02CC                     u5485:
  3065  02CC  1803               	skipnc
  3066  02CD  2ACF               	goto	u5481
  3067  02CE  2AD0               	goto	u5480
  3068  02CF                     u5481:
  3069  02CF  2B17               	goto	l3455
  3070  02D0                     u5480:
  3071  02D0                     l3453:
  3072                           
  3073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3074  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  3075  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  3076  02D2  0846               	movf	sprintf@prec^(0+128),w
  3077  02D3  160A  118A  236D  120A  118A  	fcall	_fround
  3078  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  3079  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  3080  02DA  0841               	movf	?_fround+3,w
  3081  02DB  00D5               	movwf	___fladd@b+3
  3082  02DC  0840               	movf	?_fround+2,w
  3083  02DD  00D4               	movwf	___fladd@b+2
  3084  02DE  083F               	movf	?_fround+1,w
  3085  02DF  00D3               	movwf	___fladd@b+1
  3086  02E0  083E               	movf	?_fround,w
  3087  02E1  00D2               	movwf	___fladd@b
  3088  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  3089  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  3090  02E4  0844               	movf	(sprintf@fval+3)^(0+128),w
  3091  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  3092  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  3093  02E7  00D9               	movwf	___fladd@a+3
  3094  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  3095  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  3096  02EA  0843               	movf	(sprintf@fval+2)^(0+128),w
  3097  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  3098  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  3099  02ED  00D8               	movwf	___fladd@a+2
  3100  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  3101  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  3102  02F0  0842               	movf	(sprintf@fval+1)^(0+128),w
  3103  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  3104  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  3105  02F3  00D7               	movwf	___fladd@a+1
  3106  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  3107  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  3108  02F6  0841               	movf	sprintf@fval^(0+128),w
  3109  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  3110  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  3111  02F9  00D6               	movwf	___fladd@a
  3112  02FA  160A  118A  2578  120A  118A  	fcall	___fladd
  3113  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  3114  0300  1303               	bcf	3,6	;RP1=0, select bank0
  3115  0301  0855               	movf	?___fladd+3,w
  3116  0302  1683               	bsf	3,5	;RP0=1, select bank1
  3117  0303  1303               	bcf	3,6	;RP1=0, select bank1
  3118  0304  00C4               	movwf	(sprintf@fval+3)^(0+128)
  3119  0305  1283               	bcf	3,5	;RP0=0, select bank0
  3120  0306  1303               	bcf	3,6	;RP1=0, select bank0
  3121  0307  0854               	movf	?___fladd+2,w
  3122  0308  1683               	bsf	3,5	;RP0=1, select bank1
  3123  0309  1303               	bcf	3,6	;RP1=0, select bank1
  3124  030A  00C3               	movwf	(sprintf@fval+2)^(0+128)
  3125  030B  1283               	bcf	3,5	;RP0=0, select bank0
  3126  030C  1303               	bcf	3,6	;RP1=0, select bank0
  3127  030D  0853               	movf	?___fladd+1,w
  3128  030E  1683               	bsf	3,5	;RP0=1, select bank1
  3129  030F  1303               	bcf	3,6	;RP1=0, select bank1
  3130  0310  00C2               	movwf	(sprintf@fval+1)^(0+128)
  3131  0311  1283               	bcf	3,5	;RP0=0, select bank0
  3132  0312  1303               	bcf	3,6	;RP1=0, select bank0
  3133  0313  0852               	movf	?___fladd,w
  3134  0314  1683               	bsf	3,5	;RP0=1, select bank1
  3135  0315  1303               	bcf	3,6	;RP1=0, select bank1
  3136  0316  00C1               	movwf	sprintf@fval^(0+128)
  3137  0317                     l3455:
  3138                           
  3139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3140  0317  1683               	bsf	3,5	;RP0=1, select bank1
  3141  0318  1303               	bcf	3,6	;RP1=0, select bank1
  3142  0319  0840               	movf	(sprintf@eexp+1)^(0+128),w
  3143  031A  3A80               	xorlw	128
  3144  031B  00FF               	movwf	btemp+1
  3145  031C  3080               	movlw	128
  3146  031D  027F               	subwf	btemp+1,w
  3147  031E  1D03               	skipz
  3148  031F  2B22               	goto	u5495
  3149  0320  300A               	movlw	10
  3150  0321  023F               	subwf	sprintf@eexp^(0+128),w
  3151  0322                     u5495:
  3152  0322  1803               	skipnc
  3153  0323  2B25               	goto	u5491
  3154  0324  2B26               	goto	u5490
  3155  0325                     u5491:
  3156  0325  2B77               	goto	l3463
  3157  0326                     u5490:
  3158  0326                     l3457:
  3159  0326  1683               	bsf	3,5	;RP0=1, select bank1
  3160  0327  1303               	bcf	3,6	;RP1=0, select bank1
  3161  0328  0844               	movf	(sprintf@fval+3)^(0+128),w
  3162  0329  00F3               	movwf	___fleq@ff1+3
  3163  032A  0843               	movf	(sprintf@fval+2)^(0+128),w
  3164  032B  00F2               	movwf	___fleq@ff1+2
  3165  032C  0842               	movf	(sprintf@fval+1)^(0+128),w
  3166  032D  00F1               	movwf	___fleq@ff1+1
  3167  032E  0841               	movf	sprintf@fval^(0+128),w
  3168  032F  00F0               	movwf	___fleq@ff1
  3169  0330  3000               	movlw	0
  3170  0331  00F7               	movwf	___fleq@ff2+3
  3171  0332  3000               	movlw	0
  3172  0333  00F6               	movwf	___fleq@ff2+2
  3173  0334  3000               	movlw	0
  3174  0335  00F5               	movwf	___fleq@ff2+1
  3175  0336  3000               	movlw	0
  3176  0337  00F4               	movwf	___fleq@ff2
  3177  0338  160A  158A  2401  120A  118A  	fcall	___fleq
  3178  033D  1803               	btfsc	3,0
  3179  033E  2B40               	goto	u5501
  3180  033F  2B41               	goto	u5500
  3181  0340                     u5501:
  3182  0340  2BE9               	goto	l3477
  3183  0341                     u5500:
  3184  0341                     l3459:
  3185  0341  1683               	bsf	3,5	;RP0=1, select bank1
  3186  0342  1303               	bcf	3,6	;RP1=0, select bank1
  3187  0343  0844               	movf	(sprintf@fval+3)^(0+128),w
  3188  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3189  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3190  0346  00D4               	movwf	___fltol@f1+3
  3191  0347  1683               	bsf	3,5	;RP0=1, select bank1
  3192  0348  1303               	bcf	3,6	;RP1=0, select bank1
  3193  0349  0843               	movf	(sprintf@fval+2)^(0+128),w
  3194  034A  1283               	bcf	3,5	;RP0=0, select bank0
  3195  034B  1303               	bcf	3,6	;RP1=0, select bank0
  3196  034C  00D3               	movwf	___fltol@f1+2
  3197  034D  1683               	bsf	3,5	;RP0=1, select bank1
  3198  034E  1303               	bcf	3,6	;RP1=0, select bank1
  3199  034F  0842               	movf	(sprintf@fval+1)^(0+128),w
  3200  0350  1283               	bcf	3,5	;RP0=0, select bank0
  3201  0351  1303               	bcf	3,6	;RP1=0, select bank0
  3202  0352  00D2               	movwf	___fltol@f1+1
  3203  0353  1683               	bsf	3,5	;RP0=1, select bank1
  3204  0354  1303               	bcf	3,6	;RP1=0, select bank1
  3205  0355  0841               	movf	sprintf@fval^(0+128),w
  3206  0356  1283               	bcf	3,5	;RP0=0, select bank0
  3207  0357  1303               	bcf	3,6	;RP1=0, select bank0
  3208  0358  00D1               	movwf	___fltol@f1
  3209  0359  120A  158A  2006  120A  118A  	fcall	___fltol
  3210  035E  1283               	bcf	3,5	;RP0=0, select bank0
  3211  035F  1303               	bcf	3,6	;RP1=0, select bank0
  3212  0360  0854               	movf	?___fltol+3,w
  3213  0361  0453               	iorwf	?___fltol+2,w
  3214  0362  0452               	iorwf	?___fltol+1,w
  3215  0363  0451               	iorwf	?___fltol,w
  3216  0364  1D03               	skipz
  3217  0365  2B67               	goto	u5511
  3218  0366  2B68               	goto	u5510
  3219  0367                     u5511:
  3220  0367  2BE9               	goto	l3477
  3221  0368                     u5510:
  3222  0368                     l3461:
  3223  0368  1683               	bsf	3,5	;RP0=1, select bank1
  3224  0369  1303               	bcf	3,6	;RP1=0, select bank1
  3225  036A  0840               	movf	(sprintf@eexp+1)^(0+128),w
  3226  036B  3A80               	xorlw	128
  3227  036C  00FF               	movwf	btemp+1
  3228  036D  3080               	movlw	128
  3229  036E  027F               	subwf	btemp+1,w
  3230  036F  1D03               	skipz
  3231  0370  2B73               	goto	u5525
  3232  0371  3002               	movlw	2
  3233  0372  023F               	subwf	sprintf@eexp^(0+128),w
  3234  0373                     u5525:
  3235  0373  1C03               	skipc
  3236  0374  2B76               	goto	u5521
  3237  0375  2B77               	goto	u5520
  3238  0376                     u5521:
  3239  0376  2BE9               	goto	l3477
  3240  0377                     u5520:
  3241  0377                     l3463:
  3242                           
  3243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3244  0377  1683               	bsf	3,5	;RP0=1, select bank1
  3245  0378  1303               	bcf	3,6	;RP1=0, select bank1
  3246  0379  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  3247  037A  00F3               	movwf	___flge@ff1+3
  3248  037B  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  3249  037C  00F2               	movwf	___flge@ff1+2
  3250  037D  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  3251  037E  00F1               	movwf	___flge@ff1+1
  3252  037F  083B               	movf	sprintf@tmpval^(0+128),w
  3253  0380  00F0               	movwf	___flge@ff1
  3254  0381  3040               	movlw	64
  3255  0382  00F7               	movwf	___flge@ff2+3
  3256  0383  3089               	movlw	137
  3257  0384  00F6               	movwf	___flge@ff2+2
  3258  0385  3070               	movlw	112
  3259  0386  00F5               	movwf	___flge@ff2+1
  3260  0387  305F               	movlw	95
  3261  0388  00F4               	movwf	___flge@ff2
  3262  0389  160A  158A  26A4  120A  118A  	fcall	___flge
  3263  038E  1803               	btfsc	3,0
  3264  038F  2B91               	goto	u5531
  3265  0390  2B92               	goto	u5530
  3266  0391                     u5531:
  3267  0391  2B9B               	goto	l3467
  3268  0392                     u5530:
  3269  0392                     l3465:
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3272  0392  30F7               	movlw	247
  3273  0393  1683               	bsf	3,5	;RP0=1, select bank1
  3274  0394  1303               	bcf	3,6	;RP1=0, select bank1
  3275  0395  07BF               	addwf	sprintf@eexp^(0+128),f
  3276  0396  1803               	skipnc
  3277  0397  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  3278  0398  30FF               	movlw	255
  3279  0399  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  3280                           
  3281                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3282  039A  2BA3               	goto	l3469
  3283  039B                     l3467:
  3284                           
  3285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3286  039B  30F8               	movlw	248
  3287  039C  1683               	bsf	3,5	;RP0=1, select bank1
  3288  039D  1303               	bcf	3,6	;RP1=0, select bank1
  3289  039E  07BF               	addwf	sprintf@eexp^(0+128),f
  3290  039F  1803               	skipnc
  3291  03A0  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  3292  03A1  30FF               	movlw	255
  3293  03A2  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  3294  03A3                     l3469:
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3297  03A3  083F               	movf	sprintf@eexp^(0+128),w
  3298  03A4  120A  158A  2140  120A  118A  	fcall	_scale
  3299  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  3300  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  3301  03AB  0841               	movf	?_scale+3,w
  3302  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  3303  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  3304  03AE  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3305  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  3306  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  3307  03B1  0840               	movf	?_scale+2,w
  3308  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  3309  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  3310  03B4  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3311  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  3312  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  3313  03B7  083F               	movf	?_scale+1,w
  3314  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  3315  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  3316  03BA  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3317  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  3318  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  3319  03BD  083E               	movf	?_scale,w
  3320  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  3321  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  3322  03C0  00BB               	movwf	sprintf@tmpval^(0+128)
  3323  03C1                     l3471:
  3324  03C1  0844               	movf	(sprintf@fval+3)^(0+128),w
  3325  03C2  00F3               	movwf	__div_to_l_@f1+3
  3326  03C3  0843               	movf	(sprintf@fval+2)^(0+128),w
  3327  03C4  00F2               	movwf	__div_to_l_@f1+2
  3328  03C5  0842               	movf	(sprintf@fval+1)^(0+128),w
  3329  03C6  00F1               	movwf	__div_to_l_@f1+1
  3330  03C7  0841               	movf	sprintf@fval^(0+128),w
  3331  03C8  00F0               	movwf	__div_to_l_@f1
  3332  03C9  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  3333  03CA  00F7               	movwf	__div_to_l_@f2+3
  3334  03CB  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  3335  03CC  00F6               	movwf	__div_to_l_@f2+2
  3336  03CD  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  3337  03CE  00F5               	movwf	__div_to_l_@f2+1
  3338  03CF  083B               	movf	sprintf@tmpval^(0+128),w
  3339  03D0  00F4               	movwf	__div_to_l_@f2
  3340  03D1  120A  158A  2082  120A  118A  	fcall	__div_to_l_
  3341  03D6  0873               	movf	?__div_to_l_+3,w
  3342  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  3343  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  3344  03D9  00B6               	movwf	(sprintf@val+3)^(0+128)
  3345  03DA  0872               	movf	?__div_to_l_+2,w
  3346  03DB  00B5               	movwf	(sprintf@val+2)^(0+128)
  3347  03DC  0871               	movf	?__div_to_l_+1,w
  3348  03DD  00B4               	movwf	(sprintf@val+1)^(0+128)
  3349  03DE  0870               	movf	?__div_to_l_,w
  3350  03DF  00B3               	movwf	sprintf@val^(0+128)
  3351  03E0                     l3475:
  3352                           
  3353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3354  03E0  3000               	movlw	0
  3355  03E1  00C4               	movwf	(sprintf@fval+3)^(0+128)
  3356  03E2  3000               	movlw	0
  3357  03E3  00C3               	movwf	(sprintf@fval+2)^(0+128)
  3358  03E4  3000               	movlw	0
  3359  03E5  00C2               	movwf	(sprintf@fval+1)^(0+128)
  3360  03E6  3000               	movlw	0
  3361  03E7  00C1               	movwf	sprintf@fval^(0+128)
  3362                           
  3363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3364  03E8  2C6D               	goto	l3483
  3365  03E9                     l3477:
  3366                           
  3367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3368  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  3369  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  3370  03EB  0844               	movf	(sprintf@fval+3)^(0+128),w
  3371  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  3372  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  3373  03EE  00D4               	movwf	___fltol@f1+3
  3374  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  3375  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  3376  03F1  0843               	movf	(sprintf@fval+2)^(0+128),w
  3377  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  3378  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  3379  03F4  00D3               	movwf	___fltol@f1+2
  3380  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  3381  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  3382  03F7  0842               	movf	(sprintf@fval+1)^(0+128),w
  3383  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  3384  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  3385  03FA  00D2               	movwf	___fltol@f1+1
  3386  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  3387  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  3388  03FD  0841               	movf	sprintf@fval^(0+128),w
  3389  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3390  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3391  0400  00D1               	movwf	___fltol@f1
  3392  0401  120A  158A  2006  120A  118A  	fcall	___fltol
  3393  0406  1283               	bcf	3,5	;RP0=0, select bank0
  3394  0407  1303               	bcf	3,6	;RP1=0, select bank0
  3395  0408  0854               	movf	?___fltol+3,w
  3396  0409  1683               	bsf	3,5	;RP0=1, select bank1
  3397  040A  1303               	bcf	3,6	;RP1=0, select bank1
  3398  040B  00B6               	movwf	(sprintf@val+3)^(0+128)
  3399  040C  1283               	bcf	3,5	;RP0=0, select bank0
  3400  040D  1303               	bcf	3,6	;RP1=0, select bank0
  3401  040E  0853               	movf	?___fltol+2,w
  3402  040F  1683               	bsf	3,5	;RP0=1, select bank1
  3403  0410  1303               	bcf	3,6	;RP1=0, select bank1
  3404  0411  00B5               	movwf	(sprintf@val+2)^(0+128)
  3405  0412  1283               	bcf	3,5	;RP0=0, select bank0
  3406  0413  1303               	bcf	3,6	;RP1=0, select bank0
  3407  0414  0852               	movf	?___fltol+1,w
  3408  0415  1683               	bsf	3,5	;RP0=1, select bank1
  3409  0416  1303               	bcf	3,6	;RP1=0, select bank1
  3410  0417  00B4               	movwf	(sprintf@val+1)^(0+128)
  3411  0418  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0419  1303               	bcf	3,6	;RP1=0, select bank0
  3413  041A  0851               	movf	?___fltol,w
  3414  041B  1683               	bsf	3,5	;RP0=1, select bank1
  3415  041C  1303               	bcf	3,6	;RP1=0, select bank1
  3416  041D  00B3               	movwf	sprintf@val^(0+128)
  3417  041E                     l3479:
  3418                           
  3419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3420  041E  0836               	movf	(sprintf@val+3)^(0+128),w
  3421  041F  00F3               	movwf	___xxtofl@val+3
  3422  0420  0835               	movf	(sprintf@val+2)^(0+128),w
  3423  0421  00F2               	movwf	___xxtofl@val+2
  3424  0422  0834               	movf	(sprintf@val+1)^(0+128),w
  3425  0423  00F1               	movwf	___xxtofl@val+1
  3426  0424  0833               	movf	sprintf@val^(0+128),w
  3427  0425  00F0               	movwf	___xxtofl@val
  3428  0426  3000               	movlw	0
  3429  0427  160A  158A  2746  120A  118A  	fcall	___xxtofl
  3430  042C  0873               	movf	?___xxtofl+3,w
  3431  042D  1283               	bcf	3,5	;RP0=0, select bank0
  3432  042E  1303               	bcf	3,6	;RP1=0, select bank0
  3433  042F  00E9               	movwf	___flsub@a+3
  3434  0430  0872               	movf	?___xxtofl+2,w
  3435  0431  00E8               	movwf	___flsub@a+2
  3436  0432  0871               	movf	?___xxtofl+1,w
  3437  0433  00E7               	movwf	___flsub@a+1
  3438  0434  0870               	movf	?___xxtofl,w
  3439  0435  00E6               	movwf	___flsub@a
  3440  0436  1683               	bsf	3,5	;RP0=1, select bank1
  3441  0437  1303               	bcf	3,6	;RP1=0, select bank1
  3442  0438  0844               	movf	(sprintf@fval+3)^(0+128),w
  3443  0439  1283               	bcf	3,5	;RP0=0, select bank0
  3444  043A  1303               	bcf	3,6	;RP1=0, select bank0
  3445  043B  00ED               	movwf	___flsub@b+3
  3446  043C  1683               	bsf	3,5	;RP0=1, select bank1
  3447  043D  1303               	bcf	3,6	;RP1=0, select bank1
  3448  043E  0843               	movf	(sprintf@fval+2)^(0+128),w
  3449  043F  1283               	bcf	3,5	;RP0=0, select bank0
  3450  0440  1303               	bcf	3,6	;RP1=0, select bank0
  3451  0441  00EC               	movwf	___flsub@b+2
  3452  0442  1683               	bsf	3,5	;RP0=1, select bank1
  3453  0443  1303               	bcf	3,6	;RP1=0, select bank1
  3454  0444  0842               	movf	(sprintf@fval+1)^(0+128),w
  3455  0445  1283               	bcf	3,5	;RP0=0, select bank0
  3456  0446  1303               	bcf	3,6	;RP1=0, select bank0
  3457  0447  00EB               	movwf	___flsub@b+1
  3458  0448  1683               	bsf	3,5	;RP0=1, select bank1
  3459  0449  1303               	bcf	3,6	;RP1=0, select bank1
  3460  044A  0841               	movf	sprintf@fval^(0+128),w
  3461  044B  1283               	bcf	3,5	;RP0=0, select bank0
  3462  044C  1303               	bcf	3,6	;RP1=0, select bank0
  3463  044D  00EA               	movwf	___flsub@b
  3464  044E  160A  158A  21E1  120A  118A  	fcall	___flsub
  3465  0453  1283               	bcf	3,5	;RP0=0, select bank0
  3466  0454  1303               	bcf	3,6	;RP1=0, select bank0
  3467  0455  0869               	movf	?___flsub+3,w
  3468  0456  1683               	bsf	3,5	;RP0=1, select bank1
  3469  0457  1303               	bcf	3,6	;RP1=0, select bank1
  3470  0458  00C4               	movwf	(sprintf@fval+3)^(0+128)
  3471  0459  1283               	bcf	3,5	;RP0=0, select bank0
  3472  045A  1303               	bcf	3,6	;RP1=0, select bank0
  3473  045B  0868               	movf	?___flsub+2,w
  3474  045C  1683               	bsf	3,5	;RP0=1, select bank1
  3475  045D  1303               	bcf	3,6	;RP1=0, select bank1
  3476  045E  00C3               	movwf	(sprintf@fval+2)^(0+128)
  3477  045F  1283               	bcf	3,5	;RP0=0, select bank0
  3478  0460  1303               	bcf	3,6	;RP1=0, select bank0
  3479  0461  0867               	movf	?___flsub+1,w
  3480  0462  1683               	bsf	3,5	;RP0=1, select bank1
  3481  0463  1303               	bcf	3,6	;RP1=0, select bank1
  3482  0464  00C2               	movwf	(sprintf@fval+1)^(0+128)
  3483  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3484  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3485  0467  0866               	movf	?___flsub,w
  3486  0468  1683               	bsf	3,5	;RP0=1, select bank1
  3487  0469  1303               	bcf	3,6	;RP1=0, select bank1
  3488  046A  00C1               	movwf	sprintf@fval^(0+128)
  3489  046B                     l3481:
  3490                           
  3491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3492  046B  01BF               	clrf	sprintf@eexp^(0+128)
  3493  046C  01C0               	clrf	(sprintf@eexp+1)^(0+128)
  3494  046D                     l3483:
  3495                           
  3496                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3497  046D  01C8               	clrf	sprintf@c^(0+128)
  3498  046E  0AC8               	incf	sprintf@c^(0+128),f
  3499  046F                     l3489:
  3500                           
  3501                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3502  046F  0848               	movf	sprintf@c^(0+128),w
  3503  0470  00A9               	movwf	??_sprintf^(0+128)
  3504  0471  3001               	movlw	1
  3505  0472                     u5545:
  3506  0472  1003               	clrc
  3507  0473  0DA9               	rlf	??_sprintf^(0+128),f
  3508  0474  3EFF               	addlw	-1
  3509  0475  1D03               	skipz
  3510  0476  2C72               	goto	u5545
  3511  0477  1003               	clrc
  3512  0478  0D29               	rlf	??_sprintf^(0+128),w
  3513  0479  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3514  047A  0084               	movwf	4
  3515  047B  160A  158A  200A  120A  118A  	fcall	stringdir
  3516  0480  00AA               	movwf	(??_sprintf+1)^(0+128)
  3517  0481  160A  158A  200A  120A  118A  	fcall	stringdir
  3518  0486  00AB               	movwf	((??_sprintf+1)^(0+128)+1)
  3519  0487  160A  158A  200A  120A  118A  	fcall	stringdir
  3520  048C  00AC               	movwf	((??_sprintf+1)^(0+128)+2)
  3521  048D  160A  158A  200A  120A  118A  	fcall	stringdir
  3522  0492  00AD               	movwf	((??_sprintf+1)^(0+128)+3)
  3523  0493  082D               	movf	(??_sprintf+4)^(0+128),w
  3524  0494  0236               	subwf	(sprintf@val+3)^(0+128),w
  3525  0495  1D03               	skipz
  3526  0496  2CA1               	goto	u5555
  3527  0497  082C               	movf	(??_sprintf+3)^(0+128),w
  3528  0498  0235               	subwf	(sprintf@val+2)^(0+128),w
  3529  0499  1D03               	skipz
  3530  049A  2CA1               	goto	u5555
  3531  049B  082B               	movf	(??_sprintf+2)^(0+128),w
  3532  049C  0234               	subwf	(sprintf@val+1)^(0+128),w
  3533  049D  1D03               	skipz
  3534  049E  2CA1               	goto	u5555
  3535  049F  082A               	movf	(??_sprintf+1)^(0+128),w
  3536  04A0  0233               	subwf	sprintf@val^(0+128),w
  3537  04A1                     u5555:
  3538  04A1  1803               	skipnc
  3539  04A2  2CA4               	goto	u5551
  3540  04A3  2CA5               	goto	u5550
  3541  04A4                     u5551:
  3542  04A4  2CA6               	goto	l3493
  3543  04A5                     u5550:
  3544  04A5  2CB0               	goto	l3495
  3545  04A6                     l3493:
  3546  04A6  3001               	movlw	1
  3547  04A7  00A9               	movwf	??_sprintf^(0+128)
  3548  04A8  0829               	movf	??_sprintf^(0+128),w
  3549  04A9  07C8               	addwf	sprintf@c^(0+128),f
  3550  04AA  300A               	movlw	10
  3551  04AB  0648               	xorwf	sprintf@c^(0+128),w
  3552  04AC  1D03               	btfss	3,2
  3553  04AD  2CAF               	goto	u5561
  3554  04AE  2CB0               	goto	u5560
  3555  04AF                     u5561:
  3556  04AF  2C6F               	goto	l3489
  3557  04B0                     u5560:
  3558  04B0                     l3495:
  3559                           
  3560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  3561  04B0  0848               	movf	sprintf@c^(0+128),w
  3562  04B1  0746               	addwf	sprintf@prec^(0+128),w
  3563  04B2  00A9               	movwf	??_sprintf^(0+128)
  3564  04B3  0847               	movf	(sprintf@prec+1)^(0+128),w
  3565  04B4  1803               	skipnc
  3566  04B5  0A47               	incf	(sprintf@prec+1)^(0+128),w
  3567  04B6  00AA               	movwf	(??_sprintf^(0+128)+1)
  3568  04B7  083F               	movf	sprintf@eexp^(0+128),w
  3569  04B8  0729               	addwf	??_sprintf^(0+128),w
  3570  04B9  00AB               	movwf	(??_sprintf+2)^(0+128)
  3571  04BA  0840               	movf	(sprintf@eexp+1)^(0+128),w
  3572  04BB  1803               	skipnc
  3573  04BC  0A40               	incf	(sprintf@eexp+1)^(0+128),w
  3574  04BD  072A               	addwf	(??_sprintf+1)^(0+128),w
  3575  04BE  00AC               	movwf	(??_sprintf+3)^(0+128)
  3576  04BF  082B               	movf	(??_sprintf+2)^(0+128),w
  3577  04C0  02B9               	subwf	sprintf@width^(0+128),f
  3578  04C1  082C               	movf	(??_sprintf+3)^(0+128),w
  3579  04C2  1C03               	skipc
  3580  04C3  03BA               	decf	(sprintf@width+1)^(0+128),f
  3581  04C4  02BA               	subwf	(sprintf@width+1)^(0+128),f
  3582                           
  3583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  3584  04C5  0846               	movf	sprintf@prec^(0+128),w
  3585  04C6  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  3586  04C7  1903               	btfsc	3,2
  3587  04C8  2CCA               	goto	u5571
  3588  04C9  2CCB               	goto	u5570
  3589  04CA                     u5571:
  3590  04CA  2CD1               	goto	l3499
  3591  04CB                     u5570:
  3592  04CB                     l3497:
  3593                           
  3594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  3595  04CB  30FF               	movlw	255
  3596  04CC  07B9               	addwf	sprintf@width^(0+128),f
  3597  04CD  1803               	skipnc
  3598  04CE  0ABA               	incf	(sprintf@width+1)^(0+128),f
  3599  04CF  30FF               	movlw	255
  3600  04D0  07BA               	addwf	(sprintf@width+1)^(0+128),f
  3601  04D1                     l3499:
  3602                           
  3603                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  3604  04D1  3003               	movlw	3
  3605  04D2  0537               	andwf	sprintf@flag^(0+128),w
  3606  04D3  00A9               	movwf	??_sprintf^(0+128)
  3607  04D4  3000               	movlw	0
  3608  04D5  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3609  04D6  00AA               	movwf	(??_sprintf+1)^(0+128)
  3610  04D7  0829               	movf	??_sprintf^(0+128),w
  3611  04D8  042A               	iorwf	(??_sprintf^(0+128)+1),w
  3612  04D9  1903               	btfsc	3,2
  3613  04DA  2CDC               	goto	u5581
  3614  04DB  2CDD               	goto	u5580
  3615  04DC                     u5581:
  3616  04DC  2CF2               	goto	l3509
  3617  04DD                     u5580:
  3618  04DD                     l3501:
  3619                           
  3620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  3621  04DD  30FF               	movlw	255
  3622  04DE  07B9               	addwf	sprintf@width^(0+128),f
  3623  04DF  1803               	skipnc
  3624  04E0  0ABA               	incf	(sprintf@width+1)^(0+128),f
  3625  04E1  30FF               	movlw	255
  3626  04E2  07BA               	addwf	(sprintf@width+1)^(0+128),f
  3627  04E3  2CF2               	goto	l3509
  3628  04E4                     l3503:
  3629                           
  3630                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  3631  04E4  3020               	movlw	32
  3632  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  3633  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  3634  04E7  00A9               	movwf	??_sprintf^(0+128)
  3635  04E8  0845               	movf	sprintf@sp^(0+128),w
  3636  04E9  0084               	movwf	4
  3637  04EA  0829               	movf	??_sprintf^(0+128),w
  3638  04EB  1383               	bcf	3,7	;select IRP bank0
  3639  04EC  0080               	movwf	0
  3640  04ED                     l3505:
  3641  04ED  3001               	movlw	1
  3642  04EE  00A9               	movwf	??_sprintf^(0+128)
  3643  04EF  0829               	movf	??_sprintf^(0+128),w
  3644  04F0  07C5               	addwf	sprintf@sp^(0+128),f
  3645  04F1  2CDD               	goto	l3501
  3646  04F2                     l3509:
  3647                           
  3648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  3649  04F2  083A               	movf	(sprintf@width+1)^(0+128),w
  3650  04F3  3A80               	xorlw	128
  3651  04F4  00FF               	movwf	btemp+1
  3652  04F5  3080               	movlw	128
  3653  04F6  027F               	subwf	btemp+1,w
  3654  04F7  1D03               	skipz
  3655  04F8  2CFB               	goto	u5595
  3656  04F9  3001               	movlw	1
  3657  04FA  0239               	subwf	sprintf@width^(0+128),w
  3658  04FB                     u5595:
  3659  04FB  1803               	skipnc
  3660  04FC  2CFE               	goto	u5591
  3661  04FD  2CFF               	goto	u5590
  3662  04FE                     u5591:
  3663  04FE  2CE4               	goto	l3503
  3664  04FF                     u5590:
  3665  04FF                     l3511:
  3666                           
  3667                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  3668  04FF  3003               	movlw	3
  3669  0500  1683               	bsf	3,5	;RP0=1, select bank1
  3670  0501  1303               	bcf	3,6	;RP1=0, select bank1
  3671  0502  0537               	andwf	sprintf@flag^(0+128),w
  3672  0503  00A9               	movwf	??_sprintf^(0+128)
  3673  0504  3000               	movlw	0
  3674  0505  0538               	andwf	(sprintf@flag+1)^(0+128),w
  3675  0506  00AA               	movwf	(??_sprintf+1)^(0+128)
  3676  0507  0829               	movf	??_sprintf^(0+128),w
  3677  0508  042A               	iorwf	(??_sprintf^(0+128)+1),w
  3678  0509  1903               	btfsc	3,2
  3679  050A  2D0C               	goto	u5601
  3680  050B  2D0D               	goto	u5600
  3681  050C                     u5601:
  3682  050C  2D7F               	goto	l360
  3683  050D                     u5600:
  3684  050D                     l3513:
  3685                           
  3686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3687  050D  302D               	movlw	45
  3688  050E  00A9               	movwf	??_sprintf^(0+128)
  3689  050F  0845               	movf	sprintf@sp^(0+128),w
  3690  0510  0084               	movwf	4
  3691  0511  0829               	movf	??_sprintf^(0+128),w
  3692  0512  1383               	bcf	3,7	;select IRP bank0
  3693  0513  0080               	movwf	0
  3694  0514                     l3515:
  3695  0514  3001               	movlw	1
  3696  0515  00A9               	movwf	??_sprintf^(0+128)
  3697  0516  0829               	movf	??_sprintf^(0+128),w
  3698  0517  07C5               	addwf	sprintf@sp^(0+128),f
  3699  0518  2D7F               	goto	l360
  3700  0519                     l3517:
  3701                           
  3702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3703  0519  0848               	movf	sprintf@c^(0+128),w
  3704  051A  00A9               	movwf	??_sprintf^(0+128)
  3705  051B  3001               	movlw	1
  3706  051C                     u5615:
  3707  051C  1003               	clrc
  3708  051D  0DA9               	rlf	??_sprintf^(0+128),f
  3709  051E  3EFF               	addlw	-1
  3710  051F  1D03               	skipz
  3711  0520  2D1C               	goto	u5615
  3712  0521  1003               	clrc
  3713  0522  0D29               	rlf	??_sprintf^(0+128),w
  3714  0523  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3715  0524  0084               	movwf	4
  3716  0525  160A  158A  200A  120A  118A  	fcall	stringdir
  3717  052A  00F0               	movwf	___lldiv@divisor
  3718  052B  160A  158A  200A  120A  118A  	fcall	stringdir
  3719  0530  00F1               	movwf	___lldiv@divisor+1
  3720  0531  160A  158A  200A  120A  118A  	fcall	stringdir
  3721  0536  00F2               	movwf	___lldiv@divisor+2
  3722  0537  160A  158A  200A  120A  118A  	fcall	stringdir
  3723  053C  00F3               	movwf	___lldiv@divisor+3
  3724  053D  0836               	movf	(sprintf@val+3)^(0+128),w
  3725  053E  00F7               	movwf	___lldiv@dividend+3
  3726  053F  0835               	movf	(sprintf@val+2)^(0+128),w
  3727  0540  00F6               	movwf	___lldiv@dividend+2
  3728  0541  0834               	movf	(sprintf@val+1)^(0+128),w
  3729  0542  00F5               	movwf	___lldiv@dividend+1
  3730  0543  0833               	movf	sprintf@val^(0+128),w
  3731  0544  00F4               	movwf	___lldiv@dividend
  3732  0545  160A  158A  2558  120A  118A  	fcall	___lldiv
  3733  054A  0873               	movf	?___lldiv+3,w
  3734  054B  1683               	bsf	3,5	;RP0=1, select bank1
  3735  054C  1303               	bcf	3,6	;RP1=0, select bank1
  3736  054D  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3737  054E  0872               	movf	?___lldiv+2,w
  3738  054F  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3739  0550  0871               	movf	?___lldiv+1,w
  3740  0551  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3741  0552  0870               	movf	?___lldiv,w
  3742  0553  00BB               	movwf	sprintf@tmpval^(0+128)
  3743  0554                     l3519:
  3744                           
  3745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3746  0554  3000               	movlw	0
  3747  0555  00F3               	movwf	___llmod@divisor+3
  3748  0556  3000               	movlw	0
  3749  0557  00F2               	movwf	___llmod@divisor+2
  3750  0558  3000               	movlw	0
  3751  0559  00F1               	movwf	___llmod@divisor+1
  3752  055A  300A               	movlw	10
  3753  055B  00F0               	movwf	___llmod@divisor
  3754  055C  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  3755  055D  00F7               	movwf	___llmod@dividend+3
  3756  055E  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  3757  055F  00F6               	movwf	___llmod@dividend+2
  3758  0560  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  3759  0561  00F5               	movwf	___llmod@dividend+1
  3760  0562  083B               	movf	sprintf@tmpval^(0+128),w
  3761  0563  00F4               	movwf	___llmod@dividend
  3762  0564  160A  158A  244F  120A  118A  	fcall	___llmod
  3763  0569  0873               	movf	?___llmod+3,w
  3764  056A  1683               	bsf	3,5	;RP0=1, select bank1
  3765  056B  1303               	bcf	3,6	;RP1=0, select bank1
  3766  056C  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  3767  056D  0872               	movf	?___llmod+2,w
  3768  056E  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  3769  056F  0871               	movf	?___llmod+1,w
  3770  0570  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  3771  0571  0870               	movf	?___llmod,w
  3772  0572  00BB               	movwf	sprintf@tmpval^(0+128)
  3773  0573                     l3521:
  3774                           
  3775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3776  0573  083B               	movf	sprintf@tmpval^(0+128),w
  3777  0574  3E30               	addlw	48
  3778  0575  00A9               	movwf	??_sprintf^(0+128)
  3779  0576  0845               	movf	sprintf@sp^(0+128),w
  3780  0577  0084               	movwf	4
  3781  0578  0829               	movf	??_sprintf^(0+128),w
  3782  0579  1383               	bcf	3,7	;select IRP bank0
  3783  057A  0080               	movwf	0
  3784  057B  3001               	movlw	1
  3785  057C  00A9               	movwf	??_sprintf^(0+128)
  3786  057D  0829               	movf	??_sprintf^(0+128),w
  3787  057E  07C5               	addwf	sprintf@sp^(0+128),f
  3788  057F                     l360:	
  3789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3790                           
  3791                           
  3792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3793  057F  3001               	movlw	1
  3794  0580  02C8               	subwf	sprintf@c^(0+128),f
  3795  0581  0A48               	incf	sprintf@c^(0+128),w
  3796  0582  1D03               	btfss	3,2
  3797  0583  2D85               	goto	u5621
  3798  0584  2D86               	goto	u5620
  3799  0585                     u5621:
  3800  0585  2D19               	goto	l3517
  3801  0586                     u5620:
  3802  0586  2D9A               	goto	l3529
  3803  0587                     l3523:
  3804                           
  3805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3806  0587  3030               	movlw	48
  3807  0588  1683               	bsf	3,5	;RP0=1, select bank1
  3808  0589  1303               	bcf	3,6	;RP1=0, select bank1
  3809  058A  00A9               	movwf	??_sprintf^(0+128)
  3810  058B  0845               	movf	sprintf@sp^(0+128),w
  3811  058C  0084               	movwf	4
  3812  058D  0829               	movf	??_sprintf^(0+128),w
  3813  058E  1383               	bcf	3,7	;select IRP bank0
  3814  058F  0080               	movwf	0
  3815  0590                     l3525:
  3816  0590  3001               	movlw	1
  3817  0591  00A9               	movwf	??_sprintf^(0+128)
  3818  0592  0829               	movf	??_sprintf^(0+128),w
  3819  0593  07C5               	addwf	sprintf@sp^(0+128),f
  3820  0594                     l3527:
  3821                           
  3822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3823  0594  30FF               	movlw	255
  3824  0595  07BF               	addwf	sprintf@eexp^(0+128),f
  3825  0596  1803               	skipnc
  3826  0597  0AC0               	incf	(sprintf@eexp+1)^(0+128),f
  3827  0598  30FF               	movlw	255
  3828  0599  07C0               	addwf	(sprintf@eexp+1)^(0+128),f
  3829  059A                     l3529:
  3830                           
  3831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3832  059A  0840               	movf	(sprintf@eexp+1)^(0+128),w
  3833  059B  3A80               	xorlw	128
  3834  059C  00FF               	movwf	btemp+1
  3835  059D  3080               	movlw	128
  3836  059E  027F               	subwf	btemp+1,w
  3837  059F  1D03               	skipz
  3838  05A0  2DA3               	goto	u5635
  3839  05A1  3001               	movlw	1
  3840  05A2  023F               	subwf	sprintf@eexp^(0+128),w
  3841  05A3                     u5635:
  3842  05A3  1803               	skipnc
  3843  05A4  2DA6               	goto	u5631
  3844  05A5  2DA7               	goto	u5630
  3845  05A6                     u5631:
  3846  05A6  2D87               	goto	l3523
  3847  05A7                     u5630:
  3848  05A7                     l3531:
  3849                           
  3850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3851  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  3852  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  3853  05A9  0847               	movf	(sprintf@prec+1)^(0+128),w
  3854  05AA  3A80               	xorlw	128
  3855  05AB  00FF               	movwf	btemp+1
  3856  05AC  3080               	movlw	128
  3857  05AD  027F               	subwf	btemp+1,w
  3858  05AE  1D03               	skipz
  3859  05AF  2DB2               	goto	u5645
  3860  05B0  3009               	movlw	9
  3861  05B1  0246               	subwf	sprintf@prec^(0+128),w
  3862  05B2                     u5645:
  3863  05B2  1C03               	skipc
  3864  05B3  2DB5               	goto	u5641
  3865  05B4  2DB6               	goto	u5640
  3866  05B5                     u5641:
  3867  05B5  2DBD               	goto	l3535
  3868  05B6                     u5640:
  3869  05B6                     l3533:
  3870                           
  3871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3872  05B6  3008               	movlw	8
  3873  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  3874  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  3875  05B9  00A9               	movwf	??_sprintf^(0+128)
  3876  05BA  0829               	movf	??_sprintf^(0+128),w
  3877  05BB  00C8               	movwf	sprintf@c^(0+128)
  3878  05BC  2DC3               	goto	l367
  3879  05BD                     l3535:
  3880                           
  3881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3882  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  3883  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  3884  05BF  0846               	movf	sprintf@prec^(0+128),w
  3885  05C0  00A9               	movwf	??_sprintf^(0+128)
  3886  05C1  0829               	movf	??_sprintf^(0+128),w
  3887  05C2  00C8               	movwf	sprintf@c^(0+128)
  3888  05C3                     l367:
  3889                           
  3890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3891  05C3  0848               	movf	sprintf@c^(0+128),w
  3892  05C4  00A9               	movwf	??_sprintf^(0+128)
  3893  05C5  01AA               	clrf	(??_sprintf^(0+128)+1)
  3894  05C6  0829               	movf	??_sprintf^(0+128),w
  3895  05C7  02C6               	subwf	sprintf@prec^(0+128),f
  3896  05C8  082A               	movf	(??_sprintf+1)^(0+128),w
  3897  05C9  1C03               	skipc
  3898  05CA  03C7               	decf	(sprintf@prec+1)^(0+128),f
  3899  05CB  02C7               	subwf	(sprintf@prec+1)^(0+128),f
  3900  05CC                     l3537:
  3901                           
  3902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3903  05CC  0848               	movf	sprintf@c^(0+128),w
  3904  05CD  1903               	btfsc	3,2
  3905  05CE  2DD0               	goto	u5651
  3906  05CF  2DD1               	goto	u5650
  3907  05D0                     u5651:
  3908  05D0  2DDC               	goto	l3543
  3909  05D1                     u5650:
  3910  05D1                     l3539:
  3911                           
  3912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3913  05D1  302E               	movlw	46
  3914  05D2  00A9               	movwf	??_sprintf^(0+128)
  3915  05D3  0845               	movf	sprintf@sp^(0+128),w
  3916  05D4  0084               	movwf	4
  3917  05D5  0829               	movf	??_sprintf^(0+128),w
  3918  05D6  1383               	bcf	3,7	;select IRP bank0
  3919  05D7  0080               	movwf	0
  3920  05D8                     l3541:
  3921  05D8  3001               	movlw	1
  3922  05D9  00A9               	movwf	??_sprintf^(0+128)
  3923  05DA  0829               	movf	??_sprintf^(0+128),w
  3924  05DB  07C5               	addwf	sprintf@sp^(0+128),f
  3925  05DC                     l3543:
  3926                           
  3927                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3928  05DC  0848               	movf	sprintf@c^(0+128),w
  3929  05DD  120A  158A  2140  120A  118A  	fcall	_scale
  3930  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3931  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  3932  05E4  0841               	movf	?_scale+3,w
  3933  05E5  1683               	bsf	3,5	;RP0=1, select bank1
  3934  05E6  1303               	bcf	3,6	;RP1=0, select bank1
  3935  05E7  00B1               	movwf	(_sprintf$999+3)^(0+128)
  3936  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  3937  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  3938  05EA  0840               	movf	?_scale+2,w
  3939  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  3940  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  3941  05ED  00B0               	movwf	(_sprintf$999+2)^(0+128)
  3942  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  3943  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  3944  05F0  083F               	movf	?_scale+1,w
  3945  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  3946  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  3947  05F3  00AF               	movwf	(_sprintf$999+1)^(0+128)
  3948  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  3949  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  3950  05F6  083E               	movf	?_scale,w
  3951  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  3952  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  3953  05F9  00AE               	movwf	_sprintf$999^(0+128)
  3954  05FA                     l3545:
  3955                           
  3956                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3957  05FA  0831               	movf	(_sprintf$999+3)^(0+128),w
  3958  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  3959  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  3960  05FD  00AB               	movwf	___flmul@a+3
  3961  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  3962  05FF  1303               	bcf	3,6	;RP1=0, select bank1
  3963  0600  0830               	movf	(_sprintf$999+2)^(0+128),w
  3964  0601  1283               	bcf	3,5	;RP0=0, select bank0
  3965  0602  1303               	bcf	3,6	;RP1=0, select bank0
  3966  0603  00AA               	movwf	___flmul@a+2
  3967  0604  1683               	bsf	3,5	;RP0=1, select bank1
  3968  0605  1303               	bcf	3,6	;RP1=0, select bank1
  3969  0606  082F               	movf	(_sprintf$999+1)^(0+128),w
  3970  0607  1283               	bcf	3,5	;RP0=0, select bank0
  3971  0608  1303               	bcf	3,6	;RP1=0, select bank0
  3972  0609  00A9               	movwf	___flmul@a+1
  3973  060A  1683               	bsf	3,5	;RP0=1, select bank1
  3974  060B  1303               	bcf	3,6	;RP1=0, select bank1
  3975  060C  082E               	movf	_sprintf$999^(0+128),w
  3976  060D  1283               	bcf	3,5	;RP0=0, select bank0
  3977  060E  1303               	bcf	3,6	;RP1=0, select bank0
  3978  060F  00A8               	movwf	___flmul@a
  3979  0610  1683               	bsf	3,5	;RP0=1, select bank1
  3980  0611  1303               	bcf	3,6	;RP1=0, select bank1
  3981  0612  0844               	movf	(sprintf@fval+3)^(0+128),w
  3982  0613  1283               	bcf	3,5	;RP0=0, select bank0
  3983  0614  1303               	bcf	3,6	;RP1=0, select bank0
  3984  0615  00A7               	movwf	___flmul@b+3
  3985  0616  1683               	bsf	3,5	;RP0=1, select bank1
  3986  0617  1303               	bcf	3,6	;RP1=0, select bank1
  3987  0618  0843               	movf	(sprintf@fval+2)^(0+128),w
  3988  0619  1283               	bcf	3,5	;RP0=0, select bank0
  3989  061A  1303               	bcf	3,6	;RP1=0, select bank0
  3990  061B  00A6               	movwf	___flmul@b+2
  3991  061C  1683               	bsf	3,5	;RP0=1, select bank1
  3992  061D  1303               	bcf	3,6	;RP1=0, select bank1
  3993  061E  0842               	movf	(sprintf@fval+1)^(0+128),w
  3994  061F  1283               	bcf	3,5	;RP0=0, select bank0
  3995  0620  1303               	bcf	3,6	;RP1=0, select bank0
  3996  0621  00A5               	movwf	___flmul@b+1
  3997  0622  1683               	bsf	3,5	;RP0=1, select bank1
  3998  0623  1303               	bcf	3,6	;RP1=0, select bank1
  3999  0624  0841               	movf	sprintf@fval^(0+128),w
  4000  0625  1283               	bcf	3,5	;RP0=0, select bank0
  4001  0626  1303               	bcf	3,6	;RP1=0, select bank0
  4002  0627  00A4               	movwf	___flmul@b
  4003  0628  120A  158A  249F  120A  118A  	fcall	___flmul
  4004  062D  1283               	bcf	3,5	;RP0=0, select bank0
  4005  062E  1303               	bcf	3,6	;RP1=0, select bank0
  4006  062F  0827               	movf	?___flmul+3,w
  4007  0630  00D4               	movwf	___fltol@f1+3
  4008  0631  0826               	movf	?___flmul+2,w
  4009  0632  00D3               	movwf	___fltol@f1+2
  4010  0633  0825               	movf	?___flmul+1,w
  4011  0634  00D2               	movwf	___fltol@f1+1
  4012  0635  0824               	movf	?___flmul,w
  4013  0636  00D1               	movwf	___fltol@f1
  4014  0637  120A  158A  2006  120A  118A  	fcall	___fltol
  4015  063C  1283               	bcf	3,5	;RP0=0, select bank0
  4016  063D  1303               	bcf	3,6	;RP1=0, select bank0
  4017  063E  0854               	movf	?___fltol+3,w
  4018  063F  1683               	bsf	3,5	;RP0=1, select bank1
  4019  0640  1303               	bcf	3,6	;RP1=0, select bank1
  4020  0641  00B6               	movwf	(sprintf@val+3)^(0+128)
  4021  0642  1283               	bcf	3,5	;RP0=0, select bank0
  4022  0643  1303               	bcf	3,6	;RP1=0, select bank0
  4023  0644  0853               	movf	?___fltol+2,w
  4024  0645  1683               	bsf	3,5	;RP0=1, select bank1
  4025  0646  1303               	bcf	3,6	;RP1=0, select bank1
  4026  0647  00B5               	movwf	(sprintf@val+2)^(0+128)
  4027  0648  1283               	bcf	3,5	;RP0=0, select bank0
  4028  0649  1303               	bcf	3,6	;RP1=0, select bank0
  4029  064A  0852               	movf	?___fltol+1,w
  4030  064B  1683               	bsf	3,5	;RP0=1, select bank1
  4031  064C  1303               	bcf	3,6	;RP1=0, select bank1
  4032  064D  00B4               	movwf	(sprintf@val+1)^(0+128)
  4033  064E  1283               	bcf	3,5	;RP0=0, select bank0
  4034  064F  1303               	bcf	3,6	;RP1=0, select bank0
  4035  0650  0851               	movf	?___fltol,w
  4036  0651  1683               	bsf	3,5	;RP0=1, select bank1
  4037  0652  1303               	bcf	3,6	;RP1=0, select bank1
  4038  0653  00B3               	movwf	sprintf@val^(0+128)
  4039                           
  4040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4041  0654  2EF6               	goto	l3555
  4042  0655                     l3547:
  4043                           
  4044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  4045  0655  0848               	movf	sprintf@c^(0+128),w
  4046  0656  00A9               	movwf	??_sprintf^(0+128)
  4047  0657  3001               	movlw	1
  4048  0658                     u5665:
  4049  0658  1003               	clrc
  4050  0659  0DA9               	rlf	??_sprintf^(0+128),f
  4051  065A  3EFF               	addlw	-1
  4052  065B  1D03               	skipz
  4053  065C  2E58               	goto	u5665
  4054  065D  1003               	clrc
  4055  065E  0D29               	rlf	??_sprintf^(0+128),w
  4056  065F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4057  0660  0084               	movwf	4
  4058  0661  160A  158A  200A  120A  118A  	fcall	stringdir
  4059  0666  00F0               	movwf	___lldiv@divisor
  4060  0667  160A  158A  200A  120A  118A  	fcall	stringdir
  4061  066C  00F1               	movwf	___lldiv@divisor+1
  4062  066D  160A  158A  200A  120A  118A  	fcall	stringdir
  4063  0672  00F2               	movwf	___lldiv@divisor+2
  4064  0673  160A  158A  200A  120A  118A  	fcall	stringdir
  4065  0678  00F3               	movwf	___lldiv@divisor+3
  4066  0679  0836               	movf	(sprintf@val+3)^(0+128),w
  4067  067A  00F7               	movwf	___lldiv@dividend+3
  4068  067B  0835               	movf	(sprintf@val+2)^(0+128),w
  4069  067C  00F6               	movwf	___lldiv@dividend+2
  4070  067D  0834               	movf	(sprintf@val+1)^(0+128),w
  4071  067E  00F5               	movwf	___lldiv@dividend+1
  4072  067F  0833               	movf	sprintf@val^(0+128),w
  4073  0680  00F4               	movwf	___lldiv@dividend
  4074  0681  160A  158A  2558  120A  118A  	fcall	___lldiv
  4075  0686  0873               	movf	?___lldiv+3,w
  4076  0687  1683               	bsf	3,5	;RP0=1, select bank1
  4077  0688  1303               	bcf	3,6	;RP1=0, select bank1
  4078  0689  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  4079  068A  0872               	movf	?___lldiv+2,w
  4080  068B  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  4081  068C  0871               	movf	?___lldiv+1,w
  4082  068D  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  4083  068E  0870               	movf	?___lldiv,w
  4084  068F  00BB               	movwf	sprintf@tmpval^(0+128)
  4085  0690                     l3549:
  4086                           
  4087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  4088  0690  3000               	movlw	0
  4089  0691  00F3               	movwf	___llmod@divisor+3
  4090  0692  3000               	movlw	0
  4091  0693  00F2               	movwf	___llmod@divisor+2
  4092  0694  3000               	movlw	0
  4093  0695  00F1               	movwf	___llmod@divisor+1
  4094  0696  300A               	movlw	10
  4095  0697  00F0               	movwf	___llmod@divisor
  4096  0698  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  4097  0699  00F7               	movwf	___llmod@dividend+3
  4098  069A  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  4099  069B  00F6               	movwf	___llmod@dividend+2
  4100  069C  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  4101  069D  00F5               	movwf	___llmod@dividend+1
  4102  069E  083B               	movf	sprintf@tmpval^(0+128),w
  4103  069F  00F4               	movwf	___llmod@dividend
  4104  06A0  160A  158A  244F  120A  118A  	fcall	___llmod
  4105  06A5  0873               	movf	?___llmod+3,w
  4106  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  4107  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  4108  06A8  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  4109  06A9  0872               	movf	?___llmod+2,w
  4110  06AA  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  4111  06AB  0871               	movf	?___llmod+1,w
  4112  06AC  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  4113  06AD  0870               	movf	?___llmod,w
  4114  06AE  00BB               	movwf	sprintf@tmpval^(0+128)
  4115  06AF                     l3551:
  4116                           
  4117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  4118  06AF  083B               	movf	sprintf@tmpval^(0+128),w
  4119  06B0  3E30               	addlw	48
  4120  06B1  00A9               	movwf	??_sprintf^(0+128)
  4121  06B2  0845               	movf	sprintf@sp^(0+128),w
  4122  06B3  0084               	movwf	4
  4123  06B4  0829               	movf	??_sprintf^(0+128),w
  4124  06B5  1383               	bcf	3,7	;select IRP bank0
  4125  06B6  0080               	movwf	0
  4126  06B7  3001               	movlw	1
  4127  06B8  00A9               	movwf	??_sprintf^(0+128)
  4128  06B9  0829               	movf	??_sprintf^(0+128),w
  4129  06BA  07C5               	addwf	sprintf@sp^(0+128),f
  4130  06BB                     l3553:
  4131                           
  4132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  4133  06BB  0848               	movf	sprintf@c^(0+128),w
  4134  06BC  00A9               	movwf	??_sprintf^(0+128)
  4135  06BD  3001               	movlw	1
  4136  06BE                     u5675:
  4137  06BE  1003               	clrc
  4138  06BF  0DA9               	rlf	??_sprintf^(0+128),f
  4139  06C0  3EFF               	addlw	-1
  4140  06C1  1D03               	skipz
  4141  06C2  2EBE               	goto	u5675
  4142  06C3  1003               	clrc
  4143  06C4  0D29               	rlf	??_sprintf^(0+128),w
  4144  06C5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4145  06C6  0084               	movwf	4
  4146  06C7  160A  158A  200A  120A  118A  	fcall	stringdir
  4147  06CC  00F0               	movwf	___llmod@divisor
  4148  06CD  160A  158A  200A  120A  118A  	fcall	stringdir
  4149  06D2  00F1               	movwf	___llmod@divisor+1
  4150  06D3  160A  158A  200A  120A  118A  	fcall	stringdir
  4151  06D8  00F2               	movwf	___llmod@divisor+2
  4152  06D9  160A  158A  200A  120A  118A  	fcall	stringdir
  4153  06DE  00F3               	movwf	___llmod@divisor+3
  4154  06DF  0836               	movf	(sprintf@val+3)^(0+128),w
  4155  06E0  00F7               	movwf	___llmod@dividend+3
  4156  06E1  0835               	movf	(sprintf@val+2)^(0+128),w
  4157  06E2  00F6               	movwf	___llmod@dividend+2
  4158  06E3  0834               	movf	(sprintf@val+1)^(0+128),w
  4159  06E4  00F5               	movwf	___llmod@dividend+1
  4160  06E5  0833               	movf	sprintf@val^(0+128),w
  4161  06E6  00F4               	movwf	___llmod@dividend
  4162  06E7  160A  158A  244F  120A  118A  	fcall	___llmod
  4163  06EC  0873               	movf	?___llmod+3,w
  4164  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  4165  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  4166  06EF  00B6               	movwf	(sprintf@val+3)^(0+128)
  4167  06F0  0872               	movf	?___llmod+2,w
  4168  06F1  00B5               	movwf	(sprintf@val+2)^(0+128)
  4169  06F2  0871               	movf	?___llmod+1,w
  4170  06F3  00B4               	movwf	(sprintf@val+1)^(0+128)
  4171  06F4  0870               	movf	?___llmod,w
  4172  06F5  00B3               	movwf	sprintf@val^(0+128)
  4173  06F6                     l3555:
  4174                           
  4175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4176  06F6  3001               	movlw	1
  4177  06F7  02C8               	subwf	sprintf@c^(0+128),f
  4178  06F8  0A48               	incf	sprintf@c^(0+128),w
  4179  06F9  1D03               	btfss	3,2
  4180  06FA  2EFC               	goto	u5681
  4181  06FB  2EFD               	goto	u5680
  4182  06FC                     u5681:
  4183  06FC  2E55               	goto	l3547
  4184  06FD                     u5680:
  4185  06FD  2F0F               	goto	l3563
  4186  06FE                     l3557:
  4187                           
  4188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  4189  06FE  3030               	movlw	48
  4190  06FF  00A9               	movwf	??_sprintf^(0+128)
  4191  0700  0845               	movf	sprintf@sp^(0+128),w
  4192  0701  0084               	movwf	4
  4193  0702  0829               	movf	??_sprintf^(0+128),w
  4194  0703  1383               	bcf	3,7	;select IRP bank0
  4195  0704  0080               	movwf	0
  4196  0705                     l3559:
  4197  0705  3001               	movlw	1
  4198  0706  00A9               	movwf	??_sprintf^(0+128)
  4199  0707  0829               	movf	??_sprintf^(0+128),w
  4200  0708  07C5               	addwf	sprintf@sp^(0+128),f
  4201  0709                     l3561:
  4202                           
  4203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  4204  0709  30FF               	movlw	255
  4205  070A  07C6               	addwf	sprintf@prec^(0+128),f
  4206  070B  1803               	skipnc
  4207  070C  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  4208  070D  30FF               	movlw	255
  4209  070E  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  4210  070F                     l3563:
  4211                           
  4212                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  4213  070F  0846               	movf	sprintf@prec^(0+128),w
  4214  0710  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  4215  0711  1D03               	btfss	3,2
  4216  0712  2F14               	goto	u5691
  4217  0713  2F15               	goto	u5690
  4218  0714                     u5691:
  4219  0714  2EFE               	goto	l3557
  4220  0715                     u5690:
  4221  0715  2FD9               	goto	l3611
  4222  0716                     l3565:
  4223                           
  4224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  4225  0716  0846               	movf	sprintf@prec^(0+128),w
  4226  0717  0447               	iorwf	(sprintf@prec+1)^(0+128),w
  4227  0718  1D03               	btfss	3,2
  4228  0719  2F1B               	goto	u5701
  4229  071A  2F1C               	goto	u5700
  4230  071B                     u5701:
  4231  071B  2F2A               	goto	l375
  4232  071C                     u5700:
  4233  071C                     l3567:
  4234  071C  0836               	movf	(sprintf@val+3)^(0+128),w
  4235  071D  0435               	iorwf	(sprintf@val+2)^(0+128),w
  4236  071E  0434               	iorwf	(sprintf@val+1)^(0+128),w
  4237  071F  0433               	iorwf	sprintf@val^(0+128),w
  4238  0720  1D03               	skipz
  4239  0721  2F23               	goto	u5711
  4240  0722  2F24               	goto	u5710
  4241  0723                     u5711:
  4242  0723  2F2A               	goto	l375
  4243  0724                     u5710:
  4244  0724                     l3569:
  4245                           
  4246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4247  0724  3001               	movlw	1
  4248  0725  07C6               	addwf	sprintf@prec^(0+128),f
  4249  0726  1803               	skipnc
  4250  0727  0AC7               	incf	(sprintf@prec+1)^(0+128),f
  4251  0728  3000               	movlw	0
  4252  0729  07C7               	addwf	(sprintf@prec+1)^(0+128),f
  4253  072A                     l375:
  4254                           
  4255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4256  072A  0847               	movf	(sprintf@prec+1)^(0+128),w
  4257  072B  3A80               	xorlw	128
  4258  072C  3C80               	sublw	128
  4259  072D  1D03               	skipz
  4260  072E  2F31               	goto	u5725
  4261  072F  0846               	movf	sprintf@prec^(0+128),w
  4262  0730  0248               	subwf	sprintf@c^(0+128),w
  4263  0731                     u5725:
  4264  0731  1803               	skipnc
  4265  0732  2F34               	goto	u5721
  4266  0733  2F35               	goto	u5720
  4267  0734                     u5721:
  4268  0734  2F3C               	goto	l3573
  4269  0735                     u5720:
  4270  0735                     l3571:
  4271                           
  4272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  4273  0735  1683               	bsf	3,5	;RP0=1, select bank1
  4274  0736  1303               	bcf	3,6	;RP1=0, select bank1
  4275  0737  0846               	movf	sprintf@prec^(0+128),w
  4276  0738  00A9               	movwf	??_sprintf^(0+128)
  4277  0739  0829               	movf	??_sprintf^(0+128),w
  4278  073A  00C8               	movwf	sprintf@c^(0+128)
  4279  073B  2F54               	goto	l3577
  4280  073C                     l3573:
  4281  073C  1683               	bsf	3,5	;RP0=1, select bank1
  4282  073D  1303               	bcf	3,6	;RP1=0, select bank1
  4283  073E  0847               	movf	(sprintf@prec+1)^(0+128),w
  4284  073F  3A80               	xorlw	128
  4285  0740  00A9               	movwf	??_sprintf^(0+128)
  4286  0741  3080               	movlw	128
  4287  0742  0229               	subwf	??_sprintf^(0+128),w
  4288  0743  1D03               	skipz
  4289  0744  2F47               	goto	u5735
  4290  0745  0848               	movf	sprintf@c^(0+128),w
  4291  0746  0246               	subwf	sprintf@prec^(0+128),w
  4292  0747                     u5735:
  4293  0747  1803               	skipnc
  4294  0748  2F4A               	goto	u5731
  4295  0749  2F4B               	goto	u5730
  4296  074A                     u5731:
  4297  074A  2F54               	goto	l3577
  4298  074B                     u5730:
  4299  074B                     l3575:
  4300                           
  4301                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  4302  074B  1683               	bsf	3,5	;RP0=1, select bank1
  4303  074C  1303               	bcf	3,6	;RP1=0, select bank1
  4304  074D  0848               	movf	sprintf@c^(0+128),w
  4305  074E  00A9               	movwf	??_sprintf^(0+128)
  4306  074F  01AA               	clrf	(??_sprintf^(0+128)+1)
  4307  0750  0829               	movf	??_sprintf^(0+128),w
  4308  0751  00C6               	movwf	sprintf@prec^(0+128)
  4309  0752  082A               	movf	(??_sprintf+1)^(0+128),w
  4310  0753  00C7               	movwf	(sprintf@prec+1)^(0+128)
  4311  0754                     l3577:
  4312                           
  4313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  4314  0754  1683               	bsf	3,5	;RP0=1, select bank1
  4315  0755  1303               	bcf	3,6	;RP1=0, select bank1
  4316  0756  0839               	movf	sprintf@width^(0+128),w
  4317  0757  043A               	iorwf	(sprintf@width+1)^(0+128),w
  4318  0758  1903               	btfsc	3,2
  4319  0759  2F5B               	goto	u5741
  4320  075A  2F5C               	goto	u5740
  4321  075B                     u5741:
  4322  075B  2F6E               	goto	l3583
  4323  075C                     u5740:
  4324  075C                     l3579:
  4325  075C  3003               	movlw	3
  4326  075D  0537               	andwf	sprintf@flag^(0+128),w
  4327  075E  00A9               	movwf	??_sprintf^(0+128)
  4328  075F  3000               	movlw	0
  4329  0760  0538               	andwf	(sprintf@flag+1)^(0+128),w
  4330  0761  00AA               	movwf	(??_sprintf+1)^(0+128)
  4331  0762  0829               	movf	??_sprintf^(0+128),w
  4332  0763  042A               	iorwf	(??_sprintf^(0+128)+1),w
  4333  0764  1903               	btfsc	3,2
  4334  0765  2F67               	goto	u5751
  4335  0766  2F68               	goto	u5750
  4336  0767                     u5751:
  4337  0767  2F6E               	goto	l3583
  4338  0768                     u5750:
  4339  0768                     l3581:
  4340                           
  4341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  4342  0768  30FF               	movlw	255
  4343  0769  07B9               	addwf	sprintf@width^(0+128),f
  4344  076A  1803               	skipnc
  4345  076B  0ABA               	incf	(sprintf@width+1)^(0+128),f
  4346  076C  30FF               	movlw	255
  4347  076D  07BA               	addwf	(sprintf@width+1)^(0+128),f
  4348  076E                     l3583:
  4349                           
  4350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  4351  076E  1F38               	btfss	(sprintf@flag+1)^(0+128),6
  4352  076F  2F71               	goto	u5761
  4353  0770  2F72               	goto	u5760
  4354  0771                     u5761:
  4355  0771  2F8D               	goto	l3591
  4356  0772                     u5760:
  4357  0772                     l3585:
  4358                           
  4359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  4360  0772  0847               	movf	(sprintf@prec+1)^(0+128),w
  4361  0773  3A80               	xorlw	128
  4362  0774  00A9               	movwf	??_sprintf^(0+128)
  4363  0775  083A               	movf	(sprintf@width+1)^(0+128),w
  4364  0776  3A80               	xorlw	128
  4365  0777  0229               	subwf	??_sprintf^(0+128),w
  4366  0778  1D03               	skipz
  4367  0779  2F7C               	goto	u5775
  4368  077A  0839               	movf	sprintf@width^(0+128),w
  4369  077B  0246               	subwf	sprintf@prec^(0+128),w
  4370  077C                     u5775:
  4371  077C  1803               	skipnc
  4372  077D  2F7F               	goto	u5771
  4373  077E  2F80               	goto	u5770
  4374  077F                     u5771:
  4375  077F  2F89               	goto	l3589
  4376  0780                     u5770:
  4377  0780                     l3587:
  4378                           
  4379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  4380  0780  1683               	bsf	3,5	;RP0=1, select bank1
  4381  0781  1303               	bcf	3,6	;RP1=0, select bank1
  4382  0782  0846               	movf	sprintf@prec^(0+128),w
  4383  0783  02B9               	subwf	sprintf@width^(0+128),f
  4384  0784  0847               	movf	(sprintf@prec+1)^(0+128),w
  4385  0785  1C03               	skipc
  4386  0786  03BA               	decf	(sprintf@width+1)^(0+128),f
  4387  0787  02BA               	subwf	(sprintf@width+1)^(0+128),f
  4388  0788  2F8D               	goto	l3591
  4389  0789                     l3589:
  4390                           
  4391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  4392  0789  1683               	bsf	3,5	;RP0=1, select bank1
  4393  078A  1303               	bcf	3,6	;RP1=0, select bank1
  4394  078B  01B9               	clrf	sprintf@width^(0+128)
  4395  078C  01BA               	clrf	(sprintf@width+1)^(0+128)
  4396  078D                     l3591:
  4397                           
  4398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  4399  078D  083A               	movf	(sprintf@width+1)^(0+128),w
  4400  078E  3A80               	xorlw	128
  4401  078F  3C80               	sublw	128
  4402  0790  1D03               	skipz
  4403  0791  2F94               	goto	u5785
  4404  0792  0839               	movf	sprintf@width^(0+128),w
  4405  0793  0248               	subwf	sprintf@c^(0+128),w
  4406  0794                     u5785:
  4407  0794  1803               	skipnc
  4408  0795  2F97               	goto	u5781
  4409  0796  2F98               	goto	u5780
  4410  0797                     u5781:
  4411  0797  2FA4               	goto	l3595
  4412  0798                     u5780:
  4413  0798                     l3593:
  4414                           
  4415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  4416  0798  1683               	bsf	3,5	;RP0=1, select bank1
  4417  0799  1303               	bcf	3,6	;RP1=0, select bank1
  4418  079A  0848               	movf	sprintf@c^(0+128),w
  4419  079B  00A9               	movwf	??_sprintf^(0+128)
  4420  079C  01AA               	clrf	(??_sprintf^(0+128)+1)
  4421  079D  0829               	movf	??_sprintf^(0+128),w
  4422  079E  02B9               	subwf	sprintf@width^(0+128),f
  4423  079F  082A               	movf	(??_sprintf+1)^(0+128),w
  4424  07A0  1C03               	skipc
  4425  07A1  03BA               	decf	(sprintf@width+1)^(0+128),f
  4426  07A2  02BA               	subwf	(sprintf@width+1)^(0+128),f
  4427  07A3  2FA8               	goto	l3597
  4428  07A4                     l3595:
  4429                           
  4430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  4431  07A4  1683               	bsf	3,5	;RP0=1, select bank1
  4432  07A5  1303               	bcf	3,6	;RP1=0, select bank1
  4433  07A6  01B9               	clrf	sprintf@width^(0+128)
  4434  07A7  01BA               	clrf	(sprintf@width+1)^(0+128)
  4435  07A8                     l3597:
  4436                           
  4437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  4438  07A8  0839               	movf	sprintf@width^(0+128),w
  4439  07A9  043A               	iorwf	(sprintf@width+1)^(0+128),w
  4440  07AA  1903               	btfsc	3,2
  4441  07AB  2FAD               	goto	u5791
  4442  07AC  2FAE               	goto	u5790
  4443  07AD                     u5791:
  4444  07AD  2FC5               	goto	l3605
  4445  07AE                     u5790:
  4446  07AE                     l3599:
  4447                           
  4448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  4449  07AE  3020               	movlw	32
  4450  07AF  00A9               	movwf	??_sprintf^(0+128)
  4451  07B0  0845               	movf	sprintf@sp^(0+128),w
  4452  07B1  0084               	movwf	4
  4453  07B2  0829               	movf	??_sprintf^(0+128),w
  4454  07B3  1383               	bcf	3,7	;select IRP bank0
  4455  07B4  0080               	movwf	0
  4456  07B5                     l3601:
  4457  07B5  3001               	movlw	1
  4458  07B6  00A9               	movwf	??_sprintf^(0+128)
  4459  07B7  0829               	movf	??_sprintf^(0+128),w
  4460  07B8  07C5               	addwf	sprintf@sp^(0+128),f
  4461  07B9                     l3603:
  4462  07B9  30FF               	movlw	255
  4463  07BA  07B9               	addwf	sprintf@width^(0+128),f
  4464  07BB  1803               	skipnc
  4465  07BC  0ABA               	incf	(sprintf@width+1)^(0+128),f
  4466  07BD  30FF               	movlw	255
  4467  07BE  07BA               	addwf	(sprintf@width+1)^(0+128),f
  4468  07BF  0839               	movf	sprintf@width^(0+128),w
  4469  07C0  043A               	iorwf	(sprintf@width+1)^(0+128),w
  4470  07C1  1D03               	btfss	3,2
  4471  07C2  2FC4               	goto	u5801
  4472  07C3  2FC5               	goto	u5800
  4473  07C4                     u5801:
  4474  07C4  2FAE               	goto	l3599
  4475  07C5                     u5800:
  4476  07C5                     l3605:
  4477                           
  4478                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  4479  07C5  3003               	movlw	3
  4480  07C6  0537               	andwf	sprintf@flag^(0+128),w
  4481  07C7  00A9               	movwf	??_sprintf^(0+128)
  4482  07C8  3000               	movlw	0
  4483  07C9  0538               	andwf	(sprintf@flag+1)^(0+128),w
  4484  07CA  00AA               	movwf	(??_sprintf+1)^(0+128)
  4485  07CB  0829               	movf	??_sprintf^(0+128),w
  4486  07CC  042A               	iorwf	(??_sprintf^(0+128)+1),w
  4487  07CD  1903               	btfsc	3,2
  4488  07CE  2FD0               	goto	u5811
  4489  07CF  2FD1               	goto	u5810
  4490  07D0                     u5811:
  4491  07D0  2FD9               	goto	l3611
  4492  07D1                     u5810:
  4493  07D1                     l3607:
  4494                           
  4495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4496  07D1  302D               	movlw	45
  4497  07D2  00A9               	movwf	??_sprintf^(0+128)
  4498  07D3  0845               	movf	sprintf@sp^(0+128),w
  4499  07D4  0084               	movwf	4
  4500  07D5  0829               	movf	??_sprintf^(0+128),w
  4501  07D6  1383               	bcf	3,7	;select IRP bank0
  4502  07D7  0080               	movwf	0
  4503  07D8  288A               	goto	l3367
  4504  07D9                     l3611:
  4505                           
  4506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4507  07D9  3001               	movlw	1
  4508  07DA  07A0               	addwf	sprintf@f^(0+128),f
  4509  07DB  30FF               	movlw	-1
  4510  07DC  0720               	addwf	sprintf@f^(0+128),w
  4511  07DD  0084               	movwf	4
  4512  07DE  160A  158A  200A  120A  118A  	fcall	stringdir
  4513  07E3  00A9               	movwf	??_sprintf^(0+128)
  4514  07E4  0829               	movf	??_sprintf^(0+128),w
  4515  07E5  00C8               	movwf	sprintf@c^(0+128)
  4516  07E6  0848               	movf	sprintf@c^(0+128),w
  4517  07E7  1D03               	btfss	3,2
  4518  07E8  2FEA               	goto	u5821
  4519  07E9  2FEB               	goto	u5820
  4520  07EA                     u5821:
  4521  07EA  287D               	goto	l3363
  4522  07EB                     u5820:
  4523  07EB                     l3613:
  4524                           
  4525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4526  07EB  0845               	movf	sprintf@sp^(0+128),w
  4527  07EC  0084               	movwf	4
  4528  07ED  1383               	bcf	3,7	;select IRP bank0
  4529  07EE  0180               	clrf	0
  4530  07EF                     l390:
  4531  07EF  0008               	return
  4532  07F0                     __end_of_sprintf:
  4533                           
  4534                           	psect	text9
  4535  0940                     __ptext9:	
  4536 ;; *************** function _scale *****************
  4537 ;; Defined at:
  4538 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;  scl             1    wreg     char 
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;  scl             1   48[BANK0 ] char 
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  4   30[BANK0 ] char 
  4545 ;; Registers used:
  4546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4552 ;;      Params:         0       4       0       0       0
  4553 ;;      Locals:         0       5       0       0       0
  4554 ;;      Temps:          0      10       0       0       0
  4555 ;;      Totals:         0      19       0       0       0
  4556 ;;Total ram usage:       19 bytes
  4557 ;; Hardware stack levels used:    1
  4558 ;; Hardware stack levels required when called:    2
  4559 ;; This function calls:
  4560 ;;		___awdiv
  4561 ;;		___awmod
  4562 ;;		___flmul
  4563 ;; This function is called by:
  4564 ;;		_sprintf
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           
  4569                           ;psect for function _scale
  4570  0940                     _scale:
  4571                           
  4572                           ;incstack = 0
  4573                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4574                           ;scale@scl stored from wreg
  4575  0940  1283               	bcf	3,5	;RP0=0, select bank0
  4576  0941  1303               	bcf	3,6	;RP1=0, select bank0
  4577  0942  00D0               	movwf	scale@scl
  4578  0943                     l2983:
  4579                           
  4580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4581  0943  1FD0               	btfss	scale@scl,7
  4582  0944  2946               	goto	u4341
  4583  0945  2947               	goto	u4340
  4584  0946                     u4341:
  4585  0946  2AF4               	goto	l3005
  4586  0947                     u4340:
  4587  0947                     l2985:
  4588                           
  4589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4590  0947  09D0               	comf	scale@scl,f
  4591  0948  0AD0               	incf	scale@scl,f
  4592  0949                     l2987:
  4593                           
  4594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4595  0949  0850               	movf	scale@scl,w
  4596  094A  3A80               	xorlw	128
  4597  094B  3E12               	addlw	-238
  4598  094C  1C03               	skipc
  4599  094D  294F               	goto	u4351
  4600  094E  2950               	goto	u4350
  4601  094F                     u4351:
  4602  094F  2A38               	goto	l2995
  4603  0950                     u4350:
  4604  0950                     l2989:
  4605                           
  4606                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4607  0950  300A               	movlw	10
  4608  0951  00F7               	movwf	___awdiv@divisor
  4609  0952  3000               	movlw	0
  4610  0953  00F8               	movwf	___awdiv@divisor+1
  4611  0954  0850               	movf	scale@scl,w
  4612  0955  00F2               	movwf	___awmod@dividend
  4613  0956  01F3               	clrf	___awmod@dividend+1
  4614  0957  1BF2               	btfsc	___awmod@dividend,7
  4615  0958  03F3               	decf	___awmod@dividend+1,f
  4616  0959  3064               	movlw	100
  4617  095A  00F0               	movwf	___awmod@divisor
  4618  095B  3000               	movlw	0
  4619  095C  00F1               	movwf	___awmod@divisor+1
  4620  095D  160A  158A  24A3  120A  158A  	fcall	___awmod
  4621  0962  0871               	movf	?___awmod+1,w
  4622  0963  00FA               	movwf	___awdiv@dividend+1
  4623  0964  0870               	movf	?___awmod,w
  4624  0965  00F9               	movwf	___awdiv@dividend
  4625  0966  120A  118A  200C  120A  158A  	fcall	___awdiv
  4626  096B  0877               	movf	?___awdiv,w
  4627  096C  1283               	bcf	3,5	;RP0=0, select bank0
  4628  096D  1303               	bcf	3,6	;RP1=0, select bank0
  4629  096E  00C2               	movwf	??_scale
  4630  096F  3001               	movlw	1
  4631  0970                     u4365:
  4632  0970  1003               	clrc
  4633  0971  0DC2               	rlf	??_scale,f
  4634  0972  3EFF               	addlw	-1
  4635  0973  1D03               	skipz
  4636  0974  2970               	goto	u4365
  4637  0975  1003               	clrc
  4638  0976  0D42               	rlf	??_scale,w
  4639  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4640  0978  0084               	movwf	4
  4641  0979  160A  158A  200A  120A  158A  	fcall	stringdir
  4642  097E  00C3               	movwf	??_scale+1
  4643  097F  160A  158A  200A  120A  158A  	fcall	stringdir
  4644  0984  00C4               	movwf	??_scale+2
  4645  0985  160A  158A  200A  120A  158A  	fcall	stringdir
  4646  098A  00C5               	movwf	??_scale+3
  4647  098B  160A  158A  200A  120A  158A  	fcall	stringdir
  4648  0990  00C6               	movwf	??_scale+4
  4649  0991  0846               	movf	??_scale+4,w
  4650  0992  00A7               	movwf	___flmul@b+3
  4651  0993  0845               	movf	??_scale+3,w
  4652  0994  00A6               	movwf	___flmul@b+2
  4653  0995  0844               	movf	??_scale+2,w
  4654  0996  00A5               	movwf	___flmul@b+1
  4655  0997  0843               	movf	??_scale+1,w
  4656  0998  00A4               	movwf	___flmul@b
  4657  0999  3064               	movlw	100
  4658  099A  00F7               	movwf	___awdiv@divisor
  4659  099B  3000               	movlw	0
  4660  099C  00F8               	movwf	___awdiv@divisor+1
  4661  099D  0850               	movf	scale@scl,w
  4662  099E  00F9               	movwf	___awdiv@dividend
  4663  099F  01FA               	clrf	___awdiv@dividend+1
  4664  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4665  09A1  03FA               	decf	___awdiv@dividend+1,f
  4666  09A2  120A  118A  200C  120A  158A  	fcall	___awdiv
  4667  09A7  0877               	movf	?___awdiv,w
  4668  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4669  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4670  09AA  00C7               	movwf	??_scale+5
  4671  09AB  3001               	movlw	1
  4672  09AC                     u4375:
  4673  09AC  1003               	clrc
  4674  09AD  0DC7               	rlf	??_scale+5,f
  4675  09AE  3EFF               	addlw	-1
  4676  09AF  1D03               	skipz
  4677  09B0  29AC               	goto	u4375
  4678  09B1  1003               	clrc
  4679  09B2  0D47               	rlf	??_scale+5,w
  4680  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4681  09B4  0084               	movwf	4
  4682  09B5  160A  158A  200A  120A  158A  	fcall	stringdir
  4683  09BA  00C8               	movwf	??_scale+6
  4684  09BB  160A  158A  200A  120A  158A  	fcall	stringdir
  4685  09C0  00C9               	movwf	??_scale+7
  4686  09C1  160A  158A  200A  120A  158A  	fcall	stringdir
  4687  09C6  00CA               	movwf	??_scale+8
  4688  09C7  160A  158A  200A  120A  158A  	fcall	stringdir
  4689  09CC  00CB               	movwf	??_scale+9
  4690  09CD  084B               	movf	??_scale+9,w
  4691  09CE  00AB               	movwf	___flmul@a+3
  4692  09CF  084A               	movf	??_scale+8,w
  4693  09D0  00AA               	movwf	___flmul@a+2
  4694  09D1  0849               	movf	??_scale+7,w
  4695  09D2  00A9               	movwf	___flmul@a+1
  4696  09D3  0848               	movf	??_scale+6,w
  4697  09D4  00A8               	movwf	___flmul@a
  4698  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4699  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4700  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4701  09DC  0827               	movf	?___flmul+3,w
  4702  09DD  00CF               	movwf	_scale$998+3
  4703  09DE  0826               	movf	?___flmul+2,w
  4704  09DF  00CE               	movwf	_scale$998+2
  4705  09E0  0825               	movf	?___flmul+1,w
  4706  09E1  00CD               	movwf	_scale$998+1
  4707  09E2  0824               	movf	?___flmul,w
  4708  09E3  00CC               	movwf	_scale$998
  4709                           
  4710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4711  09E4  300A               	movlw	10
  4712  09E5  00F0               	movwf	___awmod@divisor
  4713  09E6  3000               	movlw	0
  4714  09E7  00F1               	movwf	___awmod@divisor+1
  4715  09E8  0850               	movf	scale@scl,w
  4716  09E9  00F2               	movwf	___awmod@dividend
  4717  09EA  01F3               	clrf	___awmod@dividend+1
  4718  09EB  1BF2               	btfsc	___awmod@dividend,7
  4719  09EC  03F3               	decf	___awmod@dividend+1,f
  4720  09ED  160A  158A  24A3  120A  158A  	fcall	___awmod
  4721  09F2  0870               	movf	?___awmod,w
  4722  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4723  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4724  09F5  00C2               	movwf	??_scale
  4725  09F6  3001               	movlw	1
  4726  09F7                     u4385:
  4727  09F7  1003               	clrc
  4728  09F8  0DC2               	rlf	??_scale,f
  4729  09F9  3EFF               	addlw	-1
  4730  09FA  1D03               	skipz
  4731  09FB  29F7               	goto	u4385
  4732  09FC  1003               	clrc
  4733  09FD  0D42               	rlf	??_scale,w
  4734  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4735  09FF  0084               	movwf	4
  4736  0A00  160A  158A  200A  120A  158A  	fcall	stringdir
  4737  0A05  00C3               	movwf	??_scale+1
  4738  0A06  160A  158A  200A  120A  158A  	fcall	stringdir
  4739  0A0B  00C4               	movwf	??_scale+2
  4740  0A0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4741  0A11  00C5               	movwf	??_scale+3
  4742  0A12  160A  158A  200A  120A  158A  	fcall	stringdir
  4743  0A17  00C6               	movwf	??_scale+4
  4744  0A18  0846               	movf	??_scale+4,w
  4745  0A19  00A7               	movwf	___flmul@b+3
  4746  0A1A  0845               	movf	??_scale+3,w
  4747  0A1B  00A6               	movwf	___flmul@b+2
  4748  0A1C  0844               	movf	??_scale+2,w
  4749  0A1D  00A5               	movwf	___flmul@b+1
  4750  0A1E  0843               	movf	??_scale+1,w
  4751  0A1F  00A4               	movwf	___flmul@b
  4752  0A20  084F               	movf	_scale$998+3,w
  4753  0A21  00AB               	movwf	___flmul@a+3
  4754  0A22  084E               	movf	_scale$998+2,w
  4755  0A23  00AA               	movwf	___flmul@a+2
  4756  0A24  084D               	movf	_scale$998+1,w
  4757  0A25  00A9               	movwf	___flmul@a+1
  4758  0A26  084C               	movf	_scale$998,w
  4759  0A27  00A8               	movwf	___flmul@a
  4760  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4761  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4762  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4763  0A2F  0827               	movf	?___flmul+3,w
  4764  0A30  00C1               	movwf	?_scale+3
  4765  0A31  0826               	movf	?___flmul+2,w
  4766  0A32  00C0               	movwf	?_scale+2
  4767  0A33  0825               	movf	?___flmul+1,w
  4768  0A34  00BF               	movwf	?_scale+1
  4769  0A35  0824               	movf	?___flmul,w
  4770  0A36  00BE               	movwf	?_scale
  4771  0A37  2C9E               	goto	l307
  4772  0A38                     l2995:
  4773  0A38  0850               	movf	scale@scl,w
  4774  0A39  3A80               	xorlw	128
  4775  0A3A  3E75               	addlw	-139
  4776  0A3B  1C03               	skipc
  4777  0A3C  2A3E               	goto	u4391
  4778  0A3D  2A3F               	goto	u4390
  4779  0A3E                     u4391:
  4780  0A3E  2AC7               	goto	l3001
  4781  0A3F                     u4390:
  4782  0A3F                     l2997:
  4783                           
  4784                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4785  0A3F  300A               	movlw	10
  4786  0A40  00F0               	movwf	___awmod@divisor
  4787  0A41  3000               	movlw	0
  4788  0A42  00F1               	movwf	___awmod@divisor+1
  4789  0A43  0850               	movf	scale@scl,w
  4790  0A44  00F2               	movwf	___awmod@dividend
  4791  0A45  01F3               	clrf	___awmod@dividend+1
  4792  0A46  1BF2               	btfsc	___awmod@dividend,7
  4793  0A47  03F3               	decf	___awmod@dividend+1,f
  4794  0A48  160A  158A  24A3  120A  158A  	fcall	___awmod
  4795  0A4D  0870               	movf	?___awmod,w
  4796  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4797  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4798  0A50  00C2               	movwf	??_scale
  4799  0A51  3001               	movlw	1
  4800  0A52                     u4405:
  4801  0A52  1003               	clrc
  4802  0A53  0DC2               	rlf	??_scale,f
  4803  0A54  3EFF               	addlw	-1
  4804  0A55  1D03               	skipz
  4805  0A56  2A52               	goto	u4405
  4806  0A57  1003               	clrc
  4807  0A58  0D42               	rlf	??_scale,w
  4808  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4809  0A5A  0084               	movwf	4
  4810  0A5B  160A  158A  200A  120A  158A  	fcall	stringdir
  4811  0A60  00C3               	movwf	??_scale+1
  4812  0A61  160A  158A  200A  120A  158A  	fcall	stringdir
  4813  0A66  00C4               	movwf	??_scale+2
  4814  0A67  160A  158A  200A  120A  158A  	fcall	stringdir
  4815  0A6C  00C5               	movwf	??_scale+3
  4816  0A6D  160A  158A  200A  120A  158A  	fcall	stringdir
  4817  0A72  00C6               	movwf	??_scale+4
  4818  0A73  0846               	movf	??_scale+4,w
  4819  0A74  00A7               	movwf	___flmul@b+3
  4820  0A75  0845               	movf	??_scale+3,w
  4821  0A76  00A6               	movwf	___flmul@b+2
  4822  0A77  0844               	movf	??_scale+2,w
  4823  0A78  00A5               	movwf	___flmul@b+1
  4824  0A79  0843               	movf	??_scale+1,w
  4825  0A7A  00A4               	movwf	___flmul@b
  4826  0A7B  300A               	movlw	10
  4827  0A7C  00F7               	movwf	___awdiv@divisor
  4828  0A7D  3000               	movlw	0
  4829  0A7E  00F8               	movwf	___awdiv@divisor+1
  4830  0A7F  0850               	movf	scale@scl,w
  4831  0A80  00F9               	movwf	___awdiv@dividend
  4832  0A81  01FA               	clrf	___awdiv@dividend+1
  4833  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4834  0A83  03FA               	decf	___awdiv@dividend+1,f
  4835  0A84  120A  118A  200C  120A  158A  	fcall	___awdiv
  4836  0A89  0877               	movf	?___awdiv,w
  4837  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4838  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4839  0A8C  00C7               	movwf	??_scale+5
  4840  0A8D  3001               	movlw	1
  4841  0A8E                     u4415:
  4842  0A8E  1003               	clrc
  4843  0A8F  0DC7               	rlf	??_scale+5,f
  4844  0A90  3EFF               	addlw	-1
  4845  0A91  1D03               	skipz
  4846  0A92  2A8E               	goto	u4415
  4847  0A93  1003               	clrc
  4848  0A94  0D47               	rlf	??_scale+5,w
  4849  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4850  0A96  0084               	movwf	4
  4851  0A97  160A  158A  200A  120A  158A  	fcall	stringdir
  4852  0A9C  00C8               	movwf	??_scale+6
  4853  0A9D  160A  158A  200A  120A  158A  	fcall	stringdir
  4854  0AA2  00C9               	movwf	??_scale+7
  4855  0AA3  160A  158A  200A  120A  158A  	fcall	stringdir
  4856  0AA8  00CA               	movwf	??_scale+8
  4857  0AA9  160A  158A  200A  120A  158A  	fcall	stringdir
  4858  0AAE  00CB               	movwf	??_scale+9
  4859  0AAF  084B               	movf	??_scale+9,w
  4860  0AB0  00AB               	movwf	___flmul@a+3
  4861  0AB1  084A               	movf	??_scale+8,w
  4862  0AB2  00AA               	movwf	___flmul@a+2
  4863  0AB3  0849               	movf	??_scale+7,w
  4864  0AB4  00A9               	movwf	___flmul@a+1
  4865  0AB5  0848               	movf	??_scale+6,w
  4866  0AB6  00A8               	movwf	___flmul@a
  4867  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4868  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4869  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4870  0ABE  0827               	movf	?___flmul+3,w
  4871  0ABF  00C1               	movwf	?_scale+3
  4872  0AC0  0826               	movf	?___flmul+2,w
  4873  0AC1  00C0               	movwf	?_scale+2
  4874  0AC2  0825               	movf	?___flmul+1,w
  4875  0AC3  00BF               	movwf	?_scale+1
  4876  0AC4  0824               	movf	?___flmul,w
  4877  0AC5  00BE               	movwf	?_scale
  4878  0AC6  2C9E               	goto	l307
  4879  0AC7                     l3001:
  4880                           
  4881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4882  0AC7  0850               	movf	scale@scl,w
  4883  0AC8  00C2               	movwf	??_scale
  4884  0AC9  3001               	movlw	1
  4885  0ACA                     u4425:
  4886  0ACA  1003               	clrc
  4887  0ACB  0DC2               	rlf	??_scale,f
  4888  0ACC  3EFF               	addlw	-1
  4889  0ACD  1D03               	skipz
  4890  0ACE  2ACA               	goto	u4425
  4891  0ACF  1003               	clrc
  4892  0AD0  0D42               	rlf	??_scale,w
  4893  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4894  0AD2  0084               	movwf	4
  4895  0AD3  160A  158A  200A  120A  158A  	fcall	stringdir
  4896  0AD8  00C3               	movwf	??_scale+1
  4897  0AD9  160A  158A  200A  120A  158A  	fcall	stringdir
  4898  0ADE  00C4               	movwf	??_scale+2
  4899  0ADF  160A  158A  200A  120A  158A  	fcall	stringdir
  4900  0AE4  00C5               	movwf	??_scale+3
  4901  0AE5  160A  158A  200A  120A  158A  	fcall	stringdir
  4902  0AEA  00C6               	movwf	??_scale+4
  4903  0AEB  0846               	movf	??_scale+4,w
  4904  0AEC  00C1               	movwf	?_scale+3
  4905  0AED  0845               	movf	??_scale+3,w
  4906  0AEE  00C0               	movwf	?_scale+2
  4907  0AEF  0844               	movf	??_scale+2,w
  4908  0AF0  00BF               	movwf	?_scale+1
  4909  0AF1  0843               	movf	??_scale+1,w
  4910  0AF2  00BE               	movwf	?_scale
  4911  0AF3  2C9E               	goto	l307
  4912  0AF4                     l3005:
  4913                           
  4914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4915  0AF4  0850               	movf	scale@scl,w
  4916  0AF5  3A80               	xorlw	128
  4917  0AF6  3E12               	addlw	-238
  4918  0AF7  1C03               	skipc
  4919  0AF8  2AFA               	goto	u4431
  4920  0AF9  2AFB               	goto	u4430
  4921  0AFA                     u4431:
  4922  0AFA  2BE3               	goto	l3013
  4923  0AFB                     u4430:
  4924  0AFB                     l3007:
  4925                           
  4926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4927  0AFB  300A               	movlw	10
  4928  0AFC  00F7               	movwf	___awdiv@divisor
  4929  0AFD  3000               	movlw	0
  4930  0AFE  00F8               	movwf	___awdiv@divisor+1
  4931  0AFF  0850               	movf	scale@scl,w
  4932  0B00  00F2               	movwf	___awmod@dividend
  4933  0B01  01F3               	clrf	___awmod@dividend+1
  4934  0B02  1BF2               	btfsc	___awmod@dividend,7
  4935  0B03  03F3               	decf	___awmod@dividend+1,f
  4936  0B04  3064               	movlw	100
  4937  0B05  00F0               	movwf	___awmod@divisor
  4938  0B06  3000               	movlw	0
  4939  0B07  00F1               	movwf	___awmod@divisor+1
  4940  0B08  160A  158A  24A3  120A  158A  	fcall	___awmod
  4941  0B0D  0871               	movf	?___awmod+1,w
  4942  0B0E  00FA               	movwf	___awdiv@dividend+1
  4943  0B0F  0870               	movf	?___awmod,w
  4944  0B10  00F9               	movwf	___awdiv@dividend
  4945  0B11  120A  118A  200C  120A  158A  	fcall	___awdiv
  4946  0B16  0877               	movf	?___awdiv,w
  4947  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4948  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4949  0B19  00C2               	movwf	??_scale
  4950  0B1A  3001               	movlw	1
  4951  0B1B                     u4445:
  4952  0B1B  1003               	clrc
  4953  0B1C  0DC2               	rlf	??_scale,f
  4954  0B1D  3EFF               	addlw	-1
  4955  0B1E  1D03               	skipz
  4956  0B1F  2B1B               	goto	u4445
  4957  0B20  1003               	clrc
  4958  0B21  0D42               	rlf	??_scale,w
  4959  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4960  0B23  0084               	movwf	4
  4961  0B24  160A  158A  200A  120A  158A  	fcall	stringdir
  4962  0B29  00C3               	movwf	??_scale+1
  4963  0B2A  160A  158A  200A  120A  158A  	fcall	stringdir
  4964  0B2F  00C4               	movwf	??_scale+2
  4965  0B30  160A  158A  200A  120A  158A  	fcall	stringdir
  4966  0B35  00C5               	movwf	??_scale+3
  4967  0B36  160A  158A  200A  120A  158A  	fcall	stringdir
  4968  0B3B  00C6               	movwf	??_scale+4
  4969  0B3C  0846               	movf	??_scale+4,w
  4970  0B3D  00A7               	movwf	___flmul@b+3
  4971  0B3E  0845               	movf	??_scale+3,w
  4972  0B3F  00A6               	movwf	___flmul@b+2
  4973  0B40  0844               	movf	??_scale+2,w
  4974  0B41  00A5               	movwf	___flmul@b+1
  4975  0B42  0843               	movf	??_scale+1,w
  4976  0B43  00A4               	movwf	___flmul@b
  4977  0B44  3064               	movlw	100
  4978  0B45  00F7               	movwf	___awdiv@divisor
  4979  0B46  3000               	movlw	0
  4980  0B47  00F8               	movwf	___awdiv@divisor+1
  4981  0B48  0850               	movf	scale@scl,w
  4982  0B49  00F9               	movwf	___awdiv@dividend
  4983  0B4A  01FA               	clrf	___awdiv@dividend+1
  4984  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4985  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4986  0B4D  120A  118A  200C  120A  158A  	fcall	___awdiv
  4987  0B52  0877               	movf	?___awdiv,w
  4988  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4989  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4990  0B55  00C7               	movwf	??_scale+5
  4991  0B56  3001               	movlw	1
  4992  0B57                     u4455:
  4993  0B57  1003               	clrc
  4994  0B58  0DC7               	rlf	??_scale+5,f
  4995  0B59  3EFF               	addlw	-1
  4996  0B5A  1D03               	skipz
  4997  0B5B  2B57               	goto	u4455
  4998  0B5C  1003               	clrc
  4999  0B5D  0D47               	rlf	??_scale+5,w
  5000  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  5001  0B5F  0084               	movwf	4
  5002  0B60  160A  158A  200A  120A  158A  	fcall	stringdir
  5003  0B65  00C8               	movwf	??_scale+6
  5004  0B66  160A  158A  200A  120A  158A  	fcall	stringdir
  5005  0B6B  00C9               	movwf	??_scale+7
  5006  0B6C  160A  158A  200A  120A  158A  	fcall	stringdir
  5007  0B71  00CA               	movwf	??_scale+8
  5008  0B72  160A  158A  200A  120A  158A  	fcall	stringdir
  5009  0B77  00CB               	movwf	??_scale+9
  5010  0B78  084B               	movf	??_scale+9,w
  5011  0B79  00AB               	movwf	___flmul@a+3
  5012  0B7A  084A               	movf	??_scale+8,w
  5013  0B7B  00AA               	movwf	___flmul@a+2
  5014  0B7C  0849               	movf	??_scale+7,w
  5015  0B7D  00A9               	movwf	___flmul@a+1
  5016  0B7E  0848               	movf	??_scale+6,w
  5017  0B7F  00A8               	movwf	___flmul@a
  5018  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  5019  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  5020  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  5021  0B87  0827               	movf	?___flmul+3,w
  5022  0B88  00CF               	movwf	_scale$998+3
  5023  0B89  0826               	movf	?___flmul+2,w
  5024  0B8A  00CE               	movwf	_scale$998+2
  5025  0B8B  0825               	movf	?___flmul+1,w
  5026  0B8C  00CD               	movwf	_scale$998+1
  5027  0B8D  0824               	movf	?___flmul,w
  5028  0B8E  00CC               	movwf	_scale$998
  5029                           
  5030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  5031  0B8F  300A               	movlw	10
  5032  0B90  00F0               	movwf	___awmod@divisor
  5033  0B91  3000               	movlw	0
  5034  0B92  00F1               	movwf	___awmod@divisor+1
  5035  0B93  0850               	movf	scale@scl,w
  5036  0B94  00F2               	movwf	___awmod@dividend
  5037  0B95  01F3               	clrf	___awmod@dividend+1
  5038  0B96  1BF2               	btfsc	___awmod@dividend,7
  5039  0B97  03F3               	decf	___awmod@dividend+1,f
  5040  0B98  160A  158A  24A3  120A  158A  	fcall	___awmod
  5041  0B9D  0870               	movf	?___awmod,w
  5042  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  5043  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  5044  0BA0  00C2               	movwf	??_scale
  5045  0BA1  3001               	movlw	1
  5046  0BA2                     u4465:
  5047  0BA2  1003               	clrc
  5048  0BA3  0DC2               	rlf	??_scale,f
  5049  0BA4  3EFF               	addlw	-1
  5050  0BA5  1D03               	skipz
  5051  0BA6  2BA2               	goto	u4465
  5052  0BA7  1003               	clrc
  5053  0BA8  0D42               	rlf	??_scale,w
  5054  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5055  0BAA  0084               	movwf	4
  5056  0BAB  160A  158A  200A  120A  158A  	fcall	stringdir
  5057  0BB0  00C3               	movwf	??_scale+1
  5058  0BB1  160A  158A  200A  120A  158A  	fcall	stringdir
  5059  0BB6  00C4               	movwf	??_scale+2
  5060  0BB7  160A  158A  200A  120A  158A  	fcall	stringdir
  5061  0BBC  00C5               	movwf	??_scale+3
  5062  0BBD  160A  158A  200A  120A  158A  	fcall	stringdir
  5063  0BC2  00C6               	movwf	??_scale+4
  5064  0BC3  0846               	movf	??_scale+4,w
  5065  0BC4  00A7               	movwf	___flmul@b+3
  5066  0BC5  0845               	movf	??_scale+3,w
  5067  0BC6  00A6               	movwf	___flmul@b+2
  5068  0BC7  0844               	movf	??_scale+2,w
  5069  0BC8  00A5               	movwf	___flmul@b+1
  5070  0BC9  0843               	movf	??_scale+1,w
  5071  0BCA  00A4               	movwf	___flmul@b
  5072  0BCB  084F               	movf	_scale$998+3,w
  5073  0BCC  00AB               	movwf	___flmul@a+3
  5074  0BCD  084E               	movf	_scale$998+2,w
  5075  0BCE  00AA               	movwf	___flmul@a+2
  5076  0BCF  084D               	movf	_scale$998+1,w
  5077  0BD0  00A9               	movwf	___flmul@a+1
  5078  0BD1  084C               	movf	_scale$998,w
  5079  0BD2  00A8               	movwf	___flmul@a
  5080  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  5081  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  5082  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  5083  0BDA  0827               	movf	?___flmul+3,w
  5084  0BDB  00C1               	movwf	?_scale+3
  5085  0BDC  0826               	movf	?___flmul+2,w
  5086  0BDD  00C0               	movwf	?_scale+2
  5087  0BDE  0825               	movf	?___flmul+1,w
  5088  0BDF  00BF               	movwf	?_scale+1
  5089  0BE0  0824               	movf	?___flmul,w
  5090  0BE1  00BE               	movwf	?_scale
  5091  0BE2  2C9E               	goto	l307
  5092  0BE3                     l3013:
  5093  0BE3  0850               	movf	scale@scl,w
  5094  0BE4  3A80               	xorlw	128
  5095  0BE5  3E75               	addlw	-139
  5096  0BE6  1C03               	skipc
  5097  0BE7  2BE9               	goto	u4471
  5098  0BE8  2BEA               	goto	u4470
  5099  0BE9                     u4471:
  5100  0BE9  2C72               	goto	l3019
  5101  0BEA                     u4470:
  5102  0BEA                     l3015:
  5103                           
  5104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  5105  0BEA  300A               	movlw	10
  5106  0BEB  00F0               	movwf	___awmod@divisor
  5107  0BEC  3000               	movlw	0
  5108  0BED  00F1               	movwf	___awmod@divisor+1
  5109  0BEE  0850               	movf	scale@scl,w
  5110  0BEF  00F2               	movwf	___awmod@dividend
  5111  0BF0  01F3               	clrf	___awmod@dividend+1
  5112  0BF1  1BF2               	btfsc	___awmod@dividend,7
  5113  0BF2  03F3               	decf	___awmod@dividend+1,f
  5114  0BF3  160A  158A  24A3  120A  158A  	fcall	___awmod
  5115  0BF8  0870               	movf	?___awmod,w
  5116  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  5117  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  5118  0BFB  00C2               	movwf	??_scale
  5119  0BFC  3001               	movlw	1
  5120  0BFD                     u4485:
  5121  0BFD  1003               	clrc
  5122  0BFE  0DC2               	rlf	??_scale,f
  5123  0BFF  3EFF               	addlw	-1
  5124  0C00  1D03               	skipz
  5125  0C01  2BFD               	goto	u4485
  5126  0C02  1003               	clrc
  5127  0C03  0D42               	rlf	??_scale,w
  5128  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5129  0C05  0084               	movwf	4
  5130  0C06  160A  158A  200A  120A  158A  	fcall	stringdir
  5131  0C0B  00C3               	movwf	??_scale+1
  5132  0C0C  160A  158A  200A  120A  158A  	fcall	stringdir
  5133  0C11  00C4               	movwf	??_scale+2
  5134  0C12  160A  158A  200A  120A  158A  	fcall	stringdir
  5135  0C17  00C5               	movwf	??_scale+3
  5136  0C18  160A  158A  200A  120A  158A  	fcall	stringdir
  5137  0C1D  00C6               	movwf	??_scale+4
  5138  0C1E  0846               	movf	??_scale+4,w
  5139  0C1F  00A7               	movwf	___flmul@b+3
  5140  0C20  0845               	movf	??_scale+3,w
  5141  0C21  00A6               	movwf	___flmul@b+2
  5142  0C22  0844               	movf	??_scale+2,w
  5143  0C23  00A5               	movwf	___flmul@b+1
  5144  0C24  0843               	movf	??_scale+1,w
  5145  0C25  00A4               	movwf	___flmul@b
  5146  0C26  300A               	movlw	10
  5147  0C27  00F7               	movwf	___awdiv@divisor
  5148  0C28  3000               	movlw	0
  5149  0C29  00F8               	movwf	___awdiv@divisor+1
  5150  0C2A  0850               	movf	scale@scl,w
  5151  0C2B  00F9               	movwf	___awdiv@dividend
  5152  0C2C  01FA               	clrf	___awdiv@dividend+1
  5153  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  5154  0C2E  03FA               	decf	___awdiv@dividend+1,f
  5155  0C2F  120A  118A  200C  120A  158A  	fcall	___awdiv
  5156  0C34  0877               	movf	?___awdiv,w
  5157  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  5158  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  5159  0C37  00C7               	movwf	??_scale+5
  5160  0C38  3001               	movlw	1
  5161  0C39                     u4495:
  5162  0C39  1003               	clrc
  5163  0C3A  0DC7               	rlf	??_scale+5,f
  5164  0C3B  3EFF               	addlw	-1
  5165  0C3C  1D03               	skipz
  5166  0C3D  2C39               	goto	u4495
  5167  0C3E  1003               	clrc
  5168  0C3F  0D47               	rlf	??_scale+5,w
  5169  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5170  0C41  0084               	movwf	4
  5171  0C42  160A  158A  200A  120A  158A  	fcall	stringdir
  5172  0C47  00C8               	movwf	??_scale+6
  5173  0C48  160A  158A  200A  120A  158A  	fcall	stringdir
  5174  0C4D  00C9               	movwf	??_scale+7
  5175  0C4E  160A  158A  200A  120A  158A  	fcall	stringdir
  5176  0C53  00CA               	movwf	??_scale+8
  5177  0C54  160A  158A  200A  120A  158A  	fcall	stringdir
  5178  0C59  00CB               	movwf	??_scale+9
  5179  0C5A  084B               	movf	??_scale+9,w
  5180  0C5B  00AB               	movwf	___flmul@a+3
  5181  0C5C  084A               	movf	??_scale+8,w
  5182  0C5D  00AA               	movwf	___flmul@a+2
  5183  0C5E  0849               	movf	??_scale+7,w
  5184  0C5F  00A9               	movwf	___flmul@a+1
  5185  0C60  0848               	movf	??_scale+6,w
  5186  0C61  00A8               	movwf	___flmul@a
  5187  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  5188  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  5189  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  5190  0C69  0827               	movf	?___flmul+3,w
  5191  0C6A  00C1               	movwf	?_scale+3
  5192  0C6B  0826               	movf	?___flmul+2,w
  5193  0C6C  00C0               	movwf	?_scale+2
  5194  0C6D  0825               	movf	?___flmul+1,w
  5195  0C6E  00BF               	movwf	?_scale+1
  5196  0C6F  0824               	movf	?___flmul,w
  5197  0C70  00BE               	movwf	?_scale
  5198  0C71  2C9E               	goto	l307
  5199  0C72                     l3019:
  5200                           
  5201                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  5202  0C72  0850               	movf	scale@scl,w
  5203  0C73  00C2               	movwf	??_scale
  5204  0C74  3001               	movlw	1
  5205  0C75                     u4505:
  5206  0C75  1003               	clrc
  5207  0C76  0DC2               	rlf	??_scale,f
  5208  0C77  3EFF               	addlw	-1
  5209  0C78  1D03               	skipz
  5210  0C79  2C75               	goto	u4505
  5211  0C7A  1003               	clrc
  5212  0C7B  0D42               	rlf	??_scale,w
  5213  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5214  0C7D  0084               	movwf	4
  5215  0C7E  160A  158A  200A  120A  158A  	fcall	stringdir
  5216  0C83  00C3               	movwf	??_scale+1
  5217  0C84  160A  158A  200A  120A  158A  	fcall	stringdir
  5218  0C89  00C4               	movwf	??_scale+2
  5219  0C8A  160A  158A  200A  120A  158A  	fcall	stringdir
  5220  0C8F  00C5               	movwf	??_scale+3
  5221  0C90  160A  158A  200A  120A  158A  	fcall	stringdir
  5222  0C95  00C6               	movwf	??_scale+4
  5223  0C96  0846               	movf	??_scale+4,w
  5224  0C97  00C1               	movwf	?_scale+3
  5225  0C98  0845               	movf	??_scale+3,w
  5226  0C99  00C0               	movwf	?_scale+2
  5227  0C9A  0844               	movf	??_scale+2,w
  5228  0C9B  00BF               	movwf	?_scale+1
  5229  0C9C  0843               	movf	??_scale+1,w
  5230  0C9D  00BE               	movwf	?_scale
  5231  0C9E                     l307:
  5232  0C9E  0008               	return
  5233  0C9F                     __end_of_scale:
  5234                           
  5235                           	psect	text10
  5236  1CA3                     __ptext10:	
  5237 ;; *************** function ___awmod *****************
  5238 ;; Defined at:
  5239 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  divisor         2    0[COMMON] int 
  5242 ;;  dividend        2    2[COMMON] int 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  sign            1    6[COMMON] unsigned char 
  5245 ;;  counter         1    5[COMMON] unsigned char 
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  2    0[COMMON] int 
  5248 ;; Registers used:
  5249 ;;		wreg, status,2, status,0
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5255 ;;      Params:         4       0       0       0       0
  5256 ;;      Locals:         2       0       0       0       0
  5257 ;;      Temps:          1       0       0       0       0
  5258 ;;      Totals:         7       0       0       0       0
  5259 ;;Total ram usage:        7 bytes
  5260 ;; Hardware stack levels used:    1
  5261 ;; This function calls:
  5262 ;;		Nothing
  5263 ;; This function is called by:
  5264 ;;		_scale
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           
  5269                           ;psect for function ___awmod
  5270  1CA3                     ___awmod:
  5271  1CA3                     l2525:	
  5272                           ;incstack = 0
  5273                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5274                           
  5275  1CA3  01F6               	clrf	___awmod@sign
  5276  1CA4                     l2527:
  5277  1CA4  1FF3               	btfss	___awmod@dividend+1,7
  5278  1CA5  2CA7               	goto	u3211
  5279  1CA6  2CA8               	goto	u3210
  5280  1CA7                     u3211:
  5281  1CA7  2CAF               	goto	l2533
  5282  1CA8                     u3210:
  5283  1CA8                     l2529:
  5284  1CA8  09F2               	comf	___awmod@dividend,f
  5285  1CA9  09F3               	comf	___awmod@dividend+1,f
  5286  1CAA  0AF2               	incf	___awmod@dividend,f
  5287  1CAB  1903               	skipnz
  5288  1CAC  0AF3               	incf	___awmod@dividend+1,f
  5289  1CAD                     l2531:
  5290  1CAD  01F6               	clrf	___awmod@sign
  5291  1CAE  0AF6               	incf	___awmod@sign,f
  5292  1CAF                     l2533:
  5293  1CAF  1FF1               	btfss	___awmod@divisor+1,7
  5294  1CB0  2CB2               	goto	u3221
  5295  1CB1  2CB3               	goto	u3220
  5296  1CB2                     u3221:
  5297  1CB2  2CB8               	goto	l2537
  5298  1CB3                     u3220:
  5299  1CB3                     l2535:
  5300  1CB3  09F0               	comf	___awmod@divisor,f
  5301  1CB4  09F1               	comf	___awmod@divisor+1,f
  5302  1CB5  0AF0               	incf	___awmod@divisor,f
  5303  1CB6  1903               	skipnz
  5304  1CB7  0AF1               	incf	___awmod@divisor+1,f
  5305  1CB8                     l2537:
  5306  1CB8  0870               	movf	___awmod@divisor,w
  5307  1CB9  0471               	iorwf	___awmod@divisor+1,w
  5308  1CBA  1903               	btfsc	3,2
  5309  1CBB  2CBD               	goto	u3231
  5310  1CBC  2CBE               	goto	u3230
  5311  1CBD                     u3231:
  5312  1CBD  2CED               	goto	l2555
  5313  1CBE                     u3230:
  5314  1CBE                     l2539:
  5315  1CBE  01F5               	clrf	___awmod@counter
  5316  1CBF  0AF5               	incf	___awmod@counter,f
  5317  1CC0  2CCC               	goto	l2545
  5318  1CC1                     l2541:
  5319  1CC1  3001               	movlw	1
  5320  1CC2                     u3245:
  5321  1CC2  1003               	clrc
  5322  1CC3  0DF0               	rlf	___awmod@divisor,f
  5323  1CC4  0DF1               	rlf	___awmod@divisor+1,f
  5324  1CC5  3EFF               	addlw	-1
  5325  1CC6  1D03               	skipz
  5326  1CC7  2CC2               	goto	u3245
  5327  1CC8                     l2543:
  5328  1CC8  3001               	movlw	1
  5329  1CC9  00F4               	movwf	??___awmod
  5330  1CCA  0874               	movf	??___awmod,w
  5331  1CCB  07F5               	addwf	___awmod@counter,f
  5332  1CCC                     l2545:
  5333  1CCC  1FF1               	btfss	___awmod@divisor+1,7
  5334  1CCD  2CCF               	goto	u3251
  5335  1CCE  2CD0               	goto	u3250
  5336  1CCF                     u3251:
  5337  1CCF  2CC1               	goto	l2541
  5338  1CD0                     u3250:
  5339  1CD0                     l2547:
  5340  1CD0  0871               	movf	___awmod@divisor+1,w
  5341  1CD1  0273               	subwf	___awmod@dividend+1,w
  5342  1CD2  1D03               	skipz
  5343  1CD3  2CD6               	goto	u3265
  5344  1CD4  0870               	movf	___awmod@divisor,w
  5345  1CD5  0272               	subwf	___awmod@dividend,w
  5346  1CD6                     u3265:
  5347  1CD6  1C03               	skipc
  5348  1CD7  2CD9               	goto	u3261
  5349  1CD8  2CDA               	goto	u3260
  5350  1CD9                     u3261:
  5351  1CD9  2CE0               	goto	l2551
  5352  1CDA                     u3260:
  5353  1CDA                     l2549:
  5354  1CDA  0870               	movf	___awmod@divisor,w
  5355  1CDB  02F2               	subwf	___awmod@dividend,f
  5356  1CDC  0871               	movf	___awmod@divisor+1,w
  5357  1CDD  1C03               	skipc
  5358  1CDE  03F3               	decf	___awmod@dividend+1,f
  5359  1CDF  02F3               	subwf	___awmod@dividend+1,f
  5360  1CE0                     l2551:
  5361  1CE0  3001               	movlw	1
  5362  1CE1                     u3275:
  5363  1CE1  1003               	clrc
  5364  1CE2  0CF1               	rrf	___awmod@divisor+1,f
  5365  1CE3  0CF0               	rrf	___awmod@divisor,f
  5366  1CE4  3EFF               	addlw	-1
  5367  1CE5  1D03               	skipz
  5368  1CE6  2CE1               	goto	u3275
  5369  1CE7                     l2553:
  5370  1CE7  3001               	movlw	1
  5371  1CE8  02F5               	subwf	___awmod@counter,f
  5372  1CE9  1D03               	btfss	3,2
  5373  1CEA  2CEC               	goto	u3281
  5374  1CEB  2CED               	goto	u3280
  5375  1CEC                     u3281:
  5376  1CEC  2CD0               	goto	l2547
  5377  1CED                     u3280:
  5378  1CED                     l2555:
  5379  1CED  0876               	movf	___awmod@sign,w
  5380  1CEE  1903               	btfsc	3,2
  5381  1CEF  2CF1               	goto	u3291
  5382  1CF0  2CF2               	goto	u3290
  5383  1CF1                     u3291:
  5384  1CF1  2CF7               	goto	l2559
  5385  1CF2                     u3290:
  5386  1CF2                     l2557:
  5387  1CF2  09F2               	comf	___awmod@dividend,f
  5388  1CF3  09F3               	comf	___awmod@dividend+1,f
  5389  1CF4  0AF2               	incf	___awmod@dividend,f
  5390  1CF5  1903               	skipnz
  5391  1CF6  0AF3               	incf	___awmod@dividend+1,f
  5392  1CF7                     l2559:
  5393  1CF7  0873               	movf	___awmod@dividend+1,w
  5394  1CF8  00F1               	movwf	?___awmod+1
  5395  1CF9  0872               	movf	___awmod@dividend,w
  5396  1CFA  00F0               	movwf	?___awmod
  5397  1CFB                     l560:
  5398  1CFB  0008               	return
  5399  1CFC                     __end_of___awmod:
  5400                           
  5401                           	psect	text11
  5402  000C                     __ptext11:	
  5403 ;; *************** function ___awdiv *****************
  5404 ;; Defined at:
  5405 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  divisor         2    7[COMMON] int 
  5408 ;;  dividend        2    9[COMMON] int 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;  quotient        2    2[BANK0 ] int 
  5411 ;;  sign            1    1[BANK0 ] unsigned char 
  5412 ;;  counter         1    0[BANK0 ] unsigned char 
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  2    7[COMMON] int 
  5415 ;; Registers used:
  5416 ;;		wreg, status,2, status,0
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5422 ;;      Params:         4       0       0       0       0
  5423 ;;      Locals:         0       4       0       0       0
  5424 ;;      Temps:          1       0       0       0       0
  5425 ;;      Totals:         5       4       0       0       0
  5426 ;;Total ram usage:        9 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; This function calls:
  5429 ;;		Nothing
  5430 ;; This function is called by:
  5431 ;;		_scale
  5432 ;;		_sprintf
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           
  5437                           ;psect for function ___awdiv
  5438  000C                     ___awdiv:
  5439  000C                     l2481:	
  5440                           ;incstack = 0
  5441                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5442                           
  5443  000C  1283               	bcf	3,5	;RP0=0, select bank0
  5444  000D  1303               	bcf	3,6	;RP1=0, select bank0
  5445  000E  01A1               	clrf	___awdiv@sign
  5446  000F                     l2483:
  5447  000F  1FF8               	btfss	___awdiv@divisor+1,7
  5448  0010  2812               	goto	u3111
  5449  0011  2813               	goto	u3110
  5450  0012                     u3111:
  5451  0012  281A               	goto	l2489
  5452  0013                     u3110:
  5453  0013                     l2485:
  5454  0013  09F7               	comf	___awdiv@divisor,f
  5455  0014  09F8               	comf	___awdiv@divisor+1,f
  5456  0015  0AF7               	incf	___awdiv@divisor,f
  5457  0016  1903               	skipnz
  5458  0017  0AF8               	incf	___awdiv@divisor+1,f
  5459  0018                     l2487:
  5460  0018  01A1               	clrf	___awdiv@sign
  5461  0019  0AA1               	incf	___awdiv@sign,f
  5462  001A                     l2489:
  5463  001A  1FFA               	btfss	___awdiv@dividend+1,7
  5464  001B  281D               	goto	u3121
  5465  001C  281E               	goto	u3120
  5466  001D                     u3121:
  5467  001D  2827               	goto	l2495
  5468  001E                     u3120:
  5469  001E                     l2491:
  5470  001E  09F9               	comf	___awdiv@dividend,f
  5471  001F  09FA               	comf	___awdiv@dividend+1,f
  5472  0020  0AF9               	incf	___awdiv@dividend,f
  5473  0021  1903               	skipnz
  5474  0022  0AFA               	incf	___awdiv@dividend+1,f
  5475  0023                     l2493:
  5476  0023  3001               	movlw	1
  5477  0024  00FB               	movwf	??___awdiv
  5478  0025  087B               	movf	??___awdiv,w
  5479  0026  06A1               	xorwf	___awdiv@sign,f
  5480  0027                     l2495:
  5481  0027  01A2               	clrf	___awdiv@quotient
  5482  0028  01A3               	clrf	___awdiv@quotient+1
  5483  0029                     l2497:
  5484  0029  0877               	movf	___awdiv@divisor,w
  5485  002A  0478               	iorwf	___awdiv@divisor+1,w
  5486  002B  1903               	btfsc	3,2
  5487  002C  282E               	goto	u3131
  5488  002D  282F               	goto	u3130
  5489  002E                     u3131:
  5490  002E  2866               	goto	l2517
  5491  002F                     u3130:
  5492  002F                     l2499:
  5493  002F  01A0               	clrf	___awdiv@counter
  5494  0030  0AA0               	incf	___awdiv@counter,f
  5495  0031  283D               	goto	l2505
  5496  0032                     l2501:
  5497  0032  3001               	movlw	1
  5498  0033                     u3145:
  5499  0033  1003               	clrc
  5500  0034  0DF7               	rlf	___awdiv@divisor,f
  5501  0035  0DF8               	rlf	___awdiv@divisor+1,f
  5502  0036  3EFF               	addlw	-1
  5503  0037  1D03               	skipz
  5504  0038  2833               	goto	u3145
  5505  0039                     l2503:
  5506  0039  3001               	movlw	1
  5507  003A  00FB               	movwf	??___awdiv
  5508  003B  087B               	movf	??___awdiv,w
  5509  003C  07A0               	addwf	___awdiv@counter,f
  5510  003D                     l2505:
  5511  003D  1FF8               	btfss	___awdiv@divisor+1,7
  5512  003E  2840               	goto	u3151
  5513  003F  2841               	goto	u3150
  5514  0040                     u3151:
  5515  0040  2832               	goto	l2501
  5516  0041                     u3150:
  5517  0041                     l2507:
  5518  0041  3001               	movlw	1
  5519  0042                     u3165:
  5520  0042  1003               	clrc
  5521  0043  0DA2               	rlf	___awdiv@quotient,f
  5522  0044  0DA3               	rlf	___awdiv@quotient+1,f
  5523  0045  3EFF               	addlw	-1
  5524  0046  1D03               	skipz
  5525  0047  2842               	goto	u3165
  5526  0048  0878               	movf	___awdiv@divisor+1,w
  5527  0049  027A               	subwf	___awdiv@dividend+1,w
  5528  004A  1D03               	skipz
  5529  004B  284E               	goto	u3175
  5530  004C  0877               	movf	___awdiv@divisor,w
  5531  004D  0279               	subwf	___awdiv@dividend,w
  5532  004E                     u3175:
  5533  004E  1C03               	skipc
  5534  004F  2851               	goto	u3171
  5535  0050  2852               	goto	u3170
  5536  0051                     u3171:
  5537  0051  2859               	goto	l2513
  5538  0052                     u3170:
  5539  0052                     l2509:
  5540  0052  0877               	movf	___awdiv@divisor,w
  5541  0053  02F9               	subwf	___awdiv@dividend,f
  5542  0054  0878               	movf	___awdiv@divisor+1,w
  5543  0055  1C03               	skipc
  5544  0056  03FA               	decf	___awdiv@dividend+1,f
  5545  0057  02FA               	subwf	___awdiv@dividend+1,f
  5546  0058                     l2511:
  5547  0058  1422               	bsf	___awdiv@quotient,0
  5548  0059                     l2513:
  5549  0059  3001               	movlw	1
  5550  005A                     u3185:
  5551  005A  1003               	clrc
  5552  005B  0CF8               	rrf	___awdiv@divisor+1,f
  5553  005C  0CF7               	rrf	___awdiv@divisor,f
  5554  005D  3EFF               	addlw	-1
  5555  005E  1D03               	skipz
  5556  005F  285A               	goto	u3185
  5557  0060                     l2515:
  5558  0060  3001               	movlw	1
  5559  0061  02A0               	subwf	___awdiv@counter,f
  5560  0062  1D03               	btfss	3,2
  5561  0063  2865               	goto	u3191
  5562  0064  2866               	goto	u3190
  5563  0065                     u3191:
  5564  0065  2841               	goto	l2507
  5565  0066                     u3190:
  5566  0066                     l2517:
  5567  0066  0821               	movf	___awdiv@sign,w
  5568  0067  1903               	btfsc	3,2
  5569  0068  286A               	goto	u3201
  5570  0069  286B               	goto	u3200
  5571  006A                     u3201:
  5572  006A  2870               	goto	l2521
  5573  006B                     u3200:
  5574  006B                     l2519:
  5575  006B  09A2               	comf	___awdiv@quotient,f
  5576  006C  09A3               	comf	___awdiv@quotient+1,f
  5577  006D  0AA2               	incf	___awdiv@quotient,f
  5578  006E  1903               	skipnz
  5579  006F  0AA3               	incf	___awdiv@quotient+1,f
  5580  0070                     l2521:
  5581  0070  0823               	movf	___awdiv@quotient+1,w
  5582  0071  00F8               	movwf	?___awdiv+1
  5583  0072  0822               	movf	___awdiv@quotient,w
  5584  0073  00F7               	movwf	?___awdiv
  5585  0074                     l547:
  5586  0074  0008               	return
  5587  0075                     __end_of___awdiv:
  5588                           
  5589                           	psect	text12
  5590  197B                     __ptext12:	
  5591 ;; *************** function _isdigit *****************
  5592 ;; Defined at:
  5593 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;  c               1    wreg     unsigned char 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;  c               1    1[COMMON] unsigned char 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;		None               void
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5607 ;;      Params:         0       0       0       0       0
  5608 ;;      Locals:         2       0       0       0       0
  5609 ;;      Temps:          0       0       0       0       0
  5610 ;;      Totals:         2       0       0       0       0
  5611 ;;Total ram usage:        2 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; This function calls:
  5614 ;;		Nothing
  5615 ;; This function is called by:
  5616 ;;		_sprintf
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619                           
  5620                           
  5621                           ;psect for function _isdigit
  5622  197B                     _isdigit:
  5623                           
  5624                           ;incstack = 0
  5625                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5626                           ;isdigit@c stored from wreg
  5627  197B  00F1               	movwf	isdigit@c
  5628  197C                     l3023:
  5629  197C  01F0               	clrf	_isdigit$807
  5630  197D                     l3025:
  5631  197D  303A               	movlw	58
  5632  197E  0271               	subwf	isdigit@c,w
  5633  197F  1803               	skipnc
  5634  1980  2982               	goto	u4511
  5635  1981  2983               	goto	u4510
  5636  1982                     u4511:
  5637  1982  298B               	goto	l3031
  5638  1983                     u4510:
  5639  1983                     l3027:
  5640  1983  3030               	movlw	48
  5641  1984  0271               	subwf	isdigit@c,w
  5642  1985  1C03               	skipc
  5643  1986  2988               	goto	u4521
  5644  1987  2989               	goto	u4520
  5645  1988                     u4521:
  5646  1988  298B               	goto	l3031
  5647  1989                     u4520:
  5648  1989                     l3029:
  5649  1989  01F0               	clrf	_isdigit$807
  5650  198A  0AF0               	incf	_isdigit$807,f
  5651  198B                     l3031:
  5652  198B  0C70               	rrf	_isdigit$807,w
  5653  198C                     l881:
  5654  198C  0008               	return
  5655  198D                     __end_of_isdigit:
  5656                           
  5657                           	psect	text13
  5658  136D                     __ptext13:	
  5659 ;; *************** function _fround *****************
  5660 ;; Defined at:
  5661 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  prec            1    wreg     unsigned char 
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;  prec            1   49[BANK0 ] unsigned char 
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  4   30[BANK0 ] unsigned char 
  5668 ;; Registers used:
  5669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5675 ;;      Params:         0       4       0       0       0
  5676 ;;      Locals:         0       9       0       0       0
  5677 ;;      Temps:          0       7       0       0       0
  5678 ;;      Totals:         0      20       0       0       0
  5679 ;;Total ram usage:       20 bytes
  5680 ;; Hardware stack levels used:    1
  5681 ;; Hardware stack levels required when called:    2
  5682 ;; This function calls:
  5683 ;;		___flmul
  5684 ;;		___lwdiv
  5685 ;;		___lwmod
  5686 ;; This function is called by:
  5687 ;;		_sprintf
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           
  5692                           ;psect for function _fround
  5693  136D                     _fround:
  5694                           
  5695                           ;incstack = 0
  5696                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5697                           ;fround@prec stored from wreg
  5698  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5699  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5700  136F  00D1               	movwf	fround@prec
  5701  1370                     l2965:
  5702                           
  5703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5704  1370  306E               	movlw	110
  5705  1371  0251               	subwf	fround@prec,w
  5706  1372  1C03               	skipc
  5707  1373  2B75               	goto	u4261
  5708  1374  2B76               	goto	u4260
  5709  1375                     u4261:
  5710  1375  2C83               	goto	l2973
  5711  1376                     u4260:
  5712  1376                     l2967:
  5713                           
  5714                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5715  1376  303F               	movlw	63
  5716  1377  00A7               	movwf	___flmul@b+3
  5717  1378  3000               	movlw	0
  5718  1379  00A6               	movwf	___flmul@b+2
  5719  137A  3000               	movlw	0
  5720  137B  00A5               	movwf	___flmul@b+1
  5721  137C  3000               	movlw	0
  5722  137D  00A4               	movwf	___flmul@b
  5723  137E  3064               	movlw	100
  5724  137F  00F6               	movwf	___lwdiv@divisor
  5725  1380  3000               	movlw	0
  5726  1381  00F7               	movwf	___lwdiv@divisor+1
  5727  1382  0851               	movf	fround@prec,w
  5728  1383  00C2               	movwf	??_fround
  5729  1384  01C3               	clrf	??_fround+1
  5730  1385  0842               	movf	??_fround,w
  5731  1386  00F8               	movwf	___lwdiv@dividend
  5732  1387  0843               	movf	??_fround+1,w
  5733  1388  00F9               	movwf	___lwdiv@dividend+1
  5734  1389  160A  158A  232B  160A  118A  	fcall	___lwdiv
  5735  138E  0876               	movf	?___lwdiv,w
  5736  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5737  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5738  1391  00C4               	movwf	??_fround+2
  5739  1392  3001               	movlw	1
  5740  1393                     u4275:
  5741  1393  1003               	clrc
  5742  1394  0DC4               	rlf	??_fround+2,f
  5743  1395  3EFF               	addlw	-1
  5744  1396  1D03               	skipz
  5745  1397  2B93               	goto	u4275
  5746  1398  1003               	clrc
  5747  1399  0D44               	rlf	??_fround+2,w
  5748  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5749  139B  0084               	movwf	4
  5750  139C  160A  158A  200A  160A  118A  	fcall	stringdir
  5751  13A1  00C5               	movwf	??_fround+3
  5752  13A2  160A  158A  200A  160A  118A  	fcall	stringdir
  5753  13A7  00C6               	movwf	??_fround+4
  5754  13A8  160A  158A  200A  160A  118A  	fcall	stringdir
  5755  13AD  00C7               	movwf	??_fround+5
  5756  13AE  160A  158A  200A  160A  118A  	fcall	stringdir
  5757  13B3  00C8               	movwf	??_fround+6
  5758  13B4  0848               	movf	??_fround+6,w
  5759  13B5  00AB               	movwf	___flmul@a+3
  5760  13B6  0847               	movf	??_fround+5,w
  5761  13B7  00AA               	movwf	___flmul@a+2
  5762  13B8  0846               	movf	??_fround+4,w
  5763  13B9  00A9               	movwf	___flmul@a+1
  5764  13BA  0845               	movf	??_fround+3,w
  5765  13BB  00A8               	movwf	___flmul@a
  5766  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5767  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5768  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5769  13C3  0827               	movf	?___flmul+3,w
  5770  13C4  00D0               	movwf	_fround$996+3
  5771  13C5  0826               	movf	?___flmul+2,w
  5772  13C6  00CF               	movwf	_fround$996+2
  5773  13C7  0825               	movf	?___flmul+1,w
  5774  13C8  00CE               	movwf	_fround$996+1
  5775  13C9  0824               	movf	?___flmul,w
  5776  13CA  00CD               	movwf	_fround$996
  5777                           
  5778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5779  13CB  300A               	movlw	10
  5780  13CC  00F6               	movwf	___lwdiv@divisor
  5781  13CD  3000               	movlw	0
  5782  13CE  00F7               	movwf	___lwdiv@divisor+1
  5783  13CF  0851               	movf	fround@prec,w
  5784  13D0  00C2               	movwf	??_fround
  5785  13D1  01C3               	clrf	??_fround+1
  5786  13D2  0842               	movf	??_fround,w
  5787  13D3  00F2               	movwf	___lwmod@dividend
  5788  13D4  0843               	movf	??_fround+1,w
  5789  13D5  00F3               	movwf	___lwmod@dividend+1
  5790  13D6  3064               	movlw	100
  5791  13D7  00F0               	movwf	___lwmod@divisor
  5792  13D8  3000               	movlw	0
  5793  13D9  00F1               	movwf	___lwmod@divisor+1
  5794  13DA  160A  158A  2275  160A  118A  	fcall	___lwmod
  5795  13DF  0871               	movf	?___lwmod+1,w
  5796  13E0  00F9               	movwf	___lwdiv@dividend+1
  5797  13E1  0870               	movf	?___lwmod,w
  5798  13E2  00F8               	movwf	___lwdiv@dividend
  5799  13E3  160A  158A  232B  160A  118A  	fcall	___lwdiv
  5800  13E8  0876               	movf	?___lwdiv,w
  5801  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5802  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5803  13EB  00C4               	movwf	??_fround+2
  5804  13EC  3001               	movlw	1
  5805  13ED                     u4285:
  5806  13ED  1003               	clrc
  5807  13EE  0DC4               	rlf	??_fround+2,f
  5808  13EF  3EFF               	addlw	-1
  5809  13F0  1D03               	skipz
  5810  13F1  2BED               	goto	u4285
  5811  13F2  1003               	clrc
  5812  13F3  0D44               	rlf	??_fround+2,w
  5813  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5814  13F5  0084               	movwf	4
  5815  13F6  160A  158A  200A  160A  118A  	fcall	stringdir
  5816  13FB  00C5               	movwf	??_fround+3
  5817  13FC  160A  158A  200A  160A  118A  	fcall	stringdir
  5818  1401  00C6               	movwf	??_fround+4
  5819  1402  160A  158A  200A  160A  118A  	fcall	stringdir
  5820  1407  00C7               	movwf	??_fround+5
  5821  1408  160A  158A  200A  160A  118A  	fcall	stringdir
  5822  140D  00C8               	movwf	??_fround+6
  5823  140E  0848               	movf	??_fround+6,w
  5824  140F  00A7               	movwf	___flmul@b+3
  5825  1410  0847               	movf	??_fround+5,w
  5826  1411  00A6               	movwf	___flmul@b+2
  5827  1412  0846               	movf	??_fround+4,w
  5828  1413  00A5               	movwf	___flmul@b+1
  5829  1414  0845               	movf	??_fround+3,w
  5830  1415  00A4               	movwf	___flmul@b
  5831  1416  0850               	movf	_fround$996+3,w
  5832  1417  00AB               	movwf	___flmul@a+3
  5833  1418  084F               	movf	_fround$996+2,w
  5834  1419  00AA               	movwf	___flmul@a+2
  5835  141A  084E               	movf	_fround$996+1,w
  5836  141B  00A9               	movwf	___flmul@a+1
  5837  141C  084D               	movf	_fround$996,w
  5838  141D  00A8               	movwf	___flmul@a
  5839  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5840  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5841  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5842  1425  0827               	movf	?___flmul+3,w
  5843  1426  00CC               	movwf	_fround$997+3
  5844  1427  0826               	movf	?___flmul+2,w
  5845  1428  00CB               	movwf	_fround$997+2
  5846  1429  0825               	movf	?___flmul+1,w
  5847  142A  00CA               	movwf	_fround$997+1
  5848  142B  0824               	movf	?___flmul,w
  5849  142C  00C9               	movwf	_fround$997
  5850                           
  5851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5852  142D  300A               	movlw	10
  5853  142E  00F0               	movwf	___lwmod@divisor
  5854  142F  3000               	movlw	0
  5855  1430  00F1               	movwf	___lwmod@divisor+1
  5856  1431  0851               	movf	fround@prec,w
  5857  1432  00C2               	movwf	??_fround
  5858  1433  01C3               	clrf	??_fround+1
  5859  1434  0842               	movf	??_fround,w
  5860  1435  00F2               	movwf	___lwmod@dividend
  5861  1436  0843               	movf	??_fround+1,w
  5862  1437  00F3               	movwf	___lwmod@dividend+1
  5863  1438  160A  158A  2275  160A  118A  	fcall	___lwmod
  5864  143D  0870               	movf	?___lwmod,w
  5865  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5866  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5867  1440  00C4               	movwf	??_fround+2
  5868  1441  3001               	movlw	1
  5869  1442                     u4295:
  5870  1442  1003               	clrc
  5871  1443  0DC4               	rlf	??_fround+2,f
  5872  1444  3EFF               	addlw	-1
  5873  1445  1D03               	skipz
  5874  1446  2C42               	goto	u4295
  5875  1447  1003               	clrc
  5876  1448  0D44               	rlf	??_fround+2,w
  5877  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5878  144A  0084               	movwf	4
  5879  144B  160A  158A  200A  160A  118A  	fcall	stringdir
  5880  1450  00C5               	movwf	??_fround+3
  5881  1451  160A  158A  200A  160A  118A  	fcall	stringdir
  5882  1456  00C6               	movwf	??_fround+4
  5883  1457  160A  158A  200A  160A  118A  	fcall	stringdir
  5884  145C  00C7               	movwf	??_fround+5
  5885  145D  160A  158A  200A  160A  118A  	fcall	stringdir
  5886  1462  00C8               	movwf	??_fround+6
  5887  1463  0848               	movf	??_fround+6,w
  5888  1464  00A7               	movwf	___flmul@b+3
  5889  1465  0847               	movf	??_fround+5,w
  5890  1466  00A6               	movwf	___flmul@b+2
  5891  1467  0846               	movf	??_fround+4,w
  5892  1468  00A5               	movwf	___flmul@b+1
  5893  1469  0845               	movf	??_fround+3,w
  5894  146A  00A4               	movwf	___flmul@b
  5895  146B  084C               	movf	_fround$997+3,w
  5896  146C  00AB               	movwf	___flmul@a+3
  5897  146D  084B               	movf	_fround$997+2,w
  5898  146E  00AA               	movwf	___flmul@a+2
  5899  146F  084A               	movf	_fround$997+1,w
  5900  1470  00A9               	movwf	___flmul@a+1
  5901  1471  0849               	movf	_fround$997,w
  5902  1472  00A8               	movwf	___flmul@a
  5903  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5904  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5905  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5906  147A  0827               	movf	?___flmul+3,w
  5907  147B  00C1               	movwf	?_fround+3
  5908  147C  0826               	movf	?___flmul+2,w
  5909  147D  00C0               	movwf	?_fround+2
  5910  147E  0825               	movf	?___flmul+1,w
  5911  147F  00BF               	movwf	?_fround+1
  5912  1480  0824               	movf	?___flmul,w
  5913  1481  00BE               	movwf	?_fround
  5914  1482  2D77               	goto	l300
  5915  1483                     l2973:
  5916  1483  300B               	movlw	11
  5917  1484  0251               	subwf	fround@prec,w
  5918  1485  1C03               	skipc
  5919  1486  2C88               	goto	u4301
  5920  1487  2C89               	goto	u4300
  5921  1488                     u4301:
  5922  1488  2D34               	goto	l2979
  5923  1489                     u4300:
  5924  1489                     l2975:
  5925                           
  5926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5927  1489  303F               	movlw	63
  5928  148A  00A7               	movwf	___flmul@b+3
  5929  148B  3000               	movlw	0
  5930  148C  00A6               	movwf	___flmul@b+2
  5931  148D  3000               	movlw	0
  5932  148E  00A5               	movwf	___flmul@b+1
  5933  148F  3000               	movlw	0
  5934  1490  00A4               	movwf	___flmul@b
  5935  1491  300A               	movlw	10
  5936  1492  00F6               	movwf	___lwdiv@divisor
  5937  1493  3000               	movlw	0
  5938  1494  00F7               	movwf	___lwdiv@divisor+1
  5939  1495  0851               	movf	fround@prec,w
  5940  1496  00C2               	movwf	??_fround
  5941  1497  01C3               	clrf	??_fround+1
  5942  1498  0842               	movf	??_fround,w
  5943  1499  00F8               	movwf	___lwdiv@dividend
  5944  149A  0843               	movf	??_fround+1,w
  5945  149B  00F9               	movwf	___lwdiv@dividend+1
  5946  149C  160A  158A  232B  160A  118A  	fcall	___lwdiv
  5947  14A1  0876               	movf	?___lwdiv,w
  5948  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5949  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5950  14A4  00C4               	movwf	??_fround+2
  5951  14A5  3001               	movlw	1
  5952  14A6                     u4315:
  5953  14A6  1003               	clrc
  5954  14A7  0DC4               	rlf	??_fround+2,f
  5955  14A8  3EFF               	addlw	-1
  5956  14A9  1D03               	skipz
  5957  14AA  2CA6               	goto	u4315
  5958  14AB  1003               	clrc
  5959  14AC  0D44               	rlf	??_fround+2,w
  5960  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5961  14AE  0084               	movwf	4
  5962  14AF  160A  158A  200A  160A  118A  	fcall	stringdir
  5963  14B4  00C5               	movwf	??_fround+3
  5964  14B5  160A  158A  200A  160A  118A  	fcall	stringdir
  5965  14BA  00C6               	movwf	??_fround+4
  5966  14BB  160A  158A  200A  160A  118A  	fcall	stringdir
  5967  14C0  00C7               	movwf	??_fround+5
  5968  14C1  160A  158A  200A  160A  118A  	fcall	stringdir
  5969  14C6  00C8               	movwf	??_fround+6
  5970  14C7  0848               	movf	??_fround+6,w
  5971  14C8  00AB               	movwf	___flmul@a+3
  5972  14C9  0847               	movf	??_fround+5,w
  5973  14CA  00AA               	movwf	___flmul@a+2
  5974  14CB  0846               	movf	??_fround+4,w
  5975  14CC  00A9               	movwf	___flmul@a+1
  5976  14CD  0845               	movf	??_fround+3,w
  5977  14CE  00A8               	movwf	___flmul@a
  5978  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5979  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5980  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5981  14D6  0827               	movf	?___flmul+3,w
  5982  14D7  00D0               	movwf	_fround$996+3
  5983  14D8  0826               	movf	?___flmul+2,w
  5984  14D9  00CF               	movwf	_fround$996+2
  5985  14DA  0825               	movf	?___flmul+1,w
  5986  14DB  00CE               	movwf	_fround$996+1
  5987  14DC  0824               	movf	?___flmul,w
  5988  14DD  00CD               	movwf	_fround$996
  5989                           
  5990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5991  14DE  300A               	movlw	10
  5992  14DF  00F0               	movwf	___lwmod@divisor
  5993  14E0  3000               	movlw	0
  5994  14E1  00F1               	movwf	___lwmod@divisor+1
  5995  14E2  0851               	movf	fround@prec,w
  5996  14E3  00C2               	movwf	??_fround
  5997  14E4  01C3               	clrf	??_fround+1
  5998  14E5  0842               	movf	??_fround,w
  5999  14E6  00F2               	movwf	___lwmod@dividend
  6000  14E7  0843               	movf	??_fround+1,w
  6001  14E8  00F3               	movwf	___lwmod@dividend+1
  6002  14E9  160A  158A  2275  160A  118A  	fcall	___lwmod
  6003  14EE  0870               	movf	?___lwmod,w
  6004  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  6005  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  6006  14F1  00C4               	movwf	??_fround+2
  6007  14F2  3001               	movlw	1
  6008  14F3                     u4325:
  6009  14F3  1003               	clrc
  6010  14F4  0DC4               	rlf	??_fround+2,f
  6011  14F5  3EFF               	addlw	-1
  6012  14F6  1D03               	skipz
  6013  14F7  2CF3               	goto	u4325
  6014  14F8  1003               	clrc
  6015  14F9  0D44               	rlf	??_fround+2,w
  6016  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6017  14FB  0084               	movwf	4
  6018  14FC  160A  158A  200A  160A  118A  	fcall	stringdir
  6019  1501  00C5               	movwf	??_fround+3
  6020  1502  160A  158A  200A  160A  118A  	fcall	stringdir
  6021  1507  00C6               	movwf	??_fround+4
  6022  1508  160A  158A  200A  160A  118A  	fcall	stringdir
  6023  150D  00C7               	movwf	??_fround+5
  6024  150E  160A  158A  200A  160A  118A  	fcall	stringdir
  6025  1513  00C8               	movwf	??_fround+6
  6026  1514  0848               	movf	??_fround+6,w
  6027  1515  00A7               	movwf	___flmul@b+3
  6028  1516  0847               	movf	??_fround+5,w
  6029  1517  00A6               	movwf	___flmul@b+2
  6030  1518  0846               	movf	??_fround+4,w
  6031  1519  00A5               	movwf	___flmul@b+1
  6032  151A  0845               	movf	??_fround+3,w
  6033  151B  00A4               	movwf	___flmul@b
  6034  151C  0850               	movf	_fround$996+3,w
  6035  151D  00AB               	movwf	___flmul@a+3
  6036  151E  084F               	movf	_fround$996+2,w
  6037  151F  00AA               	movwf	___flmul@a+2
  6038  1520  084E               	movf	_fround$996+1,w
  6039  1521  00A9               	movwf	___flmul@a+1
  6040  1522  084D               	movf	_fround$996,w
  6041  1523  00A8               	movwf	___flmul@a
  6042  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  6043  1529  1283               	bcf	3,5	;RP0=0, select bank0
  6044  152A  1303               	bcf	3,6	;RP1=0, select bank0
  6045  152B  0827               	movf	?___flmul+3,w
  6046  152C  00C1               	movwf	?_fround+3
  6047  152D  0826               	movf	?___flmul+2,w
  6048  152E  00C0               	movwf	?_fround+2
  6049  152F  0825               	movf	?___flmul+1,w
  6050  1530  00BF               	movwf	?_fround+1
  6051  1531  0824               	movf	?___flmul,w
  6052  1532  00BE               	movwf	?_fround
  6053  1533  2D77               	goto	l300
  6054  1534                     l2979:
  6055                           
  6056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  6057  1534  303F               	movlw	63
  6058  1535  00A7               	movwf	___flmul@b+3
  6059  1536  3000               	movlw	0
  6060  1537  00A6               	movwf	___flmul@b+2
  6061  1538  3000               	movlw	0
  6062  1539  00A5               	movwf	___flmul@b+1
  6063  153A  3000               	movlw	0
  6064  153B  00A4               	movwf	___flmul@b
  6065  153C  0851               	movf	fround@prec,w
  6066  153D  00C2               	movwf	??_fround
  6067  153E  3001               	movlw	1
  6068  153F                     u4335:
  6069  153F  1003               	clrc
  6070  1540  0DC2               	rlf	??_fround,f
  6071  1541  3EFF               	addlw	-1
  6072  1542  1D03               	skipz
  6073  1543  2D3F               	goto	u4335
  6074  1544  1003               	clrc
  6075  1545  0D42               	rlf	??_fround,w
  6076  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6077  1547  0084               	movwf	4
  6078  1548  160A  158A  200A  160A  118A  	fcall	stringdir
  6079  154D  00C3               	movwf	??_fround+1
  6080  154E  160A  158A  200A  160A  118A  	fcall	stringdir
  6081  1553  00C4               	movwf	??_fround+2
  6082  1554  160A  158A  200A  160A  118A  	fcall	stringdir
  6083  1559  00C5               	movwf	??_fround+3
  6084  155A  160A  158A  200A  160A  118A  	fcall	stringdir
  6085  155F  00C6               	movwf	??_fround+4
  6086  1560  0846               	movf	??_fround+4,w
  6087  1561  00AB               	movwf	___flmul@a+3
  6088  1562  0845               	movf	??_fround+3,w
  6089  1563  00AA               	movwf	___flmul@a+2
  6090  1564  0844               	movf	??_fround+2,w
  6091  1565  00A9               	movwf	___flmul@a+1
  6092  1566  0843               	movf	??_fround+1,w
  6093  1567  00A8               	movwf	___flmul@a
  6094  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  6095  156D  1283               	bcf	3,5	;RP0=0, select bank0
  6096  156E  1303               	bcf	3,6	;RP1=0, select bank0
  6097  156F  0827               	movf	?___flmul+3,w
  6098  1570  00C1               	movwf	?_fround+3
  6099  1571  0826               	movf	?___flmul+2,w
  6100  1572  00C0               	movwf	?_fround+2
  6101  1573  0825               	movf	?___flmul+1,w
  6102  1574  00BF               	movwf	?_fround+1
  6103  1575  0824               	movf	?___flmul,w
  6104  1576  00BE               	movwf	?_fround
  6105  1577                     l300:
  6106  1577  0008               	return
  6107  1578                     __end_of_fround:
  6108                           
  6109                           	psect	text14
  6110  1A75                     __ptext14:	
  6111 ;; *************** function ___lwmod *****************
  6112 ;; Defined at:
  6113 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  divisor         2    0[COMMON] unsigned int 
  6116 ;;  dividend        2    2[COMMON] unsigned int 
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;  counter         1    5[COMMON] unsigned char 
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  2    0[COMMON] unsigned int 
  6121 ;; Registers used:
  6122 ;;		wreg, status,2, status,0
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6128 ;;      Params:         4       0       0       0       0
  6129 ;;      Locals:         1       0       0       0       0
  6130 ;;      Temps:          1       0       0       0       0
  6131 ;;      Totals:         6       0       0       0       0
  6132 ;;Total ram usage:        6 bytes
  6133 ;; Hardware stack levels used:    1
  6134 ;; This function calls:
  6135 ;;		Nothing
  6136 ;; This function is called by:
  6137 ;;		_fround
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           
  6142                           ;psect for function ___lwmod
  6143  1A75                     ___lwmod:
  6144  1A75                     l2589:	
  6145                           ;incstack = 0
  6146                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6147                           
  6148  1A75  0870               	movf	___lwmod@divisor,w
  6149  1A76  0471               	iorwf	___lwmod@divisor+1,w
  6150  1A77  1903               	btfsc	3,2
  6151  1A78  2A7A               	goto	u3371
  6152  1A79  2A7B               	goto	u3370
  6153  1A7A                     u3371:
  6154  1A7A  2AAA               	goto	l2607
  6155  1A7B                     u3370:
  6156  1A7B                     l2591:
  6157  1A7B  01F5               	clrf	___lwmod@counter
  6158  1A7C  0AF5               	incf	___lwmod@counter,f
  6159  1A7D  2A89               	goto	l2597
  6160  1A7E                     l2593:
  6161  1A7E  3001               	movlw	1
  6162  1A7F                     u3385:
  6163  1A7F  1003               	clrc
  6164  1A80  0DF0               	rlf	___lwmod@divisor,f
  6165  1A81  0DF1               	rlf	___lwmod@divisor+1,f
  6166  1A82  3EFF               	addlw	-1
  6167  1A83  1D03               	skipz
  6168  1A84  2A7F               	goto	u3385
  6169  1A85                     l2595:
  6170  1A85  3001               	movlw	1
  6171  1A86  00F4               	movwf	??___lwmod
  6172  1A87  0874               	movf	??___lwmod,w
  6173  1A88  07F5               	addwf	___lwmod@counter,f
  6174  1A89                     l2597:
  6175  1A89  1FF1               	btfss	___lwmod@divisor+1,7
  6176  1A8A  2A8C               	goto	u3391
  6177  1A8B  2A8D               	goto	u3390
  6178  1A8C                     u3391:
  6179  1A8C  2A7E               	goto	l2593
  6180  1A8D                     u3390:
  6181  1A8D                     l2599:
  6182  1A8D  0871               	movf	___lwmod@divisor+1,w
  6183  1A8E  0273               	subwf	___lwmod@dividend+1,w
  6184  1A8F  1D03               	skipz
  6185  1A90  2A93               	goto	u3405
  6186  1A91  0870               	movf	___lwmod@divisor,w
  6187  1A92  0272               	subwf	___lwmod@dividend,w
  6188  1A93                     u3405:
  6189  1A93  1C03               	skipc
  6190  1A94  2A96               	goto	u3401
  6191  1A95  2A97               	goto	u3400
  6192  1A96                     u3401:
  6193  1A96  2A9D               	goto	l2603
  6194  1A97                     u3400:
  6195  1A97                     l2601:
  6196  1A97  0870               	movf	___lwmod@divisor,w
  6197  1A98  02F2               	subwf	___lwmod@dividend,f
  6198  1A99  0871               	movf	___lwmod@divisor+1,w
  6199  1A9A  1C03               	skipc
  6200  1A9B  03F3               	decf	___lwmod@dividend+1,f
  6201  1A9C  02F3               	subwf	___lwmod@dividend+1,f
  6202  1A9D                     l2603:
  6203  1A9D  3001               	movlw	1
  6204  1A9E                     u3415:
  6205  1A9E  1003               	clrc
  6206  1A9F  0CF1               	rrf	___lwmod@divisor+1,f
  6207  1AA0  0CF0               	rrf	___lwmod@divisor,f
  6208  1AA1  3EFF               	addlw	-1
  6209  1AA2  1D03               	skipz
  6210  1AA3  2A9E               	goto	u3415
  6211  1AA4                     l2605:
  6212  1AA4  3001               	movlw	1
  6213  1AA5  02F5               	subwf	___lwmod@counter,f
  6214  1AA6  1D03               	btfss	3,2
  6215  1AA7  2AA9               	goto	u3421
  6216  1AA8  2AAA               	goto	u3420
  6217  1AA9                     u3421:
  6218  1AA9  2A8D               	goto	l2599
  6219  1AAA                     u3420:
  6220  1AAA                     l2607:
  6221  1AAA  0873               	movf	___lwmod@dividend+1,w
  6222  1AAB  00F1               	movwf	?___lwmod+1
  6223  1AAC  0872               	movf	___lwmod@dividend,w
  6224  1AAD  00F0               	movwf	?___lwmod
  6225  1AAE                     l710:
  6226  1AAE  0008               	return
  6227  1AAF                     __end_of___lwmod:
  6228                           
  6229                           	psect	text15
  6230  1B2B                     __ptext15:	
  6231 ;; *************** function ___lwdiv *****************
  6232 ;; Defined at:
  6233 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  divisor         2    6[COMMON] unsigned int 
  6236 ;;  dividend        2    8[COMMON] unsigned int 
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;  quotient        2   11[COMMON] unsigned int 
  6239 ;;  counter         1   13[COMMON] unsigned char 
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  2    6[COMMON] unsigned int 
  6242 ;; Registers used:
  6243 ;;		wreg, status,2, status,0
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6249 ;;      Params:         4       0       0       0       0
  6250 ;;      Locals:         3       0       0       0       0
  6251 ;;      Temps:          1       0       0       0       0
  6252 ;;      Totals:         8       0       0       0       0
  6253 ;;Total ram usage:        8 bytes
  6254 ;; Hardware stack levels used:    1
  6255 ;; This function calls:
  6256 ;;		Nothing
  6257 ;; This function is called by:
  6258 ;;		_fround
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           
  6263                           ;psect for function ___lwdiv
  6264  1B2B                     ___lwdiv:
  6265  1B2B                     l2563:	
  6266                           ;incstack = 0
  6267                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6268                           
  6269  1B2B  01FB               	clrf	___lwdiv@quotient
  6270  1B2C  01FC               	clrf	___lwdiv@quotient+1
  6271  1B2D                     l2565:
  6272  1B2D  0876               	movf	___lwdiv@divisor,w
  6273  1B2E  0477               	iorwf	___lwdiv@divisor+1,w
  6274  1B2F  1903               	btfsc	3,2
  6275  1B30  2B32               	goto	u3301
  6276  1B31  2B33               	goto	u3300
  6277  1B32                     u3301:
  6278  1B32  2B6A               	goto	l2585
  6279  1B33                     u3300:
  6280  1B33                     l2567:
  6281  1B33  01FD               	clrf	___lwdiv@counter
  6282  1B34  0AFD               	incf	___lwdiv@counter,f
  6283  1B35  2B41               	goto	l2573
  6284  1B36                     l2569:
  6285  1B36  3001               	movlw	1
  6286  1B37                     u3315:
  6287  1B37  1003               	clrc
  6288  1B38  0DF6               	rlf	___lwdiv@divisor,f
  6289  1B39  0DF7               	rlf	___lwdiv@divisor+1,f
  6290  1B3A  3EFF               	addlw	-1
  6291  1B3B  1D03               	skipz
  6292  1B3C  2B37               	goto	u3315
  6293  1B3D                     l2571:
  6294  1B3D  3001               	movlw	1
  6295  1B3E  00FA               	movwf	??___lwdiv
  6296  1B3F  087A               	movf	??___lwdiv,w
  6297  1B40  07FD               	addwf	___lwdiv@counter,f
  6298  1B41                     l2573:
  6299  1B41  1FF7               	btfss	___lwdiv@divisor+1,7
  6300  1B42  2B44               	goto	u3321
  6301  1B43  2B45               	goto	u3320
  6302  1B44                     u3321:
  6303  1B44  2B36               	goto	l2569
  6304  1B45                     u3320:
  6305  1B45                     l2575:
  6306  1B45  3001               	movlw	1
  6307  1B46                     u3335:
  6308  1B46  1003               	clrc
  6309  1B47  0DFB               	rlf	___lwdiv@quotient,f
  6310  1B48  0DFC               	rlf	___lwdiv@quotient+1,f
  6311  1B49  3EFF               	addlw	-1
  6312  1B4A  1D03               	skipz
  6313  1B4B  2B46               	goto	u3335
  6314  1B4C  0877               	movf	___lwdiv@divisor+1,w
  6315  1B4D  0279               	subwf	___lwdiv@dividend+1,w
  6316  1B4E  1D03               	skipz
  6317  1B4F  2B52               	goto	u3345
  6318  1B50  0876               	movf	___lwdiv@divisor,w
  6319  1B51  0278               	subwf	___lwdiv@dividend,w
  6320  1B52                     u3345:
  6321  1B52  1C03               	skipc
  6322  1B53  2B55               	goto	u3341
  6323  1B54  2B56               	goto	u3340
  6324  1B55                     u3341:
  6325  1B55  2B5D               	goto	l2581
  6326  1B56                     u3340:
  6327  1B56                     l2577:
  6328  1B56  0876               	movf	___lwdiv@divisor,w
  6329  1B57  02F8               	subwf	___lwdiv@dividend,f
  6330  1B58  0877               	movf	___lwdiv@divisor+1,w
  6331  1B59  1C03               	skipc
  6332  1B5A  03F9               	decf	___lwdiv@dividend+1,f
  6333  1B5B  02F9               	subwf	___lwdiv@dividend+1,f
  6334  1B5C                     l2579:
  6335  1B5C  147B               	bsf	___lwdiv@quotient,0
  6336  1B5D                     l2581:
  6337  1B5D  3001               	movlw	1
  6338  1B5E                     u3355:
  6339  1B5E  1003               	clrc
  6340  1B5F  0CF7               	rrf	___lwdiv@divisor+1,f
  6341  1B60  0CF6               	rrf	___lwdiv@divisor,f
  6342  1B61  3EFF               	addlw	-1
  6343  1B62  1D03               	skipz
  6344  1B63  2B5E               	goto	u3355
  6345  1B64                     l2583:
  6346  1B64  3001               	movlw	1
  6347  1B65  02FD               	subwf	___lwdiv@counter,f
  6348  1B66  1D03               	btfss	3,2
  6349  1B67  2B69               	goto	u3361
  6350  1B68  2B6A               	goto	u3360
  6351  1B69                     u3361:
  6352  1B69  2B45               	goto	l2575
  6353  1B6A                     u3360:
  6354  1B6A                     l2585:
  6355  1B6A  087C               	movf	___lwdiv@quotient+1,w
  6356  1B6B  00F7               	movwf	?___lwdiv+1
  6357  1B6C  087B               	movf	___lwdiv@quotient,w
  6358  1B6D  00F6               	movwf	?___lwdiv
  6359  1B6E                     l700:
  6360  1B6E  0008               	return
  6361  1B6F                     __end_of___lwdiv:
  6362                           
  6363                           	psect	text16
  6364  10D3                     __ptext16:	
  6365 ;; *************** function __tdiv_to_l_ *****************
  6366 ;; Defined at:
  6367 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;  f1              4    0[COMMON] float 
  6370 ;;  f2              4    4[COMMON] float 
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;  quot            4    0[BANK0 ] unsigned long 
  6373 ;;  exp1            1    5[BANK0 ] unsigned char 
  6374 ;;  cntr            1    4[BANK0 ] unsigned char 
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  4    0[COMMON] unsigned long 
  6377 ;; Registers used:
  6378 ;;		wreg, status,2, status,0
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6384 ;;      Params:         8       0       0       0       0
  6385 ;;      Locals:         0       6       0       0       0
  6386 ;;      Temps:          4       0       0       0       0
  6387 ;;      Totals:        12       6       0       0       0
  6388 ;;Total ram usage:       18 bytes
  6389 ;; Hardware stack levels used:    1
  6390 ;; This function calls:
  6391 ;;		Nothing
  6392 ;; This function is called by:
  6393 ;;		_sprintf
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           
  6398                           ;psect for function __tdiv_to_l_
  6399  10D3                     __tdiv_to_l_:
  6400  10D3                     l3035:	
  6401                           ;incstack = 0
  6402                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6403                           
  6404  10D3  0870               	movf	__tdiv_to_l_@f1,w
  6405  10D4  00F8               	movwf	??__tdiv_to_l_
  6406  10D5  0871               	movf	__tdiv_to_l_@f1+1,w
  6407  10D6  00F9               	movwf	??__tdiv_to_l_+1
  6408  10D7  0872               	movf	__tdiv_to_l_@f1+2,w
  6409  10D8  00FA               	movwf	??__tdiv_to_l_+2
  6410  10D9  1003               	clrc
  6411  10DA  0D79               	rlf	??__tdiv_to_l_+1,w
  6412  10DB  0D7A               	rlf	??__tdiv_to_l_+2,w
  6413  10DC  00FB               	movwf	??__tdiv_to_l_+3
  6414  10DD  087B               	movf	??__tdiv_to_l_+3,w
  6415  10DE  1283               	bcf	3,5	;RP0=0, select bank0
  6416  10DF  1303               	bcf	3,6	;RP1=0, select bank0
  6417  10E0  00A5               	movwf	__tdiv_to_l_@exp1
  6418  10E1  0825               	movf	__tdiv_to_l_@exp1,w
  6419  10E2  1D03               	btfss	3,2
  6420  10E3  28E5               	goto	u4531
  6421  10E4  28E6               	goto	u4530
  6422  10E5                     u4531:
  6423  10E5  28EF               	goto	l3041
  6424  10E6                     u4530:
  6425  10E6                     l3037:
  6426  10E6  3000               	movlw	0
  6427  10E7  00F3               	movwf	?__tdiv_to_l_+3
  6428  10E8  3000               	movlw	0
  6429  10E9  00F2               	movwf	?__tdiv_to_l_+2
  6430  10EA  3000               	movlw	0
  6431  10EB  00F1               	movwf	?__tdiv_to_l_+1
  6432  10EC  3000               	movlw	0
  6433  10ED  00F0               	movwf	?__tdiv_to_l_
  6434  10EE  298F               	goto	l611
  6435  10EF                     l3041:
  6436  10EF  0874               	movf	__tdiv_to_l_@f2,w
  6437  10F0  00F8               	movwf	??__tdiv_to_l_
  6438  10F1  0875               	movf	__tdiv_to_l_@f2+1,w
  6439  10F2  00F9               	movwf	??__tdiv_to_l_+1
  6440  10F3  0876               	movf	__tdiv_to_l_@f2+2,w
  6441  10F4  00FA               	movwf	??__tdiv_to_l_+2
  6442  10F5  1003               	clrc
  6443  10F6  0D79               	rlf	??__tdiv_to_l_+1,w
  6444  10F7  0D7A               	rlf	??__tdiv_to_l_+2,w
  6445  10F8  00FB               	movwf	??__tdiv_to_l_+3
  6446  10F9  087B               	movf	??__tdiv_to_l_+3,w
  6447  10FA  00A4               	movwf	__tdiv_to_l_@cntr
  6448  10FB  0824               	movf	__tdiv_to_l_@cntr,w
  6449  10FC  1D03               	btfss	3,2
  6450  10FD  28FF               	goto	u4541
  6451  10FE  2900               	goto	u4540
  6452  10FF                     u4541:
  6453  10FF  2901               	goto	l612
  6454  1100                     u4540:
  6455  1100  28E6               	goto	l3037
  6456  1101                     l612:
  6457  1101  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6458  1102                     l3047:
  6459  1102  30FF               	movlw	255
  6460  1103  05F0               	andwf	__tdiv_to_l_@f1,f
  6461  1104  30FF               	movlw	255
  6462  1105  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6463  1106  3000               	movlw	0
  6464  1107  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6465  1108                     l3049:
  6466  1108  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6467  1109  30FF               	movlw	255
  6468  110A  05F4               	andwf	__tdiv_to_l_@f2,f
  6469  110B  30FF               	movlw	255
  6470  110C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6471  110D  3000               	movlw	0
  6472  110E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6473  110F  3000               	movlw	0
  6474  1110  00A3               	movwf	__tdiv_to_l_@quot+3
  6475  1111  3000               	movlw	0
  6476  1112  00A2               	movwf	__tdiv_to_l_@quot+2
  6477  1113  3000               	movlw	0
  6478  1114  00A1               	movwf	__tdiv_to_l_@quot+1
  6479  1115  3000               	movlw	0
  6480  1116  00A0               	movwf	__tdiv_to_l_@quot
  6481  1117                     l3051:
  6482  1117  307F               	movlw	127
  6483  1118  02A5               	subwf	__tdiv_to_l_@exp1,f
  6484  1119                     l3053:
  6485  1119  3098               	movlw	152
  6486  111A  0724               	addwf	__tdiv_to_l_@cntr,w
  6487  111B  00F8               	movwf	??__tdiv_to_l_
  6488  111C  0878               	movf	??__tdiv_to_l_,w
  6489  111D  02A5               	subwf	__tdiv_to_l_@exp1,f
  6490  111E  3018               	movlw	24
  6491  111F  00F8               	movwf	??__tdiv_to_l_
  6492  1120  0878               	movf	??__tdiv_to_l_,w
  6493  1121  00A4               	movwf	__tdiv_to_l_@cntr
  6494  1122                     l3055:
  6495  1122  3001               	movlw	1
  6496  1123  00F8               	movwf	??__tdiv_to_l_
  6497  1124                     u4555:
  6498  1124  1003               	clrc
  6499  1125  0DA0               	rlf	__tdiv_to_l_@quot,f
  6500  1126  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6501  1127  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6502  1128  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6503  1129  0BF8               	decfsz	??__tdiv_to_l_,f
  6504  112A  2924               	goto	u4555
  6505  112B                     l3057:
  6506  112B  0876               	movf	__tdiv_to_l_@f2+2,w
  6507  112C  0272               	subwf	__tdiv_to_l_@f1+2,w
  6508  112D  1D03               	skipz
  6509  112E  2935               	goto	u4565
  6510  112F  0875               	movf	__tdiv_to_l_@f2+1,w
  6511  1130  0271               	subwf	__tdiv_to_l_@f1+1,w
  6512  1131  1D03               	skipz
  6513  1132  2935               	goto	u4565
  6514  1133  0874               	movf	__tdiv_to_l_@f2,w
  6515  1134  0270               	subwf	__tdiv_to_l_@f1,w
  6516  1135                     u4565:
  6517  1135  1C03               	skipc
  6518  1136  2938               	goto	u4561
  6519  1137  2939               	goto	u4560
  6520  1138                     u4561:
  6521  1138  2944               	goto	l3063
  6522  1139                     u4560:
  6523  1139                     l3059:
  6524  1139  0874               	movf	__tdiv_to_l_@f2,w
  6525  113A  02F0               	subwf	__tdiv_to_l_@f1,f
  6526  113B  0875               	movf	__tdiv_to_l_@f2+1,w
  6527  113C  1C03               	skipc
  6528  113D  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6529  113E  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6530  113F  0876               	movf	__tdiv_to_l_@f2+2,w
  6531  1140  1C03               	skipc
  6532  1141  0A76               	incf	__tdiv_to_l_@f2+2,w
  6533  1142  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6534  1143                     l3061:
  6535  1143  1420               	bsf	__tdiv_to_l_@quot,0
  6536  1144                     l3063:
  6537  1144  3001               	movlw	1
  6538  1145                     u4575:
  6539  1145  1003               	clrc
  6540  1146  0DF0               	rlf	__tdiv_to_l_@f1,f
  6541  1147  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6542  1148  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6543  1149  3EFF               	addlw	-1
  6544  114A  1D03               	skipz
  6545  114B  2945               	goto	u4575
  6546  114C                     l3065:
  6547  114C  3001               	movlw	1
  6548  114D  02A4               	subwf	__tdiv_to_l_@cntr,f
  6549  114E  1D03               	btfss	3,2
  6550  114F  2951               	goto	u4581
  6551  1150  2952               	goto	u4580
  6552  1151                     u4581:
  6553  1151  2922               	goto	l3055
  6554  1152                     u4580:
  6555  1152                     l615:
  6556  1152  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6557  1153  2955               	goto	u4591
  6558  1154  2956               	goto	u4590
  6559  1155                     u4591:
  6560  1155  2970               	goto	l3075
  6561  1156                     u4590:
  6562  1156                     l3067:
  6563  1156  0825               	movf	__tdiv_to_l_@exp1,w
  6564  1157  3A80               	xorlw	128
  6565  1158  3E97               	addlw	151
  6566  1159  1803               	skipnc
  6567  115A  295C               	goto	u4601
  6568  115B  295D               	goto	u4600
  6569  115C                     u4601:
  6570  115C  295E               	goto	l3073
  6571  115D                     u4600:
  6572  115D  28E6               	goto	l3037
  6573  115E                     l3073:
  6574  115E  3001               	movlw	1
  6575  115F                     u4615:
  6576  115F  1003               	clrc
  6577  1160  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6578  1161  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6579  1162  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6580  1163  0CA0               	rrf	__tdiv_to_l_@quot,f
  6581  1164  3EFF               	addlw	-1
  6582  1165  1D03               	skipz
  6583  1166  295F               	goto	u4615
  6584  1167  3001               	movlw	1
  6585  1168  00F8               	movwf	??__tdiv_to_l_
  6586  1169  0878               	movf	??__tdiv_to_l_,w
  6587  116A  07A5               	addwf	__tdiv_to_l_@exp1,f
  6588  116B  1D03               	btfss	3,2
  6589  116C  296E               	goto	u4621
  6590  116D  296F               	goto	u4620
  6591  116E                     u4621:
  6592  116E  295E               	goto	l3073
  6593  116F                     u4620:
  6594  116F  2987               	goto	l3083
  6595  1170                     l3075:
  6596  1170  3018               	movlw	24
  6597  1171  0225               	subwf	__tdiv_to_l_@exp1,w
  6598  1172  1C03               	skipc
  6599  1173  2975               	goto	u4631
  6600  1174  2976               	goto	u4630
  6601  1175                     u4631:
  6602  1175  2982               	goto	l622
  6603  1176                     u4630:
  6604  1176  28E6               	goto	l3037
  6605  1177                     l3081:
  6606  1177  3001               	movlw	1
  6607  1178  00F8               	movwf	??__tdiv_to_l_
  6608  1179                     u4645:
  6609  1179  1003               	clrc
  6610  117A  0DA0               	rlf	__tdiv_to_l_@quot,f
  6611  117B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6612  117C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6613  117D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6614  117E  0BF8               	decfsz	??__tdiv_to_l_,f
  6615  117F  2979               	goto	u4645
  6616  1180  3001               	movlw	1
  6617  1181  02A5               	subwf	__tdiv_to_l_@exp1,f
  6618  1182                     l622:
  6619  1182  0825               	movf	__tdiv_to_l_@exp1,w
  6620  1183  1D03               	btfss	3,2
  6621  1184  2986               	goto	u4651
  6622  1185  2987               	goto	u4650
  6623  1186                     u4651:
  6624  1186  2977               	goto	l3081
  6625  1187                     u4650:
  6626  1187                     l3083:
  6627  1187  0823               	movf	__tdiv_to_l_@quot+3,w
  6628  1188  00F3               	movwf	?__tdiv_to_l_+3
  6629  1189  0822               	movf	__tdiv_to_l_@quot+2,w
  6630  118A  00F2               	movwf	?__tdiv_to_l_+2
  6631  118B  0821               	movf	__tdiv_to_l_@quot+1,w
  6632  118C  00F1               	movwf	?__tdiv_to_l_+1
  6633  118D  0820               	movf	__tdiv_to_l_@quot,w
  6634  118E  00F0               	movwf	?__tdiv_to_l_
  6635  118F                     l611:
  6636  118F  0008               	return
  6637  1190                     __end_of__tdiv_to_l_:
  6638                           
  6639                           	psect	text17
  6640  0882                     __ptext17:	
  6641 ;; *************** function __div_to_l_ *****************
  6642 ;; Defined at:
  6643 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;  f1              4    0[COMMON] unsigned long 
  6646 ;;  f2              4    4[COMMON] unsigned long 
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;  quot            4    0[BANK0 ] unsigned long 
  6649 ;;  exp1            1    5[BANK0 ] unsigned char 
  6650 ;;  cntr            1    4[BANK0 ] unsigned char 
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  4    0[COMMON] unsigned long 
  6653 ;; Registers used:
  6654 ;;		wreg, status,2, status,0
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6660 ;;      Params:         8       0       0       0       0
  6661 ;;      Locals:         0       6       0       0       0
  6662 ;;      Temps:          1       0       0       0       0
  6663 ;;      Totals:         9       6       0       0       0
  6664 ;;Total ram usage:       15 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; This function calls:
  6667 ;;		Nothing
  6668 ;; This function is called by:
  6669 ;;		_sprintf
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           
  6674                           ;psect for function __div_to_l_
  6675  0882                     __div_to_l_:
  6676  0882                     l3087:	
  6677                           ;incstack = 0
  6678                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6679                           
  6680  0882  1003               	clrc
  6681  0883  0D72               	rlf	__div_to_l_@f1+2,w
  6682  0884  0D73               	rlf	__div_to_l_@f1+3,w
  6683  0885  00F8               	movwf	??__div_to_l_
  6684  0886  0878               	movf	??__div_to_l_,w
  6685  0887  1283               	bcf	3,5	;RP0=0, select bank0
  6686  0888  1303               	bcf	3,6	;RP1=0, select bank0
  6687  0889  00A5               	movwf	__div_to_l_@exp1
  6688  088A  0825               	movf	__div_to_l_@exp1,w
  6689  088B  1D03               	btfss	3,2
  6690  088C  288E               	goto	u4661
  6691  088D  288F               	goto	u4660
  6692  088E                     u4661:
  6693  088E  2898               	goto	l3093
  6694  088F                     u4660:
  6695  088F                     l3089:
  6696  088F  3000               	movlw	0
  6697  0890  00F3               	movwf	?__div_to_l_+3
  6698  0891  3000               	movlw	0
  6699  0892  00F2               	movwf	?__div_to_l_+2
  6700  0893  3000               	movlw	0
  6701  0894  00F1               	movwf	?__div_to_l_+1
  6702  0895  3000               	movlw	0
  6703  0896  00F0               	movwf	?__div_to_l_
  6704  0897  293F               	goto	l564
  6705  0898                     l3093:
  6706  0898  1003               	clrc
  6707  0899  0D76               	rlf	__div_to_l_@f2+2,w
  6708  089A  0D77               	rlf	__div_to_l_@f2+3,w
  6709  089B  00F8               	movwf	??__div_to_l_
  6710  089C  0878               	movf	??__div_to_l_,w
  6711  089D  00A4               	movwf	__div_to_l_@cntr
  6712  089E  0824               	movf	__div_to_l_@cntr,w
  6713  089F  1D03               	btfss	3,2
  6714  08A0  28A2               	goto	u4671
  6715  08A1  28A3               	goto	u4670
  6716  08A2                     u4671:
  6717  08A2  28A4               	goto	l565
  6718  08A3                     u4670:
  6719  08A3  288F               	goto	l3089
  6720  08A4                     l565:
  6721  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  6722  08A5                     l3099:
  6723  08A5  30FF               	movlw	255
  6724  08A6  05F0               	andwf	__div_to_l_@f1,f
  6725  08A7  30FF               	movlw	255
  6726  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  6727  08A9  30FF               	movlw	255
  6728  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  6729  08AB  3000               	movlw	0
  6730  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  6731  08AD                     l3101:
  6732  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  6733  08AE  30FF               	movlw	255
  6734  08AF  05F4               	andwf	__div_to_l_@f2,f
  6735  08B0  30FF               	movlw	255
  6736  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  6737  08B2  30FF               	movlw	255
  6738  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  6739  08B4  3000               	movlw	0
  6740  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  6741  08B6  3000               	movlw	0
  6742  08B7  00A3               	movwf	__div_to_l_@quot+3
  6743  08B8  3000               	movlw	0
  6744  08B9  00A2               	movwf	__div_to_l_@quot+2
  6745  08BA  3000               	movlw	0
  6746  08BB  00A1               	movwf	__div_to_l_@quot+1
  6747  08BC  3000               	movlw	0
  6748  08BD  00A0               	movwf	__div_to_l_@quot
  6749  08BE                     l3103:
  6750  08BE  307F               	movlw	127
  6751  08BF  02A5               	subwf	__div_to_l_@exp1,f
  6752  08C0                     l3105:
  6753  08C0  30A0               	movlw	160
  6754  08C1  0724               	addwf	__div_to_l_@cntr,w
  6755  08C2  00F8               	movwf	??__div_to_l_
  6756  08C3  0878               	movf	??__div_to_l_,w
  6757  08C4  02A5               	subwf	__div_to_l_@exp1,f
  6758  08C5  3020               	movlw	32
  6759  08C6  00F8               	movwf	??__div_to_l_
  6760  08C7  0878               	movf	??__div_to_l_,w
  6761  08C8  00A4               	movwf	__div_to_l_@cntr
  6762  08C9                     l3107:
  6763  08C9  3001               	movlw	1
  6764  08CA  00F8               	movwf	??__div_to_l_
  6765  08CB                     u4685:
  6766  08CB  1003               	clrc
  6767  08CC  0DA0               	rlf	__div_to_l_@quot,f
  6768  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  6769  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  6770  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  6771  08D0  0BF8               	decfsz	??__div_to_l_,f
  6772  08D1  28CB               	goto	u4685
  6773  08D2                     l3109:
  6774  08D2  0877               	movf	__div_to_l_@f2+3,w
  6775  08D3  0273               	subwf	__div_to_l_@f1+3,w
  6776  08D4  1D03               	skipz
  6777  08D5  28E0               	goto	u4695
  6778  08D6  0876               	movf	__div_to_l_@f2+2,w
  6779  08D7  0272               	subwf	__div_to_l_@f1+2,w
  6780  08D8  1D03               	skipz
  6781  08D9  28E0               	goto	u4695
  6782  08DA  0875               	movf	__div_to_l_@f2+1,w
  6783  08DB  0271               	subwf	__div_to_l_@f1+1,w
  6784  08DC  1D03               	skipz
  6785  08DD  28E0               	goto	u4695
  6786  08DE  0874               	movf	__div_to_l_@f2,w
  6787  08DF  0270               	subwf	__div_to_l_@f1,w
  6788  08E0                     u4695:
  6789  08E0  1C03               	skipc
  6790  08E1  28E3               	goto	u4691
  6791  08E2  28E4               	goto	u4690
  6792  08E3                     u4691:
  6793  08E3  28F3               	goto	l3115
  6794  08E4                     u4690:
  6795  08E4                     l3111:
  6796  08E4  0874               	movf	__div_to_l_@f2,w
  6797  08E5  02F0               	subwf	__div_to_l_@f1,f
  6798  08E6  0875               	movf	__div_to_l_@f2+1,w
  6799  08E7  1C03               	skipc
  6800  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  6801  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  6802  08EA  0876               	movf	__div_to_l_@f2+2,w
  6803  08EB  1C03               	skipc
  6804  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  6805  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  6806  08EE  0877               	movf	__div_to_l_@f2+3,w
  6807  08EF  1C03               	skipc
  6808  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  6809  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  6810  08F2                     l3113:
  6811  08F2  1420               	bsf	__div_to_l_@quot,0
  6812  08F3                     l3115:
  6813  08F3  3001               	movlw	1
  6814  08F4  00F8               	movwf	??__div_to_l_
  6815  08F5                     u4705:
  6816  08F5  1003               	clrc
  6817  08F6  0DF0               	rlf	__div_to_l_@f1,f
  6818  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  6819  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  6820  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  6821  08FA  0BF8               	decfsz	??__div_to_l_,f
  6822  08FB  28F5               	goto	u4705
  6823  08FC                     l3117:
  6824  08FC  3001               	movlw	1
  6825  08FD  02A4               	subwf	__div_to_l_@cntr,f
  6826  08FE  1D03               	btfss	3,2
  6827  08FF  2901               	goto	u4711
  6828  0900  2902               	goto	u4710
  6829  0901                     u4711:
  6830  0901  28C9               	goto	l3107
  6831  0902                     u4710:
  6832  0902                     l568:
  6833  0902  1FA5               	btfss	__div_to_l_@exp1,7
  6834  0903  2905               	goto	u4721
  6835  0904  2906               	goto	u4720
  6836  0905                     u4721:
  6837  0905  2920               	goto	l3127
  6838  0906                     u4720:
  6839  0906                     l3119:
  6840  0906  0825               	movf	__div_to_l_@exp1,w
  6841  0907  3A80               	xorlw	128
  6842  0908  3E9F               	addlw	159
  6843  0909  1803               	skipnc
  6844  090A  290C               	goto	u4731
  6845  090B  290D               	goto	u4730
  6846  090C                     u4731:
  6847  090C  290E               	goto	l3125
  6848  090D                     u4730:
  6849  090D  288F               	goto	l3089
  6850  090E                     l3125:
  6851  090E  3001               	movlw	1
  6852  090F                     u4745:
  6853  090F  1003               	clrc
  6854  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  6855  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  6856  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  6857  0913  0CA0               	rrf	__div_to_l_@quot,f
  6858  0914  3EFF               	addlw	-1
  6859  0915  1D03               	skipz
  6860  0916  290F               	goto	u4745
  6861  0917  3001               	movlw	1
  6862  0918  00F8               	movwf	??__div_to_l_
  6863  0919  0878               	movf	??__div_to_l_,w
  6864  091A  07A5               	addwf	__div_to_l_@exp1,f
  6865  091B  1D03               	btfss	3,2
  6866  091C  291E               	goto	u4751
  6867  091D  291F               	goto	u4750
  6868  091E                     u4751:
  6869  091E  290E               	goto	l3125
  6870  091F                     u4750:
  6871  091F  2937               	goto	l3135
  6872  0920                     l3127:
  6873  0920  3020               	movlw	32
  6874  0921  0225               	subwf	__div_to_l_@exp1,w
  6875  0922  1C03               	skipc
  6876  0923  2925               	goto	u4761
  6877  0924  2926               	goto	u4760
  6878  0925                     u4761:
  6879  0925  2932               	goto	l575
  6880  0926                     u4760:
  6881  0926  288F               	goto	l3089
  6882  0927                     l3133:
  6883  0927  3001               	movlw	1
  6884  0928  00F8               	movwf	??__div_to_l_
  6885  0929                     u4775:
  6886  0929  1003               	clrc
  6887  092A  0DA0               	rlf	__div_to_l_@quot,f
  6888  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  6889  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  6890  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  6891  092E  0BF8               	decfsz	??__div_to_l_,f
  6892  092F  2929               	goto	u4775
  6893  0930  3001               	movlw	1
  6894  0931  02A5               	subwf	__div_to_l_@exp1,f
  6895  0932                     l575:
  6896  0932  0825               	movf	__div_to_l_@exp1,w
  6897  0933  1D03               	btfss	3,2
  6898  0934  2936               	goto	u4781
  6899  0935  2937               	goto	u4780
  6900  0936                     u4781:
  6901  0936  2927               	goto	l3133
  6902  0937                     u4780:
  6903  0937                     l3135:
  6904  0937  0823               	movf	__div_to_l_@quot+3,w
  6905  0938  00F3               	movwf	?__div_to_l_+3
  6906  0939  0822               	movf	__div_to_l_@quot+2,w
  6907  093A  00F2               	movwf	?__div_to_l_+2
  6908  093B  0821               	movf	__div_to_l_@quot+1,w
  6909  093C  00F1               	movwf	?__div_to_l_+1
  6910  093D  0820               	movf	__div_to_l_@quot,w
  6911  093E  00F0               	movwf	?__div_to_l_
  6912  093F                     l564:
  6913  093F  0008               	return
  6914  0940                     __end_of__div_to_l_:
  6915                           
  6916                           	psect	text18
  6917  1A29                     __ptext18:	
  6918 ;; *************** function ___wmul *****************
  6919 ;; Defined at:
  6920 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;  multiplier      2    0[COMMON] unsigned int 
  6923 ;;  multiplicand    2    2[COMMON] unsigned int 
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;  product         2    4[COMMON] unsigned int 
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  2    0[COMMON] unsigned int 
  6928 ;; Registers used:
  6929 ;;		wreg, status,2, status,0
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6935 ;;      Params:         4       0       0       0       0
  6936 ;;      Locals:         2       0       0       0       0
  6937 ;;      Temps:          0       0       0       0       0
  6938 ;;      Totals:         6       0       0       0       0
  6939 ;;Total ram usage:        6 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; This function calls:
  6942 ;;		Nothing
  6943 ;; This function is called by:
  6944 ;;		_sprintf
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           
  6948                           
  6949                           ;psect for function ___wmul
  6950  1A29                     ___wmul:
  6951  1A29                     l3139:	
  6952                           ;incstack = 0
  6953                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6954                           
  6955  1A29  01F4               	clrf	___wmul@product
  6956  1A2A  01F5               	clrf	___wmul@product+1
  6957  1A2B                     l3141:
  6958  1A2B  1C70               	btfss	___wmul@multiplier,0
  6959  1A2C  2A2E               	goto	u4791
  6960  1A2D  2A2F               	goto	u4790
  6961  1A2E                     u4791:
  6962  1A2E  2A35               	goto	l394
  6963  1A2F                     u4790:
  6964  1A2F                     l3143:
  6965  1A2F  0872               	movf	___wmul@multiplicand,w
  6966  1A30  07F4               	addwf	___wmul@product,f
  6967  1A31  1803               	skipnc
  6968  1A32  0AF5               	incf	___wmul@product+1,f
  6969  1A33  0873               	movf	___wmul@multiplicand+1,w
  6970  1A34  07F5               	addwf	___wmul@product+1,f
  6971  1A35                     l394:
  6972  1A35  3001               	movlw	1
  6973  1A36                     u4805:
  6974  1A36  1003               	clrc
  6975  1A37  0DF2               	rlf	___wmul@multiplicand,f
  6976  1A38  0DF3               	rlf	___wmul@multiplicand+1,f
  6977  1A39  3EFF               	addlw	-1
  6978  1A3A  1D03               	skipz
  6979  1A3B  2A36               	goto	u4805
  6980  1A3C                     l3145:
  6981  1A3C  3001               	movlw	1
  6982  1A3D                     u4815:
  6983  1A3D  1003               	clrc
  6984  1A3E  0CF1               	rrf	___wmul@multiplier+1,f
  6985  1A3F  0CF0               	rrf	___wmul@multiplier,f
  6986  1A40  3EFF               	addlw	-1
  6987  1A41  1D03               	skipz
  6988  1A42  2A3D               	goto	u4815
  6989  1A43                     l3147:
  6990  1A43  0870               	movf	___wmul@multiplier,w
  6991  1A44  0471               	iorwf	___wmul@multiplier+1,w
  6992  1A45  1D03               	btfss	3,2
  6993  1A46  2A48               	goto	u4821
  6994  1A47  2A49               	goto	u4820
  6995  1A48                     u4821:
  6996  1A48  2A2B               	goto	l3141
  6997  1A49                     u4820:
  6998  1A49                     l3149:
  6999  1A49  0875               	movf	___wmul@product+1,w
  7000  1A4A  00F1               	movwf	?___wmul+1
  7001  1A4B  0874               	movf	___wmul@product,w
  7002  1A4C  00F0               	movwf	?___wmul
  7003  1A4D                     l396:
  7004  1A4D  0008               	return
  7005  1A4E                     __end_of___wmul:
  7006                           
  7007                           	psect	text19
  7008  1C4F                     __ptext19:	
  7009 ;; *************** function ___llmod *****************
  7010 ;; Defined at:
  7011 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;  divisor         4    0[COMMON] unsigned long 
  7014 ;;  dividend        4    4[COMMON] unsigned long 
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;  counter         1    9[COMMON] unsigned char 
  7017 ;; Return value:  Size  Location     Type
  7018 ;;                  4    0[COMMON] unsigned long 
  7019 ;; Registers used:
  7020 ;;		wreg, status,2, status,0
  7021 ;; Tracked objects:
  7022 ;;		On entry : 0/0
  7023 ;;		On exit  : 0/0
  7024 ;;		Unchanged: 0/0
  7025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7026 ;;      Params:         8       0       0       0       0
  7027 ;;      Locals:         1       0       0       0       0
  7028 ;;      Temps:          1       0       0       0       0
  7029 ;;      Totals:        10       0       0       0       0
  7030 ;;Total ram usage:       10 bytes
  7031 ;; Hardware stack levels used:    1
  7032 ;; This function calls:
  7033 ;;		Nothing
  7034 ;; This function is called by:
  7035 ;;		_sprintf
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           
  7040                           ;psect for function ___llmod
  7041  1C4F                     ___llmod:
  7042  1C4F                     l3253:	
  7043                           ;incstack = 0
  7044                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7045                           
  7046  1C4F  0873               	movf	___llmod@divisor+3,w
  7047  1C50  0472               	iorwf	___llmod@divisor+2,w
  7048  1C51  0471               	iorwf	___llmod@divisor+1,w
  7049  1C52  0470               	iorwf	___llmod@divisor,w
  7050  1C53  1903               	skipnz
  7051  1C54  2C56               	goto	u5111
  7052  1C55  2C57               	goto	u5110
  7053  1C56                     u5111:
  7054  1C56  2C9A               	goto	l3269
  7055  1C57                     u5110:
  7056  1C57                     l3255:
  7057  1C57  01F9               	clrf	___llmod@counter
  7058  1C58  0AF9               	incf	___llmod@counter,f
  7059  1C59  2C67               	goto	l3259
  7060  1C5A                     l3257:
  7061  1C5A  3001               	movlw	1
  7062  1C5B  00F8               	movwf	??___llmod
  7063  1C5C                     u5125:
  7064  1C5C  1003               	clrc
  7065  1C5D  0DF0               	rlf	___llmod@divisor,f
  7066  1C5E  0DF1               	rlf	___llmod@divisor+1,f
  7067  1C5F  0DF2               	rlf	___llmod@divisor+2,f
  7068  1C60  0DF3               	rlf	___llmod@divisor+3,f
  7069  1C61  0BF8               	decfsz	??___llmod,f
  7070  1C62  2C5C               	goto	u5125
  7071  1C63  3001               	movlw	1
  7072  1C64  00F8               	movwf	??___llmod
  7073  1C65  0878               	movf	??___llmod,w
  7074  1C66  07F9               	addwf	___llmod@counter,f
  7075  1C67                     l3259:
  7076  1C67  1FF3               	btfss	___llmod@divisor+3,7
  7077  1C68  2C6A               	goto	u5131
  7078  1C69  2C6B               	goto	u5130
  7079  1C6A                     u5131:
  7080  1C6A  2C5A               	goto	l3257
  7081  1C6B                     u5130:
  7082  1C6B                     l3261:
  7083  1C6B  0873               	movf	___llmod@divisor+3,w
  7084  1C6C  0277               	subwf	___llmod@dividend+3,w
  7085  1C6D  1D03               	skipz
  7086  1C6E  2C79               	goto	u5145
  7087  1C6F  0872               	movf	___llmod@divisor+2,w
  7088  1C70  0276               	subwf	___llmod@dividend+2,w
  7089  1C71  1D03               	skipz
  7090  1C72  2C79               	goto	u5145
  7091  1C73  0871               	movf	___llmod@divisor+1,w
  7092  1C74  0275               	subwf	___llmod@dividend+1,w
  7093  1C75  1D03               	skipz
  7094  1C76  2C79               	goto	u5145
  7095  1C77  0870               	movf	___llmod@divisor,w
  7096  1C78  0274               	subwf	___llmod@dividend,w
  7097  1C79                     u5145:
  7098  1C79  1C03               	skipc
  7099  1C7A  2C7C               	goto	u5141
  7100  1C7B  2C7D               	goto	u5140
  7101  1C7C                     u5141:
  7102  1C7C  2C8B               	goto	l3265
  7103  1C7D                     u5140:
  7104  1C7D                     l3263:
  7105  1C7D  0870               	movf	___llmod@divisor,w
  7106  1C7E  02F4               	subwf	___llmod@dividend,f
  7107  1C7F  0871               	movf	___llmod@divisor+1,w
  7108  1C80  1C03               	skipc
  7109  1C81  0F71               	incfsz	___llmod@divisor+1,w
  7110  1C82  02F5               	subwf	___llmod@dividend+1,f
  7111  1C83  0872               	movf	___llmod@divisor+2,w
  7112  1C84  1C03               	skipc
  7113  1C85  0F72               	incfsz	___llmod@divisor+2,w
  7114  1C86  02F6               	subwf	___llmod@dividend+2,f
  7115  1C87  0873               	movf	___llmod@divisor+3,w
  7116  1C88  1C03               	skipc
  7117  1C89  0F73               	incfsz	___llmod@divisor+3,w
  7118  1C8A  02F7               	subwf	___llmod@dividend+3,f
  7119  1C8B                     l3265:
  7120  1C8B  3001               	movlw	1
  7121  1C8C                     u5155:
  7122  1C8C  1003               	clrc
  7123  1C8D  0CF3               	rrf	___llmod@divisor+3,f
  7124  1C8E  0CF2               	rrf	___llmod@divisor+2,f
  7125  1C8F  0CF1               	rrf	___llmod@divisor+1,f
  7126  1C90  0CF0               	rrf	___llmod@divisor,f
  7127  1C91  3EFF               	addlw	-1
  7128  1C92  1D03               	skipz
  7129  1C93  2C8C               	goto	u5155
  7130  1C94                     l3267:
  7131  1C94  3001               	movlw	1
  7132  1C95  02F9               	subwf	___llmod@counter,f
  7133  1C96  1D03               	btfss	3,2
  7134  1C97  2C99               	goto	u5161
  7135  1C98  2C9A               	goto	u5160
  7136  1C99                     u5161:
  7137  1C99  2C6B               	goto	l3261
  7138  1C9A                     u5160:
  7139  1C9A                     l3269:
  7140  1C9A  0877               	movf	___llmod@dividend+3,w
  7141  1C9B  00F3               	movwf	?___llmod+3
  7142  1C9C  0876               	movf	___llmod@dividend+2,w
  7143  1C9D  00F2               	movwf	?___llmod+2
  7144  1C9E  0875               	movf	___llmod@dividend+1,w
  7145  1C9F  00F1               	movwf	?___llmod+1
  7146  1CA0  0874               	movf	___llmod@dividend,w
  7147  1CA1  00F0               	movwf	?___llmod
  7148  1CA2                     l650:
  7149  1CA2  0008               	return
  7150  1CA3                     __end_of___llmod:
  7151                           
  7152                           	psect	text20
  7153  1D58                     __ptext20:	
  7154 ;; *************** function ___lldiv *****************
  7155 ;; Defined at:
  7156 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;  divisor         4    0[COMMON] unsigned long 
  7159 ;;  dividend        4    4[COMMON] unsigned long 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;  quotient        4    9[COMMON] unsigned long 
  7162 ;;  counter         1   13[COMMON] unsigned char 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  4    0[COMMON] unsigned long 
  7165 ;; Registers used:
  7166 ;;		wreg, status,2, status,0
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7172 ;;      Params:         8       0       0       0       0
  7173 ;;      Locals:         5       0       0       0       0
  7174 ;;      Temps:          1       0       0       0       0
  7175 ;;      Totals:        14       0       0       0       0
  7176 ;;Total ram usage:       14 bytes
  7177 ;; Hardware stack levels used:    1
  7178 ;; This function calls:
  7179 ;;		Nothing
  7180 ;; This function is called by:
  7181 ;;		_sprintf
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           
  7186                           ;psect for function ___lldiv
  7187  1D58                     ___lldiv:
  7188  1D58                     l3153:	
  7189                           ;incstack = 0
  7190                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7191                           
  7192  1D58  3000               	movlw	0
  7193  1D59  00FC               	movwf	___lldiv@quotient+3
  7194  1D5A  3000               	movlw	0
  7195  1D5B  00FB               	movwf	___lldiv@quotient+2
  7196  1D5C  3000               	movlw	0
  7197  1D5D  00FA               	movwf	___lldiv@quotient+1
  7198  1D5E  3000               	movlw	0
  7199  1D5F  00F9               	movwf	___lldiv@quotient
  7200  1D60  0873               	movf	___lldiv@divisor+3,w
  7201  1D61  0472               	iorwf	___lldiv@divisor+2,w
  7202  1D62  0471               	iorwf	___lldiv@divisor+1,w
  7203  1D63  0470               	iorwf	___lldiv@divisor,w
  7204  1D64  1903               	skipnz
  7205  1D65  2D67               	goto	u4831
  7206  1D66  2D68               	goto	u4830
  7207  1D67                     u4831:
  7208  1D67  2DB5               	goto	l3173
  7209  1D68                     u4830:
  7210  1D68                     l3155:
  7211  1D68  01FD               	clrf	___lldiv@counter
  7212  1D69  0AFD               	incf	___lldiv@counter,f
  7213  1D6A  2D78               	goto	l3159
  7214  1D6B                     l3157:
  7215  1D6B  3001               	movlw	1
  7216  1D6C  00F8               	movwf	??___lldiv
  7217  1D6D                     u4845:
  7218  1D6D  1003               	clrc
  7219  1D6E  0DF0               	rlf	___lldiv@divisor,f
  7220  1D6F  0DF1               	rlf	___lldiv@divisor+1,f
  7221  1D70  0DF2               	rlf	___lldiv@divisor+2,f
  7222  1D71  0DF3               	rlf	___lldiv@divisor+3,f
  7223  1D72  0BF8               	decfsz	??___lldiv,f
  7224  1D73  2D6D               	goto	u4845
  7225  1D74  3001               	movlw	1
  7226  1D75  00F8               	movwf	??___lldiv
  7227  1D76  0878               	movf	??___lldiv,w
  7228  1D77  07FD               	addwf	___lldiv@counter,f
  7229  1D78                     l3159:
  7230  1D78  1FF3               	btfss	___lldiv@divisor+3,7
  7231  1D79  2D7B               	goto	u4851
  7232  1D7A  2D7C               	goto	u4850
  7233  1D7B                     u4851:
  7234  1D7B  2D6B               	goto	l3157
  7235  1D7C                     u4850:
  7236  1D7C                     l3161:
  7237  1D7C  3001               	movlw	1
  7238  1D7D  00F8               	movwf	??___lldiv
  7239  1D7E                     u4865:
  7240  1D7E  1003               	clrc
  7241  1D7F  0DF9               	rlf	___lldiv@quotient,f
  7242  1D80  0DFA               	rlf	___lldiv@quotient+1,f
  7243  1D81  0DFB               	rlf	___lldiv@quotient+2,f
  7244  1D82  0DFC               	rlf	___lldiv@quotient+3,f
  7245  1D83  0BF8               	decfsz	??___lldiv,f
  7246  1D84  2D7E               	goto	u4865
  7247  1D85                     l3163:
  7248  1D85  0873               	movf	___lldiv@divisor+3,w
  7249  1D86  0277               	subwf	___lldiv@dividend+3,w
  7250  1D87  1D03               	skipz
  7251  1D88  2D93               	goto	u4875
  7252  1D89  0872               	movf	___lldiv@divisor+2,w
  7253  1D8A  0276               	subwf	___lldiv@dividend+2,w
  7254  1D8B  1D03               	skipz
  7255  1D8C  2D93               	goto	u4875
  7256  1D8D  0871               	movf	___lldiv@divisor+1,w
  7257  1D8E  0275               	subwf	___lldiv@dividend+1,w
  7258  1D8F  1D03               	skipz
  7259  1D90  2D93               	goto	u4875
  7260  1D91  0870               	movf	___lldiv@divisor,w
  7261  1D92  0274               	subwf	___lldiv@dividend,w
  7262  1D93                     u4875:
  7263  1D93  1C03               	skipc
  7264  1D94  2D96               	goto	u4871
  7265  1D95  2D97               	goto	u4870
  7266  1D96                     u4871:
  7267  1D96  2DA6               	goto	l3169
  7268  1D97                     u4870:
  7269  1D97                     l3165:
  7270  1D97  0870               	movf	___lldiv@divisor,w
  7271  1D98  02F4               	subwf	___lldiv@dividend,f
  7272  1D99  0871               	movf	___lldiv@divisor+1,w
  7273  1D9A  1C03               	skipc
  7274  1D9B  0F71               	incfsz	___lldiv@divisor+1,w
  7275  1D9C  02F5               	subwf	___lldiv@dividend+1,f
  7276  1D9D  0872               	movf	___lldiv@divisor+2,w
  7277  1D9E  1C03               	skipc
  7278  1D9F  0F72               	incfsz	___lldiv@divisor+2,w
  7279  1DA0  02F6               	subwf	___lldiv@dividend+2,f
  7280  1DA1  0873               	movf	___lldiv@divisor+3,w
  7281  1DA2  1C03               	skipc
  7282  1DA3  0F73               	incfsz	___lldiv@divisor+3,w
  7283  1DA4  02F7               	subwf	___lldiv@dividend+3,f
  7284  1DA5                     l3167:
  7285  1DA5  1479               	bsf	___lldiv@quotient,0
  7286  1DA6                     l3169:
  7287  1DA6  3001               	movlw	1
  7288  1DA7                     u4885:
  7289  1DA7  1003               	clrc
  7290  1DA8  0CF3               	rrf	___lldiv@divisor+3,f
  7291  1DA9  0CF2               	rrf	___lldiv@divisor+2,f
  7292  1DAA  0CF1               	rrf	___lldiv@divisor+1,f
  7293  1DAB  0CF0               	rrf	___lldiv@divisor,f
  7294  1DAC  3EFF               	addlw	-1
  7295  1DAD  1D03               	skipz
  7296  1DAE  2DA7               	goto	u4885
  7297  1DAF                     l3171:
  7298  1DAF  3001               	movlw	1
  7299  1DB0  02FD               	subwf	___lldiv@counter,f
  7300  1DB1  1D03               	btfss	3,2
  7301  1DB2  2DB4               	goto	u4891
  7302  1DB3  2DB5               	goto	u4890
  7303  1DB4                     u4891:
  7304  1DB4  2D7C               	goto	l3161
  7305  1DB5                     u4890:
  7306  1DB5                     l3173:
  7307  1DB5  087C               	movf	___lldiv@quotient+3,w
  7308  1DB6  00F3               	movwf	?___lldiv+3
  7309  1DB7  087B               	movf	___lldiv@quotient+2,w
  7310  1DB8  00F2               	movwf	?___lldiv+2
  7311  1DB9  087A               	movf	___lldiv@quotient+1,w
  7312  1DBA  00F1               	movwf	?___lldiv+1
  7313  1DBB  0879               	movf	___lldiv@quotient,w
  7314  1DBC  00F0               	movwf	?___lldiv
  7315  1DBD                     l430:
  7316  1DBD  0008               	return
  7317  1DBE                     __end_of___lldiv:
  7318                           
  7319                           	psect	text21
  7320  0806                     __ptext21:	
  7321 ;; *************** function ___fltol *****************
  7322 ;; Defined at:
  7323 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  f1              4   49[BANK0 ] unsigned long 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;  exp1            1   59[BANK0 ] unsigned char 
  7328 ;;  sign1           1   58[BANK0 ] unsigned char 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  4   49[BANK0 ] long 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7338 ;;      Params:         0       4       0       0       0
  7339 ;;      Locals:         0       2       0       0       0
  7340 ;;      Temps:          0       5       0       0       0
  7341 ;;      Totals:         0      11       0       0       0
  7342 ;;Total ram usage:       11 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; This function calls:
  7345 ;;		Nothing
  7346 ;; This function is called by:
  7347 ;;		_sprintf
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           
  7352                           ;psect for function ___fltol
  7353  0806                     ___fltol:
  7354  0806                     l3217:	
  7355                           ;incstack = 0
  7356                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7357                           
  7358  0806  1003               	clrc
  7359  0807  1283               	bcf	3,5	;RP0=0, select bank0
  7360  0808  1303               	bcf	3,6	;RP1=0, select bank0
  7361  0809  0D53               	rlf	___fltol@f1+2,w
  7362  080A  0D54               	rlf	___fltol@f1+3,w
  7363  080B  00D5               	movwf	??___fltol
  7364  080C  0855               	movf	??___fltol,w
  7365  080D  00DB               	movwf	___fltol@exp1
  7366  080E  085B               	movf	___fltol@exp1,w
  7367  080F  1D03               	btfss	3,2
  7368  0810  2812               	goto	u5011
  7369  0811  2813               	goto	u5010
  7370  0812                     u5011:
  7371  0812  281C               	goto	l3223
  7372  0813                     u5010:
  7373  0813                     l3219:
  7374  0813  3000               	movlw	0
  7375  0814  00D4               	movwf	?___fltol+3
  7376  0815  3000               	movlw	0
  7377  0816  00D3               	movwf	?___fltol+2
  7378  0817  3000               	movlw	0
  7379  0818  00D2               	movwf	?___fltol+1
  7380  0819  3000               	movlw	0
  7381  081A  00D1               	movwf	?___fltol
  7382  081B  2881               	goto	l597
  7383  081C                     l3223:
  7384  081C  0851               	movf	___fltol@f1,w
  7385  081D  00D5               	movwf	??___fltol
  7386  081E  0852               	movf	___fltol@f1+1,w
  7387  081F  00D6               	movwf	??___fltol+1
  7388  0820  0853               	movf	___fltol@f1+2,w
  7389  0821  00D7               	movwf	??___fltol+2
  7390  0822  0854               	movf	___fltol@f1+3,w
  7391  0823  00D8               	movwf	??___fltol+3
  7392  0824  301F               	movlw	31
  7393  0825                     u5025:
  7394  0825  1003               	clrc
  7395  0826  0CD8               	rrf	??___fltol+3,f
  7396  0827  0CD7               	rrf	??___fltol+2,f
  7397  0828  0CD6               	rrf	??___fltol+1,f
  7398  0829  0CD5               	rrf	??___fltol,f
  7399  082A                     u5020:
  7400  082A  3EFF               	addlw	-1
  7401  082B  1D03               	skipz
  7402  082C  2825               	goto	u5025
  7403  082D  0855               	movf	??___fltol,w
  7404  082E  00D9               	movwf	??___fltol+4
  7405  082F  0859               	movf	??___fltol+4,w
  7406  0830  00DA               	movwf	___fltol@sign1
  7407  0831                     l3225:
  7408  0831  17D3               	bsf	___fltol@f1+2,7
  7409  0832                     l3227:
  7410  0832  30FF               	movlw	255
  7411  0833  05D1               	andwf	___fltol@f1,f
  7412  0834  30FF               	movlw	255
  7413  0835  05D2               	andwf	___fltol@f1+1,f
  7414  0836  30FF               	movlw	255
  7415  0837  05D3               	andwf	___fltol@f1+2,f
  7416  0838  3000               	movlw	0
  7417  0839  05D4               	andwf	___fltol@f1+3,f
  7418  083A                     l3229:
  7419  083A  3096               	movlw	150
  7420  083B  02DB               	subwf	___fltol@exp1,f
  7421  083C                     l3231:
  7422  083C  1FDB               	btfss	___fltol@exp1,7
  7423  083D  283F               	goto	u5031
  7424  083E  2840               	goto	u5030
  7425  083F                     u5031:
  7426  083F  285A               	goto	l3241
  7427  0840                     u5030:
  7428  0840                     l3233:
  7429  0840  085B               	movf	___fltol@exp1,w
  7430  0841  3A80               	xorlw	128
  7431  0842  3E97               	addlw	151
  7432  0843  1803               	skipnc
  7433  0844  2846               	goto	u5041
  7434  0845  2847               	goto	u5040
  7435  0846                     u5041:
  7436  0846  2848               	goto	l3239
  7437  0847                     u5040:
  7438  0847  2813               	goto	l3219
  7439  0848                     l3239:
  7440  0848  3001               	movlw	1
  7441  0849                     u5055:
  7442  0849  1003               	clrc
  7443  084A  0CD4               	rrf	___fltol@f1+3,f
  7444  084B  0CD3               	rrf	___fltol@f1+2,f
  7445  084C  0CD2               	rrf	___fltol@f1+1,f
  7446  084D  0CD1               	rrf	___fltol@f1,f
  7447  084E  3EFF               	addlw	-1
  7448  084F  1D03               	skipz
  7449  0850  2849               	goto	u5055
  7450  0851  3001               	movlw	1
  7451  0852  00D5               	movwf	??___fltol
  7452  0853  0855               	movf	??___fltol,w
  7453  0854  07DB               	addwf	___fltol@exp1,f
  7454  0855  1D03               	btfss	3,2
  7455  0856  2858               	goto	u5061
  7456  0857  2859               	goto	u5060
  7457  0858                     u5061:
  7458  0858  2848               	goto	l3239
  7459  0859                     u5060:
  7460  0859  2871               	goto	l3249
  7461  085A                     l3241:
  7462  085A  3020               	movlw	32
  7463  085B  025B               	subwf	___fltol@exp1,w
  7464  085C  1C03               	skipc
  7465  085D  285F               	goto	u5071
  7466  085E  2860               	goto	u5070
  7467  085F                     u5071:
  7468  085F  286C               	goto	l604
  7469  0860                     u5070:
  7470  0860  2813               	goto	l3219
  7471  0861                     l3247:
  7472  0861  3001               	movlw	1
  7473  0862  00D5               	movwf	??___fltol
  7474  0863                     u5085:
  7475  0863  1003               	clrc
  7476  0864  0DD1               	rlf	___fltol@f1,f
  7477  0865  0DD2               	rlf	___fltol@f1+1,f
  7478  0866  0DD3               	rlf	___fltol@f1+2,f
  7479  0867  0DD4               	rlf	___fltol@f1+3,f
  7480  0868  0BD5               	decfsz	??___fltol,f
  7481  0869  2863               	goto	u5085
  7482  086A  3001               	movlw	1
  7483  086B  02DB               	subwf	___fltol@exp1,f
  7484  086C                     l604:
  7485  086C  085B               	movf	___fltol@exp1,w
  7486  086D  1D03               	btfss	3,2
  7487  086E  2870               	goto	u5091
  7488  086F  2871               	goto	u5090
  7489  0870                     u5091:
  7490  0870  2861               	goto	l3247
  7491  0871                     u5090:
  7492  0871                     l3249:
  7493  0871  085A               	movf	___fltol@sign1,w
  7494  0872  1903               	btfsc	3,2
  7495  0873  2875               	goto	u5101
  7496  0874  2876               	goto	u5100
  7497  0875                     u5101:
  7498  0875  2881               	goto	l607
  7499  0876                     u5100:
  7500  0876                     l3251:
  7501  0876  09D1               	comf	___fltol@f1,f
  7502  0877  09D2               	comf	___fltol@f1+1,f
  7503  0878  09D3               	comf	___fltol@f1+2,f
  7504  0879  09D4               	comf	___fltol@f1+3,f
  7505  087A  0AD1               	incf	___fltol@f1,f
  7506  087B  1903               	skipnz
  7507  087C  0AD2               	incf	___fltol@f1+1,f
  7508  087D  1903               	skipnz
  7509  087E  0AD3               	incf	___fltol@f1+2,f
  7510  087F  1903               	skipnz
  7511  0880  0AD4               	incf	___fltol@f1+3,f
  7512  0881                     l607:
  7513  0881                     l597:
  7514  0881  0008               	return
  7515  0882                     __end_of___fltol:
  7516                           
  7517                           	psect	text22
  7518  19E1                     __ptext22:	
  7519 ;; *************** function ___flsub *****************
  7520 ;; Defined at:
  7521 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;  a               4   70[BANK0 ] long 
  7524 ;;  b               4   74[BANK0 ] long 
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;		None
  7527 ;; Return value:  Size  Location     Type
  7528 ;;                  4   70[BANK0 ] long 
  7529 ;; Registers used:
  7530 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 0/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7536 ;;      Params:         0       8       0       0       0
  7537 ;;      Locals:         0       0       0       0       0
  7538 ;;      Temps:          0       0       0       0       0
  7539 ;;      Totals:         0       8       0       0       0
  7540 ;;Total ram usage:        8 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; Hardware stack levels required when called:    1
  7543 ;; This function calls:
  7544 ;;		___fladd
  7545 ;; This function is called by:
  7546 ;;		_sprintf
  7547 ;; This function uses a non-reentrant model
  7548 ;;
  7549                           
  7550                           
  7551                           ;psect for function ___flsub
  7552  19E1                     ___flsub:
  7553  19E1                     l3273:	
  7554                           ;incstack = 0
  7555                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7556                           
  7557  19E1  3080               	movlw	128
  7558  19E2  1283               	bcf	3,5	;RP0=0, select bank0
  7559  19E3  1303               	bcf	3,6	;RP1=0, select bank0
  7560  19E4  06E9               	xorwf	___flsub@a+3,f
  7561  19E5                     l3275:
  7562  19E5  086D               	movf	___flsub@b+3,w
  7563  19E6  00D5               	movwf	___fladd@b+3
  7564  19E7  086C               	movf	___flsub@b+2,w
  7565  19E8  00D4               	movwf	___fladd@b+2
  7566  19E9  086B               	movf	___flsub@b+1,w
  7567  19EA  00D3               	movwf	___fladd@b+1
  7568  19EB  086A               	movf	___flsub@b,w
  7569  19EC  00D2               	movwf	___fladd@b
  7570  19ED  0869               	movf	___flsub@a+3,w
  7571  19EE  00D9               	movwf	___fladd@a+3
  7572  19EF  0868               	movf	___flsub@a+2,w
  7573  19F0  00D8               	movwf	___fladd@a+2
  7574  19F1  0867               	movf	___flsub@a+1,w
  7575  19F2  00D7               	movwf	___fladd@a+1
  7576  19F3  0866               	movf	___flsub@a,w
  7577  19F4  00D6               	movwf	___fladd@a
  7578  19F5  160A  118A  2578  160A  158A  	fcall	___fladd
  7579  19FA  1283               	bcf	3,5	;RP0=0, select bank0
  7580  19FB  1303               	bcf	3,6	;RP1=0, select bank0
  7581  19FC  0855               	movf	?___fladd+3,w
  7582  19FD  00E9               	movwf	?___flsub+3
  7583  19FE  0854               	movf	?___fladd+2,w
  7584  19FF  00E8               	movwf	?___flsub+2
  7585  1A00  0853               	movf	?___fladd+1,w
  7586  1A01  00E7               	movwf	?___flsub+1
  7587  1A02  0852               	movf	?___fladd,w
  7588  1A03  00E6               	movwf	?___flsub
  7589  1A04                     l767:
  7590  1A04  0008               	return
  7591  1A05                     __end_of___flsub:
  7592                           
  7593                           	psect	text23
  7594  1578                     __ptext23:	
  7595 ;; *************** function ___fladd *****************
  7596 ;; Defined at:
  7597 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7598 ;; Parameters:    Size  Location     Type
  7599 ;;  b               4   50[BANK0 ] long 
  7600 ;;  a               4   54[BANK0 ] long 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;  grs             1   69[BANK0 ] unsigned char 
  7603 ;;  bexp            1   68[BANK0 ] unsigned char 
  7604 ;;  aexp            1   67[BANK0 ] unsigned char 
  7605 ;;  signs           1   66[BANK0 ] unsigned char 
  7606 ;; Return value:  Size  Location     Type
  7607 ;;                  4   50[BANK0 ] unsigned char 
  7608 ;; Registers used:
  7609 ;;		wreg, status,2, status,0, btemp+1
  7610 ;; Tracked objects:
  7611 ;;		On entry : 0/0
  7612 ;;		On exit  : 0/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7615 ;;      Params:         0       8       0       0       0
  7616 ;;      Locals:         0       4       0       0       0
  7617 ;;      Temps:          0       8       0       0       0
  7618 ;;      Totals:         0      20       0       0       0
  7619 ;;Total ram usage:       20 bytes
  7620 ;; Hardware stack levels used:    1
  7621 ;; This function calls:
  7622 ;;		Nothing
  7623 ;; This function is called by:
  7624 ;;		_sprintf
  7625 ;;		___flsub
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629                           
  7630                           ;psect for function ___fladd
  7631  1578                     ___fladd:
  7632  1578                     l2611:	
  7633                           ;incstack = 0
  7634                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7635                           
  7636  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7637  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7638  157A  0855               	movf	___fladd@b+3,w
  7639  157B  3980               	andlw	128
  7640  157C  00DA               	movwf	??___fladd
  7641  157D  085A               	movf	??___fladd,w
  7642  157E  00E2               	movwf	___fladd@signs
  7643  157F                     l2613:
  7644  157F  0855               	movf	___fladd@b+3,w
  7645  1580  00DA               	movwf	??___fladd
  7646  1581  075A               	addwf	??___fladd,w
  7647  1582  00DB               	movwf	??___fladd+1
  7648  1583  085B               	movf	??___fladd+1,w
  7649  1584  00E4               	movwf	___fladd@bexp
  7650  1585                     l2615:
  7651  1585  1FD4               	btfss	___fladd@b+2,7
  7652  1586  2D88               	goto	u3431
  7653  1587  2D89               	goto	u3430
  7654  1588                     u3431:
  7655  1588  2D8A               	goto	l2619
  7656  1589                     u3430:
  7657  1589                     l2617:
  7658  1589  1464               	bsf	___fladd@bexp,0
  7659  158A                     l2619:
  7660  158A  0864               	movf	___fladd@bexp,w
  7661  158B  1903               	btfsc	3,2
  7662  158C  2D8E               	goto	u3441
  7663  158D  2D8F               	goto	u3440
  7664  158E                     u3441:
  7665  158E  2D9F               	goto	l2629
  7666  158F                     u3440:
  7667  158F                     l2621:
  7668  158F  0A64               	incf	___fladd@bexp,w
  7669  1590  1D03               	btfss	3,2
  7670  1591  2D93               	goto	u3451
  7671  1592  2D94               	goto	u3450
  7672  1593                     u3451:
  7673  1593  2D9C               	goto	l2625
  7674  1594                     u3450:
  7675  1594                     l2623:
  7676  1594  3000               	movlw	0
  7677  1595  00D5               	movwf	___fladd@b+3
  7678  1596  3000               	movlw	0
  7679  1597  00D4               	movwf	___fladd@b+2
  7680  1598  3000               	movlw	0
  7681  1599  00D3               	movwf	___fladd@b+1
  7682  159A  3000               	movlw	0
  7683  159B  00D2               	movwf	___fladd@b
  7684  159C                     l2625:
  7685  159C  17D4               	bsf	___fladd@b+2,7
  7686  159D                     l2627:
  7687  159D  01D5               	clrf	___fladd@b+3
  7688  159E  2DA7               	goto	l2631
  7689  159F                     l2629:
  7690  159F  3000               	movlw	0
  7691  15A0  00D5               	movwf	___fladd@b+3
  7692  15A1  3000               	movlw	0
  7693  15A2  00D4               	movwf	___fladd@b+2
  7694  15A3  3000               	movlw	0
  7695  15A4  00D3               	movwf	___fladd@b+1
  7696  15A5  3000               	movlw	0
  7697  15A6  00D2               	movwf	___fladd@b
  7698  15A7                     l2631:
  7699  15A7  0859               	movf	___fladd@a+3,w
  7700  15A8  3980               	andlw	128
  7701  15A9  00DA               	movwf	??___fladd
  7702  15AA  085A               	movf	??___fladd,w
  7703  15AB  00E3               	movwf	___fladd@aexp
  7704  15AC                     l2633:
  7705  15AC  0863               	movf	___fladd@aexp,w
  7706  15AD  0662               	xorwf	___fladd@signs,w
  7707  15AE  1903               	skipnz
  7708  15AF  2DB1               	goto	u3461
  7709  15B0  2DB2               	goto	u3460
  7710  15B1                     u3461:
  7711  15B1  2DB3               	goto	l2637
  7712  15B2                     u3460:
  7713  15B2                     l2635:
  7714  15B2  1762               	bsf	___fladd@signs,6
  7715  15B3                     l2637:
  7716  15B3  0859               	movf	___fladd@a+3,w
  7717  15B4  00DA               	movwf	??___fladd
  7718  15B5  075A               	addwf	??___fladd,w
  7719  15B6  00DB               	movwf	??___fladd+1
  7720  15B7  085B               	movf	??___fladd+1,w
  7721  15B8  00E3               	movwf	___fladd@aexp
  7722  15B9                     l2639:
  7723  15B9  1FD8               	btfss	___fladd@a+2,7
  7724  15BA  2DBC               	goto	u3471
  7725  15BB  2DBD               	goto	u3470
  7726  15BC                     u3471:
  7727  15BC  2DBE               	goto	l2643
  7728  15BD                     u3470:
  7729  15BD                     l2641:
  7730  15BD  1463               	bsf	___fladd@aexp,0
  7731  15BE                     l2643:
  7732  15BE  0863               	movf	___fladd@aexp,w
  7733  15BF  1903               	btfsc	3,2
  7734  15C0  2DC2               	goto	u3481
  7735  15C1  2DC3               	goto	u3480
  7736  15C2                     u3481:
  7737  15C2  2DD3               	goto	l2653
  7738  15C3                     u3480:
  7739  15C3                     l2645:
  7740  15C3  0A63               	incf	___fladd@aexp,w
  7741  15C4  1D03               	btfss	3,2
  7742  15C5  2DC7               	goto	u3491
  7743  15C6  2DC8               	goto	u3490
  7744  15C7                     u3491:
  7745  15C7  2DD0               	goto	l2649
  7746  15C8                     u3490:
  7747  15C8                     l2647:
  7748  15C8  3000               	movlw	0
  7749  15C9  00D9               	movwf	___fladd@a+3
  7750  15CA  3000               	movlw	0
  7751  15CB  00D8               	movwf	___fladd@a+2
  7752  15CC  3000               	movlw	0
  7753  15CD  00D7               	movwf	___fladd@a+1
  7754  15CE  3000               	movlw	0
  7755  15CF  00D6               	movwf	___fladd@a
  7756  15D0                     l2649:
  7757  15D0  17D8               	bsf	___fladd@a+2,7
  7758  15D1                     l2651:
  7759  15D1  01D9               	clrf	___fladd@a+3
  7760  15D2  2DDB               	goto	l721
  7761  15D3                     l2653:
  7762  15D3  3000               	movlw	0
  7763  15D4  00D9               	movwf	___fladd@a+3
  7764  15D5  3000               	movlw	0
  7765  15D6  00D8               	movwf	___fladd@a+2
  7766  15D7  3000               	movlw	0
  7767  15D8  00D7               	movwf	___fladd@a+1
  7768  15D9  3000               	movlw	0
  7769  15DA  00D6               	movwf	___fladd@a
  7770  15DB                     l721:
  7771  15DB  0864               	movf	___fladd@bexp,w
  7772  15DC  0263               	subwf	___fladd@aexp,w
  7773  15DD  1803               	skipnc
  7774  15DE  2DE0               	goto	u3501
  7775  15DF  2DE1               	goto	u3500
  7776  15E0                     u3501:
  7777  15E0  2E25               	goto	l2689
  7778  15E1                     u3500:
  7779  15E1                     l2655:
  7780  15E1  1F62               	btfss	___fladd@signs,6
  7781  15E2  2DE4               	goto	u3511
  7782  15E3  2DE5               	goto	u3510
  7783  15E4                     u3511:
  7784  15E4  2DE9               	goto	l2659
  7785  15E5                     u3510:
  7786  15E5                     l2657:
  7787  15E5  3080               	movlw	128
  7788  15E6  00DA               	movwf	??___fladd
  7789  15E7  085A               	movf	??___fladd,w
  7790  15E8  06E2               	xorwf	___fladd@signs,f
  7791  15E9                     l2659:
  7792  15E9  0864               	movf	___fladd@bexp,w
  7793  15EA  00DA               	movwf	??___fladd
  7794  15EB  085A               	movf	??___fladd,w
  7795  15EC  00E5               	movwf	___fladd@grs
  7796  15ED                     l2661:
  7797  15ED  0863               	movf	___fladd@aexp,w
  7798  15EE  00DA               	movwf	??___fladd
  7799  15EF  085A               	movf	??___fladd,w
  7800  15F0  00E4               	movwf	___fladd@bexp
  7801  15F1                     l2663:
  7802  15F1  0865               	movf	___fladd@grs,w
  7803  15F2  00DA               	movwf	??___fladd
  7804  15F3  085A               	movf	??___fladd,w
  7805  15F4  00E3               	movwf	___fladd@aexp
  7806  15F5                     l2665:
  7807  15F5  0852               	movf	___fladd@b,w
  7808  15F6  00DA               	movwf	??___fladd
  7809  15F7  085A               	movf	??___fladd,w
  7810  15F8  00E5               	movwf	___fladd@grs
  7811  15F9                     l2667:
  7812  15F9  0856               	movf	___fladd@a,w
  7813  15FA  00DA               	movwf	??___fladd
  7814  15FB  085A               	movf	??___fladd,w
  7815  15FC  00D2               	movwf	___fladd@b
  7816  15FD                     l2669:
  7817  15FD  0865               	movf	___fladd@grs,w
  7818  15FE  00DA               	movwf	??___fladd
  7819  15FF  085A               	movf	??___fladd,w
  7820  1600  00D6               	movwf	___fladd@a
  7821  1601                     l2671:
  7822  1601  0853               	movf	___fladd@b+1,w
  7823  1602  00DA               	movwf	??___fladd
  7824  1603  085A               	movf	??___fladd,w
  7825  1604  00E5               	movwf	___fladd@grs
  7826  1605                     l2673:
  7827  1605  0857               	movf	___fladd@a+1,w
  7828  1606  00DA               	movwf	??___fladd
  7829  1607  085A               	movf	??___fladd,w
  7830  1608  00D3               	movwf	___fladd@b+1
  7831  1609                     l2675:
  7832  1609  0865               	movf	___fladd@grs,w
  7833  160A  00DA               	movwf	??___fladd
  7834  160B  085A               	movf	??___fladd,w
  7835  160C  00D7               	movwf	___fladd@a+1
  7836  160D                     l2677:
  7837  160D  0854               	movf	___fladd@b+2,w
  7838  160E  00DA               	movwf	??___fladd
  7839  160F  085A               	movf	??___fladd,w
  7840  1610  00E5               	movwf	___fladd@grs
  7841  1611                     l2679:
  7842  1611  0858               	movf	___fladd@a+2,w
  7843  1612  00DA               	movwf	??___fladd
  7844  1613  085A               	movf	??___fladd,w
  7845  1614  00D4               	movwf	___fladd@b+2
  7846  1615                     l2681:
  7847  1615  0865               	movf	___fladd@grs,w
  7848  1616  00DA               	movwf	??___fladd
  7849  1617  085A               	movf	??___fladd,w
  7850  1618  00D8               	movwf	___fladd@a+2
  7851  1619                     l2683:
  7852  1619  0855               	movf	___fladd@b+3,w
  7853  161A  00DA               	movwf	??___fladd
  7854  161B  085A               	movf	??___fladd,w
  7855  161C  00E5               	movwf	___fladd@grs
  7856  161D                     l2685:
  7857  161D  0859               	movf	___fladd@a+3,w
  7858  161E  00DA               	movwf	??___fladd
  7859  161F  085A               	movf	??___fladd,w
  7860  1620  00D5               	movwf	___fladd@b+3
  7861  1621                     l2687:
  7862  1621  0865               	movf	___fladd@grs,w
  7863  1622  00DA               	movwf	??___fladd
  7864  1623  085A               	movf	??___fladd,w
  7865  1624  00D9               	movwf	___fladd@a+3
  7866  1625                     l2689:
  7867  1625  01E5               	clrf	___fladd@grs
  7868  1626                     l2691:
  7869  1626  0863               	movf	___fladd@aexp,w
  7870  1627  00DA               	movwf	??___fladd
  7871  1628  01DB               	clrf	??___fladd+1
  7872  1629  085B               	movf	??___fladd+1,w
  7873  162A  00DD               	movwf	??___fladd+3
  7874  162B  0864               	movf	___fladd@bexp,w
  7875  162C  025A               	subwf	??___fladd,w
  7876  162D  00DC               	movwf	??___fladd+2
  7877  162E  1C03               	skipc
  7878  162F  03DD               	decf	??___fladd+3,f
  7879  1630  085D               	movf	??___fladd+3,w
  7880  1631  3A80               	xorlw	128
  7881  1632  00FF               	movwf	btemp+1
  7882  1633  3080               	movlw	128
  7883  1634  027F               	subwf	btemp+1,w
  7884  1635  1D03               	skipz
  7885  1636  2E39               	goto	u3525
  7886  1637  301A               	movlw	26
  7887  1638  025C               	subwf	??___fladd+2,w
  7888  1639                     u3525:
  7889  1639  1C03               	skipc
  7890  163A  2E3C               	goto	u3521
  7891  163B  2E3D               	goto	u3520
  7892  163C                     u3521:
  7893  163C  2E7A               	goto	l2707
  7894  163D                     u3520:
  7895  163D                     l2693:
  7896  163D  1283               	bcf	3,5	;RP0=0, select bank0
  7897  163E  1303               	bcf	3,6	;RP1=0, select bank0
  7898  163F  0855               	movf	___fladd@b+3,w
  7899  1640  0454               	iorwf	___fladd@b+2,w
  7900  1641  0453               	iorwf	___fladd@b+1,w
  7901  1642  0452               	iorwf	___fladd@b,w
  7902  1643  1D03               	skipz
  7903  1644  2E46               	goto	u3531
  7904  1645  2E48               	goto	u3530
  7905  1646                     u3531:
  7906  1646  3001               	movlw	1
  7907  1647  2E49               	goto	u3540
  7908  1648                     u3530:
  7909  1648  3000               	movlw	0
  7910  1649                     u3540:
  7911  1649  00DA               	movwf	??___fladd
  7912  164A  085A               	movf	??___fladd,w
  7913  164B  00E5               	movwf	___fladd@grs
  7914  164C  3000               	movlw	0
  7915  164D  00D5               	movwf	___fladd@b+3
  7916  164E  3000               	movlw	0
  7917  164F  00D4               	movwf	___fladd@b+2
  7918  1650  3000               	movlw	0
  7919  1651  00D3               	movwf	___fladd@b+1
  7920  1652  3000               	movlw	0
  7921  1653  00D2               	movwf	___fladd@b
  7922  1654  0863               	movf	___fladd@aexp,w
  7923  1655  00DA               	movwf	??___fladd
  7924  1656  085A               	movf	??___fladd,w
  7925  1657  00E4               	movwf	___fladd@bexp
  7926  1658  2E82               	goto	l725
  7927  1659                     l727:
  7928  1659  1C65               	btfss	___fladd@grs,0
  7929  165A  2E5C               	goto	u3551
  7930  165B  2E5D               	goto	u3550
  7931  165C                     u3551:
  7932  165C  2E66               	goto	l2697
  7933  165D                     u3550:
  7934  165D                     l2695:
  7935  165D  0865               	movf	___fladd@grs,w
  7936  165E  00DA               	movwf	??___fladd
  7937  165F  1003               	clrc
  7938  1660  0C5A               	rrf	??___fladd,w
  7939  1661  3801               	iorlw	1
  7940  1662  00DB               	movwf	??___fladd+1
  7941  1663  085B               	movf	??___fladd+1,w
  7942  1664  00E5               	movwf	___fladd@grs
  7943  1665  2E68               	goto	l2699
  7944  1666                     l2697:
  7945  1666  1003               	clrc
  7946  1667  0CE5               	rrf	___fladd@grs,f
  7947  1668                     l2699:
  7948  1668  1C52               	btfss	___fladd@b,0
  7949  1669  2E6B               	goto	u3561
  7950  166A  2E6C               	goto	u3560
  7951  166B                     u3561:
  7952  166B  2E6D               	goto	l2703
  7953  166C                     u3560:
  7954  166C                     l2701:
  7955  166C  17E5               	bsf	___fladd@grs,7
  7956  166D                     l2703:
  7957  166D  3001               	movlw	1
  7958  166E  00DA               	movwf	??___fladd
  7959  166F                     u3575:
  7960  166F  0D55               	rlf	___fladd@b+3,w
  7961  1670  0CD5               	rrf	___fladd@b+3,f
  7962  1671  0CD4               	rrf	___fladd@b+2,f
  7963  1672  0CD3               	rrf	___fladd@b+1,f
  7964  1673  0CD2               	rrf	___fladd@b,f
  7965  1674  0BDA               	decfsz	??___fladd& (0+127),f
  7966  1675  2E6F               	goto	u3575
  7967  1676                     l2705:
  7968  1676  3001               	movlw	1
  7969  1677  00DA               	movwf	??___fladd
  7970  1678  085A               	movf	??___fladd,w
  7971  1679  07E4               	addwf	___fladd@bexp,f
  7972  167A                     l2707:
  7973  167A  1283               	bcf	3,5	;RP0=0, select bank0
  7974  167B  1303               	bcf	3,6	;RP1=0, select bank0
  7975  167C  0863               	movf	___fladd@aexp,w
  7976  167D  0264               	subwf	___fladd@bexp,w
  7977  167E  1C03               	skipc
  7978  167F  2E81               	goto	u3581
  7979  1680  2E82               	goto	u3580
  7980  1681                     u3581:
  7981  1681  2E59               	goto	l727
  7982  1682                     u3580:
  7983  1682                     l725:
  7984  1682  1B62               	btfsc	___fladd@signs,6
  7985  1683  2E85               	goto	u3591
  7986  1684  2E86               	goto	u3590
  7987  1685                     u3591:
  7988  1685  2ED1               	goto	l2733
  7989  1686                     u3590:
  7990  1686                     l2709:
  7991  1686  0864               	movf	___fladd@bexp,w
  7992  1687  1D03               	btfss	3,2
  7993  1688  2E8A               	goto	u3601
  7994  1689  2E8B               	goto	u3600
  7995  168A                     u3601:
  7996  168A  2E94               	goto	l2715
  7997  168B                     u3600:
  7998  168B                     l2711:
  7999  168B  3000               	movlw	0
  8000  168C  00D5               	movwf	?___fladd+3
  8001  168D  3000               	movlw	0
  8002  168E  00D4               	movwf	?___fladd+2
  8003  168F  3000               	movlw	0
  8004  1690  00D3               	movwf	?___fladd+1
  8005  1691  3000               	movlw	0
  8006  1692  00D2               	movwf	?___fladd
  8007  1693  2FFF               	goto	l734
  8008  1694                     l2715:
  8009  1694  0856               	movf	___fladd@a,w
  8010  1695  07D2               	addwf	___fladd@b,f
  8011  1696  0857               	movf	___fladd@a+1,w
  8012  1697  1103               	clrz
  8013  1698  1803               	skipnc
  8014  1699  3E01               	addlw	1
  8015  169A  1903               	skipnz
  8016  169B  2E9D               	goto	u3611
  8017  169C  07D3               	addwf	___fladd@b+1,f
  8018  169D                     u3611:
  8019  169D  0858               	movf	___fladd@a+2,w
  8020  169E  1103               	clrz
  8021  169F  1803               	skipnc
  8022  16A0  3E01               	addlw	1
  8023  16A1  1903               	skipnz
  8024  16A2  2EA4               	goto	u3612
  8025  16A3  07D4               	addwf	___fladd@b+2,f
  8026  16A4                     u3612:
  8027  16A4  0859               	movf	___fladd@a+3,w
  8028  16A5  1103               	clrz
  8029  16A6  1803               	skipnc
  8030  16A7  3E01               	addlw	1
  8031  16A8  1903               	skipnz
  8032  16A9  2EAB               	goto	u3613
  8033  16AA  07D5               	addwf	___fladd@b+3,f
  8034  16AB                     u3613:
  8035  16AB                     l2717:
  8036  16AB  1C55               	btfss	___fladd@b+3,0
  8037  16AC  2EAE               	goto	u3621
  8038  16AD  2EAF               	goto	u3620
  8039  16AE                     u3621:
  8040  16AE  2F85               	goto	l2767
  8041  16AF                     u3620:
  8042  16AF                     l2719:
  8043  16AF  1C65               	btfss	___fladd@grs,0
  8044  16B0  2EB2               	goto	u3631
  8045  16B1  2EB3               	goto	u3630
  8046  16B2                     u3631:
  8047  16B2  2EBC               	goto	l2723
  8048  16B3                     u3630:
  8049  16B3                     l2721:
  8050  16B3  0865               	movf	___fladd@grs,w
  8051  16B4  00DA               	movwf	??___fladd
  8052  16B5  1003               	clrc
  8053  16B6  0C5A               	rrf	??___fladd,w
  8054  16B7  3801               	iorlw	1
  8055  16B8  00DB               	movwf	??___fladd+1
  8056  16B9  085B               	movf	??___fladd+1,w
  8057  16BA  00E5               	movwf	___fladd@grs
  8058  16BB  2EBE               	goto	l2725
  8059  16BC                     l2723:
  8060  16BC  1003               	clrc
  8061  16BD  0CE5               	rrf	___fladd@grs,f
  8062  16BE                     l2725:
  8063  16BE  1C52               	btfss	___fladd@b,0
  8064  16BF  2EC1               	goto	u3641
  8065  16C0  2EC2               	goto	u3640
  8066  16C1                     u3641:
  8067  16C1  2EC3               	goto	l2729
  8068  16C2                     u3640:
  8069  16C2                     l2727:
  8070  16C2  17E5               	bsf	___fladd@grs,7
  8071  16C3                     l2729:
  8072  16C3  3001               	movlw	1
  8073  16C4  00DA               	movwf	??___fladd
  8074  16C5                     u3655:
  8075  16C5  0D55               	rlf	___fladd@b+3,w
  8076  16C6  0CD5               	rrf	___fladd@b+3,f
  8077  16C7  0CD4               	rrf	___fladd@b+2,f
  8078  16C8  0CD3               	rrf	___fladd@b+1,f
  8079  16C9  0CD2               	rrf	___fladd@b,f
  8080  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  8081  16CB  2EC5               	goto	u3655
  8082  16CC                     l2731:
  8083  16CC  3001               	movlw	1
  8084  16CD  00DA               	movwf	??___fladd
  8085  16CE  085A               	movf	??___fladd,w
  8086  16CF  07E4               	addwf	___fladd@bexp,f
  8087  16D0  2F85               	goto	l2767
  8088  16D1                     l2733:
  8089  16D1  0855               	movf	___fladd@b+3,w
  8090  16D2  3A80               	xorlw	128
  8091  16D3  00FF               	movwf	btemp+1
  8092  16D4  0859               	movf	___fladd@a+3,w
  8093  16D5  3A80               	xorlw	128
  8094  16D6  027F               	subwf	btemp+1,w
  8095  16D7  1D03               	skipz
  8096  16D8  2EE3               	goto	u3663
  8097  16D9  0858               	movf	___fladd@a+2,w
  8098  16DA  0254               	subwf	___fladd@b+2,w
  8099  16DB  1D03               	skipz
  8100  16DC  2EE3               	goto	u3663
  8101  16DD  0857               	movf	___fladd@a+1,w
  8102  16DE  0253               	subwf	___fladd@b+1,w
  8103  16DF  1D03               	skipz
  8104  16E0  2EE3               	goto	u3663
  8105  16E1  0856               	movf	___fladd@a,w
  8106  16E2  0252               	subwf	___fladd@b,w
  8107  16E3                     u3663:
  8108  16E3  1803               	skipnc
  8109  16E4  2EE6               	goto	u3661
  8110  16E5  2EE7               	goto	u3660
  8111  16E6                     u3661:
  8112  16E6  2F3F               	goto	l2743
  8113  16E7                     u3660:
  8114  16E7                     l2735:
  8115  16E7  30FF               	movlw	255
  8116  16E8  00DA               	movwf	??___fladd
  8117  16E9  30FF               	movlw	255
  8118  16EA  00DB               	movwf	??___fladd+1
  8119  16EB  30FF               	movlw	255
  8120  16EC  00DC               	movwf	??___fladd+2
  8121  16ED  30FF               	movlw	255
  8122  16EE  00DD               	movwf	??___fladd+3
  8123  16EF  0856               	movf	___fladd@a,w
  8124  16F0  00DE               	movwf	??___fladd+4
  8125  16F1  0857               	movf	___fladd@a+1,w
  8126  16F2  00DF               	movwf	??___fladd+5
  8127  16F3  0858               	movf	___fladd@a+2,w
  8128  16F4  00E0               	movwf	??___fladd+6
  8129  16F5  0859               	movf	___fladd@a+3,w
  8130  16F6  00E1               	movwf	??___fladd+7
  8131  16F7  0852               	movf	___fladd@b,w
  8132  16F8  02DE               	subwf	??___fladd+4,f
  8133  16F9  0853               	movf	___fladd@b+1,w
  8134  16FA  1C03               	skipc
  8135  16FB  0F53               	incfsz	___fladd@b+1,w
  8136  16FC  2EFE               	goto	u3671
  8137  16FD  2EFF               	goto	u3672
  8138  16FE                     u3671:
  8139  16FE  02DF               	subwf	??___fladd+5,f
  8140  16FF                     u3672:
  8141  16FF  0854               	movf	___fladd@b+2,w
  8142  1700  1C03               	skipc
  8143  1701  0F54               	incfsz	___fladd@b+2,w
  8144  1702  2F04               	goto	u3673
  8145  1703  2F05               	goto	u3674
  8146  1704                     u3673:
  8147  1704  02E0               	subwf	??___fladd+6,f
  8148  1705                     u3674:
  8149  1705  0855               	movf	___fladd@b+3,w
  8150  1706  1C03               	skipc
  8151  1707  0F55               	incfsz	___fladd@b+3,w
  8152  1708  2F0A               	goto	u3675
  8153  1709  2F0B               	goto	u3676
  8154  170A                     u3675:
  8155  170A  02E1               	subwf	??___fladd+7,f
  8156  170B                     u3676:
  8157  170B  085E               	movf	??___fladd+4,w
  8158  170C  07DA               	addwf	??___fladd,f
  8159  170D  085F               	movf	??___fladd+5,w
  8160  170E  1803               	skipnc
  8161  170F  0F5F               	incfsz	??___fladd+5,w
  8162  1710  2F12               	goto	u3680
  8163  1711  2F13               	goto	u3681
  8164  1712                     u3680:
  8165  1712  07DB               	addwf	??___fladd+1,f
  8166  1713                     u3681:
  8167  1713  0860               	movf	??___fladd+6,w
  8168  1714  1803               	skipnc
  8169  1715  0F60               	incfsz	??___fladd+6,w
  8170  1716  2F18               	goto	u3682
  8171  1717  2F19               	goto	u3683
  8172  1718                     u3682:
  8173  1718  07DC               	addwf	??___fladd+2,f
  8174  1719                     u3683:
  8175  1719  0861               	movf	??___fladd+7,w
  8176  171A  1803               	skipnc
  8177  171B  0A61               	incf	??___fladd+7,w
  8178  171C  07DD               	addwf	??___fladd+3,f
  8179  171D  085D               	movf	??___fladd+3,w
  8180  171E  00D5               	movwf	___fladd@b+3
  8181  171F  085C               	movf	??___fladd+2,w
  8182  1720  00D4               	movwf	___fladd@b+2
  8183  1721  085B               	movf	??___fladd+1,w
  8184  1722  00D3               	movwf	___fladd@b+1
  8185  1723  085A               	movf	??___fladd,w
  8186  1724  00D2               	movwf	___fladd@b
  8187  1725                     l2737:
  8188  1725  3080               	movlw	128
  8189  1726  00DA               	movwf	??___fladd
  8190  1727  085A               	movf	??___fladd,w
  8191  1728  06E2               	xorwf	___fladd@signs,f
  8192  1729  09E5               	comf	___fladd@grs,f
  8193  172A  0AE5               	incf	___fladd@grs,f
  8194  172B                     l2739:
  8195  172B  0865               	movf	___fladd@grs,w
  8196  172C  1D03               	btfss	3,2
  8197  172D  2F2F               	goto	u3691
  8198  172E  2F30               	goto	u3690
  8199  172F                     u3691:
  8200  172F  2F4D               	goto	l742
  8201  1730                     u3690:
  8202  1730                     l2741:
  8203  1730  3001               	movlw	1
  8204  1731  07D2               	addwf	___fladd@b,f
  8205  1732  3000               	movlw	0
  8206  1733  1803               	skipnc
  8207  1734  3001               	movlw	1
  8208  1735  07D3               	addwf	___fladd@b+1,f
  8209  1736  3000               	movlw	0
  8210  1737  1803               	skipnc
  8211  1738  3001               	movlw	1
  8212  1739  07D4               	addwf	___fladd@b+2,f
  8213  173A  3000               	movlw	0
  8214  173B  1803               	skipnc
  8215  173C  3001               	movlw	1
  8216  173D  07D5               	addwf	___fladd@b+3,f
  8217  173E  2F4D               	goto	l742
  8218  173F                     l2743:
  8219  173F  0856               	movf	___fladd@a,w
  8220  1740  02D2               	subwf	___fladd@b,f
  8221  1741  0857               	movf	___fladd@a+1,w
  8222  1742  1C03               	skipc
  8223  1743  0F57               	incfsz	___fladd@a+1,w
  8224  1744  02D3               	subwf	___fladd@b+1,f
  8225  1745  0858               	movf	___fladd@a+2,w
  8226  1746  1C03               	skipc
  8227  1747  0F58               	incfsz	___fladd@a+2,w
  8228  1748  02D4               	subwf	___fladd@b+2,f
  8229  1749  0859               	movf	___fladd@a+3,w
  8230  174A  1C03               	skipc
  8231  174B  0F59               	incfsz	___fladd@a+3,w
  8232  174C  02D5               	subwf	___fladd@b+3,f
  8233  174D                     l742:
  8234  174D  0855               	movf	___fladd@b+3,w
  8235  174E  0454               	iorwf	___fladd@b+2,w
  8236  174F  0453               	iorwf	___fladd@b+1,w
  8237  1750  0452               	iorwf	___fladd@b,w
  8238  1751  1D03               	skipz
  8239  1752  2F54               	goto	u3701
  8240  1753  2F55               	goto	u3700
  8241  1754                     u3701:
  8242  1754  2F81               	goto	l2765
  8243  1755                     u3700:
  8244  1755                     l2745:
  8245  1755  0865               	movf	___fladd@grs,w
  8246  1756  1D03               	btfss	3,2
  8247  1757  2F59               	goto	u3711
  8248  1758  2F5A               	goto	u3710
  8249  1759                     u3711:
  8250  1759  2F81               	goto	l2765
  8251  175A                     u3710:
  8252  175A                     l2747:
  8253  175A  3000               	movlw	0
  8254  175B  00D5               	movwf	?___fladd+3
  8255  175C  3000               	movlw	0
  8256  175D  00D4               	movwf	?___fladd+2
  8257  175E  3000               	movlw	0
  8258  175F  00D3               	movwf	?___fladd+1
  8259  1760  3000               	movlw	0
  8260  1761  00D2               	movwf	?___fladd
  8261  1762  2FFF               	goto	l734
  8262  1763                     l2751:
  8263  1763  3001               	movlw	1
  8264  1764  00DA               	movwf	??___fladd
  8265  1765                     u3725:
  8266  1765  1003               	clrc
  8267  1766  0DD2               	rlf	___fladd@b,f
  8268  1767  0DD3               	rlf	___fladd@b+1,f
  8269  1768  0DD4               	rlf	___fladd@b+2,f
  8270  1769  0DD5               	rlf	___fladd@b+3,f
  8271  176A  0BDA               	decfsz	??___fladd,f
  8272  176B  2F65               	goto	u3725
  8273  176C                     l2753:
  8274  176C  1FE5               	btfss	___fladd@grs,7
  8275  176D  2F6F               	goto	u3731
  8276  176E  2F70               	goto	u3730
  8277  176F                     u3731:
  8278  176F  2F71               	goto	l746
  8279  1770                     u3730:
  8280  1770                     l2755:
  8281  1770  1452               	bsf	___fladd@b,0
  8282  1771                     l746:
  8283  1771  1C65               	btfss	___fladd@grs,0
  8284  1772  2F74               	goto	u3741
  8285  1773  2F75               	goto	u3740
  8286  1774                     u3741:
  8287  1774  2F78               	goto	l2759
  8288  1775                     u3740:
  8289  1775                     l2757:
  8290  1775  1403               	setc
  8291  1776  0DE5               	rlf	___fladd@grs,f
  8292  1777  2F7A               	goto	l2761
  8293  1778                     l2759:
  8294  1778  1003               	clrc
  8295  1779  0DE5               	rlf	___fladd@grs,f
  8296  177A                     l2761:
  8297  177A  0864               	movf	___fladd@bexp,w
  8298  177B  1903               	btfsc	3,2
  8299  177C  2F7E               	goto	u3751
  8300  177D  2F7F               	goto	u3750
  8301  177E                     u3751:
  8302  177E  2F81               	goto	l2765
  8303  177F                     u3750:
  8304  177F                     l2763:
  8305  177F  3001               	movlw	1
  8306  1780  02E4               	subwf	___fladd@bexp,f
  8307  1781                     l2765:
  8308  1781  1FD4               	btfss	___fladd@b+2,7
  8309  1782  2F84               	goto	u3761
  8310  1783  2F85               	goto	u3760
  8311  1784                     u3761:
  8312  1784  2F63               	goto	l2751
  8313  1785                     u3760:
  8314  1785                     l2767:
  8315  1785  01E3               	clrf	___fladd@aexp
  8316  1786                     l2769:
  8317  1786  1FE5               	btfss	___fladd@grs,7
  8318  1787  2F89               	goto	u3771
  8319  1788  2F8A               	goto	u3770
  8320  1789                     u3771:
  8321  1789  2F98               	goto	l2777
  8322  178A                     u3770:
  8323  178A                     l2771:
  8324  178A  0865               	movf	___fladd@grs,w
  8325  178B  397F               	andlw	127
  8326  178C  1903               	btfsc	3,2
  8327  178D  2F8F               	goto	u3781
  8328  178E  2F90               	goto	u3780
  8329  178F                     u3781:
  8330  178F  2F93               	goto	l752
  8331  1790                     u3780:
  8332  1790                     l2773:
  8333  1790  01E3               	clrf	___fladd@aexp
  8334  1791  0AE3               	incf	___fladd@aexp,f
  8335  1792  2F98               	goto	l2777
  8336  1793                     l752:
  8337  1793  1C52               	btfss	___fladd@b,0
  8338  1794  2F96               	goto	u3791
  8339  1795  2F97               	goto	u3790
  8340  1796                     u3791:
  8341  1796  2F98               	goto	l2777
  8342  1797                     u3790:
  8343  1797  2F90               	goto	l2773
  8344  1798                     l2777:
  8345  1798  0863               	movf	___fladd@aexp,w
  8346  1799  1903               	btfsc	3,2
  8347  179A  2F9C               	goto	u3801
  8348  179B  2F9D               	goto	u3800
  8349  179C                     u3801:
  8350  179C  2FD1               	goto	l755
  8351  179D                     u3800:
  8352  179D                     l2779:
  8353  179D  3001               	movlw	1
  8354  179E  07D2               	addwf	___fladd@b,f
  8355  179F  3000               	movlw	0
  8356  17A0  1803               	skipnc
  8357  17A1  3001               	movlw	1
  8358  17A2  07D3               	addwf	___fladd@b+1,f
  8359  17A3  3000               	movlw	0
  8360  17A4  1803               	skipnc
  8361  17A5  3001               	movlw	1
  8362  17A6  07D4               	addwf	___fladd@b+2,f
  8363  17A7  3000               	movlw	0
  8364  17A8  1803               	skipnc
  8365  17A9  3001               	movlw	1
  8366  17AA  07D5               	addwf	___fladd@b+3,f
  8367  17AB                     l2781:
  8368  17AB  1C55               	btfss	___fladd@b+3,0
  8369  17AC  2FAE               	goto	u3811
  8370  17AD  2FAF               	goto	u3810
  8371  17AE                     u3811:
  8372  17AE  2FD1               	goto	l755
  8373  17AF                     u3810:
  8374  17AF                     l2783:
  8375  17AF  0852               	movf	___fladd@b,w
  8376  17B0  00DA               	movwf	??___fladd
  8377  17B1  0853               	movf	___fladd@b+1,w
  8378  17B2  00DB               	movwf	??___fladd+1
  8379  17B3  0854               	movf	___fladd@b+2,w
  8380  17B4  00DC               	movwf	??___fladd+2
  8381  17B5  0855               	movf	___fladd@b+3,w
  8382  17B6  00DD               	movwf	??___fladd+3
  8383  17B7  3001               	movlw	1
  8384  17B8  00DE               	movwf	??___fladd+4
  8385  17B9                     u3825:
  8386  17B9  0D5D               	rlf	??___fladd+3,w
  8387  17BA  0CDD               	rrf	??___fladd+3,f
  8388  17BB  0CDC               	rrf	??___fladd+2,f
  8389  17BC  0CDB               	rrf	??___fladd+1,f
  8390  17BD  0CDA               	rrf	??___fladd,f
  8391  17BE                     u3820:
  8392  17BE  0BDE               	decfsz	??___fladd+4,f
  8393  17BF  2FB9               	goto	u3825
  8394  17C0  085D               	movf	??___fladd+3,w
  8395  17C1  00D5               	movwf	___fladd@b+3
  8396  17C2  085C               	movf	??___fladd+2,w
  8397  17C3  00D4               	movwf	___fladd@b+2
  8398  17C4  085B               	movf	??___fladd+1,w
  8399  17C5  00D3               	movwf	___fladd@b+1
  8400  17C6  085A               	movf	??___fladd,w
  8401  17C7  00D2               	movwf	___fladd@b
  8402  17C8  0A64               	incf	___fladd@bexp,w
  8403  17C9  1903               	btfsc	3,2
  8404  17CA  2FCC               	goto	u3831
  8405  17CB  2FCD               	goto	u3830
  8406  17CC                     u3831:
  8407  17CC  2FD1               	goto	l755
  8408  17CD                     u3830:
  8409  17CD                     l2785:
  8410  17CD  3001               	movlw	1
  8411  17CE  00DA               	movwf	??___fladd
  8412  17CF  085A               	movf	??___fladd,w
  8413  17D0  07E4               	addwf	___fladd@bexp,f
  8414  17D1                     l755:
  8415  17D1  0A64               	incf	___fladd@bexp,w
  8416  17D2  1903               	btfsc	3,2
  8417  17D3  2FD5               	goto	u3841
  8418  17D4  2FD6               	goto	u3840
  8419  17D5                     u3841:
  8420  17D5  2FDB               	goto	l2789
  8421  17D6                     u3840:
  8422  17D6                     l2787:
  8423  17D6  0864               	movf	___fladd@bexp,w
  8424  17D7  1D03               	btfss	3,2
  8425  17D8  2FDA               	goto	u3851
  8426  17D9  2FDB               	goto	u3850
  8427  17DA                     u3851:
  8428  17DA  2FE9               	goto	l2795
  8429  17DB                     u3850:
  8430  17DB                     l2789:
  8431  17DB  3000               	movlw	0
  8432  17DC  00D5               	movwf	___fladd@b+3
  8433  17DD  3000               	movlw	0
  8434  17DE  00D4               	movwf	___fladd@b+2
  8435  17DF  3000               	movlw	0
  8436  17E0  00D3               	movwf	___fladd@b+1
  8437  17E1  3000               	movlw	0
  8438  17E2  00D2               	movwf	___fladd@b
  8439  17E3                     l2791:
  8440  17E3  0864               	movf	___fladd@bexp,w
  8441  17E4  1D03               	btfss	3,2
  8442  17E5  2FE7               	goto	u3861
  8443  17E6  2FE8               	goto	u3860
  8444  17E7                     u3861:
  8445  17E7  2FE9               	goto	l2795
  8446  17E8                     u3860:
  8447  17E8                     l2793:
  8448  17E8  01E2               	clrf	___fladd@signs
  8449  17E9                     l2795:
  8450  17E9  1C64               	btfss	___fladd@bexp,0
  8451  17EA  2FEC               	goto	u3871
  8452  17EB  2FED               	goto	u3870
  8453  17EC                     u3871:
  8454  17EC  2FEF               	goto	l2799
  8455  17ED                     u3870:
  8456  17ED                     l2797:
  8457  17ED  17D4               	bsf	___fladd@b+2,7
  8458  17EE  2FF3               	goto	l763
  8459  17EF                     l2799:
  8460  17EF  307F               	movlw	127
  8461  17F0  00DA               	movwf	??___fladd
  8462  17F1  085A               	movf	??___fladd,w
  8463  17F2  05D4               	andwf	___fladd@b+2,f
  8464  17F3                     l763:
  8465  17F3  0864               	movf	___fladd@bexp,w
  8466  17F4  00DA               	movwf	??___fladd
  8467  17F5  1003               	clrc
  8468  17F6  0C5A               	rrf	??___fladd,w
  8469  17F7  00DB               	movwf	??___fladd+1
  8470  17F8  085B               	movf	??___fladd+1,w
  8471  17F9  00D5               	movwf	___fladd@b+3
  8472  17FA                     l2801:
  8473  17FA  1FE2               	btfss	___fladd@signs,7
  8474  17FB  2FFD               	goto	u3881
  8475  17FC  2FFE               	goto	u3880
  8476  17FD                     u3881:
  8477  17FD  2FFF               	goto	l764
  8478  17FE                     u3880:
  8479  17FE                     l2803:
  8480  17FE  17D5               	bsf	___fladd@b+3,7
  8481  17FF                     l764:
  8482  17FF                     l734:
  8483  17FF  0008               	return
  8484  1800                     __end_of___fladd:
  8485                           
  8486                           	psect	text24
  8487  1970                     __ptext24:	
  8488 ;; *************** function ___flneg *****************
  8489 ;; Defined at:
  8490 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8491 ;; Parameters:    Size  Location     Type
  8492 ;;  f1              4    0[COMMON] unsigned char 
  8493 ;; Auto vars:     Size  Location     Type
  8494 ;;		None
  8495 ;; Return value:  Size  Location     Type
  8496 ;;                  4    0[COMMON] unsigned char 
  8497 ;; Registers used:
  8498 ;;		wreg
  8499 ;; Tracked objects:
  8500 ;;		On entry : 0/0
  8501 ;;		On exit  : 0/0
  8502 ;;		Unchanged: 0/0
  8503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8504 ;;      Params:         4       0       0       0       0
  8505 ;;      Locals:         0       0       0       0       0
  8506 ;;      Temps:          0       0       0       0       0
  8507 ;;      Totals:         4       0       0       0       0
  8508 ;;Total ram usage:        4 bytes
  8509 ;; Hardware stack levels used:    1
  8510 ;; This function calls:
  8511 ;;		Nothing
  8512 ;; This function is called by:
  8513 ;;		_sprintf
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           
  8518                           ;psect for function ___flneg
  8519  1970                     ___flneg:
  8520  1970                     l3209:	
  8521                           ;incstack = 0
  8522                           ; Regs used in ___flneg: [wreg]
  8523                           
  8524  1970  0873               	movf	___flneg@f1+3,w
  8525  1971  0472               	iorwf	___flneg@f1+2,w
  8526  1972  0471               	iorwf	___flneg@f1+1,w
  8527  1973  0470               	iorwf	___flneg@f1,w
  8528  1974  1903               	skipnz
  8529  1975  2977               	goto	u5001
  8530  1976  2978               	goto	u5000
  8531  1977                     u5001:
  8532  1977  297A               	goto	l3213
  8533  1978                     u5000:
  8534  1978                     l3211:
  8535  1978  3080               	movlw	128
  8536  1979  06F3               	xorwf	___flneg@f1+3,f
  8537  197A                     l3213:
  8538  197A                     l593:
  8539  197A  0008               	return
  8540  197B                     __end_of___flneg:
  8541                           
  8542                           	psect	text25
  8543  1EA4                     __ptext25:	
  8544 ;; *************** function ___flge *****************
  8545 ;; Defined at:
  8546 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8547 ;; Parameters:    Size  Location     Type
  8548 ;;  ff1             4    0[COMMON] unsigned char 
  8549 ;;  ff2             4    4[COMMON] unsigned char 
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;		None
  8552 ;; Return value:  Size  Location     Type
  8553 ;;		None               void
  8554 ;; Registers used:
  8555 ;;		wreg, status,2, status,0
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8561 ;;      Params:         8       0       0       0       0
  8562 ;;      Locals:         0       0       0       0       0
  8563 ;;      Temps:          4       0       0       0       0
  8564 ;;      Totals:        12       0       0       0       0
  8565 ;;Total ram usage:       12 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; This function calls:
  8568 ;;		Nothing
  8569 ;; This function is called by:
  8570 ;;		_sprintf
  8571 ;; This function uses a non-reentrant model
  8572 ;;
  8573                           
  8574                           
  8575                           ;psect for function ___flge
  8576  1EA4                     ___flge:
  8577  1EA4                     l3189:	
  8578                           ;incstack = 0
  8579                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8580                           
  8581  1EA4  3000               	movlw	0
  8582  1EA5  0570               	andwf	___flge@ff1,w
  8583  1EA6  00F8               	movwf	??___flge
  8584  1EA7  3000               	movlw	0
  8585  1EA8  0571               	andwf	___flge@ff1+1,w
  8586  1EA9  00F9               	movwf	??___flge+1
  8587  1EAA  3080               	movlw	128
  8588  1EAB  0572               	andwf	___flge@ff1+2,w
  8589  1EAC  00FA               	movwf	??___flge+2
  8590  1EAD  307F               	movlw	127
  8591  1EAE  0573               	andwf	___flge@ff1+3,w
  8592  1EAF  00FB               	movwf	??___flge+3
  8593  1EB0  087B               	movf	??___flge+3,w
  8594  1EB1  047A               	iorwf	??___flge+2,w
  8595  1EB2  0479               	iorwf	??___flge+1,w
  8596  1EB3  0478               	iorwf	??___flge,w
  8597  1EB4  1D03               	skipz
  8598  1EB5  2EB7               	goto	u4931
  8599  1EB6  2EB8               	goto	u4930
  8600  1EB7                     u4931:
  8601  1EB7  2EC0               	goto	l585
  8602  1EB8                     u4930:
  8603  1EB8                     l3191:
  8604  1EB8  3000               	movlw	0
  8605  1EB9  00F3               	movwf	___flge@ff1+3
  8606  1EBA  3000               	movlw	0
  8607  1EBB  00F2               	movwf	___flge@ff1+2
  8608  1EBC  3000               	movlw	0
  8609  1EBD  00F1               	movwf	___flge@ff1+1
  8610  1EBE  3000               	movlw	0
  8611  1EBF  00F0               	movwf	___flge@ff1
  8612  1EC0                     l585:
  8613  1EC0  3000               	movlw	0
  8614  1EC1  0574               	andwf	___flge@ff2,w
  8615  1EC2  00F8               	movwf	??___flge
  8616  1EC3  3000               	movlw	0
  8617  1EC4  0575               	andwf	___flge@ff2+1,w
  8618  1EC5  00F9               	movwf	??___flge+1
  8619  1EC6  3080               	movlw	128
  8620  1EC7  0576               	andwf	___flge@ff2+2,w
  8621  1EC8  00FA               	movwf	??___flge+2
  8622  1EC9  307F               	movlw	127
  8623  1ECA  0577               	andwf	___flge@ff2+3,w
  8624  1ECB  00FB               	movwf	??___flge+3
  8625  1ECC  087B               	movf	??___flge+3,w
  8626  1ECD  047A               	iorwf	??___flge+2,w
  8627  1ECE  0479               	iorwf	??___flge+1,w
  8628  1ECF  0478               	iorwf	??___flge,w
  8629  1ED0  1D03               	skipz
  8630  1ED1  2ED3               	goto	u4941
  8631  1ED2  2ED4               	goto	u4940
  8632  1ED3                     u4941:
  8633  1ED3  2EDC               	goto	l3195
  8634  1ED4                     u4940:
  8635  1ED4                     l3193:
  8636  1ED4  3000               	movlw	0
  8637  1ED5  00F7               	movwf	___flge@ff2+3
  8638  1ED6  3000               	movlw	0
  8639  1ED7  00F6               	movwf	___flge@ff2+2
  8640  1ED8  3000               	movlw	0
  8641  1ED9  00F5               	movwf	___flge@ff2+1
  8642  1EDA  3000               	movlw	0
  8643  1EDB  00F4               	movwf	___flge@ff2
  8644  1EDC                     l3195:
  8645  1EDC  1FF3               	btfss	___flge@ff1+3,7
  8646  1EDD  2EDF               	goto	u4951
  8647  1EDE  2EE0               	goto	u4950
  8648  1EDF                     u4951:
  8649  1EDF  2F04               	goto	l3199
  8650  1EE0                     u4950:
  8651  1EE0                     l3197:
  8652  1EE0  3000               	movlw	0
  8653  1EE1  00F8               	movwf	??___flge
  8654  1EE2  3000               	movlw	0
  8655  1EE3  00F9               	movwf	??___flge+1
  8656  1EE4  3000               	movlw	0
  8657  1EE5  00FA               	movwf	??___flge+2
  8658  1EE6  3080               	movlw	128
  8659  1EE7  00FB               	movwf	??___flge+3
  8660  1EE8  0870               	movf	___flge@ff1,w
  8661  1EE9  02F8               	subwf	??___flge,f
  8662  1EEA  0871               	movf	___flge@ff1+1,w
  8663  1EEB  1C03               	skipc
  8664  1EEC  0F71               	incfsz	___flge@ff1+1,w
  8665  1EED  2EEF               	goto	u4961
  8666  1EEE  2EF0               	goto	u4962
  8667  1EEF                     u4961:
  8668  1EEF  02F9               	subwf	??___flge+1,f
  8669  1EF0                     u4962:
  8670  1EF0  0872               	movf	___flge@ff1+2,w
  8671  1EF1  1C03               	skipc
  8672  1EF2  0F72               	incfsz	___flge@ff1+2,w
  8673  1EF3  2EF5               	goto	u4963
  8674  1EF4  2EF6               	goto	u4964
  8675  1EF5                     u4963:
  8676  1EF5  02FA               	subwf	??___flge+2,f
  8677  1EF6                     u4964:
  8678  1EF6  0873               	movf	___flge@ff1+3,w
  8679  1EF7  1C03               	skipc
  8680  1EF8  0F73               	incfsz	___flge@ff1+3,w
  8681  1EF9  2EFB               	goto	u4965
  8682  1EFA  2EFC               	goto	u4966
  8683  1EFB                     u4965:
  8684  1EFB  02FB               	subwf	??___flge+3,f
  8685  1EFC                     u4966:
  8686  1EFC  087B               	movf	??___flge+3,w
  8687  1EFD  00F3               	movwf	___flge@ff1+3
  8688  1EFE  087A               	movf	??___flge+2,w
  8689  1EFF  00F2               	movwf	___flge@ff1+2
  8690  1F00  0879               	movf	??___flge+1,w
  8691  1F01  00F1               	movwf	___flge@ff1+1
  8692  1F02  0878               	movf	??___flge,w
  8693  1F03  00F0               	movwf	___flge@ff1
  8694  1F04                     l3199:
  8695  1F04  1FF7               	btfss	___flge@ff2+3,7
  8696  1F05  2F07               	goto	u4971
  8697  1F06  2F08               	goto	u4970
  8698  1F07                     u4971:
  8699  1F07  2F2C               	goto	l588
  8700  1F08                     u4970:
  8701  1F08                     l3201:
  8702  1F08  3000               	movlw	0
  8703  1F09  00F8               	movwf	??___flge
  8704  1F0A  3000               	movlw	0
  8705  1F0B  00F9               	movwf	??___flge+1
  8706  1F0C  3000               	movlw	0
  8707  1F0D  00FA               	movwf	??___flge+2
  8708  1F0E  3080               	movlw	128
  8709  1F0F  00FB               	movwf	??___flge+3
  8710  1F10  0874               	movf	___flge@ff2,w
  8711  1F11  02F8               	subwf	??___flge,f
  8712  1F12  0875               	movf	___flge@ff2+1,w
  8713  1F13  1C03               	skipc
  8714  1F14  0F75               	incfsz	___flge@ff2+1,w
  8715  1F15  2F17               	goto	u4981
  8716  1F16  2F18               	goto	u4982
  8717  1F17                     u4981:
  8718  1F17  02F9               	subwf	??___flge+1,f
  8719  1F18                     u4982:
  8720  1F18  0876               	movf	___flge@ff2+2,w
  8721  1F19  1C03               	skipc
  8722  1F1A  0F76               	incfsz	___flge@ff2+2,w
  8723  1F1B  2F1D               	goto	u4983
  8724  1F1C  2F1E               	goto	u4984
  8725  1F1D                     u4983:
  8726  1F1D  02FA               	subwf	??___flge+2,f
  8727  1F1E                     u4984:
  8728  1F1E  0877               	movf	___flge@ff2+3,w
  8729  1F1F  1C03               	skipc
  8730  1F20  0F77               	incfsz	___flge@ff2+3,w
  8731  1F21  2F23               	goto	u4985
  8732  1F22  2F24               	goto	u4986
  8733  1F23                     u4985:
  8734  1F23  02FB               	subwf	??___flge+3,f
  8735  1F24                     u4986:
  8736  1F24  087B               	movf	??___flge+3,w
  8737  1F25  00F7               	movwf	___flge@ff2+3
  8738  1F26  087A               	movf	??___flge+2,w
  8739  1F27  00F6               	movwf	___flge@ff2+2
  8740  1F28  0879               	movf	??___flge+1,w
  8741  1F29  00F5               	movwf	___flge@ff2+1
  8742  1F2A  0878               	movf	??___flge,w
  8743  1F2B  00F4               	movwf	___flge@ff2
  8744  1F2C                     l588:
  8745  1F2C  3080               	movlw	128
  8746  1F2D  06F3               	xorwf	___flge@ff1+3,f
  8747  1F2E  3080               	movlw	128
  8748  1F2F  06F7               	xorwf	___flge@ff2+3,f
  8749  1F30  0877               	movf	___flge@ff2+3,w
  8750  1F31  0273               	subwf	___flge@ff1+3,w
  8751  1F32  1D03               	skipz
  8752  1F33  2F3E               	goto	u4995
  8753  1F34  0876               	movf	___flge@ff2+2,w
  8754  1F35  0272               	subwf	___flge@ff1+2,w
  8755  1F36  1D03               	skipz
  8756  1F37  2F3E               	goto	u4995
  8757  1F38  0875               	movf	___flge@ff2+1,w
  8758  1F39  0271               	subwf	___flge@ff1+1,w
  8759  1F3A  1D03               	skipz
  8760  1F3B  2F3E               	goto	u4995
  8761  1F3C  0874               	movf	___flge@ff2,w
  8762  1F3D  0270               	subwf	___flge@ff1,w
  8763  1F3E                     u4995:
  8764  1F3E  1803               	skipnc
  8765  1F3F  2F41               	goto	u4991
  8766  1F40  2F42               	goto	u4990
  8767  1F41                     u4991:
  8768  1F41  2F44               	goto	l3205
  8769  1F42                     u4990:
  8770  1F42                     l3203:
  8771  1F42  1003               	clrc
  8772  1F43  2F45               	goto	l589
  8773  1F44                     l3205:
  8774  1F44  1403               	setc
  8775  1F45                     l589:
  8776  1F45  0008               	return
  8777  1F46                     __end_of___flge:
  8778                           
  8779                           	psect	text26
  8780  1C01                     __ptext26:	
  8781 ;; *************** function ___fleq *****************
  8782 ;; Defined at:
  8783 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;  ff1             4    0[COMMON] unsigned char 
  8786 ;;  ff2             4    4[COMMON] unsigned char 
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;		None
  8789 ;; Return value:  Size  Location     Type
  8790 ;;		None               void
  8791 ;; Registers used:
  8792 ;;		wreg, status,2, status,0
  8793 ;; Tracked objects:
  8794 ;;		On entry : 0/0
  8795 ;;		On exit  : 0/0
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8798 ;;      Params:         8       0       0       0       0
  8799 ;;      Locals:         0       0       0       0       0
  8800 ;;      Temps:          4       0       0       0       0
  8801 ;;      Totals:        12       0       0       0       0
  8802 ;;Total ram usage:       12 bytes
  8803 ;; Hardware stack levels used:    1
  8804 ;; This function calls:
  8805 ;;		Nothing
  8806 ;; This function is called by:
  8807 ;;		_sprintf
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811                           
  8812                           ;psect for function ___fleq
  8813  1C01                     ___fleq:
  8814  1C01                     l3177:	
  8815                           ;incstack = 0
  8816                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8817                           
  8818  1C01  3000               	movlw	0
  8819  1C02  0570               	andwf	___fleq@ff1,w
  8820  1C03  00F8               	movwf	??___fleq
  8821  1C04  3000               	movlw	0
  8822  1C05  0571               	andwf	___fleq@ff1+1,w
  8823  1C06  00F9               	movwf	??___fleq+1
  8824  1C07  3080               	movlw	128
  8825  1C08  0572               	andwf	___fleq@ff1+2,w
  8826  1C09  00FA               	movwf	??___fleq+2
  8827  1C0A  307F               	movlw	127
  8828  1C0B  0573               	andwf	___fleq@ff1+3,w
  8829  1C0C  00FB               	movwf	??___fleq+3
  8830  1C0D  087B               	movf	??___fleq+3,w
  8831  1C0E  047A               	iorwf	??___fleq+2,w
  8832  1C0F  0479               	iorwf	??___fleq+1,w
  8833  1C10  0478               	iorwf	??___fleq,w
  8834  1C11  1D03               	skipz
  8835  1C12  2C14               	goto	u4901
  8836  1C13  2C15               	goto	u4900
  8837  1C14                     u4901:
  8838  1C14  2C1D               	goto	l580
  8839  1C15                     u4900:
  8840  1C15                     l3179:
  8841  1C15  3000               	movlw	0
  8842  1C16  00F3               	movwf	___fleq@ff1+3
  8843  1C17  3000               	movlw	0
  8844  1C18  00F2               	movwf	___fleq@ff1+2
  8845  1C19  3000               	movlw	0
  8846  1C1A  00F1               	movwf	___fleq@ff1+1
  8847  1C1B  3000               	movlw	0
  8848  1C1C  00F0               	movwf	___fleq@ff1
  8849  1C1D                     l580:
  8850  1C1D  3000               	movlw	0
  8851  1C1E  0574               	andwf	___fleq@ff2,w
  8852  1C1F  00F8               	movwf	??___fleq
  8853  1C20  3000               	movlw	0
  8854  1C21  0575               	andwf	___fleq@ff2+1,w
  8855  1C22  00F9               	movwf	??___fleq+1
  8856  1C23  3080               	movlw	128
  8857  1C24  0576               	andwf	___fleq@ff2+2,w
  8858  1C25  00FA               	movwf	??___fleq+2
  8859  1C26  307F               	movlw	127
  8860  1C27  0577               	andwf	___fleq@ff2+3,w
  8861  1C28  00FB               	movwf	??___fleq+3
  8862  1C29  087B               	movf	??___fleq+3,w
  8863  1C2A  047A               	iorwf	??___fleq+2,w
  8864  1C2B  0479               	iorwf	??___fleq+1,w
  8865  1C2C  0478               	iorwf	??___fleq,w
  8866  1C2D  1D03               	skipz
  8867  1C2E  2C30               	goto	u4911
  8868  1C2F  2C31               	goto	u4910
  8869  1C30                     u4911:
  8870  1C30  2C39               	goto	l581
  8871  1C31                     u4910:
  8872  1C31                     l3181:
  8873  1C31  3000               	movlw	0
  8874  1C32  00F7               	movwf	___fleq@ff2+3
  8875  1C33  3000               	movlw	0
  8876  1C34  00F6               	movwf	___fleq@ff2+2
  8877  1C35  3000               	movlw	0
  8878  1C36  00F5               	movwf	___fleq@ff2+1
  8879  1C37  3000               	movlw	0
  8880  1C38  00F4               	movwf	___fleq@ff2
  8881  1C39                     l581:
  8882  1C39  0877               	movf	___fleq@ff2+3,w
  8883  1C3A  0673               	xorwf	___fleq@ff1+3,w
  8884  1C3B  1D03               	skipz
  8885  1C3C  2C47               	goto	u4925
  8886  1C3D  0876               	movf	___fleq@ff2+2,w
  8887  1C3E  0672               	xorwf	___fleq@ff1+2,w
  8888  1C3F  1D03               	skipz
  8889  1C40  2C47               	goto	u4925
  8890  1C41  0875               	movf	___fleq@ff2+1,w
  8891  1C42  0671               	xorwf	___fleq@ff1+1,w
  8892  1C43  1D03               	skipz
  8893  1C44  2C47               	goto	u4925
  8894  1C45  0874               	movf	___fleq@ff2,w
  8895  1C46  0670               	xorwf	___fleq@ff1,w
  8896  1C47                     u4925:
  8897  1C47  1903               	skipnz
  8898  1C48  2C4A               	goto	u4921
  8899  1C49  2C4B               	goto	u4920
  8900  1C4A                     u4921:
  8901  1C4A  2C4D               	goto	l3185
  8902  1C4B                     u4920:
  8903  1C4B                     l3183:
  8904  1C4B  1003               	clrc
  8905  1C4C  2C4E               	goto	l582
  8906  1C4D                     l3185:
  8907  1C4D  1403               	setc
  8908  1C4E                     l582:
  8909  1C4E  0008               	return
  8910  1C4F                     __end_of___fleq:
  8911                           
  8912                           	psect	text27
  8913  1BB6                     __ptext27:	
  8914 ;; *************** function _Lcd_Init *****************
  8915 ;; Defined at:
  8916 ;;		line 14 in file "LCD.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;		None
  8919 ;; Auto vars:     Size  Location     Type
  8920 ;;		None
  8921 ;; Return value:  Size  Location     Type
  8922 ;;                  1    wreg      void 
  8923 ;; Registers used:
  8924 ;;		wreg, status,2, status,0, pclath, cstack
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8930 ;;      Params:         0       0       0       0       0
  8931 ;;      Locals:         0       0       0       0       0
  8932 ;;      Temps:          2       0       0       0       0
  8933 ;;      Totals:         2       0       0       0       0
  8934 ;;Total ram usage:        2 bytes
  8935 ;; Hardware stack levels used:    1
  8936 ;; Hardware stack levels required when called:    2
  8937 ;; This function calls:
  8938 ;;		_Lcd_Cmd
  8939 ;;		_Lcd_Port
  8940 ;; This function is called by:
  8941 ;;		_main
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945                           
  8946                           ;psect for function _Lcd_Init
  8947  1BB6                     _Lcd_Init:
  8948  1BB6                     l3801:	
  8949                           ;incstack = 0
  8950                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  8951                           
  8952                           
  8953                           ;LCD.c: 15:   Lcd_Port(0x00);
  8954  1BB6  3000               	movlw	0
  8955  1BB7  120A  158A  2000  160A  158A  	fcall	_Lcd_Port
  8956  1BBC                     l3803:
  8957                           
  8958                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  8959  1BBC  3034               	movlw	52
  8960  1BBD  00F5               	movwf	??_Lcd_Init+1
  8961  1BBE  30F1               	movlw	241
  8962  1BBF  00F4               	movwf	??_Lcd_Init
  8963  1BC0                     u6187:
  8964  1BC0  0BF4               	decfsz	??_Lcd_Init,f
  8965  1BC1  2BC0               	goto	u6187
  8966  1BC2  0BF5               	decfsz	??_Lcd_Init+1,f
  8967  1BC3  2BC0               	goto	u6187
  8968  1BC4  2BC5               	nop2
  8969  1BC5                     l3805:
  8970                           
  8971                           ;LCD.c: 17:   Lcd_Cmd(0x030);
  8972  1BC5  3030               	movlw	48
  8973  1BC6  160A  158A  218D  160A  158A  	fcall	_Lcd_Cmd
  8974                           
  8975                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  8976  1BCB  300D               	movlw	13
  8977  1BCC  00F5               	movwf	??_Lcd_Init+1
  8978  1BCD  30FB               	movlw	251
  8979  1BCE  00F4               	movwf	??_Lcd_Init
  8980  1BCF                     u6197:
  8981  1BCF  0BF4               	decfsz	??_Lcd_Init,f
  8982  1BD0  2BCF               	goto	u6197
  8983  1BD1  0BF5               	decfsz	??_Lcd_Init+1,f
  8984  1BD2  2BCF               	goto	u6197
  8985  1BD3  2BD4               	nop2
  8986  1BD4                     l3807:
  8987                           
  8988                           ;LCD.c: 19:   Lcd_Cmd(0x030);
  8989  1BD4  3030               	movlw	48
  8990  1BD5  160A  158A  218D  160A  158A  	fcall	_Lcd_Cmd
  8991  1BDA                     l3809:
  8992                           
  8993                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  8994  1BDA  301D               	movlw	29
  8995  1BDB  00F5               	movwf	??_Lcd_Init+1
  8996  1BDC  3091               	movlw	145
  8997  1BDD  00F4               	movwf	??_Lcd_Init
  8998  1BDE                     u6207:
  8999  1BDE  0BF4               	decfsz	??_Lcd_Init,f
  9000  1BDF  2BDE               	goto	u6207
  9001  1BE0  0BF5               	decfsz	??_Lcd_Init+1,f
  9002  1BE1  2BDE               	goto	u6207
  9003                           
  9004                           ;LCD.c: 21:   Lcd_Cmd(0x030);
  9005  1BE2  3030               	movlw	48
  9006  1BE3  160A  158A  218D  160A  158A  	fcall	_Lcd_Cmd
  9007                           
  9008                           ;LCD.c: 22:   Lcd_Cmd(0x038);
  9009  1BE8  3038               	movlw	56
  9010  1BE9  160A  158A  218D  160A  158A  	fcall	_Lcd_Cmd
  9011                           
  9012                           ;LCD.c: 23:   Lcd_Cmd(0x00C);
  9013  1BEE  300C               	movlw	12
  9014  1BEF  160A  158A  218D  160A  158A  	fcall	_Lcd_Cmd
  9015                           
  9016                           ;LCD.c: 24:   Lcd_Cmd(0x001);
  9017  1BF4  3001               	movlw	1
  9018  1BF5  160A  158A  218D  160A  158A  	fcall	_Lcd_Cmd
  9019                           
  9020                           ;LCD.c: 25:   Lcd_Cmd(0x006);
  9021  1BFA  3006               	movlw	6
  9022  1BFB  160A  158A  218D  160A  158A  	fcall	_Lcd_Cmd
  9023  1C00                     l118:
  9024  1C00  0008               	return
  9025  1C01                     __end_of_Lcd_Init:
  9026                           
  9027                           	psect	text28
  9028  198D                     __ptext28:	
  9029 ;; *************** function _Lcd_Cmd *****************
  9030 ;; Defined at:
  9031 ;;		line 73 in file "LCD.c"
  9032 ;; Parameters:    Size  Location     Type
  9033 ;;  a               1    wreg     unsigned char 
  9034 ;; Auto vars:     Size  Location     Type
  9035 ;;  a               1    3[COMMON] unsigned char 
  9036 ;; Return value:  Size  Location     Type
  9037 ;;                  1    wreg      void 
  9038 ;; Registers used:
  9039 ;;		wreg, status,2, status,0, pclath, cstack
  9040 ;; Tracked objects:
  9041 ;;		On entry : 0/0
  9042 ;;		On exit  : 0/0
  9043 ;;		Unchanged: 0/0
  9044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9045 ;;      Params:         0       0       0       0       0
  9046 ;;      Locals:         1       0       0       0       0
  9047 ;;      Temps:          2       0       0       0       0
  9048 ;;      Totals:         3       0       0       0       0
  9049 ;;Total ram usage:        3 bytes
  9050 ;; Hardware stack levels used:    1
  9051 ;; Hardware stack levels required when called:    1
  9052 ;; This function calls:
  9053 ;;		_Lcd_Port
  9054 ;; This function is called by:
  9055 ;;		_Lcd_Init
  9056 ;;		_Lcd_Set_Cursor
  9057 ;;		_Lcd_Clear
  9058 ;;		_Lcd_Shift_Right
  9059 ;;		_Lcd_Shift_Left
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           
  9064                           ;psect for function _Lcd_Cmd
  9065  198D                     _Lcd_Cmd:
  9066                           
  9067                           ;incstack = 0
  9068                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9069                           ;Lcd_Cmd@a stored from wreg
  9070  198D  00F3               	movwf	Lcd_Cmd@a
  9071  198E                     l2945:
  9072                           
  9073                           ;LCD.c: 74:  PORTEbits.RE0 = 0;
  9074  198E  1283               	bcf	3,5	;RP0=0, select bank0
  9075  198F  1303               	bcf	3,6	;RP1=0, select bank0
  9076  1990  1009               	bcf	9,0	;volatile
  9077  1991                     l2947:
  9078                           
  9079                           ;LCD.c: 75:  Lcd_Port(a);
  9080  1991  0873               	movf	Lcd_Cmd@a,w
  9081  1992  120A  158A  2000  160A  158A  	fcall	_Lcd_Port
  9082  1997                     l2949:
  9083                           
  9084                           ;LCD.c: 76:  PORTEbits.RE2 = 1;
  9085  1997  1283               	bcf	3,5	;RP0=0, select bank0
  9086  1998  1303               	bcf	3,6	;RP1=0, select bank0
  9087  1999  1509               	bsf	9,2	;volatile
  9088  199A                     l2951:
  9089                           
  9090                           ;LCD.c: 77:         _delay((unsigned long)((4)*(8000000/4000.0)));
  9091  199A  300B               	movlw	11
  9092  199B  00F2               	movwf	??_Lcd_Cmd+1
  9093  199C  3062               	movlw	98
  9094  199D  00F1               	movwf	??_Lcd_Cmd
  9095  199E                     u6217:
  9096  199E  0BF1               	decfsz	??_Lcd_Cmd,f
  9097  199F  299E               	goto	u6217
  9098  19A0  0BF2               	decfsz	??_Lcd_Cmd+1,f
  9099  19A1  299E               	goto	u6217
  9100  19A2  0000               	nop
  9101  19A3                     l2953:
  9102                           
  9103                           ;LCD.c: 78:         PORTEbits.RE2 = 0;
  9104  19A3  1283               	bcf	3,5	;RP0=0, select bank0
  9105  19A4  1303               	bcf	3,6	;RP1=0, select bank0
  9106  19A5  1109               	bcf	9,2	;volatile
  9107  19A6                     l124:
  9108  19A6  0008               	return
  9109  19A7                     __end_of_Lcd_Cmd:
  9110                           
  9111                           	psect	text29
  9112  0800                     __ptext29:	
  9113 ;; *************** function _Lcd_Port *****************
  9114 ;; Defined at:
  9115 ;;		line 29 in file "LCD.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;  a               1    wreg     unsigned char 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;  a               1    0[COMMON] unsigned char 
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  1    wreg      void 
  9122 ;; Registers used:
  9123 ;;		wreg
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9129 ;;      Params:         0       0       0       0       0
  9130 ;;      Locals:         1       0       0       0       0
  9131 ;;      Temps:          0       0       0       0       0
  9132 ;;      Totals:         1       0       0       0       0
  9133 ;;Total ram usage:        1 bytes
  9134 ;; Hardware stack levels used:    1
  9135 ;; This function calls:
  9136 ;;		Nothing
  9137 ;; This function is called by:
  9138 ;;		_Lcd_Init
  9139 ;;		_Lcd_Cmd
  9140 ;;		_Lcd_Write_Char
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           
  9145                           ;psect for function _Lcd_Port
  9146  0800                     _Lcd_Port:
  9147                           
  9148                           ;incstack = 0
  9149                           ; Regs used in _Lcd_Port: [wreg]
  9150                           ;Lcd_Port@a stored from wreg
  9151  0800  00F0               	movwf	Lcd_Port@a
  9152  0801                     l2479:
  9153                           
  9154                           ;LCD.c: 30:     PORTD = a;
  9155  0801  0870               	movf	Lcd_Port@a,w
  9156  0802  1283               	bcf	3,5	;RP0=0, select bank0
  9157  0803  1303               	bcf	3,6	;RP1=0, select bank0
  9158  0804  0088               	movwf	8	;volatile
  9159  0805                     l121:
  9160  0805  0008               	return
  9161  0806                     __end_of_Lcd_Port:
  9162                           
  9163                           	psect	text30
  9164  1E31                     __ptext30:	
  9165 ;; *************** function _ADC_channel2 *****************
  9166 ;; Defined at:
  9167 ;;		line 145 in file "pseudocodigo_lab3.c"
  9168 ;; Parameters:    Size  Location     Type
  9169 ;;		None
  9170 ;; Auto vars:     Size  Location     Type
  9171 ;;		None
  9172 ;; Return value:  Size  Location     Type
  9173 ;;                  1    wreg      void 
  9174 ;; Registers used:
  9175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9176 ;; Tracked objects:
  9177 ;;		On entry : 0/0
  9178 ;;		On exit  : 0/0
  9179 ;;		Unchanged: 0/0
  9180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9181 ;;      Params:         0       0       0       0       0
  9182 ;;      Locals:         0       0       0       0       0
  9183 ;;      Temps:          0       4       0       0       0
  9184 ;;      Totals:         0       4       0       0       0
  9185 ;;Total ram usage:        4 bytes
  9186 ;; Hardware stack levels used:    1
  9187 ;; Hardware stack levels required when called:    2
  9188 ;; This function calls:
  9189 ;;		_ADC_Config
  9190 ;;		___fldiv
  9191 ;;		___flmul
  9192 ;;		___xxtofl
  9193 ;; This function is called by:
  9194 ;;		_main
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198                           
  9199                           ;psect for function _ADC_channel2
  9200  1E31                     _ADC_channel2:
  9201  1E31                     l3831:	
  9202                           ;incstack = 0
  9203                           ; Regs used in _ADC_channel2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9204                           
  9205                           
  9206                           ;pseudocodigo_lab3.c: 146:     ADC_Config (1);
  9207  1E31  3001               	movlw	1
  9208  1E32  160A  118A  2017  160A  158A  	fcall	_ADC_Config
  9209  1E37                     l3833:
  9210                           
  9211                           ;pseudocodigo_lab3.c: 147:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9212  1E37  3003               	movlw	3
  9213  1E38  1283               	bcf	3,5	;RP0=0, select bank0
  9214  1E39  1303               	bcf	3,6	;RP1=0, select bank0
  9215  1E3A  00D9               	movwf	??_ADC_channel2+1
  9216  1E3B  3097               	movlw	151
  9217  1E3C  00D8               	movwf	??_ADC_channel2
  9218  1E3D                     u6227:
  9219  1E3D  0BD8               	decfsz	??_ADC_channel2,f
  9220  1E3E  2E3D               	goto	u6227
  9221  1E3F  0BD9               	decfsz	??_ADC_channel2+1,f
  9222  1E40  2E3D               	goto	u6227
  9223  1E41                     l3835:
  9224                           
  9225                           ;pseudocodigo_lab3.c: 148:     ADCON0bits.GO = 1;
  9226  1E41  1283               	bcf	3,5	;RP0=0, select bank0
  9227  1E42  1303               	bcf	3,6	;RP1=0, select bank0
  9228  1E43  149F               	bsf	31,1	;volatile
  9229                           
  9230                           ;pseudocodigo_lab3.c: 149:     while (ADCON0bits.GO == 1) {
  9231  1E44  2E9E               	goto	l3839
  9232  1E45                     l3837:
  9233                           
  9234                           ;pseudocodigo_lab3.c: 150:         S2_val = ((ADRESH * 5.0) / 255);
  9235  1E45  3043               	movlw	67
  9236  1E46  00C1               	movwf	___fldiv@a+3
  9237  1E47  307F               	movlw	127
  9238  1E48  00C0               	movwf	___fldiv@a+2
  9239  1E49  3000               	movlw	0
  9240  1E4A  00BF               	movwf	___fldiv@a+1
  9241  1E4B  3000               	movlw	0
  9242  1E4C  00BE               	movwf	___fldiv@a
  9243  1E4D  3040               	movlw	64
  9244  1E4E  00A7               	movwf	___flmul@b+3
  9245  1E4F  30A0               	movlw	160
  9246  1E50  00A6               	movwf	___flmul@b+2
  9247  1E51  3000               	movlw	0
  9248  1E52  00A5               	movwf	___flmul@b+1
  9249  1E53  3000               	movlw	0
  9250  1E54  00A4               	movwf	___flmul@b
  9251  1E55  081E               	movf	30,w	;volatile
  9252  1E56  00D8               	movwf	??_ADC_channel2
  9253  1E57  01D9               	clrf	??_ADC_channel2+1
  9254  1E58  01DA               	clrf	??_ADC_channel2+2
  9255  1E59  01DB               	clrf	??_ADC_channel2+3
  9256  1E5A  085B               	movf	??_ADC_channel2+3,w
  9257  1E5B  00F3               	movwf	___xxtofl@val+3
  9258  1E5C  085A               	movf	??_ADC_channel2+2,w
  9259  1E5D  00F2               	movwf	___xxtofl@val+2
  9260  1E5E  0859               	movf	??_ADC_channel2+1,w
  9261  1E5F  00F1               	movwf	___xxtofl@val+1
  9262  1E60  0858               	movf	??_ADC_channel2,w
  9263  1E61  00F0               	movwf	___xxtofl@val
  9264  1E62  3001               	movlw	1
  9265  1E63  160A  158A  2746  160A  158A  	fcall	___xxtofl
  9266  1E68  0873               	movf	?___xxtofl+3,w
  9267  1E69  1283               	bcf	3,5	;RP0=0, select bank0
  9268  1E6A  1303               	bcf	3,6	;RP1=0, select bank0
  9269  1E6B  00AB               	movwf	___flmul@a+3
  9270  1E6C  0872               	movf	?___xxtofl+2,w
  9271  1E6D  00AA               	movwf	___flmul@a+2
  9272  1E6E  0871               	movf	?___xxtofl+1,w
  9273  1E6F  00A9               	movwf	___flmul@a+1
  9274  1E70  0870               	movf	?___xxtofl,w
  9275  1E71  00A8               	movwf	___flmul@a
  9276  1E72  120A  158A  249F  160A  158A  	fcall	___flmul
  9277  1E77  1283               	bcf	3,5	;RP0=0, select bank0
  9278  1E78  1303               	bcf	3,6	;RP1=0, select bank0
  9279  1E79  0827               	movf	?___flmul+3,w
  9280  1E7A  00C5               	movwf	___fldiv@b+3
  9281  1E7B  0826               	movf	?___flmul+2,w
  9282  1E7C  00C4               	movwf	___fldiv@b+2
  9283  1E7D  0825               	movf	?___flmul+1,w
  9284  1E7E  00C3               	movwf	___fldiv@b+1
  9285  1E7F  0824               	movf	?___flmul,w
  9286  1E80  00C2               	movwf	___fldiv@b
  9287  1E81  160A  118A  2190  160A  158A  	fcall	___fldiv
  9288  1E86  1283               	bcf	3,5	;RP0=0, select bank0
  9289  1E87  1303               	bcf	3,6	;RP1=0, select bank0
  9290  1E88  0841               	movf	?___fldiv+3,w
  9291  1E89  1683               	bsf	3,5	;RP0=1, select bank1
  9292  1E8A  1303               	bcf	3,6	;RP1=0, select bank1
  9293  1E8B  00CE               	movwf	(_S2_val+3)^(0+128)
  9294  1E8C  1283               	bcf	3,5	;RP0=0, select bank0
  9295  1E8D  1303               	bcf	3,6	;RP1=0, select bank0
  9296  1E8E  0840               	movf	?___fldiv+2,w
  9297  1E8F  1683               	bsf	3,5	;RP0=1, select bank1
  9298  1E90  1303               	bcf	3,6	;RP1=0, select bank1
  9299  1E91  00CD               	movwf	(_S2_val+2)^(0+128)
  9300  1E92  1283               	bcf	3,5	;RP0=0, select bank0
  9301  1E93  1303               	bcf	3,6	;RP1=0, select bank0
  9302  1E94  083F               	movf	?___fldiv+1,w
  9303  1E95  1683               	bsf	3,5	;RP0=1, select bank1
  9304  1E96  1303               	bcf	3,6	;RP1=0, select bank1
  9305  1E97  00CC               	movwf	(_S2_val+1)^(0+128)
  9306  1E98  1283               	bcf	3,5	;RP0=0, select bank0
  9307  1E99  1303               	bcf	3,6	;RP1=0, select bank0
  9308  1E9A  083E               	movf	?___fldiv,w
  9309  1E9B  1683               	bsf	3,5	;RP0=1, select bank1
  9310  1E9C  1303               	bcf	3,6	;RP1=0, select bank1
  9311  1E9D  00CB               	movwf	_S2_val^(0+128)
  9312  1E9E                     l3839:
  9313                           
  9314                           ;pseudocodigo_lab3.c: 149:     while (ADCON0bits.GO == 1) {
  9315  1E9E  1283               	bcf	3,5	;RP0=0, select bank0
  9316  1E9F  189F               	btfsc	31,1	;volatile
  9317  1EA0  2EA2               	goto	u6131
  9318  1EA1  2EA3               	goto	u6130
  9319  1EA2                     u6131:
  9320  1EA2  2E45               	goto	l3837
  9321  1EA3                     u6130:
  9322  1EA3                     l83:
  9323  1EA3  0008               	return
  9324  1EA4                     __end_of_ADC_channel2:
  9325                           
  9326                           	psect	text31
  9327  1DBE                     __ptext31:	
  9328 ;; *************** function _ADC_channel1 *****************
  9329 ;; Defined at:
  9330 ;;		line 136 in file "pseudocodigo_lab3.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;		None
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;		None
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  1    wreg      void 
  9337 ;; Registers used:
  9338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9344 ;;      Params:         0       0       0       0       0
  9345 ;;      Locals:         0       0       0       0       0
  9346 ;;      Temps:          0       4       0       0       0
  9347 ;;      Totals:         0       4       0       0       0
  9348 ;;Total ram usage:        4 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:    2
  9351 ;; This function calls:
  9352 ;;		_ADC_Config
  9353 ;;		___fldiv
  9354 ;;		___flmul
  9355 ;;		___xxtofl
  9356 ;; This function is called by:
  9357 ;;		_main
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           
  9362                           ;psect for function _ADC_channel1
  9363  1DBE                     _ADC_channel1:
  9364  1DBE                     l3821:	
  9365                           ;incstack = 0
  9366                           ; Regs used in _ADC_channel1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9367                           
  9368                           
  9369                           ;pseudocodigo_lab3.c: 137:     ADC_Config (0);
  9370  1DBE  3000               	movlw	0
  9371  1DBF  160A  118A  2017  160A  158A  	fcall	_ADC_Config
  9372  1DC4                     l3823:
  9373                           
  9374                           ;pseudocodigo_lab3.c: 138:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9375  1DC4  3003               	movlw	3
  9376  1DC5  1283               	bcf	3,5	;RP0=0, select bank0
  9377  1DC6  1303               	bcf	3,6	;RP1=0, select bank0
  9378  1DC7  00D9               	movwf	??_ADC_channel1+1
  9379  1DC8  3097               	movlw	151
  9380  1DC9  00D8               	movwf	??_ADC_channel1
  9381  1DCA                     u6237:
  9382  1DCA  0BD8               	decfsz	??_ADC_channel1,f
  9383  1DCB  2DCA               	goto	u6237
  9384  1DCC  0BD9               	decfsz	??_ADC_channel1+1,f
  9385  1DCD  2DCA               	goto	u6237
  9386  1DCE                     l3825:
  9387                           
  9388                           ;pseudocodigo_lab3.c: 139:     ADCON0bits.GO = 1;
  9389  1DCE  1283               	bcf	3,5	;RP0=0, select bank0
  9390  1DCF  1303               	bcf	3,6	;RP1=0, select bank0
  9391  1DD0  149F               	bsf	31,1	;volatile
  9392                           
  9393                           ;pseudocodigo_lab3.c: 140:     while (ADCON0bits.GO == 1) {
  9394  1DD1  2E2B               	goto	l3829
  9395  1DD2                     l3827:
  9396                           
  9397                           ;pseudocodigo_lab3.c: 141:         S1_val = ((ADRESH * 5.0) / 255);
  9398  1DD2  3043               	movlw	67
  9399  1DD3  00C1               	movwf	___fldiv@a+3
  9400  1DD4  307F               	movlw	127
  9401  1DD5  00C0               	movwf	___fldiv@a+2
  9402  1DD6  3000               	movlw	0
  9403  1DD7  00BF               	movwf	___fldiv@a+1
  9404  1DD8  3000               	movlw	0
  9405  1DD9  00BE               	movwf	___fldiv@a
  9406  1DDA  3040               	movlw	64
  9407  1DDB  00A7               	movwf	___flmul@b+3
  9408  1DDC  30A0               	movlw	160
  9409  1DDD  00A6               	movwf	___flmul@b+2
  9410  1DDE  3000               	movlw	0
  9411  1DDF  00A5               	movwf	___flmul@b+1
  9412  1DE0  3000               	movlw	0
  9413  1DE1  00A4               	movwf	___flmul@b
  9414  1DE2  081E               	movf	30,w	;volatile
  9415  1DE3  00D8               	movwf	??_ADC_channel1
  9416  1DE4  01D9               	clrf	??_ADC_channel1+1
  9417  1DE5  01DA               	clrf	??_ADC_channel1+2
  9418  1DE6  01DB               	clrf	??_ADC_channel1+3
  9419  1DE7  085B               	movf	??_ADC_channel1+3,w
  9420  1DE8  00F3               	movwf	___xxtofl@val+3
  9421  1DE9  085A               	movf	??_ADC_channel1+2,w
  9422  1DEA  00F2               	movwf	___xxtofl@val+2
  9423  1DEB  0859               	movf	??_ADC_channel1+1,w
  9424  1DEC  00F1               	movwf	___xxtofl@val+1
  9425  1DED  0858               	movf	??_ADC_channel1,w
  9426  1DEE  00F0               	movwf	___xxtofl@val
  9427  1DEF  3001               	movlw	1
  9428  1DF0  160A  158A  2746  160A  158A  	fcall	___xxtofl
  9429  1DF5  0873               	movf	?___xxtofl+3,w
  9430  1DF6  1283               	bcf	3,5	;RP0=0, select bank0
  9431  1DF7  1303               	bcf	3,6	;RP1=0, select bank0
  9432  1DF8  00AB               	movwf	___flmul@a+3
  9433  1DF9  0872               	movf	?___xxtofl+2,w
  9434  1DFA  00AA               	movwf	___flmul@a+2
  9435  1DFB  0871               	movf	?___xxtofl+1,w
  9436  1DFC  00A9               	movwf	___flmul@a+1
  9437  1DFD  0870               	movf	?___xxtofl,w
  9438  1DFE  00A8               	movwf	___flmul@a
  9439  1DFF  120A  158A  249F  160A  158A  	fcall	___flmul
  9440  1E04  1283               	bcf	3,5	;RP0=0, select bank0
  9441  1E05  1303               	bcf	3,6	;RP1=0, select bank0
  9442  1E06  0827               	movf	?___flmul+3,w
  9443  1E07  00C5               	movwf	___fldiv@b+3
  9444  1E08  0826               	movf	?___flmul+2,w
  9445  1E09  00C4               	movwf	___fldiv@b+2
  9446  1E0A  0825               	movf	?___flmul+1,w
  9447  1E0B  00C3               	movwf	___fldiv@b+1
  9448  1E0C  0824               	movf	?___flmul,w
  9449  1E0D  00C2               	movwf	___fldiv@b
  9450  1E0E  160A  118A  2190  160A  158A  	fcall	___fldiv
  9451  1E13  1283               	bcf	3,5	;RP0=0, select bank0
  9452  1E14  1303               	bcf	3,6	;RP1=0, select bank0
  9453  1E15  0841               	movf	?___fldiv+3,w
  9454  1E16  1683               	bsf	3,5	;RP0=1, select bank1
  9455  1E17  1303               	bcf	3,6	;RP1=0, select bank1
  9456  1E18  00D2               	movwf	(_S1_val+3)^(0+128)
  9457  1E19  1283               	bcf	3,5	;RP0=0, select bank0
  9458  1E1A  1303               	bcf	3,6	;RP1=0, select bank0
  9459  1E1B  0840               	movf	?___fldiv+2,w
  9460  1E1C  1683               	bsf	3,5	;RP0=1, select bank1
  9461  1E1D  1303               	bcf	3,6	;RP1=0, select bank1
  9462  1E1E  00D1               	movwf	(_S1_val+2)^(0+128)
  9463  1E1F  1283               	bcf	3,5	;RP0=0, select bank0
  9464  1E20  1303               	bcf	3,6	;RP1=0, select bank0
  9465  1E21  083F               	movf	?___fldiv+1,w
  9466  1E22  1683               	bsf	3,5	;RP0=1, select bank1
  9467  1E23  1303               	bcf	3,6	;RP1=0, select bank1
  9468  1E24  00D0               	movwf	(_S1_val+1)^(0+128)
  9469  1E25  1283               	bcf	3,5	;RP0=0, select bank0
  9470  1E26  1303               	bcf	3,6	;RP1=0, select bank0
  9471  1E27  083E               	movf	?___fldiv,w
  9472  1E28  1683               	bsf	3,5	;RP0=1, select bank1
  9473  1E29  1303               	bcf	3,6	;RP1=0, select bank1
  9474  1E2A  00CF               	movwf	_S1_val^(0+128)
  9475  1E2B                     l3829:
  9476                           
  9477                           ;pseudocodigo_lab3.c: 140:     while (ADCON0bits.GO == 1) {
  9478  1E2B  1283               	bcf	3,5	;RP0=0, select bank0
  9479  1E2C  189F               	btfsc	31,1	;volatile
  9480  1E2D  2E2F               	goto	u6121
  9481  1E2E  2E30               	goto	u6120
  9482  1E2F                     u6121:
  9483  1E2F  2DD2               	goto	l3827
  9484  1E30                     u6120:
  9485  1E30                     l77:
  9486  1E30  0008               	return
  9487  1E31                     __end_of_ADC_channel1:
  9488                           
  9489                           	psect	text32
  9490  1F46                     __ptext32:	
  9491 ;; *************** function ___xxtofl *****************
  9492 ;; Defined at:
  9493 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  9494 ;; Parameters:    Size  Location     Type
  9495 ;;  sign            1    wreg     unsigned char 
  9496 ;;  val             4    0[COMMON] long 
  9497 ;; Auto vars:     Size  Location     Type
  9498 ;;  sign            1    8[COMMON] unsigned char 
  9499 ;;  arg             4   10[COMMON] unsigned long 
  9500 ;;  exp             1    9[COMMON] unsigned char 
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  4    0[COMMON] unsigned char 
  9503 ;; Registers used:
  9504 ;;		wreg, status,2, status,0
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9510 ;;      Params:         4       0       0       0       0
  9511 ;;      Locals:         6       0       0       0       0
  9512 ;;      Temps:          4       0       0       0       0
  9513 ;;      Totals:        14       0       0       0       0
  9514 ;;Total ram usage:       14 bytes
  9515 ;; Hardware stack levels used:    1
  9516 ;; This function calls:
  9517 ;;		Nothing
  9518 ;; This function is called by:
  9519 ;;		_ADC_channel1
  9520 ;;		_ADC_channel2
  9521 ;;		_sprintf
  9522 ;; This function uses a non-reentrant model
  9523 ;;
  9524                           
  9525                           
  9526                           ;psect for function ___xxtofl
  9527  1F46                     ___xxtofl:
  9528                           
  9529                           ;incstack = 0
  9530                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9531                           ;___xxtofl@sign stored from wreg
  9532  1F46  00F8               	movwf	___xxtofl@sign
  9533  1F47                     l3279:
  9534  1F47  0878               	movf	___xxtofl@sign,w
  9535  1F48  1903               	btfsc	3,2
  9536  1F49  2F4B               	goto	u5171
  9537  1F4A  2F4C               	goto	u5170
  9538  1F4B                     u5171:
  9539  1F4B  2F60               	goto	l3285
  9540  1F4C                     u5170:
  9541  1F4C                     l3281:
  9542  1F4C  1FF3               	btfss	___xxtofl@val+3,7
  9543  1F4D  2F4F               	goto	u5181
  9544  1F4E  2F50               	goto	u5180
  9545  1F4F                     u5181:
  9546  1F4F  2F60               	goto	l3285
  9547  1F50                     u5180:
  9548  1F50                     l3283:
  9549  1F50  0970               	comf	___xxtofl@val,w
  9550  1F51  00FA               	movwf	___xxtofl@arg
  9551  1F52  0971               	comf	___xxtofl@val+1,w
  9552  1F53  00FB               	movwf	___xxtofl@arg+1
  9553  1F54  0972               	comf	___xxtofl@val+2,w
  9554  1F55  00FC               	movwf	___xxtofl@arg+2
  9555  1F56  0973               	comf	___xxtofl@val+3,w
  9556  1F57  00FD               	movwf	___xxtofl@arg+3
  9557  1F58  0AFA               	incf	___xxtofl@arg,f
  9558  1F59  1903               	skipnz
  9559  1F5A  0AFB               	incf	___xxtofl@arg+1,f
  9560  1F5B  1903               	skipnz
  9561  1F5C  0AFC               	incf	___xxtofl@arg+2,f
  9562  1F5D  1903               	skipnz
  9563  1F5E  0AFD               	incf	___xxtofl@arg+3,f
  9564  1F5F  2F68               	goto	l861
  9565  1F60                     l3285:
  9566  1F60  0873               	movf	___xxtofl@val+3,w
  9567  1F61  00FD               	movwf	___xxtofl@arg+3
  9568  1F62  0872               	movf	___xxtofl@val+2,w
  9569  1F63  00FC               	movwf	___xxtofl@arg+2
  9570  1F64  0871               	movf	___xxtofl@val+1,w
  9571  1F65  00FB               	movwf	___xxtofl@arg+1
  9572  1F66  0870               	movf	___xxtofl@val,w
  9573  1F67  00FA               	movwf	___xxtofl@arg
  9574  1F68                     l861:
  9575  1F68  0873               	movf	___xxtofl@val+3,w
  9576  1F69  0472               	iorwf	___xxtofl@val+2,w
  9577  1F6A  0471               	iorwf	___xxtofl@val+1,w
  9578  1F6B  0470               	iorwf	___xxtofl@val,w
  9579  1F6C  1D03               	skipz
  9580  1F6D  2F6F               	goto	u5191
  9581  1F6E  2F70               	goto	u5190
  9582  1F6F                     u5191:
  9583  1F6F  2F79               	goto	l3291
  9584  1F70                     u5190:
  9585  1F70                     l3287:
  9586  1F70  3000               	movlw	0
  9587  1F71  00F3               	movwf	?___xxtofl+3
  9588  1F72  3000               	movlw	0
  9589  1F73  00F2               	movwf	?___xxtofl+2
  9590  1F74  3000               	movlw	0
  9591  1F75  00F1               	movwf	?___xxtofl+1
  9592  1F76  3000               	movlw	0
  9593  1F77  00F0               	movwf	?___xxtofl
  9594  1F78  2FFF               	goto	l863
  9595  1F79                     l3291:
  9596  1F79  3096               	movlw	150
  9597  1F7A  00F4               	movwf	??___xxtofl
  9598  1F7B  0874               	movf	??___xxtofl,w
  9599  1F7C  00F9               	movwf	___xxtofl@exp
  9600  1F7D  2F8B               	goto	l3295
  9601  1F7E                     l3293:
  9602  1F7E  3001               	movlw	1
  9603  1F7F  00F4               	movwf	??___xxtofl
  9604  1F80  0874               	movf	??___xxtofl,w
  9605  1F81  07F9               	addwf	___xxtofl@exp,f
  9606  1F82  3001               	movlw	1
  9607  1F83                     u5205:
  9608  1F83  1003               	clrc
  9609  1F84  0CFD               	rrf	___xxtofl@arg+3,f
  9610  1F85  0CFC               	rrf	___xxtofl@arg+2,f
  9611  1F86  0CFB               	rrf	___xxtofl@arg+1,f
  9612  1F87  0CFA               	rrf	___xxtofl@arg,f
  9613  1F88  3EFF               	addlw	-1
  9614  1F89  1D03               	skipz
  9615  1F8A  2F83               	goto	u5205
  9616  1F8B                     l3295:
  9617  1F8B  30FE               	movlw	254
  9618  1F8C  057D               	andwf	___xxtofl@arg+3,w
  9619  1F8D  1D03               	btfss	3,2
  9620  1F8E  2F90               	goto	u5211
  9621  1F8F  2F91               	goto	u5210
  9622  1F90                     u5211:
  9623  1F90  2F7E               	goto	l3293
  9624  1F91                     u5210:
  9625  1F91  2FAD               	goto	l867
  9626  1F92                     l3297:
  9627  1F92  3001               	movlw	1
  9628  1F93  00F4               	movwf	??___xxtofl
  9629  1F94  0874               	movf	??___xxtofl,w
  9630  1F95  07F9               	addwf	___xxtofl@exp,f
  9631  1F96                     l3299:
  9632  1F96  3001               	movlw	1
  9633  1F97  07FA               	addwf	___xxtofl@arg,f
  9634  1F98  3000               	movlw	0
  9635  1F99  1803               	skipnc
  9636  1F9A  3001               	movlw	1
  9637  1F9B  07FB               	addwf	___xxtofl@arg+1,f
  9638  1F9C  3000               	movlw	0
  9639  1F9D  1803               	skipnc
  9640  1F9E  3001               	movlw	1
  9641  1F9F  07FC               	addwf	___xxtofl@arg+2,f
  9642  1FA0  3000               	movlw	0
  9643  1FA1  1803               	skipnc
  9644  1FA2  3001               	movlw	1
  9645  1FA3  07FD               	addwf	___xxtofl@arg+3,f
  9646  1FA4                     l3301:
  9647  1FA4  3001               	movlw	1
  9648  1FA5                     u5225:
  9649  1FA5  1003               	clrc
  9650  1FA6  0CFD               	rrf	___xxtofl@arg+3,f
  9651  1FA7  0CFC               	rrf	___xxtofl@arg+2,f
  9652  1FA8  0CFB               	rrf	___xxtofl@arg+1,f
  9653  1FA9  0CFA               	rrf	___xxtofl@arg,f
  9654  1FAA  3EFF               	addlw	-1
  9655  1FAB  1D03               	skipz
  9656  1FAC  2FA5               	goto	u5225
  9657  1FAD                     l867:
  9658  1FAD  30FF               	movlw	255
  9659  1FAE  057D               	andwf	___xxtofl@arg+3,w
  9660  1FAF  1D03               	btfss	3,2
  9661  1FB0  2FB2               	goto	u5231
  9662  1FB1  2FB3               	goto	u5230
  9663  1FB2                     u5231:
  9664  1FB2  2F92               	goto	l3297
  9665  1FB3                     u5230:
  9666  1FB3  2FBF               	goto	l3305
  9667  1FB4                     l3303:
  9668  1FB4  3001               	movlw	1
  9669  1FB5  02F9               	subwf	___xxtofl@exp,f
  9670  1FB6  3001               	movlw	1
  9671  1FB7  00F4               	movwf	??___xxtofl
  9672  1FB8                     u5245:
  9673  1FB8  1003               	clrc
  9674  1FB9  0DFA               	rlf	___xxtofl@arg,f
  9675  1FBA  0DFB               	rlf	___xxtofl@arg+1,f
  9676  1FBB  0DFC               	rlf	___xxtofl@arg+2,f
  9677  1FBC  0DFD               	rlf	___xxtofl@arg+3,f
  9678  1FBD  0BF4               	decfsz	??___xxtofl,f
  9679  1FBE  2FB8               	goto	u5245
  9680  1FBF                     l3305:
  9681  1FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  9682  1FC0  2FC2               	goto	u5251
  9683  1FC1  2FC3               	goto	u5250
  9684  1FC2                     u5251:
  9685  1FC2  2FC9               	goto	l874
  9686  1FC3                     u5250:
  9687  1FC3                     l3307:
  9688  1FC3  3002               	movlw	2
  9689  1FC4  0279               	subwf	___xxtofl@exp,w
  9690  1FC5  1803               	skipnc
  9691  1FC6  2FC8               	goto	u5261
  9692  1FC7  2FC9               	goto	u5260
  9693  1FC8                     u5261:
  9694  1FC8  2FB4               	goto	l3303
  9695  1FC9                     u5260:
  9696  1FC9                     l874:
  9697  1FC9  1879               	btfsc	___xxtofl@exp,0
  9698  1FCA  2FCC               	goto	u5271
  9699  1FCB  2FCD               	goto	u5270
  9700  1FCC                     u5271:
  9701  1FCC  2FD5               	goto	l875
  9702  1FCD                     u5270:
  9703  1FCD                     l3309:
  9704  1FCD  30FF               	movlw	255
  9705  1FCE  05FA               	andwf	___xxtofl@arg,f
  9706  1FCF  30FF               	movlw	255
  9707  1FD0  05FB               	andwf	___xxtofl@arg+1,f
  9708  1FD1  307F               	movlw	127
  9709  1FD2  05FC               	andwf	___xxtofl@arg+2,f
  9710  1FD3  30FF               	movlw	255
  9711  1FD4  05FD               	andwf	___xxtofl@arg+3,f
  9712  1FD5                     l875:
  9713  1FD5  1003               	clrc
  9714  1FD6  0CF9               	rrf	___xxtofl@exp,f
  9715  1FD7                     l3311:
  9716  1FD7  0879               	movf	___xxtofl@exp,w
  9717  1FD8  00F4               	movwf	??___xxtofl
  9718  1FD9  01F5               	clrf	??___xxtofl+1
  9719  1FDA  01F6               	clrf	??___xxtofl+2
  9720  1FDB  01F7               	clrf	??___xxtofl+3
  9721  1FDC  3018               	movlw	24
  9722  1FDD                     u5285:
  9723  1FDD  1003               	clrc
  9724  1FDE  0DF4               	rlf	??___xxtofl,f
  9725  1FDF  0DF5               	rlf	??___xxtofl+1,f
  9726  1FE0  0DF6               	rlf	??___xxtofl+2,f
  9727  1FE1  0DF7               	rlf	??___xxtofl+3,f
  9728  1FE2                     u5280:
  9729  1FE2  3EFF               	addlw	-1
  9730  1FE3  1D03               	skipz
  9731  1FE4  2FDD               	goto	u5285
  9732  1FE5  0874               	movf	??___xxtofl,w
  9733  1FE6  04FA               	iorwf	___xxtofl@arg,f
  9734  1FE7  0875               	movf	??___xxtofl+1,w
  9735  1FE8  04FB               	iorwf	___xxtofl@arg+1,f
  9736  1FE9  0876               	movf	??___xxtofl+2,w
  9737  1FEA  04FC               	iorwf	___xxtofl@arg+2,f
  9738  1FEB  0877               	movf	??___xxtofl+3,w
  9739  1FEC  04FD               	iorwf	___xxtofl@arg+3,f
  9740  1FED                     l3313:
  9741  1FED  0878               	movf	___xxtofl@sign,w
  9742  1FEE  1903               	btfsc	3,2
  9743  1FEF  2FF1               	goto	u5291
  9744  1FF0  2FF2               	goto	u5290
  9745  1FF1                     u5291:
  9746  1FF1  2FF7               	goto	l3319
  9747  1FF2                     u5290:
  9748  1FF2                     l3315:
  9749  1FF2  1FF3               	btfss	___xxtofl@val+3,7
  9750  1FF3  2FF5               	goto	u5301
  9751  1FF4  2FF6               	goto	u5300
  9752  1FF5                     u5301:
  9753  1FF5  2FF7               	goto	l3319
  9754  1FF6                     u5300:
  9755  1FF6                     l3317:
  9756  1FF6  17FD               	bsf	___xxtofl@arg+3,7
  9757  1FF7                     l3319:
  9758  1FF7  087D               	movf	___xxtofl@arg+3,w
  9759  1FF8  00F3               	movwf	?___xxtofl+3
  9760  1FF9  087C               	movf	___xxtofl@arg+2,w
  9761  1FFA  00F2               	movwf	?___xxtofl+2
  9762  1FFB  087B               	movf	___xxtofl@arg+1,w
  9763  1FFC  00F1               	movwf	?___xxtofl+1
  9764  1FFD  087A               	movf	___xxtofl@arg,w
  9765  1FFE  00F0               	movwf	?___xxtofl
  9766  1FFF                     l863:
  9767  1FFF  0008               	return
  9768  2000                     __end_of___xxtofl:
  9769                           
  9770                           	psect	text33
  9771  0C9F                     __ptext33:	
  9772 ;; *************** function ___flmul *****************
  9773 ;; Defined at:
  9774 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  b               4    4[BANK0 ] unsigned char 
  9777 ;;  a               4    8[BANK0 ] unsigned char 
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;  prod            4   24[BANK0 ] struct .
  9780 ;;  grs             4   18[BANK0 ] unsigned long 
  9781 ;;  temp            2   28[BANK0 ] struct .
  9782 ;;  bexp            1   23[BANK0 ] unsigned char 
  9783 ;;  aexp            1   22[BANK0 ] unsigned char 
  9784 ;;  sign            1   17[BANK0 ] unsigned char 
  9785 ;; Return value:  Size  Location     Type
  9786 ;;                  4    4[BANK0 ] unsigned char 
  9787 ;; Registers used:
  9788 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9789 ;; Tracked objects:
  9790 ;;		On entry : 0/0
  9791 ;;		On exit  : 0/0
  9792 ;;		Unchanged: 0/0
  9793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9794 ;;      Params:         0       8       0       0       0
  9795 ;;      Locals:         0      13       0       0       0
  9796 ;;      Temps:          0       5       0       0       0
  9797 ;;      Totals:         0      26       0       0       0
  9798 ;;Total ram usage:       26 bytes
  9799 ;; Hardware stack levels used:    1
  9800 ;; Hardware stack levels required when called:    1
  9801 ;; This function calls:
  9802 ;;		__Umul8_16
  9803 ;; This function is called by:
  9804 ;;		_ADC_channel1
  9805 ;;		_ADC_channel2
  9806 ;;		_fround
  9807 ;;		_scale
  9808 ;;		_sprintf
  9809 ;; This function uses a non-reentrant model
  9810 ;;
  9811                           
  9812                           
  9813                           ;psect for function ___flmul
  9814  0C9F                     ___flmul:
  9815  0C9F                     l2805:	
  9816                           ;incstack = 0
  9817                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9818                           
  9819  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  9820  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  9821  0CA1  0827               	movf	___flmul@b+3,w
  9822  0CA2  3980               	andlw	128
  9823  0CA3  00AC               	movwf	??___flmul
  9824  0CA4  082C               	movf	??___flmul,w
  9825  0CA5  00B1               	movwf	___flmul@sign
  9826  0CA6                     l2807:
  9827  0CA6  0827               	movf	___flmul@b+3,w
  9828  0CA7  00AC               	movwf	??___flmul
  9829  0CA8  072C               	addwf	??___flmul,w
  9830  0CA9  00AD               	movwf	??___flmul+1
  9831  0CAA  082D               	movf	??___flmul+1,w
  9832  0CAB  00B7               	movwf	___flmul@bexp
  9833  0CAC                     l2809:
  9834  0CAC  1FA6               	btfss	___flmul@b+2,7
  9835  0CAD  2CAF               	goto	u3891
  9836  0CAE  2CB0               	goto	u3890
  9837  0CAF                     u3891:
  9838  0CAF  2CB1               	goto	l2813
  9839  0CB0                     u3890:
  9840  0CB0                     l2811:
  9841  0CB0  1437               	bsf	___flmul@bexp,0
  9842  0CB1                     l2813:
  9843  0CB1  0837               	movf	___flmul@bexp,w
  9844  0CB2  1903               	btfsc	3,2
  9845  0CB3  2CB5               	goto	u3901
  9846  0CB4  2CB6               	goto	u3900
  9847  0CB5                     u3901:
  9848  0CB5  2CC5               	goto	l2821
  9849  0CB6                     u3900:
  9850  0CB6                     l2815:
  9851  0CB6  0A37               	incf	___flmul@bexp,w
  9852  0CB7  1D03               	btfss	3,2
  9853  0CB8  2CBA               	goto	u3911
  9854  0CB9  2CBB               	goto	u3910
  9855  0CBA                     u3911:
  9856  0CBA  2CC3               	goto	l2819
  9857  0CBB                     u3910:
  9858  0CBB                     l2817:
  9859  0CBB  3000               	movlw	0
  9860  0CBC  00A7               	movwf	___flmul@b+3
  9861  0CBD  3000               	movlw	0
  9862  0CBE  00A6               	movwf	___flmul@b+2
  9863  0CBF  3000               	movlw	0
  9864  0CC0  00A5               	movwf	___flmul@b+1
  9865  0CC1  3000               	movlw	0
  9866  0CC2  00A4               	movwf	___flmul@b
  9867  0CC3                     l2819:
  9868  0CC3  17A6               	bsf	___flmul@b+2,7
  9869  0CC4  2CCD               	goto	l2823
  9870  0CC5                     l2821:
  9871  0CC5  3000               	movlw	0
  9872  0CC6  00A7               	movwf	___flmul@b+3
  9873  0CC7  3000               	movlw	0
  9874  0CC8  00A6               	movwf	___flmul@b+2
  9875  0CC9  3000               	movlw	0
  9876  0CCA  00A5               	movwf	___flmul@b+1
  9877  0CCB  3000               	movlw	0
  9878  0CCC  00A4               	movwf	___flmul@b
  9879  0CCD                     l2823:
  9880  0CCD  082B               	movf	___flmul@a+3,w
  9881  0CCE  3980               	andlw	128
  9882  0CCF  00AC               	movwf	??___flmul
  9883  0CD0  082C               	movf	??___flmul,w
  9884  0CD1  06B1               	xorwf	___flmul@sign,f
  9885  0CD2                     l2825:
  9886  0CD2  082B               	movf	___flmul@a+3,w
  9887  0CD3  00AC               	movwf	??___flmul
  9888  0CD4  072C               	addwf	??___flmul,w
  9889  0CD5  00AD               	movwf	??___flmul+1
  9890  0CD6  082D               	movf	??___flmul+1,w
  9891  0CD7  00B6               	movwf	___flmul@aexp
  9892  0CD8                     l2827:
  9893  0CD8  1FAA               	btfss	___flmul@a+2,7
  9894  0CD9  2CDB               	goto	u3921
  9895  0CDA  2CDC               	goto	u3920
  9896  0CDB                     u3921:
  9897  0CDB  2CDD               	goto	l2831
  9898  0CDC                     u3920:
  9899  0CDC                     l2829:
  9900  0CDC  1436               	bsf	___flmul@aexp,0
  9901  0CDD                     l2831:
  9902  0CDD  0836               	movf	___flmul@aexp,w
  9903  0CDE  1903               	btfsc	3,2
  9904  0CDF  2CE1               	goto	u3931
  9905  0CE0  2CE2               	goto	u3930
  9906  0CE1                     u3931:
  9907  0CE1  2CF1               	goto	l2839
  9908  0CE2                     u3930:
  9909  0CE2                     l2833:
  9910  0CE2  0A36               	incf	___flmul@aexp,w
  9911  0CE3  1D03               	btfss	3,2
  9912  0CE4  2CE6               	goto	u3941
  9913  0CE5  2CE7               	goto	u3940
  9914  0CE6                     u3941:
  9915  0CE6  2CEF               	goto	l2837
  9916  0CE7                     u3940:
  9917  0CE7                     l2835:
  9918  0CE7  3000               	movlw	0
  9919  0CE8  00AB               	movwf	___flmul@a+3
  9920  0CE9  3000               	movlw	0
  9921  0CEA  00AA               	movwf	___flmul@a+2
  9922  0CEB  3000               	movlw	0
  9923  0CEC  00A9               	movwf	___flmul@a+1
  9924  0CED  3000               	movlw	0
  9925  0CEE  00A8               	movwf	___flmul@a
  9926  0CEF                     l2837:
  9927  0CEF  17AA               	bsf	___flmul@a+2,7
  9928  0CF0  2CF9               	goto	l2841
  9929  0CF1                     l2839:
  9930  0CF1  3000               	movlw	0
  9931  0CF2  00AB               	movwf	___flmul@a+3
  9932  0CF3  3000               	movlw	0
  9933  0CF4  00AA               	movwf	___flmul@a+2
  9934  0CF5  3000               	movlw	0
  9935  0CF6  00A9               	movwf	___flmul@a+1
  9936  0CF7  3000               	movlw	0
  9937  0CF8  00A8               	movwf	___flmul@a
  9938  0CF9                     l2841:
  9939  0CF9  0836               	movf	___flmul@aexp,w
  9940  0CFA  1903               	btfsc	3,2
  9941  0CFB  2CFD               	goto	u3951
  9942  0CFC  2CFE               	goto	u3950
  9943  0CFD                     u3951:
  9944  0CFD  2D03               	goto	l2845
  9945  0CFE                     u3950:
  9946  0CFE                     l2843:
  9947  0CFE  0837               	movf	___flmul@bexp,w
  9948  0CFF  1D03               	btfss	3,2
  9949  0D00  2D02               	goto	u3961
  9950  0D01  2D03               	goto	u3960
  9951  0D02                     u3961:
  9952  0D02  2D0C               	goto	l2849
  9953  0D03                     u3960:
  9954  0D03                     l2845:
  9955  0D03  3000               	movlw	0
  9956  0D04  00A7               	movwf	?___flmul+3
  9957  0D05  3000               	movlw	0
  9958  0D06  00A6               	movwf	?___flmul+2
  9959  0D07  3000               	movlw	0
  9960  0D08  00A5               	movwf	?___flmul+1
  9961  0D09  3000               	movlw	0
  9962  0D0A  00A4               	movwf	?___flmul
  9963  0D0B  2FFF               	goto	l817
  9964  0D0C                     l2849:
  9965  0D0C  0824               	movf	___flmul@b,w
  9966  0D0D  00AC               	movwf	??___flmul
  9967  0D0E  082C               	movf	??___flmul,w
  9968  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  9969  0D10  082A               	movf	___flmul@a+2,w
  9970  0D11  160A  158A  224E  120A  158A  	fcall	__Umul8_16
  9971  0D16  0871               	movf	?__Umul8_16+1,w
  9972  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  9973  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  9974  0D19  00BD               	movwf	___flmul@temp+1
  9975  0D1A  0870               	movf	?__Umul8_16,w
  9976  0D1B  00BC               	movwf	___flmul@temp
  9977  0D1C                     l2851:
  9978  0D1C  083C               	movf	___flmul@temp,w
  9979  0D1D  00AC               	movwf	??___flmul
  9980  0D1E  01AD               	clrf	??___flmul+1
  9981  0D1F  01AE               	clrf	??___flmul+2
  9982  0D20  01AF               	clrf	??___flmul+3
  9983  0D21  082F               	movf	??___flmul+3,w
  9984  0D22  00B5               	movwf	___flmul@grs+3
  9985  0D23  082E               	movf	??___flmul+2,w
  9986  0D24  00B4               	movwf	___flmul@grs+2
  9987  0D25  082D               	movf	??___flmul+1,w
  9988  0D26  00B3               	movwf	___flmul@grs+1
  9989  0D27  082C               	movf	??___flmul,w
  9990  0D28  00B2               	movwf	___flmul@grs
  9991  0D29                     l2853:
  9992  0D29  083D               	movf	___flmul@temp+1,w
  9993  0D2A  00AC               	movwf	??___flmul
  9994  0D2B  01AD               	clrf	??___flmul+1
  9995  0D2C  01AE               	clrf	??___flmul+2
  9996  0D2D  01AF               	clrf	??___flmul+3
  9997  0D2E  082F               	movf	??___flmul+3,w
  9998  0D2F  00BB               	movwf	___flmul@prod+3
  9999  0D30  082E               	movf	??___flmul+2,w
 10000  0D31  00BA               	movwf	___flmul@prod+2
 10001  0D32  082D               	movf	??___flmul+1,w
 10002  0D33  00B9               	movwf	___flmul@prod+1
 10003  0D34  082C               	movf	??___flmul,w
 10004  0D35  00B8               	movwf	___flmul@prod
 10005  0D36  0825               	movf	___flmul@b+1,w
 10006  0D37  00AC               	movwf	??___flmul
 10007  0D38  082C               	movf	??___flmul,w
 10008  0D39  00F0               	movwf	__Umul8_16@multiplicand
 10009  0D3A  0829               	movf	___flmul@a+1,w
 10010  0D3B  160A  158A  224E  120A  158A  	fcall	__Umul8_16
 10011  0D40  0871               	movf	?__Umul8_16+1,w
 10012  0D41  1283               	bcf	3,5	;RP0=0, select bank0
 10013  0D42  1303               	bcf	3,6	;RP1=0, select bank0
 10014  0D43  00BD               	movwf	___flmul@temp+1
 10015  0D44  0870               	movf	?__Umul8_16,w
 10016  0D45  00BC               	movwf	___flmul@temp
 10017  0D46                     l2855:
 10018  0D46  083C               	movf	___flmul@temp,w
 10019  0D47  00AC               	movwf	??___flmul
 10020  0D48  01AD               	clrf	??___flmul+1
 10021  0D49  01AE               	clrf	??___flmul+2
 10022  0D4A  01AF               	clrf	??___flmul+3
 10023  0D4B  082C               	movf	??___flmul,w
 10024  0D4C  07B2               	addwf	___flmul@grs,f
 10025  0D4D  082D               	movf	??___flmul+1,w
 10026  0D4E  1103               	clrz
 10027  0D4F  1803               	skipnc
 10028  0D50  3E01               	addlw	1
 10029  0D51  1903               	skipnz
 10030  0D52  2D54               	goto	u3971
 10031  0D53  07B3               	addwf	___flmul@grs+1,f
 10032  0D54                     u3971:
 10033  0D54  082E               	movf	??___flmul+2,w
 10034  0D55  1103               	clrz
 10035  0D56  1803               	skipnc
 10036  0D57  3E01               	addlw	1
 10037  0D58  1903               	skipnz
 10038  0D59  2D5B               	goto	u3972
 10039  0D5A  07B4               	addwf	___flmul@grs+2,f
 10040  0D5B                     u3972:
 10041  0D5B  082F               	movf	??___flmul+3,w
 10042  0D5C  1103               	clrz
 10043  0D5D  1803               	skipnc
 10044  0D5E  3E01               	addlw	1
 10045  0D5F  1903               	skipnz
 10046  0D60  2D62               	goto	u3973
 10047  0D61  07B5               	addwf	___flmul@grs+3,f
 10048  0D62                     u3973:
 10049  0D62                     l2857:
 10050  0D62  083D               	movf	___flmul@temp+1,w
 10051  0D63  00AC               	movwf	??___flmul
 10052  0D64  01AD               	clrf	??___flmul+1
 10053  0D65  01AE               	clrf	??___flmul+2
 10054  0D66  01AF               	clrf	??___flmul+3
 10055  0D67  082C               	movf	??___flmul,w
 10056  0D68  07B8               	addwf	___flmul@prod,f
 10057  0D69  082D               	movf	??___flmul+1,w
 10058  0D6A  1103               	clrz
 10059  0D6B  1803               	skipnc
 10060  0D6C  3E01               	addlw	1
 10061  0D6D  1903               	skipnz
 10062  0D6E  2D70               	goto	u3981
 10063  0D6F  07B9               	addwf	___flmul@prod+1,f
 10064  0D70                     u3981:
 10065  0D70  082E               	movf	??___flmul+2,w
 10066  0D71  1103               	clrz
 10067  0D72  1803               	skipnc
 10068  0D73  3E01               	addlw	1
 10069  0D74  1903               	skipnz
 10070  0D75  2D77               	goto	u3982
 10071  0D76  07BA               	addwf	___flmul@prod+2,f
 10072  0D77                     u3982:
 10073  0D77  082F               	movf	??___flmul+3,w
 10074  0D78  1103               	clrz
 10075  0D79  1803               	skipnc
 10076  0D7A  3E01               	addlw	1
 10077  0D7B  1903               	skipnz
 10078  0D7C  2D7E               	goto	u3983
 10079  0D7D  07BB               	addwf	___flmul@prod+3,f
 10080  0D7E                     u3983:
 10081  0D7E  0826               	movf	___flmul@b+2,w
 10082  0D7F  00AC               	movwf	??___flmul
 10083  0D80  082C               	movf	??___flmul,w
 10084  0D81  00F0               	movwf	__Umul8_16@multiplicand
 10085  0D82  0828               	movf	___flmul@a,w
 10086  0D83  160A  158A  224E  120A  158A  	fcall	__Umul8_16
 10087  0D88  0871               	movf	?__Umul8_16+1,w
 10088  0D89  1283               	bcf	3,5	;RP0=0, select bank0
 10089  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
 10090  0D8B  00BD               	movwf	___flmul@temp+1
 10091  0D8C  0870               	movf	?__Umul8_16,w
 10092  0D8D  00BC               	movwf	___flmul@temp
 10093  0D8E                     l2859:
 10094  0D8E  083C               	movf	___flmul@temp,w
 10095  0D8F  00AC               	movwf	??___flmul
 10096  0D90  01AD               	clrf	??___flmul+1
 10097  0D91  01AE               	clrf	??___flmul+2
 10098  0D92  01AF               	clrf	??___flmul+3
 10099  0D93  082C               	movf	??___flmul,w
 10100  0D94  07B2               	addwf	___flmul@grs,f
 10101  0D95  082D               	movf	??___flmul+1,w
 10102  0D96  1103               	clrz
 10103  0D97  1803               	skipnc
 10104  0D98  3E01               	addlw	1
 10105  0D99  1903               	skipnz
 10106  0D9A  2D9C               	goto	u3991
 10107  0D9B  07B3               	addwf	___flmul@grs+1,f
 10108  0D9C                     u3991:
 10109  0D9C  082E               	movf	??___flmul+2,w
 10110  0D9D  1103               	clrz
 10111  0D9E  1803               	skipnc
 10112  0D9F  3E01               	addlw	1
 10113  0DA0  1903               	skipnz
 10114  0DA1  2DA3               	goto	u3992
 10115  0DA2  07B4               	addwf	___flmul@grs+2,f
 10116  0DA3                     u3992:
 10117  0DA3  082F               	movf	??___flmul+3,w
 10118  0DA4  1103               	clrz
 10119  0DA5  1803               	skipnc
 10120  0DA6  3E01               	addlw	1
 10121  0DA7  1903               	skipnz
 10122  0DA8  2DAA               	goto	u3993
 10123  0DA9  07B5               	addwf	___flmul@grs+3,f
 10124  0DAA                     u3993:
 10125  0DAA                     l2861:
 10126  0DAA  083D               	movf	___flmul@temp+1,w
 10127  0DAB  00AC               	movwf	??___flmul
 10128  0DAC  01AD               	clrf	??___flmul+1
 10129  0DAD  01AE               	clrf	??___flmul+2
 10130  0DAE  01AF               	clrf	??___flmul+3
 10131  0DAF  082C               	movf	??___flmul,w
 10132  0DB0  07B8               	addwf	___flmul@prod,f
 10133  0DB1  082D               	movf	??___flmul+1,w
 10134  0DB2  1103               	clrz
 10135  0DB3  1803               	skipnc
 10136  0DB4  3E01               	addlw	1
 10137  0DB5  1903               	skipnz
 10138  0DB6  2DB8               	goto	u4001
 10139  0DB7  07B9               	addwf	___flmul@prod+1,f
 10140  0DB8                     u4001:
 10141  0DB8  082E               	movf	??___flmul+2,w
 10142  0DB9  1103               	clrz
 10143  0DBA  1803               	skipnc
 10144  0DBB  3E01               	addlw	1
 10145  0DBC  1903               	skipnz
 10146  0DBD  2DBF               	goto	u4002
 10147  0DBE  07BA               	addwf	___flmul@prod+2,f
 10148  0DBF                     u4002:
 10149  0DBF  082F               	movf	??___flmul+3,w
 10150  0DC0  1103               	clrz
 10151  0DC1  1803               	skipnc
 10152  0DC2  3E01               	addlw	1
 10153  0DC3  1903               	skipnz
 10154  0DC4  2DC6               	goto	u4003
 10155  0DC5  07BB               	addwf	___flmul@prod+3,f
 10156  0DC6                     u4003:
 10157  0DC6                     l2863:
 10158  0DC6  3008               	movlw	8
 10159  0DC7  00AC               	movwf	??___flmul
 10160  0DC8                     u4015:
 10161  0DC8  1003               	clrc
 10162  0DC9  0DB2               	rlf	___flmul@grs,f
 10163  0DCA  0DB3               	rlf	___flmul@grs+1,f
 10164  0DCB  0DB4               	rlf	___flmul@grs+2,f
 10165  0DCC  0DB5               	rlf	___flmul@grs+3,f
 10166  0DCD  0BAC               	decfsz	??___flmul,f
 10167  0DCE  2DC8               	goto	u4015
 10168  0DCF                     l2865:
 10169  0DCF  0825               	movf	___flmul@b+1,w
 10170  0DD0  00AC               	movwf	??___flmul
 10171  0DD1  082C               	movf	??___flmul,w
 10172  0DD2  00F0               	movwf	__Umul8_16@multiplicand
 10173  0DD3  0828               	movf	___flmul@a,w
 10174  0DD4  160A  158A  224E  120A  158A  	fcall	__Umul8_16
 10175  0DD9  0871               	movf	?__Umul8_16+1,w
 10176  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
 10177  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
 10178  0DDC  00BD               	movwf	___flmul@temp+1
 10179  0DDD  0870               	movf	?__Umul8_16,w
 10180  0DDE  00BC               	movwf	___flmul@temp
 10181  0DDF                     l2867:
 10182  0DDF  083C               	movf	___flmul@temp,w
 10183  0DE0  00AC               	movwf	??___flmul
 10184  0DE1  083D               	movf	___flmul@temp+1,w
 10185  0DE2  00AD               	movwf	??___flmul+1
 10186  0DE3  01AE               	clrf	??___flmul+2
 10187  0DE4  01AF               	clrf	??___flmul+3
 10188  0DE5  082C               	movf	??___flmul,w
 10189  0DE6  07B2               	addwf	___flmul@grs,f
 10190  0DE7  082D               	movf	??___flmul+1,w
 10191  0DE8  1103               	clrz
 10192  0DE9  1803               	skipnc
 10193  0DEA  3E01               	addlw	1
 10194  0DEB  1903               	skipnz
 10195  0DEC  2DEE               	goto	u4021
 10196  0DED  07B3               	addwf	___flmul@grs+1,f
 10197  0DEE                     u4021:
 10198  0DEE  082E               	movf	??___flmul+2,w
 10199  0DEF  1103               	clrz
 10200  0DF0  1803               	skipnc
 10201  0DF1  3E01               	addlw	1
 10202  0DF2  1903               	skipnz
 10203  0DF3  2DF5               	goto	u4022
 10204  0DF4  07B4               	addwf	___flmul@grs+2,f
 10205  0DF5                     u4022:
 10206  0DF5  082F               	movf	??___flmul+3,w
 10207  0DF6  1103               	clrz
 10208  0DF7  1803               	skipnc
 10209  0DF8  3E01               	addlw	1
 10210  0DF9  1903               	skipnz
 10211  0DFA  2DFC               	goto	u4023
 10212  0DFB  07B5               	addwf	___flmul@grs+3,f
 10213  0DFC                     u4023:
 10214  0DFC                     l2869:
 10215  0DFC  0824               	movf	___flmul@b,w
 10216  0DFD  00AC               	movwf	??___flmul
 10217  0DFE  082C               	movf	??___flmul,w
 10218  0DFF  00F0               	movwf	__Umul8_16@multiplicand
 10219  0E00  0829               	movf	___flmul@a+1,w
 10220  0E01  160A  158A  224E  120A  158A  	fcall	__Umul8_16
 10221  0E06  0871               	movf	?__Umul8_16+1,w
 10222  0E07  1283               	bcf	3,5	;RP0=0, select bank0
 10223  0E08  1303               	bcf	3,6	;RP1=0, select bank0
 10224  0E09  00BD               	movwf	___flmul@temp+1
 10225  0E0A  0870               	movf	?__Umul8_16,w
 10226  0E0B  00BC               	movwf	___flmul@temp
 10227  0E0C                     l2871:
 10228  0E0C  083C               	movf	___flmul@temp,w
 10229  0E0D  00AC               	movwf	??___flmul
 10230  0E0E  083D               	movf	___flmul@temp+1,w
 10231  0E0F  00AD               	movwf	??___flmul+1
 10232  0E10  01AE               	clrf	??___flmul+2
 10233  0E11  01AF               	clrf	??___flmul+3
 10234  0E12  082C               	movf	??___flmul,w
 10235  0E13  07B2               	addwf	___flmul@grs,f
 10236  0E14  082D               	movf	??___flmul+1,w
 10237  0E15  1103               	clrz
 10238  0E16  1803               	skipnc
 10239  0E17  3E01               	addlw	1
 10240  0E18  1903               	skipnz
 10241  0E19  2E1B               	goto	u4031
 10242  0E1A  07B3               	addwf	___flmul@grs+1,f
 10243  0E1B                     u4031:
 10244  0E1B  082E               	movf	??___flmul+2,w
 10245  0E1C  1103               	clrz
 10246  0E1D  1803               	skipnc
 10247  0E1E  3E01               	addlw	1
 10248  0E1F  1903               	skipnz
 10249  0E20  2E22               	goto	u4032
 10250  0E21  07B4               	addwf	___flmul@grs+2,f
 10251  0E22                     u4032:
 10252  0E22  082F               	movf	??___flmul+3,w
 10253  0E23  1103               	clrz
 10254  0E24  1803               	skipnc
 10255  0E25  3E01               	addlw	1
 10256  0E26  1903               	skipnz
 10257  0E27  2E29               	goto	u4033
 10258  0E28  07B5               	addwf	___flmul@grs+3,f
 10259  0E29                     u4033:
 10260  0E29                     l2873:
 10261  0E29  3008               	movlw	8
 10262  0E2A  00AC               	movwf	??___flmul
 10263  0E2B                     u4045:
 10264  0E2B  1003               	clrc
 10265  0E2C  0DB2               	rlf	___flmul@grs,f
 10266  0E2D  0DB3               	rlf	___flmul@grs+1,f
 10267  0E2E  0DB4               	rlf	___flmul@grs+2,f
 10268  0E2F  0DB5               	rlf	___flmul@grs+3,f
 10269  0E30  0BAC               	decfsz	??___flmul,f
 10270  0E31  2E2B               	goto	u4045
 10271  0E32  0824               	movf	___flmul@b,w
 10272  0E33  00AC               	movwf	??___flmul
 10273  0E34  082C               	movf	??___flmul,w
 10274  0E35  00F0               	movwf	__Umul8_16@multiplicand
 10275  0E36  0828               	movf	___flmul@a,w
 10276  0E37  160A  158A  224E  120A  158A  	fcall	__Umul8_16
 10277  0E3C  0871               	movf	?__Umul8_16+1,w
 10278  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
 10279  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
 10280  0E3F  00BD               	movwf	___flmul@temp+1
 10281  0E40  0870               	movf	?__Umul8_16,w
 10282  0E41  00BC               	movwf	___flmul@temp
 10283  0E42                     l2875:
 10284  0E42  083C               	movf	___flmul@temp,w
 10285  0E43  00AC               	movwf	??___flmul
 10286  0E44  083D               	movf	___flmul@temp+1,w
 10287  0E45  00AD               	movwf	??___flmul+1
 10288  0E46  01AE               	clrf	??___flmul+2
 10289  0E47  01AF               	clrf	??___flmul+3
 10290  0E48  082C               	movf	??___flmul,w
 10291  0E49  07B2               	addwf	___flmul@grs,f
 10292  0E4A  082D               	movf	??___flmul+1,w
 10293  0E4B  1103               	clrz
 10294  0E4C  1803               	skipnc
 10295  0E4D  3E01               	addlw	1
 10296  0E4E  1903               	skipnz
 10297  0E4F  2E51               	goto	u4051
 10298  0E50  07B3               	addwf	___flmul@grs+1,f
 10299  0E51                     u4051:
 10300  0E51  082E               	movf	??___flmul+2,w
 10301  0E52  1103               	clrz
 10302  0E53  1803               	skipnc
 10303  0E54  3E01               	addlw	1
 10304  0E55  1903               	skipnz
 10305  0E56  2E58               	goto	u4052
 10306  0E57  07B4               	addwf	___flmul@grs+2,f
 10307  0E58                     u4052:
 10308  0E58  082F               	movf	??___flmul+3,w
 10309  0E59  1103               	clrz
 10310  0E5A  1803               	skipnc
 10311  0E5B  3E01               	addlw	1
 10312  0E5C  1903               	skipnz
 10313  0E5D  2E5F               	goto	u4053
 10314  0E5E  07B5               	addwf	___flmul@grs+3,f
 10315  0E5F                     u4053:
 10316  0E5F                     l2877:
 10317  0E5F  0825               	movf	___flmul@b+1,w
 10318  0E60  00AC               	movwf	??___flmul
 10319  0E61  082C               	movf	??___flmul,w
 10320  0E62  00F0               	movwf	__Umul8_16@multiplicand
 10321  0E63  082A               	movf	___flmul@a+2,w
 10322  0E64  160A  158A  224E  120A  158A  	fcall	__Umul8_16
 10323  0E69  0871               	movf	?__Umul8_16+1,w
 10324  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
 10325  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
 10326  0E6C  00BD               	movwf	___flmul@temp+1
 10327  0E6D  0870               	movf	?__Umul8_16,w
 10328  0E6E  00BC               	movwf	___flmul@temp
 10329  0E6F  083C               	movf	___flmul@temp,w
 10330  0E70  00AC               	movwf	??___flmul
 10331  0E71  083D               	movf	___flmul@temp+1,w
 10332  0E72  00AD               	movwf	??___flmul+1
 10333  0E73  01AE               	clrf	??___flmul+2
 10334  0E74  01AF               	clrf	??___flmul+3
 10335  0E75  082C               	movf	??___flmul,w
 10336  0E76  07B8               	addwf	___flmul@prod,f
 10337  0E77  082D               	movf	??___flmul+1,w
 10338  0E78  1103               	clrz
 10339  0E79  1803               	skipnc
 10340  0E7A  3E01               	addlw	1
 10341  0E7B  1903               	skipnz
 10342  0E7C  2E7E               	goto	u4061
 10343  0E7D  07B9               	addwf	___flmul@prod+1,f
 10344  0E7E                     u4061:
 10345  0E7E  082E               	movf	??___flmul+2,w
 10346  0E7F  1103               	clrz
 10347  0E80  1803               	skipnc
 10348  0E81  3E01               	addlw	1
 10349  0E82  1903               	skipnz
 10350  0E83  2E85               	goto	u4062
 10351  0E84  07BA               	addwf	___flmul@prod+2,f
 10352  0E85                     u4062:
 10353  0E85  082F               	movf	??___flmul+3,w
 10354  0E86  1103               	clrz
 10355  0E87  1803               	skipnc
 10356  0E88  3E01               	addlw	1
 10357  0E89  1903               	skipnz
 10358  0E8A  2E8C               	goto	u4063
 10359  0E8B  07BB               	addwf	___flmul@prod+3,f
 10360  0E8C                     u4063:
 10361  0E8C                     l2879:
 10362  0E8C  0826               	movf	___flmul@b+2,w
 10363  0E8D  00AC               	movwf	??___flmul
 10364  0E8E  082C               	movf	??___flmul,w
 10365  0E8F  00F0               	movwf	__Umul8_16@multiplicand
 10366  0E90  0829               	movf	___flmul@a+1,w
 10367  0E91  160A  158A  224E  120A  158A  	fcall	__Umul8_16
 10368  0E96  0871               	movf	?__Umul8_16+1,w
 10369  0E97  1283               	bcf	3,5	;RP0=0, select bank0
 10370  0E98  1303               	bcf	3,6	;RP1=0, select bank0
 10371  0E99  00BD               	movwf	___flmul@temp+1
 10372  0E9A  0870               	movf	?__Umul8_16,w
 10373  0E9B  00BC               	movwf	___flmul@temp
 10374  0E9C                     l2881:
 10375  0E9C  083C               	movf	___flmul@temp,w
 10376  0E9D  00AC               	movwf	??___flmul
 10377  0E9E  083D               	movf	___flmul@temp+1,w
 10378  0E9F  00AD               	movwf	??___flmul+1
 10379  0EA0  01AE               	clrf	??___flmul+2
 10380  0EA1  01AF               	clrf	??___flmul+3
 10381  0EA2  082C               	movf	??___flmul,w
 10382  0EA3  07B8               	addwf	___flmul@prod,f
 10383  0EA4  082D               	movf	??___flmul+1,w
 10384  0EA5  1103               	clrz
 10385  0EA6  1803               	skipnc
 10386  0EA7  3E01               	addlw	1
 10387  0EA8  1903               	skipnz
 10388  0EA9  2EAB               	goto	u4071
 10389  0EAA  07B9               	addwf	___flmul@prod+1,f
 10390  0EAB                     u4071:
 10391  0EAB  082E               	movf	??___flmul+2,w
 10392  0EAC  1103               	clrz
 10393  0EAD  1803               	skipnc
 10394  0EAE  3E01               	addlw	1
 10395  0EAF  1903               	skipnz
 10396  0EB0  2EB2               	goto	u4072
 10397  0EB1  07BA               	addwf	___flmul@prod+2,f
 10398  0EB2                     u4072:
 10399  0EB2  082F               	movf	??___flmul+3,w
 10400  0EB3  1103               	clrz
 10401  0EB4  1803               	skipnc
 10402  0EB5  3E01               	addlw	1
 10403  0EB6  1903               	skipnz
 10404  0EB7  2EB9               	goto	u4073
 10405  0EB8  07BB               	addwf	___flmul@prod+3,f
 10406  0EB9                     u4073:
 10407  0EB9  0826               	movf	___flmul@b+2,w
 10408  0EBA  00AC               	movwf	??___flmul
 10409  0EBB  082C               	movf	??___flmul,w
 10410  0EBC  00F0               	movwf	__Umul8_16@multiplicand
 10411  0EBD  082A               	movf	___flmul@a+2,w
 10412  0EBE  160A  158A  224E  120A  158A  	fcall	__Umul8_16
 10413  0EC3  0871               	movf	?__Umul8_16+1,w
 10414  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
 10415  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
 10416  0EC6  00BD               	movwf	___flmul@temp+1
 10417  0EC7  0870               	movf	?__Umul8_16,w
 10418  0EC8  00BC               	movwf	___flmul@temp
 10419  0EC9                     l2883:
 10420  0EC9  083C               	movf	___flmul@temp,w
 10421  0ECA  00AC               	movwf	??___flmul
 10422  0ECB  083D               	movf	___flmul@temp+1,w
 10423  0ECC  00AD               	movwf	??___flmul+1
 10424  0ECD  01AE               	clrf	??___flmul+2
 10425  0ECE  01AF               	clrf	??___flmul+3
 10426  0ECF  3008               	movlw	8
 10427  0ED0                     u4085:
 10428  0ED0  1003               	clrc
 10429  0ED1  0DAC               	rlf	??___flmul,f
 10430  0ED2  0DAD               	rlf	??___flmul+1,f
 10431  0ED3  0DAE               	rlf	??___flmul+2,f
 10432  0ED4  0DAF               	rlf	??___flmul+3,f
 10433  0ED5                     u4080:
 10434  0ED5  3EFF               	addlw	-1
 10435  0ED6  1D03               	skipz
 10436  0ED7  2ED0               	goto	u4085
 10437  0ED8  082C               	movf	??___flmul,w
 10438  0ED9  07B8               	addwf	___flmul@prod,f
 10439  0EDA  082D               	movf	??___flmul+1,w
 10440  0EDB  1103               	clrz
 10441  0EDC  1803               	skipnc
 10442  0EDD  3E01               	addlw	1
 10443  0EDE  1903               	skipnz
 10444  0EDF  2EE1               	goto	u4091
 10445  0EE0  07B9               	addwf	___flmul@prod+1,f
 10446  0EE1                     u4091:
 10447  0EE1  082E               	movf	??___flmul+2,w
 10448  0EE2  1103               	clrz
 10449  0EE3  1803               	skipnc
 10450  0EE4  3E01               	addlw	1
 10451  0EE5  1903               	skipnz
 10452  0EE6  2EE8               	goto	u4092
 10453  0EE7  07BA               	addwf	___flmul@prod+2,f
 10454  0EE8                     u4092:
 10455  0EE8  082F               	movf	??___flmul+3,w
 10456  0EE9  1103               	clrz
 10457  0EEA  1803               	skipnc
 10458  0EEB  3E01               	addlw	1
 10459  0EEC  1903               	skipnz
 10460  0EED  2EEF               	goto	u4093
 10461  0EEE  07BB               	addwf	___flmul@prod+3,f
 10462  0EEF                     u4093:
 10463  0EEF                     l2885:
 10464  0EEF  0832               	movf	___flmul@grs,w
 10465  0EF0  00AC               	movwf	??___flmul
 10466  0EF1  0833               	movf	___flmul@grs+1,w
 10467  0EF2  00AD               	movwf	??___flmul+1
 10468  0EF3  0834               	movf	___flmul@grs+2,w
 10469  0EF4  00AE               	movwf	??___flmul+2
 10470  0EF5  0835               	movf	___flmul@grs+3,w
 10471  0EF6  00AF               	movwf	??___flmul+3
 10472  0EF7  3018               	movlw	24
 10473  0EF8                     u4105:
 10474  0EF8  1003               	clrc
 10475  0EF9  0CAF               	rrf	??___flmul+3,f
 10476  0EFA  0CAE               	rrf	??___flmul+2,f
 10477  0EFB  0CAD               	rrf	??___flmul+1,f
 10478  0EFC  0CAC               	rrf	??___flmul,f
 10479  0EFD                     u4100:
 10480  0EFD  3EFF               	addlw	-1
 10481  0EFE  1D03               	skipz
 10482  0EFF  2EF8               	goto	u4105
 10483  0F00  082C               	movf	??___flmul,w
 10484  0F01  07B8               	addwf	___flmul@prod,f
 10485  0F02  082D               	movf	??___flmul+1,w
 10486  0F03  1103               	clrz
 10487  0F04  1803               	skipnc
 10488  0F05  3E01               	addlw	1
 10489  0F06  1903               	skipnz
 10490  0F07  2F09               	goto	u4111
 10491  0F08  07B9               	addwf	___flmul@prod+1,f
 10492  0F09                     u4111:
 10493  0F09  082E               	movf	??___flmul+2,w
 10494  0F0A  1103               	clrz
 10495  0F0B  1803               	skipnc
 10496  0F0C  3E01               	addlw	1
 10497  0F0D  1903               	skipnz
 10498  0F0E  2F10               	goto	u4112
 10499  0F0F  07BA               	addwf	___flmul@prod+2,f
 10500  0F10                     u4112:
 10501  0F10  082F               	movf	??___flmul+3,w
 10502  0F11  1103               	clrz
 10503  0F12  1803               	skipnc
 10504  0F13  3E01               	addlw	1
 10505  0F14  1903               	skipnz
 10506  0F15  2F17               	goto	u4113
 10507  0F16  07BB               	addwf	___flmul@prod+3,f
 10508  0F17                     u4113:
 10509  0F17                     l2887:
 10510  0F17  3008               	movlw	8
 10511  0F18  00AC               	movwf	??___flmul
 10512  0F19                     u4125:
 10513  0F19  1003               	clrc
 10514  0F1A  0DB2               	rlf	___flmul@grs,f
 10515  0F1B  0DB3               	rlf	___flmul@grs+1,f
 10516  0F1C  0DB4               	rlf	___flmul@grs+2,f
 10517  0F1D  0DB5               	rlf	___flmul@grs+3,f
 10518  0F1E  0BAC               	decfsz	??___flmul,f
 10519  0F1F  2F19               	goto	u4125
 10520  0F20                     l2889:
 10521  0F20  0837               	movf	___flmul@bexp,w
 10522  0F21  0736               	addwf	___flmul@aexp,w
 10523  0F22  00AC               	movwf	??___flmul
 10524  0F23  01AD               	clrf	??___flmul+1
 10525  0F24  0DAD               	rlf	??___flmul+1,f
 10526  0F25  082C               	movf	??___flmul,w
 10527  0F26  3E82               	addlw	130
 10528  0F27  00BC               	movwf	___flmul@temp
 10529  0F28  082D               	movf	??___flmul+1,w
 10530  0F29  1803               	skipnc
 10531  0F2A  3E01               	addlw	1
 10532  0F2B  3EFF               	addlw	255
 10533  0F2C  00BD               	movwf	___flmul@temp+1
 10534  0F2D  2F4B               	goto	l2901
 10535  0F2E                     l2891:
 10536  0F2E  3001               	movlw	1
 10537  0F2F  00AC               	movwf	??___flmul
 10538  0F30                     u4135:
 10539  0F30  1003               	clrc
 10540  0F31  0DB8               	rlf	___flmul@prod,f
 10541  0F32  0DB9               	rlf	___flmul@prod+1,f
 10542  0F33  0DBA               	rlf	___flmul@prod+2,f
 10543  0F34  0DBB               	rlf	___flmul@prod+3,f
 10544  0F35  0BAC               	decfsz	??___flmul,f
 10545  0F36  2F30               	goto	u4135
 10546  0F37                     l2893:
 10547  0F37  1FB5               	btfss	___flmul@grs+3,7
 10548  0F38  2F3A               	goto	u4141
 10549  0F39  2F3B               	goto	u4140
 10550  0F3A                     u4141:
 10551  0F3A  2F3C               	goto	l2897
 10552  0F3B                     u4140:
 10553  0F3B                     l2895:
 10554  0F3B  1438               	bsf	___flmul@prod,0
 10555  0F3C                     l2897:
 10556  0F3C  3001               	movlw	1
 10557  0F3D  00AC               	movwf	??___flmul
 10558  0F3E                     u4155:
 10559  0F3E  1003               	clrc
 10560  0F3F  0DB2               	rlf	___flmul@grs,f
 10561  0F40  0DB3               	rlf	___flmul@grs+1,f
 10562  0F41  0DB4               	rlf	___flmul@grs+2,f
 10563  0F42  0DB5               	rlf	___flmul@grs+3,f
 10564  0F43  0BAC               	decfsz	??___flmul,f
 10565  0F44  2F3E               	goto	u4155
 10566  0F45                     l2899:
 10567  0F45  30FF               	movlw	255
 10568  0F46  07BC               	addwf	___flmul@temp,f
 10569  0F47  1803               	skipnc
 10570  0F48  0ABD               	incf	___flmul@temp+1,f
 10571  0F49  30FF               	movlw	255
 10572  0F4A  07BD               	addwf	___flmul@temp+1,f
 10573  0F4B                     l2901:
 10574  0F4B  1FBA               	btfss	___flmul@prod+2,7
 10575  0F4C  2F4E               	goto	u4161
 10576  0F4D  2F4F               	goto	u4160
 10577  0F4E                     u4161:
 10578  0F4E  2F2E               	goto	l2891
 10579  0F4F                     u4160:
 10580  0F4F                     l2903:
 10581  0F4F  01B6               	clrf	___flmul@aexp
 10582  0F50                     l2905:
 10583  0F50  1FB5               	btfss	___flmul@grs+3,7
 10584  0F51  2F53               	goto	u4171
 10585  0F52  2F54               	goto	u4170
 10586  0F53                     u4171:
 10587  0F53  2F70               	goto	l2913
 10588  0F54                     u4170:
 10589  0F54                     l2907:
 10590  0F54  30FF               	movlw	255
 10591  0F55  0532               	andwf	___flmul@grs,w
 10592  0F56  00AC               	movwf	??___flmul
 10593  0F57  30FF               	movlw	255
 10594  0F58  0533               	andwf	___flmul@grs+1,w
 10595  0F59  00AD               	movwf	??___flmul+1
 10596  0F5A  30FF               	movlw	255
 10597  0F5B  0534               	andwf	___flmul@grs+2,w
 10598  0F5C  00AE               	movwf	??___flmul+2
 10599  0F5D  307F               	movlw	127
 10600  0F5E  0535               	andwf	___flmul@grs+3,w
 10601  0F5F  00AF               	movwf	??___flmul+3
 10602  0F60  082F               	movf	??___flmul+3,w
 10603  0F61  042E               	iorwf	??___flmul+2,w
 10604  0F62  042D               	iorwf	??___flmul+1,w
 10605  0F63  042C               	iorwf	??___flmul,w
 10606  0F64  1903               	skipnz
 10607  0F65  2F67               	goto	u4181
 10608  0F66  2F68               	goto	u4180
 10609  0F67                     u4181:
 10610  0F67  2F6B               	goto	l823
 10611  0F68                     u4180:
 10612  0F68                     l2909:
 10613  0F68  01B6               	clrf	___flmul@aexp
 10614  0F69  0AB6               	incf	___flmul@aexp,f
 10615  0F6A  2F70               	goto	l2913
 10616  0F6B                     l823:
 10617  0F6B  1C38               	btfss	___flmul@prod,0
 10618  0F6C  2F6E               	goto	u4191
 10619  0F6D  2F6F               	goto	u4190
 10620  0F6E                     u4191:
 10621  0F6E  2F70               	goto	l2913
 10622  0F6F                     u4190:
 10623  0F6F  2F68               	goto	l2909
 10624  0F70                     l2913:
 10625  0F70  0836               	movf	___flmul@aexp,w
 10626  0F71  1903               	btfsc	3,2
 10627  0F72  2F74               	goto	u4201
 10628  0F73  2F75               	goto	u4200
 10629  0F74                     u4201:
 10630  0F74  2FA6               	goto	l2923
 10631  0F75                     u4200:
 10632  0F75                     l2915:
 10633  0F75  3001               	movlw	1
 10634  0F76  07B8               	addwf	___flmul@prod,f
 10635  0F77  3000               	movlw	0
 10636  0F78  1803               	skipnc
 10637  0F79  3001               	movlw	1
 10638  0F7A  07B9               	addwf	___flmul@prod+1,f
 10639  0F7B  3000               	movlw	0
 10640  0F7C  1803               	skipnc
 10641  0F7D  3001               	movlw	1
 10642  0F7E  07BA               	addwf	___flmul@prod+2,f
 10643  0F7F  3000               	movlw	0
 10644  0F80  1803               	skipnc
 10645  0F81  3001               	movlw	1
 10646  0F82  07BB               	addwf	___flmul@prod+3,f
 10647  0F83                     l2917:
 10648  0F83  1C3B               	btfss	___flmul@prod+3,0
 10649  0F84  2F86               	goto	u4211
 10650  0F85  2F87               	goto	u4210
 10651  0F86                     u4211:
 10652  0F86  2FA6               	goto	l2923
 10653  0F87                     u4210:
 10654  0F87                     l2919:
 10655  0F87  0838               	movf	___flmul@prod,w
 10656  0F88  00AC               	movwf	??___flmul
 10657  0F89  0839               	movf	___flmul@prod+1,w
 10658  0F8A  00AD               	movwf	??___flmul+1
 10659  0F8B  083A               	movf	___flmul@prod+2,w
 10660  0F8C  00AE               	movwf	??___flmul+2
 10661  0F8D  083B               	movf	___flmul@prod+3,w
 10662  0F8E  00AF               	movwf	??___flmul+3
 10663  0F8F  3001               	movlw	1
 10664  0F90  00B0               	movwf	??___flmul+4
 10665  0F91                     u4225:
 10666  0F91  0D2F               	rlf	??___flmul+3,w
 10667  0F92  0CAF               	rrf	??___flmul+3,f
 10668  0F93  0CAE               	rrf	??___flmul+2,f
 10669  0F94  0CAD               	rrf	??___flmul+1,f
 10670  0F95  0CAC               	rrf	??___flmul,f
 10671  0F96                     u4220:
 10672  0F96  0BB0               	decfsz	??___flmul+4,f
 10673  0F97  2F91               	goto	u4225
 10674  0F98  082F               	movf	??___flmul+3,w
 10675  0F99  00BB               	movwf	___flmul@prod+3
 10676  0F9A  082E               	movf	??___flmul+2,w
 10677  0F9B  00BA               	movwf	___flmul@prod+2
 10678  0F9C  082D               	movf	??___flmul+1,w
 10679  0F9D  00B9               	movwf	___flmul@prod+1
 10680  0F9E  082C               	movf	??___flmul,w
 10681  0F9F  00B8               	movwf	___flmul@prod
 10682  0FA0                     l2921:
 10683  0FA0  3001               	movlw	1
 10684  0FA1  07BC               	addwf	___flmul@temp,f
 10685  0FA2  1803               	skipnc
 10686  0FA3  0ABD               	incf	___flmul@temp+1,f
 10687  0FA4  3000               	movlw	0
 10688  0FA5  07BD               	addwf	___flmul@temp+1,f
 10689  0FA6                     l2923:
 10690  0FA6  083D               	movf	___flmul@temp+1,w
 10691  0FA7  3A80               	xorlw	128
 10692  0FA8  00FF               	movwf	btemp+1
 10693  0FA9  3080               	movlw	128
 10694  0FAA  027F               	subwf	btemp+1,w
 10695  0FAB  1D03               	skipz
 10696  0FAC  2FAF               	goto	u4235
 10697  0FAD  30FF               	movlw	255
 10698  0FAE  023C               	subwf	___flmul@temp,w
 10699  0FAF                     u4235:
 10700  0FAF  1C03               	skipc
 10701  0FB0  2FB2               	goto	u4231
 10702  0FB1  2FB3               	goto	u4230
 10703  0FB2                     u4231:
 10704  0FB2  2FBE               	goto	l2927
 10705  0FB3                     u4230:
 10706  0FB3                     l2925:
 10707  0FB3  307F               	movlw	127
 10708  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
 10709  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
 10710  0FB6  00BB               	movwf	___flmul@prod+3
 10711  0FB7  3080               	movlw	128
 10712  0FB8  00BA               	movwf	___flmul@prod+2
 10713  0FB9  3000               	movlw	0
 10714  0FBA  00B9               	movwf	___flmul@prod+1
 10715  0FBB  3000               	movlw	0
 10716  0FBC  00B8               	movwf	___flmul@prod
 10717  0FBD  2FF3               	goto	l829
 10718  0FBE                     l2927:
 10719  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
 10720  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
 10721  0FC0  083D               	movf	___flmul@temp+1,w
 10722  0FC1  3A80               	xorlw	128
 10723  0FC2  00FF               	movwf	btemp+1
 10724  0FC3  3080               	movlw	128
 10725  0FC4  027F               	subwf	btemp+1,w
 10726  0FC5  1D03               	skipz
 10727  0FC6  2FC9               	goto	u4245
 10728  0FC7  3001               	movlw	1
 10729  0FC8  023C               	subwf	___flmul@temp,w
 10730  0FC9                     u4245:
 10731  0FC9  1803               	skipnc
 10732  0FCA  2FCC               	goto	u4241
 10733  0FCB  2FCD               	goto	u4240
 10734  0FCC                     u4241:
 10735  0FCC  2FD9               	goto	l2933
 10736  0FCD                     u4240:
 10737  0FCD                     l2929:
 10738  0FCD  3000               	movlw	0
 10739  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
 10740  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
 10741  0FD0  00BB               	movwf	___flmul@prod+3
 10742  0FD1  3000               	movlw	0
 10743  0FD2  00BA               	movwf	___flmul@prod+2
 10744  0FD3  3000               	movlw	0
 10745  0FD4  00B9               	movwf	___flmul@prod+1
 10746  0FD5  3000               	movlw	0
 10747  0FD6  00B8               	movwf	___flmul@prod
 10748  0FD7                     l2931:
 10749  0FD7  01B1               	clrf	___flmul@sign
 10750  0FD8  2FF3               	goto	l829
 10751  0FD9                     l2933:
 10752  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
 10753  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
 10754  0FDB  083C               	movf	___flmul@temp,w
 10755  0FDC  00AC               	movwf	??___flmul
 10756  0FDD  082C               	movf	??___flmul,w
 10757  0FDE  00B7               	movwf	___flmul@bexp
 10758  0FDF  30FF               	movlw	255
 10759  0FE0  05B8               	andwf	___flmul@prod,f
 10760  0FE1  30FF               	movlw	255
 10761  0FE2  05B9               	andwf	___flmul@prod+1,f
 10762  0FE3  307F               	movlw	127
 10763  0FE4  05BA               	andwf	___flmul@prod+2,f
 10764  0FE5  3000               	movlw	0
 10765  0FE6  05BB               	andwf	___flmul@prod+3,f
 10766  0FE7                     l2935:
 10767  0FE7  1C37               	btfss	___flmul@bexp,0
 10768  0FE8  2FEA               	goto	u4251
 10769  0FE9  2FEB               	goto	u4250
 10770  0FEA                     u4251:
 10771  0FEA  2FEC               	goto	l2939
 10772  0FEB                     u4250:
 10773  0FEB                     l2937:
 10774  0FEB  17BA               	bsf	___flmul@prod+2,7
 10775  0FEC                     l2939:
 10776  0FEC  0837               	movf	___flmul@bexp,w
 10777  0FED  00AC               	movwf	??___flmul
 10778  0FEE  1003               	clrc
 10779  0FEF  0C2C               	rrf	??___flmul,w
 10780  0FF0  00AD               	movwf	??___flmul+1
 10781  0FF1  082D               	movf	??___flmul+1,w
 10782  0FF2  00BB               	movwf	___flmul@prod+3
 10783  0FF3                     l829:
 10784  0FF3  0831               	movf	___flmul@sign,w
 10785  0FF4  00AC               	movwf	??___flmul
 10786  0FF5  082C               	movf	??___flmul,w
 10787  0FF6  04BB               	iorwf	___flmul@prod+3,f
 10788  0FF7                     l2941:
 10789  0FF7  083B               	movf	___flmul@prod+3,w
 10790  0FF8  00A7               	movwf	?___flmul+3
 10791  0FF9  083A               	movf	___flmul@prod+2,w
 10792  0FFA  00A6               	movwf	?___flmul+2
 10793  0FFB  0839               	movf	___flmul@prod+1,w
 10794  0FFC  00A5               	movwf	?___flmul+1
 10795  0FFD  0838               	movf	___flmul@prod,w
 10796  0FFE  00A4               	movwf	?___flmul
 10797  0FFF                     l817:
 10798  0FFF  0008               	return
 10799  1000                     __end_of___flmul:
 10800                           
 10801                           	psect	text34
 10802  1A4E                     __ptext34:	
 10803 ;; *************** function __Umul8_16 *****************
 10804 ;; Defined at:
 10805 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
 10806 ;; Parameters:    Size  Location     Type
 10807 ;;  multiplier      1    wreg     unsigned char 
 10808 ;;  multiplicand    1    0[COMMON] unsigned char 
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;  multiplier      1    8[COMMON] unsigned char 
 10811 ;;  word_mpld       2    6[COMMON] unsigned int 
 10812 ;;  product         2    4[COMMON] unsigned int 
 10813 ;; Return value:  Size  Location     Type
 10814 ;;                  2    0[COMMON] unsigned int 
 10815 ;; Registers used:
 10816 ;;		wreg, status,2, status,0
 10817 ;; Tracked objects:
 10818 ;;		On entry : 0/0
 10819 ;;		On exit  : 0/0
 10820 ;;		Unchanged: 0/0
 10821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10822 ;;      Params:         2       0       0       0       0
 10823 ;;      Locals:         5       0       0       0       0
 10824 ;;      Temps:          2       0       0       0       0
 10825 ;;      Totals:         9       0       0       0       0
 10826 ;;Total ram usage:        9 bytes
 10827 ;; Hardware stack levels used:    1
 10828 ;; This function calls:
 10829 ;;		Nothing
 10830 ;; This function is called by:
 10831 ;;		___flmul
 10832 ;; This function uses a non-reentrant model
 10833 ;;
 10834                           
 10835                           
 10836                           ;psect for function __Umul8_16
 10837  1A4E                     __Umul8_16:
 10838                           
 10839                           ;incstack = 0
 10840                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10841                           ;__Umul8_16@multiplier stored from wreg
 10842  1A4E  00F8               	movwf	__Umul8_16@multiplier
 10843  1A4F                     l2465:
 10844  1A4F  01F4               	clrf	__Umul8_16@product
 10845  1A50  01F5               	clrf	__Umul8_16@product+1
 10846  1A51                     l2467:
 10847  1A51  0870               	movf	__Umul8_16@multiplicand,w
 10848  1A52  00F2               	movwf	??__Umul8_16
 10849  1A53  01F3               	clrf	??__Umul8_16+1
 10850  1A54  0872               	movf	??__Umul8_16,w
 10851  1A55  00F6               	movwf	__Umul8_16@word_mpld
 10852  1A56  0873               	movf	??__Umul8_16+1,w
 10853  1A57  00F7               	movwf	__Umul8_16@word_mpld+1
 10854  1A58                     l2469:
 10855  1A58  1C78               	btfss	__Umul8_16@multiplier,0
 10856  1A59  2A5B               	goto	u3081
 10857  1A5A  2A5C               	goto	u3080
 10858  1A5B                     u3081:
 10859  1A5B  2A62               	goto	l836
 10860  1A5C                     u3080:
 10861  1A5C                     l2471:
 10862  1A5C  0876               	movf	__Umul8_16@word_mpld,w
 10863  1A5D  07F4               	addwf	__Umul8_16@product,f
 10864  1A5E  1803               	skipnc
 10865  1A5F  0AF5               	incf	__Umul8_16@product+1,f
 10866  1A60  0877               	movf	__Umul8_16@word_mpld+1,w
 10867  1A61  07F5               	addwf	__Umul8_16@product+1,f
 10868  1A62                     l836:
 10869  1A62  3001               	movlw	1
 10870  1A63                     u3095:
 10871  1A63  1003               	clrc
 10872  1A64  0DF6               	rlf	__Umul8_16@word_mpld,f
 10873  1A65  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10874  1A66  3EFF               	addlw	-1
 10875  1A67  1D03               	skipz
 10876  1A68  2A63               	goto	u3095
 10877  1A69  1003               	clrc
 10878  1A6A  0CF8               	rrf	__Umul8_16@multiplier,f
 10879  1A6B                     l2473:
 10880  1A6B  0878               	movf	__Umul8_16@multiplier,w
 10881  1A6C  1D03               	btfss	3,2
 10882  1A6D  2A6F               	goto	u3101
 10883  1A6E  2A70               	goto	u3100
 10884  1A6F                     u3101:
 10885  1A6F  2A58               	goto	l2469
 10886  1A70                     u3100:
 10887  1A70                     l2475:
 10888  1A70  0875               	movf	__Umul8_16@product+1,w
 10889  1A71  00F1               	movwf	?__Umul8_16+1
 10890  1A72  0874               	movf	__Umul8_16@product,w
 10891  1A73  00F0               	movwf	?__Umul8_16
 10892  1A74                     l838:
 10893  1A74  0008               	return
 10894  1A75                     __end_of__Umul8_16:
 10895                           
 10896                           	psect	text35
 10897  1190                     __ptext35:	
 10898 ;; *************** function ___fldiv *****************
 10899 ;; Defined at:
 10900 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 10901 ;; Parameters:    Size  Location     Type
 10902 ;;  a               4   30[BANK0 ] unsigned int 
 10903 ;;  b               4   34[BANK0 ] unsigned int 
 10904 ;; Auto vars:     Size  Location     Type
 10905 ;;  grs             4   50[BANK0 ] unsigned long 
 10906 ;;  rem             4   43[BANK0 ] unsigned long 
 10907 ;;  new_exp         2   48[BANK0 ] int 
 10908 ;;  aexp            1   55[BANK0 ] unsigned char 
 10909 ;;  bexp            1   54[BANK0 ] unsigned char 
 10910 ;;  sign            1   47[BANK0 ] unsigned char 
 10911 ;; Return value:  Size  Location     Type
 10912 ;;                  4   30[BANK0 ] unsigned char 
 10913 ;; Registers used:
 10914 ;;		wreg, status,2, status,0, btemp+1
 10915 ;; Tracked objects:
 10916 ;;		On entry : 0/0
 10917 ;;		On exit  : 0/0
 10918 ;;		Unchanged: 0/0
 10919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10920 ;;      Params:         0       8       0       0       0
 10921 ;;      Locals:         0      13       0       0       0
 10922 ;;      Temps:          0       5       0       0       0
 10923 ;;      Totals:         0      26       0       0       0
 10924 ;;Total ram usage:       26 bytes
 10925 ;; Hardware stack levels used:    1
 10926 ;; This function calls:
 10927 ;;		Nothing
 10928 ;; This function is called by:
 10929 ;;		_ADC_channel1
 10930 ;;		_ADC_channel2
 10931 ;; This function uses a non-reentrant model
 10932 ;;
 10933                           
 10934                           
 10935                           ;psect for function ___fldiv
 10936  1190                     ___fldiv:
 10937  1190                     l3633:	
 10938                           ;incstack = 0
 10939                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 10940                           
 10941  1190  1283               	bcf	3,5	;RP0=0, select bank0
 10942  1191  1303               	bcf	3,6	;RP1=0, select bank0
 10943  1192  0845               	movf	___fldiv@b+3,w
 10944  1193  3980               	andlw	128
 10945  1194  00C6               	movwf	??___fldiv
 10946  1195  0846               	movf	??___fldiv,w
 10947  1196  00CF               	movwf	___fldiv@sign
 10948  1197                     l3635:
 10949  1197  0845               	movf	___fldiv@b+3,w
 10950  1198  00C6               	movwf	??___fldiv
 10951  1199  0746               	addwf	??___fldiv,w
 10952  119A  00C7               	movwf	??___fldiv+1
 10953  119B  0847               	movf	??___fldiv+1,w
 10954  119C  00D6               	movwf	___fldiv@bexp
 10955  119D                     l3637:
 10956  119D  1FC4               	btfss	___fldiv@b+2,7
 10957  119E  29A0               	goto	u5831
 10958  119F  29A1               	goto	u5830
 10959  11A0                     u5831:
 10960  11A0  29A2               	goto	l3641
 10961  11A1                     u5830:
 10962  11A1                     l3639:
 10963  11A1  1456               	bsf	___fldiv@bexp,0
 10964  11A2                     l3641:
 10965  11A2  0856               	movf	___fldiv@bexp,w
 10966  11A3  1903               	btfsc	3,2
 10967  11A4  29A6               	goto	u5841
 10968  11A5  29A7               	goto	u5840
 10969  11A6                     u5841:
 10970  11A6  29B7               	goto	l3651
 10971  11A7                     u5840:
 10972  11A7                     l3643:
 10973  11A7  0A56               	incf	___fldiv@bexp,w
 10974  11A8  1D03               	btfss	3,2
 10975  11A9  29AB               	goto	u5851
 10976  11AA  29AC               	goto	u5850
 10977  11AB                     u5851:
 10978  11AB  29B4               	goto	l3647
 10979  11AC                     u5850:
 10980  11AC                     l3645:
 10981  11AC  3000               	movlw	0
 10982  11AD  00C5               	movwf	___fldiv@b+3
 10983  11AE  3000               	movlw	0
 10984  11AF  00C4               	movwf	___fldiv@b+2
 10985  11B0  3000               	movlw	0
 10986  11B1  00C3               	movwf	___fldiv@b+1
 10987  11B2  3000               	movlw	0
 10988  11B3  00C2               	movwf	___fldiv@b
 10989  11B4                     l3647:
 10990  11B4  17C4               	bsf	___fldiv@b+2,7
 10991  11B5                     l3649:
 10992  11B5  01C5               	clrf	___fldiv@b+3
 10993  11B6  29BF               	goto	l3653
 10994  11B7                     l3651:
 10995  11B7  3000               	movlw	0
 10996  11B8  00C5               	movwf	___fldiv@b+3
 10997  11B9  3000               	movlw	0
 10998  11BA  00C4               	movwf	___fldiv@b+2
 10999  11BB  3000               	movlw	0
 11000  11BC  00C3               	movwf	___fldiv@b+1
 11001  11BD  3000               	movlw	0
 11002  11BE  00C2               	movwf	___fldiv@b
 11003  11BF                     l3653:
 11004  11BF  0841               	movf	___fldiv@a+3,w
 11005  11C0  3980               	andlw	128
 11006  11C1  00C6               	movwf	??___fldiv
 11007  11C2  0846               	movf	??___fldiv,w
 11008  11C3  06CF               	xorwf	___fldiv@sign,f
 11009  11C4                     l3655:
 11010  11C4  0841               	movf	___fldiv@a+3,w
 11011  11C5  00C6               	movwf	??___fldiv
 11012  11C6  0746               	addwf	??___fldiv,w
 11013  11C7  00C7               	movwf	??___fldiv+1
 11014  11C8  0847               	movf	??___fldiv+1,w
 11015  11C9  00D7               	movwf	___fldiv@aexp
 11016  11CA                     l3657:
 11017  11CA  1FC0               	btfss	___fldiv@a+2,7
 11018  11CB  29CD               	goto	u5861
 11019  11CC  29CE               	goto	u5860
 11020  11CD                     u5861:
 11021  11CD  29CF               	goto	l3661
 11022  11CE                     u5860:
 11023  11CE                     l3659:
 11024  11CE  1457               	bsf	___fldiv@aexp,0
 11025  11CF                     l3661:
 11026  11CF  0857               	movf	___fldiv@aexp,w
 11027  11D0  1903               	btfsc	3,2
 11028  11D1  29D3               	goto	u5871
 11029  11D2  29D4               	goto	u5870
 11030  11D3                     u5871:
 11031  11D3  29E4               	goto	l3671
 11032  11D4                     u5870:
 11033  11D4                     l3663:
 11034  11D4  0A57               	incf	___fldiv@aexp,w
 11035  11D5  1D03               	btfss	3,2
 11036  11D6  29D8               	goto	u5881
 11037  11D7  29D9               	goto	u5880
 11038  11D8                     u5881:
 11039  11D8  29E1               	goto	l3667
 11040  11D9                     u5880:
 11041  11D9                     l3665:
 11042  11D9  3000               	movlw	0
 11043  11DA  00C1               	movwf	___fldiv@a+3
 11044  11DB  3000               	movlw	0
 11045  11DC  00C0               	movwf	___fldiv@a+2
 11046  11DD  3000               	movlw	0
 11047  11DE  00BF               	movwf	___fldiv@a+1
 11048  11DF  3000               	movlw	0
 11049  11E0  00BE               	movwf	___fldiv@a
 11050  11E1                     l3667:
 11051  11E1  17C0               	bsf	___fldiv@a+2,7
 11052  11E2                     l3669:
 11053  11E2  01C1               	clrf	___fldiv@a+3
 11054  11E3  29EC               	goto	l777
 11055  11E4                     l3671:
 11056  11E4  3000               	movlw	0
 11057  11E5  00C1               	movwf	___fldiv@a+3
 11058  11E6  3000               	movlw	0
 11059  11E7  00C0               	movwf	___fldiv@a+2
 11060  11E8  3000               	movlw	0
 11061  11E9  00BF               	movwf	___fldiv@a+1
 11062  11EA  3000               	movlw	0
 11063  11EB  00BE               	movwf	___fldiv@a
 11064  11EC                     l777:
 11065  11EC  0841               	movf	___fldiv@a+3,w
 11066  11ED  0440               	iorwf	___fldiv@a+2,w
 11067  11EE  043F               	iorwf	___fldiv@a+1,w
 11068  11EF  043E               	iorwf	___fldiv@a,w
 11069  11F0  1D03               	skipz
 11070  11F1  29F3               	goto	u5891
 11071  11F2  29F4               	goto	u5890
 11072  11F3                     u5891:
 11073  11F3  2A0D               	goto	l3681
 11074  11F4                     u5890:
 11075  11F4                     l3673:
 11076  11F4  3000               	movlw	0
 11077  11F5  00C5               	movwf	___fldiv@b+3
 11078  11F6  3000               	movlw	0
 11079  11F7  00C4               	movwf	___fldiv@b+2
 11080  11F8  3000               	movlw	0
 11081  11F9  00C3               	movwf	___fldiv@b+1
 11082  11FA  3000               	movlw	0
 11083  11FB  00C2               	movwf	___fldiv@b
 11084  11FC  3080               	movlw	128
 11085  11FD  04C4               	iorwf	___fldiv@b+2,f
 11086  11FE  307F               	movlw	127
 11087  11FF  04C5               	iorwf	___fldiv@b+3,f
 11088  1200                     l3675:
 11089  1200  084F               	movf	___fldiv@sign,w
 11090  1201  00C6               	movwf	??___fldiv
 11091  1202  0846               	movf	??___fldiv,w
 11092  1203  04C5               	iorwf	___fldiv@b+3,f
 11093  1204                     l3677:
 11094  1204  0845               	movf	___fldiv@b+3,w
 11095  1205  00C1               	movwf	?___fldiv+3
 11096  1206  0844               	movf	___fldiv@b+2,w
 11097  1207  00C0               	movwf	?___fldiv+2
 11098  1208  0843               	movf	___fldiv@b+1,w
 11099  1209  00BF               	movwf	?___fldiv+1
 11100  120A  0842               	movf	___fldiv@b,w
 11101  120B  00BE               	movwf	?___fldiv
 11102  120C  2B6C               	goto	l779
 11103  120D                     l3681:
 11104  120D  0856               	movf	___fldiv@bexp,w
 11105  120E  1D03               	btfss	3,2
 11106  120F  2A11               	goto	u5901
 11107  1210  2A12               	goto	u5900
 11108  1211                     u5901:
 11109  1211  2A1B               	goto	l3687
 11110  1212                     u5900:
 11111  1212                     l3683:
 11112  1212  3000               	movlw	0
 11113  1213  00C1               	movwf	?___fldiv+3
 11114  1214  3000               	movlw	0
 11115  1215  00C0               	movwf	?___fldiv+2
 11116  1216  3000               	movlw	0
 11117  1217  00BF               	movwf	?___fldiv+1
 11118  1218  3000               	movlw	0
 11119  1219  00BE               	movwf	?___fldiv
 11120  121A  2B6C               	goto	l779
 11121  121B                     l3687:
 11122  121B  0856               	movf	___fldiv@bexp,w
 11123  121C  00C6               	movwf	??___fldiv
 11124  121D  01C7               	clrf	??___fldiv+1
 11125  121E  0847               	movf	??___fldiv+1,w
 11126  121F  00C9               	movwf	??___fldiv+3
 11127  1220  0857               	movf	___fldiv@aexp,w
 11128  1221  0246               	subwf	??___fldiv,w
 11129  1222  00C8               	movwf	??___fldiv+2
 11130  1223  1C03               	skipc
 11131  1224  03C9               	decf	??___fldiv+3,f
 11132  1225  0848               	movf	??___fldiv+2,w
 11133  1226  3E7F               	addlw	127
 11134  1227  00D0               	movwf	___fldiv@new_exp
 11135  1228  0849               	movf	??___fldiv+3,w
 11136  1229  1803               	skipnc
 11137  122A  3E01               	addlw	1
 11138  122B  3E00               	addlw	0
 11139  122C  00D1               	movwf	___fldiv@new_exp+1
 11140  122D                     l3689:
 11141  122D  0845               	movf	___fldiv@b+3,w
 11142  122E  00CE               	movwf	___fldiv@rem+3
 11143  122F  0844               	movf	___fldiv@b+2,w
 11144  1230  00CD               	movwf	___fldiv@rem+2
 11145  1231  0843               	movf	___fldiv@b+1,w
 11146  1232  00CC               	movwf	___fldiv@rem+1
 11147  1233  0842               	movf	___fldiv@b,w
 11148  1234  00CB               	movwf	___fldiv@rem
 11149  1235                     l3691:
 11150  1235  3000               	movlw	0
 11151  1236  00C5               	movwf	___fldiv@b+3
 11152  1237  3000               	movlw	0
 11153  1238  00C4               	movwf	___fldiv@b+2
 11154  1239  3000               	movlw	0
 11155  123A  00C3               	movwf	___fldiv@b+1
 11156  123B  3000               	movlw	0
 11157  123C  00C2               	movwf	___fldiv@b
 11158  123D                     l3693:
 11159  123D  3000               	movlw	0
 11160  123E  00D5               	movwf	___fldiv@grs+3
 11161  123F  3000               	movlw	0
 11162  1240  00D4               	movwf	___fldiv@grs+2
 11163  1241  3000               	movlw	0
 11164  1242  00D3               	movwf	___fldiv@grs+1
 11165  1243  3000               	movlw	0
 11166  1244  00D2               	movwf	___fldiv@grs
 11167  1245                     l3695:
 11168  1245  01D7               	clrf	___fldiv@aexp
 11169  1246  2A91               	goto	l3715
 11170  1247                     l3697:
 11171  1247  0857               	movf	___fldiv@aexp,w
 11172  1248  1903               	btfsc	3,2
 11173  1249  2A4B               	goto	u5911
 11174  124A  2A4C               	goto	u5910
 11175  124B                     u5911:
 11176  124B  2A6C               	goto	l3707
 11177  124C                     u5910:
 11178  124C                     l3699:
 11179  124C  3001               	movlw	1
 11180  124D  00C6               	movwf	??___fldiv
 11181  124E                     u5925:
 11182  124E  1003               	clrc
 11183  124F  0DCB               	rlf	___fldiv@rem,f
 11184  1250  0DCC               	rlf	___fldiv@rem+1,f
 11185  1251  0DCD               	rlf	___fldiv@rem+2,f
 11186  1252  0DCE               	rlf	___fldiv@rem+3,f
 11187  1253  0BC6               	decfsz	??___fldiv,f
 11188  1254  2A4E               	goto	u5925
 11189  1255  3001               	movlw	1
 11190  1256  00C6               	movwf	??___fldiv
 11191  1257                     u5935:
 11192  1257  1003               	clrc
 11193  1258  0DC2               	rlf	___fldiv@b,f
 11194  1259  0DC3               	rlf	___fldiv@b+1,f
 11195  125A  0DC4               	rlf	___fldiv@b+2,f
 11196  125B  0DC5               	rlf	___fldiv@b+3,f
 11197  125C  0BC6               	decfsz	??___fldiv,f
 11198  125D  2A57               	goto	u5935
 11199  125E                     l3701:
 11200  125E  1FD5               	btfss	___fldiv@grs+3,7
 11201  125F  2A61               	goto	u5941
 11202  1260  2A62               	goto	u5940
 11203  1261                     u5941:
 11204  1261  2A63               	goto	l3705
 11205  1262                     u5940:
 11206  1262                     l3703:
 11207  1262  1442               	bsf	___fldiv@b,0
 11208  1263                     l3705:
 11209  1263  3001               	movlw	1
 11210  1264  00C6               	movwf	??___fldiv
 11211  1265                     u5955:
 11212  1265  1003               	clrc
 11213  1266  0DD2               	rlf	___fldiv@grs,f
 11214  1267  0DD3               	rlf	___fldiv@grs+1,f
 11215  1268  0DD4               	rlf	___fldiv@grs+2,f
 11216  1269  0DD5               	rlf	___fldiv@grs+3,f
 11217  126A  0BC6               	decfsz	??___fldiv,f
 11218  126B  2A65               	goto	u5955
 11219  126C                     l3707:
 11220  126C  0841               	movf	___fldiv@a+3,w
 11221  126D  024E               	subwf	___fldiv@rem+3,w
 11222  126E  1D03               	skipz
 11223  126F  2A7A               	goto	u5965
 11224  1270  0840               	movf	___fldiv@a+2,w
 11225  1271  024D               	subwf	___fldiv@rem+2,w
 11226  1272  1D03               	skipz
 11227  1273  2A7A               	goto	u5965
 11228  1274  083F               	movf	___fldiv@a+1,w
 11229  1275  024C               	subwf	___fldiv@rem+1,w
 11230  1276  1D03               	skipz
 11231  1277  2A7A               	goto	u5965
 11232  1278  083E               	movf	___fldiv@a,w
 11233  1279  024B               	subwf	___fldiv@rem,w
 11234  127A                     u5965:
 11235  127A  1C03               	skipc
 11236  127B  2A7D               	goto	u5961
 11237  127C  2A7E               	goto	u5960
 11238  127D                     u5961:
 11239  127D  2A8D               	goto	l3713
 11240  127E                     u5960:
 11241  127E                     l3709:
 11242  127E  1755               	bsf	___fldiv@grs+3,6
 11243  127F                     l3711:
 11244  127F  083E               	movf	___fldiv@a,w
 11245  1280  02CB               	subwf	___fldiv@rem,f
 11246  1281  083F               	movf	___fldiv@a+1,w
 11247  1282  1C03               	skipc
 11248  1283  0F3F               	incfsz	___fldiv@a+1,w
 11249  1284  02CC               	subwf	___fldiv@rem+1,f
 11250  1285  0840               	movf	___fldiv@a+2,w
 11251  1286  1C03               	skipc
 11252  1287  0F40               	incfsz	___fldiv@a+2,w
 11253  1288  02CD               	subwf	___fldiv@rem+2,f
 11254  1289  0841               	movf	___fldiv@a+3,w
 11255  128A  1C03               	skipc
 11256  128B  0F41               	incfsz	___fldiv@a+3,w
 11257  128C  02CE               	subwf	___fldiv@rem+3,f
 11258  128D                     l3713:
 11259  128D  3001               	movlw	1
 11260  128E  00C6               	movwf	??___fldiv
 11261  128F  0846               	movf	??___fldiv,w
 11262  1290  07D7               	addwf	___fldiv@aexp,f
 11263  1291                     l3715:
 11264  1291  301A               	movlw	26
 11265  1292  0257               	subwf	___fldiv@aexp,w
 11266  1293  1C03               	skipc
 11267  1294  2A96               	goto	u5971
 11268  1295  2A97               	goto	u5970
 11269  1296                     u5971:
 11270  1296  2A47               	goto	l3697
 11271  1297                     u5970:
 11272  1297                     l3717:
 11273  1297  084E               	movf	___fldiv@rem+3,w
 11274  1298  044D               	iorwf	___fldiv@rem+2,w
 11275  1299  044C               	iorwf	___fldiv@rem+1,w
 11276  129A  044B               	iorwf	___fldiv@rem,w
 11277  129B  1903               	skipnz
 11278  129C  2A9E               	goto	u5981
 11279  129D  2A9F               	goto	u5980
 11280  129E                     u5981:
 11281  129E  2ABE               	goto	l3731
 11282  129F                     u5980:
 11283  129F                     l3719:
 11284  129F  1452               	bsf	___fldiv@grs,0
 11285  12A0  2ABE               	goto	l3731
 11286  12A1                     l3721:
 11287  12A1  3001               	movlw	1
 11288  12A2  00C6               	movwf	??___fldiv
 11289  12A3                     u5995:
 11290  12A3  1003               	clrc
 11291  12A4  0DC2               	rlf	___fldiv@b,f
 11292  12A5  0DC3               	rlf	___fldiv@b+1,f
 11293  12A6  0DC4               	rlf	___fldiv@b+2,f
 11294  12A7  0DC5               	rlf	___fldiv@b+3,f
 11295  12A8  0BC6               	decfsz	??___fldiv,f
 11296  12A9  2AA3               	goto	u5995
 11297  12AA                     l3723:
 11298  12AA  1FD5               	btfss	___fldiv@grs+3,7
 11299  12AB  2AAD               	goto	u6001
 11300  12AC  2AAE               	goto	u6000
 11301  12AD                     u6001:
 11302  12AD  2AAF               	goto	l3727
 11303  12AE                     u6000:
 11304  12AE                     l3725:
 11305  12AE  1442               	bsf	___fldiv@b,0
 11306  12AF                     l3727:
 11307  12AF  3001               	movlw	1
 11308  12B0  00C6               	movwf	??___fldiv
 11309  12B1                     u6015:
 11310  12B1  1003               	clrc
 11311  12B2  0DD2               	rlf	___fldiv@grs,f
 11312  12B3  0DD3               	rlf	___fldiv@grs+1,f
 11313  12B4  0DD4               	rlf	___fldiv@grs+2,f
 11314  12B5  0DD5               	rlf	___fldiv@grs+3,f
 11315  12B6  0BC6               	decfsz	??___fldiv,f
 11316  12B7  2AB1               	goto	u6015
 11317  12B8                     l3729:
 11318  12B8  30FF               	movlw	255
 11319  12B9  07D0               	addwf	___fldiv@new_exp,f
 11320  12BA  1803               	skipnc
 11321  12BB  0AD1               	incf	___fldiv@new_exp+1,f
 11322  12BC  30FF               	movlw	255
 11323  12BD  07D1               	addwf	___fldiv@new_exp+1,f
 11324  12BE                     l3731:
 11325  12BE  1FC4               	btfss	___fldiv@b+2,7
 11326  12BF  2AC1               	goto	u6021
 11327  12C0  2AC2               	goto	u6020
 11328  12C1                     u6021:
 11329  12C1  2AA1               	goto	l3721
 11330  12C2                     u6020:
 11331  12C2                     l3733:
 11332  12C2  01D7               	clrf	___fldiv@aexp
 11333  12C3                     l3735:
 11334  12C3  1FD5               	btfss	___fldiv@grs+3,7
 11335  12C4  2AC6               	goto	u6031
 11336  12C5  2AC7               	goto	u6030
 11337  12C6                     u6031:
 11338  12C6  2AE3               	goto	l3743
 11339  12C7                     u6030:
 11340  12C7                     l3737:
 11341  12C7  30FF               	movlw	255
 11342  12C8  0552               	andwf	___fldiv@grs,w
 11343  12C9  00C6               	movwf	??___fldiv
 11344  12CA  30FF               	movlw	255
 11345  12CB  0553               	andwf	___fldiv@grs+1,w
 11346  12CC  00C7               	movwf	??___fldiv+1
 11347  12CD  30FF               	movlw	255
 11348  12CE  0554               	andwf	___fldiv@grs+2,w
 11349  12CF  00C8               	movwf	??___fldiv+2
 11350  12D0  307F               	movlw	127
 11351  12D1  0555               	andwf	___fldiv@grs+3,w
 11352  12D2  00C9               	movwf	??___fldiv+3
 11353  12D3  0849               	movf	??___fldiv+3,w
 11354  12D4  0448               	iorwf	??___fldiv+2,w
 11355  12D5  0447               	iorwf	??___fldiv+1,w
 11356  12D6  0446               	iorwf	??___fldiv,w
 11357  12D7  1903               	skipnz
 11358  12D8  2ADA               	goto	u6041
 11359  12D9  2ADB               	goto	u6040
 11360  12DA                     u6041:
 11361  12DA  2ADE               	goto	l793
 11362  12DB                     u6040:
 11363  12DB                     l3739:
 11364  12DB  01D7               	clrf	___fldiv@aexp
 11365  12DC  0AD7               	incf	___fldiv@aexp,f
 11366  12DD  2AE3               	goto	l3743
 11367  12DE                     l793:
 11368  12DE  1C42               	btfss	___fldiv@b,0
 11369  12DF  2AE1               	goto	u6051
 11370  12E0  2AE2               	goto	u6050
 11371  12E1                     u6051:
 11372  12E1  2AE3               	goto	l3743
 11373  12E2                     u6050:
 11374  12E2  2ADB               	goto	l3739
 11375  12E3                     l3743:
 11376  12E3  0857               	movf	___fldiv@aexp,w
 11377  12E4  1903               	btfsc	3,2
 11378  12E5  2AE7               	goto	u6061
 11379  12E6  2AE8               	goto	u6060
 11380  12E7                     u6061:
 11381  12E7  2B19               	goto	l3753
 11382  12E8                     u6060:
 11383  12E8                     l3745:
 11384  12E8  3001               	movlw	1
 11385  12E9  07C2               	addwf	___fldiv@b,f
 11386  12EA  3000               	movlw	0
 11387  12EB  1803               	skipnc
 11388  12EC  3001               	movlw	1
 11389  12ED  07C3               	addwf	___fldiv@b+1,f
 11390  12EE  3000               	movlw	0
 11391  12EF  1803               	skipnc
 11392  12F0  3001               	movlw	1
 11393  12F1  07C4               	addwf	___fldiv@b+2,f
 11394  12F2  3000               	movlw	0
 11395  12F3  1803               	skipnc
 11396  12F4  3001               	movlw	1
 11397  12F5  07C5               	addwf	___fldiv@b+3,f
 11398  12F6                     l3747:
 11399  12F6  1C45               	btfss	___fldiv@b+3,0
 11400  12F7  2AF9               	goto	u6071
 11401  12F8  2AFA               	goto	u6070
 11402  12F9                     u6071:
 11403  12F9  2B19               	goto	l3753
 11404  12FA                     u6070:
 11405  12FA                     l3749:
 11406  12FA  0842               	movf	___fldiv@b,w
 11407  12FB  00C6               	movwf	??___fldiv
 11408  12FC  0843               	movf	___fldiv@b+1,w
 11409  12FD  00C7               	movwf	??___fldiv+1
 11410  12FE  0844               	movf	___fldiv@b+2,w
 11411  12FF  00C8               	movwf	??___fldiv+2
 11412  1300  0845               	movf	___fldiv@b+3,w
 11413  1301  00C9               	movwf	??___fldiv+3
 11414  1302  3001               	movlw	1
 11415  1303  00CA               	movwf	??___fldiv+4
 11416  1304                     u6085:
 11417  1304  0D49               	rlf	??___fldiv+3,w
 11418  1305  0CC9               	rrf	??___fldiv+3,f
 11419  1306  0CC8               	rrf	??___fldiv+2,f
 11420  1307  0CC7               	rrf	??___fldiv+1,f
 11421  1308  0CC6               	rrf	??___fldiv,f
 11422  1309                     u6080:
 11423  1309  0BCA               	decfsz	??___fldiv+4,f
 11424  130A  2B04               	goto	u6085
 11425  130B  0849               	movf	??___fldiv+3,w
 11426  130C  00C5               	movwf	___fldiv@b+3
 11427  130D  0848               	movf	??___fldiv+2,w
 11428  130E  00C4               	movwf	___fldiv@b+2
 11429  130F  0847               	movf	??___fldiv+1,w
 11430  1310  00C3               	movwf	___fldiv@b+1
 11431  1311  0846               	movf	??___fldiv,w
 11432  1312  00C2               	movwf	___fldiv@b
 11433  1313                     l3751:
 11434  1313  3001               	movlw	1
 11435  1314  07D0               	addwf	___fldiv@new_exp,f
 11436  1315  1803               	skipnc
 11437  1316  0AD1               	incf	___fldiv@new_exp+1,f
 11438  1317  3000               	movlw	0
 11439  1318  07D1               	addwf	___fldiv@new_exp+1,f
 11440  1319                     l3753:
 11441  1319  0851               	movf	___fldiv@new_exp+1,w
 11442  131A  3A80               	xorlw	128
 11443  131B  00FF               	movwf	btemp+1
 11444  131C  3080               	movlw	128
 11445  131D  027F               	subwf	btemp+1,w
 11446  131E  1D03               	skipz
 11447  131F  2B22               	goto	u6095
 11448  1320  30FF               	movlw	255
 11449  1321  0250               	subwf	___fldiv@new_exp,w
 11450  1322                     u6095:
 11451  1322  1C03               	skipc
 11452  1323  2B25               	goto	u6091
 11453  1324  2B26               	goto	u6090
 11454  1325                     u6091:
 11455  1325  2B34               	goto	l3757
 11456  1326                     u6090:
 11457  1326                     l3755:
 11458  1326  30FF               	movlw	255
 11459  1327  1283               	bcf	3,5	;RP0=0, select bank0
 11460  1328  1303               	bcf	3,6	;RP1=0, select bank0
 11461  1329  00D0               	movwf	___fldiv@new_exp
 11462  132A  3000               	movlw	0
 11463  132B  00D1               	movwf	___fldiv@new_exp+1
 11464  132C  3000               	movlw	0
 11465  132D  00C5               	movwf	___fldiv@b+3
 11466  132E  3000               	movlw	0
 11467  132F  00C4               	movwf	___fldiv@b+2
 11468  1330  3000               	movlw	0
 11469  1331  00C3               	movwf	___fldiv@b+1
 11470  1332  3000               	movlw	0
 11471  1333  00C2               	movwf	___fldiv@b
 11472  1334                     l3757:
 11473  1334  1283               	bcf	3,5	;RP0=0, select bank0
 11474  1335  1303               	bcf	3,6	;RP1=0, select bank0
 11475  1336  0851               	movf	___fldiv@new_exp+1,w
 11476  1337  3A80               	xorlw	128
 11477  1338  00FF               	movwf	btemp+1
 11478  1339  3080               	movlw	128
 11479  133A  027F               	subwf	btemp+1,w
 11480  133B  1D03               	skipz
 11481  133C  2B3F               	goto	u6105
 11482  133D  3001               	movlw	1
 11483  133E  0250               	subwf	___fldiv@new_exp,w
 11484  133F                     u6105:
 11485  133F  1803               	skipnc
 11486  1340  2B42               	goto	u6101
 11487  1341  2B43               	goto	u6100
 11488  1342                     u6101:
 11489  1342  2B50               	goto	l799
 11490  1343                     u6100:
 11491  1343                     l3759:
 11492  1343  1283               	bcf	3,5	;RP0=0, select bank0
 11493  1344  1303               	bcf	3,6	;RP1=0, select bank0
 11494  1345  01D0               	clrf	___fldiv@new_exp
 11495  1346  01D1               	clrf	___fldiv@new_exp+1
 11496  1347                     l3761:
 11497  1347  3000               	movlw	0
 11498  1348  00C5               	movwf	___fldiv@b+3
 11499  1349  3000               	movlw	0
 11500  134A  00C4               	movwf	___fldiv@b+2
 11501  134B  3000               	movlw	0
 11502  134C  00C3               	movwf	___fldiv@b+1
 11503  134D  3000               	movlw	0
 11504  134E  00C2               	movwf	___fldiv@b
 11505  134F                     l3763:
 11506  134F  01CF               	clrf	___fldiv@sign
 11507  1350                     l799:
 11508  1350  1283               	bcf	3,5	;RP0=0, select bank0
 11509  1351  1303               	bcf	3,6	;RP1=0, select bank0
 11510  1352  0850               	movf	___fldiv@new_exp,w
 11511  1353  00C6               	movwf	??___fldiv
 11512  1354  0846               	movf	??___fldiv,w
 11513  1355  00D6               	movwf	___fldiv@bexp
 11514  1356                     l3765:
 11515  1356  1C56               	btfss	___fldiv@bexp,0
 11516  1357  2B59               	goto	u6111
 11517  1358  2B5A               	goto	u6110
 11518  1359                     u6111:
 11519  1359  2B5C               	goto	l3769
 11520  135A                     u6110:
 11521  135A                     l3767:
 11522  135A  17C4               	bsf	___fldiv@b+2,7
 11523  135B  2B60               	goto	l801
 11524  135C                     l3769:
 11525  135C  307F               	movlw	127
 11526  135D  00C6               	movwf	??___fldiv
 11527  135E  0846               	movf	??___fldiv,w
 11528  135F  05C4               	andwf	___fldiv@b+2,f
 11529  1360                     l801:
 11530  1360  0856               	movf	___fldiv@bexp,w
 11531  1361  00C6               	movwf	??___fldiv
 11532  1362  1003               	clrc
 11533  1363  0C46               	rrf	??___fldiv,w
 11534  1364  00C7               	movwf	??___fldiv+1
 11535  1365  0847               	movf	??___fldiv+1,w
 11536  1366  00C5               	movwf	___fldiv@b+3
 11537  1367  084F               	movf	___fldiv@sign,w
 11538  1368  00C6               	movwf	??___fldiv
 11539  1369  0846               	movf	??___fldiv,w
 11540  136A  04C5               	iorwf	___fldiv@b+3,f
 11541  136B  2A04               	goto	l3677
 11542  136C                     l779:
 11543  136C  0008               	return
 11544  136D                     __end_of___fldiv:
 11545                           
 11546                           	psect	text36
 11547  1017                     __ptext36:	
 11548 ;; *************** function _ADC_Config *****************
 11549 ;; Defined at:
 11550 ;;		line 31 in file "Config_ADC.c"
 11551 ;; Parameters:    Size  Location     Type
 11552 ;;  AN_num          1    wreg     unsigned char 
 11553 ;; Auto vars:     Size  Location     Type
 11554 ;;  AN_num          1    2[COMMON] unsigned char 
 11555 ;; Return value:  Size  Location     Type
 11556 ;;                  1    wreg      void 
 11557 ;; Registers used:
 11558 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11559 ;; Tracked objects:
 11560 ;;		On entry : 0/0
 11561 ;;		On exit  : 0/0
 11562 ;;		Unchanged: 0/0
 11563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11564 ;;      Params:         0       0       0       0       0
 11565 ;;      Locals:         1       0       0       0       0
 11566 ;;      Temps:          2       0       0       0       0
 11567 ;;      Totals:         3       0       0       0       0
 11568 ;;Total ram usage:        3 bytes
 11569 ;; Hardware stack levels used:    1
 11570 ;; This function calls:
 11571 ;;		Nothing
 11572 ;; This function is called by:
 11573 ;;		_ADC_channel1
 11574 ;;		_ADC_channel2
 11575 ;; This function uses a non-reentrant model
 11576 ;;
 11577                           
 11578                           
 11579                           ;psect for function _ADC_Config
 11580  1017                     _ADC_Config:
 11581                           
 11582                           ;incstack = 0
 11583                           ; Regs used in _ADC_Config: [wreg-fsr0h+status,2+status,0]
 11584                           ;ADC_Config@AN_num stored from wreg
 11585  1017  00F2               	movwf	ADC_Config@AN_num
 11586  1018                     l3343:
 11587                           
 11588                           ;Config_ADC.c: 33:     switch(AN_num){
 11589  1018  2890               	goto	l3347
 11590  1019                     l180:	
 11591                           ;Config_ADC.c: 34:         case 0:
 11592                           
 11593                           
 11594                           ;Config_ADC.c: 35:             ADCON0bits.CHS3 = 0;
 11595  1019  1283               	bcf	3,5	;RP0=0, select bank0
 11596  101A  1303               	bcf	3,6	;RP1=0, select bank0
 11597  101B  129F               	bcf	31,5	;volatile
 11598                           
 11599                           ;Config_ADC.c: 36:             ADCON0bits.CHS2 = 0;
 11600  101C  121F               	bcf	31,4	;volatile
 11601                           
 11602                           ;Config_ADC.c: 37:             ADCON0bits.CHS1 = 0;
 11603  101D  119F               	bcf	31,3	;volatile
 11604                           
 11605                           ;Config_ADC.c: 38:             ADCON0bits.CHS0 = 0;
 11606  101E  111F               	bcf	31,2	;volatile
 11607                           
 11608                           ;Config_ADC.c: 39:             break;
 11609  101F  28CA               	goto	l3349
 11610  1020                     l182:	
 11611                           ;Config_ADC.c: 40:         case 1:
 11612                           
 11613                           
 11614                           ;Config_ADC.c: 41:             ADCON0bits.CHS3 = 0;
 11615  1020  1283               	bcf	3,5	;RP0=0, select bank0
 11616  1021  1303               	bcf	3,6	;RP1=0, select bank0
 11617  1022  129F               	bcf	31,5	;volatile
 11618                           
 11619                           ;Config_ADC.c: 42:             ADCON0bits.CHS2 = 0;
 11620  1023  121F               	bcf	31,4	;volatile
 11621                           
 11622                           ;Config_ADC.c: 43:             ADCON0bits.CHS1 = 0;
 11623  1024  119F               	bcf	31,3	;volatile
 11624                           
 11625                           ;Config_ADC.c: 44:             ADCON0bits.CHS0 = 1;
 11626  1025  151F               	bsf	31,2	;volatile
 11627                           
 11628                           ;Config_ADC.c: 45:             break;
 11629  1026  28CA               	goto	l3349
 11630  1027                     l183:	
 11631                           ;Config_ADC.c: 46:         case 2:
 11632                           
 11633                           
 11634                           ;Config_ADC.c: 47:             ADCON0bits.CHS3 = 0;
 11635  1027  1283               	bcf	3,5	;RP0=0, select bank0
 11636  1028  1303               	bcf	3,6	;RP1=0, select bank0
 11637  1029  129F               	bcf	31,5	;volatile
 11638                           
 11639                           ;Config_ADC.c: 48:             ADCON0bits.CHS2 = 0;
 11640  102A  121F               	bcf	31,4	;volatile
 11641                           
 11642                           ;Config_ADC.c: 49:             ADCON0bits.CHS1 = 1;
 11643  102B  159F               	bsf	31,3	;volatile
 11644                           
 11645                           ;Config_ADC.c: 50:             ADCON0bits.CHS0 = 0;
 11646  102C  111F               	bcf	31,2	;volatile
 11647                           
 11648                           ;Config_ADC.c: 51:             break;
 11649  102D  28CA               	goto	l3349
 11650  102E                     l184:	
 11651                           ;Config_ADC.c: 52:         case 3:
 11652                           
 11653                           
 11654                           ;Config_ADC.c: 53:             ADCON0bits.CHS3 = 0;
 11655  102E  1283               	bcf	3,5	;RP0=0, select bank0
 11656  102F  1303               	bcf	3,6	;RP1=0, select bank0
 11657  1030  129F               	bcf	31,5	;volatile
 11658                           
 11659                           ;Config_ADC.c: 54:             ADCON0bits.CHS2 = 0;
 11660  1031  121F               	bcf	31,4	;volatile
 11661                           
 11662                           ;Config_ADC.c: 55:             ADCON0bits.CHS1 = 1;
 11663  1032  159F               	bsf	31,3	;volatile
 11664                           
 11665                           ;Config_ADC.c: 56:             ADCON0bits.CHS0 = 1;
 11666  1033  151F               	bsf	31,2	;volatile
 11667                           
 11668                           ;Config_ADC.c: 57:             break;
 11669  1034  28CA               	goto	l3349
 11670  1035                     l185:	
 11671                           ;Config_ADC.c: 58:         case 4:
 11672                           
 11673                           
 11674                           ;Config_ADC.c: 59:             ADCON0bits.CHS3 = 0;
 11675  1035  1283               	bcf	3,5	;RP0=0, select bank0
 11676  1036  1303               	bcf	3,6	;RP1=0, select bank0
 11677  1037  129F               	bcf	31,5	;volatile
 11678                           
 11679                           ;Config_ADC.c: 60:             ADCON0bits.CHS2 = 1;
 11680  1038  161F               	bsf	31,4	;volatile
 11681                           
 11682                           ;Config_ADC.c: 61:             ADCON0bits.CHS1 = 0;
 11683  1039  119F               	bcf	31,3	;volatile
 11684                           
 11685                           ;Config_ADC.c: 62:             ADCON0bits.CHS0 = 0;
 11686  103A  111F               	bcf	31,2	;volatile
 11687                           
 11688                           ;Config_ADC.c: 63:             break;
 11689  103B  28CA               	goto	l3349
 11690  103C                     l186:	
 11691                           ;Config_ADC.c: 64:         case 5:
 11692                           
 11693                           
 11694                           ;Config_ADC.c: 65:             ADCON0bits.CHS3 = 0;
 11695  103C  1283               	bcf	3,5	;RP0=0, select bank0
 11696  103D  1303               	bcf	3,6	;RP1=0, select bank0
 11697  103E  129F               	bcf	31,5	;volatile
 11698                           
 11699                           ;Config_ADC.c: 66:             ADCON0bits.CHS2 = 1;
 11700  103F  161F               	bsf	31,4	;volatile
 11701                           
 11702                           ;Config_ADC.c: 67:             ADCON0bits.CHS1 = 0;
 11703  1040  119F               	bcf	31,3	;volatile
 11704                           
 11705                           ;Config_ADC.c: 68:             ADCON0bits.CHS0 = 1;
 11706  1041  151F               	bsf	31,2	;volatile
 11707                           
 11708                           ;Config_ADC.c: 69:             break;
 11709  1042  28CA               	goto	l3349
 11710  1043                     l187:	
 11711                           ;Config_ADC.c: 70:         case 6:
 11712                           
 11713                           
 11714                           ;Config_ADC.c: 71:             ADCON0bits.CHS3 = 0;
 11715  1043  1283               	bcf	3,5	;RP0=0, select bank0
 11716  1044  1303               	bcf	3,6	;RP1=0, select bank0
 11717  1045  129F               	bcf	31,5	;volatile
 11718                           
 11719                           ;Config_ADC.c: 72:             ADCON0bits.CHS2 = 1;
 11720  1046  161F               	bsf	31,4	;volatile
 11721                           
 11722                           ;Config_ADC.c: 73:             ADCON0bits.CHS1 = 1;
 11723  1047  159F               	bsf	31,3	;volatile
 11724                           
 11725                           ;Config_ADC.c: 74:             ADCON0bits.CHS0 = 0;
 11726  1048  111F               	bcf	31,2	;volatile
 11727                           
 11728                           ;Config_ADC.c: 75:             break;
 11729  1049  28CA               	goto	l3349
 11730  104A                     l188:	
 11731                           ;Config_ADC.c: 76:         case 7:
 11732                           
 11733                           
 11734                           ;Config_ADC.c: 77:             ADCON0bits.CHS3 = 0;
 11735  104A  1283               	bcf	3,5	;RP0=0, select bank0
 11736  104B  1303               	bcf	3,6	;RP1=0, select bank0
 11737  104C  129F               	bcf	31,5	;volatile
 11738                           
 11739                           ;Config_ADC.c: 78:             ADCON0bits.CHS2 = 1;
 11740  104D  161F               	bsf	31,4	;volatile
 11741                           
 11742                           ;Config_ADC.c: 79:             ADCON0bits.CHS1 = 1;
 11743  104E  159F               	bsf	31,3	;volatile
 11744                           
 11745                           ;Config_ADC.c: 80:             ADCON0bits.CHS0 = 1;
 11746  104F  151F               	bsf	31,2	;volatile
 11747                           
 11748                           ;Config_ADC.c: 81:             break;
 11749  1050  28CA               	goto	l3349
 11750  1051                     l189:	
 11751                           ;Config_ADC.c: 82:         case 8:
 11752                           
 11753                           
 11754                           ;Config_ADC.c: 83:             ADCON0bits.CHS3 = 1;
 11755  1051  1283               	bcf	3,5	;RP0=0, select bank0
 11756  1052  1303               	bcf	3,6	;RP1=0, select bank0
 11757  1053  169F               	bsf	31,5	;volatile
 11758                           
 11759                           ;Config_ADC.c: 84:             ADCON0bits.CHS2 = 0;
 11760  1054  121F               	bcf	31,4	;volatile
 11761                           
 11762                           ;Config_ADC.c: 85:             ADCON0bits.CHS1 = 0;
 11763  1055  119F               	bcf	31,3	;volatile
 11764                           
 11765                           ;Config_ADC.c: 86:             ADCON0bits.CHS0 = 0;
 11766  1056  111F               	bcf	31,2	;volatile
 11767                           
 11768                           ;Config_ADC.c: 87:             break;
 11769  1057  28CA               	goto	l3349
 11770  1058                     l190:	
 11771                           ;Config_ADC.c: 88:         case 9:
 11772                           
 11773                           
 11774                           ;Config_ADC.c: 89:             ADCON0bits.CHS3 = 1;
 11775  1058  1283               	bcf	3,5	;RP0=0, select bank0
 11776  1059  1303               	bcf	3,6	;RP1=0, select bank0
 11777  105A  169F               	bsf	31,5	;volatile
 11778                           
 11779                           ;Config_ADC.c: 90:             ADCON0bits.CHS2 = 0;
 11780  105B  121F               	bcf	31,4	;volatile
 11781                           
 11782                           ;Config_ADC.c: 91:             ADCON0bits.CHS1 = 0;
 11783  105C  119F               	bcf	31,3	;volatile
 11784                           
 11785                           ;Config_ADC.c: 92:             ADCON0bits.CHS0 = 1;
 11786  105D  151F               	bsf	31,2	;volatile
 11787                           
 11788                           ;Config_ADC.c: 93:             break;
 11789  105E  28CA               	goto	l3349
 11790  105F                     l191:	
 11791                           ;Config_ADC.c: 94:         case 10:
 11792                           
 11793                           
 11794                           ;Config_ADC.c: 95:             ADCON0bits.CHS3 = 1;
 11795  105F  1283               	bcf	3,5	;RP0=0, select bank0
 11796  1060  1303               	bcf	3,6	;RP1=0, select bank0
 11797  1061  169F               	bsf	31,5	;volatile
 11798                           
 11799                           ;Config_ADC.c: 96:             ADCON0bits.CHS2 = 0;
 11800  1062  121F               	bcf	31,4	;volatile
 11801                           
 11802                           ;Config_ADC.c: 97:             ADCON0bits.CHS1 = 1;
 11803  1063  159F               	bsf	31,3	;volatile
 11804                           
 11805                           ;Config_ADC.c: 98:             ADCON0bits.CHS0 = 0;
 11806  1064  111F               	bcf	31,2	;volatile
 11807                           
 11808                           ;Config_ADC.c: 99:             break;
 11809  1065  28CA               	goto	l3349
 11810  1066                     l192:	
 11811                           ;Config_ADC.c: 100:         case 11:
 11812                           
 11813                           
 11814                           ;Config_ADC.c: 101:             ADCON0bits.CHS3 = 1;
 11815  1066  1283               	bcf	3,5	;RP0=0, select bank0
 11816  1067  1303               	bcf	3,6	;RP1=0, select bank0
 11817  1068  169F               	bsf	31,5	;volatile
 11818                           
 11819                           ;Config_ADC.c: 102:             ADCON0bits.CHS2 = 0;
 11820  1069  121F               	bcf	31,4	;volatile
 11821                           
 11822                           ;Config_ADC.c: 103:             ADCON0bits.CHS1 = 1;
 11823  106A  159F               	bsf	31,3	;volatile
 11824                           
 11825                           ;Config_ADC.c: 104:             ADCON0bits.CHS0 = 1;
 11826  106B  151F               	bsf	31,2	;volatile
 11827                           
 11828                           ;Config_ADC.c: 105:             break;
 11829  106C  28CA               	goto	l3349
 11830  106D                     l193:	
 11831                           ;Config_ADC.c: 106:         case 12:
 11832                           
 11833                           
 11834                           ;Config_ADC.c: 107:             ADCON0bits.CHS3 = 1;
 11835  106D  1283               	bcf	3,5	;RP0=0, select bank0
 11836  106E  1303               	bcf	3,6	;RP1=0, select bank0
 11837  106F  169F               	bsf	31,5	;volatile
 11838                           
 11839                           ;Config_ADC.c: 108:             ADCON0bits.CHS2 = 1;
 11840  1070  161F               	bsf	31,4	;volatile
 11841                           
 11842                           ;Config_ADC.c: 109:             ADCON0bits.CHS1 = 0;
 11843  1071  119F               	bcf	31,3	;volatile
 11844                           
 11845                           ;Config_ADC.c: 110:             ADCON0bits.CHS0 = 0;
 11846  1072  111F               	bcf	31,2	;volatile
 11847                           
 11848                           ;Config_ADC.c: 111:             break;
 11849  1073  28CA               	goto	l3349
 11850  1074                     l194:	
 11851                           ;Config_ADC.c: 112:         case 13:
 11852                           
 11853                           
 11854                           ;Config_ADC.c: 113:             ADCON0bits.CHS3 = 1;
 11855  1074  1283               	bcf	3,5	;RP0=0, select bank0
 11856  1075  1303               	bcf	3,6	;RP1=0, select bank0
 11857  1076  169F               	bsf	31,5	;volatile
 11858                           
 11859                           ;Config_ADC.c: 114:             ADCON0bits.CHS2 = 1;
 11860  1077  161F               	bsf	31,4	;volatile
 11861                           
 11862                           ;Config_ADC.c: 115:             ADCON0bits.CHS1 = 0;
 11863  1078  119F               	bcf	31,3	;volatile
 11864                           
 11865                           ;Config_ADC.c: 116:             ADCON0bits.CHS0 = 1;
 11866  1079  151F               	bsf	31,2	;volatile
 11867                           
 11868                           ;Config_ADC.c: 117:             break;
 11869  107A  28CA               	goto	l3349
 11870  107B                     l195:	
 11871                           ;Config_ADC.c: 118:         case 14:
 11872                           
 11873                           
 11874                           ;Config_ADC.c: 119:             ADCON0bits.CHS3 = 1;
 11875  107B  1283               	bcf	3,5	;RP0=0, select bank0
 11876  107C  1303               	bcf	3,6	;RP1=0, select bank0
 11877  107D  169F               	bsf	31,5	;volatile
 11878                           
 11879                           ;Config_ADC.c: 120:             ADCON0bits.CHS2 = 1;
 11880  107E  161F               	bsf	31,4	;volatile
 11881                           
 11882                           ;Config_ADC.c: 121:             ADCON0bits.CHS1 = 1;
 11883  107F  159F               	bsf	31,3	;volatile
 11884                           
 11885                           ;Config_ADC.c: 122:             ADCON0bits.CHS0 = 0;
 11886  1080  111F               	bcf	31,2	;volatile
 11887                           
 11888                           ;Config_ADC.c: 123:             break;
 11889  1081  28CA               	goto	l3349
 11890  1082                     l196:	
 11891                           ;Config_ADC.c: 124:         case 15:
 11892                           
 11893                           
 11894                           ;Config_ADC.c: 125:             ADCON0bits.CHS3 = 1;
 11895  1082  1283               	bcf	3,5	;RP0=0, select bank0
 11896  1083  1303               	bcf	3,6	;RP1=0, select bank0
 11897  1084  169F               	bsf	31,5	;volatile
 11898                           
 11899                           ;Config_ADC.c: 126:             ADCON0bits.CHS2 = 1;
 11900  1085  161F               	bsf	31,4	;volatile
 11901                           
 11902                           ;Config_ADC.c: 127:             ADCON0bits.CHS1 = 1;
 11903  1086  159F               	bsf	31,3	;volatile
 11904                           
 11905                           ;Config_ADC.c: 128:             ADCON0bits.CHS0 = 1;
 11906  1087  151F               	bsf	31,2	;volatile
 11907                           
 11908                           ;Config_ADC.c: 129:             break;
 11909  1088  28CA               	goto	l3349
 11910  1089                     l197:	
 11911                           ;Config_ADC.c: 130:         default:
 11912                           
 11913                           
 11914                           ;Config_ADC.c: 131:             ADCON0bits.CHS3 = 0;
 11915  1089  1283               	bcf	3,5	;RP0=0, select bank0
 11916  108A  1303               	bcf	3,6	;RP1=0, select bank0
 11917  108B  129F               	bcf	31,5	;volatile
 11918                           
 11919                           ;Config_ADC.c: 132:             ADCON0bits.CHS2 = 0;
 11920  108C  121F               	bcf	31,4	;volatile
 11921                           
 11922                           ;Config_ADC.c: 133:             ADCON0bits.CHS1 = 0;
 11923  108D  119F               	bcf	31,3	;volatile
 11924                           
 11925                           ;Config_ADC.c: 134:             ADCON0bits.CHS0 = 0;
 11926  108E  111F               	bcf	31,2	;volatile
 11927                           
 11928                           ;Config_ADC.c: 135:             break;
 11929  108F  28CA               	goto	l3349
 11930  1090                     l3347:
 11931  1090  0872               	movf	ADC_Config@AN_num,w
 11932  1091  00F0               	movwf	??_ADC_Config
 11933  1092  01F1               	clrf	??_ADC_Config+1
 11934                           
 11935                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11936                           ; Switch size 1, requested type "simple"
 11937                           ; Number of cases is 1, Range of values is 0 to 0
 11938                           ; switch strategies available:
 11939                           ; Name         Instructions Cycles
 11940                           ; simple_byte            4     3 (average)
 11941                           ; direct_byte           11     8 (fixed)
 11942                           ; jumptable            260     6 (fixed)
 11943                           ;	Chosen strategy is simple_byte
 11944  1093  0871               	movf	??_ADC_Config+1,w
 11945  1094  3A00               	xorlw	0	; case 0
 11946  1095  1903               	skipnz
 11947  1096  2898               	goto	l3959
 11948  1097  2889               	goto	l197
 11949  1098                     l3959:
 11950                           
 11951                           ; Switch size 1, requested type "simple"
 11952                           ; Number of cases is 16, Range of values is 0 to 15
 11953                           ; switch strategies available:
 11954                           ; Name         Instructions Cycles
 11955                           ; simple_byte           49    25 (average)
 11956                           ; direct_byte           56     8 (fixed)
 11957                           ; jumptable            260     6 (fixed)
 11958                           ;	Chosen strategy is simple_byte
 11959  1098  0870               	movf	??_ADC_Config,w
 11960  1099  3A00               	xorlw	0	; case 0
 11961  109A  1903               	skipnz
 11962  109B  2819               	goto	l180
 11963  109C  3A01               	xorlw	1	; case 1
 11964  109D  1903               	skipnz
 11965  109E  2820               	goto	l182
 11966  109F  3A03               	xorlw	3	; case 2
 11967  10A0  1903               	skipnz
 11968  10A1  2827               	goto	l183
 11969  10A2  3A01               	xorlw	1	; case 3
 11970  10A3  1903               	skipnz
 11971  10A4  282E               	goto	l184
 11972  10A5  3A07               	xorlw	7	; case 4
 11973  10A6  1903               	skipnz
 11974  10A7  2835               	goto	l185
 11975  10A8  3A01               	xorlw	1	; case 5
 11976  10A9  1903               	skipnz
 11977  10AA  283C               	goto	l186
 11978  10AB  3A03               	xorlw	3	; case 6
 11979  10AC  1903               	skipnz
 11980  10AD  2843               	goto	l187
 11981  10AE  3A01               	xorlw	1	; case 7
 11982  10AF  1903               	skipnz
 11983  10B0  284A               	goto	l188
 11984  10B1  3A0F               	xorlw	15	; case 8
 11985  10B2  1903               	skipnz
 11986  10B3  2851               	goto	l189
 11987  10B4  3A01               	xorlw	1	; case 9
 11988  10B5  1903               	skipnz
 11989  10B6  2858               	goto	l190
 11990  10B7  3A03               	xorlw	3	; case 10
 11991  10B8  1903               	skipnz
 11992  10B9  285F               	goto	l191
 11993  10BA  3A01               	xorlw	1	; case 11
 11994  10BB  1903               	skipnz
 11995  10BC  2866               	goto	l192
 11996  10BD  3A07               	xorlw	7	; case 12
 11997  10BE  1903               	skipnz
 11998  10BF  286D               	goto	l193
 11999  10C0  3A01               	xorlw	1	; case 13
 12000  10C1  1903               	skipnz
 12001  10C2  2874               	goto	l194
 12002  10C3  3A03               	xorlw	3	; case 14
 12003  10C4  1903               	skipnz
 12004  10C5  287B               	goto	l195
 12005  10C6  3A01               	xorlw	1	; case 15
 12006  10C7  1903               	skipnz
 12007  10C8  2882               	goto	l196
 12008  10C9  2889               	goto	l197
 12009  10CA                     l3349:
 12010                           
 12011                           ;Config_ADC.c: 137:     ADCON1 = 0b00000000;
 12012  10CA  1683               	bsf	3,5	;RP0=1, select bank1
 12013  10CB  1303               	bcf	3,6	;RP1=0, select bank1
 12014  10CC  019F               	clrf	31	;volatile
 12015  10CD                     l3351:
 12016                           
 12017                           ;Config_ADC.c: 138:     ADCON0bits.ADCS1 = 1;
 12018  10CD  1283               	bcf	3,5	;RP0=0, select bank0
 12019  10CE  1303               	bcf	3,6	;RP1=0, select bank0
 12020  10CF  179F               	bsf	31,7	;volatile
 12021  10D0                     l3353:
 12022                           
 12023                           ;Config_ADC.c: 139:     ADCON0bits.ADCS0 = 0;
 12024  10D0  131F               	bcf	31,6	;volatile
 12025  10D1                     l3355:
 12026                           
 12027                           ;Config_ADC.c: 140:     ADCON0bits.ADON = 1;
 12028  10D1  141F               	bsf	31,0	;volatile
 12029  10D2                     l198:
 12030  10D2  0008               	return
 12031  10D3                     __end_of_ADC_Config:
 12032  007E                     btemp	set	126	;btemp
 12033  007E                     wtemp0	set	126
 12034                           
 12035                           	psect	config
 12036                           
 12037                           ;Config register CONFIG1 @ 0x2007
 12038                           ;	Oscillator Selection bits
 12039                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 12040                           ;	Watchdog Timer Enable bit
 12041                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 12042                           ;	Power-up Timer Enable bit
 12043                           ;	PWRTE = OFF, PWRT disabled
 12044                           ;	RE3/MCLR pin function select bit
 12045                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 12046                           ;	Code Protection bit
 12047                           ;	CP = OFF, Program memory code protection is disabled
 12048                           ;	Data Code Protection bit
 12049                           ;	CPD = OFF, Data memory code protection is disabled
 12050                           ;	Brown Out Reset Selection bits
 12051                           ;	BOREN = ON, BOR enabled
 12052                           ;	Internal External Switchover bit
 12053                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 12054                           ;	Fail-Safe Clock Monitor Enabled bit
 12055                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 12056                           ;	Low Voltage Programming Enable bit
 12057                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 12058                           ;	In-Circuit Debugger Mode bit
 12059                           ;	DEBUG = 0x1, unprogrammed default
 12060  2007                     	org	8199
 12061  2007  23D2               	dw	9170
 12062                           
 12063                           ;Config register CONFIG2 @ 0x2008
 12064                           ;	Brown-out Reset Selection bit
 12065                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 12066                           ;	Flash Program Memory Self Write Enable bits
 12067                           ;	WRT = OFF, Write protection off
 12068  2008                     	org	8200
 12069  2008  3FFF               	dw	16383

Data Sizes:
    Strings     25
    Constant    144
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     43      75
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> data(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), data(BANK1[16]), 


Critical Paths under _main in COMMON

    _titulos_LCD->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _setup->_initOsc
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flsub->___xxtofl
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _ADC_channel2->___xxtofl
    _ADC_channel1->___xxtofl
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_float_to_string
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _ADC_channel2->___fldiv
    _ADC_channel1->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _float_to_string->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   47476
                                             41 BANK1      2     2      0
                       _ADC_channel1
                       _ADC_channel2
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _float_to_string
                              _setup
                        _titulos_LCD
 ---------------------------------------------------------------------------------
 (1) _titulos_LCD                                          1     1      0     920
                                             10 COMMON     1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     438
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     482
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _float_to_string                                      1     1      0   32160
                                             78 BANK0      1     1      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             46    37      9   32160
                                              0 BANK1     41    32      9
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_channel2                                         4     4      0    6694
                                             56 BANK0      4     4      0
                         _ADC_Config
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _ADC_channel1                                         4     4      0    6694
                                             56 BANK0      4     4      0
                         _ADC_Config
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Config                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_channel1
     _ADC_Config
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _ADC_channel2
     _ADC_Config
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _float_to_string
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
   _setup
     _initOsc
   _titulos_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2B      4B       7       93.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 11 12:35:07 2021

             ___fldiv@aexp 0057               ___fldiv@bexp 0056                          pc 0002  
             ___fldiv@sign 004F                         l71 1AE8                         l83 1EA3  
                       l77 1E30                         l86 19E0                         l95 1CFE  
                       l96 1D56                         l97 1D04                         l89 19C1  
                       l98 1D0A                         l99 1D10               ___awdiv@sign 0021  
                       fsr 0004        ___wmul@multiplicand 0072        __size_of_ADC_Config 00BC  
      __Umul8_16@word_mpld 0076                        l100 1D16                        l101 1D1C  
                      l102 1D22                        l103 1D28                        l104 1D2E  
                      l121 0805                        l105 1D57                        l124 19A6  
                      l300 1577                        l133 1A28                        l118 1C00  
                      l142 1B2A                        l136 1016                        l307 0C9E  
                      l180 1019                        l190 1058                        l182 1020  
                      l430 1DBD                        l191 105F                        l183 1027  
                      l192 1066                        l184 102E                        l360 057F  
                      l193 106D                        l185 1035                        l329 013A  
                      l194 1074                        l186 103C                        l195 107B  
                      l187 1043                        l611 118F                        l196 1082  
                      l188 104A                        l604 086C                        l612 1101  
                      l700 1B6E                        l197 1089                        l189 1051  
                      l198 10D2                        l622 1182                        l710 1AAE  
                      l390 07EF                        l607 0881                        l615 1152  
                      l375 072A                        l367 05C3                        l560 1CFB  
                      l801 1360                        l721 15DB                        l650 1CA2  
                      l394 1A35                        l547 0074                        l580 1C1D  
                      l396 1A4D                        l564 093F                        l581 1C39  
                      l725 1682                        l565 08A4                        l582 1C4E  
                      l742 174D                        l734 17FF                        l823 0F6B  
                      l727 1659                        l575 0932                        l752 1793  
                      l568 0902                        l817 0FFF                        l585 1EC0  
                      l593 197A                        l746 1771                        l763 17F3  
                      l755 17D1                        l836 1A62                        l588 1F2C  
                      l764 17FF                        l829 0FF3                        l861 1F68  
                      l589 1F45                        l597 0881                        l838 1A74  
                      l863 1FFF                        l767 1A04                        l793 12DE  
                      l777 11EC                        l881 198C                        l874 1FC9  
                      l779 136C                        l875 1FD5                        l867 1FAD  
                      l799 1350                        _VAL 00D9                        fsr0 0004  
                      indf 0000               ___awmod@sign 0076               ___flmul@aexp 0036  
             ___flmul@bexp 0037                _titulos_LCD 1AAF                _sprintf$999 00AE  
             ___flmul@sign 0031               ___flmul@temp 003C               ___flmul@prod 0038  
             ___fltol@exp1 005B                       l3001 0AC7                       l3101 08AD  
                     l3013 0BE3                       l3005 0AF4                       l3111 08E4  
                     l3103 08BE                       l3031 198B                       l3023 197C  
                     l3015 0BEA                       l3007 0AFB                       l3201 1F08  
                     l3113 08F2                       l3105 08C0                       l3041 10EF  
                     l3025 197D                       l3203 1F42                       l3211 1978  
                     l3115 08F3                       l3107 08C9                       l3051 1117  
                     l3035 10D3                       l3027 1983                       l3019 0C72  
                     l3301 1FA4                       l3205 1F44                       l3213 197A  
                     l3141 1A2B                       l3133 0927                       l3125 090E  
                     l3117 08FC                       l3109 08D2                       l3061 1143  
                     l3053 1119                       l3037 10E6                       l3029 1989  
                     l2501 0032                       l3311 1FD7                       l3303 1FB4  
                     l3231 083C                       l3223 081C                       l3143 1A2F  
                     l3135 0937                       l3119 0906                       l3127 0920  
                     l3063 1144                       l3055 1122                       l3047 1102  
                     l2511 0058                       l2503 0039                       l3313 1FED  
                     l3305 1FBF                       l3209 1970                       l3233 0840  
                     l3241 085A                       l3225 0831                       l3217 0806  
                     l3161 1D7C                       l3153 1D58                       l3145 1A3C  
                     l3081 1177                       l3073 115E                       l3065 114C  
                     l3057 112B                       l3049 1108                       l2601 1A97  
                     l2521 0070                       l2513 0059                       l2505 003D  
                     l3401 0138                       l3315 1FF2                       l3307 1FC3  
                     l2611 1578                       l3251 0876                       l3227 0832  
                     l3219 0813                       l3171 1DAF                       l3163 1D85  
                     l3155 1D68                       l3147 1A43                       l3139 1A29  
                     l3083 1187                       l3067 1156                       l3075 1170  
                     l3059 1139                       l2603 1A9D                       l2515 0060  
                     l2507 0041                       l2531 1CAD                       l3411 0168  
                     l3331 1A1D                       l3323 1A06                       l3317 1FF6  
                     l3309 1FCD                       l3181 1C31                       l2701 166C  
                     l2621 158F                       l2613 157F                       l3229 083A  
                     l3165 1D97                       l3157 1D6B                       l3173 1DB5  
                     l3261 1C6B                       l3253 1C4F                       l3149 1A49  
                     l3093 0898                       l2605 1AA4                       l2509 0052  
                     l2517 0066                       l2541 1CC1                       l2533 1CAF  
                     l2525 1CA3                       l3501 04DD                       l3421 01B0  
                     l3413 016C                       l3405 013C                       l3333 1A22  
                     l3325 1A0B                       l3341 1B0E                       l3351 10CD  
                     l3343 1018                       l2471 1A5C                       l3319 1FF7  
                     l3183 1C4B                       l3191 1EB8                       l2711 168B  
                     l2703 166D                       l2631 15A7                       l2623 1594  
                     l2615 1585                       l3247 0861                       l3239 0848  
                     l3167 1DA5                       l3159 1D78                       l3263 1C7D  
                     l3255 1C57                       l3087 0882                       l2607 1AAA  
                     l2519 006B                       l2551 1CE0                       l2543 1CC8  
                     l2535 1CB3                       l2527 1CA4                       l3511 04FF  
                     l3503 04E4                       l3431 01E2                       l3423 01B4  
                     l3415 017A                       l3407 0158                       l3327 1A10  
                     l3335 1AE9                       l3353 10D0                       l2473 1A6B  
                     l2465 1A4F                       l3281 1F4C                       l3185 1C4D  
                     l3177 1C01                       l3193 1ED4                       l2801 17FA  
                     l2721 16B3                       l2705 1676                       l2641 15BD  
                     l2633 15AC                       l2625 159C                       l2617 1589  
                     l3273 19E1                       l3249 0871                       l3169 1DA6  
                     l3265 1C8B                       l3257 1C5A                       l3089 088F  
                     l2481 000C                       l2553 1CE7                       l2545 1CCC  
                     l2537 1CB8                       l2529 1CA8                       l3601 07B5  
                     l3521 0573                       l3513 050D                       l3505 04ED  
                     l3441 0231                       l3433 01F5                       l3425 01B8  
                     l3417 017E                       l3409 0164                       l3361 0078  
                     l3329 1A17                       l3337 1AEC                       l3355 10D1  
                     l3347 1090                       l2475 1A70                       l2467 1A51  
                     l2811 0CB0                       l3291 1F79                       l3283 1F50  
                     l3179 1C15                       l3195 1EDC                       l2803 17FE  
                     l2731 16CC                       l2723 16BC                       l2715 1694  
                     l2707 167A                       l2651 15D1                       l2643 15BE  
                     l2635 15B2                       l2627 159D                       l2619 158A  
                     l3275 19E5                       l3267 1C94                       l3259 1C67  
                     l3099 08A5                       l2571 1B3D                       l2563 1B2B  
                     l2491 001E                       l2483 000F                       l2547 1CD0  
                     l2539 1CBE                       l2555 1CED                       l3603 07B9  
                     l3531 05A7                       l3523 0587                       l3515 0514  
                     l3443 027C                       l3435 0208                       l3427 01D1  
                     l3451 02C1                       l3419 0197                       l3371 0093  
                     l3363 007D                       l3611 07D9                       l3339 1B08  
                     l3349 10CA                       l3701 125E                       l2469 1A58  
                     l2901 0F4B                       l2821 0CC5                       l2813 0CB1  
                     l2805 0C9F                       l3293 1F7E                       l3285 1F60  
                     l3197 1EE0                       l3189 1EA4                       l2741 1730  
                     l2725 16BE                       l2717 16AB                       l2709 1686  
                     l2733 16D1                       l2661 15ED                       l2645 15C3  
                     l2653 15D3                       l2637 15B3                       l2629 159F  
                     l3269 1C9A                       l2581 1B5D                       l2573 1B41  
                     l2565 1B2D                       l2493 0023                       l2485 0013  
                     l2557 1CF2                       l2549 1CDA                       l3605 07C5  
                     l3541 05D8                       l3533 05B6                       l3525 0590  
                     l3517 0519                       l3509 04F2                       l3461 0368  
                     l3453 02D0                       l3445 0295                       l3437 020C  
                     l3429 01DC                       l3613 07EB                       l3381 00D3  
                     l3373 00A3                       l3365 0083                       l3711 127F  
                     l3703 1262                       l2903 0F4F                       l2831 0CDD  
                     l2823 0CCD                       l2815 0CB6                       l2807 0CA6  
                     l3295 1F8B                       l3287 1F70                       l3279 1F47  
                     l2479 0801                       l3199 1F04                       l2751 1763  
                     l2735 16E7                       l2743 173F                       l2727 16C2  
                     l2719 16AF                       l2671 1601                       l2663 15F1  
                     l2655 15E1                       l2647 15C8                       l2639 15B9  
                     l2583 1B64                       l2575 1B45                       l2567 1B33  
                     l2591 1A7B                       l2495 0027                       l2487 0018  
                     l2559 1CF7                       l3607 07D1                       l3551 06AF  
                     l3543 05DC                       l3535 05BD                       l3527 0594  
                     l3519 0554                       l3471 03C1                       l3463 0377  
                     l3455 0317                       l3447 029E                       l3439 0212  
                     l3391 00F9                       l3375 00A7                       l3383 00E3  
                     l3367 008A                       l3623 1CFD                       l3721 12A1  
                     l3713 128D                       l3705 1263                       l3641 11A2  
                     l3633 1190                       l2921 0FA0                       l2913 0F70  
                     l2905 0F50                       l2841 0CF9                       l2833 0CE2  
                     l2825 0CD2                       l2817 0CBB                       l2809 0CAC  
                     l3297 1F92                       l3801 1BB6                       l2761 177A  
                     l2753 176C                       l2745 1755                       l2737 1725  
                     l2729 16C3                       l2681 1615                       l2673 1605  
                     l2665 15F5                       l2657 15E5                       l2649 15D0  
                     l2577 1B56                       l2569 1B36                       l2585 1B6A  
                     l2593 1A7E                       l2497 0029                       l2489 001A  
                     l3561 0709                       l3553 06BB                       l3545 05FA  
                     l3537 05CC                       l3529 059A                       l3481 046B  
                     l3465 0392                       l3457 0326                       l3449 02B9  
                     l3393 010E                       l3385 00F1                       l3377 00BC  
                     l3369 008F                       l3723 12AA                       l3731 12BE  
                     l3707 126C                       l3715 1291                       l3643 11A7  
                     l3651 11B7                       l3635 1197                       l2931 0FD7  
                     l2915 0F75                       l2923 0FA6                       l2907 0F54  
                     l2851 0D1C                       l2843 0CFE                       l2835 0CE7  
                     l2827 0CD8                       l2819 0CC3                       l3299 1F96  
                     l3803 1BBC                       l2771 178A                       l2763 177F  
                     l2755 1770                       l2747 175A                       l2739 172B  
                     l2691 1626                       l2683 1619                       l2675 1609  
                     l2667 15F9                       l2659 15E9                       l2579 1B5C  
                     l2595 1A85                       l2499 002F                       l3571 0735  
                     l3563 070F                       l3547 0655                       l3555 06F6  
                     l3539 05D1                       l3483 046D                       l3475 03E0  
                     l3467 039B                       l3459 0341                       l3395 0121  
                     l3387 00F2                       l3379 00CF                       l3627 1D34  
                     l3811 1AAF                       l3733 12C2                       l3725 12AE  
                     l3717 1297                       l3709 127E                       l3661 11CF  
                     l3653 11BF                       l3645 11AC                       l3637 119D  
                     l2941 0FF7                       l2933 0FD9                       l2925 0FB3  
                     l2917 0F83                       l2909 0F68                       l2861 0DAA  
                     l2853 0D29                       l2845 0D03                       l2837 0CEF  
                     l2829 0CDC                       l3821 1DBE                       l3805 1BC5  
                     l2781 17AB                       l2773 1790                       l2757 1775  
                     l2765 1781                       l2693 163D                       l2685 161D  
                     l2677 160D                       l2669 15FD                       l2597 1A89  
                     l2589 1A75                       l3581 0768                       l3573 073C  
                     l3557 06FE                       l3549 0690                       l3493 04A6  
                     l3469 03A3                       l3477 03E9                       l3565 0716  
                     l3397 0125                       l3389 00F6                       l3813 1AB9  
                     l3751 1313                       l3743 12E3                       l3735 12C3  
                     l3727 12AF                       l3719 129F                       l3663 11D4  
                     l3671 11E4                       l3655 11C4                       l3647 11B4  
                     l3639 11A1                       l2935 0FE7                       l2927 0FBE  
                     l2919 0F87                       l2871 0E0C                       l2863 0DC6  
                     l2855 0D46                       l2839 0CF1                       l3823 1DC4  
                     l3831 1E31                       l2951 199A                       l3807 1BD4  
                     l2791 17E3                       l2783 17AF                       l2759 1778  
                     l2767 1785                       l2695 165D                       l2687 1621  
                     l2679 1611                       l2599 1A8D                       l3591 078D  
                     l3583 076E                       l3575 074B                       l3567 071C  
                     l3559 0705                       l3495 04B0                       l3479 041E  
                     l3399 0136                       l3815 1AC2                       l3761 1347  
                     l3745 12E8                       l3753 1319                       l3737 12C7  
                     l3729 12B8                       l3673 11F4                       l3681 120D  
                     l3665 11D9                       l3657 11CA                       l3649 11B5  
                     l2937 0FEB                       l2929 0FCD                       l2881 0E9C  
                     l2873 0E29                       l2865 0DCF                       l2857 0D62  
                     l2849 0D0C                       l3825 1DCE                       l3833 1E37  
                     l2953 19A3                       l2945 198E                       l3809 1BDA  
                     l2793 17E8                       l2785 17CD                       l2777 1798  
                     l2769 1786                       l2697 1666                       l2689 1625  
                     l3593 0798                       l3585 0772                       l3577 0754  
                     l3569 0724                       l3497 04CB                       l3489 046F  
                     l3841 19C2                       l2961 100E                       l3817 1AD5  
                     l3763 134F                       l3755 1326                       l3747 12F6  
                     l3739 12DB                       l3691 1235                       l3683 1212  
                     l3675 1200                       l3667 11E1                       l3659 11CE  
                     l2939 0FEC                       l2891 0F2E                       l2883 0EC9  
                     l2875 0E42                       l2867 0DDF                       l2859 0D8E  
                     l3827 1DD2                       l3835 1E41                       l2947 1991  
                     l2795 17E9                       l2787 17D6                       l2779 179D  
                     l2699 1668                       l3595 07A4                       l3587 0780  
                     l3579 075C                       l3499 04D1                       l2963 1013  
                     l2955 1002                       l3819 1ADF                       l3851 1B83  
                     l3843 1B6F                       l3765 1356                       l3757 1334  
                     l3749 12FA                       l3693 123D                       l3677 1204  
                     l3669 11E2                       l2893 0F37                       l2885 0EEF  
                     l2877 0E5F                       l2869 0DFC                       l3829 1E2B  
                     l3837 1E45                       l2949 1997                       l2797 17ED  
                     l2789 17DB                       l2973 1483                       l2965 1370  
                     l3597 07A8                       l3589 0789                       l3781 19B2  
                     l2957 1005                       l3861 1BA9                       l3853 1B8D  
                     l3845 1B74                       l3767 135A                       l3759 1343  
                     l3695 1245                       l3687 121B                       l2895 0F3B  
                     l2887 0F17                       l2879 0E8C                       l3839 1E9E  
                     l2799 17EF                       l2975 1489                       l2967 1376  
                     l2983 0943                       l3599 07AE                       l3791 19BA  
                     l3783 19B6                       l3775 19A7                       l2959 100B  
                     l3855 1B92                       l3847 1B79                       l3769 135C  
                     l3697 1247                       l3689 122D                       l2897 0F3C  
                     l2889 0F20                       l2985 0947                       l3793 19BD  
                     l3785 19B7                       l3777 19AD                       l3857 1B9C  
                     l3849 1B7E                       l3699 124C                       l2899 0F45  
                     l2979 1534                       l2995 0A38                       l2987 0949  
                     l3955 1D3C                       l3795 19BE                       l3787 19B8  
                     l3779 19B1                       l3859 1BA1                       l2997 0A3F  
                     l2989 0950                       l3957 0150                       l3797 19BF  
                     l3789 19B9                       l3959 1098                       l3799 19C0  
                     STR_1 18AD                       STR_2 18B1                       STR_3 18B5  
                     STR_4 18A0                       u3100 1A70                       u3101 1A6F  
                     u3110 0013                       u3111 0012                       u3200 006B  
                     u3120 001E                       u4001 0DB8                       u3201 006A  
                     u3121 001D                       u4002 0DBF                       u3130 002F  
                     u3210 1CA8                       u4003 0DC6                       u3131 002E  
                     u3211 1CA7                       u4100 0EFD                       u3300 1B33  
                     u3220 1CB3                       u4021 0DEE                       u3301 1B32  
                     u3221 1CB2                       u4022 0DF5                       u3150 0041  
                     u3230 1CBE                       u4111 0F09                       u4031 0E1B  
                     u4023 0DFC                       u4015 0DC8                       u3151 0040  
                     u3231 1CBD                       u3080 1A5C                       u4200 0F75  
                     u4112 0F10                       u4032 0E22                       u5000 1978  
                     u3320 1B45                       u3400 1A97                       u3081 1A5B  
                     u4201 0F74                       u4113 0F17                       u4105 0EF8  
                     u4033 0E29                       u5001 1977                       u3321 1B44  
                     u3401 1A96                       u3145 0033                       u4210 0F87  
                     u5010 0813                       u3170 0052                       u3250 1CD0  
                     u4211 0F86                       u4051 0E51                       u5011 0812  
                     u3315 1B37                       u3171 0051                       u3251 1CCF  
                     u4220 0F96                       u4140 0F3B                       u4052 0E58  
                     u3500 15E1                       u5100 0876                       u5020 082A  
                     u3340 1B56                       u3420 1AAA                       u4300 1489  
                     u3260 1CDA                       u4141 0F3A                       u4125 0F19  
                     u4061 0E7E                       u4053 0E5F                       u4045 0E2B  
                     u3501 15E0                       u5101 0875                       u3341 1B55  
                     u3421 1AA9                       u3405 1A93                       u4301 1488  
                     u3165 0042                       u3261 1CD9                       u3245 1CC2  
                     u4230 0FB3                       u4062 0E85                       u3510 15E5  
                     u3430 1589                       u5030 0840                       u5110 1C57  
                     u3190 0066                       u3095 1A63                       u4231 0FB2  
                     u4135 0F30                       u4071 0EAB                       u4063 0E8C  
                     u3511 15E4                       u3431 1588                       u5031 083F  
                     u5111 1C56                       u3335 1B46                       u3415 1A9E  
                     u3191 0065                       u3175 004E                       u6000 12AE  
                     u4240 0FCD                       u4160 0F4F                       u4080 0ED5  
                     u4072 0EB2                       u3600 168B                       u3520 163D  
                     u3440 158F                       u5040 0847                       u3360 1B6A  
                     u3280 1CED                       u6001 12AD                       u4241 0FCC  
                     u4225 0F91                       u4161 0F4E                       u4073 0EB9  
                     u3601 168A                       u3521 163C                       u3441 158E  
                     u5041 0846                       u5025 0825                       u3361 1B69  
                     u3345 1B52                       u3185 005A                       u3281 1CEC  
                     u3265 1CD6                       u4250 0FEB                       u4170 0F54  
                     u5210 1F91                       u3530 1648                       u3450 1594  
                     u5130 1C6B                       u3370 1A7B                       u3290 1CF2  
                     u4251 0FEA                       u4235 0FAF                       u4171 0F53  
                     u4155 0F3E                       u4091 0EE1                       u5211 1F90  
                     u3611 169D                       u3531 1646                       u3451 1593  
                     u5131 1C6A                       u3355 1B5E                       u3371 1A7A  
                     u4315 14A6                       u3291 1CF1                       u3275 1CE1  
                     u6100 1343                       u6020 12C2                       u4180 0F68  
                     u4092 0EE8                       u5300 1FF6                       u3700 1755  
                     u3620 16AF                       u3612 16A4                       u3540 1649  
                     u3460 15B2                       u5060 0859                       u5140 1C7D  
                     u4260 1376                       u4340 0947                       u6101 1342  
                     u6021 12C1                       u4245 0FC9                       u4181 0F67  
                     u4093 0EEF                       u4085 0ED0                       u5301 1FF5  
                     u5205 1F83                       u3701 1754                       u3621 16AE  
                     u3613 16AB                       u3525 1639                       u3461 15B1  
                     u5061 0858                       u5141 1C7C                       u5125 1C5C  
                     u4325 14F3                       u4261 1375                       u4405 0A52  
                     u4341 0946                       u6110 135A                       u6030 12C7  
                     u4190 0F6F                       u5230 1FB3                       u3710 175A  
                     u3630 16B3                       u3550 165D                       u3470 15BD  
                     u5070 0860                       u3390 1A8D                       u4510 1983  
                     u4430 0AFB                       u4350 0950                       u5310 1A0B  
                     u6111 1359                       u6031 12C6                       u6015 12B1  
                     u4191 0F6E                       u5231 1FB2                       u3711 1759  
                     u3631 16B2                       u3551 165C                       u3471 15BC  
                     u5071 085F                       u5055 0849                       u3391 1A8C  
                     u4335 153F                       u4511 1982                       u4431 0AFA  
                     u4415 0A8E                       u4351 094F                       u5311 1A0A  
                     u6040 12DB                       u6120 1E30                       u3800 179D  
                     u3640 16C2                       u3560 166C                       u3480 15C3  
                     u5160 1C9A                       u4600 115D                       u4520 1989  
                     u5400 0135                       u5320 1A1D                       u6105 133F  
                     u6041 12DA                       u5225 1FA5                       u6121 1E2F  
                     u3801 179C                       u3641 16C1                       u3561 166B  
                     u3481 15C2                       u5161 1C99                       u5145 1C79  
                     u4601 115C                       u3385 1A7F                       u4521 1988  
                     u4505 0C75                       u4425 0ACA                       u5401 0134  
                     u5321 1A1C                       u6050 12E2                       u5250 1FC3  
                     u5170 1F4C                       u6130 1EA3                       u3810 17AF  
                     u3730 1770                       u3490 15C8                       u5090 0871  
                     u4530 10E6                       u5410 0164                       u5330 1AF6  
                     u6051 12E1                       u5251 1FC2                       u5171 1F4B  
                     u6131 1EA2                       u3811 17AE                       u3731 176F  
                     u3491 15C7                       u5091 0870                       u5155 1C8C  
                     u4531 10E5                       u4275 1393                       u5411 0163  
                     u6060 12E8                       u3900 0CB6                       u5260 1FC9  
                     u5180 1F50                       u3820 17BE                       u3740 1775  
                     u3660 16E7                       u3580 1682                       u4620 116F  
                     u4540 1100                       u5500 0341                       u5420 0168  
                     u5340 1B18                       u6061 12E7                       u3901 0CB5  
                     u5261 1FC8                       u5245 1FB8                       u5181 1F4F  
                     u3741 1774                       u3725 1765                       u3661 16E6  
                     u3581 1681                       u5085 0863                       u4621 116E  
                     u4541 10FF                       u4285 13ED                       u4445 0B1B  
                     u4365 0970                       u5501 0340                       u5421 0167  
                     u6070 12FA                       u3910 0CBB                       u5270 1FCD  
                     u5190 1F70                       u3830 17CD                       u3750 177F  
                     u3590 1686                       u4710 0902                       u4630 1176  
                     u4470 0BEA                       u4390 0A3F                       u5510 0368  
                     u5430 0197                       u5350 1B2A                       u6071 12F9  
                     u3911 0CBA                       u5271 1FCC                       u5191 1F6F  
                     u6207 1BDE                       u3831 17CC                       u3751 177E  
                     u3671 16FE                       u3663 16E3                       u3655 16C5  
                     u3591 1685                       u3575 166F                       u4711 0901  
                     u4631 1175                       u4615 115F                       u4295 1442  
                     u4471 0BE9                       u4455 0B57                       u4391 0A3E  
                     u4375 09AC                       u5511 0367                       u5431 0196  
                     u5351 1B29                       u6080 1309                       u3920 0CDC  
                     u5280 1FE2                       u3840 17D6                       u3760 1785  
                     u3680 1712                       u3672 16FF                       u4720 0906  
                     u4560 1139                       u5600 050D                       u5520 0377  
                     u5440 01D1                       u5360 0083                       u3921 0CDB  
                     u6217 199E                       u3841 17D5                       u3825 17B9  
                     u3761 1784                       u3681 1713                       u3673 1704  
                     u4721 0905                       u4705 08F5                       u4561 1138  
                     u4465 0BA2                       u4385 09F7                       u5601 050C  
                     u5521 0376                       u5441 01D0                       u5361 0082  
                     u6090 1326                       u3930 0CE2                       u5290 1FF2  
                     u3850 17DB                       u3770 178A                       u3690 1730  
                     u3682 1718                       u3674 1705                       u4730 090D  
                     u4650 1187                       u5530 0392                       u5450 020C  
                     u5370 00A3                       u6091 1325                       u3931 0CE1  
                     u5291 1FF1                       u6227 1E3D                       u3851 17DA  
                     u3771 1789                       u3691 172F                       u3683 1719  
                     u3675 170A                       u4731 090C                       u4651 1186  
                     u4555 1124                       u5531 0391                       u5451 020B  
                     u5371 00A2                       u3940 0CE7                       u4900 1C15  
                     u3860 17E8                       u3780 1790                       u3676 170B  
                     u4820 1A49                       u4660 088F                       u4580 1152  
                     u5700 071C                       u5620 0586                       u5460 0295  
                     u5380 00E3                       u6085 1304                       u3941 0CE6  
                     u5285 1FDD                       u6237 1DCA                       u4901 1C14  
                     u3861 17E7                       u3781 178F                       u4821 1A48  
                     u4805 1A36                       u4661 088E                       u4645 1179  
                     u4581 1151                       u4565 1135                       u4485 0BFD  
                     u5701 071B                       u5621 0585                       u5525 0373  
                     u5461 0294                       u5381 00E2                       u6157 1B89  
                     u3950 0CFE                       u4910 1C31                       u3870 17ED  
                     u3790 1797                       u4830 1D68                       u4750 091F  
                     u4670 08A3                       u4590 1156                       u5710 0724  
                     u5630 05A7                       u5550 04A5                       u5470 02B9  
                     u5390 00F1                       u6095 1322                       u3951 0CFD  
                     u4911 1C30                       u3871 17EC                       u3791 1796  
                     u4831 1D67                       u4815 1A3D                       u4751 091E  
                     u4671 08A2                       u4591 1155                       u4575 1145  
                     u4495 0C39                       u5711 0723                       u5631 05A6  
                     u5615 051C                       u5551 04A4                       u5471 02B8  
                     u5391 00F0                       u6167 1B98                       u3960 0D03  
                     u4920 1C4B                       u3880 17FE                       u4760 0926  
                     u5800 07C5                       u5720 0735                       u5640 05B6  
                     u5560 04B0                       u5480 02D0                       u3961 0D02  
                     u4921 1C4A                       u3881 17FD                       u4761 0925  
                     u4745 090F                       u5801 07C4                       u5721 0734  
                     u5641 05B5                       u5561 04AF                       u5545 0472  
                     u5481 02CF                       u6177 1010                       u3890 0CB0  
                     u4930 1EB8                       u4850 1D7C                       u4690 08E4  
                     u5810 07D1                       u5730 074B                       u5650 05D1  
                     u5570 04CB                       u5490 0326                       u3971 0D54  
                     u3891 0CAF                       u6187 1BC0                       u4931 1EB7  
                     u4851 1D7B                       u4691 08E3                       u5811 07D0  
                     u5731 074A                       u5651 05D0                       u5635 05A3  
                     u5571 04CA                       u5555 04A1                       u5491 0325  
                     u5900 1212                       u3972 0D5B                       u4940 1ED4  
                     u4780 0937                       u5820 07EB                       u5740 075C  
                     u5580 04DD                       u5901 1211                       u3981 0D70  
                     u3973 0D62                       u6197 1BCF                       u4925 1C47  
                     u4941 1ED3                       u4845 1D6D                       u4781 0936  
                     u4685 08CB                       u5821 07EA                       u5741 075B  
                     u5725 0731                       u5645 05B2                       u5581 04DC  
                     u5485 02CC                       u5910 124C                       u5830 11A1  
                     u3982 0D77                       u4950 1EE0                       u4870 1D97  
                     u4790 1A2F                       u5750 0768                       u5590 04FF  
                     u5911 124B                       u5831 11A0                       u3991 0D9C  
                     u3983 0D7E                       u4951 1EDF                       u4871 1D96  
                     u4791 1A2E                       u4775 0929                       u4695 08E0  
                     u5751 0767                       u5735 0747                       u5591 04FE  
                     u5495 0322                       u5840 11A7                       u3992 0DA3  
                     u5760 0772                       u5680 06FD                       u5841 11A6  
                     u3993 0DAA                       u4961 1EEF                       u4865 1D7E  
                     u5761 0771                       u5681 06FC                       u5665 0658  
                     u5850 11AC                       u4970 1F08                       u4962 1EF0  
                     u4890 1DB5                       u5770 0780                       u5690 0715  
                     u5851 11AB                       u4971 1F07                       u4963 1EF5  
                     u4891 1DB4                       u4875 1D93                       u5771 077F  
                     u5691 0714                       u5675 06BE                       u5595 04FB  
                     u5940 1262                       u5860 11CE                       u4964 1EF6  
                     u5780 0798                       u5941 1261                       u5925 124E  
                     u5861 11CD                       u4981 1F17                       u4965 1EFB  
                     u4885 1DA7                       u5781 0797                       u5870 11D4  
                     u4990 1F42                       u4982 1F18                       u4966 1EFC  
                     u5790 07AE                       u5935 1257                       u5871 11D3  
                     u4991 1F41                       u4983 1F1D                       u5791 07AD  
                     u5775 077C                       u5960 127E                       u5880 11D9  
                     u4984 1F1E                       u5961 127D                       u5881 11D8  
                     u4985 1F23                       u5785 0794                       u5970 1297  
                     u5890 11F4                       u4986 1F24                       u5971 1296  
                     u5955 1265                       u5891 11F3                       u4995 1F3E  
                     u5980 129F                       u5981 129E                       u5965 127A  
                     u5995 12A3                       _data 00DB          ?_Lcd_Write_String 0073  
                     _main 1B6F                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0075            ___fldiv@new_exp 0050            __end_of_Lcd_Cmd 19A7  
            ___fltol@sign1 005A            __end_of___fladd 1800                      ?_main 0070  
          __end_of___fldiv 136D            __end_of___awdiv 0075            __end_of___flneg 197B  
          __end_of___awmod 1CFC            __end_of___flmul 1000            __end_of___flsub 1A05  
          __end_of___fltol 0882                      _ANSEL 0188            __end_of___lldiv 1DBE  
          ___awdiv@divisor 0077            __end_of___llmod 1CA3            __end_of___lwdiv 1B6F  
          __end_of___lwmod 1AAF            ___awdiv@counter 0020                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089           ADC_Config@AN_num 0072            __end_of_dpowers 18A0  
          __end_of_initOsc 1D58                      _scale 0940            __end_of_isdigit 198D  
                    _setup 19A7                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07F0           __end_of_Lcd_Init 1C01  
    __size_of_ADC_channel1 0073      __size_of_ADC_channel2 0073           __end_of_Lcd_Port 0806  
          __initialization 07F0               __end_of_main 1BB6                     ??_main 00C9  
     __size_of__tdiv_to_l_ 00BD                     _ADCON1 009F           ___llmod@dividend 0074  
                   ?_scale 003E                     _ADRESH 001E                     _ADRESL 009E  
              initOsc@IRCF 0072           ___awdiv@dividend 0079                     ?_setup 0070  
                   _ANSELH 0189               ??_ADC_Config 0070               _ADC_channel1 1DBE  
             _ADC_channel2 1E31                  ??_Lcd_Cmd 0071                     _S1_val 00CF  
                   _S2_val 00CB    __size_of_Lcd_Write_Char 0016           __end_of___xxtofl 2000  
         __end_of__powers_ 1844                     ___flge 1EA4                     ___fleq 1C01  
                ??___fladd 005A                     ___wmul 1A29                  ??___fldiv 0046  
                ??___awdiv 007B                  ??___flneg 0074                  ??___awmod 0074  
                ??___flmul 002C                  ??___flsub 007E                  ??___fltol 0055  
                ??___lldiv 0078                  ??___llmod 0078                  ??___lwdiv 007A  
                ??___lwmod 0074                     _fround 136D           ___awdiv@quotient 0022  
          ___awmod@divisor 0070            ___awmod@counter 0075         __end_of_ADC_Config 10D3  
          _float_to_string 19C2                  ??_initOsc 0070                  ??_isdigit 0070  
       __size_of__Umul8_16 0027                  ??_sprintf 00A9            Lcd_Set_Cursor@a 0076  
          Lcd_Set_Cursor@b 0074                 ___flge@ff1 0070                 ___flge@ff2 0074  
             ___xxtofl@arg 007A               ___xxtofl@exp 0079               ___xxtofl@val 0070  
               ___fleq@ff1 0070                 ___fleq@ff2 0074    __end_of__initialization 07FC  
               ___flneg@f1 0070                 ___fltol@f1 0051             __pcstackCOMMON 0070  
            __end_of_scale 0C9F              __end_of_setup 19C2             _Lcd_Set_Cursor 1A05  
               __div_to_l_ 0882               ?_titulos_LCD 0070                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070            __div_to_l_@exp1 0025            __div_to_l_@cntr 0024  
                  ??_scale 0042            __div_to_l_@quot 0020               sprintf@width 00B9  
                  ??_setup 0073                 __pbssBANK0 006F                 __pbssBANK1 00CB  
            __div_to_l_@f1 0070              __div_to_l_@f2 0074          __end_of__Umul8_16 1A75  
               __pmaintext 1B6F                    ?___flge 0070                    ?___fleq 0070  
                  ?___wmul 0070    __end_of_float_to_string 19E1                    ?_fround 003E  
__size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 1A29                  ?___xxtofl 0070  
                  _S3_cont 006F                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
               __stringtab 1800             _Lcd_Write_Char 1001                    _Lcd_Cmd 198D  
        __end_of__npowers_ 1878            __size_of___flge 00A2            __size_of___fleq 004E  
                  ___fladd 1578                    ___fldiv 1190                    ___awdiv 000C  
                  ___flneg 1970                    ___awmod 1CA3                    ___flmul 0C9F  
                  ___flsub 19E1                    ___fltol 0806                    ___lldiv 1D58  
          __size_of___wmul 0025                    ___llmod 1C4F                    ___lwdiv 1B2B  
               _fround$996 004D                 _fround$997 0049                    ___lwmod 1A75  
          __size_of_fround 020B            ?_Lcd_Set_Cursor 0074                    __ptext1 1AAF  
                  __ptext2 1AE9                    __ptext3 1001                    __ptext4 1A05  
                  __ptext5 19A7                    __ptext6 1CFC                    __ptext7 19C2  
                  __ptext8 0075                    __ptext9 0940                ?__div_to_l_ 0070  
                  _dpowers 1878                    _initOsc 1CFC                    _isdigit 197B  
               ??___xxtofl 0074           ___awmod@dividend 0072                    _sprintf 0075  
                  clrloop0 0005     __end_of_Lcd_Write_Char 1017       end_of_initialization 07FC  
          ___lldiv@divisor 0070            ___lldiv@counter 007D                  Lcd_Port@a 0070  
           __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074           ?_float_to_string 0070  
            ??__tdiv_to_l_ 0078                  _PORTEbits 0009                ___fladd@grs 0065  
            ___xxtofl@sign 0078                ___fldiv@grs 0052                ___fldiv@rem 004B  
     __size_of_titulos_LCD 003A            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073  
        Lcd_Write_String@i 0078                ___flmul@grs 0032        __size_of__div_to_l_ 00BE  
           __end_of___flge 1F46             __end_of___fleq 1C4F             __end_of___wmul 1A4E  
         _Lcd_Write_String 1AE9             __end_of_fround 1578        start_initialization 07F0  
      __end_of__tdiv_to_l_ 1190          __size_of_Lcd_Init 004B          __size_of_Lcd_Port 0006  
          ___llmod@divisor 0070            ___llmod@counter 0079                   ??___flge 0078  
                 ??___fleq 0078                   ??___wmul 0074                  __Umul8_16 1A4E  
          Lcd_Write_Char@a 0072                   ??_fround 0042              sprintf@tmpval 00BB  
                ___fladd@a 0056                  ___fladd@b 0052                 fround@prec 0051  
                ___fldiv@a 003E                  ___fldiv@b 0042                  ___flmul@a 0028  
                ___flmul@b 0024                  ___flsub@a 0066                  ___flsub@b 006A  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BA                   ?_Lcd_Cmd 0070                sprintf@flag 00B7  
              sprintf@eexp 00BF                sprintf@fval 00C1                sprintf@prec 00C6  
         ___lwdiv@dividend 0078           ??_Lcd_Set_Cursor 0075                   ?___fladd 0052  
                 ?___fldiv 003E                   ?___awdiv 0077                   ?___flneg 0070  
                 ?___awmod 0070                   ?___flmul 0024                   ?___flsub 0066  
                 ?___fltol 0051                   ?___lldiv 0070                   ?___llmod 0070  
                __npowers_ 1844                 ?__Umul8_16 0070                   ?___lwdiv 0076  
                 ?___lwmod 0070                  __pstrings 1800                __tdiv_to_l_ 10D3  
             ??__div_to_l_ 0078                   ?_initOsc 0070                   ?_isdigit 0070  
                _scale$998 004C           ___lwdiv@quotient 007B                   ?_sprintf 00A0  
           __size_of_scale 035F             __size_of_setup 001B              ?_ADC_channel1 0070  
            ?_ADC_channel2 0070             ___wmul@product 0074                  clear_ram0 0004  
                 Lcd_Cmd@a 0073         __end_of__div_to_l_ 0940                   _VAL_SWAP 00D7  
               _ADCON0bits 001F                __stringbase 180F          ___wmul@multiplier 0070  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 1BB6                   _Lcd_Port 0800  
           ??_ADC_channel1 0058             ??_ADC_channel2 0058                 _ADC_Config 1017  
 __end_of_Lcd_Write_String 1B2B           __size_of_Lcd_Cmd 001A                ??__Umul8_16 0072  
         __size_of___fladd 0288           __size_of___fldiv 01DD           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 0059           __size_of___flmul 0361  
         __size_of___flsub 0024           __size_of___fltol 007C           __size_of___lldiv 0066  
         __size_of___llmod 0054           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 1810                _isdigit$807 0070                 sprintf@val 00B3  
                 ___xxtofl 1F46              ??_titulos_LCD 007A           __size_of_initOsc 005C  
 __size_of_float_to_string 001F           __size_of_isdigit 0012            ___lwdiv@divisor 0076  
          ___lwdiv@counter 007D                   __ptext10 1CA3                   __ptext11 000C  
                 __ptext20 1D58                   __ptext12 197B                   __ptext21 0806  
                 __ptext13 136D                   __ptext30 1E31                   __ptext22 19E1  
                 __ptext14 1A75                   __ptext31 1DBE                   __ptext23 1578  
                 __ptext15 1B2B                   __ptext32 1F46                   __ptext24 1970  
                 __ptext16 10D3                   __ptext33 0C9F                   __ptext25 1EA4  
                 __ptext17 0882                   __ptext34 1A4E                   __ptext26 1C01  
                 __ptext18 1A29                   __ptext35 1190                   __ptext27 1BB6  
                 __ptext19 1C4F                   __ptext36 1017                   __ptext28 198D  
                 __ptext29 0800                   __powers_ 1810           __size_of_sprintf 077B  
            __size_of_main 0047                _VAL_NIBBLE1 00D5                _VAL_NIBBLE2 00D3  
                 isdigit@c 0071                   scale@scl 0050                  sprintf@ap 00B2  
         __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024                  sprintf@sp 00C5  
              ?_ADC_Config 0070        __end_of_titulos_LCD 1AE9           __tdiv_to_l_@quot 0020  
         ___lwmod@dividend 0072           ___lldiv@dividend 0074                  stringcode 180A  
               _OSCCONbits 008F       __end_of_ADC_channel1 1E31       __end_of_ADC_channel2 1EA4  
       Lcd_Set_Cursor@temp 0077               ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070  
                 sprintf@c 00C8                   sprintf@f 00A0           ___lldiv@quotient 0079  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 180A  
                 stringtab 1800              ___fladd@signs 0062          ??_float_to_string 006E  
             ___fladd@aexp 0063               ___fladd@bexp 0064       __Umul8_16@multiplier 0078  
        __Umul8_16@product 0074  
