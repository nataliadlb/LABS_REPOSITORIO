

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 10 08:59:58 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  001F                     _ADCON0bits	set	31
   446  001E                     _ADRESH	set	30
   447  0009                     _PORTEbits	set	9
   448  000C                     _PIR1bits	set	12
   449  000B                     _INTCON	set	11
   450  0009                     _PORTE	set	9
   451  0008                     _PORTD	set	8
   452  0007                     _PORTC	set	7
   453  0006                     _PORTB	set	6
   454  0005                     _PORTA	set	5
   455  009F                     _ADCON1	set	159
   456  009E                     _ADRESL	set	158
   457  008F                     _OSCCONbits	set	143
   458  008C                     _PIE1bits	set	140
   459  0089                     _TRISE	set	137
   460  0088                     _TRISD	set	136
   461  0087                     _TRISC	set	135
   462  0086                     _TRISB	set	134
   463  0085                     _TRISA	set	133
   464  0189                     _ANSELH	set	393
   465  0188                     _ANSEL	set	392
   466                           
   467                           	psect	strings
   468  0003                     __pstrings:
   469  0003                     stringtab:
   470  0003                     __stringtab:
   471  0003                     stringcode:	
   472                           ;	String table - string pointers are 1 byte each
   473                           
   474  0003                     stringdir:
   475  0003  3000               	movlw	high stringdir
   476  0004  008A               	movwf	10
   477  0005  0804               	movf	4,w
   478  0006  0A84               	incf	4,f
   479  0007  0782               	addwf	2,f
   480  0008                     __stringbase:
   481  0008  3400               	retlw	0
   482  0009                     __end_of__stringtab:
   483  0009                     STR_1:
   484  0009  3453               	retlw	83	;'S'
   485  000A  3431               	retlw	49	;'1'
   486  000B  343A               	retlw	58	;':'
   487  000C  3400               	retlw	0
   488  000D                     STR_2:
   489  000D  3453               	retlw	83	;'S'
   490  000E  3432               	retlw	50	;'2'
   491  000F  343A               	retlw	58	;':'
   492  0010  3400               	retlw	0
   493  0011                     STR_3:
   494  0011  3453               	retlw	83	;'S'
   495  0012  3433               	retlw	51	;'3'
   496  0013  343A               	retlw	58	;':'
   497  0014  3400               	retlw	0
   498                           
   499                           	psect	cinit
   500  07EA                     start_initialization:	
   501                           ; #config settings
   502                           
   503  07EA                     __initialization:
   504                           
   505                           ; Clear objects allocated to COMMON
   506  07EA  01FB               	clrf	__pbssCOMMON& (0+127)
   507  07EB  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   508                           
   509                           ; Clear objects allocated to BANK0
   510  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   511  07ED  1303               	bcf	3,6	;RP1=0, select bank0
   512  07EE  01A0               	clrf	__pbssBANK0& (0+127)
   513  07EF  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   514  07F0  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   515  07F1  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   516  07F2  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   517  07F3  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   518  07F4  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   519  07F5  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   520  07F6  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   521  07F7  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   522  07F8  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   523  07F9  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   524  07FA  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   525  07FB  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   526  07FC                     end_of_initialization:	
   527                           ;End of C runtime variable initialization code
   528                           
   529  07FC                     __end_of__initialization:
   530  07FC  0183               	clrf	3
   531  07FD  120A  118A  2F43   	ljmp	_main	;jump to C main() function
   532                           
   533                           	psect	bssCOMMON
   534  007B                     __pbssCOMMON:
   535  007B                     _S3_cont:
   536  007B                     	ds	1
   537  007C                     _a:
   538  007C                     	ds	1
   539                           
   540                           	psect	bssBANK0
   541  0020                     __pbssBANK0:
   542  0020                     _VAL_NIBBLE2:
   543  0020                     	ds	2
   544  0022                     _VAL_NIBBLE1:
   545  0022                     	ds	2
   546  0024                     _VAL_SWAP:
   547  0024                     	ds	2
   548  0026                     _VAL:
   549  0026                     	ds	2
   550  0028                     _x:
   551  0028                     	ds	2
   552  002A                     _ADC_VALOR_2:
   553  002A                     	ds	2
   554  002C                     _ADC_VALOR_1:
   555  002C                     	ds	2
   556                           
   557                           	psect	cstackCOMMON
   558  0070                     __pcstackCOMMON:
   559  0070                     ?_setup:
   560  0070                     ?_Lcd_Init:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_Lcd_Write_String:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_initOsc:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ??_initOsc:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_Lcd_Port:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ??_Lcd_Port:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_Lcd_Cmd:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_main:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_Lcd_Write_Char:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     Lcd_Port@a:	
   588                           ; 1 bytes @ 0x0
   589                           
   590                           
   591                           ; 1 bytes @ 0x0
   592  0070                     	ds	1
   593  0071                     ??_Lcd_Cmd:
   594  0071                     ??_Lcd_Write_Char:	
   595                           ; 1 bytes @ 0x1
   596                           
   597                           
   598                           ; 1 bytes @ 0x1
   599  0071                     	ds	1
   600  0072                     initOsc@IRCF:
   601  0072                     Lcd_Write_Char@a:	
   602                           ; 1 bytes @ 0x2
   603                           
   604                           
   605                           ; 1 bytes @ 0x2
   606  0072                     	ds	1
   607  0073                     ??_setup:
   608  0073                     ??_Lcd_Write_String:	
   609                           ; 1 bytes @ 0x3
   610                           
   611  0073                     Lcd_Cmd@a:	
   612                           ; 1 bytes @ 0x3
   613                           
   614  0073                     Lcd_Write_String@i:	
   615                           ; 1 bytes @ 0x3
   616                           
   617                           
   618                           ; 2 bytes @ 0x3
   619  0073                     	ds	1
   620  0074                     ??_Lcd_Init:
   621  0074                     ?_Lcd_Set_Cursor:	
   622                           ; 1 bytes @ 0x4
   623                           
   624  0074                     Lcd_Set_Cursor@b:	
   625                           ; 1 bytes @ 0x4
   626                           
   627                           
   628                           ; 1 bytes @ 0x4
   629  0074                     	ds	1
   630  0075                     ??_Lcd_Set_Cursor:
   631  0075                     Lcd_Write_String@a:	
   632                           ; 1 bytes @ 0x5
   633                           
   634                           
   635                           ; 1 bytes @ 0x5
   636  0075                     	ds	1
   637  0076                     Lcd_Set_Cursor@a:
   638                           
   639                           ; 1 bytes @ 0x6
   640  0076                     	ds	1
   641  0077                     Lcd_Set_Cursor@temp:
   642                           
   643                           ; 1 bytes @ 0x7
   644  0077                     	ds	1
   645  0078                     ??_main:
   646                           
   647                           ; 1 bytes @ 0x8
   648  0078                     	ds	3
   649                           
   650                           	psect	maintext
   651  0743                     __pmaintext:	
   652 ;;
   653 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   654 ;;
   655 ;; *************** function _main *****************
   656 ;; Defined at:
   657 ;;		line 109 in file "pseudocodigo_lab3.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : B00/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   671 ;;      Params:         0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0
   673 ;;      Temps:          3       0       0       0       0
   674 ;;      Totals:         3       0       0       0       0
   675 ;;Total ram usage:        3 bytes
   676 ;; Hardware stack levels required when called:    3
   677 ;; This function calls:
   678 ;;		_Lcd_Init
   679 ;;		_Lcd_Set_Cursor
   680 ;;		_Lcd_Write_String
   681 ;;		_setup
   682 ;; This function is called by:
   683 ;;		Startup code after reset
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           
   688                           ;psect for function _main
   689  0743                     _main:
   690  0743                     l955:	
   691                           ;incstack = 0
   692                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   693                           
   694                           
   695                           ;pseudocodigo_lab3.c: 110:     setup();
   696  0743  120A  118A  2694  120A  118A  	fcall	_setup
   697  0748                     l957:
   698                           
   699                           ;pseudocodigo_lab3.c: 112:     Lcd_Init();
   700  0748  120A  118A  26F8  120A  118A  	fcall	_Lcd_Init
   701  074D                     l959:
   702                           
   703                           ;pseudocodigo_lab3.c: 124:         Lcd_Set_Cursor(1,2);
   704  074D  3002               	movlw	2
   705  074E  00F8               	movwf	??_main
   706  074F  0878               	movf	??_main,w
   707  0750  00F4               	movwf	Lcd_Set_Cursor@b
   708  0751  3001               	movlw	1
   709  0752  120A  118A  26AF  120A  118A  	fcall	_Lcd_Set_Cursor
   710                           
   711                           ;pseudocodigo_lab3.c: 125:         Lcd_Write_String("S1:");
   712  0757  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   713  0758  120A  118A  26D3  120A  118A  	fcall	_Lcd_Write_String
   714  075D                     l961:
   715                           
   716                           ;pseudocodigo_lab3.c: 126:         Lcd_Set_Cursor(1,8);
   717  075D  3008               	movlw	8
   718  075E  00F8               	movwf	??_main
   719  075F  0878               	movf	??_main,w
   720  0760  00F4               	movwf	Lcd_Set_Cursor@b
   721  0761  3001               	movlw	1
   722  0762  120A  118A  26AF  120A  118A  	fcall	_Lcd_Set_Cursor
   723  0767                     l963:
   724                           
   725                           ;pseudocodigo_lab3.c: 127:         Lcd_Write_String("S2:");
   726  0767  3005               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   727  0768  120A  118A  26D3  120A  118A  	fcall	_Lcd_Write_String
   728                           
   729                           ;pseudocodigo_lab3.c: 128:         Lcd_Set_Cursor(1,13);
   730  076D  300D               	movlw	13
   731  076E  00F8               	movwf	??_main
   732  076F  0878               	movf	??_main,w
   733  0770  00F4               	movwf	Lcd_Set_Cursor@b
   734  0771  3001               	movlw	1
   735  0772  120A  118A  26AF  120A  118A  	fcall	_Lcd_Set_Cursor
   736  0777                     l965:
   737                           
   738                           ;pseudocodigo_lab3.c: 129:         Lcd_Write_String("S3:");
   739  0777  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   740  0778  120A  118A  26D3  120A  118A  	fcall	_Lcd_Write_String
   741  077D                     l967:
   742                           
   743                           ;pseudocodigo_lab3.c: 130:          _delay((unsigned long)((2000)*(8000000/4000.0)));
   744  077D  3015               	movlw	21
   745  077E  00FA               	movwf	??_main+2
   746  077F  304B               	movlw	75
   747  0780  00F9               	movwf	??_main+1
   748  0781  30BE               	movlw	190
   749  0782  00F8               	movwf	??_main
   750  0783                     u97:
   751  0783  0BF8               	decfsz	??_main,f
   752  0784  2F83               	goto	u97
   753  0785  0BF9               	decfsz	??_main+1,f
   754  0786  2F83               	goto	u97
   755  0787  0BFA               	decfsz	??_main+2,f
   756  0788  2F83               	goto	u97
   757  0789  0000               	nop
   758  078A  2F4D               	goto	l959
   759  078B  120A  118A  2800   	ljmp	start
   760  078E                     __end_of_main:
   761                           
   762                           	psect	text1
   763  0694                     __ptext1:	
   764 ;; *************** function _setup *****************
   765 ;; Defined at:
   766 ;;		line 162 in file "pseudocodigo_lab3.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   780 ;;      Params:         0       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0
   783 ;;      Totals:         0       0       0       0       0
   784 ;;Total ram usage:        0 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; Hardware stack levels required when called:    1
   787 ;; This function calls:
   788 ;;		_initOsc
   789 ;; This function is called by:
   790 ;;		_main
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           
   795                           ;psect for function _setup
   796  0694                     _setup:
   797  0694                     l799:	
   798                           ;incstack = 0
   799                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   800                           
   801                           
   802                           ;pseudocodigo_lab3.c: 163:     initOsc(0b00000111);
   803  0694  3007               	movlw	7
   804  0695  120A  118A  278E  120A  118A  	fcall	_initOsc
   805  069A                     l801:
   806                           
   807                           ;pseudocodigo_lab3.c: 164:     ANSEL = 0b00000011;
   808  069A  3003               	movlw	3
   809  069B  1683               	bsf	3,5	;RP0=1, select bank3
   810  069C  1703               	bsf	3,6	;RP1=1, select bank3
   811  069D  0088               	movwf	8	;volatile
   812  069E                     l803:
   813                           
   814                           ;pseudocodigo_lab3.c: 165:     ANSELH = 0;
   815  069E  0189               	clrf	9	;volatile
   816  069F                     l805:
   817                           
   818                           ;pseudocodigo_lab3.c: 166:     TRISA = 0b00000011;
   819  069F  3003               	movlw	3
   820  06A0  1683               	bsf	3,5	;RP0=1, select bank1
   821  06A1  1303               	bcf	3,6	;RP1=0, select bank1
   822  06A2  0085               	movwf	5	;volatile
   823  06A3                     l807:
   824                           
   825                           ;pseudocodigo_lab3.c: 167:     TRISB = 0;
   826  06A3  0186               	clrf	6	;volatile
   827  06A4                     l809:
   828                           
   829                           ;pseudocodigo_lab3.c: 168:     TRISC = 0;
   830  06A4  0187               	clrf	7	;volatile
   831  06A5                     l811:
   832                           
   833                           ;pseudocodigo_lab3.c: 169:     TRISD = 0;
   834  06A5  0188               	clrf	8	;volatile
   835  06A6                     l813:
   836                           
   837                           ;pseudocodigo_lab3.c: 170:     TRISE = 0;
   838  06A6  0189               	clrf	9	;volatile
   839  06A7                     l815:
   840                           
   841                           ;pseudocodigo_lab3.c: 171:     PORTA = 0;
   842  06A7  1283               	bcf	3,5	;RP0=0, select bank0
   843  06A8  1303               	bcf	3,6	;RP1=0, select bank0
   844  06A9  0185               	clrf	5	;volatile
   845  06AA                     l817:
   846                           
   847                           ;pseudocodigo_lab3.c: 172:     PORTB = 0;
   848  06AA  0186               	clrf	6	;volatile
   849  06AB                     l819:
   850                           
   851                           ;pseudocodigo_lab3.c: 173:     PORTC = 0;
   852  06AB  0187               	clrf	7	;volatile
   853  06AC                     l821:
   854                           
   855                           ;pseudocodigo_lab3.c: 174:     PORTD = 0;
   856  06AC  0188               	clrf	8	;volatile
   857  06AD                     l823:
   858                           
   859                           ;pseudocodigo_lab3.c: 175:     PORTE = 0;
   860  06AD  0189               	clrf	9	;volatile
   861  06AE                     l63:
   862  06AE  0008               	return
   863  06AF                     __end_of_setup:
   864                           
   865                           	psect	text2
   866  078E                     __ptext2:	
   867 ;; *************** function _initOsc *****************
   868 ;; Defined at:
   869 ;;		line 3 in file "Oscilador.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  IRCF            1    wreg     unsigned char 
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  IRCF            1    2[COMMON] unsigned char 
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   883 ;;      Params:         0       0       0       0       0
   884 ;;      Locals:         1       0       0       0       0
   885 ;;      Temps:          2       0       0       0       0
   886 ;;      Totals:         3       0       0       0       0
   887 ;;Total ram usage:        3 bytes
   888 ;; Hardware stack levels used:    1
   889 ;; This function calls:
   890 ;;		Nothing
   891 ;; This function is called by:
   892 ;;		_setup
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           
   897                           ;psect for function _initOsc
   898  078E                     _initOsc:
   899                           
   900                           ;incstack = 0
   901                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   902                           ;initOsc@IRCF stored from wreg
   903  078E  00F2               	movwf	initOsc@IRCF
   904  078F                     l769:
   905                           
   906                           ;Oscilador.c: 5:     switch(IRCF){
   907  078F  2FC6               	goto	l773
   908  0790                     l72:	
   909                           ;Oscilador.c: 6:         case 0:
   910                           
   911                           
   912                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
   913  0790  1683               	bsf	3,5	;RP0=1, select bank1
   914  0791  1303               	bcf	3,6	;RP1=0, select bank1
   915  0792  130F               	bcf	15,6	;volatile
   916                           
   917                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
   918  0793  128F               	bcf	15,5	;volatile
   919                           
   920                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
   921  0794  120F               	bcf	15,4	;volatile
   922                           
   923                           ;Oscilador.c: 10:             break;
   924  0795  2FE8               	goto	l73
   925  0796                     l74:	
   926                           ;Oscilador.c: 11:          case 1:
   927                           
   928                           
   929                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
   930  0796  1683               	bsf	3,5	;RP0=1, select bank1
   931  0797  1303               	bcf	3,6	;RP1=0, select bank1
   932  0798  130F               	bcf	15,6	;volatile
   933                           
   934                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
   935  0799  128F               	bcf	15,5	;volatile
   936                           
   937                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
   938  079A  160F               	bsf	15,4	;volatile
   939                           
   940                           ;Oscilador.c: 15:             break;
   941  079B  2FE8               	goto	l73
   942  079C                     l75:	
   943                           ;Oscilador.c: 16:         case 2:
   944                           
   945                           
   946                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
   947  079C  1683               	bsf	3,5	;RP0=1, select bank1
   948  079D  1303               	bcf	3,6	;RP1=0, select bank1
   949  079E  130F               	bcf	15,6	;volatile
   950                           
   951                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
   952  079F  168F               	bsf	15,5	;volatile
   953                           
   954                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
   955  07A0  120F               	bcf	15,4	;volatile
   956                           
   957                           ;Oscilador.c: 20:             break;
   958  07A1  2FE8               	goto	l73
   959  07A2                     l76:	
   960                           ;Oscilador.c: 21:         case 3:
   961                           
   962                           
   963                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
   964  07A2  1683               	bsf	3,5	;RP0=1, select bank1
   965  07A3  1303               	bcf	3,6	;RP1=0, select bank1
   966  07A4  130F               	bcf	15,6	;volatile
   967                           
   968                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
   969  07A5  168F               	bsf	15,5	;volatile
   970                           
   971                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
   972  07A6  160F               	bsf	15,4	;volatile
   973                           
   974                           ;Oscilador.c: 25:             break;
   975  07A7  2FE8               	goto	l73
   976  07A8                     l77:	
   977                           ;Oscilador.c: 26:         case 4:
   978                           
   979                           
   980                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
   981  07A8  1683               	bsf	3,5	;RP0=1, select bank1
   982  07A9  1303               	bcf	3,6	;RP1=0, select bank1
   983  07AA  170F               	bsf	15,6	;volatile
   984                           
   985                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
   986  07AB  128F               	bcf	15,5	;volatile
   987                           
   988                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
   989  07AC  120F               	bcf	15,4	;volatile
   990                           
   991                           ;Oscilador.c: 30:             break;
   992  07AD  2FE8               	goto	l73
   993  07AE                     l78:	
   994                           ;Oscilador.c: 31:         case 5:
   995                           
   996                           
   997                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
   998  07AE  1683               	bsf	3,5	;RP0=1, select bank1
   999  07AF  1303               	bcf	3,6	;RP1=0, select bank1
  1000  07B0  170F               	bsf	15,6	;volatile
  1001                           
  1002                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1003  07B1  128F               	bcf	15,5	;volatile
  1004                           
  1005                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1006  07B2  160F               	bsf	15,4	;volatile
  1007                           
  1008                           ;Oscilador.c: 35:             break;
  1009  07B3  2FE8               	goto	l73
  1010  07B4                     l79:	
  1011                           ;Oscilador.c: 36:         case 6:
  1012                           
  1013                           
  1014                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1015  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  1016  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  1017  07B6  170F               	bsf	15,6	;volatile
  1018                           
  1019                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1020  07B7  168F               	bsf	15,5	;volatile
  1021                           
  1022                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1023  07B8  120F               	bcf	15,4	;volatile
  1024                           
  1025                           ;Oscilador.c: 40:             break;
  1026  07B9  2FE8               	goto	l73
  1027  07BA                     l80:	
  1028                           ;Oscilador.c: 41:         case 7:
  1029                           
  1030                           
  1031                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1032  07BA  1683               	bsf	3,5	;RP0=1, select bank1
  1033  07BB  1303               	bcf	3,6	;RP1=0, select bank1
  1034  07BC  170F               	bsf	15,6	;volatile
  1035                           
  1036                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1037  07BD  168F               	bsf	15,5	;volatile
  1038                           
  1039                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1040  07BE  160F               	bsf	15,4	;volatile
  1041                           
  1042                           ;Oscilador.c: 45:             break;
  1043  07BF  2FE8               	goto	l73
  1044  07C0                     l81:	
  1045                           ;Oscilador.c: 46:         default:
  1046                           
  1047                           
  1048                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1049  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  1050  07C1  1303               	bcf	3,6	;RP1=0, select bank1
  1051  07C2  170F               	bsf	15,6	;volatile
  1052                           
  1053                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1054  07C3  168F               	bsf	15,5	;volatile
  1055                           
  1056                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1057  07C4  120F               	bcf	15,4	;volatile
  1058                           
  1059                           ;Oscilador.c: 50:             break;
  1060  07C5  2FE8               	goto	l73
  1061  07C6                     l773:
  1062  07C6  0872               	movf	initOsc@IRCF,w
  1063  07C7  00F0               	movwf	??_initOsc
  1064  07C8  01F1               	clrf	??_initOsc+1
  1065                           
  1066                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1067                           ; Switch size 1, requested type "simple"
  1068                           ; Number of cases is 1, Range of values is 0 to 0
  1069                           ; switch strategies available:
  1070                           ; Name         Instructions Cycles
  1071                           ; simple_byte            4     3 (average)
  1072                           ; direct_byte           11     8 (fixed)
  1073                           ; jumptable            260     6 (fixed)
  1074                           ;	Chosen strategy is simple_byte
  1075  07C9  0871               	movf	??_initOsc+1,w
  1076  07CA  3A00               	xorlw	0	; case 0
  1077  07CB  1903               	skipnz
  1078  07CC  2FCE               	goto	l1005
  1079  07CD  2FC0               	goto	l81
  1080  07CE                     l1005:
  1081                           
  1082                           ; Switch size 1, requested type "simple"
  1083                           ; Number of cases is 8, Range of values is 0 to 7
  1084                           ; switch strategies available:
  1085                           ; Name         Instructions Cycles
  1086                           ; simple_byte           25    13 (average)
  1087                           ; direct_byte           32     8 (fixed)
  1088                           ; jumptable            260     6 (fixed)
  1089                           ;	Chosen strategy is simple_byte
  1090  07CE  0870               	movf	??_initOsc,w
  1091  07CF  3A00               	xorlw	0	; case 0
  1092  07D0  1903               	skipnz
  1093  07D1  2F90               	goto	l72
  1094  07D2  3A01               	xorlw	1	; case 1
  1095  07D3  1903               	skipnz
  1096  07D4  2F96               	goto	l74
  1097  07D5  3A03               	xorlw	3	; case 2
  1098  07D6  1903               	skipnz
  1099  07D7  2F9C               	goto	l75
  1100  07D8  3A01               	xorlw	1	; case 3
  1101  07D9  1903               	skipnz
  1102  07DA  2FA2               	goto	l76
  1103  07DB  3A07               	xorlw	7	; case 4
  1104  07DC  1903               	skipnz
  1105  07DD  2FA8               	goto	l77
  1106  07DE  3A01               	xorlw	1	; case 5
  1107  07DF  1903               	skipnz
  1108  07E0  2FAE               	goto	l78
  1109  07E1  3A03               	xorlw	3	; case 6
  1110  07E2  1903               	skipnz
  1111  07E3  2FB4               	goto	l79
  1112  07E4  3A01               	xorlw	1	; case 7
  1113  07E5  1903               	skipnz
  1114  07E6  2FBA               	goto	l80
  1115  07E7  2FC0               	goto	l81
  1116  07E8                     l73:
  1117                           
  1118                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1119  07E8  140F               	bsf	15,0	;volatile
  1120  07E9                     l82:
  1121  07E9  0008               	return
  1122  07EA                     __end_of_initOsc:
  1123                           
  1124                           	psect	text3
  1125  06D3                     __ptext3:	
  1126 ;; *************** function _Lcd_Write_String *****************
  1127 ;; Defined at:
  1128 ;;		line 123 in file "LCD.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  a               1    wreg     PTR unsigned char 
  1131 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  a               1    5[COMMON] PTR unsigned char 
  1134 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1135 ;;  i               2    3[COMMON] int 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         0       0       0       0       0
  1146 ;;      Locals:         3       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0
  1148 ;;      Totals:         3       0       0       0       0
  1149 ;;Total ram usage:        3 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    2
  1152 ;; This function calls:
  1153 ;;		_Lcd_Write_Char
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           
  1160                           ;psect for function _Lcd_Write_String
  1161  06D3                     _Lcd_Write_String:
  1162                           
  1163                           ;incstack = 0
  1164                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1165                           ;Lcd_Write_String@a stored from wreg
  1166  06D3  00F5               	movwf	Lcd_Write_String@a
  1167  06D4                     l947:
  1168                           
  1169                           ;LCD.c: 124:  int i;;LCD.c: 125:  for(i=0;a[i]!='\0';i++)
  1170  06D4  01F3               	clrf	Lcd_Write_String@i
  1171  06D5  01F4               	clrf	Lcd_Write_String@i+1
  1172  06D6  2EEA               	goto	l953
  1173  06D7                     l949:
  1174                           
  1175                           ;LCD.c: 126:     Lcd_Write_Char(a[i]);
  1176  06D7  0873               	movf	Lcd_Write_String@i,w
  1177  06D8  0775               	addwf	Lcd_Write_String@a,w
  1178  06D9  0084               	movwf	4
  1179  06DA  120A  118A  2003  120A  118A  	fcall	stringdir
  1180  06DF  120A  118A  2664  120A  118A  	fcall	_Lcd_Write_Char
  1181  06E4                     l951:
  1182  06E4  3001               	movlw	1
  1183  06E5  07F3               	addwf	Lcd_Write_String@i,f
  1184  06E6  1803               	skipnc
  1185  06E7  0AF4               	incf	Lcd_Write_String@i+1,f
  1186  06E8  3000               	movlw	0
  1187  06E9  07F4               	addwf	Lcd_Write_String@i+1,f
  1188  06EA                     l953:
  1189  06EA  0873               	movf	Lcd_Write_String@i,w
  1190  06EB  0775               	addwf	Lcd_Write_String@a,w
  1191  06EC  0084               	movwf	4
  1192  06ED  120A  118A  2003  120A  118A  	fcall	stringdir
  1193  06F2  3A00               	xorlw	0
  1194  06F3  1D03               	skipz
  1195  06F4  2EF6               	goto	u71
  1196  06F5  2EF7               	goto	u70
  1197  06F6                     u71:
  1198  06F6  2ED7               	goto	l949
  1199  06F7                     u70:
  1200  06F7                     l119:
  1201  06F7  0008               	return
  1202  06F8                     __end_of_Lcd_Write_String:
  1203                           
  1204                           	psect	text4
  1205  0664                     __ptext4:	
  1206 ;; *************** function _Lcd_Write_Char *****************
  1207 ;; Defined at:
  1208 ;;		line 107 in file "LCD.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;  a               1    wreg     unsigned char 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  a               1    2[COMMON] unsigned char 
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		wreg, status,2, status,0, pclath, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1222 ;;      Params:         0       0       0       0       0
  1223 ;;      Locals:         1       0       0       0       0
  1224 ;;      Temps:          1       0       0       0       0
  1225 ;;      Totals:         2       0       0       0       0
  1226 ;;Total ram usage:        2 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; Hardware stack levels required when called:    1
  1229 ;; This function calls:
  1230 ;;		_Lcd_Port
  1231 ;; This function is called by:
  1232 ;;		_Lcd_Write_String
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           
  1237                           ;psect for function _Lcd_Write_Char
  1238  0664                     _Lcd_Write_Char:
  1239                           
  1240                           ;incstack = 0
  1241                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1242                           ;Lcd_Write_Char@a stored from wreg
  1243  0664  00F2               	movwf	Lcd_Write_Char@a
  1244  0665                     l789:
  1245                           
  1246                           ;LCD.c: 111:    PORTEbits.RE0 = 1;
  1247  0665  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0666  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0667  1409               	bsf	9,0	;volatile
  1250  0668                     l791:
  1251                           
  1252                           ;LCD.c: 112:    Lcd_Port(a);
  1253  0668  0872               	movf	Lcd_Write_Char@a,w
  1254  0669  120A  118A  265E  120A  118A  	fcall	_Lcd_Port
  1255  066E                     l793:
  1256                           
  1257                           ;LCD.c: 113:    PORTEbits.RE2 = 1;
  1258  066E  1283               	bcf	3,5	;RP0=0, select bank0
  1259  066F  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0670  1509               	bsf	9,2	;volatile
  1261  0671                     l795:
  1262                           
  1263                           ;LCD.c: 114:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1264  0671  301A               	movlw	26
  1265  0672  00F1               	movwf	??_Lcd_Write_Char
  1266  0673                     u107:
  1267  0673  0BF1               	decfsz	??_Lcd_Write_Char,f
  1268  0674  2E73               	goto	u107
  1269  0675  0000               	nop
  1270  0676                     l797:
  1271                           
  1272                           ;LCD.c: 115:    PORTEbits.RE2 = 0;
  1273  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1274  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1275  0678  1109               	bcf	9,2	;volatile
  1276  0679                     l113:
  1277  0679  0008               	return
  1278  067A                     __end_of_Lcd_Write_Char:
  1279                           
  1280                           	psect	text5
  1281  06AF                     __ptext5:	
  1282 ;; *************** function _Lcd_Set_Cursor *****************
  1283 ;; Defined at:
  1284 ;;		line 88 in file "LCD.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  a               1    wreg     unsigned char 
  1287 ;;  b               1    4[COMMON] unsigned char 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  a               1    6[COMMON] unsigned char 
  1290 ;;  temp            1    7[COMMON] unsigned char 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0, pclath, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         1       0       0       0       0
  1301 ;;      Locals:         2       0       0       0       0
  1302 ;;      Temps:          1       0       0       0       0
  1303 ;;      Totals:         4       0       0       0       0
  1304 ;;Total ram usage:        4 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    2
  1307 ;; This function calls:
  1308 ;;		_Lcd_Cmd
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           
  1315                           ;psect for function _Lcd_Set_Cursor
  1316  06AF                     _Lcd_Set_Cursor:
  1317                           
  1318                           ;incstack = 0
  1319                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1320                           ;Lcd_Set_Cursor@a stored from wreg
  1321  06AF  00F6               	movwf	Lcd_Set_Cursor@a
  1322  06B0                     l935:
  1323                           
  1324                           ;LCD.c: 89:  char temp;;LCD.c: 90:  if(a == 1){
  1325  06B0  0376               	decf	Lcd_Set_Cursor@a,w
  1326  06B1  1D03               	btfss	3,2
  1327  06B2  2EB4               	goto	u51
  1328  06B3  2EB5               	goto	u50
  1329  06B4                     u51:
  1330  06B4  2EC1               	goto	l941
  1331  06B5                     u50:
  1332  06B5                     l937:
  1333                           
  1334                           ;LCD.c: 91:         temp = 0x80 + b - 1;
  1335  06B5  0874               	movf	Lcd_Set_Cursor@b,w
  1336  06B6  3E7F               	addlw	127
  1337  06B7  00F5               	movwf	??_Lcd_Set_Cursor
  1338  06B8  0875               	movf	??_Lcd_Set_Cursor,w
  1339  06B9  00F7               	movwf	Lcd_Set_Cursor@temp
  1340  06BA                     l939:
  1341                           
  1342                           ;LCD.c: 95:         Lcd_Cmd(temp);
  1343  06BA  0877               	movf	Lcd_Set_Cursor@temp,w
  1344  06BB  120A  118A  267A  120A  118A  	fcall	_Lcd_Cmd
  1345                           
  1346                           ;LCD.c: 96:  }
  1347  06C0  2ED2               	goto	l110
  1348  06C1                     l941:
  1349  06C1  3002               	movlw	2
  1350  06C2  0676               	xorwf	Lcd_Set_Cursor@a,w
  1351  06C3  1D03               	btfss	3,2
  1352  06C4  2EC6               	goto	u61
  1353  06C5  2EC7               	goto	u60
  1354  06C6                     u61:
  1355  06C6  2ED2               	goto	l110
  1356  06C7                     u60:
  1357  06C7                     l943:
  1358                           
  1359                           ;LCD.c: 98:   temp = 0xC0 + b - 1;
  1360  06C7  0874               	movf	Lcd_Set_Cursor@b,w
  1361  06C8  3EBF               	addlw	191
  1362  06C9  00F5               	movwf	??_Lcd_Set_Cursor
  1363  06CA  0875               	movf	??_Lcd_Set_Cursor,w
  1364  06CB  00F7               	movwf	Lcd_Set_Cursor@temp
  1365  06CC                     l945:
  1366                           
  1367                           ;LCD.c: 102:   Lcd_Cmd(temp);
  1368  06CC  0877               	movf	Lcd_Set_Cursor@temp,w
  1369  06CD  120A  118A  267A  120A  118A  	fcall	_Lcd_Cmd
  1370  06D2                     l110:
  1371  06D2  0008               	return
  1372  06D3                     __end_of_Lcd_Set_Cursor:
  1373                           
  1374                           	psect	text6
  1375  06F8                     __ptext6:	
  1376 ;; *************** function _Lcd_Init *****************
  1377 ;; Defined at:
  1378 ;;		line 14 in file "LCD.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;		None
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      void 
  1385 ;; Registers used:
  1386 ;;		wreg, status,2, status,0, pclath, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1392 ;;      Params:         0       0       0       0       0
  1393 ;;      Locals:         0       0       0       0       0
  1394 ;;      Temps:          2       0       0       0       0
  1395 ;;      Totals:         2       0       0       0       0
  1396 ;;Total ram usage:        2 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:    2
  1399 ;; This function calls:
  1400 ;;		_Lcd_Cmd
  1401 ;;		_Lcd_Port
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           
  1408                           ;psect for function _Lcd_Init
  1409  06F8                     _Lcd_Init:
  1410  06F8                     l825:	
  1411                           ;incstack = 0
  1412                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1413                           
  1414                           
  1415                           ;LCD.c: 15:   Lcd_Port(0x00);
  1416  06F8  3000               	movlw	0
  1417  06F9  120A  118A  265E  120A  118A  	fcall	_Lcd_Port
  1418  06FE                     l827:
  1419                           
  1420                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1421  06FE  3034               	movlw	52
  1422  06FF  00F5               	movwf	??_Lcd_Init+1
  1423  0700  30F1               	movlw	241
  1424  0701  00F4               	movwf	??_Lcd_Init
  1425  0702                     u117:
  1426  0702  0BF4               	decfsz	??_Lcd_Init,f
  1427  0703  2F02               	goto	u117
  1428  0704  0BF5               	decfsz	??_Lcd_Init+1,f
  1429  0705  2F02               	goto	u117
  1430  0706  2F07               	nop2
  1431  0707                     l829:
  1432                           
  1433                           ;LCD.c: 17:   Lcd_Cmd(0x030);
  1434  0707  3030               	movlw	48
  1435  0708  120A  118A  267A  120A  118A  	fcall	_Lcd_Cmd
  1436                           
  1437                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1438  070D  300D               	movlw	13
  1439  070E  00F5               	movwf	??_Lcd_Init+1
  1440  070F  30FB               	movlw	251
  1441  0710  00F4               	movwf	??_Lcd_Init
  1442  0711                     u127:
  1443  0711  0BF4               	decfsz	??_Lcd_Init,f
  1444  0712  2F11               	goto	u127
  1445  0713  0BF5               	decfsz	??_Lcd_Init+1,f
  1446  0714  2F11               	goto	u127
  1447  0715  2F16               	nop2
  1448  0716                     l831:
  1449                           
  1450                           ;LCD.c: 19:   Lcd_Cmd(0x030);
  1451  0716  3030               	movlw	48
  1452  0717  120A  118A  267A  120A  118A  	fcall	_Lcd_Cmd
  1453  071C                     l833:
  1454                           
  1455                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1456  071C  301D               	movlw	29
  1457  071D  00F5               	movwf	??_Lcd_Init+1
  1458  071E  3091               	movlw	145
  1459  071F  00F4               	movwf	??_Lcd_Init
  1460  0720                     u137:
  1461  0720  0BF4               	decfsz	??_Lcd_Init,f
  1462  0721  2F20               	goto	u137
  1463  0722  0BF5               	decfsz	??_Lcd_Init+1,f
  1464  0723  2F20               	goto	u137
  1465                           
  1466                           ;LCD.c: 21:   Lcd_Cmd(0x030);
  1467  0724  3030               	movlw	48
  1468  0725  120A  118A  267A  120A  118A  	fcall	_Lcd_Cmd
  1469                           
  1470                           ;LCD.c: 22:   Lcd_Cmd(0x038);
  1471  072A  3038               	movlw	56
  1472  072B  120A  118A  267A  120A  118A  	fcall	_Lcd_Cmd
  1473                           
  1474                           ;LCD.c: 23:   Lcd_Cmd(0x00C);
  1475  0730  300C               	movlw	12
  1476  0731  120A  118A  267A  120A  118A  	fcall	_Lcd_Cmd
  1477                           
  1478                           ;LCD.c: 24:   Lcd_Cmd(0x001);
  1479  0736  3001               	movlw	1
  1480  0737  120A  118A  267A  120A  118A  	fcall	_Lcd_Cmd
  1481                           
  1482                           ;LCD.c: 25:   Lcd_Cmd(0x006);
  1483  073C  3006               	movlw	6
  1484  073D  120A  118A  267A  120A  118A  	fcall	_Lcd_Cmd
  1485  0742                     l95:
  1486  0742  0008               	return
  1487  0743                     __end_of_Lcd_Init:
  1488                           
  1489                           	psect	text7
  1490  067A                     __ptext7:	
  1491 ;; *************** function _Lcd_Cmd *****************
  1492 ;; Defined at:
  1493 ;;		line 73 in file "LCD.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  a               1    wreg     unsigned char 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  a               1    3[COMMON] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0, pclath, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1507 ;;      Params:         0       0       0       0       0
  1508 ;;      Locals:         1       0       0       0       0
  1509 ;;      Temps:          2       0       0       0       0
  1510 ;;      Totals:         3       0       0       0       0
  1511 ;;Total ram usage:        3 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    1
  1514 ;; This function calls:
  1515 ;;		_Lcd_Port
  1516 ;; This function is called by:
  1517 ;;		_Lcd_Init
  1518 ;;		_Lcd_Set_Cursor
  1519 ;;		_Lcd_Clear
  1520 ;;		_Lcd_Shift_Right
  1521 ;;		_Lcd_Shift_Left
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           
  1526                           ;psect for function _Lcd_Cmd
  1527  067A                     _Lcd_Cmd:
  1528                           
  1529                           ;incstack = 0
  1530                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1531                           ;Lcd_Cmd@a stored from wreg
  1532  067A  00F3               	movwf	Lcd_Cmd@a
  1533  067B                     l779:
  1534                           
  1535                           ;LCD.c: 74:  PORTEbits.RE0 = 0;
  1536  067B  1283               	bcf	3,5	;RP0=0, select bank0
  1537  067C  1303               	bcf	3,6	;RP1=0, select bank0
  1538  067D  1009               	bcf	9,0	;volatile
  1539  067E                     l781:
  1540                           
  1541                           ;LCD.c: 75:  Lcd_Port(a);
  1542  067E  0873               	movf	Lcd_Cmd@a,w
  1543  067F  120A  118A  265E  120A  118A  	fcall	_Lcd_Port
  1544  0684                     l783:
  1545                           
  1546                           ;LCD.c: 76:  PORTEbits.RE2 = 1;
  1547  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0686  1509               	bsf	9,2	;volatile
  1550  0687                     l785:
  1551                           
  1552                           ;LCD.c: 77:         _delay((unsigned long)((4)*(8000000/4000.0)));
  1553  0687  300B               	movlw	11
  1554  0688  00F2               	movwf	??_Lcd_Cmd+1
  1555  0689  3062               	movlw	98
  1556  068A  00F1               	movwf	??_Lcd_Cmd
  1557  068B                     u147:
  1558  068B  0BF1               	decfsz	??_Lcd_Cmd,f
  1559  068C  2E8B               	goto	u147
  1560  068D  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1561  068E  2E8B               	goto	u147
  1562  068F  0000               	nop
  1563  0690                     l787:
  1564                           
  1565                           ;LCD.c: 78:         PORTEbits.RE2 = 0;
  1566  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1567  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1568  0692  1109               	bcf	9,2	;volatile
  1569  0693                     l101:
  1570  0693  0008               	return
  1571  0694                     __end_of_Lcd_Cmd:
  1572                           
  1573                           	psect	text8
  1574  065E                     __ptext8:	
  1575 ;; *************** function _Lcd_Port *****************
  1576 ;; Defined at:
  1577 ;;		line 29 in file "LCD.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  a               1    wreg     unsigned char 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  a               1    0[COMMON] unsigned char 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1591 ;;      Params:         0       0       0       0       0
  1592 ;;      Locals:         1       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0
  1594 ;;      Totals:         1       0       0       0       0
  1595 ;;Total ram usage:        1 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_Lcd_Init
  1601 ;;		_Lcd_Cmd
  1602 ;;		_Lcd_Write_Char
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           
  1607                           ;psect for function _Lcd_Port
  1608  065E                     _Lcd_Port:
  1609                           
  1610                           ;incstack = 0
  1611                           ; Regs used in _Lcd_Port: [wreg]
  1612                           ;Lcd_Port@a stored from wreg
  1613  065E  00F0               	movwf	Lcd_Port@a
  1614  065F                     l767:
  1615                           
  1616                           ;LCD.c: 30:     PORTD = a;
  1617  065F  0870               	movf	Lcd_Port@a,w
  1618  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1619  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1620  0662  0088               	movwf	8	;volatile
  1621  0663                     l98:
  1622  0663  0008               	return
  1623  0664                     __end_of_Lcd_Port:
  1624  007E                     btemp	set	126	;btemp
  1625  007E                     wtemp0	set	126
  1626                           
  1627                           	psect	config
  1628                           
  1629                           ;Config register CONFIG1 @ 0x2007
  1630                           ;	Oscillator Selection bits
  1631                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1632                           ;	Watchdog Timer Enable bit
  1633                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1634                           ;	Power-up Timer Enable bit
  1635                           ;	PWRTE = OFF, PWRT disabled
  1636                           ;	RE3/MCLR pin function select bit
  1637                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1638                           ;	Code Protection bit
  1639                           ;	CP = OFF, Program memory code protection is disabled
  1640                           ;	Data Code Protection bit
  1641                           ;	CPD = OFF, Data memory code protection is disabled
  1642                           ;	Brown Out Reset Selection bits
  1643                           ;	BOREN = ON, BOR enabled
  1644                           ;	Internal External Switchover bit
  1645                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1646                           ;	Fail-Safe Clock Monitor Enabled bit
  1647                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1648                           ;	Low Voltage Programming Enable bit
  1649                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1650                           ;	In-Circuit Debugger Mode bit
  1651                           ;	DEBUG = 0x1, unprogrammed default
  1652  2007                     	org	8199
  1653  2007  23D2               	dw	9170
  1654                           
  1655                           ;Config register CONFIG2 @ 0x2008
  1656                           ;	Brown-out Reset Selection bit
  1657                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1658                           ;	Flash Program Memory Self Write Enable bits
  1659                           ;	WRT = OFF, Write protection off
  1660  2008                     	org	8200
  1661  2008  3FFF               	dw	16383

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      0      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _setup->_initOsc
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     671
                                              8 COMMON     3     3      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     219
                                              3 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      30
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     392
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      45
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      30
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _initOsc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       E       5       17.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 10 08:59:58 2021

                        _a 007C                          _x 0028                          pc 0002  
                       l63 06AE                         l80 07BA                         l72 0790  
                       l81 07C0                         l73 07E8                         l82 07E9  
                       l74 0796                         l75 079C                         l76 07A2  
                       l77 07A8                         l78 07AE                         l95 0742  
                       l79 07B4                         l98 0663                         u50 06B5  
                       u51 06B4                         u60 06C7                         u61 06C6  
                       u70 06F7                         u71 06F6                         u97 0783  
                       fsr 0004                        l101 0693                        l110 06D2  
                      l113 0679                        l119 06F7                        l801 069A  
                      l811 06A5                        l803 069E                        l821 06AC  
                      l813 06A6                        l805 069F                        l831 0716  
                      l823 06AD                        l815 06A7                        l807 06A3  
                      l833 071C                        l825 06F8                        l817 06AA  
                      l809 06A4                        l827 06FE                        l819 06AB  
                      l781 067E                        l829 0707                        l941 06C1  
                      l773 07C6                        l767 065F                        l783 0684  
                      l943 06C7                        l935 06B0                        l791 0668  
                      l951 06E4                        l785 0687                        l945 06CC  
                      l937 06B5                        l793 066E                        l953 06EA  
                      l769 078F                        l961 075D                        l787 0690  
                      l779 067B                        l939 06BA                        l795 0671  
                      l947 06D4                        l963 0767                        l955 0743  
                      l797 0676                        l789 0665                        l949 06D7  
                      l965 0777                        l957 0748                        l799 0694  
                      l967 077D                        l959 074D                        u107 0673  
                      u117 0702                        u127 0711                        u137 0720  
                      u147 068B                        _VAL 0026                        fsr0 0004  
                     l1005 07CE                       STR_1 0009                       STR_2 000D  
                     STR_3 0011          ?_Lcd_Write_String 0070                       _main 0743  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0073  
          __end_of_Lcd_Cmd 0694                      ?_main 0070                      _ANSEL 0188  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0024  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089            __end_of_initOsc 07EA  
                    _setup 0694                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0743           __end_of_Lcd_Port 0664  
          __initialization 07EA               __end_of_main 078E                     ??_main 0078  
                   _ADCON1 009F                     _ADRESH 001E                     _ADRESL 009E  
              initOsc@IRCF 0072                     ?_setup 0070                     _ANSELH 0189  
                   _INTCON 000B                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0016  
                ??_initOsc 0070            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074  
  __end_of__initialization 07FC             __pcstackCOMMON 0070              __end_of_setup 06AF  
           _Lcd_Set_Cursor 06AF                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0073                 __pbssBANK0 0020                 __pmaintext 0743  
__size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 06D3                    _S3_cont 007B  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 0003  
           _Lcd_Write_Char 0664                    _Lcd_Cmd 067A            ?_Lcd_Set_Cursor 0074  
                  __ptext1 0694                    __ptext2 078E                    __ptext3 06D3  
                  __ptext4 0664                    __ptext5 06AF                    __ptext6 06F8  
                  __ptext7 067A                    __ptext8 065E                    _initOsc 078E  
   __end_of_Lcd_Write_Char 067A       end_of_initialization 07FC                  Lcd_Port@a 0070  
                _PORTEbits 0009            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075  
        Lcd_Write_String@i 0073                _ADC_VALOR_1 002C                _ADC_VALOR_2 002A  
         _Lcd_Write_String 06D3        start_initialization 07EA          __size_of_Lcd_Init 004B  
        __size_of_Lcd_Port 0006            Lcd_Write_Char@a 0072                __pbssCOMMON 007B  
                ___latbits 0002                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0075  
                __pstrings 0003                   ?_initOsc 0070             __size_of_setup 001B  
                 _PIE1bits 008C                   Lcd_Cmd@a 0073                   _PIR1bits 000C  
                 _VAL_SWAP 0024                 _ADCON0bits 001F                __stringbase 0008  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 06F8                   _Lcd_Port 065E  
 __end_of_Lcd_Write_String 06F8           __size_of_Lcd_Cmd 001A         __end_of__stringtab 0009  
         __size_of_initOsc 005C              __size_of_main 004B                _VAL_NIBBLE1 0022  
              _VAL_NIBBLE2 0020                  stringcode 0003                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 0077                   stringdir 0003                   stringtab 0003  
