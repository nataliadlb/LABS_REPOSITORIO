

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 11 15:23:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  0105                     	;# 
   150  0107                     	;# 
   151  0108                     	;# 
   152  0109                     	;# 
   153  010C                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0185                     	;# 
   159  0187                     	;# 
   160  0188                     	;# 
   161  0189                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  0105                     	;# 
   228  0107                     	;# 
   229  0108                     	;# 
   230  0109                     	;# 
   231  010C                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  0185                     	;# 
   237  0187                     	;# 
   238  0188                     	;# 
   239  0189                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001D                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0086                     	;# 
   280  0087                     	;# 
   281  0088                     	;# 
   282  0089                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  0105                     	;# 
   306  0107                     	;# 
   307  0108                     	;# 
   308  0109                     	;# 
   309  010C                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  0185                     	;# 
   315  0187                     	;# 
   316  0188                     	;# 
   317  0189                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  000E                     	;# 
   336  000F                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0014                     	;# 
   342  0015                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0017                     	;# 
   346  0018                     	;# 
   347  0019                     	;# 
   348  001A                     	;# 
   349  001B                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001D                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  0081                     	;# 
   356  0085                     	;# 
   357  0086                     	;# 
   358  0087                     	;# 
   359  0088                     	;# 
   360  0089                     	;# 
   361  008C                     	;# 
   362  008D                     	;# 
   363  008E                     	;# 
   364  008F                     	;# 
   365  0090                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0095                     	;# 
   373  0096                     	;# 
   374  0097                     	;# 
   375  0098                     	;# 
   376  0099                     	;# 
   377  009A                     	;# 
   378  009B                     	;# 
   379  009C                     	;# 
   380  009D                     	;# 
   381  009E                     	;# 
   382  009F                     	;# 
   383  0105                     	;# 
   384  0107                     	;# 
   385  0108                     	;# 
   386  0109                     	;# 
   387  010C                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  010F                     	;# 
   392  0185                     	;# 
   393  0187                     	;# 
   394  0188                     	;# 
   395  0189                     	;# 
   396  018C                     	;# 
   397  018D                     	;# 
   398  0000                     	;# 
   399  0001                     	;# 
   400  0002                     	;# 
   401  0003                     	;# 
   402  0004                     	;# 
   403  0005                     	;# 
   404  0006                     	;# 
   405  0007                     	;# 
   406  0008                     	;# 
   407  0009                     	;# 
   408  000A                     	;# 
   409  000B                     	;# 
   410  000C                     	;# 
   411  000D                     	;# 
   412  000E                     	;# 
   413  000E                     	;# 
   414  000F                     	;# 
   415  0010                     	;# 
   416  0011                     	;# 
   417  0012                     	;# 
   418  0013                     	;# 
   419  0014                     	;# 
   420  0015                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  001D                     	;# 
   431  001E                     	;# 
   432  001F                     	;# 
   433  0081                     	;# 
   434  0085                     	;# 
   435  0086                     	;# 
   436  0087                     	;# 
   437  0088                     	;# 
   438  0089                     	;# 
   439  008C                     	;# 
   440  008D                     	;# 
   441  008E                     	;# 
   442  008F                     	;# 
   443  0090                     	;# 
   444  0091                     	;# 
   445  0092                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0093                     	;# 
   449  0094                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  009F                     	;# 
   461  0105                     	;# 
   462  0107                     	;# 
   463  0108                     	;# 
   464  0109                     	;# 
   465  010C                     	;# 
   466  010C                     	;# 
   467  010D                     	;# 
   468  010E                     	;# 
   469  010F                     	;# 
   470  0185                     	;# 
   471  0187                     	;# 
   472  0188                     	;# 
   473  0189                     	;# 
   474  018C                     	;# 
   475  018D                     	;# 
   476  0000                     	;# 
   477  0001                     	;# 
   478  0002                     	;# 
   479  0003                     	;# 
   480  0004                     	;# 
   481  0005                     	;# 
   482  0006                     	;# 
   483  0007                     	;# 
   484  0008                     	;# 
   485  0009                     	;# 
   486  000A                     	;# 
   487  000B                     	;# 
   488  000C                     	;# 
   489  000D                     	;# 
   490  000E                     	;# 
   491  000E                     	;# 
   492  000F                     	;# 
   493  0010                     	;# 
   494  0011                     	;# 
   495  0012                     	;# 
   496  0013                     	;# 
   497  0014                     	;# 
   498  0015                     	;# 
   499  0015                     	;# 
   500  0016                     	;# 
   501  0017                     	;# 
   502  0018                     	;# 
   503  0019                     	;# 
   504  001A                     	;# 
   505  001B                     	;# 
   506  001B                     	;# 
   507  001C                     	;# 
   508  001D                     	;# 
   509  001E                     	;# 
   510  001F                     	;# 
   511  0081                     	;# 
   512  0085                     	;# 
   513  0086                     	;# 
   514  0087                     	;# 
   515  0088                     	;# 
   516  0089                     	;# 
   517  008C                     	;# 
   518  008D                     	;# 
   519  008E                     	;# 
   520  008F                     	;# 
   521  0090                     	;# 
   522  0091                     	;# 
   523  0092                     	;# 
   524  0093                     	;# 
   525  0093                     	;# 
   526  0093                     	;# 
   527  0094                     	;# 
   528  0095                     	;# 
   529  0096                     	;# 
   530  0097                     	;# 
   531  0098                     	;# 
   532  0099                     	;# 
   533  009A                     	;# 
   534  009B                     	;# 
   535  009C                     	;# 
   536  009D                     	;# 
   537  009E                     	;# 
   538  009F                     	;# 
   539  0105                     	;# 
   540  0107                     	;# 
   541  0108                     	;# 
   542  0109                     	;# 
   543  010C                     	;# 
   544  010C                     	;# 
   545  010D                     	;# 
   546  010E                     	;# 
   547  010F                     	;# 
   548  0185                     	;# 
   549  0187                     	;# 
   550  0188                     	;# 
   551  0189                     	;# 
   552  018C                     	;# 
   553  018D                     	;# 
   554                           
   555                           	psect	strings
   556  1800                     __pstrings:
   557  1800                     stringtab:
   558  1800                     __stringtab:
   559                           
   560                           ;	String table - string pointers are 1 byte each
   561  1800  1BFF               	btfsc	btemp+1,7
   562  1801  280A               	ljmp	stringcode
   563  1802  1383               	bcf	3,7
   564  1803  187F               	btfsc	btemp+1,0
   565  1804  1783               	bsf	3,7
   566  1805  0800               	movf	0,w
   567  1806  0A84               	incf	4,f
   568  1807  1903               	skipnz
   569  1808  0AFF               	incf	btemp+1,f
   570  1809  0008               	return
   571  180A                     stringcode:
   572  180A                     stringdir:
   573  180A  3018               	movlw	high stringdir
   574  180B  008A               	movwf	10
   575  180C  0804               	movf	4,w
   576  180D  0A84               	incf	4,f
   577  180E  0782               	addwf	2,f
   578  180F                     __stringbase:
   579  180F  3400               	retlw	0
   580  1810                     __end_of__stringtab:
   581  1810                     __powers_:
   582  1810  3400               	retlw	0
   583  1811  3400               	retlw	0
   584  1812  3480               	retlw	128
   585  1813  343F               	retlw	63
   586  1814  3400               	retlw	0
   587  1815  3400               	retlw	0
   588  1816  3420               	retlw	32
   589  1817  3441               	retlw	65
   590  1818  3400               	retlw	0
   591  1819  3400               	retlw	0
   592  181A  34C8               	retlw	200
   593  181B  3442               	retlw	66
   594  181C  3400               	retlw	0
   595  181D  3400               	retlw	0
   596  181E  347A               	retlw	122
   597  181F  3444               	retlw	68
   598  1820  3400               	retlw	0
   599  1821  3440               	retlw	64
   600  1822  341C               	retlw	28
   601  1823  3446               	retlw	70
   602  1824  3400               	retlw	0
   603  1825  3450               	retlw	80
   604  1826  34C3               	retlw	195
   605  1827  3447               	retlw	71
   606  1828  3400               	retlw	0
   607  1829  3424               	retlw	36
   608  182A  3474               	retlw	116
   609  182B  3449               	retlw	73
   610  182C  3480               	retlw	128
   611  182D  3496               	retlw	150
   612  182E  3418               	retlw	24
   613  182F  344B               	retlw	75
   614  1830  3420               	retlw	32
   615  1831  34BC               	retlw	188
   616  1832  34BE               	retlw	190
   617  1833  344C               	retlw	76
   618  1834  3428               	retlw	40
   619  1835  346B               	retlw	107
   620  1836  346E               	retlw	110
   621  1837  344E               	retlw	78
   622  1838  34F9               	retlw	249
   623  1839  3402               	retlw	2
   624  183A  3415               	retlw	21
   625  183B  3450               	retlw	80
   626  183C  34EC               	retlw	236
   627  183D  3478               	retlw	120
   628  183E  34AD               	retlw	173
   629  183F  3460               	retlw	96
   630  1840  34CA               	retlw	202
   631  1841  34F2               	retlw	242
   632  1842  3449               	retlw	73
   633  1843  3471               	retlw	113
   634  1844                     __end_of__powers_:
   635  1844                     __npowers_:
   636  1844  3400               	retlw	0
   637  1845  3400               	retlw	0
   638  1846  3480               	retlw	128
   639  1847  343F               	retlw	63
   640  1848  34CD               	retlw	205
   641  1849  34CC               	retlw	204
   642  184A  34CC               	retlw	204
   643  184B  343D               	retlw	61
   644  184C  340A               	retlw	10
   645  184D  34D7               	retlw	215
   646  184E  3423               	retlw	35
   647  184F  343C               	retlw	60
   648  1850  346F               	retlw	111
   649  1851  3412               	retlw	18
   650  1852  3483               	retlw	131
   651  1853  343A               	retlw	58
   652  1854  3417               	retlw	23
   653  1855  34B7               	retlw	183
   654  1856  34D1               	retlw	209
   655  1857  3438               	retlw	56
   656  1858  34AC               	retlw	172
   657  1859  34C5               	retlw	197
   658  185A  3427               	retlw	39
   659  185B  3437               	retlw	55
   660  185C  34BD               	retlw	189
   661  185D  3437               	retlw	55
   662  185E  3486               	retlw	134
   663  185F  3435               	retlw	53
   664  1860  3495               	retlw	149
   665  1861  34BF               	retlw	191
   666  1862  34D6               	retlw	214
   667  1863  3433               	retlw	51
   668  1864  3477               	retlw	119
   669  1865  34CC               	retlw	204
   670  1866  342B               	retlw	43
   671  1867  3432               	retlw	50
   672  1868  345F               	retlw	95
   673  1869  3470               	retlw	112
   674  186A  3489               	retlw	137
   675  186B  3430               	retlw	48
   676  186C  34FF               	retlw	255
   677  186D  34E6               	retlw	230
   678  186E  34DB               	retlw	219
   679  186F  342E               	retlw	46
   680  1870  3408               	retlw	8
   681  1871  34E5               	retlw	229
   682  1872  343C               	retlw	60
   683  1873  341E               	retlw	30
   684  1874  3460               	retlw	96
   685  1875  3442               	retlw	66
   686  1876  34A2               	retlw	162
   687  1877  340D               	retlw	13
   688  1878                     __end_of__npowers_:
   689  1878                     _dpowers:
   690  1878  3401               	retlw	1
   691  1879  3400               	retlw	0
   692  187A  3400               	retlw	0
   693  187B  3400               	retlw	0
   694  187C  340A               	retlw	10
   695  187D  3400               	retlw	0
   696  187E  3400               	retlw	0
   697  187F  3400               	retlw	0
   698  1880  3464               	retlw	100
   699  1881  3400               	retlw	0
   700  1882  3400               	retlw	0
   701  1883  3400               	retlw	0
   702  1884  34E8               	retlw	232
   703  1885  3403               	retlw	3
   704  1886  3400               	retlw	0
   705  1887  3400               	retlw	0
   706  1888  3410               	retlw	16
   707  1889  3427               	retlw	39
   708  188A  3400               	retlw	0
   709  188B  3400               	retlw	0
   710  188C  34A0               	retlw	160
   711  188D  3486               	retlw	134
   712  188E  3401               	retlw	1
   713  188F  3400               	retlw	0
   714  1890  3440               	retlw	64
   715  1891  3442               	retlw	66
   716  1892  340F               	retlw	15
   717  1893  3400               	retlw	0
   718  1894  3480               	retlw	128
   719  1895  3496               	retlw	150
   720  1896  3498               	retlw	152
   721  1897  3400               	retlw	0
   722  1898  3400               	retlw	0
   723  1899  34E1               	retlw	225
   724  189A  34F5               	retlw	245
   725  189B  3405               	retlw	5
   726  189C  3400               	retlw	0
   727  189D  34CA               	retlw	202
   728  189E  349A               	retlw	154
   729  189F  343B               	retlw	59
   730  18A0                     __end_of_dpowers:
   731  0018                     _RCSTAbits	set	24
   732  0009                     _PORTEbits	set	9
   733  0009                     _PORTE	set	9
   734  0008                     _PORTD	set	8
   735  0007                     _PORTC	set	7
   736  0006                     _PORTB	set	6
   737  0005                     _PORTA	set	5
   738  001E                     _ADRESH	set	30
   739  001F                     _ADCON0bits	set	31
   740  009A                     _SPBRGH	set	154
   741  0098                     _TXSTAbits	set	152
   742  009F                     _ADCON1	set	159
   743  009E                     _ADRESL	set	158
   744  008F                     _OSCCONbits	set	143
   745  0089                     _TRISE	set	137
   746  0088                     _TRISD	set	136
   747  0087                     _TRISC	set	135
   748  0086                     _TRISB	set	134
   749  0085                     _TRISA	set	133
   750  0189                     _ANSELH	set	393
   751  0188                     _ANSEL	set	392
   752  18A0                     STR_6:
   753  18A0  3425               	retlw	37	;'%'
   754  18A1  3431               	retlw	49	;'1'
   755  18A2  342E               	retlw	46	;'.'
   756  18A3  3432               	retlw	50	;'2'
   757  18A4  3466               	retlw	102	;'f'
   758  18A5  3420               	retlw	32	;' '
   759  18A6  3400               	retlw	0
   760  18A7                     STR_7:
   761  18A7  3425               	retlw	37	;'%'
   762  18A8  3431               	retlw	49	;'1'
   763  18A9  342E               	retlw	46	;'.'
   764  18AA  3432               	retlw	50	;'2'
   765  18AB  3466               	retlw	102	;'f'
   766  18AC  3400               	retlw	0
   767  18AD                     STR_1:
   768  18AD  3453               	retlw	83	;'S'
   769  18AE  3431               	retlw	49	;'1'
   770  18AF  343A               	retlw	58	;':'
   771  18B0  3400               	retlw	0
   772  18B1                     STR_2:
   773  18B1  3453               	retlw	83	;'S'
   774  18B2  3432               	retlw	50	;'2'
   775  18B3  343A               	retlw	58	;':'
   776  18B4  3400               	retlw	0
   777  18B5                     STR_3:
   778  18B5  3453               	retlw	83	;'S'
   779  18B6  3433               	retlw	51	;'3'
   780  18B7  343A               	retlw	58	;':'
   781  18B8  3400               	retlw	0
   782  18B9                     STR_4:
   783  18B9  3476               	retlw	118	;'v'
   784  18BA  3400               	retlw	0
   785  18B9                     
   786                           	psect	cinit
   787  07F0                     start_initialization:	
   788                           ; #config settings
   789                           
   790  07F0                     __initialization:
   791                           
   792                           ; Clear objects allocated to BANK0
   793  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   794  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   795  07F2  01EF               	clrf	__pbssBANK0& (0+127)
   796                           
   797                           ; Clear objects allocated to BANK1
   798  07F3  1383               	bcf	3,7	;select IRP bank0
   799  07F4  30C7               	movlw	low __pbssBANK1
   800  07F5  0084               	movwf	4
   801  07F6  30E7               	movlw	low (__pbssBANK1+32)
   802  07F7  120A  118A  2004  120A  118A  	fcall	clear_ram0
   803  07FC                     end_of_initialization:	
   804                           ;End of C runtime variable initialization code
   805                           
   806  07FC                     __end_of__initialization:
   807  07FC  0183               	clrf	3
   808  07FD  160A  158A  2C9C   	ljmp	_main	;jump to C main() function
   809                           
   810                           	psect	bssBANK0
   811  006F                     __pbssBANK0:
   812  006F                     _S3_cont:
   813  006F                     	ds	1
   814                           
   815                           	psect	bssBANK1
   816  00C7                     __pbssBANK1:
   817  00C7                     _S2_val:
   818  00C7                     	ds	4
   819  00CB                     _S1_val:
   820  00CB                     	ds	4
   821  00CF                     _VAL_NIBBLE2:
   822  00CF                     	ds	2
   823  00D1                     _VAL_NIBBLE1:
   824  00D1                     	ds	2
   825  00D3                     _VAL_SWAP:
   826  00D3                     	ds	2
   827  00D5                     _VAL:
   828  00D5                     	ds	2
   829  00D7                     _data2:
   830  00D7                     	ds	8
   831  00DF                     _data1:
   832  00DF                     	ds	8
   833                           
   834                           	psect	clrtext
   835  0004                     clear_ram0:	
   836                           ;	Called with FSR containing the base address, and
   837                           ;	W with the last address+1
   838                           
   839  0004  0064               	clrwdt	;clear the watchdog before getting into this loop
   840  0005                     clrloop0:
   841  0005  0180               	clrf	0	;clear RAM location pointed to by FSR
   842  0006  0A84               	incf	4,f	;increment pointer
   843  0007  0604               	xorwf	4,w	;XOR with final address
   844  0008  1903               	btfsc	3,2	;have we reached the end yet?
   845  0009  3400               	retlw	0	;all done for this memory range, return
   846  000A  0604               	xorwf	4,w	;XOR again to restore value
   847  000B  2805               	goto	clrloop0	;do the next byte
   848                           
   849                           	psect	cstackBANK1
   850  00A0                     __pcstackBANK1:
   851  00A0                     ?_sprintf:
   852  00A0                     sprintf@f:	
   853                           ; 2 bytes @ 0x0
   854                           
   855                           
   856                           ; 1 bytes @ 0x0
   857  00A0                     	ds	5
   858  00A5                     ??_sprintf:
   859                           
   860                           ; 1 bytes @ 0x5
   861  00A5                     	ds	5
   862  00AA                     _sprintf$1109:
   863                           
   864                           ; 4 bytes @ 0xA
   865  00AA                     	ds	4
   866  00AE                     sprintf@ap:
   867                           
   868                           ; 1 bytes @ 0xE
   869  00AE                     	ds	1
   870  00AF                     sprintf@val:
   871                           
   872                           ; 4 bytes @ 0xF
   873  00AF                     	ds	4
   874  00B3                     sprintf@flag:
   875                           
   876                           ; 2 bytes @ 0x13
   877  00B3                     	ds	2
   878  00B5                     sprintf@width:
   879                           
   880                           ; 2 bytes @ 0x15
   881  00B5                     	ds	2
   882  00B7                     sprintf@tmpval:
   883                           
   884                           ; 4 bytes @ 0x17
   885  00B7                     	ds	4
   886  00BB                     sprintf@eexp:
   887                           
   888                           ; 2 bytes @ 0x1B
   889  00BB                     	ds	2
   890  00BD                     sprintf@fval:
   891                           
   892                           ; 4 bytes @ 0x1D
   893  00BD                     	ds	4
   894  00C1                     sprintf@sp:
   895                           
   896                           ; 1 bytes @ 0x21
   897  00C1                     	ds	1
   898  00C2                     sprintf@prec:
   899                           
   900                           ; 2 bytes @ 0x22
   901  00C2                     	ds	2
   902  00C4                     sprintf@c:
   903                           
   904                           ; 1 bytes @ 0x24
   905  00C4                     	ds	1
   906  00C5                     ??_main:
   907                           
   908                           ; 1 bytes @ 0x25
   909  00C5                     	ds	2
   910                           
   911                           	psect	cstackCOMMON
   912  0070                     __pcstackCOMMON:
   913  0070                     ?_isdigit:
   914  0070                     ?___fleq:	
   915                           ; 1 bit 
   916                           
   917  0070                     ?___flge:	
   918                           ; 1 bit 
   919                           
   920  0070                     ?_setup:	
   921                           ; 1 bit 
   922                           
   923  0070                     ?_Lcd_Init:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ?_titulos_LCD:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ?_ADC_channel1:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ?_ADC_channel2:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ?_float_to_string:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0070                     ?_ADC_Config:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0070                     ??_ADC_Config:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0070                     ?_initOsc:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0070                     ??_initOsc:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0070                     ?_Lcd_Port:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0070                     ??_Lcd_Port:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0070                     ?_Lcd_Cmd:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0070                     ??_isdigit:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0070                     ?_main:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0070                     ?_Lcd_Write_Char:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0070                     ?__Umul8_16:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0070                     ?___wmul:	
   972                           ; 2 bytes @ 0x0
   973                           
   974  0070                     ?___awmod:	
   975                           ; 2 bytes @ 0x0
   976                           
   977  0070                     ?___lwmod:	
   978                           ; 2 bytes @ 0x0
   979                           
   980  0070                     ?__tdiv_to_l_:	
   981                           ; 2 bytes @ 0x0
   982                           
   983  0070                     ?__div_to_l_:	
   984                           ; 4 bytes @ 0x0
   985                           
   986  0070                     ?___lldiv:	
   987                           ; 4 bytes @ 0x0
   988                           
   989  0070                     ?___flneg:	
   990                           ; 4 bytes @ 0x0
   991                           
   992  0070                     ?___llmod:	
   993                           ; 4 bytes @ 0x0
   994                           
   995  0070                     ?___xxtofl:	
   996                           ; 4 bytes @ 0x0
   997                           
   998  0070                     Lcd_Port@a:	
   999                           ; 4 bytes @ 0x0
  1000                           
  1001  0070                     __Umul8_16@multiplicand:	
  1002                           ; 1 bytes @ 0x0
  1003                           
  1004  0070                     _isdigit$911:	
  1005                           ; 1 bytes @ 0x0
  1006                           
  1007  0070                     ___wmul@multiplier:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010  0070                     ___awmod@divisor:	
  1011                           ; 2 bytes @ 0x0
  1012                           
  1013  0070                     ___lwmod@divisor:	
  1014                           ; 2 bytes @ 0x0
  1015                           
  1016  0070                     ___lldiv@divisor:	
  1017                           ; 2 bytes @ 0x0
  1018                           
  1019  0070                     __div_to_l_@f1:	
  1020                           ; 4 bytes @ 0x0
  1021                           
  1022  0070                     ___fleq@ff1:	
  1023                           ; 4 bytes @ 0x0
  1024                           
  1025  0070                     ___flge@ff1:	
  1026                           ; 4 bytes @ 0x0
  1027                           
  1028  0070                     ___flneg@f1:	
  1029                           ; 4 bytes @ 0x0
  1030                           
  1031  0070                     __tdiv_to_l_@f1:	
  1032                           ; 4 bytes @ 0x0
  1033                           
  1034  0070                     ___llmod@divisor:	
  1035                           ; 4 bytes @ 0x0
  1036                           
  1037  0070                     ___xxtofl@val:	
  1038                           ; 4 bytes @ 0x0
  1039                           
  1040                           
  1041                           ; 4 bytes @ 0x0
  1042  0070                     	ds	1
  1043  0071                     ??_Lcd_Cmd:
  1044  0071                     ??_Lcd_Write_Char:	
  1045                           ; 1 bytes @ 0x1
  1046                           
  1047  0071                     isdigit@c:	
  1048                           ; 1 bytes @ 0x1
  1049                           
  1050                           
  1051                           ; 1 bytes @ 0x1
  1052  0071                     	ds	1
  1053  0072                     ??__Umul8_16:
  1054  0072                     initOsc@IRCF:	
  1055                           ; 1 bytes @ 0x2
  1056                           
  1057  0072                     Lcd_Write_Char@a:	
  1058                           ; 1 bytes @ 0x2
  1059                           
  1060  0072                     ADC_Config@AN_num:	
  1061                           ; 1 bytes @ 0x2
  1062                           
  1063  0072                     ___wmul@multiplicand:	
  1064                           ; 1 bytes @ 0x2
  1065                           
  1066  0072                     ___awmod@dividend:	
  1067                           ; 2 bytes @ 0x2
  1068                           
  1069  0072                     ___lwmod@dividend:	
  1070                           ; 2 bytes @ 0x2
  1071                           
  1072                           
  1073                           ; 2 bytes @ 0x2
  1074  0072                     	ds	1
  1075  0073                     ??_setup:
  1076  0073                     ?_Lcd_Write_String:	
  1077                           ; 1 bytes @ 0x3
  1078                           
  1079  0073                     Lcd_Cmd@a:	
  1080                           ; 1 bytes @ 0x3
  1081                           
  1082  0073                     Lcd_Write_String@a:	
  1083                           ; 1 bytes @ 0x3
  1084                           
  1085                           
  1086                           ; 2 bytes @ 0x3
  1087  0073                     	ds	1
  1088  0074                     ??_Lcd_Init:
  1089  0074                     ?_Lcd_Set_Cursor:	
  1090                           ; 1 bytes @ 0x4
  1091                           
  1092  0074                     ??___wmul:	
  1093                           ; 1 bytes @ 0x4
  1094                           
  1095  0074                     ??___awmod:	
  1096                           ; 1 bytes @ 0x4
  1097                           
  1098  0074                     ??___flneg:	
  1099                           ; 1 bytes @ 0x4
  1100                           
  1101  0074                     ??___lwmod:	
  1102                           ; 1 bytes @ 0x4
  1103                           
  1104  0074                     ??___xxtofl:	
  1105                           ; 1 bytes @ 0x4
  1106                           
  1107  0074                     Lcd_Set_Cursor@b:	
  1108                           ; 1 bytes @ 0x4
  1109                           
  1110  0074                     ___wmul@product:	
  1111                           ; 1 bytes @ 0x4
  1112                           
  1113  0074                     __Umul8_16@product:	
  1114                           ; 2 bytes @ 0x4
  1115                           
  1116  0074                     ___lldiv@dividend:	
  1117                           ; 2 bytes @ 0x4
  1118                           
  1119  0074                     __div_to_l_@f2:	
  1120                           ; 4 bytes @ 0x4
  1121                           
  1122  0074                     ___fleq@ff2:	
  1123                           ; 4 bytes @ 0x4
  1124                           
  1125  0074                     ___flge@ff2:	
  1126                           ; 4 bytes @ 0x4
  1127                           
  1128  0074                     __tdiv_to_l_@f2:	
  1129                           ; 4 bytes @ 0x4
  1130                           
  1131  0074                     ___llmod@dividend:	
  1132                           ; 4 bytes @ 0x4
  1133                           
  1134                           
  1135                           ; 4 bytes @ 0x4
  1136  0074                     	ds	1
  1137  0075                     ??_Lcd_Set_Cursor:
  1138  0075                     ??_Lcd_Write_String:	
  1139                           ; 1 bytes @ 0x5
  1140                           
  1141  0075                     ___awmod@counter:	
  1142                           ; 1 bytes @ 0x5
  1143                           
  1144  0075                     ___lwmod@counter:	
  1145                           ; 1 bytes @ 0x5
  1146                           
  1147                           
  1148                           ; 1 bytes @ 0x5
  1149  0075                     	ds	1
  1150  0076                     ?___lwdiv:
  1151  0076                     Lcd_Set_Cursor@a:	
  1152                           ; 2 bytes @ 0x6
  1153                           
  1154  0076                     ___awmod@sign:	
  1155                           ; 1 bytes @ 0x6
  1156                           
  1157  0076                     ___lwdiv@divisor:	
  1158                           ; 1 bytes @ 0x6
  1159                           
  1160  0076                     __Umul8_16@word_mpld:	
  1161                           ; 2 bytes @ 0x6
  1162                           
  1163                           
  1164                           ; 2 bytes @ 0x6
  1165  0076                     	ds	1
  1166  0077                     ?___awdiv:
  1167  0077                     Lcd_Set_Cursor@temp:	
  1168                           ; 2 bytes @ 0x7
  1169                           
  1170  0077                     ___awdiv@divisor:	
  1171                           ; 1 bytes @ 0x7
  1172                           
  1173                           
  1174                           ; 2 bytes @ 0x7
  1175  0077                     	ds	1
  1176  0078                     ??__tdiv_to_l_:
  1177  0078                     ??__div_to_l_:	
  1178                           ; 1 bytes @ 0x8
  1179                           
  1180  0078                     ??___lldiv:	
  1181                           ; 1 bytes @ 0x8
  1182                           
  1183  0078                     ??___fleq:	
  1184                           ; 1 bytes @ 0x8
  1185                           
  1186  0078                     ??___flge:	
  1187                           ; 1 bytes @ 0x8
  1188                           
  1189  0078                     ??___llmod:	
  1190                           ; 1 bytes @ 0x8
  1191                           
  1192  0078                     __Umul8_16@multiplier:	
  1193                           ; 1 bytes @ 0x8
  1194                           
  1195  0078                     ___xxtofl@sign:	
  1196                           ; 1 bytes @ 0x8
  1197                           
  1198  0078                     Lcd_Write_String@i:	
  1199                           ; 1 bytes @ 0x8
  1200                           
  1201  0078                     ___lwdiv@dividend:	
  1202                           ; 2 bytes @ 0x8
  1203                           
  1204                           
  1205                           ; 2 bytes @ 0x8
  1206  0078                     	ds	1
  1207  0079                     ___llmod@counter:
  1208  0079                     ___xxtofl@exp:	
  1209                           ; 1 bytes @ 0x9
  1210                           
  1211  0079                     ___awdiv@dividend:	
  1212                           ; 1 bytes @ 0x9
  1213                           
  1214  0079                     ___lldiv@quotient:	
  1215                           ; 2 bytes @ 0x9
  1216                           
  1217                           
  1218                           ; 4 bytes @ 0x9
  1219  0079                     	ds	1
  1220  007A                     ??_titulos_LCD:
  1221  007A                     ??___lwdiv:	
  1222                           ; 1 bytes @ 0xA
  1223                           
  1224  007A                     ___xxtofl@arg:	
  1225                           ; 1 bytes @ 0xA
  1226                           
  1227                           
  1228                           ; 4 bytes @ 0xA
  1229  007A                     	ds	1
  1230  007B                     ??___awdiv:
  1231  007B                     ___lwdiv@quotient:	
  1232                           ; 1 bytes @ 0xB
  1233                           
  1234                           
  1235                           ; 2 bytes @ 0xB
  1236  007B                     	ds	2
  1237  007D                     ___lldiv@counter:
  1238  007D                     ___lwdiv@counter:	
  1239                           ; 1 bytes @ 0xD
  1240                           
  1241                           
  1242                           ; 1 bytes @ 0xD
  1243  007D                     	ds	1
  1244  007E                     ??___flsub:
  1245                           
  1246                           	psect	cstackBANK0
  1247  0020                     __pcstackBANK0:	
  1248                           ; 1 bytes @ 0xE
  1249                           
  1250  0020                     ___awdiv@counter:
  1251  0020                     __div_to_l_@quot:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0020                     __tdiv_to_l_@quot:	
  1255                           ; 4 bytes @ 0x0
  1256                           
  1257                           
  1258                           ; 4 bytes @ 0x0
  1259  0020                     	ds	1
  1260  0021                     ___awdiv@sign:
  1261                           
  1262                           ; 1 bytes @ 0x1
  1263  0021                     	ds	1
  1264  0022                     ___awdiv@quotient:
  1265                           
  1266                           ; 2 bytes @ 0x2
  1267  0022                     	ds	2
  1268  0024                     ?___flmul:
  1269  0024                     __div_to_l_@cntr:	
  1270                           ; 4 bytes @ 0x4
  1271                           
  1272  0024                     __tdiv_to_l_@cntr:	
  1273                           ; 1 bytes @ 0x4
  1274                           
  1275  0024                     ___flmul@b:	
  1276                           ; 1 bytes @ 0x4
  1277                           
  1278                           
  1279                           ; 4 bytes @ 0x4
  1280  0024                     	ds	1
  1281  0025                     __div_to_l_@exp1:
  1282  0025                     __tdiv_to_l_@exp1:	
  1283                           ; 1 bytes @ 0x5
  1284                           
  1285                           
  1286                           ; 1 bytes @ 0x5
  1287  0025                     	ds	3
  1288  0028                     ___flmul@a:
  1289                           
  1290                           ; 4 bytes @ 0x8
  1291  0028                     	ds	4
  1292  002C                     ??___flmul:
  1293                           
  1294                           ; 1 bytes @ 0xC
  1295  002C                     	ds	5
  1296  0031                     ___flmul@sign:
  1297                           
  1298                           ; 1 bytes @ 0x11
  1299  0031                     	ds	1
  1300  0032                     ___flmul@grs:
  1301                           
  1302                           ; 4 bytes @ 0x12
  1303  0032                     	ds	4
  1304  0036                     ___flmul@aexp:
  1305                           
  1306                           ; 1 bytes @ 0x16
  1307  0036                     	ds	1
  1308  0037                     ___flmul@bexp:
  1309                           
  1310                           ; 1 bytes @ 0x17
  1311  0037                     	ds	1
  1312  0038                     ___flmul@prod:
  1313                           
  1314                           ; 4 bytes @ 0x18
  1315  0038                     	ds	4
  1316  003C                     ___flmul@temp:
  1317                           
  1318                           ; 2 bytes @ 0x1C
  1319  003C                     	ds	2
  1320  003E                     ?_fround:
  1321  003E                     ?_scale:	
  1322                           ; 4 bytes @ 0x1E
  1323                           
  1324  003E                     ?___fldiv:	
  1325                           ; 4 bytes @ 0x1E
  1326                           
  1327  003E                     ___fldiv@a:	
  1328                           ; 4 bytes @ 0x1E
  1329                           
  1330                           
  1331                           ; 4 bytes @ 0x1E
  1332  003E                     	ds	4
  1333  0042                     ??_fround:
  1334  0042                     ??_scale:	
  1335                           ; 1 bytes @ 0x22
  1336                           
  1337  0042                     ___fldiv@b:	
  1338                           ; 1 bytes @ 0x22
  1339                           
  1340                           
  1341                           ; 4 bytes @ 0x22
  1342  0042                     	ds	4
  1343  0046                     ??___fldiv:
  1344                           
  1345                           ; 1 bytes @ 0x26
  1346  0046                     	ds	3
  1347  0049                     _fround$1107:
  1348                           
  1349                           ; 4 bytes @ 0x29
  1350  0049                     	ds	2
  1351  004B                     ___fldiv@rem:
  1352                           
  1353                           ; 4 bytes @ 0x2B
  1354  004B                     	ds	1
  1355  004C                     _scale$1108:
  1356                           
  1357                           ; 4 bytes @ 0x2C
  1358  004C                     	ds	1
  1359  004D                     _fround$1106:
  1360                           
  1361                           ; 4 bytes @ 0x2D
  1362  004D                     	ds	2
  1363  004F                     ___fldiv@sign:
  1364                           
  1365                           ; 1 bytes @ 0x2F
  1366  004F                     	ds	1
  1367  0050                     scale@scl:
  1368  0050                     ___fldiv@new_exp:	
  1369                           ; 1 bytes @ 0x30
  1370                           
  1371                           
  1372                           ; 2 bytes @ 0x30
  1373  0050                     	ds	1
  1374  0051                     ?___fltol:
  1375  0051                     fround@prec:	
  1376                           ; 4 bytes @ 0x31
  1377                           
  1378  0051                     ___fltol@f1:	
  1379                           ; 1 bytes @ 0x31
  1380                           
  1381                           
  1382                           ; 4 bytes @ 0x31
  1383  0051                     	ds	1
  1384  0052                     ?___fladd:
  1385  0052                     ___fladd@b:	
  1386                           ; 4 bytes @ 0x32
  1387                           
  1388  0052                     ___fldiv@grs:	
  1389                           ; 4 bytes @ 0x32
  1390                           
  1391                           
  1392                           ; 4 bytes @ 0x32
  1393  0052                     	ds	3
  1394  0055                     ??___fltol:
  1395                           
  1396                           ; 1 bytes @ 0x35
  1397  0055                     	ds	1
  1398  0056                     ___fldiv@bexp:
  1399  0056                     ___fladd@a:	
  1400                           ; 1 bytes @ 0x36
  1401                           
  1402                           
  1403                           ; 4 bytes @ 0x36
  1404  0056                     	ds	1
  1405  0057                     ___fldiv@aexp:
  1406                           
  1407                           ; 1 bytes @ 0x37
  1408  0057                     	ds	1
  1409  0058                     ??_ADC_channel1:
  1410  0058                     ??_ADC_channel2:	
  1411                           ; 1 bytes @ 0x38
  1412                           
  1413                           
  1414                           ; 1 bytes @ 0x38
  1415  0058                     	ds	2
  1416  005A                     ??___fladd:
  1417  005A                     ___fltol@sign1:	
  1418                           ; 1 bytes @ 0x3A
  1419                           
  1420                           
  1421                           ; 1 bytes @ 0x3A
  1422  005A                     	ds	1
  1423  005B                     ___fltol@exp1:
  1424                           
  1425                           ; 1 bytes @ 0x3B
  1426  005B                     	ds	7
  1427  0062                     ___fladd@signs:
  1428                           
  1429                           ; 1 bytes @ 0x42
  1430  0062                     	ds	1
  1431  0063                     ___fladd@aexp:
  1432                           
  1433                           ; 1 bytes @ 0x43
  1434  0063                     	ds	1
  1435  0064                     ___fladd@bexp:
  1436                           
  1437                           ; 1 bytes @ 0x44
  1438  0064                     	ds	1
  1439  0065                     ___fladd@grs:
  1440                           
  1441                           ; 1 bytes @ 0x45
  1442  0065                     	ds	1
  1443  0066                     ?___flsub:
  1444  0066                     ___flsub@a:	
  1445                           ; 4 bytes @ 0x46
  1446                           
  1447                           
  1448                           ; 4 bytes @ 0x46
  1449  0066                     	ds	4
  1450  006A                     ___flsub@b:
  1451                           
  1452                           ; 4 bytes @ 0x4A
  1453  006A                     	ds	4
  1454  006E                     ??_float_to_string:
  1455                           
  1456                           ; 1 bytes @ 0x4E
  1457  006E                     	ds	1
  1458                           
  1459                           	psect	maintext
  1460  1C9C                     __pmaintext:	
  1461 ;;
  1462 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1463 ;;
  1464 ;; *************** function _main *****************
  1465 ;; Defined at:
  1466 ;;		line 90 in file "pseudocodigo_lab3.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : B00/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         0       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0
  1482 ;;      Temps:          0       0       2       0       0
  1483 ;;      Totals:         0       0       2       0       0
  1484 ;;Total ram usage:        2 bytes
  1485 ;; Hardware stack levels required when called:    5
  1486 ;; This function calls:
  1487 ;;		_ADC_channel1
  1488 ;;		_ADC_channel2
  1489 ;;		_Lcd_Init
  1490 ;;		_Lcd_Set_Cursor
  1491 ;;		_Lcd_Write_String
  1492 ;;		_float_to_string
  1493 ;;		_setup
  1494 ;;		_titulos_LCD
  1495 ;; This function is called by:
  1496 ;;		Startup code after reset
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           
  1501                           ;psect for function _main
  1502  1C9C                     _main:
  1503  1C9C                     l3861:	
  1504                           ;incstack = 0
  1505                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1506                           
  1507                           
  1508                           ;pseudocodigo_lab3.c: 91:     setup();
  1509  1C9C  160A  158A  215E  160A  158A  	fcall	_setup
  1510  1CA1                     l3863:
  1511                           
  1512                           ;pseudocodigo_lab3.c: 92:     Lcd_Init();
  1513  1CA1  160A  158A  22FA  160A  158A  	fcall	_Lcd_Init
  1514  1CA6                     l3865:
  1515                           
  1516                           ;pseudocodigo_lab3.c: 93:     titulos_LCD();
  1517  1CA6  160A  158A  24F8  160A  158A  	fcall	_titulos_LCD
  1518  1CAB                     l3867:
  1519                           
  1520                           ;pseudocodigo_lab3.c: 101:         ADC_channel1();
  1521  1CAB  160A  158A  25BE  160A  158A  	fcall	_ADC_channel1
  1522  1CB0                     l3869:
  1523                           
  1524                           ;pseudocodigo_lab3.c: 102:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1525  1CB0  3003               	movlw	3
  1526  1CB1  1683               	bsf	3,5	;RP0=1, select bank1
  1527  1CB2  1303               	bcf	3,6	;RP1=0, select bank1
  1528  1CB3  00C6               	movwf	(??_main^(0+128)+1)
  1529  1CB4  3097               	movlw	151
  1530  1CB5  00C5               	movwf	??_main^(0+128)
  1531  1CB6                     u6157:
  1532  1CB6  0BC5               	decfsz	??_main^(0+128),f
  1533  1CB7  2CB6               	goto	u6157
  1534  1CB8  0BC6               	decfsz	(??_main^(0+128)+1),f
  1535  1CB9  2CB6               	goto	u6157
  1536  1CBA                     l3871:
  1537                           
  1538                           ;pseudocodigo_lab3.c: 103:         ADC_channel2();
  1539  1CBA  160A  158A  2631  160A  158A  	fcall	_ADC_channel2
  1540  1CBF                     l3873:
  1541                           
  1542                           ;pseudocodigo_lab3.c: 104:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1543  1CBF  3003               	movlw	3
  1544  1CC0  1683               	bsf	3,5	;RP0=1, select bank1
  1545  1CC1  1303               	bcf	3,6	;RP1=0, select bank1
  1546  1CC2  00C6               	movwf	(??_main^(0+128)+1)
  1547  1CC3  3097               	movlw	151
  1548  1CC4  00C5               	movwf	??_main^(0+128)
  1549  1CC5                     u6167:
  1550  1CC5  0BC5               	decfsz	??_main^(0+128),f
  1551  1CC6  2CC5               	goto	u6167
  1552  1CC7  0BC6               	decfsz	(??_main^(0+128)+1),f
  1553  1CC8  2CC5               	goto	u6167
  1554  1CC9                     l3875:
  1555                           
  1556                           ;pseudocodigo_lab3.c: 106:         float_to_string();
  1557  1CC9  160A  158A  220D  160A  158A  	fcall	_float_to_string
  1558  1CCE                     l3877:
  1559                           
  1560                           ;pseudocodigo_lab3.c: 108:         Lcd_Set_Cursor(2,1);
  1561  1CCE  01F4               	clrf	Lcd_Set_Cursor@b
  1562  1CCF  0AF4               	incf	Lcd_Set_Cursor@b,f
  1563  1CD0  3002               	movlw	2
  1564  1CD1  160A  158A  219D  160A  158A  	fcall	_Lcd_Set_Cursor
  1565  1CD6                     l3879:
  1566                           
  1567                           ;pseudocodigo_lab3.c: 109:         Lcd_Write_String(data1);
  1568  1CD6  30DF               	movlw	(low (_data1| 0))& (0+255)
  1569  1CD7  00F3               	movwf	Lcd_Write_String@a
  1570  1CD8  3000               	movlw	0
  1571  1CD9  00F4               	movwf	Lcd_Write_String@a+1
  1572  1CDA  160A  158A  2274  160A  158A  	fcall	_Lcd_Write_String
  1573  1CDF                     l3881:
  1574                           
  1575                           ;pseudocodigo_lab3.c: 110:         Lcd_Set_Cursor(2,7);
  1576  1CDF  3007               	movlw	7
  1577  1CE0  1683               	bsf	3,5	;RP0=1, select bank1
  1578  1CE1  1303               	bcf	3,6	;RP1=0, select bank1
  1579  1CE2  00C5               	movwf	??_main^(0+128)
  1580  1CE3  0845               	movf	??_main^(0+128),w
  1581  1CE4  00F4               	movwf	Lcd_Set_Cursor@b
  1582  1CE5  3002               	movlw	2
  1583  1CE6  160A  158A  219D  160A  158A  	fcall	_Lcd_Set_Cursor
  1584  1CEB                     l3883:
  1585                           
  1586                           ;pseudocodigo_lab3.c: 111:         Lcd_Write_String(data2);
  1587  1CEB  30D7               	movlw	(low (_data2| 0))& (0+255)
  1588  1CEC  00F3               	movwf	Lcd_Write_String@a
  1589  1CED  3000               	movlw	0
  1590  1CEE  00F4               	movwf	Lcd_Write_String@a+1
  1591  1CEF  160A  158A  2274  160A  158A  	fcall	_Lcd_Write_String
  1592  1CF4  2CAB               	goto	l3867
  1593  1CF5  120A  118A  2800   	ljmp	start
  1594  1CF8                     __end_of_main:
  1595                           
  1596                           	psect	text1
  1597  1CF8                     __ptext1:	
  1598 ;; *************** function _titulos_LCD *****************
  1599 ;; Defined at:
  1600 ;;		line 125 in file "pseudocodigo_lab3.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1614 ;;      Params:         0       0       0       0       0
  1615 ;;      Locals:         0       0       0       0       0
  1616 ;;      Temps:          1       0       0       0       0
  1617 ;;      Totals:         1       0       0       0       0
  1618 ;;Total ram usage:        1 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    3
  1621 ;; This function calls:
  1622 ;;		_Lcd_Set_Cursor
  1623 ;;		_Lcd_Write_String
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           
  1630                           ;psect for function _titulos_LCD
  1631  1CF8                     _titulos_LCD:
  1632  1CF8                     l3825:	
  1633                           ;incstack = 0
  1634                           ; Regs used in _titulos_LCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1635                           
  1636                           
  1637                           ;pseudocodigo_lab3.c: 127:         Lcd_Set_Cursor(1,2);
  1638  1CF8  3002               	movlw	2
  1639  1CF9  00FA               	movwf	??_titulos_LCD
  1640  1CFA  087A               	movf	??_titulos_LCD,w
  1641  1CFB  00F4               	movwf	Lcd_Set_Cursor@b
  1642  1CFC  3001               	movlw	1
  1643  1CFD  160A  158A  219D  160A  158A  	fcall	_Lcd_Set_Cursor
  1644  1D02                     l3827:
  1645                           
  1646                           ;pseudocodigo_lab3.c: 128:         Lcd_Write_String("S1:");
  1647  1D02  309E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1648  1D03  00F3               	movwf	Lcd_Write_String@a
  1649  1D04  3080               	movlw	128
  1650  1D05  00F4               	movwf	Lcd_Write_String@a+1
  1651  1D06  160A  158A  2274  160A  158A  	fcall	_Lcd_Write_String
  1652  1D0B                     l3829:
  1653                           
  1654                           ;pseudocodigo_lab3.c: 129:         Lcd_Set_Cursor(1,8);
  1655  1D0B  3008               	movlw	8
  1656  1D0C  00FA               	movwf	??_titulos_LCD
  1657  1D0D  087A               	movf	??_titulos_LCD,w
  1658  1D0E  00F4               	movwf	Lcd_Set_Cursor@b
  1659  1D0F  3001               	movlw	1
  1660  1D10  160A  158A  219D  160A  158A  	fcall	_Lcd_Set_Cursor
  1661                           
  1662                           ;pseudocodigo_lab3.c: 130:         Lcd_Write_String("S2:");
  1663  1D15  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1664  1D16  00F3               	movwf	Lcd_Write_String@a
  1665  1D17  3080               	movlw	128
  1666  1D18  00F4               	movwf	Lcd_Write_String@a+1
  1667  1D19  160A  158A  2274  160A  158A  	fcall	_Lcd_Write_String
  1668  1D1E                     l3831:
  1669                           
  1670                           ;pseudocodigo_lab3.c: 131:         Lcd_Set_Cursor(1,14);
  1671  1D1E  300E               	movlw	14
  1672  1D1F  00FA               	movwf	??_titulos_LCD
  1673  1D20  087A               	movf	??_titulos_LCD,w
  1674  1D21  00F4               	movwf	Lcd_Set_Cursor@b
  1675  1D22  3001               	movlw	1
  1676  1D23  160A  158A  219D  160A  158A  	fcall	_Lcd_Set_Cursor
  1677  1D28                     l3833:
  1678                           
  1679                           ;pseudocodigo_lab3.c: 132:         Lcd_Write_String("S3:");
  1680  1D28  30A6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1681  1D29  00F3               	movwf	Lcd_Write_String@a
  1682  1D2A  3080               	movlw	128
  1683  1D2B  00F4               	movwf	Lcd_Write_String@a+1
  1684  1D2C  160A  158A  2274  160A  158A  	fcall	_Lcd_Write_String
  1685                           
  1686                           ;pseudocodigo_lab3.c: 133:         Lcd_Set_Cursor(2,5);
  1687  1D31  3005               	movlw	5
  1688  1D32  00FA               	movwf	??_titulos_LCD
  1689  1D33  087A               	movf	??_titulos_LCD,w
  1690  1D34  00F4               	movwf	Lcd_Set_Cursor@b
  1691  1D35  3002               	movlw	2
  1692  1D36  160A  158A  219D  160A  158A  	fcall	_Lcd_Set_Cursor
  1693  1D3B                     l3835:
  1694                           
  1695                           ;pseudocodigo_lab3.c: 134:         Lcd_Write_String("v");
  1696  1D3B  30AA               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1697  1D3C  00F3               	movwf	Lcd_Write_String@a
  1698  1D3D  3080               	movlw	128
  1699  1D3E  00F4               	movwf	Lcd_Write_String@a+1
  1700  1D3F  160A  158A  2274  160A  158A  	fcall	_Lcd_Write_String
  1701  1D44                     l3837:
  1702                           
  1703                           ;pseudocodigo_lab3.c: 135:         Lcd_Set_Cursor(2,12);
  1704  1D44  300C               	movlw	12
  1705  1D45  00FA               	movwf	??_titulos_LCD
  1706  1D46  087A               	movf	??_titulos_LCD,w
  1707  1D47  00F4               	movwf	Lcd_Set_Cursor@b
  1708  1D48  3002               	movlw	2
  1709  1D49  160A  158A  219D  160A  158A  	fcall	_Lcd_Set_Cursor
  1710                           
  1711                           ;pseudocodigo_lab3.c: 136:         Lcd_Write_String("v");
  1712  1D4E  30AA               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1713  1D4F  00F3               	movwf	Lcd_Write_String@a
  1714  1D50  3080               	movlw	128
  1715  1D51  00F4               	movwf	Lcd_Write_String@a+1
  1716  1D52  160A  158A  2274  160A  158A  	fcall	_Lcd_Write_String
  1717  1D57                     l73:
  1718  1D57  0008               	return
  1719  1D58                     __end_of_titulos_LCD:
  1720                           
  1721                           	psect	text2
  1722  1A74                     __ptext2:	
  1723 ;; *************** function _Lcd_Write_String *****************
  1724 ;; Defined at:
  1725 ;;		line 70 in file "LCD.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  a               2    3[COMMON] PTR unsigned char 
  1728 ;;		 -> STR_5(2), STR_4(2), STR_3(4), STR_2(4), 
  1729 ;;		 -> STR_1(4), data2(8), data1(8), 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  i               2    8[COMMON] int 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1741 ;;      Params:         2       0       0       0       0
  1742 ;;      Locals:         2       0       0       0       0
  1743 ;;      Temps:          3       0       0       0       0
  1744 ;;      Totals:         7       0       0       0       0
  1745 ;;Total ram usage:        7 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    2
  1748 ;; This function calls:
  1749 ;;		_Lcd_Write_Char
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;;		_titulos_LCD
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function _Lcd_Write_String
  1758  1A74                     _Lcd_Write_String:
  1759  1A74                     l3349:	
  1760                           ;incstack = 0
  1761                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1762                           
  1763                           
  1764                           ;LCD.c: 71:  int i;;LCD.c: 72:  for(i=0;a[i]!='\0';i++)
  1765  1A74  01F8               	clrf	Lcd_Write_String@i
  1766  1A75  01F9               	clrf	Lcd_Write_String@i+1
  1767  1A76  2A99               	goto	l3355
  1768  1A77                     l3351:
  1769                           
  1770                           ;LCD.c: 73:     Lcd_Write_Char(a[i]);
  1771  1A77  0878               	movf	Lcd_Write_String@i,w
  1772  1A78  0773               	addwf	Lcd_Write_String@a,w
  1773  1A79  00F6               	movwf	??_Lcd_Write_String+1
  1774  1A7A  0874               	movf	Lcd_Write_String@a+1,w
  1775  1A7B  00F5               	movwf	??_Lcd_Write_String
  1776  1A7C  1803               	skipnc
  1777  1A7D  0AF5               	incf	??_Lcd_Write_String,f
  1778  1A7E  1FF8               	btfss	Lcd_Write_String@i,7
  1779  1A7F  2A81               	goto	u5330
  1780  1A80  03F5               	decf	??_Lcd_Write_String,f
  1781  1A81                     u5330:
  1782  1A81  0875               	movf	??_Lcd_Write_String,w
  1783  1A82  00F7               	movwf	??_Lcd_Write_String+2
  1784  1A83  0877               	movf	??_Lcd_Write_String+2,w
  1785  1A84  1283               	bcf	3,5	;RP0=0, select bank0
  1786  1A85  1303               	bcf	3,6	;RP1=0, select bank0
  1787  1A86  00FF               	movwf	btemp+1
  1788  1A87  0876               	movf	??_Lcd_Write_String+1,w
  1789  1A88  0084               	movwf	4
  1790  1A89  160A  158A  2000  160A  158A  	fcall	stringtab
  1791  1A8E  160A  118A  2001  160A  158A  	fcall	_Lcd_Write_Char
  1792  1A93                     l3353:
  1793  1A93  3001               	movlw	1
  1794  1A94  07F8               	addwf	Lcd_Write_String@i,f
  1795  1A95  1803               	skipnc
  1796  1A96  0AF9               	incf	Lcd_Write_String@i+1,f
  1797  1A97  3000               	movlw	0
  1798  1A98  07F9               	addwf	Lcd_Write_String@i+1,f
  1799  1A99                     l3355:
  1800  1A99  0878               	movf	Lcd_Write_String@i,w
  1801  1A9A  0773               	addwf	Lcd_Write_String@a,w
  1802  1A9B  00F6               	movwf	??_Lcd_Write_String+1
  1803  1A9C  0874               	movf	Lcd_Write_String@a+1,w
  1804  1A9D  00F5               	movwf	??_Lcd_Write_String
  1805  1A9E  1803               	skipnc
  1806  1A9F  0AF5               	incf	??_Lcd_Write_String,f
  1807  1AA0  1FF8               	btfss	Lcd_Write_String@i,7
  1808  1AA1  2AA3               	goto	u5340
  1809  1AA2  03F5               	decf	??_Lcd_Write_String,f
  1810  1AA3                     u5340:
  1811  1AA3  0875               	movf	??_Lcd_Write_String,w
  1812  1AA4  00F7               	movwf	??_Lcd_Write_String+2
  1813  1AA5  0877               	movf	??_Lcd_Write_String+2,w
  1814  1AA6  1283               	bcf	3,5	;RP0=0, select bank0
  1815  1AA7  1303               	bcf	3,6	;RP1=0, select bank0
  1816  1AA8  00FF               	movwf	btemp+1
  1817  1AA9  0876               	movf	??_Lcd_Write_String+1,w
  1818  1AAA  0084               	movwf	4
  1819  1AAB  160A  158A  2000  160A  158A  	fcall	stringtab
  1820  1AB0  3A00               	xorlw	0
  1821  1AB1  1D03               	skipz
  1822  1AB2  2AB4               	goto	u5351
  1823  1AB3  2AB5               	goto	u5350
  1824  1AB4                     u5351:
  1825  1AB4  2A77               	goto	l3351
  1826  1AB5                     u5350:
  1827  1AB5                     l144:
  1828  1AB5  0008               	return
  1829  1AB6                     __end_of_Lcd_Write_String:
  1830                           
  1831                           	psect	text3
  1832  1001                     __ptext3:	
  1833 ;; *************** function _Lcd_Write_Char *****************
  1834 ;; Defined at:
  1835 ;;		line 61 in file "LCD.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  a               1    wreg     unsigned char 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  a               1    2[COMMON] unsigned char 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      void 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0, pclath, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1849 ;;      Params:         0       0       0       0       0
  1850 ;;      Locals:         1       0       0       0       0
  1851 ;;      Temps:          1       0       0       0       0
  1852 ;;      Totals:         2       0       0       0       0
  1853 ;;Total ram usage:        2 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    1
  1856 ;; This function calls:
  1857 ;;		_Lcd_Port
  1858 ;; This function is called by:
  1859 ;;		_Lcd_Write_String
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           
  1864                           ;psect for function _Lcd_Write_Char
  1865  1001                     _Lcd_Write_Char:
  1866                           
  1867                           ;incstack = 0
  1868                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1869                           ;Lcd_Write_Char@a stored from wreg
  1870  1001  00F2               	movwf	Lcd_Write_Char@a
  1871  1002                     l2969:
  1872                           
  1873                           ;LCD.c: 62:    PORTEbits.RE0 = 1;
  1874  1002  1283               	bcf	3,5	;RP0=0, select bank0
  1875  1003  1303               	bcf	3,6	;RP1=0, select bank0
  1876  1004  1409               	bsf	9,0	;volatile
  1877  1005                     l2971:
  1878                           
  1879                           ;LCD.c: 63:    Lcd_Port(a);
  1880  1005  0872               	movf	Lcd_Write_Char@a,w
  1881  1006  120A  158A  2000  160A  118A  	fcall	_Lcd_Port
  1882  100B                     l2973:
  1883                           
  1884                           ;LCD.c: 64:    PORTEbits.RE2 = 1;
  1885  100B  1283               	bcf	3,5	;RP0=0, select bank0
  1886  100C  1303               	bcf	3,6	;RP1=0, select bank0
  1887  100D  1509               	bsf	9,2	;volatile
  1888  100E                     l2975:
  1889                           
  1890                           ;LCD.c: 65:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1891  100E  301A               	movlw	26
  1892  100F  00F1               	movwf	??_Lcd_Write_Char
  1893  1010                     u6177:
  1894  1010  0BF1               	decfsz	??_Lcd_Write_Char,f
  1895  1011  2810               	goto	u6177
  1896  1012  0000               	nop
  1897  1013                     l2977:
  1898                           
  1899                           ;LCD.c: 66:    PORTEbits.RE2 = 0;
  1900  1013  1283               	bcf	3,5	;RP0=0, select bank0
  1901  1014  1303               	bcf	3,6	;RP1=0, select bank0
  1902  1015  1109               	bcf	9,2	;volatile
  1903  1016                     l138:
  1904  1016  0008               	return
  1905  1017                     __end_of_Lcd_Write_Char:
  1906                           
  1907                           	psect	text4
  1908  199D                     __ptext4:	
  1909 ;; *************** function _Lcd_Set_Cursor *****************
  1910 ;; Defined at:
  1911 ;;		line 48 in file "LCD.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  a               1    wreg     unsigned char 
  1914 ;;  b               1    4[COMMON] unsigned char 
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;  a               1    6[COMMON] unsigned char 
  1917 ;;  temp            1    7[COMMON] unsigned char 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, status,2, status,0, pclath, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1927 ;;      Params:         1       0       0       0       0
  1928 ;;      Locals:         2       0       0       0       0
  1929 ;;      Temps:          1       0       0       0       0
  1930 ;;      Totals:         4       0       0       0       0
  1931 ;;Total ram usage:        4 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:    2
  1934 ;; This function calls:
  1935 ;;		_Lcd_Cmd
  1936 ;; This function is called by:
  1937 ;;		_main
  1938 ;;		_titulos_LCD
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           
  1943                           ;psect for function _Lcd_Set_Cursor
  1944  199D                     _Lcd_Set_Cursor:
  1945                           
  1946                           ;incstack = 0
  1947                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1948                           ;Lcd_Set_Cursor@a stored from wreg
  1949  199D  00F6               	movwf	Lcd_Set_Cursor@a
  1950  199E                     l3337:
  1951                           
  1952                           ;LCD.c: 49:  char temp;;LCD.c: 50:  if(a == 1){
  1953  199E  0376               	decf	Lcd_Set_Cursor@a,w
  1954  199F  1D03               	btfss	3,2
  1955  19A0  29A2               	goto	u5311
  1956  19A1  29A3               	goto	u5310
  1957  19A2                     u5311:
  1958  19A2  29AF               	goto	l3343
  1959  19A3                     u5310:
  1960  19A3                     l3339:
  1961                           
  1962                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  1963  19A3  0874               	movf	Lcd_Set_Cursor@b,w
  1964  19A4  3E7F               	addlw	127
  1965  19A5  00F5               	movwf	??_Lcd_Set_Cursor
  1966  19A6  0875               	movf	??_Lcd_Set_Cursor,w
  1967  19A7  00F7               	movwf	Lcd_Set_Cursor@temp
  1968  19A8                     l3341:
  1969                           
  1970                           ;LCD.c: 52:         Lcd_Cmd(temp);
  1971  19A8  0877               	movf	Lcd_Set_Cursor@temp,w
  1972  19A9  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  1973                           
  1974                           ;LCD.c: 53:  }
  1975  19AE  29C0               	goto	l135
  1976  19AF                     l3343:
  1977  19AF  3002               	movlw	2
  1978  19B0  0676               	xorwf	Lcd_Set_Cursor@a,w
  1979  19B1  1D03               	btfss	3,2
  1980  19B2  29B4               	goto	u5321
  1981  19B3  29B5               	goto	u5320
  1982  19B4                     u5321:
  1983  19B4  29C0               	goto	l135
  1984  19B5                     u5320:
  1985  19B5                     l3345:
  1986                           
  1987                           ;LCD.c: 55:   temp = 0xC0 + b - 1;
  1988  19B5  0874               	movf	Lcd_Set_Cursor@b,w
  1989  19B6  3EBF               	addlw	191
  1990  19B7  00F5               	movwf	??_Lcd_Set_Cursor
  1991  19B8  0875               	movf	??_Lcd_Set_Cursor,w
  1992  19B9  00F7               	movwf	Lcd_Set_Cursor@temp
  1993  19BA                     l3347:
  1994                           
  1995                           ;LCD.c: 56:   Lcd_Cmd(temp);
  1996  19BA  0877               	movf	Lcd_Set_Cursor@temp,w
  1997  19BB  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  1998  19C0                     l135:
  1999  19C0  0008               	return
  2000  19C1                     __end_of_Lcd_Set_Cursor:
  2001                           
  2002                           	psect	text5
  2003  195E                     __ptext5:	
  2004 ;; *************** function _setup *****************
  2005 ;; Defined at:
  2006 ;;		line 172 in file "pseudocodigo_lab3.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2020 ;;      Params:         0       0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0
  2023 ;;      Totals:         0       0       0       0       0
  2024 ;;Total ram usage:        0 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    1
  2027 ;; This function calls:
  2028 ;;		_initOsc
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function _setup
  2036  195E                     _setup:
  2037  195E                     l3789:	
  2038                           ;incstack = 0
  2039                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2040                           
  2041                           
  2042                           ;pseudocodigo_lab3.c: 173:     initOsc(0b00000110);
  2043  195E  3006               	movlw	6
  2044  195F  160A  158A  2440  160A  158A  	fcall	_initOsc
  2045  1964                     l3791:
  2046                           
  2047                           ;pseudocodigo_lab3.c: 174:     ANSEL = 0b00000011;
  2048  1964  3003               	movlw	3
  2049  1965  1683               	bsf	3,5	;RP0=1, select bank3
  2050  1966  1703               	bsf	3,6	;RP1=1, select bank3
  2051  1967  0088               	movwf	8	;volatile
  2052  1968                     l3793:
  2053                           
  2054                           ;pseudocodigo_lab3.c: 175:     ANSELH = 0;
  2055  1968  0189               	clrf	9	;volatile
  2056  1969                     l3795:
  2057                           
  2058                           ;pseudocodigo_lab3.c: 176:     TRISA = 0b00000011;
  2059  1969  3003               	movlw	3
  2060  196A  1683               	bsf	3,5	;RP0=1, select bank1
  2061  196B  1303               	bcf	3,6	;RP1=0, select bank1
  2062  196C  0085               	movwf	5	;volatile
  2063  196D                     l3797:
  2064                           
  2065                           ;pseudocodigo_lab3.c: 177:     TRISB = 0;
  2066  196D  0186               	clrf	6	;volatile
  2067  196E                     l3799:
  2068                           
  2069                           ;pseudocodigo_lab3.c: 178:     TRISC = 0;
  2070  196E  0187               	clrf	7	;volatile
  2071  196F                     l3801:
  2072                           
  2073                           ;pseudocodigo_lab3.c: 179:     TRISD = 0;
  2074  196F  0188               	clrf	8	;volatile
  2075  1970                     l3803:
  2076                           
  2077                           ;pseudocodigo_lab3.c: 180:     TRISE = 0;
  2078  1970  0189               	clrf	9	;volatile
  2079  1971                     l3805:
  2080                           
  2081                           ;pseudocodigo_lab3.c: 181:     PORTA = 0;
  2082  1971  1283               	bcf	3,5	;RP0=0, select bank0
  2083  1972  1303               	bcf	3,6	;RP1=0, select bank0
  2084  1973  0185               	clrf	5	;volatile
  2085  1974                     l3807:
  2086                           
  2087                           ;pseudocodigo_lab3.c: 182:     PORTB = 0;
  2088  1974  0186               	clrf	6	;volatile
  2089  1975                     l3809:
  2090                           
  2091                           ;pseudocodigo_lab3.c: 183:     PORTC = 0;
  2092  1975  0187               	clrf	7	;volatile
  2093  1976                     l3811:
  2094                           
  2095                           ;pseudocodigo_lab3.c: 184:     PORTD = 0;
  2096  1976  0188               	clrf	8	;volatile
  2097  1977                     l3813:
  2098                           
  2099                           ;pseudocodigo_lab3.c: 185:     PORTE = 0;
  2100  1977  0189               	clrf	9	;volatile
  2101  1978                     l91:
  2102  1978  0008               	return
  2103  1979                     __end_of_setup:
  2104                           
  2105                           	psect	text6
  2106  1C40                     __ptext6:	
  2107 ;; *************** function _initOsc *****************
  2108 ;; Defined at:
  2109 ;;		line 3 in file "Oscilador.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  IRCF            1    wreg     unsigned char 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  IRCF            1    2[COMMON] unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2123 ;;      Params:         0       0       0       0       0
  2124 ;;      Locals:         1       0       0       0       0
  2125 ;;      Temps:          2       0       0       0       0
  2126 ;;      Totals:         3       0       0       0       0
  2127 ;;Total ram usage:        3 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_setup
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           
  2137                           ;psect for function _initOsc
  2138  1C40                     _initOsc:
  2139                           
  2140                           ;incstack = 0
  2141                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  2142                           ;initOsc@IRCF stored from wreg
  2143  1C40  00F2               	movwf	initOsc@IRCF
  2144  1C41                     l3637:
  2145                           
  2146                           ;Oscilador.c: 5:     switch(IRCF){
  2147  1C41  2C78               	goto	l3641
  2148  1C42                     l97:	
  2149                           ;Oscilador.c: 6:         case 0:
  2150                           
  2151                           
  2152                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  2153  1C42  1683               	bsf	3,5	;RP0=1, select bank1
  2154  1C43  1303               	bcf	3,6	;RP1=0, select bank1
  2155  1C44  130F               	bcf	15,6	;volatile
  2156                           
  2157                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  2158  1C45  128F               	bcf	15,5	;volatile
  2159                           
  2160                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  2161  1C46  120F               	bcf	15,4	;volatile
  2162                           
  2163                           ;Oscilador.c: 10:             break;
  2164  1C47  2C9A               	goto	l98
  2165  1C48                     l99:	
  2166                           ;Oscilador.c: 11:          case 1:
  2167                           
  2168                           
  2169                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  2170  1C48  1683               	bsf	3,5	;RP0=1, select bank1
  2171  1C49  1303               	bcf	3,6	;RP1=0, select bank1
  2172  1C4A  130F               	bcf	15,6	;volatile
  2173                           
  2174                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  2175  1C4B  128F               	bcf	15,5	;volatile
  2176                           
  2177                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  2178  1C4C  160F               	bsf	15,4	;volatile
  2179                           
  2180                           ;Oscilador.c: 15:             break;
  2181  1C4D  2C9A               	goto	l98
  2182  1C4E                     l100:	
  2183                           ;Oscilador.c: 16:         case 2:
  2184                           
  2185                           
  2186                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  2187  1C4E  1683               	bsf	3,5	;RP0=1, select bank1
  2188  1C4F  1303               	bcf	3,6	;RP1=0, select bank1
  2189  1C50  130F               	bcf	15,6	;volatile
  2190                           
  2191                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  2192  1C51  168F               	bsf	15,5	;volatile
  2193                           
  2194                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  2195  1C52  120F               	bcf	15,4	;volatile
  2196                           
  2197                           ;Oscilador.c: 20:             break;
  2198  1C53  2C9A               	goto	l98
  2199  1C54                     l101:	
  2200                           ;Oscilador.c: 21:         case 3:
  2201                           
  2202                           
  2203                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  2204  1C54  1683               	bsf	3,5	;RP0=1, select bank1
  2205  1C55  1303               	bcf	3,6	;RP1=0, select bank1
  2206  1C56  130F               	bcf	15,6	;volatile
  2207                           
  2208                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  2209  1C57  168F               	bsf	15,5	;volatile
  2210                           
  2211                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  2212  1C58  160F               	bsf	15,4	;volatile
  2213                           
  2214                           ;Oscilador.c: 25:             break;
  2215  1C59  2C9A               	goto	l98
  2216  1C5A                     l102:	
  2217                           ;Oscilador.c: 26:         case 4:
  2218                           
  2219                           
  2220                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  2221  1C5A  1683               	bsf	3,5	;RP0=1, select bank1
  2222  1C5B  1303               	bcf	3,6	;RP1=0, select bank1
  2223  1C5C  170F               	bsf	15,6	;volatile
  2224                           
  2225                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  2226  1C5D  128F               	bcf	15,5	;volatile
  2227                           
  2228                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  2229  1C5E  120F               	bcf	15,4	;volatile
  2230                           
  2231                           ;Oscilador.c: 30:             break;
  2232  1C5F  2C9A               	goto	l98
  2233  1C60                     l103:	
  2234                           ;Oscilador.c: 31:         case 5:
  2235                           
  2236                           
  2237                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  2238  1C60  1683               	bsf	3,5	;RP0=1, select bank1
  2239  1C61  1303               	bcf	3,6	;RP1=0, select bank1
  2240  1C62  170F               	bsf	15,6	;volatile
  2241                           
  2242                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  2243  1C63  128F               	bcf	15,5	;volatile
  2244                           
  2245                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  2246  1C64  160F               	bsf	15,4	;volatile
  2247                           
  2248                           ;Oscilador.c: 35:             break;
  2249  1C65  2C9A               	goto	l98
  2250  1C66                     l104:	
  2251                           ;Oscilador.c: 36:         case 6:
  2252                           
  2253                           
  2254                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  2255  1C66  1683               	bsf	3,5	;RP0=1, select bank1
  2256  1C67  1303               	bcf	3,6	;RP1=0, select bank1
  2257  1C68  170F               	bsf	15,6	;volatile
  2258                           
  2259                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  2260  1C69  168F               	bsf	15,5	;volatile
  2261                           
  2262                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  2263  1C6A  120F               	bcf	15,4	;volatile
  2264                           
  2265                           ;Oscilador.c: 40:             break;
  2266  1C6B  2C9A               	goto	l98
  2267  1C6C                     l105:	
  2268                           ;Oscilador.c: 41:         case 7:
  2269                           
  2270                           
  2271                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  2272  1C6C  1683               	bsf	3,5	;RP0=1, select bank1
  2273  1C6D  1303               	bcf	3,6	;RP1=0, select bank1
  2274  1C6E  170F               	bsf	15,6	;volatile
  2275                           
  2276                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  2277  1C6F  168F               	bsf	15,5	;volatile
  2278                           
  2279                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  2280  1C70  160F               	bsf	15,4	;volatile
  2281                           
  2282                           ;Oscilador.c: 45:             break;
  2283  1C71  2C9A               	goto	l98
  2284  1C72                     l106:	
  2285                           ;Oscilador.c: 46:         default:
  2286                           
  2287                           
  2288                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  2289  1C72  1683               	bsf	3,5	;RP0=1, select bank1
  2290  1C73  1303               	bcf	3,6	;RP1=0, select bank1
  2291  1C74  170F               	bsf	15,6	;volatile
  2292                           
  2293                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  2294  1C75  168F               	bsf	15,5	;volatile
  2295                           
  2296                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  2297  1C76  120F               	bcf	15,4	;volatile
  2298                           
  2299                           ;Oscilador.c: 50:             break;
  2300  1C77  2C9A               	goto	l98
  2301  1C78                     l3641:
  2302  1C78  0872               	movf	initOsc@IRCF,w
  2303  1C79  00F0               	movwf	??_initOsc
  2304  1C7A  01F1               	clrf	??_initOsc+1
  2305                           
  2306                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2307                           ; Switch size 1, requested type "simple"
  2308                           ; Number of cases is 1, Range of values is 0 to 0
  2309                           ; switch strategies available:
  2310                           ; Name         Instructions Cycles
  2311                           ; simple_byte            4     3 (average)
  2312                           ; direct_byte           11     8 (fixed)
  2313                           ; jumptable            260     6 (fixed)
  2314                           ;	Chosen strategy is simple_byte
  2315  1C7B  0871               	movf	??_initOsc+1,w
  2316  1C7C  3A00               	xorlw	0	; case 0
  2317  1C7D  1903               	skipnz
  2318  1C7E  2C80               	goto	l3977
  2319  1C7F  2C72               	goto	l106
  2320  1C80                     l3977:
  2321                           
  2322                           ; Switch size 1, requested type "simple"
  2323                           ; Number of cases is 8, Range of values is 0 to 7
  2324                           ; switch strategies available:
  2325                           ; Name         Instructions Cycles
  2326                           ; simple_byte           25    13 (average)
  2327                           ; direct_byte           32     8 (fixed)
  2328                           ; jumptable            260     6 (fixed)
  2329                           ;	Chosen strategy is simple_byte
  2330  1C80  0870               	movf	??_initOsc,w
  2331  1C81  3A00               	xorlw	0	; case 0
  2332  1C82  1903               	skipnz
  2333  1C83  2C42               	goto	l97
  2334  1C84  3A01               	xorlw	1	; case 1
  2335  1C85  1903               	skipnz
  2336  1C86  2C48               	goto	l99
  2337  1C87  3A03               	xorlw	3	; case 2
  2338  1C88  1903               	skipnz
  2339  1C89  2C4E               	goto	l100
  2340  1C8A  3A01               	xorlw	1	; case 3
  2341  1C8B  1903               	skipnz
  2342  1C8C  2C54               	goto	l101
  2343  1C8D  3A07               	xorlw	7	; case 4
  2344  1C8E  1903               	skipnz
  2345  1C8F  2C5A               	goto	l102
  2346  1C90  3A01               	xorlw	1	; case 5
  2347  1C91  1903               	skipnz
  2348  1C92  2C60               	goto	l103
  2349  1C93  3A03               	xorlw	3	; case 6
  2350  1C94  1903               	skipnz
  2351  1C95  2C66               	goto	l104
  2352  1C96  3A01               	xorlw	1	; case 7
  2353  1C97  1903               	skipnz
  2354  1C98  2C6C               	goto	l105
  2355  1C99  2C72               	goto	l106
  2356  1C9A                     l98:
  2357                           
  2358                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  2359  1C9A  140F               	bsf	15,0	;volatile
  2360  1C9B                     l107:
  2361  1C9B  0008               	return
  2362  1C9C                     __end_of_initOsc:
  2363                           
  2364                           	psect	text7
  2365  1A0D                     __ptext7:	
  2366 ;; *************** function _float_to_string *****************
  2367 ;; Defined at:
  2368 ;;		line 157 in file "pseudocodigo_lab3.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2382 ;;      Params:         0       0       0       0       0
  2383 ;;      Locals:         0       0       0       0       0
  2384 ;;      Temps:          0       1       0       0       0
  2385 ;;      Totals:         0       1       0       0       0
  2386 ;;Total ram usage:        1 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    4
  2389 ;; This function calls:
  2390 ;;		_sprintf
  2391 ;; This function is called by:
  2392 ;;		_main
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           
  2397                           ;psect for function _float_to_string
  2398  1A0D                     _float_to_string:
  2399  1A0D                     l3859:	
  2400                           ;incstack = 0
  2401                           ; Regs used in _float_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2402                           
  2403                           
  2404                           ;pseudocodigo_lab3.c: 158:     sprintf(data2, "%1.2f ",S1_val);
  2405  1A0D  3091               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2406  1A0E  1283               	bcf	3,5	;RP0=0, select bank0
  2407  1A0F  1303               	bcf	3,6	;RP1=0, select bank0
  2408  1A10  00EE               	movwf	??_float_to_string
  2409  1A11  086E               	movf	??_float_to_string,w
  2410  1A12  1683               	bsf	3,5	;RP0=1, select bank1
  2411  1A13  1303               	bcf	3,6	;RP1=0, select bank1
  2412  1A14  00A0               	movwf	sprintf@f^(0+128)
  2413  1A15  084E               	movf	(_S1_val+3)^(0+128),w
  2414  1A16  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2415  1A17  084D               	movf	(_S1_val+2)^(0+128),w
  2416  1A18  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2417  1A19  084C               	movf	(_S1_val+1)^(0+128),w
  2418  1A1A  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2419  1A1B  084B               	movf	_S1_val^(0+128),w
  2420  1A1C  00A1               	movwf	(?_sprintf^(0+128)+1)
  2421  1A1D  30D7               	movlw	(low (_data2| 0))& (0+255)
  2422  1A1E  120A  118A  2075  160A  158A  	fcall	_sprintf
  2423                           
  2424                           ;pseudocodigo_lab3.c: 159:     sprintf(data1, "%1.2f", S2_val);
  2425  1A23  3098               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2426  1A24  1283               	bcf	3,5	;RP0=0, select bank0
  2427  1A25  1303               	bcf	3,6	;RP1=0, select bank0
  2428  1A26  00EE               	movwf	??_float_to_string
  2429  1A27  086E               	movf	??_float_to_string,w
  2430  1A28  1683               	bsf	3,5	;RP0=1, select bank1
  2431  1A29  1303               	bcf	3,6	;RP1=0, select bank1
  2432  1A2A  00A0               	movwf	sprintf@f^(0+128)
  2433  1A2B  084A               	movf	(_S2_val+3)^(0+128),w
  2434  1A2C  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2435  1A2D  0849               	movf	(_S2_val+2)^(0+128),w
  2436  1A2E  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2437  1A2F  0848               	movf	(_S2_val+1)^(0+128),w
  2438  1A30  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2439  1A31  0847               	movf	_S2_val^(0+128),w
  2440  1A32  00A1               	movwf	(?_sprintf^(0+128)+1)
  2441  1A33  30DF               	movlw	(low (_data1| 0))& (0+255)
  2442  1A34  120A  118A  2075  160A  158A  	fcall	_sprintf
  2443  1A39                     l88:
  2444  1A39  0008               	return
  2445  1A3A                     __end_of_float_to_string:
  2446                           
  2447                           	psect	text8
  2448  0075                     __ptext8:	
  2449 ;; *************** function _sprintf *****************
  2450 ;; Defined at:
  2451 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  sp              1    wreg     PTR unsigned char 
  2454 ;;		 -> data2(8), data1(8), 
  2455 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2456 ;;		 -> STR_7(6), STR_6(7), 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  2459 ;;		 -> data2(8), data1(8), 
  2460 ;;  fval            4   29[BANK1 ] PTR unsigned char 
  2461 ;;  tmpval          4   23[BANK1 ] struct .
  2462 ;;  val             4   15[BANK1 ] unsigned long 
  2463 ;;  prec            2   34[BANK1 ] int 
  2464 ;;  eexp            2   27[BANK1 ] int 
  2465 ;;  width           2   21[BANK1 ] int 
  2466 ;;  flag            2   19[BANK1 ] unsigned short 
  2467 ;;  cp              2    0        PTR const unsigned char 
  2468 ;;  len             2    0        unsigned int 
  2469 ;;  c               1   36[BANK1 ] unsigned char 
  2470 ;;  ap              1   14[BANK1 ] PTR void [1]
  2471 ;;		 -> ?_sprintf(2), 
  2472 ;;  d               1    0        unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  2    0[BANK1 ] int 
  2475 ;; Registers used:
  2476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2482 ;;      Params:         0       0       5       0       0
  2483 ;;      Locals:         0       0      27       0       0
  2484 ;;      Temps:          0       0       5       0       0
  2485 ;;      Totals:         0       0      37       0       0
  2486 ;;Total ram usage:       37 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    3
  2489 ;; This function calls:
  2490 ;;		___awdiv
  2491 ;;		___fladd
  2492 ;;		___fleq
  2493 ;;		___flge
  2494 ;;		___flmul
  2495 ;;		___flneg
  2496 ;;		___flsub
  2497 ;;		___fltol
  2498 ;;		___lldiv
  2499 ;;		___llmod
  2500 ;;		___wmul
  2501 ;;		___xxtofl
  2502 ;;		__div_to_l_
  2503 ;;		__tdiv_to_l_
  2504 ;;		_fround
  2505 ;;		_isdigit
  2506 ;;		_scale
  2507 ;; This function is called by:
  2508 ;;		_float_to_string
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           
  2513                           ;psect for function _sprintf
  2514  0075                     _sprintf:
  2515                           
  2516                           ;incstack = 0
  2517                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2518                           ;sprintf@sp stored from wreg
  2519  0075  1683               	bsf	3,5	;RP0=1, select bank1
  2520  0076  1303               	bcf	3,6	;RP1=0, select bank1
  2521  0077  00C1               	movwf	sprintf@sp^(0+128)
  2522  0078                     l3375:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2525  0078  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2526  0079  00A5               	movwf	??_sprintf^(0+128)
  2527  007A  0825               	movf	??_sprintf^(0+128),w
  2528  007B  00AE               	movwf	sprintf@ap^(0+128)
  2529                           
  2530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2531  007C  2FD9               	goto	l3625
  2532  007D                     l3377:
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2535  007D  3025               	movlw	37
  2536  007E  0644               	xorwf	sprintf@c^(0+128),w
  2537  007F  1903               	btfsc	3,2
  2538  0080  2882               	goto	u5361
  2539  0081  2883               	goto	u5360
  2540  0082                     u5361:
  2541  0082  288F               	goto	l3383
  2542  0083                     u5360:
  2543  0083                     l3379:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2546  0083  0844               	movf	sprintf@c^(0+128),w
  2547  0084  00A5               	movwf	??_sprintf^(0+128)
  2548  0085  0841               	movf	sprintf@sp^(0+128),w
  2549  0086  0084               	movwf	4
  2550  0087  0825               	movf	??_sprintf^(0+128),w
  2551  0088  1383               	bcf	3,7	;select IRP bank0
  2552  0089  0080               	movwf	0
  2553  008A                     l3381:
  2554  008A  3001               	movlw	1
  2555  008B  00A5               	movwf	??_sprintf^(0+128)
  2556  008C  0825               	movf	??_sprintf^(0+128),w
  2557  008D  07C1               	addwf	sprintf@sp^(0+128),f
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2560  008E  2FD9               	goto	l3625
  2561  008F                     l3383:
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2564  008F  01B5               	clrf	sprintf@width^(0+128)
  2565  0090  01B6               	clrf	(sprintf@width+1)^(0+128)
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2568  0091  01B3               	clrf	sprintf@flag^(0+128)
  2569  0092  01B4               	clrf	(sprintf@flag+1)^(0+128)
  2570  0093                     l3385:
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2573  0093  0820               	movf	sprintf@f^(0+128),w
  2574  0094  0084               	movwf	4
  2575  0095  160A  158A  200A  120A  118A  	fcall	stringdir
  2576  009A  160A  158A  2132  120A  118A  	fcall	_isdigit
  2577  009F  1C03               	btfss	3,0
  2578  00A0  28A2               	goto	u5371
  2579  00A1  28A3               	goto	u5370
  2580  00A2                     u5371:
  2581  00A2  28E3               	goto	l3397
  2582  00A3                     u5370:
  2583  00A3                     l3387:
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2586  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  2587  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  2588  00A5  01B5               	clrf	sprintf@width^(0+128)
  2589  00A6  01B6               	clrf	(sprintf@width+1)^(0+128)
  2590  00A7                     l3389:
  2591                           
  2592                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2593  00A7  300A               	movlw	10
  2594  00A8  00F0               	movwf	___wmul@multiplier
  2595  00A9  3000               	movlw	0
  2596  00AA  00F1               	movwf	___wmul@multiplier+1
  2597  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  2598  00AC  1303               	bcf	3,6	;RP1=0, select bank1
  2599  00AD  0836               	movf	(sprintf@width+1)^(0+128),w
  2600  00AE  00F3               	movwf	___wmul@multiplicand+1
  2601  00AF  0835               	movf	sprintf@width^(0+128),w
  2602  00B0  00F2               	movwf	___wmul@multiplicand
  2603  00B1  160A  158A  21C1  120A  118A  	fcall	___wmul
  2604  00B6  0871               	movf	?___wmul+1,w
  2605  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  2606  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  2607  00B9  00B6               	movwf	(sprintf@width+1)^(0+128)
  2608  00BA  0870               	movf	?___wmul,w
  2609  00BB  00B5               	movwf	sprintf@width^(0+128)
  2610  00BC                     l3391:
  2611                           
  2612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2613  00BC  0820               	movf	sprintf@f^(0+128),w
  2614  00BD  0084               	movwf	4
  2615  00BE  160A  158A  200A  120A  118A  	fcall	stringdir
  2616  00C3  3ED0               	addlw	208
  2617  00C4  00A5               	movwf	??_sprintf^(0+128)
  2618  00C5  30FF               	movlw	255
  2619  00C6  1803               	skipnc
  2620  00C7  3000               	movlw	0
  2621  00C8  00A6               	movwf	(??_sprintf^(0+128)+1)
  2622  00C9  0825               	movf	??_sprintf^(0+128),w
  2623  00CA  07B5               	addwf	sprintf@width^(0+128),f
  2624  00CB  1803               	skipnc
  2625  00CC  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2626  00CD  0826               	movf	(??_sprintf+1)^(0+128),w
  2627  00CE  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2628  00CF                     l3393:
  2629  00CF  3001               	movlw	1
  2630  00D0  00A5               	movwf	??_sprintf^(0+128)
  2631  00D1  0825               	movf	??_sprintf^(0+128),w
  2632  00D2  07A0               	addwf	sprintf@f^(0+128),f
  2633  00D3                     l3395:
  2634                           
  2635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2636  00D3  0820               	movf	sprintf@f^(0+128),w
  2637  00D4  0084               	movwf	4
  2638  00D5  160A  158A  200A  120A  118A  	fcall	stringdir
  2639  00DA  160A  158A  2132  120A  118A  	fcall	_isdigit
  2640  00DF  1803               	btfsc	3,0
  2641  00E0  28E2               	goto	u5381
  2642  00E1  28E3               	goto	u5380
  2643  00E2                     u5381:
  2644  00E2  28A7               	goto	l3389
  2645  00E3                     u5380:
  2646  00E3                     l3397:
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2649  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  2650  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  2651  00E5  0820               	movf	sprintf@f^(0+128),w
  2652  00E6  0084               	movwf	4
  2653  00E7  160A  158A  200A  120A  118A  	fcall	stringdir
  2654  00EC  3A2E               	xorlw	46
  2655  00ED  1D03               	skipz
  2656  00EE  28F0               	goto	u5391
  2657  00EF  28F1               	goto	u5390
  2658  00F0                     u5391:
  2659  00F0  2936               	goto	l3413
  2660  00F1                     u5390:
  2661  00F1                     l3399:
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2664  00F1  1734               	bsf	(sprintf@flag^(0+128)+1),6
  2665  00F2                     l3401:
  2666                           
  2667                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2668  00F2  3001               	movlw	1
  2669  00F3  00A5               	movwf	??_sprintf^(0+128)
  2670  00F4  0825               	movf	??_sprintf^(0+128),w
  2671  00F5  07A0               	addwf	sprintf@f^(0+128),f
  2672  00F6                     l3403:
  2673                           
  2674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2675  00F6  01C2               	clrf	sprintf@prec^(0+128)
  2676  00F7  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2677                           
  2678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2679  00F8  2925               	goto	l3411
  2680  00F9                     l3405:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2683  00F9  300A               	movlw	10
  2684  00FA  00F0               	movwf	___wmul@multiplier
  2685  00FB  3000               	movlw	0
  2686  00FC  00F1               	movwf	___wmul@multiplier+1
  2687  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  2688  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  2689  00FF  0843               	movf	(sprintf@prec+1)^(0+128),w
  2690  0100  00F3               	movwf	___wmul@multiplicand+1
  2691  0101  0842               	movf	sprintf@prec^(0+128),w
  2692  0102  00F2               	movwf	___wmul@multiplicand
  2693  0103  160A  158A  21C1  120A  118A  	fcall	___wmul
  2694  0108  0871               	movf	?___wmul+1,w
  2695  0109  1683               	bsf	3,5	;RP0=1, select bank1
  2696  010A  1303               	bcf	3,6	;RP1=0, select bank1
  2697  010B  00C3               	movwf	(sprintf@prec+1)^(0+128)
  2698  010C  0870               	movf	?___wmul,w
  2699  010D  00C2               	movwf	sprintf@prec^(0+128)
  2700  010E                     l3407:
  2701                           
  2702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2703  010E  0820               	movf	sprintf@f^(0+128),w
  2704  010F  0084               	movwf	4
  2705  0110  160A  158A  200A  120A  118A  	fcall	stringdir
  2706  0115  3ED0               	addlw	208
  2707  0116  00A5               	movwf	??_sprintf^(0+128)
  2708  0117  30FF               	movlw	255
  2709  0118  1803               	skipnc
  2710  0119  3000               	movlw	0
  2711  011A  00A6               	movwf	(??_sprintf^(0+128)+1)
  2712  011B  0825               	movf	??_sprintf^(0+128),w
  2713  011C  07C2               	addwf	sprintf@prec^(0+128),f
  2714  011D  1803               	skipnc
  2715  011E  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  2716  011F  0826               	movf	(??_sprintf+1)^(0+128),w
  2717  0120  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  2718  0121                     l3409:
  2719  0121  3001               	movlw	1
  2720  0122  00A5               	movwf	??_sprintf^(0+128)
  2721  0123  0825               	movf	??_sprintf^(0+128),w
  2722  0124  07A0               	addwf	sprintf@f^(0+128),f
  2723  0125                     l3411:
  2724                           
  2725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2726  0125  0820               	movf	sprintf@f^(0+128),w
  2727  0126  0084               	movwf	4
  2728  0127  160A  158A  200A  120A  118A  	fcall	stringdir
  2729  012C  160A  158A  2132  120A  118A  	fcall	_isdigit
  2730  0131  1803               	btfsc	3,0
  2731  0132  2934               	goto	u5401
  2732  0133  2935               	goto	u5400
  2733  0134                     u5401:
  2734  0134  28F9               	goto	l3405
  2735  0135                     u5400:
  2736  0135  293C               	goto	l3419
  2737  0136                     l3413:
  2738                           
  2739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2740  0136  01C2               	clrf	sprintf@prec^(0+128)
  2741  0137  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2742  0138                     l3415:
  2743                           
  2744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2745  0138  1634               	bsf	(sprintf@flag^(0+128)+1),4
  2746  0139  293C               	goto	l3419
  2747  013A                     l343:	
  2748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2749                           
  2750                           
  2751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2752  013A  1534               	bsf	(sprintf@flag^(0+128)+1),2
  2753                           
  2754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2755  013B  2958               	goto	l3421
  2756  013C                     l3419:
  2757  013C  3001               	movlw	1
  2758  013D  1683               	bsf	3,5	;RP0=1, select bank1
  2759  013E  1303               	bcf	3,6	;RP1=0, select bank1
  2760  013F  07A0               	addwf	sprintf@f^(0+128),f
  2761  0140  30FF               	movlw	-1
  2762  0141  0720               	addwf	sprintf@f^(0+128),w
  2763  0142  0084               	movwf	4
  2764  0143  160A  158A  200A  120A  118A  	fcall	stringdir
  2765  0148  00C4               	movwf	sprintf@c^(0+128)
  2766  0149  00A5               	movwf	??_sprintf^(0+128)
  2767  014A  01A6               	clrf	(??_sprintf^(0+128)+1)
  2768                           
  2769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2770                           ; Switch size 1, requested type "simple"
  2771                           ; Number of cases is 1, Range of values is 0 to 0
  2772                           ; switch strategies available:
  2773                           ; Name         Instructions Cycles
  2774                           ; simple_byte            4     3 (average)
  2775                           ; direct_byte           11     8 (fixed)
  2776                           ; jumptable            260     6 (fixed)
  2777                           ;	Chosen strategy is simple_byte
  2778  014B  0826               	movf	(??_sprintf+1)^(0+128),w
  2779  014C  3A00               	xorlw	0	; case 0
  2780  014D  1903               	skipnz
  2781  014E  2950               	goto	l3979
  2782  014F  2FD9               	goto	l3625
  2783  0150                     l3979:
  2784                           
  2785                           ; Switch size 1, requested type "simple"
  2786                           ; Number of cases is 2, Range of values is 0 to 102
  2787                           ; switch strategies available:
  2788                           ; Name         Instructions Cycles
  2789                           ; simple_byte            7     4 (average)
  2790                           ; jumptable            260     6 (fixed)
  2791                           ;	Chosen strategy is simple_byte
  2792  0150  0825               	movf	??_sprintf^(0+128),w
  2793  0151  3A00               	xorlw	0	; case 0
  2794  0152  1903               	skipnz
  2795  0153  2FEB               	goto	l3627
  2796  0154  3A66               	xorlw	102	; case 102
  2797  0155  1903               	skipnz
  2798  0156  293A               	goto	l343
  2799  0157  2FD9               	goto	l3625
  2800  0158                     l3421:
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2803  0158  3000               	movlw	0
  2804  0159  0533               	andwf	sprintf@flag^(0+128),w
  2805  015A  00A5               	movwf	??_sprintf^(0+128)
  2806  015B  3007               	movlw	7
  2807  015C  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2808  015D  00A6               	movwf	(??_sprintf+1)^(0+128)
  2809  015E  0825               	movf	??_sprintf^(0+128),w
  2810  015F  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2811  0160  1903               	btfsc	3,2
  2812  0161  2963               	goto	u5411
  2813  0162  2964               	goto	u5410
  2814  0163                     u5411:
  2815  0163  2F16               	goto	l3579
  2816  0164                     u5410:
  2817  0164                     l3423:
  2818                           
  2819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2820  0164  1E34               	btfss	(sprintf@flag+1)^(0+128),4
  2821  0165  2967               	goto	u5421
  2822  0166  2968               	goto	u5420
  2823  0167                     u5421:
  2824  0167  296C               	goto	l3427
  2825  0168                     u5420:
  2826  0168                     l3425:
  2827                           
  2828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2829  0168  3006               	movlw	6
  2830  0169  00C2               	movwf	sprintf@prec^(0+128)
  2831  016A  3000               	movlw	0
  2832  016B  00C3               	movwf	(sprintf@prec^(0+128)+1)
  2833  016C                     l3427:
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2836  016C  082E               	movf	sprintf@ap^(0+128),w
  2837  016D  0084               	movwf	4
  2838  016E  1383               	bcf	3,7	;select IRP bank0
  2839  016F  0800               	movf	0,w
  2840  0170  00BD               	movwf	sprintf@fval^(0+128)
  2841  0171  0A84               	incf	4,f
  2842  0172  0800               	movf	0,w
  2843  0173  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2844  0174  0A84               	incf	4,f
  2845  0175  0800               	movf	0,w
  2846  0176  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2847  0177  0A84               	incf	4,f
  2848  0178  0800               	movf	0,w
  2849  0179  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2850  017A                     l3429:
  2851  017A  3004               	movlw	4
  2852  017B  00A5               	movwf	??_sprintf^(0+128)
  2853  017C  0825               	movf	??_sprintf^(0+128),w
  2854  017D  07AE               	addwf	sprintf@ap^(0+128),f
  2855  017E                     l3431:
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2858  017E  0840               	movf	(sprintf@fval+3)^(0+128),w
  2859  017F  00F3               	movwf	___flge@ff1+3
  2860  0180  083F               	movf	(sprintf@fval+2)^(0+128),w
  2861  0181  00F2               	movwf	___flge@ff1+2
  2862  0182  083E               	movf	(sprintf@fval+1)^(0+128),w
  2863  0183  00F1               	movwf	___flge@ff1+1
  2864  0184  083D               	movf	sprintf@fval^(0+128),w
  2865  0185  00F0               	movwf	___flge@ff1
  2866  0186  3000               	movlw	0
  2867  0187  00F7               	movwf	___flge@ff2+3
  2868  0188  3000               	movlw	0
  2869  0189  00F6               	movwf	___flge@ff2+2
  2870  018A  3000               	movlw	0
  2871  018B  00F5               	movwf	___flge@ff2+1
  2872  018C  3000               	movlw	0
  2873  018D  00F4               	movwf	___flge@ff2
  2874  018E  160A  158A  26A4  120A  118A  	fcall	___flge
  2875  0193  1803               	btfsc	3,0
  2876  0194  2996               	goto	u5431
  2877  0195  2997               	goto	u5430
  2878  0196                     u5431:
  2879  0196  29B4               	goto	l3437
  2880  0197                     u5430:
  2881  0197                     l3433:
  2882                           
  2883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2884  0197  1683               	bsf	3,5	;RP0=1, select bank1
  2885  0198  1303               	bcf	3,6	;RP1=0, select bank1
  2886  0199  0840               	movf	(sprintf@fval+3)^(0+128),w
  2887  019A  00F3               	movwf	___flneg@f1+3
  2888  019B  083F               	movf	(sprintf@fval+2)^(0+128),w
  2889  019C  00F2               	movwf	___flneg@f1+2
  2890  019D  083E               	movf	(sprintf@fval+1)^(0+128),w
  2891  019E  00F1               	movwf	___flneg@f1+1
  2892  019F  083D               	movf	sprintf@fval^(0+128),w
  2893  01A0  00F0               	movwf	___flneg@f1
  2894  01A1  160A  158A  2127  120A  118A  	fcall	___flneg
  2895  01A6  0873               	movf	?___flneg+3,w
  2896  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  2897  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  2898  01A9  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2899  01AA  0872               	movf	?___flneg+2,w
  2900  01AB  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2901  01AC  0871               	movf	?___flneg+1,w
  2902  01AD  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2903  01AE  0870               	movf	?___flneg,w
  2904  01AF  00BD               	movwf	sprintf@fval^(0+128)
  2905  01B0                     l3435:
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2908  01B0  3003               	movlw	3
  2909  01B1  04B3               	iorwf	sprintf@flag^(0+128),f
  2910  01B2  3000               	movlw	0
  2911  01B3  04B4               	iorwf	(sprintf@flag+1)^(0+128),f
  2912  01B4                     l3437:
  2913                           
  2914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2915  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  2916  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  2917  01B6  01BB               	clrf	sprintf@eexp^(0+128)
  2918  01B7  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  2919  01B8                     l3439:
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2922  01B8  0840               	movf	(sprintf@fval+3)^(0+128),w
  2923  01B9  00F3               	movwf	___fleq@ff1+3
  2924  01BA  083F               	movf	(sprintf@fval+2)^(0+128),w
  2925  01BB  00F2               	movwf	___fleq@ff1+2
  2926  01BC  083E               	movf	(sprintf@fval+1)^(0+128),w
  2927  01BD  00F1               	movwf	___fleq@ff1+1
  2928  01BE  083D               	movf	sprintf@fval^(0+128),w
  2929  01BF  00F0               	movwf	___fleq@ff1
  2930  01C0  3000               	movlw	0
  2931  01C1  00F7               	movwf	___fleq@ff2+3
  2932  01C2  3000               	movlw	0
  2933  01C3  00F6               	movwf	___fleq@ff2+2
  2934  01C4  3000               	movlw	0
  2935  01C5  00F5               	movwf	___fleq@ff2+1
  2936  01C6  3000               	movlw	0
  2937  01C7  00F4               	movwf	___fleq@ff2
  2938  01C8  160A  158A  2345  120A  118A  	fcall	___fleq
  2939  01CD  1803               	btfsc	3,0
  2940  01CE  29D0               	goto	u5441
  2941  01CF  29D1               	goto	u5440
  2942  01D0                     u5441:
  2943  01D0  2AC1               	goto	l3465
  2944  01D1                     u5440:
  2945  01D1                     l3441:
  2946                           
  2947                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2948  01D1  1003               	clrc
  2949  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2950  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2951  01D4  0D3F               	rlf	(sprintf@fval+2)^(0+128),w
  2952  01D5  0D40               	rlf	(sprintf@fval+3)^(0+128),w
  2953  01D6  3E82               	addlw	130
  2954  01D7  00BB               	movwf	sprintf@eexp^(0+128)
  2955  01D8  30FF               	movlw	255
  2956  01D9  1803               	skipnc
  2957  01DA  3000               	movlw	0
  2958  01DB  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  2959  01DC                     l3443:
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2962  01DC  30FF               	movlw	255
  2963  01DD  07BB               	addwf	sprintf@eexp^(0+128),f
  2964  01DE  1803               	skipnc
  2965  01DF  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2966  01E0  30FF               	movlw	255
  2967  01E1  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2968  01E2                     l3445:
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2971  01E2  3003               	movlw	3
  2972  01E3  00F0               	movwf	___wmul@multiplier
  2973  01E4  3000               	movlw	0
  2974  01E5  00F1               	movwf	___wmul@multiplier+1
  2975  01E6  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2976  01E7  00F3               	movwf	___wmul@multiplicand+1
  2977  01E8  083B               	movf	sprintf@eexp^(0+128),w
  2978  01E9  00F2               	movwf	___wmul@multiplicand
  2979  01EA  160A  158A  21C1  120A  118A  	fcall	___wmul
  2980  01EF  0871               	movf	?___wmul+1,w
  2981  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  2982  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  2983  01F2  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2984  01F3  0870               	movf	?___wmul,w
  2985  01F4  00BB               	movwf	sprintf@eexp^(0+128)
  2986  01F5                     l3447:
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2989  01F5  300A               	movlw	10
  2990  01F6  00F7               	movwf	___awdiv@divisor
  2991  01F7  3000               	movlw	0
  2992  01F8  00F8               	movwf	___awdiv@divisor+1
  2993  01F9  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2994  01FA  00FA               	movwf	___awdiv@dividend+1
  2995  01FB  083B               	movf	sprintf@eexp^(0+128),w
  2996  01FC  00F9               	movwf	___awdiv@dividend
  2997  01FD  120A  118A  200C  120A  118A  	fcall	___awdiv
  2998  0202  0878               	movf	?___awdiv+1,w
  2999  0203  1683               	bsf	3,5	;RP0=1, select bank1
  3000  0204  1303               	bcf	3,6	;RP1=0, select bank1
  3001  0205  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  3002  0206  0877               	movf	?___awdiv,w
  3003  0207  00BB               	movwf	sprintf@eexp^(0+128)
  3004  0208                     l3449:
  3005                           
  3006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  3007  0208  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  3008  0209  2A0B               	goto	u5451
  3009  020A  2A0C               	goto	u5450
  3010  020B                     u5451:
  3011  020B  2A12               	goto	l3453
  3012  020C                     u5450:
  3013  020C                     l3451:
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  3016  020C  30FF               	movlw	255
  3017  020D  07BB               	addwf	sprintf@eexp^(0+128),f
  3018  020E  1803               	skipnc
  3019  020F  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3020  0210  30FF               	movlw	255
  3021  0211  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3022  0212                     l3453:
  3023                           
  3024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  3025  0212  033B               	decf	sprintf@eexp^(0+128),w
  3026  0213  3AFF               	xorlw	255
  3027  0214  120A  158A  2140  120A  118A  	fcall	_scale
  3028  0219  1283               	bcf	3,5	;RP0=0, select bank0
  3029  021A  1303               	bcf	3,6	;RP1=0, select bank0
  3030  021B  0841               	movf	?_scale+3,w
  3031  021C  1683               	bsf	3,5	;RP0=1, select bank1
  3032  021D  1303               	bcf	3,6	;RP1=0, select bank1
  3033  021E  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3034  021F  1283               	bcf	3,5	;RP0=0, select bank0
  3035  0220  1303               	bcf	3,6	;RP1=0, select bank0
  3036  0221  0840               	movf	?_scale+2,w
  3037  0222  1683               	bsf	3,5	;RP0=1, select bank1
  3038  0223  1303               	bcf	3,6	;RP1=0, select bank1
  3039  0224  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3040  0225  1283               	bcf	3,5	;RP0=0, select bank0
  3041  0226  1303               	bcf	3,6	;RP1=0, select bank0
  3042  0227  083F               	movf	?_scale+1,w
  3043  0228  1683               	bsf	3,5	;RP0=1, select bank1
  3044  0229  1303               	bcf	3,6	;RP1=0, select bank1
  3045  022A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3046  022B  1283               	bcf	3,5	;RP0=0, select bank0
  3047  022C  1303               	bcf	3,6	;RP1=0, select bank0
  3048  022D  083E               	movf	?_scale,w
  3049  022E  1683               	bsf	3,5	;RP0=1, select bank1
  3050  022F  1303               	bcf	3,6	;RP1=0, select bank1
  3051  0230  00B7               	movwf	sprintf@tmpval^(0+128)
  3052  0231                     l3455:
  3053                           
  3054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  3055  0231  0840               	movf	(sprintf@fval+3)^(0+128),w
  3056  0232  1283               	bcf	3,5	;RP0=0, select bank0
  3057  0233  1303               	bcf	3,6	;RP1=0, select bank0
  3058  0234  00A7               	movwf	___flmul@b+3
  3059  0235  1683               	bsf	3,5	;RP0=1, select bank1
  3060  0236  1303               	bcf	3,6	;RP1=0, select bank1
  3061  0237  083F               	movf	(sprintf@fval+2)^(0+128),w
  3062  0238  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0239  1303               	bcf	3,6	;RP1=0, select bank0
  3064  023A  00A6               	movwf	___flmul@b+2
  3065  023B  1683               	bsf	3,5	;RP0=1, select bank1
  3066  023C  1303               	bcf	3,6	;RP1=0, select bank1
  3067  023D  083E               	movf	(sprintf@fval+1)^(0+128),w
  3068  023E  1283               	bcf	3,5	;RP0=0, select bank0
  3069  023F  1303               	bcf	3,6	;RP1=0, select bank0
  3070  0240  00A5               	movwf	___flmul@b+1
  3071  0241  1683               	bsf	3,5	;RP0=1, select bank1
  3072  0242  1303               	bcf	3,6	;RP1=0, select bank1
  3073  0243  083D               	movf	sprintf@fval^(0+128),w
  3074  0244  1283               	bcf	3,5	;RP0=0, select bank0
  3075  0245  1303               	bcf	3,6	;RP1=0, select bank0
  3076  0246  00A4               	movwf	___flmul@b
  3077  0247  1683               	bsf	3,5	;RP0=1, select bank1
  3078  0248  1303               	bcf	3,6	;RP1=0, select bank1
  3079  0249  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3080  024A  1283               	bcf	3,5	;RP0=0, select bank0
  3081  024B  1303               	bcf	3,6	;RP1=0, select bank0
  3082  024C  00AB               	movwf	___flmul@a+3
  3083  024D  1683               	bsf	3,5	;RP0=1, select bank1
  3084  024E  1303               	bcf	3,6	;RP1=0, select bank1
  3085  024F  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3086  0250  1283               	bcf	3,5	;RP0=0, select bank0
  3087  0251  1303               	bcf	3,6	;RP1=0, select bank0
  3088  0252  00AA               	movwf	___flmul@a+2
  3089  0253  1683               	bsf	3,5	;RP0=1, select bank1
  3090  0254  1303               	bcf	3,6	;RP1=0, select bank1
  3091  0255  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3092  0256  1283               	bcf	3,5	;RP0=0, select bank0
  3093  0257  1303               	bcf	3,6	;RP1=0, select bank0
  3094  0258  00A9               	movwf	___flmul@a+1
  3095  0259  1683               	bsf	3,5	;RP0=1, select bank1
  3096  025A  1303               	bcf	3,6	;RP1=0, select bank1
  3097  025B  0837               	movf	sprintf@tmpval^(0+128),w
  3098  025C  1283               	bcf	3,5	;RP0=0, select bank0
  3099  025D  1303               	bcf	3,6	;RP1=0, select bank0
  3100  025E  00A8               	movwf	___flmul@a
  3101  025F  120A  158A  249F  120A  118A  	fcall	___flmul
  3102  0264  1283               	bcf	3,5	;RP0=0, select bank0
  3103  0265  1303               	bcf	3,6	;RP1=0, select bank0
  3104  0266  0827               	movf	?___flmul+3,w
  3105  0267  1683               	bsf	3,5	;RP0=1, select bank1
  3106  0268  1303               	bcf	3,6	;RP1=0, select bank1
  3107  0269  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3108  026A  1283               	bcf	3,5	;RP0=0, select bank0
  3109  026B  1303               	bcf	3,6	;RP1=0, select bank0
  3110  026C  0826               	movf	?___flmul+2,w
  3111  026D  1683               	bsf	3,5	;RP0=1, select bank1
  3112  026E  1303               	bcf	3,6	;RP1=0, select bank1
  3113  026F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3114  0270  1283               	bcf	3,5	;RP0=0, select bank0
  3115  0271  1303               	bcf	3,6	;RP1=0, select bank0
  3116  0272  0825               	movf	?___flmul+1,w
  3117  0273  1683               	bsf	3,5	;RP0=1, select bank1
  3118  0274  1303               	bcf	3,6	;RP1=0, select bank1
  3119  0275  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3120  0276  1283               	bcf	3,5	;RP0=0, select bank0
  3121  0277  1303               	bcf	3,6	;RP1=0, select bank0
  3122  0278  0824               	movf	?___flmul,w
  3123  0279  1683               	bsf	3,5	;RP0=1, select bank1
  3124  027A  1303               	bcf	3,6	;RP1=0, select bank1
  3125  027B  00B7               	movwf	sprintf@tmpval^(0+128)
  3126  027C                     l3457:
  3127                           
  3128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  3129  027C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3130  027D  00F3               	movwf	___flge@ff1+3
  3131  027E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3132  027F  00F2               	movwf	___flge@ff1+2
  3133  0280  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3134  0281  00F1               	movwf	___flge@ff1+1
  3135  0282  0837               	movf	sprintf@tmpval^(0+128),w
  3136  0283  00F0               	movwf	___flge@ff1
  3137  0284  303F               	movlw	63
  3138  0285  00F7               	movwf	___flge@ff2+3
  3139  0286  3080               	movlw	128
  3140  0287  00F6               	movwf	___flge@ff2+2
  3141  0288  3000               	movlw	0
  3142  0289  00F5               	movwf	___flge@ff2+1
  3143  028A  3000               	movlw	0
  3144  028B  00F4               	movwf	___flge@ff2
  3145  028C  160A  158A  26A4  120A  118A  	fcall	___flge
  3146  0291  1803               	btfsc	3,0
  3147  0292  2A94               	goto	u5461
  3148  0293  2A95               	goto	u5460
  3149  0294                     u5461:
  3150  0294  2A9E               	goto	l3461
  3151  0295                     u5460:
  3152  0295                     l3459:
  3153                           
  3154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3155  0295  30FF               	movlw	255
  3156  0296  1683               	bsf	3,5	;RP0=1, select bank1
  3157  0297  1303               	bcf	3,6	;RP1=0, select bank1
  3158  0298  07BB               	addwf	sprintf@eexp^(0+128),f
  3159  0299  1803               	skipnc
  3160  029A  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3161  029B  30FF               	movlw	255
  3162  029C  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3163  029D  2AC1               	goto	l3465
  3164  029E                     l3461:
  3165  029E  1683               	bsf	3,5	;RP0=1, select bank1
  3166  029F  1303               	bcf	3,6	;RP1=0, select bank1
  3167  02A0  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3168  02A1  00F3               	movwf	___flge@ff1+3
  3169  02A2  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3170  02A3  00F2               	movwf	___flge@ff1+2
  3171  02A4  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3172  02A5  00F1               	movwf	___flge@ff1+1
  3173  02A6  0837               	movf	sprintf@tmpval^(0+128),w
  3174  02A7  00F0               	movwf	___flge@ff1
  3175  02A8  3041               	movlw	65
  3176  02A9  00F7               	movwf	___flge@ff2+3
  3177  02AA  3020               	movlw	32
  3178  02AB  00F6               	movwf	___flge@ff2+2
  3179  02AC  3000               	movlw	0
  3180  02AD  00F5               	movwf	___flge@ff2+1
  3181  02AE  3000               	movlw	0
  3182  02AF  00F4               	movwf	___flge@ff2
  3183  02B0  160A  158A  26A4  120A  118A  	fcall	___flge
  3184  02B5  1C03               	btfss	3,0
  3185  02B6  2AB8               	goto	u5471
  3186  02B7  2AB9               	goto	u5470
  3187  02B8                     u5471:
  3188  02B8  2AC1               	goto	l3465
  3189  02B9                     u5470:
  3190  02B9                     l3463:
  3191                           
  3192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3193  02B9  3001               	movlw	1
  3194  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  3195  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  3196  02BC  07BB               	addwf	sprintf@eexp^(0+128),f
  3197  02BD  1803               	skipnc
  3198  02BE  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3199  02BF  3000               	movlw	0
  3200  02C0  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3201  02C1                     l3465:
  3202                           
  3203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3204  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  3205  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  3206  02C3  0843               	movf	(sprintf@prec+1)^(0+128),w
  3207  02C4  3A80               	xorlw	128
  3208  02C5  00FF               	movwf	btemp+1
  3209  02C6  3080               	movlw	128
  3210  02C7  027F               	subwf	btemp+1,w
  3211  02C8  1D03               	skipz
  3212  02C9  2ACC               	goto	u5485
  3213  02CA  300D               	movlw	13
  3214  02CB  0242               	subwf	sprintf@prec^(0+128),w
  3215  02CC                     u5485:
  3216  02CC  1803               	skipnc
  3217  02CD  2ACF               	goto	u5481
  3218  02CE  2AD0               	goto	u5480
  3219  02CF                     u5481:
  3220  02CF  2B17               	goto	l3469
  3221  02D0                     u5480:
  3222  02D0                     l3467:
  3223                           
  3224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3225  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  3226  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  3227  02D2  0842               	movf	sprintf@prec^(0+128),w
  3228  02D3  160A  118A  236D  120A  118A  	fcall	_fround
  3229  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  3230  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  3231  02DA  0841               	movf	?_fround+3,w
  3232  02DB  00D5               	movwf	___fladd@b+3
  3233  02DC  0840               	movf	?_fround+2,w
  3234  02DD  00D4               	movwf	___fladd@b+2
  3235  02DE  083F               	movf	?_fround+1,w
  3236  02DF  00D3               	movwf	___fladd@b+1
  3237  02E0  083E               	movf	?_fround,w
  3238  02E1  00D2               	movwf	___fladd@b
  3239  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  3240  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  3241  02E4  0840               	movf	(sprintf@fval+3)^(0+128),w
  3242  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  3243  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  3244  02E7  00D9               	movwf	___fladd@a+3
  3245  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  3246  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  3247  02EA  083F               	movf	(sprintf@fval+2)^(0+128),w
  3248  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  3249  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  3250  02ED  00D8               	movwf	___fladd@a+2
  3251  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  3252  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  3253  02F0  083E               	movf	(sprintf@fval+1)^(0+128),w
  3254  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  3255  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  3256  02F3  00D7               	movwf	___fladd@a+1
  3257  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  3258  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  3259  02F6  083D               	movf	sprintf@fval^(0+128),w
  3260  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  3261  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  3262  02F9  00D6               	movwf	___fladd@a
  3263  02FA  160A  118A  2578  120A  118A  	fcall	___fladd
  3264  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  3265  0300  1303               	bcf	3,6	;RP1=0, select bank0
  3266  0301  0855               	movf	?___fladd+3,w
  3267  0302  1683               	bsf	3,5	;RP0=1, select bank1
  3268  0303  1303               	bcf	3,6	;RP1=0, select bank1
  3269  0304  00C0               	movwf	(sprintf@fval+3)^(0+128)
  3270  0305  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0306  1303               	bcf	3,6	;RP1=0, select bank0
  3272  0307  0854               	movf	?___fladd+2,w
  3273  0308  1683               	bsf	3,5	;RP0=1, select bank1
  3274  0309  1303               	bcf	3,6	;RP1=0, select bank1
  3275  030A  00BF               	movwf	(sprintf@fval+2)^(0+128)
  3276  030B  1283               	bcf	3,5	;RP0=0, select bank0
  3277  030C  1303               	bcf	3,6	;RP1=0, select bank0
  3278  030D  0853               	movf	?___fladd+1,w
  3279  030E  1683               	bsf	3,5	;RP0=1, select bank1
  3280  030F  1303               	bcf	3,6	;RP1=0, select bank1
  3281  0310  00BE               	movwf	(sprintf@fval+1)^(0+128)
  3282  0311  1283               	bcf	3,5	;RP0=0, select bank0
  3283  0312  1303               	bcf	3,6	;RP1=0, select bank0
  3284  0313  0852               	movf	?___fladd,w
  3285  0314  1683               	bsf	3,5	;RP0=1, select bank1
  3286  0315  1303               	bcf	3,6	;RP1=0, select bank1
  3287  0316  00BD               	movwf	sprintf@fval^(0+128)
  3288  0317                     l3469:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3291  0317  1683               	bsf	3,5	;RP0=1, select bank1
  3292  0318  1303               	bcf	3,6	;RP1=0, select bank1
  3293  0319  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3294  031A  3A80               	xorlw	128
  3295  031B  00FF               	movwf	btemp+1
  3296  031C  3080               	movlw	128
  3297  031D  027F               	subwf	btemp+1,w
  3298  031E  1D03               	skipz
  3299  031F  2B22               	goto	u5495
  3300  0320  300A               	movlw	10
  3301  0321  023B               	subwf	sprintf@eexp^(0+128),w
  3302  0322                     u5495:
  3303  0322  1803               	skipnc
  3304  0323  2B25               	goto	u5491
  3305  0324  2B26               	goto	u5490
  3306  0325                     u5491:
  3307  0325  2B77               	goto	l3477
  3308  0326                     u5490:
  3309  0326                     l3471:
  3310  0326  1683               	bsf	3,5	;RP0=1, select bank1
  3311  0327  1303               	bcf	3,6	;RP1=0, select bank1
  3312  0328  0840               	movf	(sprintf@fval+3)^(0+128),w
  3313  0329  00F3               	movwf	___fleq@ff1+3
  3314  032A  083F               	movf	(sprintf@fval+2)^(0+128),w
  3315  032B  00F2               	movwf	___fleq@ff1+2
  3316  032C  083E               	movf	(sprintf@fval+1)^(0+128),w
  3317  032D  00F1               	movwf	___fleq@ff1+1
  3318  032E  083D               	movf	sprintf@fval^(0+128),w
  3319  032F  00F0               	movwf	___fleq@ff1
  3320  0330  3000               	movlw	0
  3321  0331  00F7               	movwf	___fleq@ff2+3
  3322  0332  3000               	movlw	0
  3323  0333  00F6               	movwf	___fleq@ff2+2
  3324  0334  3000               	movlw	0
  3325  0335  00F5               	movwf	___fleq@ff2+1
  3326  0336  3000               	movlw	0
  3327  0337  00F4               	movwf	___fleq@ff2
  3328  0338  160A  158A  2345  120A  118A  	fcall	___fleq
  3329  033D  1803               	btfsc	3,0
  3330  033E  2B40               	goto	u5501
  3331  033F  2B41               	goto	u5500
  3332  0340                     u5501:
  3333  0340  2BE9               	goto	l3491
  3334  0341                     u5500:
  3335  0341                     l3473:
  3336  0341  1683               	bsf	3,5	;RP0=1, select bank1
  3337  0342  1303               	bcf	3,6	;RP1=0, select bank1
  3338  0343  0840               	movf	(sprintf@fval+3)^(0+128),w
  3339  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3340  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3341  0346  00D4               	movwf	___fltol@f1+3
  3342  0347  1683               	bsf	3,5	;RP0=1, select bank1
  3343  0348  1303               	bcf	3,6	;RP1=0, select bank1
  3344  0349  083F               	movf	(sprintf@fval+2)^(0+128),w
  3345  034A  1283               	bcf	3,5	;RP0=0, select bank0
  3346  034B  1303               	bcf	3,6	;RP1=0, select bank0
  3347  034C  00D3               	movwf	___fltol@f1+2
  3348  034D  1683               	bsf	3,5	;RP0=1, select bank1
  3349  034E  1303               	bcf	3,6	;RP1=0, select bank1
  3350  034F  083E               	movf	(sprintf@fval+1)^(0+128),w
  3351  0350  1283               	bcf	3,5	;RP0=0, select bank0
  3352  0351  1303               	bcf	3,6	;RP1=0, select bank0
  3353  0352  00D2               	movwf	___fltol@f1+1
  3354  0353  1683               	bsf	3,5	;RP0=1, select bank1
  3355  0354  1303               	bcf	3,6	;RP1=0, select bank1
  3356  0355  083D               	movf	sprintf@fval^(0+128),w
  3357  0356  1283               	bcf	3,5	;RP0=0, select bank0
  3358  0357  1303               	bcf	3,6	;RP1=0, select bank0
  3359  0358  00D1               	movwf	___fltol@f1
  3360  0359  120A  158A  2006  120A  118A  	fcall	___fltol
  3361  035E  1283               	bcf	3,5	;RP0=0, select bank0
  3362  035F  1303               	bcf	3,6	;RP1=0, select bank0
  3363  0360  0854               	movf	?___fltol+3,w
  3364  0361  0453               	iorwf	?___fltol+2,w
  3365  0362  0452               	iorwf	?___fltol+1,w
  3366  0363  0451               	iorwf	?___fltol,w
  3367  0364  1D03               	skipz
  3368  0365  2B67               	goto	u5511
  3369  0366  2B68               	goto	u5510
  3370  0367                     u5511:
  3371  0367  2BE9               	goto	l3491
  3372  0368                     u5510:
  3373  0368                     l3475:
  3374  0368  1683               	bsf	3,5	;RP0=1, select bank1
  3375  0369  1303               	bcf	3,6	;RP1=0, select bank1
  3376  036A  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3377  036B  3A80               	xorlw	128
  3378  036C  00FF               	movwf	btemp+1
  3379  036D  3080               	movlw	128
  3380  036E  027F               	subwf	btemp+1,w
  3381  036F  1D03               	skipz
  3382  0370  2B73               	goto	u5525
  3383  0371  3002               	movlw	2
  3384  0372  023B               	subwf	sprintf@eexp^(0+128),w
  3385  0373                     u5525:
  3386  0373  1C03               	skipc
  3387  0374  2B76               	goto	u5521
  3388  0375  2B77               	goto	u5520
  3389  0376                     u5521:
  3390  0376  2BE9               	goto	l3491
  3391  0377                     u5520:
  3392  0377                     l3477:
  3393                           
  3394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3395  0377  1683               	bsf	3,5	;RP0=1, select bank1
  3396  0378  1303               	bcf	3,6	;RP1=0, select bank1
  3397  0379  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3398  037A  00F3               	movwf	___flge@ff1+3
  3399  037B  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3400  037C  00F2               	movwf	___flge@ff1+2
  3401  037D  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3402  037E  00F1               	movwf	___flge@ff1+1
  3403  037F  0837               	movf	sprintf@tmpval^(0+128),w
  3404  0380  00F0               	movwf	___flge@ff1
  3405  0381  3040               	movlw	64
  3406  0382  00F7               	movwf	___flge@ff2+3
  3407  0383  3089               	movlw	137
  3408  0384  00F6               	movwf	___flge@ff2+2
  3409  0385  3070               	movlw	112
  3410  0386  00F5               	movwf	___flge@ff2+1
  3411  0387  305F               	movlw	95
  3412  0388  00F4               	movwf	___flge@ff2
  3413  0389  160A  158A  26A4  120A  118A  	fcall	___flge
  3414  038E  1803               	btfsc	3,0
  3415  038F  2B91               	goto	u5531
  3416  0390  2B92               	goto	u5530
  3417  0391                     u5531:
  3418  0391  2B9B               	goto	l3481
  3419  0392                     u5530:
  3420  0392                     l3479:
  3421                           
  3422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3423  0392  30F7               	movlw	247
  3424  0393  1683               	bsf	3,5	;RP0=1, select bank1
  3425  0394  1303               	bcf	3,6	;RP1=0, select bank1
  3426  0395  07BB               	addwf	sprintf@eexp^(0+128),f
  3427  0396  1803               	skipnc
  3428  0397  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3429  0398  30FF               	movlw	255
  3430  0399  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3431                           
  3432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3433  039A  2BA3               	goto	l3483
  3434  039B                     l3481:
  3435                           
  3436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3437  039B  30F8               	movlw	248
  3438  039C  1683               	bsf	3,5	;RP0=1, select bank1
  3439  039D  1303               	bcf	3,6	;RP1=0, select bank1
  3440  039E  07BB               	addwf	sprintf@eexp^(0+128),f
  3441  039F  1803               	skipnc
  3442  03A0  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3443  03A1  30FF               	movlw	255
  3444  03A2  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3445  03A3                     l3483:
  3446                           
  3447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3448  03A3  083B               	movf	sprintf@eexp^(0+128),w
  3449  03A4  120A  158A  2140  120A  118A  	fcall	_scale
  3450  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  3451  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  3452  03AB  0841               	movf	?_scale+3,w
  3453  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  3454  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  3455  03AE  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3456  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  3457  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  3458  03B1  0840               	movf	?_scale+2,w
  3459  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  3460  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  3461  03B4  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3462  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  3463  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  3464  03B7  083F               	movf	?_scale+1,w
  3465  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  3466  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  3467  03BA  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3468  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  3469  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  3470  03BD  083E               	movf	?_scale,w
  3471  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  3472  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  3473  03C0  00B7               	movwf	sprintf@tmpval^(0+128)
  3474  03C1                     l3485:
  3475  03C1  0840               	movf	(sprintf@fval+3)^(0+128),w
  3476  03C2  00F3               	movwf	__div_to_l_@f1+3
  3477  03C3  083F               	movf	(sprintf@fval+2)^(0+128),w
  3478  03C4  00F2               	movwf	__div_to_l_@f1+2
  3479  03C5  083E               	movf	(sprintf@fval+1)^(0+128),w
  3480  03C6  00F1               	movwf	__div_to_l_@f1+1
  3481  03C7  083D               	movf	sprintf@fval^(0+128),w
  3482  03C8  00F0               	movwf	__div_to_l_@f1
  3483  03C9  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3484  03CA  00F7               	movwf	__div_to_l_@f2+3
  3485  03CB  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3486  03CC  00F6               	movwf	__div_to_l_@f2+2
  3487  03CD  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3488  03CE  00F5               	movwf	__div_to_l_@f2+1
  3489  03CF  0837               	movf	sprintf@tmpval^(0+128),w
  3490  03D0  00F4               	movwf	__div_to_l_@f2
  3491  03D1  120A  158A  2082  120A  118A  	fcall	__div_to_l_
  3492  03D6  0873               	movf	?__div_to_l_+3,w
  3493  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  3494  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  3495  03D9  00B2               	movwf	(sprintf@val+3)^(0+128)
  3496  03DA  0872               	movf	?__div_to_l_+2,w
  3497  03DB  00B1               	movwf	(sprintf@val+2)^(0+128)
  3498  03DC  0871               	movf	?__div_to_l_+1,w
  3499  03DD  00B0               	movwf	(sprintf@val+1)^(0+128)
  3500  03DE  0870               	movf	?__div_to_l_,w
  3501  03DF  00AF               	movwf	sprintf@val^(0+128)
  3502  03E0                     l3489:
  3503                           
  3504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3505  03E0  3000               	movlw	0
  3506  03E1  00C0               	movwf	(sprintf@fval+3)^(0+128)
  3507  03E2  3000               	movlw	0
  3508  03E3  00BF               	movwf	(sprintf@fval+2)^(0+128)
  3509  03E4  3000               	movlw	0
  3510  03E5  00BE               	movwf	(sprintf@fval+1)^(0+128)
  3511  03E6  3000               	movlw	0
  3512  03E7  00BD               	movwf	sprintf@fval^(0+128)
  3513                           
  3514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3515  03E8  2C6D               	goto	l3497
  3516  03E9                     l3491:
  3517                           
  3518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3519  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  3520  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  3521  03EB  0840               	movf	(sprintf@fval+3)^(0+128),w
  3522  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  3523  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  3524  03EE  00D4               	movwf	___fltol@f1+3
  3525  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  3526  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  3527  03F1  083F               	movf	(sprintf@fval+2)^(0+128),w
  3528  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  3529  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  3530  03F4  00D3               	movwf	___fltol@f1+2
  3531  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  3532  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  3533  03F7  083E               	movf	(sprintf@fval+1)^(0+128),w
  3534  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  3535  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  3536  03FA  00D2               	movwf	___fltol@f1+1
  3537  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  3538  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  3539  03FD  083D               	movf	sprintf@fval^(0+128),w
  3540  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3541  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3542  0400  00D1               	movwf	___fltol@f1
  3543  0401  120A  158A  2006  120A  118A  	fcall	___fltol
  3544  0406  1283               	bcf	3,5	;RP0=0, select bank0
  3545  0407  1303               	bcf	3,6	;RP1=0, select bank0
  3546  0408  0854               	movf	?___fltol+3,w
  3547  0409  1683               	bsf	3,5	;RP0=1, select bank1
  3548  040A  1303               	bcf	3,6	;RP1=0, select bank1
  3549  040B  00B2               	movwf	(sprintf@val+3)^(0+128)
  3550  040C  1283               	bcf	3,5	;RP0=0, select bank0
  3551  040D  1303               	bcf	3,6	;RP1=0, select bank0
  3552  040E  0853               	movf	?___fltol+2,w
  3553  040F  1683               	bsf	3,5	;RP0=1, select bank1
  3554  0410  1303               	bcf	3,6	;RP1=0, select bank1
  3555  0411  00B1               	movwf	(sprintf@val+2)^(0+128)
  3556  0412  1283               	bcf	3,5	;RP0=0, select bank0
  3557  0413  1303               	bcf	3,6	;RP1=0, select bank0
  3558  0414  0852               	movf	?___fltol+1,w
  3559  0415  1683               	bsf	3,5	;RP0=1, select bank1
  3560  0416  1303               	bcf	3,6	;RP1=0, select bank1
  3561  0417  00B0               	movwf	(sprintf@val+1)^(0+128)
  3562  0418  1283               	bcf	3,5	;RP0=0, select bank0
  3563  0419  1303               	bcf	3,6	;RP1=0, select bank0
  3564  041A  0851               	movf	?___fltol,w
  3565  041B  1683               	bsf	3,5	;RP0=1, select bank1
  3566  041C  1303               	bcf	3,6	;RP1=0, select bank1
  3567  041D  00AF               	movwf	sprintf@val^(0+128)
  3568  041E                     l3493:
  3569                           
  3570                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3571  041E  0832               	movf	(sprintf@val+3)^(0+128),w
  3572  041F  00F3               	movwf	___xxtofl@val+3
  3573  0420  0831               	movf	(sprintf@val+2)^(0+128),w
  3574  0421  00F2               	movwf	___xxtofl@val+2
  3575  0422  0830               	movf	(sprintf@val+1)^(0+128),w
  3576  0423  00F1               	movwf	___xxtofl@val+1
  3577  0424  082F               	movf	sprintf@val^(0+128),w
  3578  0425  00F0               	movwf	___xxtofl@val
  3579  0426  3000               	movlw	0
  3580  0427  160A  158A  2746  120A  118A  	fcall	___xxtofl
  3581  042C  0873               	movf	?___xxtofl+3,w
  3582  042D  1283               	bcf	3,5	;RP0=0, select bank0
  3583  042E  1303               	bcf	3,6	;RP1=0, select bank0
  3584  042F  00E9               	movwf	___flsub@a+3
  3585  0430  0872               	movf	?___xxtofl+2,w
  3586  0431  00E8               	movwf	___flsub@a+2
  3587  0432  0871               	movf	?___xxtofl+1,w
  3588  0433  00E7               	movwf	___flsub@a+1
  3589  0434  0870               	movf	?___xxtofl,w
  3590  0435  00E6               	movwf	___flsub@a
  3591  0436  1683               	bsf	3,5	;RP0=1, select bank1
  3592  0437  1303               	bcf	3,6	;RP1=0, select bank1
  3593  0438  0840               	movf	(sprintf@fval+3)^(0+128),w
  3594  0439  1283               	bcf	3,5	;RP0=0, select bank0
  3595  043A  1303               	bcf	3,6	;RP1=0, select bank0
  3596  043B  00ED               	movwf	___flsub@b+3
  3597  043C  1683               	bsf	3,5	;RP0=1, select bank1
  3598  043D  1303               	bcf	3,6	;RP1=0, select bank1
  3599  043E  083F               	movf	(sprintf@fval+2)^(0+128),w
  3600  043F  1283               	bcf	3,5	;RP0=0, select bank0
  3601  0440  1303               	bcf	3,6	;RP1=0, select bank0
  3602  0441  00EC               	movwf	___flsub@b+2
  3603  0442  1683               	bsf	3,5	;RP0=1, select bank1
  3604  0443  1303               	bcf	3,6	;RP1=0, select bank1
  3605  0444  083E               	movf	(sprintf@fval+1)^(0+128),w
  3606  0445  1283               	bcf	3,5	;RP0=0, select bank0
  3607  0446  1303               	bcf	3,6	;RP1=0, select bank0
  3608  0447  00EB               	movwf	___flsub@b+1
  3609  0448  1683               	bsf	3,5	;RP0=1, select bank1
  3610  0449  1303               	bcf	3,6	;RP1=0, select bank1
  3611  044A  083D               	movf	sprintf@fval^(0+128),w
  3612  044B  1283               	bcf	3,5	;RP0=0, select bank0
  3613  044C  1303               	bcf	3,6	;RP1=0, select bank0
  3614  044D  00EA               	movwf	___flsub@b
  3615  044E  160A  158A  2179  120A  118A  	fcall	___flsub
  3616  0453  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0454  1303               	bcf	3,6	;RP1=0, select bank0
  3618  0455  0869               	movf	?___flsub+3,w
  3619  0456  1683               	bsf	3,5	;RP0=1, select bank1
  3620  0457  1303               	bcf	3,6	;RP1=0, select bank1
  3621  0458  00C0               	movwf	(sprintf@fval+3)^(0+128)
  3622  0459  1283               	bcf	3,5	;RP0=0, select bank0
  3623  045A  1303               	bcf	3,6	;RP1=0, select bank0
  3624  045B  0868               	movf	?___flsub+2,w
  3625  045C  1683               	bsf	3,5	;RP0=1, select bank1
  3626  045D  1303               	bcf	3,6	;RP1=0, select bank1
  3627  045E  00BF               	movwf	(sprintf@fval+2)^(0+128)
  3628  045F  1283               	bcf	3,5	;RP0=0, select bank0
  3629  0460  1303               	bcf	3,6	;RP1=0, select bank0
  3630  0461  0867               	movf	?___flsub+1,w
  3631  0462  1683               	bsf	3,5	;RP0=1, select bank1
  3632  0463  1303               	bcf	3,6	;RP1=0, select bank1
  3633  0464  00BE               	movwf	(sprintf@fval+1)^(0+128)
  3634  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3635  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3636  0467  0866               	movf	?___flsub,w
  3637  0468  1683               	bsf	3,5	;RP0=1, select bank1
  3638  0469  1303               	bcf	3,6	;RP1=0, select bank1
  3639  046A  00BD               	movwf	sprintf@fval^(0+128)
  3640  046B                     l3495:
  3641                           
  3642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3643  046B  01BB               	clrf	sprintf@eexp^(0+128)
  3644  046C  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  3645  046D                     l3497:
  3646                           
  3647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3648  046D  01C4               	clrf	sprintf@c^(0+128)
  3649  046E  0AC4               	incf	sprintf@c^(0+128),f
  3650  046F                     l3503:
  3651                           
  3652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3653  046F  0844               	movf	sprintf@c^(0+128),w
  3654  0470  00A5               	movwf	??_sprintf^(0+128)
  3655  0471  3001               	movlw	1
  3656  0472                     u5545:
  3657  0472  1003               	clrc
  3658  0473  0DA5               	rlf	??_sprintf^(0+128),f
  3659  0474  3EFF               	addlw	-1
  3660  0475  1D03               	skipz
  3661  0476  2C72               	goto	u5545
  3662  0477  1003               	clrc
  3663  0478  0D25               	rlf	??_sprintf^(0+128),w
  3664  0479  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3665  047A  0084               	movwf	4
  3666  047B  160A  158A  200A  120A  118A  	fcall	stringdir
  3667  0480  00A6               	movwf	(??_sprintf+1)^(0+128)
  3668  0481  160A  158A  200A  120A  118A  	fcall	stringdir
  3669  0486  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3670  0487  160A  158A  200A  120A  118A  	fcall	stringdir
  3671  048C  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3672  048D  160A  158A  200A  120A  118A  	fcall	stringdir
  3673  0492  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3674  0493  0829               	movf	(??_sprintf+4)^(0+128),w
  3675  0494  0232               	subwf	(sprintf@val+3)^(0+128),w
  3676  0495  1D03               	skipz
  3677  0496  2CA1               	goto	u5555
  3678  0497  0828               	movf	(??_sprintf+3)^(0+128),w
  3679  0498  0231               	subwf	(sprintf@val+2)^(0+128),w
  3680  0499  1D03               	skipz
  3681  049A  2CA1               	goto	u5555
  3682  049B  0827               	movf	(??_sprintf+2)^(0+128),w
  3683  049C  0230               	subwf	(sprintf@val+1)^(0+128),w
  3684  049D  1D03               	skipz
  3685  049E  2CA1               	goto	u5555
  3686  049F  0826               	movf	(??_sprintf+1)^(0+128),w
  3687  04A0  022F               	subwf	sprintf@val^(0+128),w
  3688  04A1                     u5555:
  3689  04A1  1803               	skipnc
  3690  04A2  2CA4               	goto	u5551
  3691  04A3  2CA5               	goto	u5550
  3692  04A4                     u5551:
  3693  04A4  2CA6               	goto	l3507
  3694  04A5                     u5550:
  3695  04A5  2CB0               	goto	l3509
  3696  04A6                     l3507:
  3697  04A6  3001               	movlw	1
  3698  04A7  00A5               	movwf	??_sprintf^(0+128)
  3699  04A8  0825               	movf	??_sprintf^(0+128),w
  3700  04A9  07C4               	addwf	sprintf@c^(0+128),f
  3701  04AA  300A               	movlw	10
  3702  04AB  0644               	xorwf	sprintf@c^(0+128),w
  3703  04AC  1D03               	btfss	3,2
  3704  04AD  2CAF               	goto	u5561
  3705  04AE  2CB0               	goto	u5560
  3706  04AF                     u5561:
  3707  04AF  2C6F               	goto	l3503
  3708  04B0                     u5560:
  3709  04B0                     l3509:
  3710                           
  3711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  3712  04B0  0844               	movf	sprintf@c^(0+128),w
  3713  04B1  0742               	addwf	sprintf@prec^(0+128),w
  3714  04B2  00A5               	movwf	??_sprintf^(0+128)
  3715  04B3  0843               	movf	(sprintf@prec+1)^(0+128),w
  3716  04B4  1803               	skipnc
  3717  04B5  0A43               	incf	(sprintf@prec+1)^(0+128),w
  3718  04B6  00A6               	movwf	(??_sprintf^(0+128)+1)
  3719  04B7  083B               	movf	sprintf@eexp^(0+128),w
  3720  04B8  0725               	addwf	??_sprintf^(0+128),w
  3721  04B9  00A7               	movwf	(??_sprintf+2)^(0+128)
  3722  04BA  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3723  04BB  1803               	skipnc
  3724  04BC  0A3C               	incf	(sprintf@eexp+1)^(0+128),w
  3725  04BD  0726               	addwf	(??_sprintf+1)^(0+128),w
  3726  04BE  00A8               	movwf	(??_sprintf+3)^(0+128)
  3727  04BF  0827               	movf	(??_sprintf+2)^(0+128),w
  3728  04C0  02B5               	subwf	sprintf@width^(0+128),f
  3729  04C1  0828               	movf	(??_sprintf+3)^(0+128),w
  3730  04C2  1C03               	skipc
  3731  04C3  03B6               	decf	(sprintf@width+1)^(0+128),f
  3732  04C4  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  3735  04C5  0842               	movf	sprintf@prec^(0+128),w
  3736  04C6  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3737  04C7  1903               	btfsc	3,2
  3738  04C8  2CCA               	goto	u5571
  3739  04C9  2CCB               	goto	u5570
  3740  04CA                     u5571:
  3741  04CA  2CD1               	goto	l3513
  3742  04CB                     u5570:
  3743  04CB                     l3511:
  3744                           
  3745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  3746  04CB  30FF               	movlw	255
  3747  04CC  07B5               	addwf	sprintf@width^(0+128),f
  3748  04CD  1803               	skipnc
  3749  04CE  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3750  04CF  30FF               	movlw	255
  3751  04D0  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3752  04D1                     l3513:
  3753                           
  3754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  3755  04D1  3003               	movlw	3
  3756  04D2  0533               	andwf	sprintf@flag^(0+128),w
  3757  04D3  00A5               	movwf	??_sprintf^(0+128)
  3758  04D4  3000               	movlw	0
  3759  04D5  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3760  04D6  00A6               	movwf	(??_sprintf+1)^(0+128)
  3761  04D7  0825               	movf	??_sprintf^(0+128),w
  3762  04D8  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3763  04D9  1903               	btfsc	3,2
  3764  04DA  2CDC               	goto	u5581
  3765  04DB  2CDD               	goto	u5580
  3766  04DC                     u5581:
  3767  04DC  2CF2               	goto	l3523
  3768  04DD                     u5580:
  3769  04DD                     l3515:
  3770                           
  3771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  3772  04DD  30FF               	movlw	255
  3773  04DE  07B5               	addwf	sprintf@width^(0+128),f
  3774  04DF  1803               	skipnc
  3775  04E0  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3776  04E1  30FF               	movlw	255
  3777  04E2  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3778  04E3  2CF2               	goto	l3523
  3779  04E4                     l3517:
  3780                           
  3781                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  3782  04E4  3020               	movlw	32
  3783  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  3784  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  3785  04E7  00A5               	movwf	??_sprintf^(0+128)
  3786  04E8  0841               	movf	sprintf@sp^(0+128),w
  3787  04E9  0084               	movwf	4
  3788  04EA  0825               	movf	??_sprintf^(0+128),w
  3789  04EB  1383               	bcf	3,7	;select IRP bank0
  3790  04EC  0080               	movwf	0
  3791  04ED                     l3519:
  3792  04ED  3001               	movlw	1
  3793  04EE  00A5               	movwf	??_sprintf^(0+128)
  3794  04EF  0825               	movf	??_sprintf^(0+128),w
  3795  04F0  07C1               	addwf	sprintf@sp^(0+128),f
  3796  04F1  2CDD               	goto	l3515
  3797  04F2                     l3523:
  3798                           
  3799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  3800  04F2  0836               	movf	(sprintf@width+1)^(0+128),w
  3801  04F3  3A80               	xorlw	128
  3802  04F4  00FF               	movwf	btemp+1
  3803  04F5  3080               	movlw	128
  3804  04F6  027F               	subwf	btemp+1,w
  3805  04F7  1D03               	skipz
  3806  04F8  2CFB               	goto	u5595
  3807  04F9  3001               	movlw	1
  3808  04FA  0235               	subwf	sprintf@width^(0+128),w
  3809  04FB                     u5595:
  3810  04FB  1803               	skipnc
  3811  04FC  2CFE               	goto	u5591
  3812  04FD  2CFF               	goto	u5590
  3813  04FE                     u5591:
  3814  04FE  2CE4               	goto	l3517
  3815  04FF                     u5590:
  3816  04FF                     l3525:
  3817                           
  3818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  3819  04FF  3003               	movlw	3
  3820  0500  1683               	bsf	3,5	;RP0=1, select bank1
  3821  0501  1303               	bcf	3,6	;RP1=0, select bank1
  3822  0502  0533               	andwf	sprintf@flag^(0+128),w
  3823  0503  00A5               	movwf	??_sprintf^(0+128)
  3824  0504  3000               	movlw	0
  3825  0505  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3826  0506  00A6               	movwf	(??_sprintf+1)^(0+128)
  3827  0507  0825               	movf	??_sprintf^(0+128),w
  3828  0508  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3829  0509  1903               	btfsc	3,2
  3830  050A  2D0C               	goto	u5601
  3831  050B  2D0D               	goto	u5600
  3832  050C                     u5601:
  3833  050C  2D7F               	goto	l374
  3834  050D                     u5600:
  3835  050D                     l3527:
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3838  050D  302D               	movlw	45
  3839  050E  00A5               	movwf	??_sprintf^(0+128)
  3840  050F  0841               	movf	sprintf@sp^(0+128),w
  3841  0510  0084               	movwf	4
  3842  0511  0825               	movf	??_sprintf^(0+128),w
  3843  0512  1383               	bcf	3,7	;select IRP bank0
  3844  0513  0080               	movwf	0
  3845  0514                     l3529:
  3846  0514  3001               	movlw	1
  3847  0515  00A5               	movwf	??_sprintf^(0+128)
  3848  0516  0825               	movf	??_sprintf^(0+128),w
  3849  0517  07C1               	addwf	sprintf@sp^(0+128),f
  3850  0518  2D7F               	goto	l374
  3851  0519                     l3531:
  3852                           
  3853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3854  0519  0844               	movf	sprintf@c^(0+128),w
  3855  051A  00A5               	movwf	??_sprintf^(0+128)
  3856  051B  3001               	movlw	1
  3857  051C                     u5615:
  3858  051C  1003               	clrc
  3859  051D  0DA5               	rlf	??_sprintf^(0+128),f
  3860  051E  3EFF               	addlw	-1
  3861  051F  1D03               	skipz
  3862  0520  2D1C               	goto	u5615
  3863  0521  1003               	clrc
  3864  0522  0D25               	rlf	??_sprintf^(0+128),w
  3865  0523  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3866  0524  0084               	movwf	4
  3867  0525  160A  158A  200A  120A  118A  	fcall	stringdir
  3868  052A  00F0               	movwf	___lldiv@divisor
  3869  052B  160A  158A  200A  120A  118A  	fcall	stringdir
  3870  0530  00F1               	movwf	___lldiv@divisor+1
  3871  0531  160A  158A  200A  120A  118A  	fcall	stringdir
  3872  0536  00F2               	movwf	___lldiv@divisor+2
  3873  0537  160A  158A  200A  120A  118A  	fcall	stringdir
  3874  053C  00F3               	movwf	___lldiv@divisor+3
  3875  053D  0832               	movf	(sprintf@val+3)^(0+128),w
  3876  053E  00F7               	movwf	___lldiv@dividend+3
  3877  053F  0831               	movf	(sprintf@val+2)^(0+128),w
  3878  0540  00F6               	movwf	___lldiv@dividend+2
  3879  0541  0830               	movf	(sprintf@val+1)^(0+128),w
  3880  0542  00F5               	movwf	___lldiv@dividend+1
  3881  0543  082F               	movf	sprintf@val^(0+128),w
  3882  0544  00F4               	movwf	___lldiv@dividend
  3883  0545  160A  158A  2558  120A  118A  	fcall	___lldiv
  3884  054A  0873               	movf	?___lldiv+3,w
  3885  054B  1683               	bsf	3,5	;RP0=1, select bank1
  3886  054C  1303               	bcf	3,6	;RP1=0, select bank1
  3887  054D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3888  054E  0872               	movf	?___lldiv+2,w
  3889  054F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3890  0550  0871               	movf	?___lldiv+1,w
  3891  0551  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3892  0552  0870               	movf	?___lldiv,w
  3893  0553  00B7               	movwf	sprintf@tmpval^(0+128)
  3894  0554                     l3533:
  3895                           
  3896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3897  0554  3000               	movlw	0
  3898  0555  00F3               	movwf	___llmod@divisor+3
  3899  0556  3000               	movlw	0
  3900  0557  00F2               	movwf	___llmod@divisor+2
  3901  0558  3000               	movlw	0
  3902  0559  00F1               	movwf	___llmod@divisor+1
  3903  055A  300A               	movlw	10
  3904  055B  00F0               	movwf	___llmod@divisor
  3905  055C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3906  055D  00F7               	movwf	___llmod@dividend+3
  3907  055E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3908  055F  00F6               	movwf	___llmod@dividend+2
  3909  0560  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3910  0561  00F5               	movwf	___llmod@dividend+1
  3911  0562  0837               	movf	sprintf@tmpval^(0+128),w
  3912  0563  00F4               	movwf	___llmod@dividend
  3913  0564  160A  158A  2393  120A  118A  	fcall	___llmod
  3914  0569  0873               	movf	?___llmod+3,w
  3915  056A  1683               	bsf	3,5	;RP0=1, select bank1
  3916  056B  1303               	bcf	3,6	;RP1=0, select bank1
  3917  056C  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3918  056D  0872               	movf	?___llmod+2,w
  3919  056E  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3920  056F  0871               	movf	?___llmod+1,w
  3921  0570  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3922  0571  0870               	movf	?___llmod,w
  3923  0572  00B7               	movwf	sprintf@tmpval^(0+128)
  3924  0573                     l3535:
  3925                           
  3926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3927  0573  0837               	movf	sprintf@tmpval^(0+128),w
  3928  0574  3E30               	addlw	48
  3929  0575  00A5               	movwf	??_sprintf^(0+128)
  3930  0576  0841               	movf	sprintf@sp^(0+128),w
  3931  0577  0084               	movwf	4
  3932  0578  0825               	movf	??_sprintf^(0+128),w
  3933  0579  1383               	bcf	3,7	;select IRP bank0
  3934  057A  0080               	movwf	0
  3935  057B  3001               	movlw	1
  3936  057C  00A5               	movwf	??_sprintf^(0+128)
  3937  057D  0825               	movf	??_sprintf^(0+128),w
  3938  057E  07C1               	addwf	sprintf@sp^(0+128),f
  3939  057F                     l374:	
  3940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3941                           
  3942                           
  3943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3944  057F  3001               	movlw	1
  3945  0580  02C4               	subwf	sprintf@c^(0+128),f
  3946  0581  0A44               	incf	sprintf@c^(0+128),w
  3947  0582  1D03               	btfss	3,2
  3948  0583  2D85               	goto	u5621
  3949  0584  2D86               	goto	u5620
  3950  0585                     u5621:
  3951  0585  2D19               	goto	l3531
  3952  0586                     u5620:
  3953  0586  2D9A               	goto	l3543
  3954  0587                     l3537:
  3955                           
  3956                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3957  0587  3030               	movlw	48
  3958  0588  1683               	bsf	3,5	;RP0=1, select bank1
  3959  0589  1303               	bcf	3,6	;RP1=0, select bank1
  3960  058A  00A5               	movwf	??_sprintf^(0+128)
  3961  058B  0841               	movf	sprintf@sp^(0+128),w
  3962  058C  0084               	movwf	4
  3963  058D  0825               	movf	??_sprintf^(0+128),w
  3964  058E  1383               	bcf	3,7	;select IRP bank0
  3965  058F  0080               	movwf	0
  3966  0590                     l3539:
  3967  0590  3001               	movlw	1
  3968  0591  00A5               	movwf	??_sprintf^(0+128)
  3969  0592  0825               	movf	??_sprintf^(0+128),w
  3970  0593  07C1               	addwf	sprintf@sp^(0+128),f
  3971  0594                     l3541:
  3972                           
  3973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3974  0594  30FF               	movlw	255
  3975  0595  07BB               	addwf	sprintf@eexp^(0+128),f
  3976  0596  1803               	skipnc
  3977  0597  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3978  0598  30FF               	movlw	255
  3979  0599  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3980  059A                     l3543:
  3981                           
  3982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3983  059A  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3984  059B  3A80               	xorlw	128
  3985  059C  00FF               	movwf	btemp+1
  3986  059D  3080               	movlw	128
  3987  059E  027F               	subwf	btemp+1,w
  3988  059F  1D03               	skipz
  3989  05A0  2DA3               	goto	u5635
  3990  05A1  3001               	movlw	1
  3991  05A2  023B               	subwf	sprintf@eexp^(0+128),w
  3992  05A3                     u5635:
  3993  05A3  1803               	skipnc
  3994  05A4  2DA6               	goto	u5631
  3995  05A5  2DA7               	goto	u5630
  3996  05A6                     u5631:
  3997  05A6  2D87               	goto	l3537
  3998  05A7                     u5630:
  3999  05A7                     l3545:
  4000                           
  4001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  4002  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  4003  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  4004  05A9  0843               	movf	(sprintf@prec+1)^(0+128),w
  4005  05AA  3A80               	xorlw	128
  4006  05AB  00FF               	movwf	btemp+1
  4007  05AC  3080               	movlw	128
  4008  05AD  027F               	subwf	btemp+1,w
  4009  05AE  1D03               	skipz
  4010  05AF  2DB2               	goto	u5645
  4011  05B0  3009               	movlw	9
  4012  05B1  0242               	subwf	sprintf@prec^(0+128),w
  4013  05B2                     u5645:
  4014  05B2  1C03               	skipc
  4015  05B3  2DB5               	goto	u5641
  4016  05B4  2DB6               	goto	u5640
  4017  05B5                     u5641:
  4018  05B5  2DBD               	goto	l3549
  4019  05B6                     u5640:
  4020  05B6                     l3547:
  4021                           
  4022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  4023  05B6  3008               	movlw	8
  4024  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  4025  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  4026  05B9  00A5               	movwf	??_sprintf^(0+128)
  4027  05BA  0825               	movf	??_sprintf^(0+128),w
  4028  05BB  00C4               	movwf	sprintf@c^(0+128)
  4029  05BC  2DC3               	goto	l381
  4030  05BD                     l3549:
  4031                           
  4032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  4033  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  4034  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  4035  05BF  0842               	movf	sprintf@prec^(0+128),w
  4036  05C0  00A5               	movwf	??_sprintf^(0+128)
  4037  05C1  0825               	movf	??_sprintf^(0+128),w
  4038  05C2  00C4               	movwf	sprintf@c^(0+128)
  4039  05C3                     l381:
  4040                           
  4041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  4042  05C3  0844               	movf	sprintf@c^(0+128),w
  4043  05C4  00A5               	movwf	??_sprintf^(0+128)
  4044  05C5  01A6               	clrf	(??_sprintf^(0+128)+1)
  4045  05C6  0825               	movf	??_sprintf^(0+128),w
  4046  05C7  02C2               	subwf	sprintf@prec^(0+128),f
  4047  05C8  0826               	movf	(??_sprintf+1)^(0+128),w
  4048  05C9  1C03               	skipc
  4049  05CA  03C3               	decf	(sprintf@prec+1)^(0+128),f
  4050  05CB  02C3               	subwf	(sprintf@prec+1)^(0+128),f
  4051  05CC                     l3551:
  4052                           
  4053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  4054  05CC  0844               	movf	sprintf@c^(0+128),w
  4055  05CD  1903               	btfsc	3,2
  4056  05CE  2DD0               	goto	u5651
  4057  05CF  2DD1               	goto	u5650
  4058  05D0                     u5651:
  4059  05D0  2DDC               	goto	l3557
  4060  05D1                     u5650:
  4061  05D1                     l3553:
  4062                           
  4063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  4064  05D1  302E               	movlw	46
  4065  05D2  00A5               	movwf	??_sprintf^(0+128)
  4066  05D3  0841               	movf	sprintf@sp^(0+128),w
  4067  05D4  0084               	movwf	4
  4068  05D5  0825               	movf	??_sprintf^(0+128),w
  4069  05D6  1383               	bcf	3,7	;select IRP bank0
  4070  05D7  0080               	movwf	0
  4071  05D8                     l3555:
  4072  05D8  3001               	movlw	1
  4073  05D9  00A5               	movwf	??_sprintf^(0+128)
  4074  05DA  0825               	movf	??_sprintf^(0+128),w
  4075  05DB  07C1               	addwf	sprintf@sp^(0+128),f
  4076  05DC                     l3557:
  4077                           
  4078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  4079  05DC  0844               	movf	sprintf@c^(0+128),w
  4080  05DD  120A  158A  2140  120A  118A  	fcall	_scale
  4081  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  4082  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  4083  05E4  0841               	movf	?_scale+3,w
  4084  05E5  1683               	bsf	3,5	;RP0=1, select bank1
  4085  05E6  1303               	bcf	3,6	;RP1=0, select bank1
  4086  05E7  00AD               	movwf	(_sprintf$1109+3)^(0+128)
  4087  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  4088  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  4089  05EA  0840               	movf	?_scale+2,w
  4090  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  4091  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  4092  05ED  00AC               	movwf	(_sprintf$1109+2)^(0+128)
  4093  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  4094  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  4095  05F0  083F               	movf	?_scale+1,w
  4096  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  4097  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  4098  05F3  00AB               	movwf	(_sprintf$1109+1)^(0+128)
  4099  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  4100  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  4101  05F6  083E               	movf	?_scale,w
  4102  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  4103  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  4104  05F9  00AA               	movwf	_sprintf$1109^(0+128)
  4105  05FA                     l3559:
  4106                           
  4107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  4108  05FA  082D               	movf	(_sprintf$1109+3)^(0+128),w
  4109  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  4110  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  4111  05FD  00AB               	movwf	___flmul@a+3
  4112  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  4113  05FF  1303               	bcf	3,6	;RP1=0, select bank1
  4114  0600  082C               	movf	(_sprintf$1109+2)^(0+128),w
  4115  0601  1283               	bcf	3,5	;RP0=0, select bank0
  4116  0602  1303               	bcf	3,6	;RP1=0, select bank0
  4117  0603  00AA               	movwf	___flmul@a+2
  4118  0604  1683               	bsf	3,5	;RP0=1, select bank1
  4119  0605  1303               	bcf	3,6	;RP1=0, select bank1
  4120  0606  082B               	movf	(_sprintf$1109+1)^(0+128),w
  4121  0607  1283               	bcf	3,5	;RP0=0, select bank0
  4122  0608  1303               	bcf	3,6	;RP1=0, select bank0
  4123  0609  00A9               	movwf	___flmul@a+1
  4124  060A  1683               	bsf	3,5	;RP0=1, select bank1
  4125  060B  1303               	bcf	3,6	;RP1=0, select bank1
  4126  060C  082A               	movf	_sprintf$1109^(0+128),w
  4127  060D  1283               	bcf	3,5	;RP0=0, select bank0
  4128  060E  1303               	bcf	3,6	;RP1=0, select bank0
  4129  060F  00A8               	movwf	___flmul@a
  4130  0610  1683               	bsf	3,5	;RP0=1, select bank1
  4131  0611  1303               	bcf	3,6	;RP1=0, select bank1
  4132  0612  0840               	movf	(sprintf@fval+3)^(0+128),w
  4133  0613  1283               	bcf	3,5	;RP0=0, select bank0
  4134  0614  1303               	bcf	3,6	;RP1=0, select bank0
  4135  0615  00A7               	movwf	___flmul@b+3
  4136  0616  1683               	bsf	3,5	;RP0=1, select bank1
  4137  0617  1303               	bcf	3,6	;RP1=0, select bank1
  4138  0618  083F               	movf	(sprintf@fval+2)^(0+128),w
  4139  0619  1283               	bcf	3,5	;RP0=0, select bank0
  4140  061A  1303               	bcf	3,6	;RP1=0, select bank0
  4141  061B  00A6               	movwf	___flmul@b+2
  4142  061C  1683               	bsf	3,5	;RP0=1, select bank1
  4143  061D  1303               	bcf	3,6	;RP1=0, select bank1
  4144  061E  083E               	movf	(sprintf@fval+1)^(0+128),w
  4145  061F  1283               	bcf	3,5	;RP0=0, select bank0
  4146  0620  1303               	bcf	3,6	;RP1=0, select bank0
  4147  0621  00A5               	movwf	___flmul@b+1
  4148  0622  1683               	bsf	3,5	;RP0=1, select bank1
  4149  0623  1303               	bcf	3,6	;RP1=0, select bank1
  4150  0624  083D               	movf	sprintf@fval^(0+128),w
  4151  0625  1283               	bcf	3,5	;RP0=0, select bank0
  4152  0626  1303               	bcf	3,6	;RP1=0, select bank0
  4153  0627  00A4               	movwf	___flmul@b
  4154  0628  120A  158A  249F  120A  118A  	fcall	___flmul
  4155  062D  1283               	bcf	3,5	;RP0=0, select bank0
  4156  062E  1303               	bcf	3,6	;RP1=0, select bank0
  4157  062F  0827               	movf	?___flmul+3,w
  4158  0630  00D4               	movwf	___fltol@f1+3
  4159  0631  0826               	movf	?___flmul+2,w
  4160  0632  00D3               	movwf	___fltol@f1+2
  4161  0633  0825               	movf	?___flmul+1,w
  4162  0634  00D2               	movwf	___fltol@f1+1
  4163  0635  0824               	movf	?___flmul,w
  4164  0636  00D1               	movwf	___fltol@f1
  4165  0637  120A  158A  2006  120A  118A  	fcall	___fltol
  4166  063C  1283               	bcf	3,5	;RP0=0, select bank0
  4167  063D  1303               	bcf	3,6	;RP1=0, select bank0
  4168  063E  0854               	movf	?___fltol+3,w
  4169  063F  1683               	bsf	3,5	;RP0=1, select bank1
  4170  0640  1303               	bcf	3,6	;RP1=0, select bank1
  4171  0641  00B2               	movwf	(sprintf@val+3)^(0+128)
  4172  0642  1283               	bcf	3,5	;RP0=0, select bank0
  4173  0643  1303               	bcf	3,6	;RP1=0, select bank0
  4174  0644  0853               	movf	?___fltol+2,w
  4175  0645  1683               	bsf	3,5	;RP0=1, select bank1
  4176  0646  1303               	bcf	3,6	;RP1=0, select bank1
  4177  0647  00B1               	movwf	(sprintf@val+2)^(0+128)
  4178  0648  1283               	bcf	3,5	;RP0=0, select bank0
  4179  0649  1303               	bcf	3,6	;RP1=0, select bank0
  4180  064A  0852               	movf	?___fltol+1,w
  4181  064B  1683               	bsf	3,5	;RP0=1, select bank1
  4182  064C  1303               	bcf	3,6	;RP1=0, select bank1
  4183  064D  00B0               	movwf	(sprintf@val+1)^(0+128)
  4184  064E  1283               	bcf	3,5	;RP0=0, select bank0
  4185  064F  1303               	bcf	3,6	;RP1=0, select bank0
  4186  0650  0851               	movf	?___fltol,w
  4187  0651  1683               	bsf	3,5	;RP0=1, select bank1
  4188  0652  1303               	bcf	3,6	;RP1=0, select bank1
  4189  0653  00AF               	movwf	sprintf@val^(0+128)
  4190                           
  4191                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4192  0654  2EF6               	goto	l3569
  4193  0655                     l3561:
  4194                           
  4195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  4196  0655  0844               	movf	sprintf@c^(0+128),w
  4197  0656  00A5               	movwf	??_sprintf^(0+128)
  4198  0657  3001               	movlw	1
  4199  0658                     u5665:
  4200  0658  1003               	clrc
  4201  0659  0DA5               	rlf	??_sprintf^(0+128),f
  4202  065A  3EFF               	addlw	-1
  4203  065B  1D03               	skipz
  4204  065C  2E58               	goto	u5665
  4205  065D  1003               	clrc
  4206  065E  0D25               	rlf	??_sprintf^(0+128),w
  4207  065F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4208  0660  0084               	movwf	4
  4209  0661  160A  158A  200A  120A  118A  	fcall	stringdir
  4210  0666  00F0               	movwf	___lldiv@divisor
  4211  0667  160A  158A  200A  120A  118A  	fcall	stringdir
  4212  066C  00F1               	movwf	___lldiv@divisor+1
  4213  066D  160A  158A  200A  120A  118A  	fcall	stringdir
  4214  0672  00F2               	movwf	___lldiv@divisor+2
  4215  0673  160A  158A  200A  120A  118A  	fcall	stringdir
  4216  0678  00F3               	movwf	___lldiv@divisor+3
  4217  0679  0832               	movf	(sprintf@val+3)^(0+128),w
  4218  067A  00F7               	movwf	___lldiv@dividend+3
  4219  067B  0831               	movf	(sprintf@val+2)^(0+128),w
  4220  067C  00F6               	movwf	___lldiv@dividend+2
  4221  067D  0830               	movf	(sprintf@val+1)^(0+128),w
  4222  067E  00F5               	movwf	___lldiv@dividend+1
  4223  067F  082F               	movf	sprintf@val^(0+128),w
  4224  0680  00F4               	movwf	___lldiv@dividend
  4225  0681  160A  158A  2558  120A  118A  	fcall	___lldiv
  4226  0686  0873               	movf	?___lldiv+3,w
  4227  0687  1683               	bsf	3,5	;RP0=1, select bank1
  4228  0688  1303               	bcf	3,6	;RP1=0, select bank1
  4229  0689  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4230  068A  0872               	movf	?___lldiv+2,w
  4231  068B  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4232  068C  0871               	movf	?___lldiv+1,w
  4233  068D  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4234  068E  0870               	movf	?___lldiv,w
  4235  068F  00B7               	movwf	sprintf@tmpval^(0+128)
  4236  0690                     l3563:
  4237                           
  4238                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  4239  0690  3000               	movlw	0
  4240  0691  00F3               	movwf	___llmod@divisor+3
  4241  0692  3000               	movlw	0
  4242  0693  00F2               	movwf	___llmod@divisor+2
  4243  0694  3000               	movlw	0
  4244  0695  00F1               	movwf	___llmod@divisor+1
  4245  0696  300A               	movlw	10
  4246  0697  00F0               	movwf	___llmod@divisor
  4247  0698  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  4248  0699  00F7               	movwf	___llmod@dividend+3
  4249  069A  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  4250  069B  00F6               	movwf	___llmod@dividend+2
  4251  069C  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  4252  069D  00F5               	movwf	___llmod@dividend+1
  4253  069E  0837               	movf	sprintf@tmpval^(0+128),w
  4254  069F  00F4               	movwf	___llmod@dividend
  4255  06A0  160A  158A  2393  120A  118A  	fcall	___llmod
  4256  06A5  0873               	movf	?___llmod+3,w
  4257  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  4258  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  4259  06A8  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4260  06A9  0872               	movf	?___llmod+2,w
  4261  06AA  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4262  06AB  0871               	movf	?___llmod+1,w
  4263  06AC  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4264  06AD  0870               	movf	?___llmod,w
  4265  06AE  00B7               	movwf	sprintf@tmpval^(0+128)
  4266  06AF                     l3565:
  4267                           
  4268                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  4269  06AF  0837               	movf	sprintf@tmpval^(0+128),w
  4270  06B0  3E30               	addlw	48
  4271  06B1  00A5               	movwf	??_sprintf^(0+128)
  4272  06B2  0841               	movf	sprintf@sp^(0+128),w
  4273  06B3  0084               	movwf	4
  4274  06B4  0825               	movf	??_sprintf^(0+128),w
  4275  06B5  1383               	bcf	3,7	;select IRP bank0
  4276  06B6  0080               	movwf	0
  4277  06B7  3001               	movlw	1
  4278  06B8  00A5               	movwf	??_sprintf^(0+128)
  4279  06B9  0825               	movf	??_sprintf^(0+128),w
  4280  06BA  07C1               	addwf	sprintf@sp^(0+128),f
  4281  06BB                     l3567:
  4282                           
  4283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  4284  06BB  0844               	movf	sprintf@c^(0+128),w
  4285  06BC  00A5               	movwf	??_sprintf^(0+128)
  4286  06BD  3001               	movlw	1
  4287  06BE                     u5675:
  4288  06BE  1003               	clrc
  4289  06BF  0DA5               	rlf	??_sprintf^(0+128),f
  4290  06C0  3EFF               	addlw	-1
  4291  06C1  1D03               	skipz
  4292  06C2  2EBE               	goto	u5675
  4293  06C3  1003               	clrc
  4294  06C4  0D25               	rlf	??_sprintf^(0+128),w
  4295  06C5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4296  06C6  0084               	movwf	4
  4297  06C7  160A  158A  200A  120A  118A  	fcall	stringdir
  4298  06CC  00F0               	movwf	___llmod@divisor
  4299  06CD  160A  158A  200A  120A  118A  	fcall	stringdir
  4300  06D2  00F1               	movwf	___llmod@divisor+1
  4301  06D3  160A  158A  200A  120A  118A  	fcall	stringdir
  4302  06D8  00F2               	movwf	___llmod@divisor+2
  4303  06D9  160A  158A  200A  120A  118A  	fcall	stringdir
  4304  06DE  00F3               	movwf	___llmod@divisor+3
  4305  06DF  0832               	movf	(sprintf@val+3)^(0+128),w
  4306  06E0  00F7               	movwf	___llmod@dividend+3
  4307  06E1  0831               	movf	(sprintf@val+2)^(0+128),w
  4308  06E2  00F6               	movwf	___llmod@dividend+2
  4309  06E3  0830               	movf	(sprintf@val+1)^(0+128),w
  4310  06E4  00F5               	movwf	___llmod@dividend+1
  4311  06E5  082F               	movf	sprintf@val^(0+128),w
  4312  06E6  00F4               	movwf	___llmod@dividend
  4313  06E7  160A  158A  2393  120A  118A  	fcall	___llmod
  4314  06EC  0873               	movf	?___llmod+3,w
  4315  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  4316  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  4317  06EF  00B2               	movwf	(sprintf@val+3)^(0+128)
  4318  06F0  0872               	movf	?___llmod+2,w
  4319  06F1  00B1               	movwf	(sprintf@val+2)^(0+128)
  4320  06F2  0871               	movf	?___llmod+1,w
  4321  06F3  00B0               	movwf	(sprintf@val+1)^(0+128)
  4322  06F4  0870               	movf	?___llmod,w
  4323  06F5  00AF               	movwf	sprintf@val^(0+128)
  4324  06F6                     l3569:
  4325                           
  4326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4327  06F6  3001               	movlw	1
  4328  06F7  02C4               	subwf	sprintf@c^(0+128),f
  4329  06F8  0A44               	incf	sprintf@c^(0+128),w
  4330  06F9  1D03               	btfss	3,2
  4331  06FA  2EFC               	goto	u5681
  4332  06FB  2EFD               	goto	u5680
  4333  06FC                     u5681:
  4334  06FC  2E55               	goto	l3561
  4335  06FD                     u5680:
  4336  06FD  2F0F               	goto	l3577
  4337  06FE                     l3571:
  4338                           
  4339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  4340  06FE  3030               	movlw	48
  4341  06FF  00A5               	movwf	??_sprintf^(0+128)
  4342  0700  0841               	movf	sprintf@sp^(0+128),w
  4343  0701  0084               	movwf	4
  4344  0702  0825               	movf	??_sprintf^(0+128),w
  4345  0703  1383               	bcf	3,7	;select IRP bank0
  4346  0704  0080               	movwf	0
  4347  0705                     l3573:
  4348  0705  3001               	movlw	1
  4349  0706  00A5               	movwf	??_sprintf^(0+128)
  4350  0707  0825               	movf	??_sprintf^(0+128),w
  4351  0708  07C1               	addwf	sprintf@sp^(0+128),f
  4352  0709                     l3575:
  4353                           
  4354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  4355  0709  30FF               	movlw	255
  4356  070A  07C2               	addwf	sprintf@prec^(0+128),f
  4357  070B  1803               	skipnc
  4358  070C  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  4359  070D  30FF               	movlw	255
  4360  070E  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  4361  070F                     l3577:
  4362                           
  4363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  4364  070F  0842               	movf	sprintf@prec^(0+128),w
  4365  0710  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  4366  0711  1D03               	btfss	3,2
  4367  0712  2F14               	goto	u5691
  4368  0713  2F15               	goto	u5690
  4369  0714                     u5691:
  4370  0714  2EFE               	goto	l3571
  4371  0715                     u5690:
  4372  0715  2FD9               	goto	l3625
  4373  0716                     l3579:
  4374                           
  4375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  4376  0716  0842               	movf	sprintf@prec^(0+128),w
  4377  0717  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  4378  0718  1D03               	btfss	3,2
  4379  0719  2F1B               	goto	u5701
  4380  071A  2F1C               	goto	u5700
  4381  071B                     u5701:
  4382  071B  2F2A               	goto	l389
  4383  071C                     u5700:
  4384  071C                     l3581:
  4385  071C  0832               	movf	(sprintf@val+3)^(0+128),w
  4386  071D  0431               	iorwf	(sprintf@val+2)^(0+128),w
  4387  071E  0430               	iorwf	(sprintf@val+1)^(0+128),w
  4388  071F  042F               	iorwf	sprintf@val^(0+128),w
  4389  0720  1D03               	skipz
  4390  0721  2F23               	goto	u5711
  4391  0722  2F24               	goto	u5710
  4392  0723                     u5711:
  4393  0723  2F2A               	goto	l389
  4394  0724                     u5710:
  4395  0724                     l3583:
  4396                           
  4397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4398  0724  3001               	movlw	1
  4399  0725  07C2               	addwf	sprintf@prec^(0+128),f
  4400  0726  1803               	skipnc
  4401  0727  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  4402  0728  3000               	movlw	0
  4403  0729  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  4404  072A                     l389:
  4405                           
  4406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4407  072A  0843               	movf	(sprintf@prec+1)^(0+128),w
  4408  072B  3A80               	xorlw	128
  4409  072C  3C80               	sublw	128
  4410  072D  1D03               	skipz
  4411  072E  2F31               	goto	u5725
  4412  072F  0842               	movf	sprintf@prec^(0+128),w
  4413  0730  0244               	subwf	sprintf@c^(0+128),w
  4414  0731                     u5725:
  4415  0731  1803               	skipnc
  4416  0732  2F34               	goto	u5721
  4417  0733  2F35               	goto	u5720
  4418  0734                     u5721:
  4419  0734  2F3C               	goto	l3587
  4420  0735                     u5720:
  4421  0735                     l3585:
  4422                           
  4423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  4424  0735  1683               	bsf	3,5	;RP0=1, select bank1
  4425  0736  1303               	bcf	3,6	;RP1=0, select bank1
  4426  0737  0842               	movf	sprintf@prec^(0+128),w
  4427  0738  00A5               	movwf	??_sprintf^(0+128)
  4428  0739  0825               	movf	??_sprintf^(0+128),w
  4429  073A  00C4               	movwf	sprintf@c^(0+128)
  4430  073B  2F54               	goto	l3591
  4431  073C                     l3587:
  4432  073C  1683               	bsf	3,5	;RP0=1, select bank1
  4433  073D  1303               	bcf	3,6	;RP1=0, select bank1
  4434  073E  0843               	movf	(sprintf@prec+1)^(0+128),w
  4435  073F  3A80               	xorlw	128
  4436  0740  00A5               	movwf	??_sprintf^(0+128)
  4437  0741  3080               	movlw	128
  4438  0742  0225               	subwf	??_sprintf^(0+128),w
  4439  0743  1D03               	skipz
  4440  0744  2F47               	goto	u5735
  4441  0745  0844               	movf	sprintf@c^(0+128),w
  4442  0746  0242               	subwf	sprintf@prec^(0+128),w
  4443  0747                     u5735:
  4444  0747  1803               	skipnc
  4445  0748  2F4A               	goto	u5731
  4446  0749  2F4B               	goto	u5730
  4447  074A                     u5731:
  4448  074A  2F54               	goto	l3591
  4449  074B                     u5730:
  4450  074B                     l3589:
  4451                           
  4452                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  4453  074B  1683               	bsf	3,5	;RP0=1, select bank1
  4454  074C  1303               	bcf	3,6	;RP1=0, select bank1
  4455  074D  0844               	movf	sprintf@c^(0+128),w
  4456  074E  00A5               	movwf	??_sprintf^(0+128)
  4457  074F  01A6               	clrf	(??_sprintf^(0+128)+1)
  4458  0750  0825               	movf	??_sprintf^(0+128),w
  4459  0751  00C2               	movwf	sprintf@prec^(0+128)
  4460  0752  0826               	movf	(??_sprintf+1)^(0+128),w
  4461  0753  00C3               	movwf	(sprintf@prec+1)^(0+128)
  4462  0754                     l3591:
  4463                           
  4464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  4465  0754  1683               	bsf	3,5	;RP0=1, select bank1
  4466  0755  1303               	bcf	3,6	;RP1=0, select bank1
  4467  0756  0835               	movf	sprintf@width^(0+128),w
  4468  0757  0436               	iorwf	(sprintf@width+1)^(0+128),w
  4469  0758  1903               	btfsc	3,2
  4470  0759  2F5B               	goto	u5741
  4471  075A  2F5C               	goto	u5740
  4472  075B                     u5741:
  4473  075B  2F6E               	goto	l3597
  4474  075C                     u5740:
  4475  075C                     l3593:
  4476  075C  3003               	movlw	3
  4477  075D  0533               	andwf	sprintf@flag^(0+128),w
  4478  075E  00A5               	movwf	??_sprintf^(0+128)
  4479  075F  3000               	movlw	0
  4480  0760  0534               	andwf	(sprintf@flag+1)^(0+128),w
  4481  0761  00A6               	movwf	(??_sprintf+1)^(0+128)
  4482  0762  0825               	movf	??_sprintf^(0+128),w
  4483  0763  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4484  0764  1903               	btfsc	3,2
  4485  0765  2F67               	goto	u5751
  4486  0766  2F68               	goto	u5750
  4487  0767                     u5751:
  4488  0767  2F6E               	goto	l3597
  4489  0768                     u5750:
  4490  0768                     l3595:
  4491                           
  4492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  4493  0768  30FF               	movlw	255
  4494  0769  07B5               	addwf	sprintf@width^(0+128),f
  4495  076A  1803               	skipnc
  4496  076B  0AB6               	incf	(sprintf@width+1)^(0+128),f
  4497  076C  30FF               	movlw	255
  4498  076D  07B6               	addwf	(sprintf@width+1)^(0+128),f
  4499  076E                     l3597:
  4500                           
  4501                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  4502  076E  1F34               	btfss	(sprintf@flag+1)^(0+128),6
  4503  076F  2F71               	goto	u5761
  4504  0770  2F72               	goto	u5760
  4505  0771                     u5761:
  4506  0771  2F8D               	goto	l3605
  4507  0772                     u5760:
  4508  0772                     l3599:
  4509                           
  4510                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  4511  0772  0843               	movf	(sprintf@prec+1)^(0+128),w
  4512  0773  3A80               	xorlw	128
  4513  0774  00A5               	movwf	??_sprintf^(0+128)
  4514  0775  0836               	movf	(sprintf@width+1)^(0+128),w
  4515  0776  3A80               	xorlw	128
  4516  0777  0225               	subwf	??_sprintf^(0+128),w
  4517  0778  1D03               	skipz
  4518  0779  2F7C               	goto	u5775
  4519  077A  0835               	movf	sprintf@width^(0+128),w
  4520  077B  0242               	subwf	sprintf@prec^(0+128),w
  4521  077C                     u5775:
  4522  077C  1803               	skipnc
  4523  077D  2F7F               	goto	u5771
  4524  077E  2F80               	goto	u5770
  4525  077F                     u5771:
  4526  077F  2F89               	goto	l3603
  4527  0780                     u5770:
  4528  0780                     l3601:
  4529                           
  4530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  4531  0780  1683               	bsf	3,5	;RP0=1, select bank1
  4532  0781  1303               	bcf	3,6	;RP1=0, select bank1
  4533  0782  0842               	movf	sprintf@prec^(0+128),w
  4534  0783  02B5               	subwf	sprintf@width^(0+128),f
  4535  0784  0843               	movf	(sprintf@prec+1)^(0+128),w
  4536  0785  1C03               	skipc
  4537  0786  03B6               	decf	(sprintf@width+1)^(0+128),f
  4538  0787  02B6               	subwf	(sprintf@width+1)^(0+128),f
  4539  0788  2F8D               	goto	l3605
  4540  0789                     l3603:
  4541                           
  4542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  4543  0789  1683               	bsf	3,5	;RP0=1, select bank1
  4544  078A  1303               	bcf	3,6	;RP1=0, select bank1
  4545  078B  01B5               	clrf	sprintf@width^(0+128)
  4546  078C  01B6               	clrf	(sprintf@width+1)^(0+128)
  4547  078D                     l3605:
  4548                           
  4549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  4550  078D  0836               	movf	(sprintf@width+1)^(0+128),w
  4551  078E  3A80               	xorlw	128
  4552  078F  3C80               	sublw	128
  4553  0790  1D03               	skipz
  4554  0791  2F94               	goto	u5785
  4555  0792  0835               	movf	sprintf@width^(0+128),w
  4556  0793  0244               	subwf	sprintf@c^(0+128),w
  4557  0794                     u5785:
  4558  0794  1803               	skipnc
  4559  0795  2F97               	goto	u5781
  4560  0796  2F98               	goto	u5780
  4561  0797                     u5781:
  4562  0797  2FA4               	goto	l3609
  4563  0798                     u5780:
  4564  0798                     l3607:
  4565                           
  4566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  4567  0798  1683               	bsf	3,5	;RP0=1, select bank1
  4568  0799  1303               	bcf	3,6	;RP1=0, select bank1
  4569  079A  0844               	movf	sprintf@c^(0+128),w
  4570  079B  00A5               	movwf	??_sprintf^(0+128)
  4571  079C  01A6               	clrf	(??_sprintf^(0+128)+1)
  4572  079D  0825               	movf	??_sprintf^(0+128),w
  4573  079E  02B5               	subwf	sprintf@width^(0+128),f
  4574  079F  0826               	movf	(??_sprintf+1)^(0+128),w
  4575  07A0  1C03               	skipc
  4576  07A1  03B6               	decf	(sprintf@width+1)^(0+128),f
  4577  07A2  02B6               	subwf	(sprintf@width+1)^(0+128),f
  4578  07A3  2FA8               	goto	l3611
  4579  07A4                     l3609:
  4580                           
  4581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  4582  07A4  1683               	bsf	3,5	;RP0=1, select bank1
  4583  07A5  1303               	bcf	3,6	;RP1=0, select bank1
  4584  07A6  01B5               	clrf	sprintf@width^(0+128)
  4585  07A7  01B6               	clrf	(sprintf@width+1)^(0+128)
  4586  07A8                     l3611:
  4587                           
  4588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  4589  07A8  0835               	movf	sprintf@width^(0+128),w
  4590  07A9  0436               	iorwf	(sprintf@width+1)^(0+128),w
  4591  07AA  1903               	btfsc	3,2
  4592  07AB  2FAD               	goto	u5791
  4593  07AC  2FAE               	goto	u5790
  4594  07AD                     u5791:
  4595  07AD  2FC5               	goto	l3619
  4596  07AE                     u5790:
  4597  07AE                     l3613:
  4598                           
  4599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  4600  07AE  3020               	movlw	32
  4601  07AF  00A5               	movwf	??_sprintf^(0+128)
  4602  07B0  0841               	movf	sprintf@sp^(0+128),w
  4603  07B1  0084               	movwf	4
  4604  07B2  0825               	movf	??_sprintf^(0+128),w
  4605  07B3  1383               	bcf	3,7	;select IRP bank0
  4606  07B4  0080               	movwf	0
  4607  07B5                     l3615:
  4608  07B5  3001               	movlw	1
  4609  07B6  00A5               	movwf	??_sprintf^(0+128)
  4610  07B7  0825               	movf	??_sprintf^(0+128),w
  4611  07B8  07C1               	addwf	sprintf@sp^(0+128),f
  4612  07B9                     l3617:
  4613  07B9  30FF               	movlw	255
  4614  07BA  07B5               	addwf	sprintf@width^(0+128),f
  4615  07BB  1803               	skipnc
  4616  07BC  0AB6               	incf	(sprintf@width+1)^(0+128),f
  4617  07BD  30FF               	movlw	255
  4618  07BE  07B6               	addwf	(sprintf@width+1)^(0+128),f
  4619  07BF  0835               	movf	sprintf@width^(0+128),w
  4620  07C0  0436               	iorwf	(sprintf@width+1)^(0+128),w
  4621  07C1  1D03               	btfss	3,2
  4622  07C2  2FC4               	goto	u5801
  4623  07C3  2FC5               	goto	u5800
  4624  07C4                     u5801:
  4625  07C4  2FAE               	goto	l3613
  4626  07C5                     u5800:
  4627  07C5                     l3619:
  4628                           
  4629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  4630  07C5  3003               	movlw	3
  4631  07C6  0533               	andwf	sprintf@flag^(0+128),w
  4632  07C7  00A5               	movwf	??_sprintf^(0+128)
  4633  07C8  3000               	movlw	0
  4634  07C9  0534               	andwf	(sprintf@flag+1)^(0+128),w
  4635  07CA  00A6               	movwf	(??_sprintf+1)^(0+128)
  4636  07CB  0825               	movf	??_sprintf^(0+128),w
  4637  07CC  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4638  07CD  1903               	btfsc	3,2
  4639  07CE  2FD0               	goto	u5811
  4640  07CF  2FD1               	goto	u5810
  4641  07D0                     u5811:
  4642  07D0  2FD9               	goto	l3625
  4643  07D1                     u5810:
  4644  07D1                     l3621:
  4645                           
  4646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4647  07D1  302D               	movlw	45
  4648  07D2  00A5               	movwf	??_sprintf^(0+128)
  4649  07D3  0841               	movf	sprintf@sp^(0+128),w
  4650  07D4  0084               	movwf	4
  4651  07D5  0825               	movf	??_sprintf^(0+128),w
  4652  07D6  1383               	bcf	3,7	;select IRP bank0
  4653  07D7  0080               	movwf	0
  4654  07D8  288A               	goto	l3381
  4655  07D9                     l3625:
  4656                           
  4657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4658  07D9  3001               	movlw	1
  4659  07DA  07A0               	addwf	sprintf@f^(0+128),f
  4660  07DB  30FF               	movlw	-1
  4661  07DC  0720               	addwf	sprintf@f^(0+128),w
  4662  07DD  0084               	movwf	4
  4663  07DE  160A  158A  200A  120A  118A  	fcall	stringdir
  4664  07E3  00A5               	movwf	??_sprintf^(0+128)
  4665  07E4  0825               	movf	??_sprintf^(0+128),w
  4666  07E5  00C4               	movwf	sprintf@c^(0+128)
  4667  07E6  0844               	movf	sprintf@c^(0+128),w
  4668  07E7  1D03               	btfss	3,2
  4669  07E8  2FEA               	goto	u5821
  4670  07E9  2FEB               	goto	u5820
  4671  07EA                     u5821:
  4672  07EA  287D               	goto	l3377
  4673  07EB                     u5820:
  4674  07EB                     l3627:
  4675                           
  4676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4677  07EB  0841               	movf	sprintf@sp^(0+128),w
  4678  07EC  0084               	movwf	4
  4679  07ED  1383               	bcf	3,7	;select IRP bank0
  4680  07EE  0180               	clrf	0
  4681  07EF                     l404:
  4682  07EF  0008               	return
  4683  07F0                     __end_of_sprintf:
  4684                           
  4685                           	psect	text9
  4686  0940                     __ptext9:	
  4687 ;; *************** function _scale *****************
  4688 ;; Defined at:
  4689 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  scl             1    wreg     char 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  scl             1   48[BANK0 ] char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  4   30[BANK0 ] char 
  4696 ;; Registers used:
  4697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4703 ;;      Params:         0       4       0       0       0
  4704 ;;      Locals:         0       5       0       0       0
  4705 ;;      Temps:          0      10       0       0       0
  4706 ;;      Totals:         0      19       0       0       0
  4707 ;;Total ram usage:       19 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:    2
  4710 ;; This function calls:
  4711 ;;		___awdiv
  4712 ;;		___awmod
  4713 ;;		___flmul
  4714 ;; This function is called by:
  4715 ;;		_sprintf
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           
  4720                           ;psect for function _scale
  4721  0940                     _scale:
  4722                           
  4723                           ;incstack = 0
  4724                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4725                           ;scale@scl stored from wreg
  4726  0940  1283               	bcf	3,5	;RP0=0, select bank0
  4727  0941  1303               	bcf	3,6	;RP1=0, select bank0
  4728  0942  00D0               	movwf	scale@scl
  4729  0943                     l2997:
  4730                           
  4731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4732  0943  1FD0               	btfss	scale@scl,7
  4733  0944  2946               	goto	u4341
  4734  0945  2947               	goto	u4340
  4735  0946                     u4341:
  4736  0946  2AF4               	goto	l3019
  4737  0947                     u4340:
  4738  0947                     l2999:
  4739                           
  4740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4741  0947  09D0               	comf	scale@scl,f
  4742  0948  0AD0               	incf	scale@scl,f
  4743  0949                     l3001:
  4744                           
  4745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4746  0949  0850               	movf	scale@scl,w
  4747  094A  3A80               	xorlw	128
  4748  094B  3E12               	addlw	-238
  4749  094C  1C03               	skipc
  4750  094D  294F               	goto	u4351
  4751  094E  2950               	goto	u4350
  4752  094F                     u4351:
  4753  094F  2A38               	goto	l3009
  4754  0950                     u4350:
  4755  0950                     l3003:
  4756                           
  4757                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4758  0950  300A               	movlw	10
  4759  0951  00F7               	movwf	___awdiv@divisor
  4760  0952  3000               	movlw	0
  4761  0953  00F8               	movwf	___awdiv@divisor+1
  4762  0954  0850               	movf	scale@scl,w
  4763  0955  00F2               	movwf	___awmod@dividend
  4764  0956  01F3               	clrf	___awmod@dividend+1
  4765  0957  1BF2               	btfsc	___awmod@dividend,7
  4766  0958  03F3               	decf	___awmod@dividend+1,f
  4767  0959  3064               	movlw	100
  4768  095A  00F0               	movwf	___awmod@divisor
  4769  095B  3000               	movlw	0
  4770  095C  00F1               	movwf	___awmod@divisor+1
  4771  095D  160A  158A  23E7  120A  158A  	fcall	___awmod
  4772  0962  0871               	movf	?___awmod+1,w
  4773  0963  00FA               	movwf	___awdiv@dividend+1
  4774  0964  0870               	movf	?___awmod,w
  4775  0965  00F9               	movwf	___awdiv@dividend
  4776  0966  120A  118A  200C  120A  158A  	fcall	___awdiv
  4777  096B  0877               	movf	?___awdiv,w
  4778  096C  1283               	bcf	3,5	;RP0=0, select bank0
  4779  096D  1303               	bcf	3,6	;RP1=0, select bank0
  4780  096E  00C2               	movwf	??_scale
  4781  096F  3001               	movlw	1
  4782  0970                     u4365:
  4783  0970  1003               	clrc
  4784  0971  0DC2               	rlf	??_scale,f
  4785  0972  3EFF               	addlw	-1
  4786  0973  1D03               	skipz
  4787  0974  2970               	goto	u4365
  4788  0975  1003               	clrc
  4789  0976  0D42               	rlf	??_scale,w
  4790  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4791  0978  0084               	movwf	4
  4792  0979  160A  158A  200A  120A  158A  	fcall	stringdir
  4793  097E  00C3               	movwf	??_scale+1
  4794  097F  160A  158A  200A  120A  158A  	fcall	stringdir
  4795  0984  00C4               	movwf	??_scale+2
  4796  0985  160A  158A  200A  120A  158A  	fcall	stringdir
  4797  098A  00C5               	movwf	??_scale+3
  4798  098B  160A  158A  200A  120A  158A  	fcall	stringdir
  4799  0990  00C6               	movwf	??_scale+4
  4800  0991  0846               	movf	??_scale+4,w
  4801  0992  00A7               	movwf	___flmul@b+3
  4802  0993  0845               	movf	??_scale+3,w
  4803  0994  00A6               	movwf	___flmul@b+2
  4804  0995  0844               	movf	??_scale+2,w
  4805  0996  00A5               	movwf	___flmul@b+1
  4806  0997  0843               	movf	??_scale+1,w
  4807  0998  00A4               	movwf	___flmul@b
  4808  0999  3064               	movlw	100
  4809  099A  00F7               	movwf	___awdiv@divisor
  4810  099B  3000               	movlw	0
  4811  099C  00F8               	movwf	___awdiv@divisor+1
  4812  099D  0850               	movf	scale@scl,w
  4813  099E  00F9               	movwf	___awdiv@dividend
  4814  099F  01FA               	clrf	___awdiv@dividend+1
  4815  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4816  09A1  03FA               	decf	___awdiv@dividend+1,f
  4817  09A2  120A  118A  200C  120A  158A  	fcall	___awdiv
  4818  09A7  0877               	movf	?___awdiv,w
  4819  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4820  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4821  09AA  00C7               	movwf	??_scale+5
  4822  09AB  3001               	movlw	1
  4823  09AC                     u4375:
  4824  09AC  1003               	clrc
  4825  09AD  0DC7               	rlf	??_scale+5,f
  4826  09AE  3EFF               	addlw	-1
  4827  09AF  1D03               	skipz
  4828  09B0  29AC               	goto	u4375
  4829  09B1  1003               	clrc
  4830  09B2  0D47               	rlf	??_scale+5,w
  4831  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4832  09B4  0084               	movwf	4
  4833  09B5  160A  158A  200A  120A  158A  	fcall	stringdir
  4834  09BA  00C8               	movwf	??_scale+6
  4835  09BB  160A  158A  200A  120A  158A  	fcall	stringdir
  4836  09C0  00C9               	movwf	??_scale+7
  4837  09C1  160A  158A  200A  120A  158A  	fcall	stringdir
  4838  09C6  00CA               	movwf	??_scale+8
  4839  09C7  160A  158A  200A  120A  158A  	fcall	stringdir
  4840  09CC  00CB               	movwf	??_scale+9
  4841  09CD  084B               	movf	??_scale+9,w
  4842  09CE  00AB               	movwf	___flmul@a+3
  4843  09CF  084A               	movf	??_scale+8,w
  4844  09D0  00AA               	movwf	___flmul@a+2
  4845  09D1  0849               	movf	??_scale+7,w
  4846  09D2  00A9               	movwf	___flmul@a+1
  4847  09D3  0848               	movf	??_scale+6,w
  4848  09D4  00A8               	movwf	___flmul@a
  4849  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4850  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4851  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4852  09DC  0827               	movf	?___flmul+3,w
  4853  09DD  00CF               	movwf	_scale$1108+3
  4854  09DE  0826               	movf	?___flmul+2,w
  4855  09DF  00CE               	movwf	_scale$1108+2
  4856  09E0  0825               	movf	?___flmul+1,w
  4857  09E1  00CD               	movwf	_scale$1108+1
  4858  09E2  0824               	movf	?___flmul,w
  4859  09E3  00CC               	movwf	_scale$1108
  4860                           
  4861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4862  09E4  300A               	movlw	10
  4863  09E5  00F0               	movwf	___awmod@divisor
  4864  09E6  3000               	movlw	0
  4865  09E7  00F1               	movwf	___awmod@divisor+1
  4866  09E8  0850               	movf	scale@scl,w
  4867  09E9  00F2               	movwf	___awmod@dividend
  4868  09EA  01F3               	clrf	___awmod@dividend+1
  4869  09EB  1BF2               	btfsc	___awmod@dividend,7
  4870  09EC  03F3               	decf	___awmod@dividend+1,f
  4871  09ED  160A  158A  23E7  120A  158A  	fcall	___awmod
  4872  09F2  0870               	movf	?___awmod,w
  4873  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4874  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4875  09F5  00C2               	movwf	??_scale
  4876  09F6  3001               	movlw	1
  4877  09F7                     u4385:
  4878  09F7  1003               	clrc
  4879  09F8  0DC2               	rlf	??_scale,f
  4880  09F9  3EFF               	addlw	-1
  4881  09FA  1D03               	skipz
  4882  09FB  29F7               	goto	u4385
  4883  09FC  1003               	clrc
  4884  09FD  0D42               	rlf	??_scale,w
  4885  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4886  09FF  0084               	movwf	4
  4887  0A00  160A  158A  200A  120A  158A  	fcall	stringdir
  4888  0A05  00C3               	movwf	??_scale+1
  4889  0A06  160A  158A  200A  120A  158A  	fcall	stringdir
  4890  0A0B  00C4               	movwf	??_scale+2
  4891  0A0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4892  0A11  00C5               	movwf	??_scale+3
  4893  0A12  160A  158A  200A  120A  158A  	fcall	stringdir
  4894  0A17  00C6               	movwf	??_scale+4
  4895  0A18  0846               	movf	??_scale+4,w
  4896  0A19  00A7               	movwf	___flmul@b+3
  4897  0A1A  0845               	movf	??_scale+3,w
  4898  0A1B  00A6               	movwf	___flmul@b+2
  4899  0A1C  0844               	movf	??_scale+2,w
  4900  0A1D  00A5               	movwf	___flmul@b+1
  4901  0A1E  0843               	movf	??_scale+1,w
  4902  0A1F  00A4               	movwf	___flmul@b
  4903  0A20  084F               	movf	_scale$1108+3,w
  4904  0A21  00AB               	movwf	___flmul@a+3
  4905  0A22  084E               	movf	_scale$1108+2,w
  4906  0A23  00AA               	movwf	___flmul@a+2
  4907  0A24  084D               	movf	_scale$1108+1,w
  4908  0A25  00A9               	movwf	___flmul@a+1
  4909  0A26  084C               	movf	_scale$1108,w
  4910  0A27  00A8               	movwf	___flmul@a
  4911  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4912  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4913  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4914  0A2F  0827               	movf	?___flmul+3,w
  4915  0A30  00C1               	movwf	?_scale+3
  4916  0A31  0826               	movf	?___flmul+2,w
  4917  0A32  00C0               	movwf	?_scale+2
  4918  0A33  0825               	movf	?___flmul+1,w
  4919  0A34  00BF               	movwf	?_scale+1
  4920  0A35  0824               	movf	?___flmul,w
  4921  0A36  00BE               	movwf	?_scale
  4922  0A37  2C9E               	goto	l321
  4923  0A38                     l3009:
  4924  0A38  0850               	movf	scale@scl,w
  4925  0A39  3A80               	xorlw	128
  4926  0A3A  3E75               	addlw	-139
  4927  0A3B  1C03               	skipc
  4928  0A3C  2A3E               	goto	u4391
  4929  0A3D  2A3F               	goto	u4390
  4930  0A3E                     u4391:
  4931  0A3E  2AC7               	goto	l3015
  4932  0A3F                     u4390:
  4933  0A3F                     l3011:
  4934                           
  4935                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4936  0A3F  300A               	movlw	10
  4937  0A40  00F0               	movwf	___awmod@divisor
  4938  0A41  3000               	movlw	0
  4939  0A42  00F1               	movwf	___awmod@divisor+1
  4940  0A43  0850               	movf	scale@scl,w
  4941  0A44  00F2               	movwf	___awmod@dividend
  4942  0A45  01F3               	clrf	___awmod@dividend+1
  4943  0A46  1BF2               	btfsc	___awmod@dividend,7
  4944  0A47  03F3               	decf	___awmod@dividend+1,f
  4945  0A48  160A  158A  23E7  120A  158A  	fcall	___awmod
  4946  0A4D  0870               	movf	?___awmod,w
  4947  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4948  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4949  0A50  00C2               	movwf	??_scale
  4950  0A51  3001               	movlw	1
  4951  0A52                     u4405:
  4952  0A52  1003               	clrc
  4953  0A53  0DC2               	rlf	??_scale,f
  4954  0A54  3EFF               	addlw	-1
  4955  0A55  1D03               	skipz
  4956  0A56  2A52               	goto	u4405
  4957  0A57  1003               	clrc
  4958  0A58  0D42               	rlf	??_scale,w
  4959  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4960  0A5A  0084               	movwf	4
  4961  0A5B  160A  158A  200A  120A  158A  	fcall	stringdir
  4962  0A60  00C3               	movwf	??_scale+1
  4963  0A61  160A  158A  200A  120A  158A  	fcall	stringdir
  4964  0A66  00C4               	movwf	??_scale+2
  4965  0A67  160A  158A  200A  120A  158A  	fcall	stringdir
  4966  0A6C  00C5               	movwf	??_scale+3
  4967  0A6D  160A  158A  200A  120A  158A  	fcall	stringdir
  4968  0A72  00C6               	movwf	??_scale+4
  4969  0A73  0846               	movf	??_scale+4,w
  4970  0A74  00A7               	movwf	___flmul@b+3
  4971  0A75  0845               	movf	??_scale+3,w
  4972  0A76  00A6               	movwf	___flmul@b+2
  4973  0A77  0844               	movf	??_scale+2,w
  4974  0A78  00A5               	movwf	___flmul@b+1
  4975  0A79  0843               	movf	??_scale+1,w
  4976  0A7A  00A4               	movwf	___flmul@b
  4977  0A7B  300A               	movlw	10
  4978  0A7C  00F7               	movwf	___awdiv@divisor
  4979  0A7D  3000               	movlw	0
  4980  0A7E  00F8               	movwf	___awdiv@divisor+1
  4981  0A7F  0850               	movf	scale@scl,w
  4982  0A80  00F9               	movwf	___awdiv@dividend
  4983  0A81  01FA               	clrf	___awdiv@dividend+1
  4984  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4985  0A83  03FA               	decf	___awdiv@dividend+1,f
  4986  0A84  120A  118A  200C  120A  158A  	fcall	___awdiv
  4987  0A89  0877               	movf	?___awdiv,w
  4988  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4989  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4990  0A8C  00C7               	movwf	??_scale+5
  4991  0A8D  3001               	movlw	1
  4992  0A8E                     u4415:
  4993  0A8E  1003               	clrc
  4994  0A8F  0DC7               	rlf	??_scale+5,f
  4995  0A90  3EFF               	addlw	-1
  4996  0A91  1D03               	skipz
  4997  0A92  2A8E               	goto	u4415
  4998  0A93  1003               	clrc
  4999  0A94  0D47               	rlf	??_scale+5,w
  5000  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5001  0A96  0084               	movwf	4
  5002  0A97  160A  158A  200A  120A  158A  	fcall	stringdir
  5003  0A9C  00C8               	movwf	??_scale+6
  5004  0A9D  160A  158A  200A  120A  158A  	fcall	stringdir
  5005  0AA2  00C9               	movwf	??_scale+7
  5006  0AA3  160A  158A  200A  120A  158A  	fcall	stringdir
  5007  0AA8  00CA               	movwf	??_scale+8
  5008  0AA9  160A  158A  200A  120A  158A  	fcall	stringdir
  5009  0AAE  00CB               	movwf	??_scale+9
  5010  0AAF  084B               	movf	??_scale+9,w
  5011  0AB0  00AB               	movwf	___flmul@a+3
  5012  0AB1  084A               	movf	??_scale+8,w
  5013  0AB2  00AA               	movwf	___flmul@a+2
  5014  0AB3  0849               	movf	??_scale+7,w
  5015  0AB4  00A9               	movwf	___flmul@a+1
  5016  0AB5  0848               	movf	??_scale+6,w
  5017  0AB6  00A8               	movwf	___flmul@a
  5018  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  5019  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  5020  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  5021  0ABE  0827               	movf	?___flmul+3,w
  5022  0ABF  00C1               	movwf	?_scale+3
  5023  0AC0  0826               	movf	?___flmul+2,w
  5024  0AC1  00C0               	movwf	?_scale+2
  5025  0AC2  0825               	movf	?___flmul+1,w
  5026  0AC3  00BF               	movwf	?_scale+1
  5027  0AC4  0824               	movf	?___flmul,w
  5028  0AC5  00BE               	movwf	?_scale
  5029  0AC6  2C9E               	goto	l321
  5030  0AC7                     l3015:
  5031                           
  5032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  5033  0AC7  0850               	movf	scale@scl,w
  5034  0AC8  00C2               	movwf	??_scale
  5035  0AC9  3001               	movlw	1
  5036  0ACA                     u4425:
  5037  0ACA  1003               	clrc
  5038  0ACB  0DC2               	rlf	??_scale,f
  5039  0ACC  3EFF               	addlw	-1
  5040  0ACD  1D03               	skipz
  5041  0ACE  2ACA               	goto	u4425
  5042  0ACF  1003               	clrc
  5043  0AD0  0D42               	rlf	??_scale,w
  5044  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5045  0AD2  0084               	movwf	4
  5046  0AD3  160A  158A  200A  120A  158A  	fcall	stringdir
  5047  0AD8  00C3               	movwf	??_scale+1
  5048  0AD9  160A  158A  200A  120A  158A  	fcall	stringdir
  5049  0ADE  00C4               	movwf	??_scale+2
  5050  0ADF  160A  158A  200A  120A  158A  	fcall	stringdir
  5051  0AE4  00C5               	movwf	??_scale+3
  5052  0AE5  160A  158A  200A  120A  158A  	fcall	stringdir
  5053  0AEA  00C6               	movwf	??_scale+4
  5054  0AEB  0846               	movf	??_scale+4,w
  5055  0AEC  00C1               	movwf	?_scale+3
  5056  0AED  0845               	movf	??_scale+3,w
  5057  0AEE  00C0               	movwf	?_scale+2
  5058  0AEF  0844               	movf	??_scale+2,w
  5059  0AF0  00BF               	movwf	?_scale+1
  5060  0AF1  0843               	movf	??_scale+1,w
  5061  0AF2  00BE               	movwf	?_scale
  5062  0AF3  2C9E               	goto	l321
  5063  0AF4                     l3019:
  5064                           
  5065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  5066  0AF4  0850               	movf	scale@scl,w
  5067  0AF5  3A80               	xorlw	128
  5068  0AF6  3E12               	addlw	-238
  5069  0AF7  1C03               	skipc
  5070  0AF8  2AFA               	goto	u4431
  5071  0AF9  2AFB               	goto	u4430
  5072  0AFA                     u4431:
  5073  0AFA  2BE3               	goto	l3027
  5074  0AFB                     u4430:
  5075  0AFB                     l3021:
  5076                           
  5077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  5078  0AFB  300A               	movlw	10
  5079  0AFC  00F7               	movwf	___awdiv@divisor
  5080  0AFD  3000               	movlw	0
  5081  0AFE  00F8               	movwf	___awdiv@divisor+1
  5082  0AFF  0850               	movf	scale@scl,w
  5083  0B00  00F2               	movwf	___awmod@dividend
  5084  0B01  01F3               	clrf	___awmod@dividend+1
  5085  0B02  1BF2               	btfsc	___awmod@dividend,7
  5086  0B03  03F3               	decf	___awmod@dividend+1,f
  5087  0B04  3064               	movlw	100
  5088  0B05  00F0               	movwf	___awmod@divisor
  5089  0B06  3000               	movlw	0
  5090  0B07  00F1               	movwf	___awmod@divisor+1
  5091  0B08  160A  158A  23E7  120A  158A  	fcall	___awmod
  5092  0B0D  0871               	movf	?___awmod+1,w
  5093  0B0E  00FA               	movwf	___awdiv@dividend+1
  5094  0B0F  0870               	movf	?___awmod,w
  5095  0B10  00F9               	movwf	___awdiv@dividend
  5096  0B11  120A  118A  200C  120A  158A  	fcall	___awdiv
  5097  0B16  0877               	movf	?___awdiv,w
  5098  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  5099  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  5100  0B19  00C2               	movwf	??_scale
  5101  0B1A  3001               	movlw	1
  5102  0B1B                     u4445:
  5103  0B1B  1003               	clrc
  5104  0B1C  0DC2               	rlf	??_scale,f
  5105  0B1D  3EFF               	addlw	-1
  5106  0B1E  1D03               	skipz
  5107  0B1F  2B1B               	goto	u4445
  5108  0B20  1003               	clrc
  5109  0B21  0D42               	rlf	??_scale,w
  5110  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5111  0B23  0084               	movwf	4
  5112  0B24  160A  158A  200A  120A  158A  	fcall	stringdir
  5113  0B29  00C3               	movwf	??_scale+1
  5114  0B2A  160A  158A  200A  120A  158A  	fcall	stringdir
  5115  0B2F  00C4               	movwf	??_scale+2
  5116  0B30  160A  158A  200A  120A  158A  	fcall	stringdir
  5117  0B35  00C5               	movwf	??_scale+3
  5118  0B36  160A  158A  200A  120A  158A  	fcall	stringdir
  5119  0B3B  00C6               	movwf	??_scale+4
  5120  0B3C  0846               	movf	??_scale+4,w
  5121  0B3D  00A7               	movwf	___flmul@b+3
  5122  0B3E  0845               	movf	??_scale+3,w
  5123  0B3F  00A6               	movwf	___flmul@b+2
  5124  0B40  0844               	movf	??_scale+2,w
  5125  0B41  00A5               	movwf	___flmul@b+1
  5126  0B42  0843               	movf	??_scale+1,w
  5127  0B43  00A4               	movwf	___flmul@b
  5128  0B44  3064               	movlw	100
  5129  0B45  00F7               	movwf	___awdiv@divisor
  5130  0B46  3000               	movlw	0
  5131  0B47  00F8               	movwf	___awdiv@divisor+1
  5132  0B48  0850               	movf	scale@scl,w
  5133  0B49  00F9               	movwf	___awdiv@dividend
  5134  0B4A  01FA               	clrf	___awdiv@dividend+1
  5135  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  5136  0B4C  03FA               	decf	___awdiv@dividend+1,f
  5137  0B4D  120A  118A  200C  120A  158A  	fcall	___awdiv
  5138  0B52  0877               	movf	?___awdiv,w
  5139  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  5140  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  5141  0B55  00C7               	movwf	??_scale+5
  5142  0B56  3001               	movlw	1
  5143  0B57                     u4455:
  5144  0B57  1003               	clrc
  5145  0B58  0DC7               	rlf	??_scale+5,f
  5146  0B59  3EFF               	addlw	-1
  5147  0B5A  1D03               	skipz
  5148  0B5B  2B57               	goto	u4455
  5149  0B5C  1003               	clrc
  5150  0B5D  0D47               	rlf	??_scale+5,w
  5151  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  5152  0B5F  0084               	movwf	4
  5153  0B60  160A  158A  200A  120A  158A  	fcall	stringdir
  5154  0B65  00C8               	movwf	??_scale+6
  5155  0B66  160A  158A  200A  120A  158A  	fcall	stringdir
  5156  0B6B  00C9               	movwf	??_scale+7
  5157  0B6C  160A  158A  200A  120A  158A  	fcall	stringdir
  5158  0B71  00CA               	movwf	??_scale+8
  5159  0B72  160A  158A  200A  120A  158A  	fcall	stringdir
  5160  0B77  00CB               	movwf	??_scale+9
  5161  0B78  084B               	movf	??_scale+9,w
  5162  0B79  00AB               	movwf	___flmul@a+3
  5163  0B7A  084A               	movf	??_scale+8,w
  5164  0B7B  00AA               	movwf	___flmul@a+2
  5165  0B7C  0849               	movf	??_scale+7,w
  5166  0B7D  00A9               	movwf	___flmul@a+1
  5167  0B7E  0848               	movf	??_scale+6,w
  5168  0B7F  00A8               	movwf	___flmul@a
  5169  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  5170  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  5171  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  5172  0B87  0827               	movf	?___flmul+3,w
  5173  0B88  00CF               	movwf	_scale$1108+3
  5174  0B89  0826               	movf	?___flmul+2,w
  5175  0B8A  00CE               	movwf	_scale$1108+2
  5176  0B8B  0825               	movf	?___flmul+1,w
  5177  0B8C  00CD               	movwf	_scale$1108+1
  5178  0B8D  0824               	movf	?___flmul,w
  5179  0B8E  00CC               	movwf	_scale$1108
  5180                           
  5181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  5182  0B8F  300A               	movlw	10
  5183  0B90  00F0               	movwf	___awmod@divisor
  5184  0B91  3000               	movlw	0
  5185  0B92  00F1               	movwf	___awmod@divisor+1
  5186  0B93  0850               	movf	scale@scl,w
  5187  0B94  00F2               	movwf	___awmod@dividend
  5188  0B95  01F3               	clrf	___awmod@dividend+1
  5189  0B96  1BF2               	btfsc	___awmod@dividend,7
  5190  0B97  03F3               	decf	___awmod@dividend+1,f
  5191  0B98  160A  158A  23E7  120A  158A  	fcall	___awmod
  5192  0B9D  0870               	movf	?___awmod,w
  5193  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  5194  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  5195  0BA0  00C2               	movwf	??_scale
  5196  0BA1  3001               	movlw	1
  5197  0BA2                     u4465:
  5198  0BA2  1003               	clrc
  5199  0BA3  0DC2               	rlf	??_scale,f
  5200  0BA4  3EFF               	addlw	-1
  5201  0BA5  1D03               	skipz
  5202  0BA6  2BA2               	goto	u4465
  5203  0BA7  1003               	clrc
  5204  0BA8  0D42               	rlf	??_scale,w
  5205  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5206  0BAA  0084               	movwf	4
  5207  0BAB  160A  158A  200A  120A  158A  	fcall	stringdir
  5208  0BB0  00C3               	movwf	??_scale+1
  5209  0BB1  160A  158A  200A  120A  158A  	fcall	stringdir
  5210  0BB6  00C4               	movwf	??_scale+2
  5211  0BB7  160A  158A  200A  120A  158A  	fcall	stringdir
  5212  0BBC  00C5               	movwf	??_scale+3
  5213  0BBD  160A  158A  200A  120A  158A  	fcall	stringdir
  5214  0BC2  00C6               	movwf	??_scale+4
  5215  0BC3  0846               	movf	??_scale+4,w
  5216  0BC4  00A7               	movwf	___flmul@b+3
  5217  0BC5  0845               	movf	??_scale+3,w
  5218  0BC6  00A6               	movwf	___flmul@b+2
  5219  0BC7  0844               	movf	??_scale+2,w
  5220  0BC8  00A5               	movwf	___flmul@b+1
  5221  0BC9  0843               	movf	??_scale+1,w
  5222  0BCA  00A4               	movwf	___flmul@b
  5223  0BCB  084F               	movf	_scale$1108+3,w
  5224  0BCC  00AB               	movwf	___flmul@a+3
  5225  0BCD  084E               	movf	_scale$1108+2,w
  5226  0BCE  00AA               	movwf	___flmul@a+2
  5227  0BCF  084D               	movf	_scale$1108+1,w
  5228  0BD0  00A9               	movwf	___flmul@a+1
  5229  0BD1  084C               	movf	_scale$1108,w
  5230  0BD2  00A8               	movwf	___flmul@a
  5231  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  5232  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  5233  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  5234  0BDA  0827               	movf	?___flmul+3,w
  5235  0BDB  00C1               	movwf	?_scale+3
  5236  0BDC  0826               	movf	?___flmul+2,w
  5237  0BDD  00C0               	movwf	?_scale+2
  5238  0BDE  0825               	movf	?___flmul+1,w
  5239  0BDF  00BF               	movwf	?_scale+1
  5240  0BE0  0824               	movf	?___flmul,w
  5241  0BE1  00BE               	movwf	?_scale
  5242  0BE2  2C9E               	goto	l321
  5243  0BE3                     l3027:
  5244  0BE3  0850               	movf	scale@scl,w
  5245  0BE4  3A80               	xorlw	128
  5246  0BE5  3E75               	addlw	-139
  5247  0BE6  1C03               	skipc
  5248  0BE7  2BE9               	goto	u4471
  5249  0BE8  2BEA               	goto	u4470
  5250  0BE9                     u4471:
  5251  0BE9  2C72               	goto	l3033
  5252  0BEA                     u4470:
  5253  0BEA                     l3029:
  5254                           
  5255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  5256  0BEA  300A               	movlw	10
  5257  0BEB  00F0               	movwf	___awmod@divisor
  5258  0BEC  3000               	movlw	0
  5259  0BED  00F1               	movwf	___awmod@divisor+1
  5260  0BEE  0850               	movf	scale@scl,w
  5261  0BEF  00F2               	movwf	___awmod@dividend
  5262  0BF0  01F3               	clrf	___awmod@dividend+1
  5263  0BF1  1BF2               	btfsc	___awmod@dividend,7
  5264  0BF2  03F3               	decf	___awmod@dividend+1,f
  5265  0BF3  160A  158A  23E7  120A  158A  	fcall	___awmod
  5266  0BF8  0870               	movf	?___awmod,w
  5267  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  5268  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  5269  0BFB  00C2               	movwf	??_scale
  5270  0BFC  3001               	movlw	1
  5271  0BFD                     u4485:
  5272  0BFD  1003               	clrc
  5273  0BFE  0DC2               	rlf	??_scale,f
  5274  0BFF  3EFF               	addlw	-1
  5275  0C00  1D03               	skipz
  5276  0C01  2BFD               	goto	u4485
  5277  0C02  1003               	clrc
  5278  0C03  0D42               	rlf	??_scale,w
  5279  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5280  0C05  0084               	movwf	4
  5281  0C06  160A  158A  200A  120A  158A  	fcall	stringdir
  5282  0C0B  00C3               	movwf	??_scale+1
  5283  0C0C  160A  158A  200A  120A  158A  	fcall	stringdir
  5284  0C11  00C4               	movwf	??_scale+2
  5285  0C12  160A  158A  200A  120A  158A  	fcall	stringdir
  5286  0C17  00C5               	movwf	??_scale+3
  5287  0C18  160A  158A  200A  120A  158A  	fcall	stringdir
  5288  0C1D  00C6               	movwf	??_scale+4
  5289  0C1E  0846               	movf	??_scale+4,w
  5290  0C1F  00A7               	movwf	___flmul@b+3
  5291  0C20  0845               	movf	??_scale+3,w
  5292  0C21  00A6               	movwf	___flmul@b+2
  5293  0C22  0844               	movf	??_scale+2,w
  5294  0C23  00A5               	movwf	___flmul@b+1
  5295  0C24  0843               	movf	??_scale+1,w
  5296  0C25  00A4               	movwf	___flmul@b
  5297  0C26  300A               	movlw	10
  5298  0C27  00F7               	movwf	___awdiv@divisor
  5299  0C28  3000               	movlw	0
  5300  0C29  00F8               	movwf	___awdiv@divisor+1
  5301  0C2A  0850               	movf	scale@scl,w
  5302  0C2B  00F9               	movwf	___awdiv@dividend
  5303  0C2C  01FA               	clrf	___awdiv@dividend+1
  5304  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  5305  0C2E  03FA               	decf	___awdiv@dividend+1,f
  5306  0C2F  120A  118A  200C  120A  158A  	fcall	___awdiv
  5307  0C34  0877               	movf	?___awdiv,w
  5308  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  5309  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  5310  0C37  00C7               	movwf	??_scale+5
  5311  0C38  3001               	movlw	1
  5312  0C39                     u4495:
  5313  0C39  1003               	clrc
  5314  0C3A  0DC7               	rlf	??_scale+5,f
  5315  0C3B  3EFF               	addlw	-1
  5316  0C3C  1D03               	skipz
  5317  0C3D  2C39               	goto	u4495
  5318  0C3E  1003               	clrc
  5319  0C3F  0D47               	rlf	??_scale+5,w
  5320  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5321  0C41  0084               	movwf	4
  5322  0C42  160A  158A  200A  120A  158A  	fcall	stringdir
  5323  0C47  00C8               	movwf	??_scale+6
  5324  0C48  160A  158A  200A  120A  158A  	fcall	stringdir
  5325  0C4D  00C9               	movwf	??_scale+7
  5326  0C4E  160A  158A  200A  120A  158A  	fcall	stringdir
  5327  0C53  00CA               	movwf	??_scale+8
  5328  0C54  160A  158A  200A  120A  158A  	fcall	stringdir
  5329  0C59  00CB               	movwf	??_scale+9
  5330  0C5A  084B               	movf	??_scale+9,w
  5331  0C5B  00AB               	movwf	___flmul@a+3
  5332  0C5C  084A               	movf	??_scale+8,w
  5333  0C5D  00AA               	movwf	___flmul@a+2
  5334  0C5E  0849               	movf	??_scale+7,w
  5335  0C5F  00A9               	movwf	___flmul@a+1
  5336  0C60  0848               	movf	??_scale+6,w
  5337  0C61  00A8               	movwf	___flmul@a
  5338  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  5339  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  5340  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  5341  0C69  0827               	movf	?___flmul+3,w
  5342  0C6A  00C1               	movwf	?_scale+3
  5343  0C6B  0826               	movf	?___flmul+2,w
  5344  0C6C  00C0               	movwf	?_scale+2
  5345  0C6D  0825               	movf	?___flmul+1,w
  5346  0C6E  00BF               	movwf	?_scale+1
  5347  0C6F  0824               	movf	?___flmul,w
  5348  0C70  00BE               	movwf	?_scale
  5349  0C71  2C9E               	goto	l321
  5350  0C72                     l3033:
  5351                           
  5352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  5353  0C72  0850               	movf	scale@scl,w
  5354  0C73  00C2               	movwf	??_scale
  5355  0C74  3001               	movlw	1
  5356  0C75                     u4505:
  5357  0C75  1003               	clrc
  5358  0C76  0DC2               	rlf	??_scale,f
  5359  0C77  3EFF               	addlw	-1
  5360  0C78  1D03               	skipz
  5361  0C79  2C75               	goto	u4505
  5362  0C7A  1003               	clrc
  5363  0C7B  0D42               	rlf	??_scale,w
  5364  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5365  0C7D  0084               	movwf	4
  5366  0C7E  160A  158A  200A  120A  158A  	fcall	stringdir
  5367  0C83  00C3               	movwf	??_scale+1
  5368  0C84  160A  158A  200A  120A  158A  	fcall	stringdir
  5369  0C89  00C4               	movwf	??_scale+2
  5370  0C8A  160A  158A  200A  120A  158A  	fcall	stringdir
  5371  0C8F  00C5               	movwf	??_scale+3
  5372  0C90  160A  158A  200A  120A  158A  	fcall	stringdir
  5373  0C95  00C6               	movwf	??_scale+4
  5374  0C96  0846               	movf	??_scale+4,w
  5375  0C97  00C1               	movwf	?_scale+3
  5376  0C98  0845               	movf	??_scale+3,w
  5377  0C99  00C0               	movwf	?_scale+2
  5378  0C9A  0844               	movf	??_scale+2,w
  5379  0C9B  00BF               	movwf	?_scale+1
  5380  0C9C  0843               	movf	??_scale+1,w
  5381  0C9D  00BE               	movwf	?_scale
  5382  0C9E                     l321:
  5383  0C9E  0008               	return
  5384  0C9F                     __end_of_scale:
  5385                           
  5386                           	psect	text10
  5387  1BE7                     __ptext10:	
  5388 ;; *************** function ___awmod *****************
  5389 ;; Defined at:
  5390 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  divisor         2    0[COMMON] int 
  5393 ;;  dividend        2    2[COMMON] int 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  sign            1    6[COMMON] unsigned char 
  5396 ;;  counter         1    5[COMMON] unsigned char 
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  2    0[COMMON] int 
  5399 ;; Registers used:
  5400 ;;		wreg, status,2, status,0
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5406 ;;      Params:         4       0       0       0       0
  5407 ;;      Locals:         2       0       0       0       0
  5408 ;;      Temps:          1       0       0       0       0
  5409 ;;      Totals:         7       0       0       0       0
  5410 ;;Total ram usage:        7 bytes
  5411 ;; Hardware stack levels used:    1
  5412 ;; This function calls:
  5413 ;;		Nothing
  5414 ;; This function is called by:
  5415 ;;		_scale
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           
  5420                           ;psect for function ___awmod
  5421  1BE7                     ___awmod:
  5422  1BE7                     l2539:	
  5423                           ;incstack = 0
  5424                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5425                           
  5426  1BE7  01F6               	clrf	___awmod@sign
  5427  1BE8                     l2541:
  5428  1BE8  1FF3               	btfss	___awmod@dividend+1,7
  5429  1BE9  2BEB               	goto	u3211
  5430  1BEA  2BEC               	goto	u3210
  5431  1BEB                     u3211:
  5432  1BEB  2BF3               	goto	l2547
  5433  1BEC                     u3210:
  5434  1BEC                     l2543:
  5435  1BEC  09F2               	comf	___awmod@dividend,f
  5436  1BED  09F3               	comf	___awmod@dividend+1,f
  5437  1BEE  0AF2               	incf	___awmod@dividend,f
  5438  1BEF  1903               	skipnz
  5439  1BF0  0AF3               	incf	___awmod@dividend+1,f
  5440  1BF1                     l2545:
  5441  1BF1  01F6               	clrf	___awmod@sign
  5442  1BF2  0AF6               	incf	___awmod@sign,f
  5443  1BF3                     l2547:
  5444  1BF3  1FF1               	btfss	___awmod@divisor+1,7
  5445  1BF4  2BF6               	goto	u3221
  5446  1BF5  2BF7               	goto	u3220
  5447  1BF6                     u3221:
  5448  1BF6  2BFC               	goto	l2551
  5449  1BF7                     u3220:
  5450  1BF7                     l2549:
  5451  1BF7  09F0               	comf	___awmod@divisor,f
  5452  1BF8  09F1               	comf	___awmod@divisor+1,f
  5453  1BF9  0AF0               	incf	___awmod@divisor,f
  5454  1BFA  1903               	skipnz
  5455  1BFB  0AF1               	incf	___awmod@divisor+1,f
  5456  1BFC                     l2551:
  5457  1BFC  0870               	movf	___awmod@divisor,w
  5458  1BFD  0471               	iorwf	___awmod@divisor+1,w
  5459  1BFE  1903               	btfsc	3,2
  5460  1BFF  2C01               	goto	u3231
  5461  1C00  2C02               	goto	u3230
  5462  1C01                     u3231:
  5463  1C01  2C31               	goto	l2569
  5464  1C02                     u3230:
  5465  1C02                     l2553:
  5466  1C02  01F5               	clrf	___awmod@counter
  5467  1C03  0AF5               	incf	___awmod@counter,f
  5468  1C04  2C10               	goto	l2559
  5469  1C05                     l2555:
  5470  1C05  3001               	movlw	1
  5471  1C06                     u3245:
  5472  1C06  1003               	clrc
  5473  1C07  0DF0               	rlf	___awmod@divisor,f
  5474  1C08  0DF1               	rlf	___awmod@divisor+1,f
  5475  1C09  3EFF               	addlw	-1
  5476  1C0A  1D03               	skipz
  5477  1C0B  2C06               	goto	u3245
  5478  1C0C                     l2557:
  5479  1C0C  3001               	movlw	1
  5480  1C0D  00F4               	movwf	??___awmod
  5481  1C0E  0874               	movf	??___awmod,w
  5482  1C0F  07F5               	addwf	___awmod@counter,f
  5483  1C10                     l2559:
  5484  1C10  1FF1               	btfss	___awmod@divisor+1,7
  5485  1C11  2C13               	goto	u3251
  5486  1C12  2C14               	goto	u3250
  5487  1C13                     u3251:
  5488  1C13  2C05               	goto	l2555
  5489  1C14                     u3250:
  5490  1C14                     l2561:
  5491  1C14  0871               	movf	___awmod@divisor+1,w
  5492  1C15  0273               	subwf	___awmod@dividend+1,w
  5493  1C16  1D03               	skipz
  5494  1C17  2C1A               	goto	u3265
  5495  1C18  0870               	movf	___awmod@divisor,w
  5496  1C19  0272               	subwf	___awmod@dividend,w
  5497  1C1A                     u3265:
  5498  1C1A  1C03               	skipc
  5499  1C1B  2C1D               	goto	u3261
  5500  1C1C  2C1E               	goto	u3260
  5501  1C1D                     u3261:
  5502  1C1D  2C24               	goto	l2565
  5503  1C1E                     u3260:
  5504  1C1E                     l2563:
  5505  1C1E  0870               	movf	___awmod@divisor,w
  5506  1C1F  02F2               	subwf	___awmod@dividend,f
  5507  1C20  0871               	movf	___awmod@divisor+1,w
  5508  1C21  1C03               	skipc
  5509  1C22  03F3               	decf	___awmod@dividend+1,f
  5510  1C23  02F3               	subwf	___awmod@dividend+1,f
  5511  1C24                     l2565:
  5512  1C24  3001               	movlw	1
  5513  1C25                     u3275:
  5514  1C25  1003               	clrc
  5515  1C26  0CF1               	rrf	___awmod@divisor+1,f
  5516  1C27  0CF0               	rrf	___awmod@divisor,f
  5517  1C28  3EFF               	addlw	-1
  5518  1C29  1D03               	skipz
  5519  1C2A  2C25               	goto	u3275
  5520  1C2B                     l2567:
  5521  1C2B  3001               	movlw	1
  5522  1C2C  02F5               	subwf	___awmod@counter,f
  5523  1C2D  1D03               	btfss	3,2
  5524  1C2E  2C30               	goto	u3281
  5525  1C2F  2C31               	goto	u3280
  5526  1C30                     u3281:
  5527  1C30  2C14               	goto	l2561
  5528  1C31                     u3280:
  5529  1C31                     l2569:
  5530  1C31  0876               	movf	___awmod@sign,w
  5531  1C32  1903               	btfsc	3,2
  5532  1C33  2C35               	goto	u3291
  5533  1C34  2C36               	goto	u3290
  5534  1C35                     u3291:
  5535  1C35  2C3B               	goto	l2573
  5536  1C36                     u3290:
  5537  1C36                     l2571:
  5538  1C36  09F2               	comf	___awmod@dividend,f
  5539  1C37  09F3               	comf	___awmod@dividend+1,f
  5540  1C38  0AF2               	incf	___awmod@dividend,f
  5541  1C39  1903               	skipnz
  5542  1C3A  0AF3               	incf	___awmod@dividend+1,f
  5543  1C3B                     l2573:
  5544  1C3B  0873               	movf	___awmod@dividend+1,w
  5545  1C3C  00F1               	movwf	?___awmod+1
  5546  1C3D  0872               	movf	___awmod@dividend,w
  5547  1C3E  00F0               	movwf	?___awmod
  5548  1C3F                     l574:
  5549  1C3F  0008               	return
  5550  1C40                     __end_of___awmod:
  5551                           
  5552                           	psect	text11
  5553  000C                     __ptext11:	
  5554 ;; *************** function ___awdiv *****************
  5555 ;; Defined at:
  5556 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  divisor         2    7[COMMON] int 
  5559 ;;  dividend        2    9[COMMON] int 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  quotient        2    2[BANK0 ] int 
  5562 ;;  sign            1    1[BANK0 ] unsigned char 
  5563 ;;  counter         1    0[BANK0 ] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  2    7[COMMON] int 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5573 ;;      Params:         4       0       0       0       0
  5574 ;;      Locals:         0       4       0       0       0
  5575 ;;      Temps:          1       0       0       0       0
  5576 ;;      Totals:         5       4       0       0       0
  5577 ;;Total ram usage:        9 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; This function calls:
  5580 ;;		Nothing
  5581 ;; This function is called by:
  5582 ;;		_scale
  5583 ;;		_sprintf
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           
  5588                           ;psect for function ___awdiv
  5589  000C                     ___awdiv:
  5590  000C                     l2495:	
  5591                           ;incstack = 0
  5592                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5593                           
  5594  000C  1283               	bcf	3,5	;RP0=0, select bank0
  5595  000D  1303               	bcf	3,6	;RP1=0, select bank0
  5596  000E  01A1               	clrf	___awdiv@sign
  5597  000F                     l2497:
  5598  000F  1FF8               	btfss	___awdiv@divisor+1,7
  5599  0010  2812               	goto	u3111
  5600  0011  2813               	goto	u3110
  5601  0012                     u3111:
  5602  0012  281A               	goto	l2503
  5603  0013                     u3110:
  5604  0013                     l2499:
  5605  0013  09F7               	comf	___awdiv@divisor,f
  5606  0014  09F8               	comf	___awdiv@divisor+1,f
  5607  0015  0AF7               	incf	___awdiv@divisor,f
  5608  0016  1903               	skipnz
  5609  0017  0AF8               	incf	___awdiv@divisor+1,f
  5610  0018                     l2501:
  5611  0018  01A1               	clrf	___awdiv@sign
  5612  0019  0AA1               	incf	___awdiv@sign,f
  5613  001A                     l2503:
  5614  001A  1FFA               	btfss	___awdiv@dividend+1,7
  5615  001B  281D               	goto	u3121
  5616  001C  281E               	goto	u3120
  5617  001D                     u3121:
  5618  001D  2827               	goto	l2509
  5619  001E                     u3120:
  5620  001E                     l2505:
  5621  001E  09F9               	comf	___awdiv@dividend,f
  5622  001F  09FA               	comf	___awdiv@dividend+1,f
  5623  0020  0AF9               	incf	___awdiv@dividend,f
  5624  0021  1903               	skipnz
  5625  0022  0AFA               	incf	___awdiv@dividend+1,f
  5626  0023                     l2507:
  5627  0023  3001               	movlw	1
  5628  0024  00FB               	movwf	??___awdiv
  5629  0025  087B               	movf	??___awdiv,w
  5630  0026  06A1               	xorwf	___awdiv@sign,f
  5631  0027                     l2509:
  5632  0027  01A2               	clrf	___awdiv@quotient
  5633  0028  01A3               	clrf	___awdiv@quotient+1
  5634  0029                     l2511:
  5635  0029  0877               	movf	___awdiv@divisor,w
  5636  002A  0478               	iorwf	___awdiv@divisor+1,w
  5637  002B  1903               	btfsc	3,2
  5638  002C  282E               	goto	u3131
  5639  002D  282F               	goto	u3130
  5640  002E                     u3131:
  5641  002E  2866               	goto	l2531
  5642  002F                     u3130:
  5643  002F                     l2513:
  5644  002F  01A0               	clrf	___awdiv@counter
  5645  0030  0AA0               	incf	___awdiv@counter,f
  5646  0031  283D               	goto	l2519
  5647  0032                     l2515:
  5648  0032  3001               	movlw	1
  5649  0033                     u3145:
  5650  0033  1003               	clrc
  5651  0034  0DF7               	rlf	___awdiv@divisor,f
  5652  0035  0DF8               	rlf	___awdiv@divisor+1,f
  5653  0036  3EFF               	addlw	-1
  5654  0037  1D03               	skipz
  5655  0038  2833               	goto	u3145
  5656  0039                     l2517:
  5657  0039  3001               	movlw	1
  5658  003A  00FB               	movwf	??___awdiv
  5659  003B  087B               	movf	??___awdiv,w
  5660  003C  07A0               	addwf	___awdiv@counter,f
  5661  003D                     l2519:
  5662  003D  1FF8               	btfss	___awdiv@divisor+1,7
  5663  003E  2840               	goto	u3151
  5664  003F  2841               	goto	u3150
  5665  0040                     u3151:
  5666  0040  2832               	goto	l2515
  5667  0041                     u3150:
  5668  0041                     l2521:
  5669  0041  3001               	movlw	1
  5670  0042                     u3165:
  5671  0042  1003               	clrc
  5672  0043  0DA2               	rlf	___awdiv@quotient,f
  5673  0044  0DA3               	rlf	___awdiv@quotient+1,f
  5674  0045  3EFF               	addlw	-1
  5675  0046  1D03               	skipz
  5676  0047  2842               	goto	u3165
  5677  0048  0878               	movf	___awdiv@divisor+1,w
  5678  0049  027A               	subwf	___awdiv@dividend+1,w
  5679  004A  1D03               	skipz
  5680  004B  284E               	goto	u3175
  5681  004C  0877               	movf	___awdiv@divisor,w
  5682  004D  0279               	subwf	___awdiv@dividend,w
  5683  004E                     u3175:
  5684  004E  1C03               	skipc
  5685  004F  2851               	goto	u3171
  5686  0050  2852               	goto	u3170
  5687  0051                     u3171:
  5688  0051  2859               	goto	l2527
  5689  0052                     u3170:
  5690  0052                     l2523:
  5691  0052  0877               	movf	___awdiv@divisor,w
  5692  0053  02F9               	subwf	___awdiv@dividend,f
  5693  0054  0878               	movf	___awdiv@divisor+1,w
  5694  0055  1C03               	skipc
  5695  0056  03FA               	decf	___awdiv@dividend+1,f
  5696  0057  02FA               	subwf	___awdiv@dividend+1,f
  5697  0058                     l2525:
  5698  0058  1422               	bsf	___awdiv@quotient,0
  5699  0059                     l2527:
  5700  0059  3001               	movlw	1
  5701  005A                     u3185:
  5702  005A  1003               	clrc
  5703  005B  0CF8               	rrf	___awdiv@divisor+1,f
  5704  005C  0CF7               	rrf	___awdiv@divisor,f
  5705  005D  3EFF               	addlw	-1
  5706  005E  1D03               	skipz
  5707  005F  285A               	goto	u3185
  5708  0060                     l2529:
  5709  0060  3001               	movlw	1
  5710  0061  02A0               	subwf	___awdiv@counter,f
  5711  0062  1D03               	btfss	3,2
  5712  0063  2865               	goto	u3191
  5713  0064  2866               	goto	u3190
  5714  0065                     u3191:
  5715  0065  2841               	goto	l2521
  5716  0066                     u3190:
  5717  0066                     l2531:
  5718  0066  0821               	movf	___awdiv@sign,w
  5719  0067  1903               	btfsc	3,2
  5720  0068  286A               	goto	u3201
  5721  0069  286B               	goto	u3200
  5722  006A                     u3201:
  5723  006A  2870               	goto	l2535
  5724  006B                     u3200:
  5725  006B                     l2533:
  5726  006B  09A2               	comf	___awdiv@quotient,f
  5727  006C  09A3               	comf	___awdiv@quotient+1,f
  5728  006D  0AA2               	incf	___awdiv@quotient,f
  5729  006E  1903               	skipnz
  5730  006F  0AA3               	incf	___awdiv@quotient+1,f
  5731  0070                     l2535:
  5732  0070  0823               	movf	___awdiv@quotient+1,w
  5733  0071  00F8               	movwf	?___awdiv+1
  5734  0072  0822               	movf	___awdiv@quotient,w
  5735  0073  00F7               	movwf	?___awdiv
  5736  0074                     l561:
  5737  0074  0008               	return
  5738  0075                     __end_of___awdiv:
  5739                           
  5740                           	psect	text12
  5741  1932                     __ptext12:	
  5742 ;; *************** function _isdigit *****************
  5743 ;; Defined at:
  5744 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;  c               1    wreg     unsigned char 
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;  c               1    1[COMMON] unsigned char 
  5749 ;; Return value:  Size  Location     Type
  5750 ;;		None               void
  5751 ;; Registers used:
  5752 ;;		wreg, status,2, status,0
  5753 ;; Tracked objects:
  5754 ;;		On entry : 0/0
  5755 ;;		On exit  : 0/0
  5756 ;;		Unchanged: 0/0
  5757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5758 ;;      Params:         0       0       0       0       0
  5759 ;;      Locals:         2       0       0       0       0
  5760 ;;      Temps:          0       0       0       0       0
  5761 ;;      Totals:         2       0       0       0       0
  5762 ;;Total ram usage:        2 bytes
  5763 ;; Hardware stack levels used:    1
  5764 ;; This function calls:
  5765 ;;		Nothing
  5766 ;; This function is called by:
  5767 ;;		_sprintf
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           
  5772                           ;psect for function _isdigit
  5773  1932                     _isdigit:
  5774                           
  5775                           ;incstack = 0
  5776                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5777                           ;isdigit@c stored from wreg
  5778  1932  00F1               	movwf	isdigit@c
  5779  1933                     l3037:
  5780  1933  01F0               	clrf	_isdigit$911
  5781  1934                     l3039:
  5782  1934  303A               	movlw	58
  5783  1935  0271               	subwf	isdigit@c,w
  5784  1936  1803               	skipnc
  5785  1937  2939               	goto	u4511
  5786  1938  293A               	goto	u4510
  5787  1939                     u4511:
  5788  1939  2942               	goto	l3045
  5789  193A                     u4510:
  5790  193A                     l3041:
  5791  193A  3030               	movlw	48
  5792  193B  0271               	subwf	isdigit@c,w
  5793  193C  1C03               	skipc
  5794  193D  293F               	goto	u4521
  5795  193E  2940               	goto	u4520
  5796  193F                     u4521:
  5797  193F  2942               	goto	l3045
  5798  1940                     u4520:
  5799  1940                     l3043:
  5800  1940  01F0               	clrf	_isdigit$911
  5801  1941  0AF0               	incf	_isdigit$911,f
  5802  1942                     l3045:
  5803  1942  0C70               	rrf	_isdigit$911,w
  5804  1943                     l895:
  5805  1943  0008               	return
  5806  1944                     __end_of_isdigit:
  5807                           
  5808                           	psect	text13
  5809  136D                     __ptext13:	
  5810 ;; *************** function _fround *****************
  5811 ;; Defined at:
  5812 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  prec            1    wreg     unsigned char 
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;  prec            1   49[BANK0 ] unsigned char 
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  4   30[BANK0 ] unsigned char 
  5819 ;; Registers used:
  5820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5826 ;;      Params:         0       4       0       0       0
  5827 ;;      Locals:         0       9       0       0       0
  5828 ;;      Temps:          0       7       0       0       0
  5829 ;;      Totals:         0      20       0       0       0
  5830 ;;Total ram usage:       20 bytes
  5831 ;; Hardware stack levels used:    1
  5832 ;; Hardware stack levels required when called:    2
  5833 ;; This function calls:
  5834 ;;		___flmul
  5835 ;;		___lwdiv
  5836 ;;		___lwmod
  5837 ;; This function is called by:
  5838 ;;		_sprintf
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           
  5843                           ;psect for function _fround
  5844  136D                     _fround:
  5845                           
  5846                           ;incstack = 0
  5847                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5848                           ;fround@prec stored from wreg
  5849  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5850  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5851  136F  00D1               	movwf	fround@prec
  5852  1370                     l2979:
  5853                           
  5854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5855  1370  306E               	movlw	110
  5856  1371  0251               	subwf	fround@prec,w
  5857  1372  1C03               	skipc
  5858  1373  2B75               	goto	u4261
  5859  1374  2B76               	goto	u4260
  5860  1375                     u4261:
  5861  1375  2C83               	goto	l2987
  5862  1376                     u4260:
  5863  1376                     l2981:
  5864                           
  5865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5866  1376  303F               	movlw	63
  5867  1377  00A7               	movwf	___flmul@b+3
  5868  1378  3000               	movlw	0
  5869  1379  00A6               	movwf	___flmul@b+2
  5870  137A  3000               	movlw	0
  5871  137B  00A5               	movwf	___flmul@b+1
  5872  137C  3000               	movlw	0
  5873  137D  00A4               	movwf	___flmul@b
  5874  137E  3064               	movlw	100
  5875  137F  00F6               	movwf	___lwdiv@divisor
  5876  1380  3000               	movlw	0
  5877  1381  00F7               	movwf	___lwdiv@divisor+1
  5878  1382  0851               	movf	fround@prec,w
  5879  1383  00C2               	movwf	??_fround
  5880  1384  01C3               	clrf	??_fround+1
  5881  1385  0842               	movf	??_fround,w
  5882  1386  00F8               	movwf	___lwdiv@dividend
  5883  1387  0843               	movf	??_fround+1,w
  5884  1388  00F9               	movwf	___lwdiv@dividend+1
  5885  1389  160A  158A  22B6  160A  118A  	fcall	___lwdiv
  5886  138E  0876               	movf	?___lwdiv,w
  5887  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5888  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5889  1391  00C4               	movwf	??_fround+2
  5890  1392  3001               	movlw	1
  5891  1393                     u4275:
  5892  1393  1003               	clrc
  5893  1394  0DC4               	rlf	??_fround+2,f
  5894  1395  3EFF               	addlw	-1
  5895  1396  1D03               	skipz
  5896  1397  2B93               	goto	u4275
  5897  1398  1003               	clrc
  5898  1399  0D44               	rlf	??_fround+2,w
  5899  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5900  139B  0084               	movwf	4
  5901  139C  160A  158A  200A  160A  118A  	fcall	stringdir
  5902  13A1  00C5               	movwf	??_fround+3
  5903  13A2  160A  158A  200A  160A  118A  	fcall	stringdir
  5904  13A7  00C6               	movwf	??_fround+4
  5905  13A8  160A  158A  200A  160A  118A  	fcall	stringdir
  5906  13AD  00C7               	movwf	??_fround+5
  5907  13AE  160A  158A  200A  160A  118A  	fcall	stringdir
  5908  13B3  00C8               	movwf	??_fround+6
  5909  13B4  0848               	movf	??_fround+6,w
  5910  13B5  00AB               	movwf	___flmul@a+3
  5911  13B6  0847               	movf	??_fround+5,w
  5912  13B7  00AA               	movwf	___flmul@a+2
  5913  13B8  0846               	movf	??_fround+4,w
  5914  13B9  00A9               	movwf	___flmul@a+1
  5915  13BA  0845               	movf	??_fround+3,w
  5916  13BB  00A8               	movwf	___flmul@a
  5917  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5918  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5919  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5920  13C3  0827               	movf	?___flmul+3,w
  5921  13C4  00D0               	movwf	_fround$1106+3
  5922  13C5  0826               	movf	?___flmul+2,w
  5923  13C6  00CF               	movwf	_fround$1106+2
  5924  13C7  0825               	movf	?___flmul+1,w
  5925  13C8  00CE               	movwf	_fround$1106+1
  5926  13C9  0824               	movf	?___flmul,w
  5927  13CA  00CD               	movwf	_fround$1106
  5928                           
  5929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5930  13CB  300A               	movlw	10
  5931  13CC  00F6               	movwf	___lwdiv@divisor
  5932  13CD  3000               	movlw	0
  5933  13CE  00F7               	movwf	___lwdiv@divisor+1
  5934  13CF  0851               	movf	fround@prec,w
  5935  13D0  00C2               	movwf	??_fround
  5936  13D1  01C3               	clrf	??_fround+1
  5937  13D2  0842               	movf	??_fround,w
  5938  13D3  00F2               	movwf	___lwmod@dividend
  5939  13D4  0843               	movf	??_fround+1,w
  5940  13D5  00F3               	movwf	___lwmod@dividend+1
  5941  13D6  3064               	movlw	100
  5942  13D7  00F0               	movwf	___lwmod@divisor
  5943  13D8  3000               	movlw	0
  5944  13D9  00F1               	movwf	___lwmod@divisor+1
  5945  13DA  160A  158A  223A  160A  118A  	fcall	___lwmod
  5946  13DF  0871               	movf	?___lwmod+1,w
  5947  13E0  00F9               	movwf	___lwdiv@dividend+1
  5948  13E1  0870               	movf	?___lwmod,w
  5949  13E2  00F8               	movwf	___lwdiv@dividend
  5950  13E3  160A  158A  22B6  160A  118A  	fcall	___lwdiv
  5951  13E8  0876               	movf	?___lwdiv,w
  5952  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5953  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5954  13EB  00C4               	movwf	??_fround+2
  5955  13EC  3001               	movlw	1
  5956  13ED                     u4285:
  5957  13ED  1003               	clrc
  5958  13EE  0DC4               	rlf	??_fround+2,f
  5959  13EF  3EFF               	addlw	-1
  5960  13F0  1D03               	skipz
  5961  13F1  2BED               	goto	u4285
  5962  13F2  1003               	clrc
  5963  13F3  0D44               	rlf	??_fround+2,w
  5964  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5965  13F5  0084               	movwf	4
  5966  13F6  160A  158A  200A  160A  118A  	fcall	stringdir
  5967  13FB  00C5               	movwf	??_fround+3
  5968  13FC  160A  158A  200A  160A  118A  	fcall	stringdir
  5969  1401  00C6               	movwf	??_fround+4
  5970  1402  160A  158A  200A  160A  118A  	fcall	stringdir
  5971  1407  00C7               	movwf	??_fround+5
  5972  1408  160A  158A  200A  160A  118A  	fcall	stringdir
  5973  140D  00C8               	movwf	??_fround+6
  5974  140E  0848               	movf	??_fround+6,w
  5975  140F  00A7               	movwf	___flmul@b+3
  5976  1410  0847               	movf	??_fround+5,w
  5977  1411  00A6               	movwf	___flmul@b+2
  5978  1412  0846               	movf	??_fround+4,w
  5979  1413  00A5               	movwf	___flmul@b+1
  5980  1414  0845               	movf	??_fround+3,w
  5981  1415  00A4               	movwf	___flmul@b
  5982  1416  0850               	movf	_fround$1106+3,w
  5983  1417  00AB               	movwf	___flmul@a+3
  5984  1418  084F               	movf	_fround$1106+2,w
  5985  1419  00AA               	movwf	___flmul@a+2
  5986  141A  084E               	movf	_fround$1106+1,w
  5987  141B  00A9               	movwf	___flmul@a+1
  5988  141C  084D               	movf	_fround$1106,w
  5989  141D  00A8               	movwf	___flmul@a
  5990  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5991  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5992  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5993  1425  0827               	movf	?___flmul+3,w
  5994  1426  00CC               	movwf	_fround$1107+3
  5995  1427  0826               	movf	?___flmul+2,w
  5996  1428  00CB               	movwf	_fround$1107+2
  5997  1429  0825               	movf	?___flmul+1,w
  5998  142A  00CA               	movwf	_fround$1107+1
  5999  142B  0824               	movf	?___flmul,w
  6000  142C  00C9               	movwf	_fround$1107
  6001                           
  6002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  6003  142D  300A               	movlw	10
  6004  142E  00F0               	movwf	___lwmod@divisor
  6005  142F  3000               	movlw	0
  6006  1430  00F1               	movwf	___lwmod@divisor+1
  6007  1431  0851               	movf	fround@prec,w
  6008  1432  00C2               	movwf	??_fround
  6009  1433  01C3               	clrf	??_fround+1
  6010  1434  0842               	movf	??_fround,w
  6011  1435  00F2               	movwf	___lwmod@dividend
  6012  1436  0843               	movf	??_fround+1,w
  6013  1437  00F3               	movwf	___lwmod@dividend+1
  6014  1438  160A  158A  223A  160A  118A  	fcall	___lwmod
  6015  143D  0870               	movf	?___lwmod,w
  6016  143E  1283               	bcf	3,5	;RP0=0, select bank0
  6017  143F  1303               	bcf	3,6	;RP1=0, select bank0
  6018  1440  00C4               	movwf	??_fround+2
  6019  1441  3001               	movlw	1
  6020  1442                     u4295:
  6021  1442  1003               	clrc
  6022  1443  0DC4               	rlf	??_fround+2,f
  6023  1444  3EFF               	addlw	-1
  6024  1445  1D03               	skipz
  6025  1446  2C42               	goto	u4295
  6026  1447  1003               	clrc
  6027  1448  0D44               	rlf	??_fround+2,w
  6028  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6029  144A  0084               	movwf	4
  6030  144B  160A  158A  200A  160A  118A  	fcall	stringdir
  6031  1450  00C5               	movwf	??_fround+3
  6032  1451  160A  158A  200A  160A  118A  	fcall	stringdir
  6033  1456  00C6               	movwf	??_fround+4
  6034  1457  160A  158A  200A  160A  118A  	fcall	stringdir
  6035  145C  00C7               	movwf	??_fround+5
  6036  145D  160A  158A  200A  160A  118A  	fcall	stringdir
  6037  1462  00C8               	movwf	??_fround+6
  6038  1463  0848               	movf	??_fround+6,w
  6039  1464  00A7               	movwf	___flmul@b+3
  6040  1465  0847               	movf	??_fround+5,w
  6041  1466  00A6               	movwf	___flmul@b+2
  6042  1467  0846               	movf	??_fround+4,w
  6043  1468  00A5               	movwf	___flmul@b+1
  6044  1469  0845               	movf	??_fround+3,w
  6045  146A  00A4               	movwf	___flmul@b
  6046  146B  084C               	movf	_fround$1107+3,w
  6047  146C  00AB               	movwf	___flmul@a+3
  6048  146D  084B               	movf	_fround$1107+2,w
  6049  146E  00AA               	movwf	___flmul@a+2
  6050  146F  084A               	movf	_fround$1107+1,w
  6051  1470  00A9               	movwf	___flmul@a+1
  6052  1471  0849               	movf	_fround$1107,w
  6053  1472  00A8               	movwf	___flmul@a
  6054  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  6055  1478  1283               	bcf	3,5	;RP0=0, select bank0
  6056  1479  1303               	bcf	3,6	;RP1=0, select bank0
  6057  147A  0827               	movf	?___flmul+3,w
  6058  147B  00C1               	movwf	?_fround+3
  6059  147C  0826               	movf	?___flmul+2,w
  6060  147D  00C0               	movwf	?_fround+2
  6061  147E  0825               	movf	?___flmul+1,w
  6062  147F  00BF               	movwf	?_fround+1
  6063  1480  0824               	movf	?___flmul,w
  6064  1481  00BE               	movwf	?_fround
  6065  1482  2D77               	goto	l314
  6066  1483                     l2987:
  6067  1483  300B               	movlw	11
  6068  1484  0251               	subwf	fround@prec,w
  6069  1485  1C03               	skipc
  6070  1486  2C88               	goto	u4301
  6071  1487  2C89               	goto	u4300
  6072  1488                     u4301:
  6073  1488  2D34               	goto	l2993
  6074  1489                     u4300:
  6075  1489                     l2989:
  6076                           
  6077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6078  1489  303F               	movlw	63
  6079  148A  00A7               	movwf	___flmul@b+3
  6080  148B  3000               	movlw	0
  6081  148C  00A6               	movwf	___flmul@b+2
  6082  148D  3000               	movlw	0
  6083  148E  00A5               	movwf	___flmul@b+1
  6084  148F  3000               	movlw	0
  6085  1490  00A4               	movwf	___flmul@b
  6086  1491  300A               	movlw	10
  6087  1492  00F6               	movwf	___lwdiv@divisor
  6088  1493  3000               	movlw	0
  6089  1494  00F7               	movwf	___lwdiv@divisor+1
  6090  1495  0851               	movf	fround@prec,w
  6091  1496  00C2               	movwf	??_fround
  6092  1497  01C3               	clrf	??_fround+1
  6093  1498  0842               	movf	??_fround,w
  6094  1499  00F8               	movwf	___lwdiv@dividend
  6095  149A  0843               	movf	??_fround+1,w
  6096  149B  00F9               	movwf	___lwdiv@dividend+1
  6097  149C  160A  158A  22B6  160A  118A  	fcall	___lwdiv
  6098  14A1  0876               	movf	?___lwdiv,w
  6099  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  6100  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  6101  14A4  00C4               	movwf	??_fround+2
  6102  14A5  3001               	movlw	1
  6103  14A6                     u4315:
  6104  14A6  1003               	clrc
  6105  14A7  0DC4               	rlf	??_fround+2,f
  6106  14A8  3EFF               	addlw	-1
  6107  14A9  1D03               	skipz
  6108  14AA  2CA6               	goto	u4315
  6109  14AB  1003               	clrc
  6110  14AC  0D44               	rlf	??_fround+2,w
  6111  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  6112  14AE  0084               	movwf	4
  6113  14AF  160A  158A  200A  160A  118A  	fcall	stringdir
  6114  14B4  00C5               	movwf	??_fround+3
  6115  14B5  160A  158A  200A  160A  118A  	fcall	stringdir
  6116  14BA  00C6               	movwf	??_fround+4
  6117  14BB  160A  158A  200A  160A  118A  	fcall	stringdir
  6118  14C0  00C7               	movwf	??_fround+5
  6119  14C1  160A  158A  200A  160A  118A  	fcall	stringdir
  6120  14C6  00C8               	movwf	??_fround+6
  6121  14C7  0848               	movf	??_fround+6,w
  6122  14C8  00AB               	movwf	___flmul@a+3
  6123  14C9  0847               	movf	??_fround+5,w
  6124  14CA  00AA               	movwf	___flmul@a+2
  6125  14CB  0846               	movf	??_fround+4,w
  6126  14CC  00A9               	movwf	___flmul@a+1
  6127  14CD  0845               	movf	??_fround+3,w
  6128  14CE  00A8               	movwf	___flmul@a
  6129  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  6130  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  6131  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  6132  14D6  0827               	movf	?___flmul+3,w
  6133  14D7  00D0               	movwf	_fround$1106+3
  6134  14D8  0826               	movf	?___flmul+2,w
  6135  14D9  00CF               	movwf	_fround$1106+2
  6136  14DA  0825               	movf	?___flmul+1,w
  6137  14DB  00CE               	movwf	_fround$1106+1
  6138  14DC  0824               	movf	?___flmul,w
  6139  14DD  00CD               	movwf	_fround$1106
  6140                           
  6141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6142  14DE  300A               	movlw	10
  6143  14DF  00F0               	movwf	___lwmod@divisor
  6144  14E0  3000               	movlw	0
  6145  14E1  00F1               	movwf	___lwmod@divisor+1
  6146  14E2  0851               	movf	fround@prec,w
  6147  14E3  00C2               	movwf	??_fround
  6148  14E4  01C3               	clrf	??_fround+1
  6149  14E5  0842               	movf	??_fround,w
  6150  14E6  00F2               	movwf	___lwmod@dividend
  6151  14E7  0843               	movf	??_fround+1,w
  6152  14E8  00F3               	movwf	___lwmod@dividend+1
  6153  14E9  160A  158A  223A  160A  118A  	fcall	___lwmod
  6154  14EE  0870               	movf	?___lwmod,w
  6155  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  6156  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  6157  14F1  00C4               	movwf	??_fround+2
  6158  14F2  3001               	movlw	1
  6159  14F3                     u4325:
  6160  14F3  1003               	clrc
  6161  14F4  0DC4               	rlf	??_fround+2,f
  6162  14F5  3EFF               	addlw	-1
  6163  14F6  1D03               	skipz
  6164  14F7  2CF3               	goto	u4325
  6165  14F8  1003               	clrc
  6166  14F9  0D44               	rlf	??_fround+2,w
  6167  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6168  14FB  0084               	movwf	4
  6169  14FC  160A  158A  200A  160A  118A  	fcall	stringdir
  6170  1501  00C5               	movwf	??_fround+3
  6171  1502  160A  158A  200A  160A  118A  	fcall	stringdir
  6172  1507  00C6               	movwf	??_fround+4
  6173  1508  160A  158A  200A  160A  118A  	fcall	stringdir
  6174  150D  00C7               	movwf	??_fround+5
  6175  150E  160A  158A  200A  160A  118A  	fcall	stringdir
  6176  1513  00C8               	movwf	??_fround+6
  6177  1514  0848               	movf	??_fround+6,w
  6178  1515  00A7               	movwf	___flmul@b+3
  6179  1516  0847               	movf	??_fround+5,w
  6180  1517  00A6               	movwf	___flmul@b+2
  6181  1518  0846               	movf	??_fround+4,w
  6182  1519  00A5               	movwf	___flmul@b+1
  6183  151A  0845               	movf	??_fround+3,w
  6184  151B  00A4               	movwf	___flmul@b
  6185  151C  0850               	movf	_fround$1106+3,w
  6186  151D  00AB               	movwf	___flmul@a+3
  6187  151E  084F               	movf	_fround$1106+2,w
  6188  151F  00AA               	movwf	___flmul@a+2
  6189  1520  084E               	movf	_fround$1106+1,w
  6190  1521  00A9               	movwf	___flmul@a+1
  6191  1522  084D               	movf	_fround$1106,w
  6192  1523  00A8               	movwf	___flmul@a
  6193  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  6194  1529  1283               	bcf	3,5	;RP0=0, select bank0
  6195  152A  1303               	bcf	3,6	;RP1=0, select bank0
  6196  152B  0827               	movf	?___flmul+3,w
  6197  152C  00C1               	movwf	?_fround+3
  6198  152D  0826               	movf	?___flmul+2,w
  6199  152E  00C0               	movwf	?_fround+2
  6200  152F  0825               	movf	?___flmul+1,w
  6201  1530  00BF               	movwf	?_fround+1
  6202  1531  0824               	movf	?___flmul,w
  6203  1532  00BE               	movwf	?_fround
  6204  1533  2D77               	goto	l314
  6205  1534                     l2993:
  6206                           
  6207                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  6208  1534  303F               	movlw	63
  6209  1535  00A7               	movwf	___flmul@b+3
  6210  1536  3000               	movlw	0
  6211  1537  00A6               	movwf	___flmul@b+2
  6212  1538  3000               	movlw	0
  6213  1539  00A5               	movwf	___flmul@b+1
  6214  153A  3000               	movlw	0
  6215  153B  00A4               	movwf	___flmul@b
  6216  153C  0851               	movf	fround@prec,w
  6217  153D  00C2               	movwf	??_fround
  6218  153E  3001               	movlw	1
  6219  153F                     u4335:
  6220  153F  1003               	clrc
  6221  1540  0DC2               	rlf	??_fround,f
  6222  1541  3EFF               	addlw	-1
  6223  1542  1D03               	skipz
  6224  1543  2D3F               	goto	u4335
  6225  1544  1003               	clrc
  6226  1545  0D42               	rlf	??_fround,w
  6227  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6228  1547  0084               	movwf	4
  6229  1548  160A  158A  200A  160A  118A  	fcall	stringdir
  6230  154D  00C3               	movwf	??_fround+1
  6231  154E  160A  158A  200A  160A  118A  	fcall	stringdir
  6232  1553  00C4               	movwf	??_fround+2
  6233  1554  160A  158A  200A  160A  118A  	fcall	stringdir
  6234  1559  00C5               	movwf	??_fround+3
  6235  155A  160A  158A  200A  160A  118A  	fcall	stringdir
  6236  155F  00C6               	movwf	??_fround+4
  6237  1560  0846               	movf	??_fround+4,w
  6238  1561  00AB               	movwf	___flmul@a+3
  6239  1562  0845               	movf	??_fround+3,w
  6240  1563  00AA               	movwf	___flmul@a+2
  6241  1564  0844               	movf	??_fround+2,w
  6242  1565  00A9               	movwf	___flmul@a+1
  6243  1566  0843               	movf	??_fround+1,w
  6244  1567  00A8               	movwf	___flmul@a
  6245  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  6246  156D  1283               	bcf	3,5	;RP0=0, select bank0
  6247  156E  1303               	bcf	3,6	;RP1=0, select bank0
  6248  156F  0827               	movf	?___flmul+3,w
  6249  1570  00C1               	movwf	?_fround+3
  6250  1571  0826               	movf	?___flmul+2,w
  6251  1572  00C0               	movwf	?_fround+2
  6252  1573  0825               	movf	?___flmul+1,w
  6253  1574  00BF               	movwf	?_fround+1
  6254  1575  0824               	movf	?___flmul,w
  6255  1576  00BE               	movwf	?_fround
  6256  1577                     l314:
  6257  1577  0008               	return
  6258  1578                     __end_of_fround:
  6259                           
  6260                           	psect	text14
  6261  1A3A                     __ptext14:	
  6262 ;; *************** function ___lwmod *****************
  6263 ;; Defined at:
  6264 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;  divisor         2    0[COMMON] unsigned int 
  6267 ;;  dividend        2    2[COMMON] unsigned int 
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;  counter         1    5[COMMON] unsigned char 
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  2    0[COMMON] unsigned int 
  6272 ;; Registers used:
  6273 ;;		wreg, status,2, status,0
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6279 ;;      Params:         4       0       0       0       0
  6280 ;;      Locals:         1       0       0       0       0
  6281 ;;      Temps:          1       0       0       0       0
  6282 ;;      Totals:         6       0       0       0       0
  6283 ;;Total ram usage:        6 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; This function calls:
  6286 ;;		Nothing
  6287 ;; This function is called by:
  6288 ;;		_fround
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           
  6293                           ;psect for function ___lwmod
  6294  1A3A                     ___lwmod:
  6295  1A3A                     l2603:	
  6296                           ;incstack = 0
  6297                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6298                           
  6299  1A3A  0870               	movf	___lwmod@divisor,w
  6300  1A3B  0471               	iorwf	___lwmod@divisor+1,w
  6301  1A3C  1903               	btfsc	3,2
  6302  1A3D  2A3F               	goto	u3371
  6303  1A3E  2A40               	goto	u3370
  6304  1A3F                     u3371:
  6305  1A3F  2A6F               	goto	l2621
  6306  1A40                     u3370:
  6307  1A40                     l2605:
  6308  1A40  01F5               	clrf	___lwmod@counter
  6309  1A41  0AF5               	incf	___lwmod@counter,f
  6310  1A42  2A4E               	goto	l2611
  6311  1A43                     l2607:
  6312  1A43  3001               	movlw	1
  6313  1A44                     u3385:
  6314  1A44  1003               	clrc
  6315  1A45  0DF0               	rlf	___lwmod@divisor,f
  6316  1A46  0DF1               	rlf	___lwmod@divisor+1,f
  6317  1A47  3EFF               	addlw	-1
  6318  1A48  1D03               	skipz
  6319  1A49  2A44               	goto	u3385
  6320  1A4A                     l2609:
  6321  1A4A  3001               	movlw	1
  6322  1A4B  00F4               	movwf	??___lwmod
  6323  1A4C  0874               	movf	??___lwmod,w
  6324  1A4D  07F5               	addwf	___lwmod@counter,f
  6325  1A4E                     l2611:
  6326  1A4E  1FF1               	btfss	___lwmod@divisor+1,7
  6327  1A4F  2A51               	goto	u3391
  6328  1A50  2A52               	goto	u3390
  6329  1A51                     u3391:
  6330  1A51  2A43               	goto	l2607
  6331  1A52                     u3390:
  6332  1A52                     l2613:
  6333  1A52  0871               	movf	___lwmod@divisor+1,w
  6334  1A53  0273               	subwf	___lwmod@dividend+1,w
  6335  1A54  1D03               	skipz
  6336  1A55  2A58               	goto	u3405
  6337  1A56  0870               	movf	___lwmod@divisor,w
  6338  1A57  0272               	subwf	___lwmod@dividend,w
  6339  1A58                     u3405:
  6340  1A58  1C03               	skipc
  6341  1A59  2A5B               	goto	u3401
  6342  1A5A  2A5C               	goto	u3400
  6343  1A5B                     u3401:
  6344  1A5B  2A62               	goto	l2617
  6345  1A5C                     u3400:
  6346  1A5C                     l2615:
  6347  1A5C  0870               	movf	___lwmod@divisor,w
  6348  1A5D  02F2               	subwf	___lwmod@dividend,f
  6349  1A5E  0871               	movf	___lwmod@divisor+1,w
  6350  1A5F  1C03               	skipc
  6351  1A60  03F3               	decf	___lwmod@dividend+1,f
  6352  1A61  02F3               	subwf	___lwmod@dividend+1,f
  6353  1A62                     l2617:
  6354  1A62  3001               	movlw	1
  6355  1A63                     u3415:
  6356  1A63  1003               	clrc
  6357  1A64  0CF1               	rrf	___lwmod@divisor+1,f
  6358  1A65  0CF0               	rrf	___lwmod@divisor,f
  6359  1A66  3EFF               	addlw	-1
  6360  1A67  1D03               	skipz
  6361  1A68  2A63               	goto	u3415
  6362  1A69                     l2619:
  6363  1A69  3001               	movlw	1
  6364  1A6A  02F5               	subwf	___lwmod@counter,f
  6365  1A6B  1D03               	btfss	3,2
  6366  1A6C  2A6E               	goto	u3421
  6367  1A6D  2A6F               	goto	u3420
  6368  1A6E                     u3421:
  6369  1A6E  2A52               	goto	l2613
  6370  1A6F                     u3420:
  6371  1A6F                     l2621:
  6372  1A6F  0873               	movf	___lwmod@dividend+1,w
  6373  1A70  00F1               	movwf	?___lwmod+1
  6374  1A71  0872               	movf	___lwmod@dividend,w
  6375  1A72  00F0               	movwf	?___lwmod
  6376  1A73                     l724:
  6377  1A73  0008               	return
  6378  1A74                     __end_of___lwmod:
  6379                           
  6380                           	psect	text15
  6381  1AB6                     __ptext15:	
  6382 ;; *************** function ___lwdiv *****************
  6383 ;; Defined at:
  6384 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;  divisor         2    6[COMMON] unsigned int 
  6387 ;;  dividend        2    8[COMMON] unsigned int 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;  quotient        2   11[COMMON] unsigned int 
  6390 ;;  counter         1   13[COMMON] unsigned char 
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  2    6[COMMON] unsigned int 
  6393 ;; Registers used:
  6394 ;;		wreg, status,2, status,0
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6400 ;;      Params:         4       0       0       0       0
  6401 ;;      Locals:         3       0       0       0       0
  6402 ;;      Temps:          1       0       0       0       0
  6403 ;;      Totals:         8       0       0       0       0
  6404 ;;Total ram usage:        8 bytes
  6405 ;; Hardware stack levels used:    1
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_fround
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           
  6414                           ;psect for function ___lwdiv
  6415  1AB6                     ___lwdiv:
  6416  1AB6                     l2577:	
  6417                           ;incstack = 0
  6418                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6419                           
  6420  1AB6  01FB               	clrf	___lwdiv@quotient
  6421  1AB7  01FC               	clrf	___lwdiv@quotient+1
  6422  1AB8                     l2579:
  6423  1AB8  0876               	movf	___lwdiv@divisor,w
  6424  1AB9  0477               	iorwf	___lwdiv@divisor+1,w
  6425  1ABA  1903               	btfsc	3,2
  6426  1ABB  2ABD               	goto	u3301
  6427  1ABC  2ABE               	goto	u3300
  6428  1ABD                     u3301:
  6429  1ABD  2AF5               	goto	l2599
  6430  1ABE                     u3300:
  6431  1ABE                     l2581:
  6432  1ABE  01FD               	clrf	___lwdiv@counter
  6433  1ABF  0AFD               	incf	___lwdiv@counter,f
  6434  1AC0  2ACC               	goto	l2587
  6435  1AC1                     l2583:
  6436  1AC1  3001               	movlw	1
  6437  1AC2                     u3315:
  6438  1AC2  1003               	clrc
  6439  1AC3  0DF6               	rlf	___lwdiv@divisor,f
  6440  1AC4  0DF7               	rlf	___lwdiv@divisor+1,f
  6441  1AC5  3EFF               	addlw	-1
  6442  1AC6  1D03               	skipz
  6443  1AC7  2AC2               	goto	u3315
  6444  1AC8                     l2585:
  6445  1AC8  3001               	movlw	1
  6446  1AC9  00FA               	movwf	??___lwdiv
  6447  1ACA  087A               	movf	??___lwdiv,w
  6448  1ACB  07FD               	addwf	___lwdiv@counter,f
  6449  1ACC                     l2587:
  6450  1ACC  1FF7               	btfss	___lwdiv@divisor+1,7
  6451  1ACD  2ACF               	goto	u3321
  6452  1ACE  2AD0               	goto	u3320
  6453  1ACF                     u3321:
  6454  1ACF  2AC1               	goto	l2583
  6455  1AD0                     u3320:
  6456  1AD0                     l2589:
  6457  1AD0  3001               	movlw	1
  6458  1AD1                     u3335:
  6459  1AD1  1003               	clrc
  6460  1AD2  0DFB               	rlf	___lwdiv@quotient,f
  6461  1AD3  0DFC               	rlf	___lwdiv@quotient+1,f
  6462  1AD4  3EFF               	addlw	-1
  6463  1AD5  1D03               	skipz
  6464  1AD6  2AD1               	goto	u3335
  6465  1AD7  0877               	movf	___lwdiv@divisor+1,w
  6466  1AD8  0279               	subwf	___lwdiv@dividend+1,w
  6467  1AD9  1D03               	skipz
  6468  1ADA  2ADD               	goto	u3345
  6469  1ADB  0876               	movf	___lwdiv@divisor,w
  6470  1ADC  0278               	subwf	___lwdiv@dividend,w
  6471  1ADD                     u3345:
  6472  1ADD  1C03               	skipc
  6473  1ADE  2AE0               	goto	u3341
  6474  1ADF  2AE1               	goto	u3340
  6475  1AE0                     u3341:
  6476  1AE0  2AE8               	goto	l2595
  6477  1AE1                     u3340:
  6478  1AE1                     l2591:
  6479  1AE1  0876               	movf	___lwdiv@divisor,w
  6480  1AE2  02F8               	subwf	___lwdiv@dividend,f
  6481  1AE3  0877               	movf	___lwdiv@divisor+1,w
  6482  1AE4  1C03               	skipc
  6483  1AE5  03F9               	decf	___lwdiv@dividend+1,f
  6484  1AE6  02F9               	subwf	___lwdiv@dividend+1,f
  6485  1AE7                     l2593:
  6486  1AE7  147B               	bsf	___lwdiv@quotient,0
  6487  1AE8                     l2595:
  6488  1AE8  3001               	movlw	1
  6489  1AE9                     u3355:
  6490  1AE9  1003               	clrc
  6491  1AEA  0CF7               	rrf	___lwdiv@divisor+1,f
  6492  1AEB  0CF6               	rrf	___lwdiv@divisor,f
  6493  1AEC  3EFF               	addlw	-1
  6494  1AED  1D03               	skipz
  6495  1AEE  2AE9               	goto	u3355
  6496  1AEF                     l2597:
  6497  1AEF  3001               	movlw	1
  6498  1AF0  02FD               	subwf	___lwdiv@counter,f
  6499  1AF1  1D03               	btfss	3,2
  6500  1AF2  2AF4               	goto	u3361
  6501  1AF3  2AF5               	goto	u3360
  6502  1AF4                     u3361:
  6503  1AF4  2AD0               	goto	l2589
  6504  1AF5                     u3360:
  6505  1AF5                     l2599:
  6506  1AF5  087C               	movf	___lwdiv@quotient+1,w
  6507  1AF6  00F7               	movwf	?___lwdiv+1
  6508  1AF7  087B               	movf	___lwdiv@quotient,w
  6509  1AF8  00F6               	movwf	?___lwdiv
  6510  1AF9                     l714:
  6511  1AF9  0008               	return
  6512  1AFA                     __end_of___lwdiv:
  6513                           
  6514                           	psect	text16
  6515  10D3                     __ptext16:	
  6516 ;; *************** function __tdiv_to_l_ *****************
  6517 ;; Defined at:
  6518 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;  f1              4    0[COMMON] float 
  6521 ;;  f2              4    4[COMMON] float 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  quot            4    0[BANK0 ] unsigned long 
  6524 ;;  exp1            1    5[BANK0 ] unsigned char 
  6525 ;;  cntr            1    4[BANK0 ] unsigned char 
  6526 ;; Return value:  Size  Location     Type
  6527 ;;                  4    0[COMMON] unsigned long 
  6528 ;; Registers used:
  6529 ;;		wreg, status,2, status,0
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6535 ;;      Params:         8       0       0       0       0
  6536 ;;      Locals:         0       6       0       0       0
  6537 ;;      Temps:          4       0       0       0       0
  6538 ;;      Totals:        12       6       0       0       0
  6539 ;;Total ram usage:       18 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; This function calls:
  6542 ;;		Nothing
  6543 ;; This function is called by:
  6544 ;;		_sprintf
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           
  6549                           ;psect for function __tdiv_to_l_
  6550  10D3                     __tdiv_to_l_:
  6551  10D3                     l3049:	
  6552                           ;incstack = 0
  6553                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6554                           
  6555  10D3  0870               	movf	__tdiv_to_l_@f1,w
  6556  10D4  00F8               	movwf	??__tdiv_to_l_
  6557  10D5  0871               	movf	__tdiv_to_l_@f1+1,w
  6558  10D6  00F9               	movwf	??__tdiv_to_l_+1
  6559  10D7  0872               	movf	__tdiv_to_l_@f1+2,w
  6560  10D8  00FA               	movwf	??__tdiv_to_l_+2
  6561  10D9  1003               	clrc
  6562  10DA  0D79               	rlf	??__tdiv_to_l_+1,w
  6563  10DB  0D7A               	rlf	??__tdiv_to_l_+2,w
  6564  10DC  00FB               	movwf	??__tdiv_to_l_+3
  6565  10DD  087B               	movf	??__tdiv_to_l_+3,w
  6566  10DE  1283               	bcf	3,5	;RP0=0, select bank0
  6567  10DF  1303               	bcf	3,6	;RP1=0, select bank0
  6568  10E0  00A5               	movwf	__tdiv_to_l_@exp1
  6569  10E1  0825               	movf	__tdiv_to_l_@exp1,w
  6570  10E2  1D03               	btfss	3,2
  6571  10E3  28E5               	goto	u4531
  6572  10E4  28E6               	goto	u4530
  6573  10E5                     u4531:
  6574  10E5  28EF               	goto	l3055
  6575  10E6                     u4530:
  6576  10E6                     l3051:
  6577  10E6  3000               	movlw	0
  6578  10E7  00F3               	movwf	?__tdiv_to_l_+3
  6579  10E8  3000               	movlw	0
  6580  10E9  00F2               	movwf	?__tdiv_to_l_+2
  6581  10EA  3000               	movlw	0
  6582  10EB  00F1               	movwf	?__tdiv_to_l_+1
  6583  10EC  3000               	movlw	0
  6584  10ED  00F0               	movwf	?__tdiv_to_l_
  6585  10EE  298F               	goto	l625
  6586  10EF                     l3055:
  6587  10EF  0874               	movf	__tdiv_to_l_@f2,w
  6588  10F0  00F8               	movwf	??__tdiv_to_l_
  6589  10F1  0875               	movf	__tdiv_to_l_@f2+1,w
  6590  10F2  00F9               	movwf	??__tdiv_to_l_+1
  6591  10F3  0876               	movf	__tdiv_to_l_@f2+2,w
  6592  10F4  00FA               	movwf	??__tdiv_to_l_+2
  6593  10F5  1003               	clrc
  6594  10F6  0D79               	rlf	??__tdiv_to_l_+1,w
  6595  10F7  0D7A               	rlf	??__tdiv_to_l_+2,w
  6596  10F8  00FB               	movwf	??__tdiv_to_l_+3
  6597  10F9  087B               	movf	??__tdiv_to_l_+3,w
  6598  10FA  00A4               	movwf	__tdiv_to_l_@cntr
  6599  10FB  0824               	movf	__tdiv_to_l_@cntr,w
  6600  10FC  1D03               	btfss	3,2
  6601  10FD  28FF               	goto	u4541
  6602  10FE  2900               	goto	u4540
  6603  10FF                     u4541:
  6604  10FF  2901               	goto	l626
  6605  1100                     u4540:
  6606  1100  28E6               	goto	l3051
  6607  1101                     l626:
  6608  1101  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6609  1102                     l3061:
  6610  1102  30FF               	movlw	255
  6611  1103  05F0               	andwf	__tdiv_to_l_@f1,f
  6612  1104  30FF               	movlw	255
  6613  1105  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6614  1106  3000               	movlw	0
  6615  1107  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6616  1108                     l3063:
  6617  1108  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6618  1109  30FF               	movlw	255
  6619  110A  05F4               	andwf	__tdiv_to_l_@f2,f
  6620  110B  30FF               	movlw	255
  6621  110C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6622  110D  3000               	movlw	0
  6623  110E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6624  110F  3000               	movlw	0
  6625  1110  00A3               	movwf	__tdiv_to_l_@quot+3
  6626  1111  3000               	movlw	0
  6627  1112  00A2               	movwf	__tdiv_to_l_@quot+2
  6628  1113  3000               	movlw	0
  6629  1114  00A1               	movwf	__tdiv_to_l_@quot+1
  6630  1115  3000               	movlw	0
  6631  1116  00A0               	movwf	__tdiv_to_l_@quot
  6632  1117                     l3065:
  6633  1117  307F               	movlw	127
  6634  1118  02A5               	subwf	__tdiv_to_l_@exp1,f
  6635  1119                     l3067:
  6636  1119  3098               	movlw	152
  6637  111A  0724               	addwf	__tdiv_to_l_@cntr,w
  6638  111B  00F8               	movwf	??__tdiv_to_l_
  6639  111C  0878               	movf	??__tdiv_to_l_,w
  6640  111D  02A5               	subwf	__tdiv_to_l_@exp1,f
  6641  111E  3018               	movlw	24
  6642  111F  00F8               	movwf	??__tdiv_to_l_
  6643  1120  0878               	movf	??__tdiv_to_l_,w
  6644  1121  00A4               	movwf	__tdiv_to_l_@cntr
  6645  1122                     l3069:
  6646  1122  3001               	movlw	1
  6647  1123  00F8               	movwf	??__tdiv_to_l_
  6648  1124                     u4555:
  6649  1124  1003               	clrc
  6650  1125  0DA0               	rlf	__tdiv_to_l_@quot,f
  6651  1126  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6652  1127  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6653  1128  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6654  1129  0BF8               	decfsz	??__tdiv_to_l_,f
  6655  112A  2924               	goto	u4555
  6656  112B                     l3071:
  6657  112B  0876               	movf	__tdiv_to_l_@f2+2,w
  6658  112C  0272               	subwf	__tdiv_to_l_@f1+2,w
  6659  112D  1D03               	skipz
  6660  112E  2935               	goto	u4565
  6661  112F  0875               	movf	__tdiv_to_l_@f2+1,w
  6662  1130  0271               	subwf	__tdiv_to_l_@f1+1,w
  6663  1131  1D03               	skipz
  6664  1132  2935               	goto	u4565
  6665  1133  0874               	movf	__tdiv_to_l_@f2,w
  6666  1134  0270               	subwf	__tdiv_to_l_@f1,w
  6667  1135                     u4565:
  6668  1135  1C03               	skipc
  6669  1136  2938               	goto	u4561
  6670  1137  2939               	goto	u4560
  6671  1138                     u4561:
  6672  1138  2944               	goto	l3077
  6673  1139                     u4560:
  6674  1139                     l3073:
  6675  1139  0874               	movf	__tdiv_to_l_@f2,w
  6676  113A  02F0               	subwf	__tdiv_to_l_@f1,f
  6677  113B  0875               	movf	__tdiv_to_l_@f2+1,w
  6678  113C  1C03               	skipc
  6679  113D  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6680  113E  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6681  113F  0876               	movf	__tdiv_to_l_@f2+2,w
  6682  1140  1C03               	skipc
  6683  1141  0A76               	incf	__tdiv_to_l_@f2+2,w
  6684  1142  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6685  1143                     l3075:
  6686  1143  1420               	bsf	__tdiv_to_l_@quot,0
  6687  1144                     l3077:
  6688  1144  3001               	movlw	1
  6689  1145                     u4575:
  6690  1145  1003               	clrc
  6691  1146  0DF0               	rlf	__tdiv_to_l_@f1,f
  6692  1147  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6693  1148  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6694  1149  3EFF               	addlw	-1
  6695  114A  1D03               	skipz
  6696  114B  2945               	goto	u4575
  6697  114C                     l3079:
  6698  114C  3001               	movlw	1
  6699  114D  02A4               	subwf	__tdiv_to_l_@cntr,f
  6700  114E  1D03               	btfss	3,2
  6701  114F  2951               	goto	u4581
  6702  1150  2952               	goto	u4580
  6703  1151                     u4581:
  6704  1151  2922               	goto	l3069
  6705  1152                     u4580:
  6706  1152                     l629:
  6707  1152  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6708  1153  2955               	goto	u4591
  6709  1154  2956               	goto	u4590
  6710  1155                     u4591:
  6711  1155  2970               	goto	l3089
  6712  1156                     u4590:
  6713  1156                     l3081:
  6714  1156  0825               	movf	__tdiv_to_l_@exp1,w
  6715  1157  3A80               	xorlw	128
  6716  1158  3E97               	addlw	151
  6717  1159  1803               	skipnc
  6718  115A  295C               	goto	u4601
  6719  115B  295D               	goto	u4600
  6720  115C                     u4601:
  6721  115C  295E               	goto	l3087
  6722  115D                     u4600:
  6723  115D  28E6               	goto	l3051
  6724  115E                     l3087:
  6725  115E  3001               	movlw	1
  6726  115F                     u4615:
  6727  115F  1003               	clrc
  6728  1160  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6729  1161  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6730  1162  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6731  1163  0CA0               	rrf	__tdiv_to_l_@quot,f
  6732  1164  3EFF               	addlw	-1
  6733  1165  1D03               	skipz
  6734  1166  295F               	goto	u4615
  6735  1167  3001               	movlw	1
  6736  1168  00F8               	movwf	??__tdiv_to_l_
  6737  1169  0878               	movf	??__tdiv_to_l_,w
  6738  116A  07A5               	addwf	__tdiv_to_l_@exp1,f
  6739  116B  1D03               	btfss	3,2
  6740  116C  296E               	goto	u4621
  6741  116D  296F               	goto	u4620
  6742  116E                     u4621:
  6743  116E  295E               	goto	l3087
  6744  116F                     u4620:
  6745  116F  2987               	goto	l3097
  6746  1170                     l3089:
  6747  1170  3018               	movlw	24
  6748  1171  0225               	subwf	__tdiv_to_l_@exp1,w
  6749  1172  1C03               	skipc
  6750  1173  2975               	goto	u4631
  6751  1174  2976               	goto	u4630
  6752  1175                     u4631:
  6753  1175  2982               	goto	l636
  6754  1176                     u4630:
  6755  1176  28E6               	goto	l3051
  6756  1177                     l3095:
  6757  1177  3001               	movlw	1
  6758  1178  00F8               	movwf	??__tdiv_to_l_
  6759  1179                     u4645:
  6760  1179  1003               	clrc
  6761  117A  0DA0               	rlf	__tdiv_to_l_@quot,f
  6762  117B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6763  117C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6764  117D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6765  117E  0BF8               	decfsz	??__tdiv_to_l_,f
  6766  117F  2979               	goto	u4645
  6767  1180  3001               	movlw	1
  6768  1181  02A5               	subwf	__tdiv_to_l_@exp1,f
  6769  1182                     l636:
  6770  1182  0825               	movf	__tdiv_to_l_@exp1,w
  6771  1183  1D03               	btfss	3,2
  6772  1184  2986               	goto	u4651
  6773  1185  2987               	goto	u4650
  6774  1186                     u4651:
  6775  1186  2977               	goto	l3095
  6776  1187                     u4650:
  6777  1187                     l3097:
  6778  1187  0823               	movf	__tdiv_to_l_@quot+3,w
  6779  1188  00F3               	movwf	?__tdiv_to_l_+3
  6780  1189  0822               	movf	__tdiv_to_l_@quot+2,w
  6781  118A  00F2               	movwf	?__tdiv_to_l_+2
  6782  118B  0821               	movf	__tdiv_to_l_@quot+1,w
  6783  118C  00F1               	movwf	?__tdiv_to_l_+1
  6784  118D  0820               	movf	__tdiv_to_l_@quot,w
  6785  118E  00F0               	movwf	?__tdiv_to_l_
  6786  118F                     l625:
  6787  118F  0008               	return
  6788  1190                     __end_of__tdiv_to_l_:
  6789                           
  6790                           	psect	text17
  6791  0882                     __ptext17:	
  6792 ;; *************** function __div_to_l_ *****************
  6793 ;; Defined at:
  6794 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;  f1              4    0[COMMON] unsigned long 
  6797 ;;  f2              4    4[COMMON] unsigned long 
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;  quot            4    0[BANK0 ] unsigned long 
  6800 ;;  exp1            1    5[BANK0 ] unsigned char 
  6801 ;;  cntr            1    4[BANK0 ] unsigned char 
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  4    0[COMMON] unsigned long 
  6804 ;; Registers used:
  6805 ;;		wreg, status,2, status,0
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6811 ;;      Params:         8       0       0       0       0
  6812 ;;      Locals:         0       6       0       0       0
  6813 ;;      Temps:          1       0       0       0       0
  6814 ;;      Totals:         9       6       0       0       0
  6815 ;;Total ram usage:       15 bytes
  6816 ;; Hardware stack levels used:    1
  6817 ;; This function calls:
  6818 ;;		Nothing
  6819 ;; This function is called by:
  6820 ;;		_sprintf
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           
  6825                           ;psect for function __div_to_l_
  6826  0882                     __div_to_l_:
  6827  0882                     l3101:	
  6828                           ;incstack = 0
  6829                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6830                           
  6831  0882  1003               	clrc
  6832  0883  0D72               	rlf	__div_to_l_@f1+2,w
  6833  0884  0D73               	rlf	__div_to_l_@f1+3,w
  6834  0885  00F8               	movwf	??__div_to_l_
  6835  0886  0878               	movf	??__div_to_l_,w
  6836  0887  1283               	bcf	3,5	;RP0=0, select bank0
  6837  0888  1303               	bcf	3,6	;RP1=0, select bank0
  6838  0889  00A5               	movwf	__div_to_l_@exp1
  6839  088A  0825               	movf	__div_to_l_@exp1,w
  6840  088B  1D03               	btfss	3,2
  6841  088C  288E               	goto	u4661
  6842  088D  288F               	goto	u4660
  6843  088E                     u4661:
  6844  088E  2898               	goto	l3107
  6845  088F                     u4660:
  6846  088F                     l3103:
  6847  088F  3000               	movlw	0
  6848  0890  00F3               	movwf	?__div_to_l_+3
  6849  0891  3000               	movlw	0
  6850  0892  00F2               	movwf	?__div_to_l_+2
  6851  0893  3000               	movlw	0
  6852  0894  00F1               	movwf	?__div_to_l_+1
  6853  0895  3000               	movlw	0
  6854  0896  00F0               	movwf	?__div_to_l_
  6855  0897  293F               	goto	l578
  6856  0898                     l3107:
  6857  0898  1003               	clrc
  6858  0899  0D76               	rlf	__div_to_l_@f2+2,w
  6859  089A  0D77               	rlf	__div_to_l_@f2+3,w
  6860  089B  00F8               	movwf	??__div_to_l_
  6861  089C  0878               	movf	??__div_to_l_,w
  6862  089D  00A4               	movwf	__div_to_l_@cntr
  6863  089E  0824               	movf	__div_to_l_@cntr,w
  6864  089F  1D03               	btfss	3,2
  6865  08A0  28A2               	goto	u4671
  6866  08A1  28A3               	goto	u4670
  6867  08A2                     u4671:
  6868  08A2  28A4               	goto	l579
  6869  08A3                     u4670:
  6870  08A3  288F               	goto	l3103
  6871  08A4                     l579:
  6872  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  6873  08A5                     l3113:
  6874  08A5  30FF               	movlw	255
  6875  08A6  05F0               	andwf	__div_to_l_@f1,f
  6876  08A7  30FF               	movlw	255
  6877  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  6878  08A9  30FF               	movlw	255
  6879  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  6880  08AB  3000               	movlw	0
  6881  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  6882  08AD                     l3115:
  6883  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  6884  08AE  30FF               	movlw	255
  6885  08AF  05F4               	andwf	__div_to_l_@f2,f
  6886  08B0  30FF               	movlw	255
  6887  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  6888  08B2  30FF               	movlw	255
  6889  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  6890  08B4  3000               	movlw	0
  6891  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  6892  08B6  3000               	movlw	0
  6893  08B7  00A3               	movwf	__div_to_l_@quot+3
  6894  08B8  3000               	movlw	0
  6895  08B9  00A2               	movwf	__div_to_l_@quot+2
  6896  08BA  3000               	movlw	0
  6897  08BB  00A1               	movwf	__div_to_l_@quot+1
  6898  08BC  3000               	movlw	0
  6899  08BD  00A0               	movwf	__div_to_l_@quot
  6900  08BE                     l3117:
  6901  08BE  307F               	movlw	127
  6902  08BF  02A5               	subwf	__div_to_l_@exp1,f
  6903  08C0                     l3119:
  6904  08C0  30A0               	movlw	160
  6905  08C1  0724               	addwf	__div_to_l_@cntr,w
  6906  08C2  00F8               	movwf	??__div_to_l_
  6907  08C3  0878               	movf	??__div_to_l_,w
  6908  08C4  02A5               	subwf	__div_to_l_@exp1,f
  6909  08C5  3020               	movlw	32
  6910  08C6  00F8               	movwf	??__div_to_l_
  6911  08C7  0878               	movf	??__div_to_l_,w
  6912  08C8  00A4               	movwf	__div_to_l_@cntr
  6913  08C9                     l3121:
  6914  08C9  3001               	movlw	1
  6915  08CA  00F8               	movwf	??__div_to_l_
  6916  08CB                     u4685:
  6917  08CB  1003               	clrc
  6918  08CC  0DA0               	rlf	__div_to_l_@quot,f
  6919  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  6920  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  6921  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  6922  08D0  0BF8               	decfsz	??__div_to_l_,f
  6923  08D1  28CB               	goto	u4685
  6924  08D2                     l3123:
  6925  08D2  0877               	movf	__div_to_l_@f2+3,w
  6926  08D3  0273               	subwf	__div_to_l_@f1+3,w
  6927  08D4  1D03               	skipz
  6928  08D5  28E0               	goto	u4695
  6929  08D6  0876               	movf	__div_to_l_@f2+2,w
  6930  08D7  0272               	subwf	__div_to_l_@f1+2,w
  6931  08D8  1D03               	skipz
  6932  08D9  28E0               	goto	u4695
  6933  08DA  0875               	movf	__div_to_l_@f2+1,w
  6934  08DB  0271               	subwf	__div_to_l_@f1+1,w
  6935  08DC  1D03               	skipz
  6936  08DD  28E0               	goto	u4695
  6937  08DE  0874               	movf	__div_to_l_@f2,w
  6938  08DF  0270               	subwf	__div_to_l_@f1,w
  6939  08E0                     u4695:
  6940  08E0  1C03               	skipc
  6941  08E1  28E3               	goto	u4691
  6942  08E2  28E4               	goto	u4690
  6943  08E3                     u4691:
  6944  08E3  28F3               	goto	l3129
  6945  08E4                     u4690:
  6946  08E4                     l3125:
  6947  08E4  0874               	movf	__div_to_l_@f2,w
  6948  08E5  02F0               	subwf	__div_to_l_@f1,f
  6949  08E6  0875               	movf	__div_to_l_@f2+1,w
  6950  08E7  1C03               	skipc
  6951  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  6952  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  6953  08EA  0876               	movf	__div_to_l_@f2+2,w
  6954  08EB  1C03               	skipc
  6955  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  6956  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  6957  08EE  0877               	movf	__div_to_l_@f2+3,w
  6958  08EF  1C03               	skipc
  6959  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  6960  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  6961  08F2                     l3127:
  6962  08F2  1420               	bsf	__div_to_l_@quot,0
  6963  08F3                     l3129:
  6964  08F3  3001               	movlw	1
  6965  08F4  00F8               	movwf	??__div_to_l_
  6966  08F5                     u4705:
  6967  08F5  1003               	clrc
  6968  08F6  0DF0               	rlf	__div_to_l_@f1,f
  6969  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  6970  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  6971  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  6972  08FA  0BF8               	decfsz	??__div_to_l_,f
  6973  08FB  28F5               	goto	u4705
  6974  08FC                     l3131:
  6975  08FC  3001               	movlw	1
  6976  08FD  02A4               	subwf	__div_to_l_@cntr,f
  6977  08FE  1D03               	btfss	3,2
  6978  08FF  2901               	goto	u4711
  6979  0900  2902               	goto	u4710
  6980  0901                     u4711:
  6981  0901  28C9               	goto	l3121
  6982  0902                     u4710:
  6983  0902                     l582:
  6984  0902  1FA5               	btfss	__div_to_l_@exp1,7
  6985  0903  2905               	goto	u4721
  6986  0904  2906               	goto	u4720
  6987  0905                     u4721:
  6988  0905  2920               	goto	l3141
  6989  0906                     u4720:
  6990  0906                     l3133:
  6991  0906  0825               	movf	__div_to_l_@exp1,w
  6992  0907  3A80               	xorlw	128
  6993  0908  3E9F               	addlw	159
  6994  0909  1803               	skipnc
  6995  090A  290C               	goto	u4731
  6996  090B  290D               	goto	u4730
  6997  090C                     u4731:
  6998  090C  290E               	goto	l3139
  6999  090D                     u4730:
  7000  090D  288F               	goto	l3103
  7001  090E                     l3139:
  7002  090E  3001               	movlw	1
  7003  090F                     u4745:
  7004  090F  1003               	clrc
  7005  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  7006  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  7007  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  7008  0913  0CA0               	rrf	__div_to_l_@quot,f
  7009  0914  3EFF               	addlw	-1
  7010  0915  1D03               	skipz
  7011  0916  290F               	goto	u4745
  7012  0917  3001               	movlw	1
  7013  0918  00F8               	movwf	??__div_to_l_
  7014  0919  0878               	movf	??__div_to_l_,w
  7015  091A  07A5               	addwf	__div_to_l_@exp1,f
  7016  091B  1D03               	btfss	3,2
  7017  091C  291E               	goto	u4751
  7018  091D  291F               	goto	u4750
  7019  091E                     u4751:
  7020  091E  290E               	goto	l3139
  7021  091F                     u4750:
  7022  091F  2937               	goto	l3149
  7023  0920                     l3141:
  7024  0920  3020               	movlw	32
  7025  0921  0225               	subwf	__div_to_l_@exp1,w
  7026  0922  1C03               	skipc
  7027  0923  2925               	goto	u4761
  7028  0924  2926               	goto	u4760
  7029  0925                     u4761:
  7030  0925  2932               	goto	l589
  7031  0926                     u4760:
  7032  0926  288F               	goto	l3103
  7033  0927                     l3147:
  7034  0927  3001               	movlw	1
  7035  0928  00F8               	movwf	??__div_to_l_
  7036  0929                     u4775:
  7037  0929  1003               	clrc
  7038  092A  0DA0               	rlf	__div_to_l_@quot,f
  7039  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  7040  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  7041  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  7042  092E  0BF8               	decfsz	??__div_to_l_,f
  7043  092F  2929               	goto	u4775
  7044  0930  3001               	movlw	1
  7045  0931  02A5               	subwf	__div_to_l_@exp1,f
  7046  0932                     l589:
  7047  0932  0825               	movf	__div_to_l_@exp1,w
  7048  0933  1D03               	btfss	3,2
  7049  0934  2936               	goto	u4781
  7050  0935  2937               	goto	u4780
  7051  0936                     u4781:
  7052  0936  2927               	goto	l3147
  7053  0937                     u4780:
  7054  0937                     l3149:
  7055  0937  0823               	movf	__div_to_l_@quot+3,w
  7056  0938  00F3               	movwf	?__div_to_l_+3
  7057  0939  0822               	movf	__div_to_l_@quot+2,w
  7058  093A  00F2               	movwf	?__div_to_l_+2
  7059  093B  0821               	movf	__div_to_l_@quot+1,w
  7060  093C  00F1               	movwf	?__div_to_l_+1
  7061  093D  0820               	movf	__div_to_l_@quot,w
  7062  093E  00F0               	movwf	?__div_to_l_
  7063  093F                     l578:
  7064  093F  0008               	return
  7065  0940                     __end_of__div_to_l_:
  7066                           
  7067                           	psect	text18
  7068  19C1                     __ptext18:	
  7069 ;; *************** function ___wmul *****************
  7070 ;; Defined at:
  7071 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;  multiplier      2    0[COMMON] unsigned int 
  7074 ;;  multiplicand    2    2[COMMON] unsigned int 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  product         2    4[COMMON] unsigned int 
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  2    0[COMMON] unsigned int 
  7079 ;; Registers used:
  7080 ;;		wreg, status,2, status,0
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7086 ;;      Params:         4       0       0       0       0
  7087 ;;      Locals:         2       0       0       0       0
  7088 ;;      Temps:          0       0       0       0       0
  7089 ;;      Totals:         6       0       0       0       0
  7090 ;;Total ram usage:        6 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; This function calls:
  7093 ;;		Nothing
  7094 ;; This function is called by:
  7095 ;;		_sprintf
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           
  7100                           ;psect for function ___wmul
  7101  19C1                     ___wmul:
  7102  19C1                     l3153:	
  7103                           ;incstack = 0
  7104                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7105                           
  7106  19C1  01F4               	clrf	___wmul@product
  7107  19C2  01F5               	clrf	___wmul@product+1
  7108  19C3                     l3155:
  7109  19C3  1C70               	btfss	___wmul@multiplier,0
  7110  19C4  29C6               	goto	u4791
  7111  19C5  29C7               	goto	u4790
  7112  19C6                     u4791:
  7113  19C6  29CD               	goto	l408
  7114  19C7                     u4790:
  7115  19C7                     l3157:
  7116  19C7  0872               	movf	___wmul@multiplicand,w
  7117  19C8  07F4               	addwf	___wmul@product,f
  7118  19C9  1803               	skipnc
  7119  19CA  0AF5               	incf	___wmul@product+1,f
  7120  19CB  0873               	movf	___wmul@multiplicand+1,w
  7121  19CC  07F5               	addwf	___wmul@product+1,f
  7122  19CD                     l408:
  7123  19CD  3001               	movlw	1
  7124  19CE                     u4805:
  7125  19CE  1003               	clrc
  7126  19CF  0DF2               	rlf	___wmul@multiplicand,f
  7127  19D0  0DF3               	rlf	___wmul@multiplicand+1,f
  7128  19D1  3EFF               	addlw	-1
  7129  19D2  1D03               	skipz
  7130  19D3  29CE               	goto	u4805
  7131  19D4                     l3159:
  7132  19D4  3001               	movlw	1
  7133  19D5                     u4815:
  7134  19D5  1003               	clrc
  7135  19D6  0CF1               	rrf	___wmul@multiplier+1,f
  7136  19D7  0CF0               	rrf	___wmul@multiplier,f
  7137  19D8  3EFF               	addlw	-1
  7138  19D9  1D03               	skipz
  7139  19DA  29D5               	goto	u4815
  7140  19DB                     l3161:
  7141  19DB  0870               	movf	___wmul@multiplier,w
  7142  19DC  0471               	iorwf	___wmul@multiplier+1,w
  7143  19DD  1D03               	btfss	3,2
  7144  19DE  29E0               	goto	u4821
  7145  19DF  29E1               	goto	u4820
  7146  19E0                     u4821:
  7147  19E0  29C3               	goto	l3155
  7148  19E1                     u4820:
  7149  19E1                     l3163:
  7150  19E1  0875               	movf	___wmul@product+1,w
  7151  19E2  00F1               	movwf	?___wmul+1
  7152  19E3  0874               	movf	___wmul@product,w
  7153  19E4  00F0               	movwf	?___wmul
  7154  19E5                     l410:
  7155  19E5  0008               	return
  7156  19E6                     __end_of___wmul:
  7157                           
  7158                           	psect	text19
  7159  1B93                     __ptext19:	
  7160 ;; *************** function ___llmod *****************
  7161 ;; Defined at:
  7162 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7163 ;; Parameters:    Size  Location     Type
  7164 ;;  divisor         4    0[COMMON] unsigned long 
  7165 ;;  dividend        4    4[COMMON] unsigned long 
  7166 ;; Auto vars:     Size  Location     Type
  7167 ;;  counter         1    9[COMMON] unsigned char 
  7168 ;; Return value:  Size  Location     Type
  7169 ;;                  4    0[COMMON] unsigned long 
  7170 ;; Registers used:
  7171 ;;		wreg, status,2, status,0
  7172 ;; Tracked objects:
  7173 ;;		On entry : 0/0
  7174 ;;		On exit  : 0/0
  7175 ;;		Unchanged: 0/0
  7176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7177 ;;      Params:         8       0       0       0       0
  7178 ;;      Locals:         1       0       0       0       0
  7179 ;;      Temps:          1       0       0       0       0
  7180 ;;      Totals:        10       0       0       0       0
  7181 ;;Total ram usage:       10 bytes
  7182 ;; Hardware stack levels used:    1
  7183 ;; This function calls:
  7184 ;;		Nothing
  7185 ;; This function is called by:
  7186 ;;		_sprintf
  7187 ;; This function uses a non-reentrant model
  7188 ;;
  7189                           
  7190                           
  7191                           ;psect for function ___llmod
  7192  1B93                     ___llmod:
  7193  1B93                     l3267:	
  7194                           ;incstack = 0
  7195                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7196                           
  7197  1B93  0873               	movf	___llmod@divisor+3,w
  7198  1B94  0472               	iorwf	___llmod@divisor+2,w
  7199  1B95  0471               	iorwf	___llmod@divisor+1,w
  7200  1B96  0470               	iorwf	___llmod@divisor,w
  7201  1B97  1903               	skipnz
  7202  1B98  2B9A               	goto	u5111
  7203  1B99  2B9B               	goto	u5110
  7204  1B9A                     u5111:
  7205  1B9A  2BDE               	goto	l3283
  7206  1B9B                     u5110:
  7207  1B9B                     l3269:
  7208  1B9B  01F9               	clrf	___llmod@counter
  7209  1B9C  0AF9               	incf	___llmod@counter,f
  7210  1B9D  2BAB               	goto	l3273
  7211  1B9E                     l3271:
  7212  1B9E  3001               	movlw	1
  7213  1B9F  00F8               	movwf	??___llmod
  7214  1BA0                     u5125:
  7215  1BA0  1003               	clrc
  7216  1BA1  0DF0               	rlf	___llmod@divisor,f
  7217  1BA2  0DF1               	rlf	___llmod@divisor+1,f
  7218  1BA3  0DF2               	rlf	___llmod@divisor+2,f
  7219  1BA4  0DF3               	rlf	___llmod@divisor+3,f
  7220  1BA5  0BF8               	decfsz	??___llmod,f
  7221  1BA6  2BA0               	goto	u5125
  7222  1BA7  3001               	movlw	1
  7223  1BA8  00F8               	movwf	??___llmod
  7224  1BA9  0878               	movf	??___llmod,w
  7225  1BAA  07F9               	addwf	___llmod@counter,f
  7226  1BAB                     l3273:
  7227  1BAB  1FF3               	btfss	___llmod@divisor+3,7
  7228  1BAC  2BAE               	goto	u5131
  7229  1BAD  2BAF               	goto	u5130
  7230  1BAE                     u5131:
  7231  1BAE  2B9E               	goto	l3271
  7232  1BAF                     u5130:
  7233  1BAF                     l3275:
  7234  1BAF  0873               	movf	___llmod@divisor+3,w
  7235  1BB0  0277               	subwf	___llmod@dividend+3,w
  7236  1BB1  1D03               	skipz
  7237  1BB2  2BBD               	goto	u5145
  7238  1BB3  0872               	movf	___llmod@divisor+2,w
  7239  1BB4  0276               	subwf	___llmod@dividend+2,w
  7240  1BB5  1D03               	skipz
  7241  1BB6  2BBD               	goto	u5145
  7242  1BB7  0871               	movf	___llmod@divisor+1,w
  7243  1BB8  0275               	subwf	___llmod@dividend+1,w
  7244  1BB9  1D03               	skipz
  7245  1BBA  2BBD               	goto	u5145
  7246  1BBB  0870               	movf	___llmod@divisor,w
  7247  1BBC  0274               	subwf	___llmod@dividend,w
  7248  1BBD                     u5145:
  7249  1BBD  1C03               	skipc
  7250  1BBE  2BC0               	goto	u5141
  7251  1BBF  2BC1               	goto	u5140
  7252  1BC0                     u5141:
  7253  1BC0  2BCF               	goto	l3279
  7254  1BC1                     u5140:
  7255  1BC1                     l3277:
  7256  1BC1  0870               	movf	___llmod@divisor,w
  7257  1BC2  02F4               	subwf	___llmod@dividend,f
  7258  1BC3  0871               	movf	___llmod@divisor+1,w
  7259  1BC4  1C03               	skipc
  7260  1BC5  0F71               	incfsz	___llmod@divisor+1,w
  7261  1BC6  02F5               	subwf	___llmod@dividend+1,f
  7262  1BC7  0872               	movf	___llmod@divisor+2,w
  7263  1BC8  1C03               	skipc
  7264  1BC9  0F72               	incfsz	___llmod@divisor+2,w
  7265  1BCA  02F6               	subwf	___llmod@dividend+2,f
  7266  1BCB  0873               	movf	___llmod@divisor+3,w
  7267  1BCC  1C03               	skipc
  7268  1BCD  0F73               	incfsz	___llmod@divisor+3,w
  7269  1BCE  02F7               	subwf	___llmod@dividend+3,f
  7270  1BCF                     l3279:
  7271  1BCF  3001               	movlw	1
  7272  1BD0                     u5155:
  7273  1BD0  1003               	clrc
  7274  1BD1  0CF3               	rrf	___llmod@divisor+3,f
  7275  1BD2  0CF2               	rrf	___llmod@divisor+2,f
  7276  1BD3  0CF1               	rrf	___llmod@divisor+1,f
  7277  1BD4  0CF0               	rrf	___llmod@divisor,f
  7278  1BD5  3EFF               	addlw	-1
  7279  1BD6  1D03               	skipz
  7280  1BD7  2BD0               	goto	u5155
  7281  1BD8                     l3281:
  7282  1BD8  3001               	movlw	1
  7283  1BD9  02F9               	subwf	___llmod@counter,f
  7284  1BDA  1D03               	btfss	3,2
  7285  1BDB  2BDD               	goto	u5161
  7286  1BDC  2BDE               	goto	u5160
  7287  1BDD                     u5161:
  7288  1BDD  2BAF               	goto	l3275
  7289  1BDE                     u5160:
  7290  1BDE                     l3283:
  7291  1BDE  0877               	movf	___llmod@dividend+3,w
  7292  1BDF  00F3               	movwf	?___llmod+3
  7293  1BE0  0876               	movf	___llmod@dividend+2,w
  7294  1BE1  00F2               	movwf	?___llmod+2
  7295  1BE2  0875               	movf	___llmod@dividend+1,w
  7296  1BE3  00F1               	movwf	?___llmod+1
  7297  1BE4  0874               	movf	___llmod@dividend,w
  7298  1BE5  00F0               	movwf	?___llmod
  7299  1BE6                     l664:
  7300  1BE6  0008               	return
  7301  1BE7                     __end_of___llmod:
  7302                           
  7303                           	psect	text20
  7304  1D58                     __ptext20:	
  7305 ;; *************** function ___lldiv *****************
  7306 ;; Defined at:
  7307 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;  divisor         4    0[COMMON] unsigned long 
  7310 ;;  dividend        4    4[COMMON] unsigned long 
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;  quotient        4    9[COMMON] unsigned long 
  7313 ;;  counter         1   13[COMMON] unsigned char 
  7314 ;; Return value:  Size  Location     Type
  7315 ;;                  4    0[COMMON] unsigned long 
  7316 ;; Registers used:
  7317 ;;		wreg, status,2, status,0
  7318 ;; Tracked objects:
  7319 ;;		On entry : 0/0
  7320 ;;		On exit  : 0/0
  7321 ;;		Unchanged: 0/0
  7322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7323 ;;      Params:         8       0       0       0       0
  7324 ;;      Locals:         5       0       0       0       0
  7325 ;;      Temps:          1       0       0       0       0
  7326 ;;      Totals:        14       0       0       0       0
  7327 ;;Total ram usage:       14 bytes
  7328 ;; Hardware stack levels used:    1
  7329 ;; This function calls:
  7330 ;;		Nothing
  7331 ;; This function is called by:
  7332 ;;		_sprintf
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336                           
  7337                           ;psect for function ___lldiv
  7338  1D58                     ___lldiv:
  7339  1D58                     l3167:	
  7340                           ;incstack = 0
  7341                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7342                           
  7343  1D58  3000               	movlw	0
  7344  1D59  00FC               	movwf	___lldiv@quotient+3
  7345  1D5A  3000               	movlw	0
  7346  1D5B  00FB               	movwf	___lldiv@quotient+2
  7347  1D5C  3000               	movlw	0
  7348  1D5D  00FA               	movwf	___lldiv@quotient+1
  7349  1D5E  3000               	movlw	0
  7350  1D5F  00F9               	movwf	___lldiv@quotient
  7351  1D60  0873               	movf	___lldiv@divisor+3,w
  7352  1D61  0472               	iorwf	___lldiv@divisor+2,w
  7353  1D62  0471               	iorwf	___lldiv@divisor+1,w
  7354  1D63  0470               	iorwf	___lldiv@divisor,w
  7355  1D64  1903               	skipnz
  7356  1D65  2D67               	goto	u4831
  7357  1D66  2D68               	goto	u4830
  7358  1D67                     u4831:
  7359  1D67  2DB5               	goto	l3187
  7360  1D68                     u4830:
  7361  1D68                     l3169:
  7362  1D68  01FD               	clrf	___lldiv@counter
  7363  1D69  0AFD               	incf	___lldiv@counter,f
  7364  1D6A  2D78               	goto	l3173
  7365  1D6B                     l3171:
  7366  1D6B  3001               	movlw	1
  7367  1D6C  00F8               	movwf	??___lldiv
  7368  1D6D                     u4845:
  7369  1D6D  1003               	clrc
  7370  1D6E  0DF0               	rlf	___lldiv@divisor,f
  7371  1D6F  0DF1               	rlf	___lldiv@divisor+1,f
  7372  1D70  0DF2               	rlf	___lldiv@divisor+2,f
  7373  1D71  0DF3               	rlf	___lldiv@divisor+3,f
  7374  1D72  0BF8               	decfsz	??___lldiv,f
  7375  1D73  2D6D               	goto	u4845
  7376  1D74  3001               	movlw	1
  7377  1D75  00F8               	movwf	??___lldiv
  7378  1D76  0878               	movf	??___lldiv,w
  7379  1D77  07FD               	addwf	___lldiv@counter,f
  7380  1D78                     l3173:
  7381  1D78  1FF3               	btfss	___lldiv@divisor+3,7
  7382  1D79  2D7B               	goto	u4851
  7383  1D7A  2D7C               	goto	u4850
  7384  1D7B                     u4851:
  7385  1D7B  2D6B               	goto	l3171
  7386  1D7C                     u4850:
  7387  1D7C                     l3175:
  7388  1D7C  3001               	movlw	1
  7389  1D7D  00F8               	movwf	??___lldiv
  7390  1D7E                     u4865:
  7391  1D7E  1003               	clrc
  7392  1D7F  0DF9               	rlf	___lldiv@quotient,f
  7393  1D80  0DFA               	rlf	___lldiv@quotient+1,f
  7394  1D81  0DFB               	rlf	___lldiv@quotient+2,f
  7395  1D82  0DFC               	rlf	___lldiv@quotient+3,f
  7396  1D83  0BF8               	decfsz	??___lldiv,f
  7397  1D84  2D7E               	goto	u4865
  7398  1D85                     l3177:
  7399  1D85  0873               	movf	___lldiv@divisor+3,w
  7400  1D86  0277               	subwf	___lldiv@dividend+3,w
  7401  1D87  1D03               	skipz
  7402  1D88  2D93               	goto	u4875
  7403  1D89  0872               	movf	___lldiv@divisor+2,w
  7404  1D8A  0276               	subwf	___lldiv@dividend+2,w
  7405  1D8B  1D03               	skipz
  7406  1D8C  2D93               	goto	u4875
  7407  1D8D  0871               	movf	___lldiv@divisor+1,w
  7408  1D8E  0275               	subwf	___lldiv@dividend+1,w
  7409  1D8F  1D03               	skipz
  7410  1D90  2D93               	goto	u4875
  7411  1D91  0870               	movf	___lldiv@divisor,w
  7412  1D92  0274               	subwf	___lldiv@dividend,w
  7413  1D93                     u4875:
  7414  1D93  1C03               	skipc
  7415  1D94  2D96               	goto	u4871
  7416  1D95  2D97               	goto	u4870
  7417  1D96                     u4871:
  7418  1D96  2DA6               	goto	l3183
  7419  1D97                     u4870:
  7420  1D97                     l3179:
  7421  1D97  0870               	movf	___lldiv@divisor,w
  7422  1D98  02F4               	subwf	___lldiv@dividend,f
  7423  1D99  0871               	movf	___lldiv@divisor+1,w
  7424  1D9A  1C03               	skipc
  7425  1D9B  0F71               	incfsz	___lldiv@divisor+1,w
  7426  1D9C  02F5               	subwf	___lldiv@dividend+1,f
  7427  1D9D  0872               	movf	___lldiv@divisor+2,w
  7428  1D9E  1C03               	skipc
  7429  1D9F  0F72               	incfsz	___lldiv@divisor+2,w
  7430  1DA0  02F6               	subwf	___lldiv@dividend+2,f
  7431  1DA1  0873               	movf	___lldiv@divisor+3,w
  7432  1DA2  1C03               	skipc
  7433  1DA3  0F73               	incfsz	___lldiv@divisor+3,w
  7434  1DA4  02F7               	subwf	___lldiv@dividend+3,f
  7435  1DA5                     l3181:
  7436  1DA5  1479               	bsf	___lldiv@quotient,0
  7437  1DA6                     l3183:
  7438  1DA6  3001               	movlw	1
  7439  1DA7                     u4885:
  7440  1DA7  1003               	clrc
  7441  1DA8  0CF3               	rrf	___lldiv@divisor+3,f
  7442  1DA9  0CF2               	rrf	___lldiv@divisor+2,f
  7443  1DAA  0CF1               	rrf	___lldiv@divisor+1,f
  7444  1DAB  0CF0               	rrf	___lldiv@divisor,f
  7445  1DAC  3EFF               	addlw	-1
  7446  1DAD  1D03               	skipz
  7447  1DAE  2DA7               	goto	u4885
  7448  1DAF                     l3185:
  7449  1DAF  3001               	movlw	1
  7450  1DB0  02FD               	subwf	___lldiv@counter,f
  7451  1DB1  1D03               	btfss	3,2
  7452  1DB2  2DB4               	goto	u4891
  7453  1DB3  2DB5               	goto	u4890
  7454  1DB4                     u4891:
  7455  1DB4  2D7C               	goto	l3175
  7456  1DB5                     u4890:
  7457  1DB5                     l3187:
  7458  1DB5  087C               	movf	___lldiv@quotient+3,w
  7459  1DB6  00F3               	movwf	?___lldiv+3
  7460  1DB7  087B               	movf	___lldiv@quotient+2,w
  7461  1DB8  00F2               	movwf	?___lldiv+2
  7462  1DB9  087A               	movf	___lldiv@quotient+1,w
  7463  1DBA  00F1               	movwf	?___lldiv+1
  7464  1DBB  0879               	movf	___lldiv@quotient,w
  7465  1DBC  00F0               	movwf	?___lldiv
  7466  1DBD                     l444:
  7467  1DBD  0008               	return
  7468  1DBE                     __end_of___lldiv:
  7469                           
  7470                           	psect	text21
  7471  0806                     __ptext21:	
  7472 ;; *************** function ___fltol *****************
  7473 ;; Defined at:
  7474 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;  f1              4   49[BANK0 ] unsigned long 
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;  exp1            1   59[BANK0 ] unsigned char 
  7479 ;;  sign1           1   58[BANK0 ] unsigned char 
  7480 ;; Return value:  Size  Location     Type
  7481 ;;                  4   49[BANK0 ] long 
  7482 ;; Registers used:
  7483 ;;		wreg, status,2, status,0
  7484 ;; Tracked objects:
  7485 ;;		On entry : 0/0
  7486 ;;		On exit  : 0/0
  7487 ;;		Unchanged: 0/0
  7488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7489 ;;      Params:         0       4       0       0       0
  7490 ;;      Locals:         0       2       0       0       0
  7491 ;;      Temps:          0       5       0       0       0
  7492 ;;      Totals:         0      11       0       0       0
  7493 ;;Total ram usage:       11 bytes
  7494 ;; Hardware stack levels used:    1
  7495 ;; This function calls:
  7496 ;;		Nothing
  7497 ;; This function is called by:
  7498 ;;		_sprintf
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           
  7503                           ;psect for function ___fltol
  7504  0806                     ___fltol:
  7505  0806                     l3231:	
  7506                           ;incstack = 0
  7507                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7508                           
  7509  0806  1003               	clrc
  7510  0807  1283               	bcf	3,5	;RP0=0, select bank0
  7511  0808  1303               	bcf	3,6	;RP1=0, select bank0
  7512  0809  0D53               	rlf	___fltol@f1+2,w
  7513  080A  0D54               	rlf	___fltol@f1+3,w
  7514  080B  00D5               	movwf	??___fltol
  7515  080C  0855               	movf	??___fltol,w
  7516  080D  00DB               	movwf	___fltol@exp1
  7517  080E  085B               	movf	___fltol@exp1,w
  7518  080F  1D03               	btfss	3,2
  7519  0810  2812               	goto	u5011
  7520  0811  2813               	goto	u5010
  7521  0812                     u5011:
  7522  0812  281C               	goto	l3237
  7523  0813                     u5010:
  7524  0813                     l3233:
  7525  0813  3000               	movlw	0
  7526  0814  00D4               	movwf	?___fltol+3
  7527  0815  3000               	movlw	0
  7528  0816  00D3               	movwf	?___fltol+2
  7529  0817  3000               	movlw	0
  7530  0818  00D2               	movwf	?___fltol+1
  7531  0819  3000               	movlw	0
  7532  081A  00D1               	movwf	?___fltol
  7533  081B  2881               	goto	l611
  7534  081C                     l3237:
  7535  081C  0851               	movf	___fltol@f1,w
  7536  081D  00D5               	movwf	??___fltol
  7537  081E  0852               	movf	___fltol@f1+1,w
  7538  081F  00D6               	movwf	??___fltol+1
  7539  0820  0853               	movf	___fltol@f1+2,w
  7540  0821  00D7               	movwf	??___fltol+2
  7541  0822  0854               	movf	___fltol@f1+3,w
  7542  0823  00D8               	movwf	??___fltol+3
  7543  0824  301F               	movlw	31
  7544  0825                     u5025:
  7545  0825  1003               	clrc
  7546  0826  0CD8               	rrf	??___fltol+3,f
  7547  0827  0CD7               	rrf	??___fltol+2,f
  7548  0828  0CD6               	rrf	??___fltol+1,f
  7549  0829  0CD5               	rrf	??___fltol,f
  7550  082A                     u5020:
  7551  082A  3EFF               	addlw	-1
  7552  082B  1D03               	skipz
  7553  082C  2825               	goto	u5025
  7554  082D  0855               	movf	??___fltol,w
  7555  082E  00D9               	movwf	??___fltol+4
  7556  082F  0859               	movf	??___fltol+4,w
  7557  0830  00DA               	movwf	___fltol@sign1
  7558  0831                     l3239:
  7559  0831  17D3               	bsf	___fltol@f1+2,7
  7560  0832                     l3241:
  7561  0832  30FF               	movlw	255
  7562  0833  05D1               	andwf	___fltol@f1,f
  7563  0834  30FF               	movlw	255
  7564  0835  05D2               	andwf	___fltol@f1+1,f
  7565  0836  30FF               	movlw	255
  7566  0837  05D3               	andwf	___fltol@f1+2,f
  7567  0838  3000               	movlw	0
  7568  0839  05D4               	andwf	___fltol@f1+3,f
  7569  083A                     l3243:
  7570  083A  3096               	movlw	150
  7571  083B  02DB               	subwf	___fltol@exp1,f
  7572  083C                     l3245:
  7573  083C  1FDB               	btfss	___fltol@exp1,7
  7574  083D  283F               	goto	u5031
  7575  083E  2840               	goto	u5030
  7576  083F                     u5031:
  7577  083F  285A               	goto	l3255
  7578  0840                     u5030:
  7579  0840                     l3247:
  7580  0840  085B               	movf	___fltol@exp1,w
  7581  0841  3A80               	xorlw	128
  7582  0842  3E97               	addlw	151
  7583  0843  1803               	skipnc
  7584  0844  2846               	goto	u5041
  7585  0845  2847               	goto	u5040
  7586  0846                     u5041:
  7587  0846  2848               	goto	l3253
  7588  0847                     u5040:
  7589  0847  2813               	goto	l3233
  7590  0848                     l3253:
  7591  0848  3001               	movlw	1
  7592  0849                     u5055:
  7593  0849  1003               	clrc
  7594  084A  0CD4               	rrf	___fltol@f1+3,f
  7595  084B  0CD3               	rrf	___fltol@f1+2,f
  7596  084C  0CD2               	rrf	___fltol@f1+1,f
  7597  084D  0CD1               	rrf	___fltol@f1,f
  7598  084E  3EFF               	addlw	-1
  7599  084F  1D03               	skipz
  7600  0850  2849               	goto	u5055
  7601  0851  3001               	movlw	1
  7602  0852  00D5               	movwf	??___fltol
  7603  0853  0855               	movf	??___fltol,w
  7604  0854  07DB               	addwf	___fltol@exp1,f
  7605  0855  1D03               	btfss	3,2
  7606  0856  2858               	goto	u5061
  7607  0857  2859               	goto	u5060
  7608  0858                     u5061:
  7609  0858  2848               	goto	l3253
  7610  0859                     u5060:
  7611  0859  2871               	goto	l3263
  7612  085A                     l3255:
  7613  085A  3020               	movlw	32
  7614  085B  025B               	subwf	___fltol@exp1,w
  7615  085C  1C03               	skipc
  7616  085D  285F               	goto	u5071
  7617  085E  2860               	goto	u5070
  7618  085F                     u5071:
  7619  085F  286C               	goto	l618
  7620  0860                     u5070:
  7621  0860  2813               	goto	l3233
  7622  0861                     l3261:
  7623  0861  3001               	movlw	1
  7624  0862  00D5               	movwf	??___fltol
  7625  0863                     u5085:
  7626  0863  1003               	clrc
  7627  0864  0DD1               	rlf	___fltol@f1,f
  7628  0865  0DD2               	rlf	___fltol@f1+1,f
  7629  0866  0DD3               	rlf	___fltol@f1+2,f
  7630  0867  0DD4               	rlf	___fltol@f1+3,f
  7631  0868  0BD5               	decfsz	??___fltol,f
  7632  0869  2863               	goto	u5085
  7633  086A  3001               	movlw	1
  7634  086B  02DB               	subwf	___fltol@exp1,f
  7635  086C                     l618:
  7636  086C  085B               	movf	___fltol@exp1,w
  7637  086D  1D03               	btfss	3,2
  7638  086E  2870               	goto	u5091
  7639  086F  2871               	goto	u5090
  7640  0870                     u5091:
  7641  0870  2861               	goto	l3261
  7642  0871                     u5090:
  7643  0871                     l3263:
  7644  0871  085A               	movf	___fltol@sign1,w
  7645  0872  1903               	btfsc	3,2
  7646  0873  2875               	goto	u5101
  7647  0874  2876               	goto	u5100
  7648  0875                     u5101:
  7649  0875  2881               	goto	l621
  7650  0876                     u5100:
  7651  0876                     l3265:
  7652  0876  09D1               	comf	___fltol@f1,f
  7653  0877  09D2               	comf	___fltol@f1+1,f
  7654  0878  09D3               	comf	___fltol@f1+2,f
  7655  0879  09D4               	comf	___fltol@f1+3,f
  7656  087A  0AD1               	incf	___fltol@f1,f
  7657  087B  1903               	skipnz
  7658  087C  0AD2               	incf	___fltol@f1+1,f
  7659  087D  1903               	skipnz
  7660  087E  0AD3               	incf	___fltol@f1+2,f
  7661  087F  1903               	skipnz
  7662  0880  0AD4               	incf	___fltol@f1+3,f
  7663  0881                     l621:
  7664  0881                     l611:
  7665  0881  0008               	return
  7666  0882                     __end_of___fltol:
  7667                           
  7668                           	psect	text22
  7669  1979                     __ptext22:	
  7670 ;; *************** function ___flsub *****************
  7671 ;; Defined at:
  7672 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  a               4   70[BANK0 ] long 
  7675 ;;  b               4   74[BANK0 ] long 
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;		None
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  4   70[BANK0 ] long 
  7680 ;; Registers used:
  7681 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7687 ;;      Params:         0       8       0       0       0
  7688 ;;      Locals:         0       0       0       0       0
  7689 ;;      Temps:          0       0       0       0       0
  7690 ;;      Totals:         0       8       0       0       0
  7691 ;;Total ram usage:        8 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; Hardware stack levels required when called:    1
  7694 ;; This function calls:
  7695 ;;		___fladd
  7696 ;; This function is called by:
  7697 ;;		_sprintf
  7698 ;; This function uses a non-reentrant model
  7699 ;;
  7700                           
  7701                           
  7702                           ;psect for function ___flsub
  7703  1979                     ___flsub:
  7704  1979                     l3287:	
  7705                           ;incstack = 0
  7706                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7707                           
  7708  1979  3080               	movlw	128
  7709  197A  1283               	bcf	3,5	;RP0=0, select bank0
  7710  197B  1303               	bcf	3,6	;RP1=0, select bank0
  7711  197C  06E9               	xorwf	___flsub@a+3,f
  7712  197D                     l3289:
  7713  197D  086D               	movf	___flsub@b+3,w
  7714  197E  00D5               	movwf	___fladd@b+3
  7715  197F  086C               	movf	___flsub@b+2,w
  7716  1980  00D4               	movwf	___fladd@b+2
  7717  1981  086B               	movf	___flsub@b+1,w
  7718  1982  00D3               	movwf	___fladd@b+1
  7719  1983  086A               	movf	___flsub@b,w
  7720  1984  00D2               	movwf	___fladd@b
  7721  1985  0869               	movf	___flsub@a+3,w
  7722  1986  00D9               	movwf	___fladd@a+3
  7723  1987  0868               	movf	___flsub@a+2,w
  7724  1988  00D8               	movwf	___fladd@a+2
  7725  1989  0867               	movf	___flsub@a+1,w
  7726  198A  00D7               	movwf	___fladd@a+1
  7727  198B  0866               	movf	___flsub@a,w
  7728  198C  00D6               	movwf	___fladd@a
  7729  198D  160A  118A  2578  160A  158A  	fcall	___fladd
  7730  1992  1283               	bcf	3,5	;RP0=0, select bank0
  7731  1993  1303               	bcf	3,6	;RP1=0, select bank0
  7732  1994  0855               	movf	?___fladd+3,w
  7733  1995  00E9               	movwf	?___flsub+3
  7734  1996  0854               	movf	?___fladd+2,w
  7735  1997  00E8               	movwf	?___flsub+2
  7736  1998  0853               	movf	?___fladd+1,w
  7737  1999  00E7               	movwf	?___flsub+1
  7738  199A  0852               	movf	?___fladd,w
  7739  199B  00E6               	movwf	?___flsub
  7740  199C                     l781:
  7741  199C  0008               	return
  7742  199D                     __end_of___flsub:
  7743                           
  7744                           	psect	text23
  7745  1578                     __ptext23:	
  7746 ;; *************** function ___fladd *****************
  7747 ;; Defined at:
  7748 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;  b               4   50[BANK0 ] long 
  7751 ;;  a               4   54[BANK0 ] long 
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  grs             1   69[BANK0 ] unsigned char 
  7754 ;;  bexp            1   68[BANK0 ] unsigned char 
  7755 ;;  aexp            1   67[BANK0 ] unsigned char 
  7756 ;;  signs           1   66[BANK0 ] unsigned char 
  7757 ;; Return value:  Size  Location     Type
  7758 ;;                  4   50[BANK0 ] unsigned char 
  7759 ;; Registers used:
  7760 ;;		wreg, status,2, status,0, btemp+1
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7766 ;;      Params:         0       8       0       0       0
  7767 ;;      Locals:         0       4       0       0       0
  7768 ;;      Temps:          0       8       0       0       0
  7769 ;;      Totals:         0      20       0       0       0
  7770 ;;Total ram usage:       20 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; This function calls:
  7773 ;;		Nothing
  7774 ;; This function is called by:
  7775 ;;		_sprintf
  7776 ;;		___flsub
  7777 ;; This function uses a non-reentrant model
  7778 ;;
  7779                           
  7780                           
  7781                           ;psect for function ___fladd
  7782  1578                     ___fladd:
  7783  1578                     l2625:	
  7784                           ;incstack = 0
  7785                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7786                           
  7787  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7788  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7789  157A  0855               	movf	___fladd@b+3,w
  7790  157B  3980               	andlw	128
  7791  157C  00DA               	movwf	??___fladd
  7792  157D  085A               	movf	??___fladd,w
  7793  157E  00E2               	movwf	___fladd@signs
  7794  157F                     l2627:
  7795  157F  0855               	movf	___fladd@b+3,w
  7796  1580  00DA               	movwf	??___fladd
  7797  1581  075A               	addwf	??___fladd,w
  7798  1582  00DB               	movwf	??___fladd+1
  7799  1583  085B               	movf	??___fladd+1,w
  7800  1584  00E4               	movwf	___fladd@bexp
  7801  1585                     l2629:
  7802  1585  1FD4               	btfss	___fladd@b+2,7
  7803  1586  2D88               	goto	u3431
  7804  1587  2D89               	goto	u3430
  7805  1588                     u3431:
  7806  1588  2D8A               	goto	l2633
  7807  1589                     u3430:
  7808  1589                     l2631:
  7809  1589  1464               	bsf	___fladd@bexp,0
  7810  158A                     l2633:
  7811  158A  0864               	movf	___fladd@bexp,w
  7812  158B  1903               	btfsc	3,2
  7813  158C  2D8E               	goto	u3441
  7814  158D  2D8F               	goto	u3440
  7815  158E                     u3441:
  7816  158E  2D9F               	goto	l2643
  7817  158F                     u3440:
  7818  158F                     l2635:
  7819  158F  0A64               	incf	___fladd@bexp,w
  7820  1590  1D03               	btfss	3,2
  7821  1591  2D93               	goto	u3451
  7822  1592  2D94               	goto	u3450
  7823  1593                     u3451:
  7824  1593  2D9C               	goto	l2639
  7825  1594                     u3450:
  7826  1594                     l2637:
  7827  1594  3000               	movlw	0
  7828  1595  00D5               	movwf	___fladd@b+3
  7829  1596  3000               	movlw	0
  7830  1597  00D4               	movwf	___fladd@b+2
  7831  1598  3000               	movlw	0
  7832  1599  00D3               	movwf	___fladd@b+1
  7833  159A  3000               	movlw	0
  7834  159B  00D2               	movwf	___fladd@b
  7835  159C                     l2639:
  7836  159C  17D4               	bsf	___fladd@b+2,7
  7837  159D                     l2641:
  7838  159D  01D5               	clrf	___fladd@b+3
  7839  159E  2DA7               	goto	l2645
  7840  159F                     l2643:
  7841  159F  3000               	movlw	0
  7842  15A0  00D5               	movwf	___fladd@b+3
  7843  15A1  3000               	movlw	0
  7844  15A2  00D4               	movwf	___fladd@b+2
  7845  15A3  3000               	movlw	0
  7846  15A4  00D3               	movwf	___fladd@b+1
  7847  15A5  3000               	movlw	0
  7848  15A6  00D2               	movwf	___fladd@b
  7849  15A7                     l2645:
  7850  15A7  0859               	movf	___fladd@a+3,w
  7851  15A8  3980               	andlw	128
  7852  15A9  00DA               	movwf	??___fladd
  7853  15AA  085A               	movf	??___fladd,w
  7854  15AB  00E3               	movwf	___fladd@aexp
  7855  15AC                     l2647:
  7856  15AC  0863               	movf	___fladd@aexp,w
  7857  15AD  0662               	xorwf	___fladd@signs,w
  7858  15AE  1903               	skipnz
  7859  15AF  2DB1               	goto	u3461
  7860  15B0  2DB2               	goto	u3460
  7861  15B1                     u3461:
  7862  15B1  2DB3               	goto	l2651
  7863  15B2                     u3460:
  7864  15B2                     l2649:
  7865  15B2  1762               	bsf	___fladd@signs,6
  7866  15B3                     l2651:
  7867  15B3  0859               	movf	___fladd@a+3,w
  7868  15B4  00DA               	movwf	??___fladd
  7869  15B5  075A               	addwf	??___fladd,w
  7870  15B6  00DB               	movwf	??___fladd+1
  7871  15B7  085B               	movf	??___fladd+1,w
  7872  15B8  00E3               	movwf	___fladd@aexp
  7873  15B9                     l2653:
  7874  15B9  1FD8               	btfss	___fladd@a+2,7
  7875  15BA  2DBC               	goto	u3471
  7876  15BB  2DBD               	goto	u3470
  7877  15BC                     u3471:
  7878  15BC  2DBE               	goto	l2657
  7879  15BD                     u3470:
  7880  15BD                     l2655:
  7881  15BD  1463               	bsf	___fladd@aexp,0
  7882  15BE                     l2657:
  7883  15BE  0863               	movf	___fladd@aexp,w
  7884  15BF  1903               	btfsc	3,2
  7885  15C0  2DC2               	goto	u3481
  7886  15C1  2DC3               	goto	u3480
  7887  15C2                     u3481:
  7888  15C2  2DD3               	goto	l2667
  7889  15C3                     u3480:
  7890  15C3                     l2659:
  7891  15C3  0A63               	incf	___fladd@aexp,w
  7892  15C4  1D03               	btfss	3,2
  7893  15C5  2DC7               	goto	u3491
  7894  15C6  2DC8               	goto	u3490
  7895  15C7                     u3491:
  7896  15C7  2DD0               	goto	l2663
  7897  15C8                     u3490:
  7898  15C8                     l2661:
  7899  15C8  3000               	movlw	0
  7900  15C9  00D9               	movwf	___fladd@a+3
  7901  15CA  3000               	movlw	0
  7902  15CB  00D8               	movwf	___fladd@a+2
  7903  15CC  3000               	movlw	0
  7904  15CD  00D7               	movwf	___fladd@a+1
  7905  15CE  3000               	movlw	0
  7906  15CF  00D6               	movwf	___fladd@a
  7907  15D0                     l2663:
  7908  15D0  17D8               	bsf	___fladd@a+2,7
  7909  15D1                     l2665:
  7910  15D1  01D9               	clrf	___fladd@a+3
  7911  15D2  2DDB               	goto	l735
  7912  15D3                     l2667:
  7913  15D3  3000               	movlw	0
  7914  15D4  00D9               	movwf	___fladd@a+3
  7915  15D5  3000               	movlw	0
  7916  15D6  00D8               	movwf	___fladd@a+2
  7917  15D7  3000               	movlw	0
  7918  15D8  00D7               	movwf	___fladd@a+1
  7919  15D9  3000               	movlw	0
  7920  15DA  00D6               	movwf	___fladd@a
  7921  15DB                     l735:
  7922  15DB  0864               	movf	___fladd@bexp,w
  7923  15DC  0263               	subwf	___fladd@aexp,w
  7924  15DD  1803               	skipnc
  7925  15DE  2DE0               	goto	u3501
  7926  15DF  2DE1               	goto	u3500
  7927  15E0                     u3501:
  7928  15E0  2E25               	goto	l2703
  7929  15E1                     u3500:
  7930  15E1                     l2669:
  7931  15E1  1F62               	btfss	___fladd@signs,6
  7932  15E2  2DE4               	goto	u3511
  7933  15E3  2DE5               	goto	u3510
  7934  15E4                     u3511:
  7935  15E4  2DE9               	goto	l2673
  7936  15E5                     u3510:
  7937  15E5                     l2671:
  7938  15E5  3080               	movlw	128
  7939  15E6  00DA               	movwf	??___fladd
  7940  15E7  085A               	movf	??___fladd,w
  7941  15E8  06E2               	xorwf	___fladd@signs,f
  7942  15E9                     l2673:
  7943  15E9  0864               	movf	___fladd@bexp,w
  7944  15EA  00DA               	movwf	??___fladd
  7945  15EB  085A               	movf	??___fladd,w
  7946  15EC  00E5               	movwf	___fladd@grs
  7947  15ED                     l2675:
  7948  15ED  0863               	movf	___fladd@aexp,w
  7949  15EE  00DA               	movwf	??___fladd
  7950  15EF  085A               	movf	??___fladd,w
  7951  15F0  00E4               	movwf	___fladd@bexp
  7952  15F1                     l2677:
  7953  15F1  0865               	movf	___fladd@grs,w
  7954  15F2  00DA               	movwf	??___fladd
  7955  15F3  085A               	movf	??___fladd,w
  7956  15F4  00E3               	movwf	___fladd@aexp
  7957  15F5                     l2679:
  7958  15F5  0852               	movf	___fladd@b,w
  7959  15F6  00DA               	movwf	??___fladd
  7960  15F7  085A               	movf	??___fladd,w
  7961  15F8  00E5               	movwf	___fladd@grs
  7962  15F9                     l2681:
  7963  15F9  0856               	movf	___fladd@a,w
  7964  15FA  00DA               	movwf	??___fladd
  7965  15FB  085A               	movf	??___fladd,w
  7966  15FC  00D2               	movwf	___fladd@b
  7967  15FD                     l2683:
  7968  15FD  0865               	movf	___fladd@grs,w
  7969  15FE  00DA               	movwf	??___fladd
  7970  15FF  085A               	movf	??___fladd,w
  7971  1600  00D6               	movwf	___fladd@a
  7972  1601                     l2685:
  7973  1601  0853               	movf	___fladd@b+1,w
  7974  1602  00DA               	movwf	??___fladd
  7975  1603  085A               	movf	??___fladd,w
  7976  1604  00E5               	movwf	___fladd@grs
  7977  1605                     l2687:
  7978  1605  0857               	movf	___fladd@a+1,w
  7979  1606  00DA               	movwf	??___fladd
  7980  1607  085A               	movf	??___fladd,w
  7981  1608  00D3               	movwf	___fladd@b+1
  7982  1609                     l2689:
  7983  1609  0865               	movf	___fladd@grs,w
  7984  160A  00DA               	movwf	??___fladd
  7985  160B  085A               	movf	??___fladd,w
  7986  160C  00D7               	movwf	___fladd@a+1
  7987  160D                     l2691:
  7988  160D  0854               	movf	___fladd@b+2,w
  7989  160E  00DA               	movwf	??___fladd
  7990  160F  085A               	movf	??___fladd,w
  7991  1610  00E5               	movwf	___fladd@grs
  7992  1611                     l2693:
  7993  1611  0858               	movf	___fladd@a+2,w
  7994  1612  00DA               	movwf	??___fladd
  7995  1613  085A               	movf	??___fladd,w
  7996  1614  00D4               	movwf	___fladd@b+2
  7997  1615                     l2695:
  7998  1615  0865               	movf	___fladd@grs,w
  7999  1616  00DA               	movwf	??___fladd
  8000  1617  085A               	movf	??___fladd,w
  8001  1618  00D8               	movwf	___fladd@a+2
  8002  1619                     l2697:
  8003  1619  0855               	movf	___fladd@b+3,w
  8004  161A  00DA               	movwf	??___fladd
  8005  161B  085A               	movf	??___fladd,w
  8006  161C  00E5               	movwf	___fladd@grs
  8007  161D                     l2699:
  8008  161D  0859               	movf	___fladd@a+3,w
  8009  161E  00DA               	movwf	??___fladd
  8010  161F  085A               	movf	??___fladd,w
  8011  1620  00D5               	movwf	___fladd@b+3
  8012  1621                     l2701:
  8013  1621  0865               	movf	___fladd@grs,w
  8014  1622  00DA               	movwf	??___fladd
  8015  1623  085A               	movf	??___fladd,w
  8016  1624  00D9               	movwf	___fladd@a+3
  8017  1625                     l2703:
  8018  1625  01E5               	clrf	___fladd@grs
  8019  1626                     l2705:
  8020  1626  0863               	movf	___fladd@aexp,w
  8021  1627  00DA               	movwf	??___fladd
  8022  1628  01DB               	clrf	??___fladd+1
  8023  1629  085B               	movf	??___fladd+1,w
  8024  162A  00DD               	movwf	??___fladd+3
  8025  162B  0864               	movf	___fladd@bexp,w
  8026  162C  025A               	subwf	??___fladd,w
  8027  162D  00DC               	movwf	??___fladd+2
  8028  162E  1C03               	skipc
  8029  162F  03DD               	decf	??___fladd+3,f
  8030  1630  085D               	movf	??___fladd+3,w
  8031  1631  3A80               	xorlw	128
  8032  1632  00FF               	movwf	btemp+1
  8033  1633  3080               	movlw	128
  8034  1634  027F               	subwf	btemp+1,w
  8035  1635  1D03               	skipz
  8036  1636  2E39               	goto	u3525
  8037  1637  301A               	movlw	26
  8038  1638  025C               	subwf	??___fladd+2,w
  8039  1639                     u3525:
  8040  1639  1C03               	skipc
  8041  163A  2E3C               	goto	u3521
  8042  163B  2E3D               	goto	u3520
  8043  163C                     u3521:
  8044  163C  2E7A               	goto	l2721
  8045  163D                     u3520:
  8046  163D                     l2707:
  8047  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8048  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8049  163F  0855               	movf	___fladd@b+3,w
  8050  1640  0454               	iorwf	___fladd@b+2,w
  8051  1641  0453               	iorwf	___fladd@b+1,w
  8052  1642  0452               	iorwf	___fladd@b,w
  8053  1643  1D03               	skipz
  8054  1644  2E46               	goto	u3531
  8055  1645  2E48               	goto	u3530
  8056  1646                     u3531:
  8057  1646  3001               	movlw	1
  8058  1647  2E49               	goto	u3540
  8059  1648                     u3530:
  8060  1648  3000               	movlw	0
  8061  1649                     u3540:
  8062  1649  00DA               	movwf	??___fladd
  8063  164A  085A               	movf	??___fladd,w
  8064  164B  00E5               	movwf	___fladd@grs
  8065  164C  3000               	movlw	0
  8066  164D  00D5               	movwf	___fladd@b+3
  8067  164E  3000               	movlw	0
  8068  164F  00D4               	movwf	___fladd@b+2
  8069  1650  3000               	movlw	0
  8070  1651  00D3               	movwf	___fladd@b+1
  8071  1652  3000               	movlw	0
  8072  1653  00D2               	movwf	___fladd@b
  8073  1654  0863               	movf	___fladd@aexp,w
  8074  1655  00DA               	movwf	??___fladd
  8075  1656  085A               	movf	??___fladd,w
  8076  1657  00E4               	movwf	___fladd@bexp
  8077  1658  2E82               	goto	l739
  8078  1659                     l741:
  8079  1659  1C65               	btfss	___fladd@grs,0
  8080  165A  2E5C               	goto	u3551
  8081  165B  2E5D               	goto	u3550
  8082  165C                     u3551:
  8083  165C  2E66               	goto	l2711
  8084  165D                     u3550:
  8085  165D                     l2709:
  8086  165D  0865               	movf	___fladd@grs,w
  8087  165E  00DA               	movwf	??___fladd
  8088  165F  1003               	clrc
  8089  1660  0C5A               	rrf	??___fladd,w
  8090  1661  3801               	iorlw	1
  8091  1662  00DB               	movwf	??___fladd+1
  8092  1663  085B               	movf	??___fladd+1,w
  8093  1664  00E5               	movwf	___fladd@grs
  8094  1665  2E68               	goto	l2713
  8095  1666                     l2711:
  8096  1666  1003               	clrc
  8097  1667  0CE5               	rrf	___fladd@grs,f
  8098  1668                     l2713:
  8099  1668  1C52               	btfss	___fladd@b,0
  8100  1669  2E6B               	goto	u3561
  8101  166A  2E6C               	goto	u3560
  8102  166B                     u3561:
  8103  166B  2E6D               	goto	l2717
  8104  166C                     u3560:
  8105  166C                     l2715:
  8106  166C  17E5               	bsf	___fladd@grs,7
  8107  166D                     l2717:
  8108  166D  3001               	movlw	1
  8109  166E  00DA               	movwf	??___fladd
  8110  166F                     u3575:
  8111  166F  0D55               	rlf	___fladd@b+3,w
  8112  1670  0CD5               	rrf	___fladd@b+3,f
  8113  1671  0CD4               	rrf	___fladd@b+2,f
  8114  1672  0CD3               	rrf	___fladd@b+1,f
  8115  1673  0CD2               	rrf	___fladd@b,f
  8116  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8117  1675  2E6F               	goto	u3575
  8118  1676                     l2719:
  8119  1676  3001               	movlw	1
  8120  1677  00DA               	movwf	??___fladd
  8121  1678  085A               	movf	??___fladd,w
  8122  1679  07E4               	addwf	___fladd@bexp,f
  8123  167A                     l2721:
  8124  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8125  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8126  167C  0863               	movf	___fladd@aexp,w
  8127  167D  0264               	subwf	___fladd@bexp,w
  8128  167E  1C03               	skipc
  8129  167F  2E81               	goto	u3581
  8130  1680  2E82               	goto	u3580
  8131  1681                     u3581:
  8132  1681  2E59               	goto	l741
  8133  1682                     u3580:
  8134  1682                     l739:
  8135  1682  1B62               	btfsc	___fladd@signs,6
  8136  1683  2E85               	goto	u3591
  8137  1684  2E86               	goto	u3590
  8138  1685                     u3591:
  8139  1685  2ED1               	goto	l2747
  8140  1686                     u3590:
  8141  1686                     l2723:
  8142  1686  0864               	movf	___fladd@bexp,w
  8143  1687  1D03               	btfss	3,2
  8144  1688  2E8A               	goto	u3601
  8145  1689  2E8B               	goto	u3600
  8146  168A                     u3601:
  8147  168A  2E94               	goto	l2729
  8148  168B                     u3600:
  8149  168B                     l2725:
  8150  168B  3000               	movlw	0
  8151  168C  00D5               	movwf	?___fladd+3
  8152  168D  3000               	movlw	0
  8153  168E  00D4               	movwf	?___fladd+2
  8154  168F  3000               	movlw	0
  8155  1690  00D3               	movwf	?___fladd+1
  8156  1691  3000               	movlw	0
  8157  1692  00D2               	movwf	?___fladd
  8158  1693  2FFF               	goto	l748
  8159  1694                     l2729:
  8160  1694  0856               	movf	___fladd@a,w
  8161  1695  07D2               	addwf	___fladd@b,f
  8162  1696  0857               	movf	___fladd@a+1,w
  8163  1697  1103               	clrz
  8164  1698  1803               	skipnc
  8165  1699  3E01               	addlw	1
  8166  169A  1903               	skipnz
  8167  169B  2E9D               	goto	u3611
  8168  169C  07D3               	addwf	___fladd@b+1,f
  8169  169D                     u3611:
  8170  169D  0858               	movf	___fladd@a+2,w
  8171  169E  1103               	clrz
  8172  169F  1803               	skipnc
  8173  16A0  3E01               	addlw	1
  8174  16A1  1903               	skipnz
  8175  16A2  2EA4               	goto	u3612
  8176  16A3  07D4               	addwf	___fladd@b+2,f
  8177  16A4                     u3612:
  8178  16A4  0859               	movf	___fladd@a+3,w
  8179  16A5  1103               	clrz
  8180  16A6  1803               	skipnc
  8181  16A7  3E01               	addlw	1
  8182  16A8  1903               	skipnz
  8183  16A9  2EAB               	goto	u3613
  8184  16AA  07D5               	addwf	___fladd@b+3,f
  8185  16AB                     u3613:
  8186  16AB                     l2731:
  8187  16AB  1C55               	btfss	___fladd@b+3,0
  8188  16AC  2EAE               	goto	u3621
  8189  16AD  2EAF               	goto	u3620
  8190  16AE                     u3621:
  8191  16AE  2F85               	goto	l2781
  8192  16AF                     u3620:
  8193  16AF                     l2733:
  8194  16AF  1C65               	btfss	___fladd@grs,0
  8195  16B0  2EB2               	goto	u3631
  8196  16B1  2EB3               	goto	u3630
  8197  16B2                     u3631:
  8198  16B2  2EBC               	goto	l2737
  8199  16B3                     u3630:
  8200  16B3                     l2735:
  8201  16B3  0865               	movf	___fladd@grs,w
  8202  16B4  00DA               	movwf	??___fladd
  8203  16B5  1003               	clrc
  8204  16B6  0C5A               	rrf	??___fladd,w
  8205  16B7  3801               	iorlw	1
  8206  16B8  00DB               	movwf	??___fladd+1
  8207  16B9  085B               	movf	??___fladd+1,w
  8208  16BA  00E5               	movwf	___fladd@grs
  8209  16BB  2EBE               	goto	l2739
  8210  16BC                     l2737:
  8211  16BC  1003               	clrc
  8212  16BD  0CE5               	rrf	___fladd@grs,f
  8213  16BE                     l2739:
  8214  16BE  1C52               	btfss	___fladd@b,0
  8215  16BF  2EC1               	goto	u3641
  8216  16C0  2EC2               	goto	u3640
  8217  16C1                     u3641:
  8218  16C1  2EC3               	goto	l2743
  8219  16C2                     u3640:
  8220  16C2                     l2741:
  8221  16C2  17E5               	bsf	___fladd@grs,7
  8222  16C3                     l2743:
  8223  16C3  3001               	movlw	1
  8224  16C4  00DA               	movwf	??___fladd
  8225  16C5                     u3655:
  8226  16C5  0D55               	rlf	___fladd@b+3,w
  8227  16C6  0CD5               	rrf	___fladd@b+3,f
  8228  16C7  0CD4               	rrf	___fladd@b+2,f
  8229  16C8  0CD3               	rrf	___fladd@b+1,f
  8230  16C9  0CD2               	rrf	___fladd@b,f
  8231  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  8232  16CB  2EC5               	goto	u3655
  8233  16CC                     l2745:
  8234  16CC  3001               	movlw	1
  8235  16CD  00DA               	movwf	??___fladd
  8236  16CE  085A               	movf	??___fladd,w
  8237  16CF  07E4               	addwf	___fladd@bexp,f
  8238  16D0  2F85               	goto	l2781
  8239  16D1                     l2747:
  8240  16D1  0855               	movf	___fladd@b+3,w
  8241  16D2  3A80               	xorlw	128
  8242  16D3  00FF               	movwf	btemp+1
  8243  16D4  0859               	movf	___fladd@a+3,w
  8244  16D5  3A80               	xorlw	128
  8245  16D6  027F               	subwf	btemp+1,w
  8246  16D7  1D03               	skipz
  8247  16D8  2EE3               	goto	u3663
  8248  16D9  0858               	movf	___fladd@a+2,w
  8249  16DA  0254               	subwf	___fladd@b+2,w
  8250  16DB  1D03               	skipz
  8251  16DC  2EE3               	goto	u3663
  8252  16DD  0857               	movf	___fladd@a+1,w
  8253  16DE  0253               	subwf	___fladd@b+1,w
  8254  16DF  1D03               	skipz
  8255  16E0  2EE3               	goto	u3663
  8256  16E1  0856               	movf	___fladd@a,w
  8257  16E2  0252               	subwf	___fladd@b,w
  8258  16E3                     u3663:
  8259  16E3  1803               	skipnc
  8260  16E4  2EE6               	goto	u3661
  8261  16E5  2EE7               	goto	u3660
  8262  16E6                     u3661:
  8263  16E6  2F3F               	goto	l2757
  8264  16E7                     u3660:
  8265  16E7                     l2749:
  8266  16E7  30FF               	movlw	255
  8267  16E8  00DA               	movwf	??___fladd
  8268  16E9  30FF               	movlw	255
  8269  16EA  00DB               	movwf	??___fladd+1
  8270  16EB  30FF               	movlw	255
  8271  16EC  00DC               	movwf	??___fladd+2
  8272  16ED  30FF               	movlw	255
  8273  16EE  00DD               	movwf	??___fladd+3
  8274  16EF  0856               	movf	___fladd@a,w
  8275  16F0  00DE               	movwf	??___fladd+4
  8276  16F1  0857               	movf	___fladd@a+1,w
  8277  16F2  00DF               	movwf	??___fladd+5
  8278  16F3  0858               	movf	___fladd@a+2,w
  8279  16F4  00E0               	movwf	??___fladd+6
  8280  16F5  0859               	movf	___fladd@a+3,w
  8281  16F6  00E1               	movwf	??___fladd+7
  8282  16F7  0852               	movf	___fladd@b,w
  8283  16F8  02DE               	subwf	??___fladd+4,f
  8284  16F9  0853               	movf	___fladd@b+1,w
  8285  16FA  1C03               	skipc
  8286  16FB  0F53               	incfsz	___fladd@b+1,w
  8287  16FC  2EFE               	goto	u3671
  8288  16FD  2EFF               	goto	u3672
  8289  16FE                     u3671:
  8290  16FE  02DF               	subwf	??___fladd+5,f
  8291  16FF                     u3672:
  8292  16FF  0854               	movf	___fladd@b+2,w
  8293  1700  1C03               	skipc
  8294  1701  0F54               	incfsz	___fladd@b+2,w
  8295  1702  2F04               	goto	u3673
  8296  1703  2F05               	goto	u3674
  8297  1704                     u3673:
  8298  1704  02E0               	subwf	??___fladd+6,f
  8299  1705                     u3674:
  8300  1705  0855               	movf	___fladd@b+3,w
  8301  1706  1C03               	skipc
  8302  1707  0F55               	incfsz	___fladd@b+3,w
  8303  1708  2F0A               	goto	u3675
  8304  1709  2F0B               	goto	u3676
  8305  170A                     u3675:
  8306  170A  02E1               	subwf	??___fladd+7,f
  8307  170B                     u3676:
  8308  170B  085E               	movf	??___fladd+4,w
  8309  170C  07DA               	addwf	??___fladd,f
  8310  170D  085F               	movf	??___fladd+5,w
  8311  170E  1803               	skipnc
  8312  170F  0F5F               	incfsz	??___fladd+5,w
  8313  1710  2F12               	goto	u3680
  8314  1711  2F13               	goto	u3681
  8315  1712                     u3680:
  8316  1712  07DB               	addwf	??___fladd+1,f
  8317  1713                     u3681:
  8318  1713  0860               	movf	??___fladd+6,w
  8319  1714  1803               	skipnc
  8320  1715  0F60               	incfsz	??___fladd+6,w
  8321  1716  2F18               	goto	u3682
  8322  1717  2F19               	goto	u3683
  8323  1718                     u3682:
  8324  1718  07DC               	addwf	??___fladd+2,f
  8325  1719                     u3683:
  8326  1719  0861               	movf	??___fladd+7,w
  8327  171A  1803               	skipnc
  8328  171B  0A61               	incf	??___fladd+7,w
  8329  171C  07DD               	addwf	??___fladd+3,f
  8330  171D  085D               	movf	??___fladd+3,w
  8331  171E  00D5               	movwf	___fladd@b+3
  8332  171F  085C               	movf	??___fladd+2,w
  8333  1720  00D4               	movwf	___fladd@b+2
  8334  1721  085B               	movf	??___fladd+1,w
  8335  1722  00D3               	movwf	___fladd@b+1
  8336  1723  085A               	movf	??___fladd,w
  8337  1724  00D2               	movwf	___fladd@b
  8338  1725                     l2751:
  8339  1725  3080               	movlw	128
  8340  1726  00DA               	movwf	??___fladd
  8341  1727  085A               	movf	??___fladd,w
  8342  1728  06E2               	xorwf	___fladd@signs,f
  8343  1729  09E5               	comf	___fladd@grs,f
  8344  172A  0AE5               	incf	___fladd@grs,f
  8345  172B                     l2753:
  8346  172B  0865               	movf	___fladd@grs,w
  8347  172C  1D03               	btfss	3,2
  8348  172D  2F2F               	goto	u3691
  8349  172E  2F30               	goto	u3690
  8350  172F                     u3691:
  8351  172F  2F4D               	goto	l756
  8352  1730                     u3690:
  8353  1730                     l2755:
  8354  1730  3001               	movlw	1
  8355  1731  07D2               	addwf	___fladd@b,f
  8356  1732  3000               	movlw	0
  8357  1733  1803               	skipnc
  8358  1734  3001               	movlw	1
  8359  1735  07D3               	addwf	___fladd@b+1,f
  8360  1736  3000               	movlw	0
  8361  1737  1803               	skipnc
  8362  1738  3001               	movlw	1
  8363  1739  07D4               	addwf	___fladd@b+2,f
  8364  173A  3000               	movlw	0
  8365  173B  1803               	skipnc
  8366  173C  3001               	movlw	1
  8367  173D  07D5               	addwf	___fladd@b+3,f
  8368  173E  2F4D               	goto	l756
  8369  173F                     l2757:
  8370  173F  0856               	movf	___fladd@a,w
  8371  1740  02D2               	subwf	___fladd@b,f
  8372  1741  0857               	movf	___fladd@a+1,w
  8373  1742  1C03               	skipc
  8374  1743  0F57               	incfsz	___fladd@a+1,w
  8375  1744  02D3               	subwf	___fladd@b+1,f
  8376  1745  0858               	movf	___fladd@a+2,w
  8377  1746  1C03               	skipc
  8378  1747  0F58               	incfsz	___fladd@a+2,w
  8379  1748  02D4               	subwf	___fladd@b+2,f
  8380  1749  0859               	movf	___fladd@a+3,w
  8381  174A  1C03               	skipc
  8382  174B  0F59               	incfsz	___fladd@a+3,w
  8383  174C  02D5               	subwf	___fladd@b+3,f
  8384  174D                     l756:
  8385  174D  0855               	movf	___fladd@b+3,w
  8386  174E  0454               	iorwf	___fladd@b+2,w
  8387  174F  0453               	iorwf	___fladd@b+1,w
  8388  1750  0452               	iorwf	___fladd@b,w
  8389  1751  1D03               	skipz
  8390  1752  2F54               	goto	u3701
  8391  1753  2F55               	goto	u3700
  8392  1754                     u3701:
  8393  1754  2F81               	goto	l2779
  8394  1755                     u3700:
  8395  1755                     l2759:
  8396  1755  0865               	movf	___fladd@grs,w
  8397  1756  1D03               	btfss	3,2
  8398  1757  2F59               	goto	u3711
  8399  1758  2F5A               	goto	u3710
  8400  1759                     u3711:
  8401  1759  2F81               	goto	l2779
  8402  175A                     u3710:
  8403  175A                     l2761:
  8404  175A  3000               	movlw	0
  8405  175B  00D5               	movwf	?___fladd+3
  8406  175C  3000               	movlw	0
  8407  175D  00D4               	movwf	?___fladd+2
  8408  175E  3000               	movlw	0
  8409  175F  00D3               	movwf	?___fladd+1
  8410  1760  3000               	movlw	0
  8411  1761  00D2               	movwf	?___fladd
  8412  1762  2FFF               	goto	l748
  8413  1763                     l2765:
  8414  1763  3001               	movlw	1
  8415  1764  00DA               	movwf	??___fladd
  8416  1765                     u3725:
  8417  1765  1003               	clrc
  8418  1766  0DD2               	rlf	___fladd@b,f
  8419  1767  0DD3               	rlf	___fladd@b+1,f
  8420  1768  0DD4               	rlf	___fladd@b+2,f
  8421  1769  0DD5               	rlf	___fladd@b+3,f
  8422  176A  0BDA               	decfsz	??___fladd,f
  8423  176B  2F65               	goto	u3725
  8424  176C                     l2767:
  8425  176C  1FE5               	btfss	___fladd@grs,7
  8426  176D  2F6F               	goto	u3731
  8427  176E  2F70               	goto	u3730
  8428  176F                     u3731:
  8429  176F  2F71               	goto	l760
  8430  1770                     u3730:
  8431  1770                     l2769:
  8432  1770  1452               	bsf	___fladd@b,0
  8433  1771                     l760:
  8434  1771  1C65               	btfss	___fladd@grs,0
  8435  1772  2F74               	goto	u3741
  8436  1773  2F75               	goto	u3740
  8437  1774                     u3741:
  8438  1774  2F78               	goto	l2773
  8439  1775                     u3740:
  8440  1775                     l2771:
  8441  1775  1403               	setc
  8442  1776  0DE5               	rlf	___fladd@grs,f
  8443  1777  2F7A               	goto	l2775
  8444  1778                     l2773:
  8445  1778  1003               	clrc
  8446  1779  0DE5               	rlf	___fladd@grs,f
  8447  177A                     l2775:
  8448  177A  0864               	movf	___fladd@bexp,w
  8449  177B  1903               	btfsc	3,2
  8450  177C  2F7E               	goto	u3751
  8451  177D  2F7F               	goto	u3750
  8452  177E                     u3751:
  8453  177E  2F81               	goto	l2779
  8454  177F                     u3750:
  8455  177F                     l2777:
  8456  177F  3001               	movlw	1
  8457  1780  02E4               	subwf	___fladd@bexp,f
  8458  1781                     l2779:
  8459  1781  1FD4               	btfss	___fladd@b+2,7
  8460  1782  2F84               	goto	u3761
  8461  1783  2F85               	goto	u3760
  8462  1784                     u3761:
  8463  1784  2F63               	goto	l2765
  8464  1785                     u3760:
  8465  1785                     l2781:
  8466  1785  01E3               	clrf	___fladd@aexp
  8467  1786                     l2783:
  8468  1786  1FE5               	btfss	___fladd@grs,7
  8469  1787  2F89               	goto	u3771
  8470  1788  2F8A               	goto	u3770
  8471  1789                     u3771:
  8472  1789  2F98               	goto	l2791
  8473  178A                     u3770:
  8474  178A                     l2785:
  8475  178A  0865               	movf	___fladd@grs,w
  8476  178B  397F               	andlw	127
  8477  178C  1903               	btfsc	3,2
  8478  178D  2F8F               	goto	u3781
  8479  178E  2F90               	goto	u3780
  8480  178F                     u3781:
  8481  178F  2F93               	goto	l766
  8482  1790                     u3780:
  8483  1790                     l2787:
  8484  1790  01E3               	clrf	___fladd@aexp
  8485  1791  0AE3               	incf	___fladd@aexp,f
  8486  1792  2F98               	goto	l2791
  8487  1793                     l766:
  8488  1793  1C52               	btfss	___fladd@b,0
  8489  1794  2F96               	goto	u3791
  8490  1795  2F97               	goto	u3790
  8491  1796                     u3791:
  8492  1796  2F98               	goto	l2791
  8493  1797                     u3790:
  8494  1797  2F90               	goto	l2787
  8495  1798                     l2791:
  8496  1798  0863               	movf	___fladd@aexp,w
  8497  1799  1903               	btfsc	3,2
  8498  179A  2F9C               	goto	u3801
  8499  179B  2F9D               	goto	u3800
  8500  179C                     u3801:
  8501  179C  2FD1               	goto	l769
  8502  179D                     u3800:
  8503  179D                     l2793:
  8504  179D  3001               	movlw	1
  8505  179E  07D2               	addwf	___fladd@b,f
  8506  179F  3000               	movlw	0
  8507  17A0  1803               	skipnc
  8508  17A1  3001               	movlw	1
  8509  17A2  07D3               	addwf	___fladd@b+1,f
  8510  17A3  3000               	movlw	0
  8511  17A4  1803               	skipnc
  8512  17A5  3001               	movlw	1
  8513  17A6  07D4               	addwf	___fladd@b+2,f
  8514  17A7  3000               	movlw	0
  8515  17A8  1803               	skipnc
  8516  17A9  3001               	movlw	1
  8517  17AA  07D5               	addwf	___fladd@b+3,f
  8518  17AB                     l2795:
  8519  17AB  1C55               	btfss	___fladd@b+3,0
  8520  17AC  2FAE               	goto	u3811
  8521  17AD  2FAF               	goto	u3810
  8522  17AE                     u3811:
  8523  17AE  2FD1               	goto	l769
  8524  17AF                     u3810:
  8525  17AF                     l2797:
  8526  17AF  0852               	movf	___fladd@b,w
  8527  17B0  00DA               	movwf	??___fladd
  8528  17B1  0853               	movf	___fladd@b+1,w
  8529  17B2  00DB               	movwf	??___fladd+1
  8530  17B3  0854               	movf	___fladd@b+2,w
  8531  17B4  00DC               	movwf	??___fladd+2
  8532  17B5  0855               	movf	___fladd@b+3,w
  8533  17B6  00DD               	movwf	??___fladd+3
  8534  17B7  3001               	movlw	1
  8535  17B8  00DE               	movwf	??___fladd+4
  8536  17B9                     u3825:
  8537  17B9  0D5D               	rlf	??___fladd+3,w
  8538  17BA  0CDD               	rrf	??___fladd+3,f
  8539  17BB  0CDC               	rrf	??___fladd+2,f
  8540  17BC  0CDB               	rrf	??___fladd+1,f
  8541  17BD  0CDA               	rrf	??___fladd,f
  8542  17BE                     u3820:
  8543  17BE  0BDE               	decfsz	??___fladd+4,f
  8544  17BF  2FB9               	goto	u3825
  8545  17C0  085D               	movf	??___fladd+3,w
  8546  17C1  00D5               	movwf	___fladd@b+3
  8547  17C2  085C               	movf	??___fladd+2,w
  8548  17C3  00D4               	movwf	___fladd@b+2
  8549  17C4  085B               	movf	??___fladd+1,w
  8550  17C5  00D3               	movwf	___fladd@b+1
  8551  17C6  085A               	movf	??___fladd,w
  8552  17C7  00D2               	movwf	___fladd@b
  8553  17C8  0A64               	incf	___fladd@bexp,w
  8554  17C9  1903               	btfsc	3,2
  8555  17CA  2FCC               	goto	u3831
  8556  17CB  2FCD               	goto	u3830
  8557  17CC                     u3831:
  8558  17CC  2FD1               	goto	l769
  8559  17CD                     u3830:
  8560  17CD                     l2799:
  8561  17CD  3001               	movlw	1
  8562  17CE  00DA               	movwf	??___fladd
  8563  17CF  085A               	movf	??___fladd,w
  8564  17D0  07E4               	addwf	___fladd@bexp,f
  8565  17D1                     l769:
  8566  17D1  0A64               	incf	___fladd@bexp,w
  8567  17D2  1903               	btfsc	3,2
  8568  17D3  2FD5               	goto	u3841
  8569  17D4  2FD6               	goto	u3840
  8570  17D5                     u3841:
  8571  17D5  2FDB               	goto	l2803
  8572  17D6                     u3840:
  8573  17D6                     l2801:
  8574  17D6  0864               	movf	___fladd@bexp,w
  8575  17D7  1D03               	btfss	3,2
  8576  17D8  2FDA               	goto	u3851
  8577  17D9  2FDB               	goto	u3850
  8578  17DA                     u3851:
  8579  17DA  2FE9               	goto	l2809
  8580  17DB                     u3850:
  8581  17DB                     l2803:
  8582  17DB  3000               	movlw	0
  8583  17DC  00D5               	movwf	___fladd@b+3
  8584  17DD  3000               	movlw	0
  8585  17DE  00D4               	movwf	___fladd@b+2
  8586  17DF  3000               	movlw	0
  8587  17E0  00D3               	movwf	___fladd@b+1
  8588  17E1  3000               	movlw	0
  8589  17E2  00D2               	movwf	___fladd@b
  8590  17E3                     l2805:
  8591  17E3  0864               	movf	___fladd@bexp,w
  8592  17E4  1D03               	btfss	3,2
  8593  17E5  2FE7               	goto	u3861
  8594  17E6  2FE8               	goto	u3860
  8595  17E7                     u3861:
  8596  17E7  2FE9               	goto	l2809
  8597  17E8                     u3860:
  8598  17E8                     l2807:
  8599  17E8  01E2               	clrf	___fladd@signs
  8600  17E9                     l2809:
  8601  17E9  1C64               	btfss	___fladd@bexp,0
  8602  17EA  2FEC               	goto	u3871
  8603  17EB  2FED               	goto	u3870
  8604  17EC                     u3871:
  8605  17EC  2FEF               	goto	l2813
  8606  17ED                     u3870:
  8607  17ED                     l2811:
  8608  17ED  17D4               	bsf	___fladd@b+2,7
  8609  17EE  2FF3               	goto	l777
  8610  17EF                     l2813:
  8611  17EF  307F               	movlw	127
  8612  17F0  00DA               	movwf	??___fladd
  8613  17F1  085A               	movf	??___fladd,w
  8614  17F2  05D4               	andwf	___fladd@b+2,f
  8615  17F3                     l777:
  8616  17F3  0864               	movf	___fladd@bexp,w
  8617  17F4  00DA               	movwf	??___fladd
  8618  17F5  1003               	clrc
  8619  17F6  0C5A               	rrf	??___fladd,w
  8620  17F7  00DB               	movwf	??___fladd+1
  8621  17F8  085B               	movf	??___fladd+1,w
  8622  17F9  00D5               	movwf	___fladd@b+3
  8623  17FA                     l2815:
  8624  17FA  1FE2               	btfss	___fladd@signs,7
  8625  17FB  2FFD               	goto	u3881
  8626  17FC  2FFE               	goto	u3880
  8627  17FD                     u3881:
  8628  17FD  2FFF               	goto	l778
  8629  17FE                     u3880:
  8630  17FE                     l2817:
  8631  17FE  17D5               	bsf	___fladd@b+3,7
  8632  17FF                     l778:
  8633  17FF                     l748:
  8634  17FF  0008               	return
  8635  1800                     __end_of___fladd:
  8636                           
  8637                           	psect	text24
  8638  1927                     __ptext24:	
  8639 ;; *************** function ___flneg *****************
  8640 ;; Defined at:
  8641 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;  f1              4    0[COMMON] unsigned char 
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;		None
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  4    0[COMMON] unsigned char 
  8648 ;; Registers used:
  8649 ;;		wreg
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8655 ;;      Params:         4       0       0       0       0
  8656 ;;      Locals:         0       0       0       0       0
  8657 ;;      Temps:          0       0       0       0       0
  8658 ;;      Totals:         4       0       0       0       0
  8659 ;;Total ram usage:        4 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; This function calls:
  8662 ;;		Nothing
  8663 ;; This function is called by:
  8664 ;;		_sprintf
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668                           
  8669                           ;psect for function ___flneg
  8670  1927                     ___flneg:
  8671  1927                     l3223:	
  8672                           ;incstack = 0
  8673                           ; Regs used in ___flneg: [wreg]
  8674                           
  8675  1927  0873               	movf	___flneg@f1+3,w
  8676  1928  0472               	iorwf	___flneg@f1+2,w
  8677  1929  0471               	iorwf	___flneg@f1+1,w
  8678  192A  0470               	iorwf	___flneg@f1,w
  8679  192B  1903               	skipnz
  8680  192C  292E               	goto	u5001
  8681  192D  292F               	goto	u5000
  8682  192E                     u5001:
  8683  192E  2931               	goto	l3227
  8684  192F                     u5000:
  8685  192F                     l3225:
  8686  192F  3080               	movlw	128
  8687  1930  06F3               	xorwf	___flneg@f1+3,f
  8688  1931                     l3227:
  8689  1931                     l607:
  8690  1931  0008               	return
  8691  1932                     __end_of___flneg:
  8692                           
  8693                           	psect	text25
  8694  1EA4                     __ptext25:	
  8695 ;; *************** function ___flge *****************
  8696 ;; Defined at:
  8697 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8698 ;; Parameters:    Size  Location     Type
  8699 ;;  ff1             4    0[COMMON] unsigned char 
  8700 ;;  ff2             4    4[COMMON] unsigned char 
  8701 ;; Auto vars:     Size  Location     Type
  8702 ;;		None
  8703 ;; Return value:  Size  Location     Type
  8704 ;;		None               void
  8705 ;; Registers used:
  8706 ;;		wreg, status,2, status,0
  8707 ;; Tracked objects:
  8708 ;;		On entry : 0/0
  8709 ;;		On exit  : 0/0
  8710 ;;		Unchanged: 0/0
  8711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8712 ;;      Params:         8       0       0       0       0
  8713 ;;      Locals:         0       0       0       0       0
  8714 ;;      Temps:          4       0       0       0       0
  8715 ;;      Totals:        12       0       0       0       0
  8716 ;;Total ram usage:       12 bytes
  8717 ;; Hardware stack levels used:    1
  8718 ;; This function calls:
  8719 ;;		Nothing
  8720 ;; This function is called by:
  8721 ;;		_sprintf
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           
  8726                           ;psect for function ___flge
  8727  1EA4                     ___flge:
  8728  1EA4                     l3203:	
  8729                           ;incstack = 0
  8730                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8731                           
  8732  1EA4  3000               	movlw	0
  8733  1EA5  0570               	andwf	___flge@ff1,w
  8734  1EA6  00F8               	movwf	??___flge
  8735  1EA7  3000               	movlw	0
  8736  1EA8  0571               	andwf	___flge@ff1+1,w
  8737  1EA9  00F9               	movwf	??___flge+1
  8738  1EAA  3080               	movlw	128
  8739  1EAB  0572               	andwf	___flge@ff1+2,w
  8740  1EAC  00FA               	movwf	??___flge+2
  8741  1EAD  307F               	movlw	127
  8742  1EAE  0573               	andwf	___flge@ff1+3,w
  8743  1EAF  00FB               	movwf	??___flge+3
  8744  1EB0  087B               	movf	??___flge+3,w
  8745  1EB1  047A               	iorwf	??___flge+2,w
  8746  1EB2  0479               	iorwf	??___flge+1,w
  8747  1EB3  0478               	iorwf	??___flge,w
  8748  1EB4  1D03               	skipz
  8749  1EB5  2EB7               	goto	u4931
  8750  1EB6  2EB8               	goto	u4930
  8751  1EB7                     u4931:
  8752  1EB7  2EC0               	goto	l599
  8753  1EB8                     u4930:
  8754  1EB8                     l3205:
  8755  1EB8  3000               	movlw	0
  8756  1EB9  00F3               	movwf	___flge@ff1+3
  8757  1EBA  3000               	movlw	0
  8758  1EBB  00F2               	movwf	___flge@ff1+2
  8759  1EBC  3000               	movlw	0
  8760  1EBD  00F1               	movwf	___flge@ff1+1
  8761  1EBE  3000               	movlw	0
  8762  1EBF  00F0               	movwf	___flge@ff1
  8763  1EC0                     l599:
  8764  1EC0  3000               	movlw	0
  8765  1EC1  0574               	andwf	___flge@ff2,w
  8766  1EC2  00F8               	movwf	??___flge
  8767  1EC3  3000               	movlw	0
  8768  1EC4  0575               	andwf	___flge@ff2+1,w
  8769  1EC5  00F9               	movwf	??___flge+1
  8770  1EC6  3080               	movlw	128
  8771  1EC7  0576               	andwf	___flge@ff2+2,w
  8772  1EC8  00FA               	movwf	??___flge+2
  8773  1EC9  307F               	movlw	127
  8774  1ECA  0577               	andwf	___flge@ff2+3,w
  8775  1ECB  00FB               	movwf	??___flge+3
  8776  1ECC  087B               	movf	??___flge+3,w
  8777  1ECD  047A               	iorwf	??___flge+2,w
  8778  1ECE  0479               	iorwf	??___flge+1,w
  8779  1ECF  0478               	iorwf	??___flge,w
  8780  1ED0  1D03               	skipz
  8781  1ED1  2ED3               	goto	u4941
  8782  1ED2  2ED4               	goto	u4940
  8783  1ED3                     u4941:
  8784  1ED3  2EDC               	goto	l3209
  8785  1ED4                     u4940:
  8786  1ED4                     l3207:
  8787  1ED4  3000               	movlw	0
  8788  1ED5  00F7               	movwf	___flge@ff2+3
  8789  1ED6  3000               	movlw	0
  8790  1ED7  00F6               	movwf	___flge@ff2+2
  8791  1ED8  3000               	movlw	0
  8792  1ED9  00F5               	movwf	___flge@ff2+1
  8793  1EDA  3000               	movlw	0
  8794  1EDB  00F4               	movwf	___flge@ff2
  8795  1EDC                     l3209:
  8796  1EDC  1FF3               	btfss	___flge@ff1+3,7
  8797  1EDD  2EDF               	goto	u4951
  8798  1EDE  2EE0               	goto	u4950
  8799  1EDF                     u4951:
  8800  1EDF  2F04               	goto	l3213
  8801  1EE0                     u4950:
  8802  1EE0                     l3211:
  8803  1EE0  3000               	movlw	0
  8804  1EE1  00F8               	movwf	??___flge
  8805  1EE2  3000               	movlw	0
  8806  1EE3  00F9               	movwf	??___flge+1
  8807  1EE4  3000               	movlw	0
  8808  1EE5  00FA               	movwf	??___flge+2
  8809  1EE6  3080               	movlw	128
  8810  1EE7  00FB               	movwf	??___flge+3
  8811  1EE8  0870               	movf	___flge@ff1,w
  8812  1EE9  02F8               	subwf	??___flge,f
  8813  1EEA  0871               	movf	___flge@ff1+1,w
  8814  1EEB  1C03               	skipc
  8815  1EEC  0F71               	incfsz	___flge@ff1+1,w
  8816  1EED  2EEF               	goto	u4961
  8817  1EEE  2EF0               	goto	u4962
  8818  1EEF                     u4961:
  8819  1EEF  02F9               	subwf	??___flge+1,f
  8820  1EF0                     u4962:
  8821  1EF0  0872               	movf	___flge@ff1+2,w
  8822  1EF1  1C03               	skipc
  8823  1EF2  0F72               	incfsz	___flge@ff1+2,w
  8824  1EF3  2EF5               	goto	u4963
  8825  1EF4  2EF6               	goto	u4964
  8826  1EF5                     u4963:
  8827  1EF5  02FA               	subwf	??___flge+2,f
  8828  1EF6                     u4964:
  8829  1EF6  0873               	movf	___flge@ff1+3,w
  8830  1EF7  1C03               	skipc
  8831  1EF8  0F73               	incfsz	___flge@ff1+3,w
  8832  1EF9  2EFB               	goto	u4965
  8833  1EFA  2EFC               	goto	u4966
  8834  1EFB                     u4965:
  8835  1EFB  02FB               	subwf	??___flge+3,f
  8836  1EFC                     u4966:
  8837  1EFC  087B               	movf	??___flge+3,w
  8838  1EFD  00F3               	movwf	___flge@ff1+3
  8839  1EFE  087A               	movf	??___flge+2,w
  8840  1EFF  00F2               	movwf	___flge@ff1+2
  8841  1F00  0879               	movf	??___flge+1,w
  8842  1F01  00F1               	movwf	___flge@ff1+1
  8843  1F02  0878               	movf	??___flge,w
  8844  1F03  00F0               	movwf	___flge@ff1
  8845  1F04                     l3213:
  8846  1F04  1FF7               	btfss	___flge@ff2+3,7
  8847  1F05  2F07               	goto	u4971
  8848  1F06  2F08               	goto	u4970
  8849  1F07                     u4971:
  8850  1F07  2F2C               	goto	l602
  8851  1F08                     u4970:
  8852  1F08                     l3215:
  8853  1F08  3000               	movlw	0
  8854  1F09  00F8               	movwf	??___flge
  8855  1F0A  3000               	movlw	0
  8856  1F0B  00F9               	movwf	??___flge+1
  8857  1F0C  3000               	movlw	0
  8858  1F0D  00FA               	movwf	??___flge+2
  8859  1F0E  3080               	movlw	128
  8860  1F0F  00FB               	movwf	??___flge+3
  8861  1F10  0874               	movf	___flge@ff2,w
  8862  1F11  02F8               	subwf	??___flge,f
  8863  1F12  0875               	movf	___flge@ff2+1,w
  8864  1F13  1C03               	skipc
  8865  1F14  0F75               	incfsz	___flge@ff2+1,w
  8866  1F15  2F17               	goto	u4981
  8867  1F16  2F18               	goto	u4982
  8868  1F17                     u4981:
  8869  1F17  02F9               	subwf	??___flge+1,f
  8870  1F18                     u4982:
  8871  1F18  0876               	movf	___flge@ff2+2,w
  8872  1F19  1C03               	skipc
  8873  1F1A  0F76               	incfsz	___flge@ff2+2,w
  8874  1F1B  2F1D               	goto	u4983
  8875  1F1C  2F1E               	goto	u4984
  8876  1F1D                     u4983:
  8877  1F1D  02FA               	subwf	??___flge+2,f
  8878  1F1E                     u4984:
  8879  1F1E  0877               	movf	___flge@ff2+3,w
  8880  1F1F  1C03               	skipc
  8881  1F20  0F77               	incfsz	___flge@ff2+3,w
  8882  1F21  2F23               	goto	u4985
  8883  1F22  2F24               	goto	u4986
  8884  1F23                     u4985:
  8885  1F23  02FB               	subwf	??___flge+3,f
  8886  1F24                     u4986:
  8887  1F24  087B               	movf	??___flge+3,w
  8888  1F25  00F7               	movwf	___flge@ff2+3
  8889  1F26  087A               	movf	??___flge+2,w
  8890  1F27  00F6               	movwf	___flge@ff2+2
  8891  1F28  0879               	movf	??___flge+1,w
  8892  1F29  00F5               	movwf	___flge@ff2+1
  8893  1F2A  0878               	movf	??___flge,w
  8894  1F2B  00F4               	movwf	___flge@ff2
  8895  1F2C                     l602:
  8896  1F2C  3080               	movlw	128
  8897  1F2D  06F3               	xorwf	___flge@ff1+3,f
  8898  1F2E  3080               	movlw	128
  8899  1F2F  06F7               	xorwf	___flge@ff2+3,f
  8900  1F30  0877               	movf	___flge@ff2+3,w
  8901  1F31  0273               	subwf	___flge@ff1+3,w
  8902  1F32  1D03               	skipz
  8903  1F33  2F3E               	goto	u4995
  8904  1F34  0876               	movf	___flge@ff2+2,w
  8905  1F35  0272               	subwf	___flge@ff1+2,w
  8906  1F36  1D03               	skipz
  8907  1F37  2F3E               	goto	u4995
  8908  1F38  0875               	movf	___flge@ff2+1,w
  8909  1F39  0271               	subwf	___flge@ff1+1,w
  8910  1F3A  1D03               	skipz
  8911  1F3B  2F3E               	goto	u4995
  8912  1F3C  0874               	movf	___flge@ff2,w
  8913  1F3D  0270               	subwf	___flge@ff1,w
  8914  1F3E                     u4995:
  8915  1F3E  1803               	skipnc
  8916  1F3F  2F41               	goto	u4991
  8917  1F40  2F42               	goto	u4990
  8918  1F41                     u4991:
  8919  1F41  2F44               	goto	l3219
  8920  1F42                     u4990:
  8921  1F42                     l3217:
  8922  1F42  1003               	clrc
  8923  1F43  2F45               	goto	l603
  8924  1F44                     l3219:
  8925  1F44  1403               	setc
  8926  1F45                     l603:
  8927  1F45  0008               	return
  8928  1F46                     __end_of___flge:
  8929                           
  8930                           	psect	text26
  8931  1B45                     __ptext26:	
  8932 ;; *************** function ___fleq *****************
  8933 ;; Defined at:
  8934 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;  ff1             4    0[COMMON] unsigned char 
  8937 ;;  ff2             4    4[COMMON] unsigned char 
  8938 ;; Auto vars:     Size  Location     Type
  8939 ;;		None
  8940 ;; Return value:  Size  Location     Type
  8941 ;;		None               void
  8942 ;; Registers used:
  8943 ;;		wreg, status,2, status,0
  8944 ;; Tracked objects:
  8945 ;;		On entry : 0/0
  8946 ;;		On exit  : 0/0
  8947 ;;		Unchanged: 0/0
  8948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8949 ;;      Params:         8       0       0       0       0
  8950 ;;      Locals:         0       0       0       0       0
  8951 ;;      Temps:          4       0       0       0       0
  8952 ;;      Totals:        12       0       0       0       0
  8953 ;;Total ram usage:       12 bytes
  8954 ;; Hardware stack levels used:    1
  8955 ;; This function calls:
  8956 ;;		Nothing
  8957 ;; This function is called by:
  8958 ;;		_sprintf
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           
  8963                           ;psect for function ___fleq
  8964  1B45                     ___fleq:
  8965  1B45                     l3191:	
  8966                           ;incstack = 0
  8967                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8968                           
  8969  1B45  3000               	movlw	0
  8970  1B46  0570               	andwf	___fleq@ff1,w
  8971  1B47  00F8               	movwf	??___fleq
  8972  1B48  3000               	movlw	0
  8973  1B49  0571               	andwf	___fleq@ff1+1,w
  8974  1B4A  00F9               	movwf	??___fleq+1
  8975  1B4B  3080               	movlw	128
  8976  1B4C  0572               	andwf	___fleq@ff1+2,w
  8977  1B4D  00FA               	movwf	??___fleq+2
  8978  1B4E  307F               	movlw	127
  8979  1B4F  0573               	andwf	___fleq@ff1+3,w
  8980  1B50  00FB               	movwf	??___fleq+3
  8981  1B51  087B               	movf	??___fleq+3,w
  8982  1B52  047A               	iorwf	??___fleq+2,w
  8983  1B53  0479               	iorwf	??___fleq+1,w
  8984  1B54  0478               	iorwf	??___fleq,w
  8985  1B55  1D03               	skipz
  8986  1B56  2B58               	goto	u4901
  8987  1B57  2B59               	goto	u4900
  8988  1B58                     u4901:
  8989  1B58  2B61               	goto	l594
  8990  1B59                     u4900:
  8991  1B59                     l3193:
  8992  1B59  3000               	movlw	0
  8993  1B5A  00F3               	movwf	___fleq@ff1+3
  8994  1B5B  3000               	movlw	0
  8995  1B5C  00F2               	movwf	___fleq@ff1+2
  8996  1B5D  3000               	movlw	0
  8997  1B5E  00F1               	movwf	___fleq@ff1+1
  8998  1B5F  3000               	movlw	0
  8999  1B60  00F0               	movwf	___fleq@ff1
  9000  1B61                     l594:
  9001  1B61  3000               	movlw	0
  9002  1B62  0574               	andwf	___fleq@ff2,w
  9003  1B63  00F8               	movwf	??___fleq
  9004  1B64  3000               	movlw	0
  9005  1B65  0575               	andwf	___fleq@ff2+1,w
  9006  1B66  00F9               	movwf	??___fleq+1
  9007  1B67  3080               	movlw	128
  9008  1B68  0576               	andwf	___fleq@ff2+2,w
  9009  1B69  00FA               	movwf	??___fleq+2
  9010  1B6A  307F               	movlw	127
  9011  1B6B  0577               	andwf	___fleq@ff2+3,w
  9012  1B6C  00FB               	movwf	??___fleq+3
  9013  1B6D  087B               	movf	??___fleq+3,w
  9014  1B6E  047A               	iorwf	??___fleq+2,w
  9015  1B6F  0479               	iorwf	??___fleq+1,w
  9016  1B70  0478               	iorwf	??___fleq,w
  9017  1B71  1D03               	skipz
  9018  1B72  2B74               	goto	u4911
  9019  1B73  2B75               	goto	u4910
  9020  1B74                     u4911:
  9021  1B74  2B7D               	goto	l595
  9022  1B75                     u4910:
  9023  1B75                     l3195:
  9024  1B75  3000               	movlw	0
  9025  1B76  00F7               	movwf	___fleq@ff2+3
  9026  1B77  3000               	movlw	0
  9027  1B78  00F6               	movwf	___fleq@ff2+2
  9028  1B79  3000               	movlw	0
  9029  1B7A  00F5               	movwf	___fleq@ff2+1
  9030  1B7B  3000               	movlw	0
  9031  1B7C  00F4               	movwf	___fleq@ff2
  9032  1B7D                     l595:
  9033  1B7D  0877               	movf	___fleq@ff2+3,w
  9034  1B7E  0673               	xorwf	___fleq@ff1+3,w
  9035  1B7F  1D03               	skipz
  9036  1B80  2B8B               	goto	u4925
  9037  1B81  0876               	movf	___fleq@ff2+2,w
  9038  1B82  0672               	xorwf	___fleq@ff1+2,w
  9039  1B83  1D03               	skipz
  9040  1B84  2B8B               	goto	u4925
  9041  1B85  0875               	movf	___fleq@ff2+1,w
  9042  1B86  0671               	xorwf	___fleq@ff1+1,w
  9043  1B87  1D03               	skipz
  9044  1B88  2B8B               	goto	u4925
  9045  1B89  0874               	movf	___fleq@ff2,w
  9046  1B8A  0670               	xorwf	___fleq@ff1,w
  9047  1B8B                     u4925:
  9048  1B8B  1903               	skipnz
  9049  1B8C  2B8E               	goto	u4921
  9050  1B8D  2B8F               	goto	u4920
  9051  1B8E                     u4921:
  9052  1B8E  2B91               	goto	l3199
  9053  1B8F                     u4920:
  9054  1B8F                     l3197:
  9055  1B8F  1003               	clrc
  9056  1B90  2B92               	goto	l596
  9057  1B91                     l3199:
  9058  1B91  1403               	setc
  9059  1B92                     l596:
  9060  1B92  0008               	return
  9061  1B93                     __end_of___fleq:
  9062                           
  9063                           	psect	text27
  9064  1AFA                     __ptext27:	
  9065 ;; *************** function _Lcd_Init *****************
  9066 ;; Defined at:
  9067 ;;		line 14 in file "LCD.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;		None
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;		None
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      void 
  9074 ;; Registers used:
  9075 ;;		wreg, status,2, status,0, pclath, cstack
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9081 ;;      Params:         0       0       0       0       0
  9082 ;;      Locals:         0       0       0       0       0
  9083 ;;      Temps:          2       0       0       0       0
  9084 ;;      Totals:         2       0       0       0       0
  9085 ;;Total ram usage:        2 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; Hardware stack levels required when called:    2
  9088 ;; This function calls:
  9089 ;;		_Lcd_Cmd
  9090 ;;		_Lcd_Port
  9091 ;; This function is called by:
  9092 ;;		_main
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           
  9097                           ;psect for function _Lcd_Init
  9098  1AFA                     _Lcd_Init:
  9099  1AFA                     l3815:	
  9100                           ;incstack = 0
  9101                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9102                           
  9103                           
  9104                           ;LCD.c: 15:   Lcd_Port(0x00);
  9105  1AFA  3000               	movlw	0
  9106  1AFB  120A  158A  2000  160A  158A  	fcall	_Lcd_Port
  9107  1B00                     l3817:
  9108                           
  9109                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  9110  1B00  3034               	movlw	52
  9111  1B01  00F5               	movwf	??_Lcd_Init+1
  9112  1B02  30F1               	movlw	241
  9113  1B03  00F4               	movwf	??_Lcd_Init
  9114  1B04                     u6187:
  9115  1B04  0BF4               	decfsz	??_Lcd_Init,f
  9116  1B05  2B04               	goto	u6187
  9117  1B06  0BF5               	decfsz	??_Lcd_Init+1,f
  9118  1B07  2B04               	goto	u6187
  9119  1B08  2B09               	nop2
  9120  1B09                     l3819:
  9121                           
  9122                           ;LCD.c: 17:   Lcd_Cmd(0x030);
  9123  1B09  3030               	movlw	48
  9124  1B0A  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  9125                           
  9126                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9127  1B0F  300D               	movlw	13
  9128  1B10  00F5               	movwf	??_Lcd_Init+1
  9129  1B11  30FB               	movlw	251
  9130  1B12  00F4               	movwf	??_Lcd_Init
  9131  1B13                     u6197:
  9132  1B13  0BF4               	decfsz	??_Lcd_Init,f
  9133  1B14  2B13               	goto	u6197
  9134  1B15  0BF5               	decfsz	??_Lcd_Init+1,f
  9135  1B16  2B13               	goto	u6197
  9136  1B17  2B18               	nop2
  9137  1B18                     l3821:
  9138                           
  9139                           ;LCD.c: 19:   Lcd_Cmd(0x030);
  9140  1B18  3030               	movlw	48
  9141  1B19  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  9142  1B1E                     l3823:
  9143                           
  9144                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  9145  1B1E  301D               	movlw	29
  9146  1B1F  00F5               	movwf	??_Lcd_Init+1
  9147  1B20  3091               	movlw	145
  9148  1B21  00F4               	movwf	??_Lcd_Init
  9149  1B22                     u6207:
  9150  1B22  0BF4               	decfsz	??_Lcd_Init,f
  9151  1B23  2B22               	goto	u6207
  9152  1B24  0BF5               	decfsz	??_Lcd_Init+1,f
  9153  1B25  2B22               	goto	u6207
  9154                           
  9155                           ;LCD.c: 21:   Lcd_Cmd(0x030);
  9156  1B26  3030               	movlw	48
  9157  1B27  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  9158                           
  9159                           ;LCD.c: 22:   Lcd_Cmd(0x038);
  9160  1B2C  3038               	movlw	56
  9161  1B2D  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  9162                           
  9163                           ;LCD.c: 23:   Lcd_Cmd(0x00C);
  9164  1B32  300C               	movlw	12
  9165  1B33  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  9166                           
  9167                           ;LCD.c: 24:   Lcd_Cmd(0x001);
  9168  1B38  3001               	movlw	1
  9169  1B39  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  9170                           
  9171                           ;LCD.c: 25:   Lcd_Cmd(0x006);
  9172  1B3E  3006               	movlw	6
  9173  1B3F  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  9174  1B44                     l120:
  9175  1B44  0008               	return
  9176  1B45                     __end_of_Lcd_Init:
  9177                           
  9178                           	psect	text28
  9179  1944                     __ptext28:	
  9180 ;; *************** function _Lcd_Cmd *****************
  9181 ;; Defined at:
  9182 ;;		line 33 in file "LCD.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;  a               1    wreg     unsigned char 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;  a               1    3[COMMON] unsigned char 
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  1    wreg      void 
  9189 ;; Registers used:
  9190 ;;		wreg, status,2, status,0, pclath, cstack
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9196 ;;      Params:         0       0       0       0       0
  9197 ;;      Locals:         1       0       0       0       0
  9198 ;;      Temps:          2       0       0       0       0
  9199 ;;      Totals:         3       0       0       0       0
  9200 ;;Total ram usage:        3 bytes
  9201 ;; Hardware stack levels used:    1
  9202 ;; Hardware stack levels required when called:    1
  9203 ;; This function calls:
  9204 ;;		_Lcd_Port
  9205 ;; This function is called by:
  9206 ;;		_Lcd_Init
  9207 ;;		_Lcd_Set_Cursor
  9208 ;;		_Lcd_Clear
  9209 ;;		_Lcd_Shift_Right
  9210 ;;		_Lcd_Shift_Left
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           
  9215                           ;psect for function _Lcd_Cmd
  9216  1944                     _Lcd_Cmd:
  9217                           
  9218                           ;incstack = 0
  9219                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9220                           ;Lcd_Cmd@a stored from wreg
  9221  1944  00F3               	movwf	Lcd_Cmd@a
  9222  1945                     l2959:
  9223                           
  9224                           ;LCD.c: 34:  PORTEbits.RE0 = 0;
  9225  1945  1283               	bcf	3,5	;RP0=0, select bank0
  9226  1946  1303               	bcf	3,6	;RP1=0, select bank0
  9227  1947  1009               	bcf	9,0	;volatile
  9228  1948                     l2961:
  9229                           
  9230                           ;LCD.c: 35:  Lcd_Port(a);
  9231  1948  0873               	movf	Lcd_Cmd@a,w
  9232  1949  120A  158A  2000  160A  158A  	fcall	_Lcd_Port
  9233  194E                     l2963:
  9234                           
  9235                           ;LCD.c: 36:  PORTEbits.RE2 = 1;
  9236  194E  1283               	bcf	3,5	;RP0=0, select bank0
  9237  194F  1303               	bcf	3,6	;RP1=0, select bank0
  9238  1950  1509               	bsf	9,2	;volatile
  9239  1951                     l2965:
  9240                           
  9241                           ;LCD.c: 37:         _delay((unsigned long)((4)*(8000000/4000.0)));
  9242  1951  300B               	movlw	11
  9243  1952  00F2               	movwf	??_Lcd_Cmd+1
  9244  1953  3062               	movlw	98
  9245  1954  00F1               	movwf	??_Lcd_Cmd
  9246  1955                     u6217:
  9247  1955  0BF1               	decfsz	??_Lcd_Cmd,f
  9248  1956  2955               	goto	u6217
  9249  1957  0BF2               	decfsz	??_Lcd_Cmd+1,f
  9250  1958  2955               	goto	u6217
  9251  1959  0000               	nop
  9252  195A                     l2967:
  9253                           
  9254                           ;LCD.c: 38:         PORTEbits.RE2 = 0;
  9255  195A  1283               	bcf	3,5	;RP0=0, select bank0
  9256  195B  1303               	bcf	3,6	;RP1=0, select bank0
  9257  195C  1109               	bcf	9,2	;volatile
  9258  195D                     l126:
  9259  195D  0008               	return
  9260  195E                     __end_of_Lcd_Cmd:
  9261                           
  9262                           	psect	text29
  9263  0800                     __ptext29:	
  9264 ;; *************** function _Lcd_Port *****************
  9265 ;; Defined at:
  9266 ;;		line 29 in file "LCD.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;  a               1    wreg     unsigned char 
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;  a               1    0[COMMON] unsigned char 
  9271 ;; Return value:  Size  Location     Type
  9272 ;;                  1    wreg      void 
  9273 ;; Registers used:
  9274 ;;		wreg
  9275 ;; Tracked objects:
  9276 ;;		On entry : 0/0
  9277 ;;		On exit  : 0/0
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9280 ;;      Params:         0       0       0       0       0
  9281 ;;      Locals:         1       0       0       0       0
  9282 ;;      Temps:          0       0       0       0       0
  9283 ;;      Totals:         1       0       0       0       0
  9284 ;;Total ram usage:        1 bytes
  9285 ;; Hardware stack levels used:    1
  9286 ;; This function calls:
  9287 ;;		Nothing
  9288 ;; This function is called by:
  9289 ;;		_Lcd_Init
  9290 ;;		_Lcd_Cmd
  9291 ;;		_Lcd_Write_Char
  9292 ;; This function uses a non-reentrant model
  9293 ;;
  9294                           
  9295                           
  9296                           ;psect for function _Lcd_Port
  9297  0800                     _Lcd_Port:
  9298                           
  9299                           ;incstack = 0
  9300                           ; Regs used in _Lcd_Port: [wreg]
  9301                           ;Lcd_Port@a stored from wreg
  9302  0800  00F0               	movwf	Lcd_Port@a
  9303  0801                     l2493:
  9304                           
  9305                           ;LCD.c: 30:     PORTD = a;
  9306  0801  0870               	movf	Lcd_Port@a,w
  9307  0802  1283               	bcf	3,5	;RP0=0, select bank0
  9308  0803  1303               	bcf	3,6	;RP1=0, select bank0
  9309  0804  0088               	movwf	8	;volatile
  9310  0805                     l123:
  9311  0805  0008               	return
  9312  0806                     __end_of_Lcd_Port:
  9313                           
  9314                           	psect	text30
  9315  1E31                     __ptext30:	
  9316 ;; *************** function _ADC_channel2 *****************
  9317 ;; Defined at:
  9318 ;;		line 148 in file "pseudocodigo_lab3.c"
  9319 ;; Parameters:    Size  Location     Type
  9320 ;;		None
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;		None
  9323 ;; Return value:  Size  Location     Type
  9324 ;;                  1    wreg      void 
  9325 ;; Registers used:
  9326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9327 ;; Tracked objects:
  9328 ;;		On entry : 0/0
  9329 ;;		On exit  : 0/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9332 ;;      Params:         0       0       0       0       0
  9333 ;;      Locals:         0       0       0       0       0
  9334 ;;      Temps:          0       4       0       0       0
  9335 ;;      Totals:         0       4       0       0       0
  9336 ;;Total ram usage:        4 bytes
  9337 ;; Hardware stack levels used:    1
  9338 ;; Hardware stack levels required when called:    2
  9339 ;; This function calls:
  9340 ;;		_ADC_Config
  9341 ;;		___fldiv
  9342 ;;		___flmul
  9343 ;;		___xxtofl
  9344 ;; This function is called by:
  9345 ;;		_main
  9346 ;; This function uses a non-reentrant model
  9347 ;;
  9348                           
  9349                           
  9350                           ;psect for function _ADC_channel2
  9351  1E31                     _ADC_channel2:
  9352  1E31                     l3849:	
  9353                           ;incstack = 0
  9354                           ; Regs used in _ADC_channel2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9355                           
  9356                           
  9357                           ;pseudocodigo_lab3.c: 149:     ADC_Config (1);
  9358  1E31  3001               	movlw	1
  9359  1E32  160A  118A  2017  160A  158A  	fcall	_ADC_Config
  9360  1E37                     l3851:
  9361                           
  9362                           ;pseudocodigo_lab3.c: 150:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9363  1E37  3003               	movlw	3
  9364  1E38  1283               	bcf	3,5	;RP0=0, select bank0
  9365  1E39  1303               	bcf	3,6	;RP1=0, select bank0
  9366  1E3A  00D9               	movwf	??_ADC_channel2+1
  9367  1E3B  3097               	movlw	151
  9368  1E3C  00D8               	movwf	??_ADC_channel2
  9369  1E3D                     u6227:
  9370  1E3D  0BD8               	decfsz	??_ADC_channel2,f
  9371  1E3E  2E3D               	goto	u6227
  9372  1E3F  0BD9               	decfsz	??_ADC_channel2+1,f
  9373  1E40  2E3D               	goto	u6227
  9374  1E41                     l3853:
  9375                           
  9376                           ;pseudocodigo_lab3.c: 151:     ADCON0bits.GO = 1;
  9377  1E41  1283               	bcf	3,5	;RP0=0, select bank0
  9378  1E42  1303               	bcf	3,6	;RP1=0, select bank0
  9379  1E43  149F               	bsf	31,1	;volatile
  9380                           
  9381                           ;pseudocodigo_lab3.c: 152:     while (ADCON0bits.GO != 0) {
  9382  1E44  2E9E               	goto	l3857
  9383  1E45                     l3855:
  9384                           
  9385                           ;pseudocodigo_lab3.c: 153:         S2_val = ((ADRESH * 5.0) / 255);
  9386  1E45  3043               	movlw	67
  9387  1E46  00C1               	movwf	___fldiv@a+3
  9388  1E47  307F               	movlw	127
  9389  1E48  00C0               	movwf	___fldiv@a+2
  9390  1E49  3000               	movlw	0
  9391  1E4A  00BF               	movwf	___fldiv@a+1
  9392  1E4B  3000               	movlw	0
  9393  1E4C  00BE               	movwf	___fldiv@a
  9394  1E4D  3040               	movlw	64
  9395  1E4E  00A7               	movwf	___flmul@b+3
  9396  1E4F  30A0               	movlw	160
  9397  1E50  00A6               	movwf	___flmul@b+2
  9398  1E51  3000               	movlw	0
  9399  1E52  00A5               	movwf	___flmul@b+1
  9400  1E53  3000               	movlw	0
  9401  1E54  00A4               	movwf	___flmul@b
  9402  1E55  081E               	movf	30,w	;volatile
  9403  1E56  00D8               	movwf	??_ADC_channel2
  9404  1E57  01D9               	clrf	??_ADC_channel2+1
  9405  1E58  01DA               	clrf	??_ADC_channel2+2
  9406  1E59  01DB               	clrf	??_ADC_channel2+3
  9407  1E5A  085B               	movf	??_ADC_channel2+3,w
  9408  1E5B  00F3               	movwf	___xxtofl@val+3
  9409  1E5C  085A               	movf	??_ADC_channel2+2,w
  9410  1E5D  00F2               	movwf	___xxtofl@val+2
  9411  1E5E  0859               	movf	??_ADC_channel2+1,w
  9412  1E5F  00F1               	movwf	___xxtofl@val+1
  9413  1E60  0858               	movf	??_ADC_channel2,w
  9414  1E61  00F0               	movwf	___xxtofl@val
  9415  1E62  3001               	movlw	1
  9416  1E63  160A  158A  2746  160A  158A  	fcall	___xxtofl
  9417  1E68  0873               	movf	?___xxtofl+3,w
  9418  1E69  1283               	bcf	3,5	;RP0=0, select bank0
  9419  1E6A  1303               	bcf	3,6	;RP1=0, select bank0
  9420  1E6B  00AB               	movwf	___flmul@a+3
  9421  1E6C  0872               	movf	?___xxtofl+2,w
  9422  1E6D  00AA               	movwf	___flmul@a+2
  9423  1E6E  0871               	movf	?___xxtofl+1,w
  9424  1E6F  00A9               	movwf	___flmul@a+1
  9425  1E70  0870               	movf	?___xxtofl,w
  9426  1E71  00A8               	movwf	___flmul@a
  9427  1E72  120A  158A  249F  160A  158A  	fcall	___flmul
  9428  1E77  1283               	bcf	3,5	;RP0=0, select bank0
  9429  1E78  1303               	bcf	3,6	;RP1=0, select bank0
  9430  1E79  0827               	movf	?___flmul+3,w
  9431  1E7A  00C5               	movwf	___fldiv@b+3
  9432  1E7B  0826               	movf	?___flmul+2,w
  9433  1E7C  00C4               	movwf	___fldiv@b+2
  9434  1E7D  0825               	movf	?___flmul+1,w
  9435  1E7E  00C3               	movwf	___fldiv@b+1
  9436  1E7F  0824               	movf	?___flmul,w
  9437  1E80  00C2               	movwf	___fldiv@b
  9438  1E81  160A  118A  2190  160A  158A  	fcall	___fldiv
  9439  1E86  1283               	bcf	3,5	;RP0=0, select bank0
  9440  1E87  1303               	bcf	3,6	;RP1=0, select bank0
  9441  1E88  0841               	movf	?___fldiv+3,w
  9442  1E89  1683               	bsf	3,5	;RP0=1, select bank1
  9443  1E8A  1303               	bcf	3,6	;RP1=0, select bank1
  9444  1E8B  00CA               	movwf	(_S2_val+3)^(0+128)
  9445  1E8C  1283               	bcf	3,5	;RP0=0, select bank0
  9446  1E8D  1303               	bcf	3,6	;RP1=0, select bank0
  9447  1E8E  0840               	movf	?___fldiv+2,w
  9448  1E8F  1683               	bsf	3,5	;RP0=1, select bank1
  9449  1E90  1303               	bcf	3,6	;RP1=0, select bank1
  9450  1E91  00C9               	movwf	(_S2_val+2)^(0+128)
  9451  1E92  1283               	bcf	3,5	;RP0=0, select bank0
  9452  1E93  1303               	bcf	3,6	;RP1=0, select bank0
  9453  1E94  083F               	movf	?___fldiv+1,w
  9454  1E95  1683               	bsf	3,5	;RP0=1, select bank1
  9455  1E96  1303               	bcf	3,6	;RP1=0, select bank1
  9456  1E97  00C8               	movwf	(_S2_val+1)^(0+128)
  9457  1E98  1283               	bcf	3,5	;RP0=0, select bank0
  9458  1E99  1303               	bcf	3,6	;RP1=0, select bank0
  9459  1E9A  083E               	movf	?___fldiv,w
  9460  1E9B  1683               	bsf	3,5	;RP0=1, select bank1
  9461  1E9C  1303               	bcf	3,6	;RP1=0, select bank1
  9462  1E9D  00C7               	movwf	_S2_val^(0+128)
  9463  1E9E                     l3857:
  9464                           
  9465                           ;pseudocodigo_lab3.c: 152:     while (ADCON0bits.GO != 0) {
  9466  1E9E  1283               	bcf	3,5	;RP0=0, select bank0
  9467  1E9F  189F               	btfsc	31,1	;volatile
  9468  1EA0  2EA2               	goto	u6131
  9469  1EA1  2EA3               	goto	u6130
  9470  1EA2                     u6131:
  9471  1EA2  2E45               	goto	l3855
  9472  1EA3                     u6130:
  9473  1EA3                     l85:
  9474  1EA3  0008               	return
  9475  1EA4                     __end_of_ADC_channel2:
  9476                           
  9477                           	psect	text31
  9478  1DBE                     __ptext31:	
  9479 ;; *************** function _ADC_channel1 *****************
  9480 ;; Defined at:
  9481 ;;		line 139 in file "pseudocodigo_lab3.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;		None
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;		None
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  1    wreg      void 
  9488 ;; Registers used:
  9489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/0
  9492 ;;		On exit  : 0/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9495 ;;      Params:         0       0       0       0       0
  9496 ;;      Locals:         0       0       0       0       0
  9497 ;;      Temps:          0       4       0       0       0
  9498 ;;      Totals:         0       4       0       0       0
  9499 ;;Total ram usage:        4 bytes
  9500 ;; Hardware stack levels used:    1
  9501 ;; Hardware stack levels required when called:    2
  9502 ;; This function calls:
  9503 ;;		_ADC_Config
  9504 ;;		___fldiv
  9505 ;;		___flmul
  9506 ;;		___xxtofl
  9507 ;; This function is called by:
  9508 ;;		_main
  9509 ;; This function uses a non-reentrant model
  9510 ;;
  9511                           
  9512                           
  9513                           ;psect for function _ADC_channel1
  9514  1DBE                     _ADC_channel1:
  9515  1DBE                     l3839:	
  9516                           ;incstack = 0
  9517                           ; Regs used in _ADC_channel1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9518                           
  9519                           
  9520                           ;pseudocodigo_lab3.c: 140:     ADC_Config (0);
  9521  1DBE  3000               	movlw	0
  9522  1DBF  160A  118A  2017  160A  158A  	fcall	_ADC_Config
  9523  1DC4                     l3841:
  9524                           
  9525                           ;pseudocodigo_lab3.c: 141:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9526  1DC4  3003               	movlw	3
  9527  1DC5  1283               	bcf	3,5	;RP0=0, select bank0
  9528  1DC6  1303               	bcf	3,6	;RP1=0, select bank0
  9529  1DC7  00D9               	movwf	??_ADC_channel1+1
  9530  1DC8  3097               	movlw	151
  9531  1DC9  00D8               	movwf	??_ADC_channel1
  9532  1DCA                     u6237:
  9533  1DCA  0BD8               	decfsz	??_ADC_channel1,f
  9534  1DCB  2DCA               	goto	u6237
  9535  1DCC  0BD9               	decfsz	??_ADC_channel1+1,f
  9536  1DCD  2DCA               	goto	u6237
  9537  1DCE                     l3843:
  9538                           
  9539                           ;pseudocodigo_lab3.c: 142:     ADCON0bits.GO = 1;
  9540  1DCE  1283               	bcf	3,5	;RP0=0, select bank0
  9541  1DCF  1303               	bcf	3,6	;RP1=0, select bank0
  9542  1DD0  149F               	bsf	31,1	;volatile
  9543                           
  9544                           ;pseudocodigo_lab3.c: 143:     while (ADCON0bits.GO != 0) {
  9545  1DD1  2E2B               	goto	l3847
  9546  1DD2                     l3845:
  9547                           
  9548                           ;pseudocodigo_lab3.c: 144:         S1_val = ((ADRESH * 5.0) / 255);
  9549  1DD2  3043               	movlw	67
  9550  1DD3  00C1               	movwf	___fldiv@a+3
  9551  1DD4  307F               	movlw	127
  9552  1DD5  00C0               	movwf	___fldiv@a+2
  9553  1DD6  3000               	movlw	0
  9554  1DD7  00BF               	movwf	___fldiv@a+1
  9555  1DD8  3000               	movlw	0
  9556  1DD9  00BE               	movwf	___fldiv@a
  9557  1DDA  3040               	movlw	64
  9558  1DDB  00A7               	movwf	___flmul@b+3
  9559  1DDC  30A0               	movlw	160
  9560  1DDD  00A6               	movwf	___flmul@b+2
  9561  1DDE  3000               	movlw	0
  9562  1DDF  00A5               	movwf	___flmul@b+1
  9563  1DE0  3000               	movlw	0
  9564  1DE1  00A4               	movwf	___flmul@b
  9565  1DE2  081E               	movf	30,w	;volatile
  9566  1DE3  00D8               	movwf	??_ADC_channel1
  9567  1DE4  01D9               	clrf	??_ADC_channel1+1
  9568  1DE5  01DA               	clrf	??_ADC_channel1+2
  9569  1DE6  01DB               	clrf	??_ADC_channel1+3
  9570  1DE7  085B               	movf	??_ADC_channel1+3,w
  9571  1DE8  00F3               	movwf	___xxtofl@val+3
  9572  1DE9  085A               	movf	??_ADC_channel1+2,w
  9573  1DEA  00F2               	movwf	___xxtofl@val+2
  9574  1DEB  0859               	movf	??_ADC_channel1+1,w
  9575  1DEC  00F1               	movwf	___xxtofl@val+1
  9576  1DED  0858               	movf	??_ADC_channel1,w
  9577  1DEE  00F0               	movwf	___xxtofl@val
  9578  1DEF  3001               	movlw	1
  9579  1DF0  160A  158A  2746  160A  158A  	fcall	___xxtofl
  9580  1DF5  0873               	movf	?___xxtofl+3,w
  9581  1DF6  1283               	bcf	3,5	;RP0=0, select bank0
  9582  1DF7  1303               	bcf	3,6	;RP1=0, select bank0
  9583  1DF8  00AB               	movwf	___flmul@a+3
  9584  1DF9  0872               	movf	?___xxtofl+2,w
  9585  1DFA  00AA               	movwf	___flmul@a+2
  9586  1DFB  0871               	movf	?___xxtofl+1,w
  9587  1DFC  00A9               	movwf	___flmul@a+1
  9588  1DFD  0870               	movf	?___xxtofl,w
  9589  1DFE  00A8               	movwf	___flmul@a
  9590  1DFF  120A  158A  249F  160A  158A  	fcall	___flmul
  9591  1E04  1283               	bcf	3,5	;RP0=0, select bank0
  9592  1E05  1303               	bcf	3,6	;RP1=0, select bank0
  9593  1E06  0827               	movf	?___flmul+3,w
  9594  1E07  00C5               	movwf	___fldiv@b+3
  9595  1E08  0826               	movf	?___flmul+2,w
  9596  1E09  00C4               	movwf	___fldiv@b+2
  9597  1E0A  0825               	movf	?___flmul+1,w
  9598  1E0B  00C3               	movwf	___fldiv@b+1
  9599  1E0C  0824               	movf	?___flmul,w
  9600  1E0D  00C2               	movwf	___fldiv@b
  9601  1E0E  160A  118A  2190  160A  158A  	fcall	___fldiv
  9602  1E13  1283               	bcf	3,5	;RP0=0, select bank0
  9603  1E14  1303               	bcf	3,6	;RP1=0, select bank0
  9604  1E15  0841               	movf	?___fldiv+3,w
  9605  1E16  1683               	bsf	3,5	;RP0=1, select bank1
  9606  1E17  1303               	bcf	3,6	;RP1=0, select bank1
  9607  1E18  00CE               	movwf	(_S1_val+3)^(0+128)
  9608  1E19  1283               	bcf	3,5	;RP0=0, select bank0
  9609  1E1A  1303               	bcf	3,6	;RP1=0, select bank0
  9610  1E1B  0840               	movf	?___fldiv+2,w
  9611  1E1C  1683               	bsf	3,5	;RP0=1, select bank1
  9612  1E1D  1303               	bcf	3,6	;RP1=0, select bank1
  9613  1E1E  00CD               	movwf	(_S1_val+2)^(0+128)
  9614  1E1F  1283               	bcf	3,5	;RP0=0, select bank0
  9615  1E20  1303               	bcf	3,6	;RP1=0, select bank0
  9616  1E21  083F               	movf	?___fldiv+1,w
  9617  1E22  1683               	bsf	3,5	;RP0=1, select bank1
  9618  1E23  1303               	bcf	3,6	;RP1=0, select bank1
  9619  1E24  00CC               	movwf	(_S1_val+1)^(0+128)
  9620  1E25  1283               	bcf	3,5	;RP0=0, select bank0
  9621  1E26  1303               	bcf	3,6	;RP1=0, select bank0
  9622  1E27  083E               	movf	?___fldiv,w
  9623  1E28  1683               	bsf	3,5	;RP0=1, select bank1
  9624  1E29  1303               	bcf	3,6	;RP1=0, select bank1
  9625  1E2A  00CB               	movwf	_S1_val^(0+128)
  9626  1E2B                     l3847:
  9627                           
  9628                           ;pseudocodigo_lab3.c: 143:     while (ADCON0bits.GO != 0) {
  9629  1E2B  1283               	bcf	3,5	;RP0=0, select bank0
  9630  1E2C  189F               	btfsc	31,1	;volatile
  9631  1E2D  2E2F               	goto	u6121
  9632  1E2E  2E30               	goto	u6120
  9633  1E2F                     u6121:
  9634  1E2F  2DD2               	goto	l3845
  9635  1E30                     u6120:
  9636  1E30                     l79:
  9637  1E30  0008               	return
  9638  1E31                     __end_of_ADC_channel1:
  9639                           
  9640                           	psect	text32
  9641  1F46                     __ptext32:	
  9642 ;; *************** function ___xxtofl *****************
  9643 ;; Defined at:
  9644 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;  sign            1    wreg     unsigned char 
  9647 ;;  val             4    0[COMMON] long 
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;  sign            1    8[COMMON] unsigned char 
  9650 ;;  arg             4   10[COMMON] unsigned long 
  9651 ;;  exp             1    9[COMMON] unsigned char 
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  4    0[COMMON] unsigned char 
  9654 ;; Registers used:
  9655 ;;		wreg, status,2, status,0
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9661 ;;      Params:         4       0       0       0       0
  9662 ;;      Locals:         6       0       0       0       0
  9663 ;;      Temps:          4       0       0       0       0
  9664 ;;      Totals:        14       0       0       0       0
  9665 ;;Total ram usage:       14 bytes
  9666 ;; Hardware stack levels used:    1
  9667 ;; This function calls:
  9668 ;;		Nothing
  9669 ;; This function is called by:
  9670 ;;		_ADC_channel1
  9671 ;;		_ADC_channel2
  9672 ;;		_sprintf
  9673 ;; This function uses a non-reentrant model
  9674 ;;
  9675                           
  9676                           
  9677                           ;psect for function ___xxtofl
  9678  1F46                     ___xxtofl:
  9679                           
  9680                           ;incstack = 0
  9681                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9682                           ;___xxtofl@sign stored from wreg
  9683  1F46  00F8               	movwf	___xxtofl@sign
  9684  1F47                     l3293:
  9685  1F47  0878               	movf	___xxtofl@sign,w
  9686  1F48  1903               	btfsc	3,2
  9687  1F49  2F4B               	goto	u5171
  9688  1F4A  2F4C               	goto	u5170
  9689  1F4B                     u5171:
  9690  1F4B  2F60               	goto	l3299
  9691  1F4C                     u5170:
  9692  1F4C                     l3295:
  9693  1F4C  1FF3               	btfss	___xxtofl@val+3,7
  9694  1F4D  2F4F               	goto	u5181
  9695  1F4E  2F50               	goto	u5180
  9696  1F4F                     u5181:
  9697  1F4F  2F60               	goto	l3299
  9698  1F50                     u5180:
  9699  1F50                     l3297:
  9700  1F50  0970               	comf	___xxtofl@val,w
  9701  1F51  00FA               	movwf	___xxtofl@arg
  9702  1F52  0971               	comf	___xxtofl@val+1,w
  9703  1F53  00FB               	movwf	___xxtofl@arg+1
  9704  1F54  0972               	comf	___xxtofl@val+2,w
  9705  1F55  00FC               	movwf	___xxtofl@arg+2
  9706  1F56  0973               	comf	___xxtofl@val+3,w
  9707  1F57  00FD               	movwf	___xxtofl@arg+3
  9708  1F58  0AFA               	incf	___xxtofl@arg,f
  9709  1F59  1903               	skipnz
  9710  1F5A  0AFB               	incf	___xxtofl@arg+1,f
  9711  1F5B  1903               	skipnz
  9712  1F5C  0AFC               	incf	___xxtofl@arg+2,f
  9713  1F5D  1903               	skipnz
  9714  1F5E  0AFD               	incf	___xxtofl@arg+3,f
  9715  1F5F  2F68               	goto	l875
  9716  1F60                     l3299:
  9717  1F60  0873               	movf	___xxtofl@val+3,w
  9718  1F61  00FD               	movwf	___xxtofl@arg+3
  9719  1F62  0872               	movf	___xxtofl@val+2,w
  9720  1F63  00FC               	movwf	___xxtofl@arg+2
  9721  1F64  0871               	movf	___xxtofl@val+1,w
  9722  1F65  00FB               	movwf	___xxtofl@arg+1
  9723  1F66  0870               	movf	___xxtofl@val,w
  9724  1F67  00FA               	movwf	___xxtofl@arg
  9725  1F68                     l875:
  9726  1F68  0873               	movf	___xxtofl@val+3,w
  9727  1F69  0472               	iorwf	___xxtofl@val+2,w
  9728  1F6A  0471               	iorwf	___xxtofl@val+1,w
  9729  1F6B  0470               	iorwf	___xxtofl@val,w
  9730  1F6C  1D03               	skipz
  9731  1F6D  2F6F               	goto	u5191
  9732  1F6E  2F70               	goto	u5190
  9733  1F6F                     u5191:
  9734  1F6F  2F79               	goto	l3305
  9735  1F70                     u5190:
  9736  1F70                     l3301:
  9737  1F70  3000               	movlw	0
  9738  1F71  00F3               	movwf	?___xxtofl+3
  9739  1F72  3000               	movlw	0
  9740  1F73  00F2               	movwf	?___xxtofl+2
  9741  1F74  3000               	movlw	0
  9742  1F75  00F1               	movwf	?___xxtofl+1
  9743  1F76  3000               	movlw	0
  9744  1F77  00F0               	movwf	?___xxtofl
  9745  1F78  2FFF               	goto	l877
  9746  1F79                     l3305:
  9747  1F79  3096               	movlw	150
  9748  1F7A  00F4               	movwf	??___xxtofl
  9749  1F7B  0874               	movf	??___xxtofl,w
  9750  1F7C  00F9               	movwf	___xxtofl@exp
  9751  1F7D  2F8B               	goto	l3309
  9752  1F7E                     l3307:
  9753  1F7E  3001               	movlw	1
  9754  1F7F  00F4               	movwf	??___xxtofl
  9755  1F80  0874               	movf	??___xxtofl,w
  9756  1F81  07F9               	addwf	___xxtofl@exp,f
  9757  1F82  3001               	movlw	1
  9758  1F83                     u5205:
  9759  1F83  1003               	clrc
  9760  1F84  0CFD               	rrf	___xxtofl@arg+3,f
  9761  1F85  0CFC               	rrf	___xxtofl@arg+2,f
  9762  1F86  0CFB               	rrf	___xxtofl@arg+1,f
  9763  1F87  0CFA               	rrf	___xxtofl@arg,f
  9764  1F88  3EFF               	addlw	-1
  9765  1F89  1D03               	skipz
  9766  1F8A  2F83               	goto	u5205
  9767  1F8B                     l3309:
  9768  1F8B  30FE               	movlw	254
  9769  1F8C  057D               	andwf	___xxtofl@arg+3,w
  9770  1F8D  1D03               	btfss	3,2
  9771  1F8E  2F90               	goto	u5211
  9772  1F8F  2F91               	goto	u5210
  9773  1F90                     u5211:
  9774  1F90  2F7E               	goto	l3307
  9775  1F91                     u5210:
  9776  1F91  2FAD               	goto	l881
  9777  1F92                     l3311:
  9778  1F92  3001               	movlw	1
  9779  1F93  00F4               	movwf	??___xxtofl
  9780  1F94  0874               	movf	??___xxtofl,w
  9781  1F95  07F9               	addwf	___xxtofl@exp,f
  9782  1F96                     l3313:
  9783  1F96  3001               	movlw	1
  9784  1F97  07FA               	addwf	___xxtofl@arg,f
  9785  1F98  3000               	movlw	0
  9786  1F99  1803               	skipnc
  9787  1F9A  3001               	movlw	1
  9788  1F9B  07FB               	addwf	___xxtofl@arg+1,f
  9789  1F9C  3000               	movlw	0
  9790  1F9D  1803               	skipnc
  9791  1F9E  3001               	movlw	1
  9792  1F9F  07FC               	addwf	___xxtofl@arg+2,f
  9793  1FA0  3000               	movlw	0
  9794  1FA1  1803               	skipnc
  9795  1FA2  3001               	movlw	1
  9796  1FA3  07FD               	addwf	___xxtofl@arg+3,f
  9797  1FA4                     l3315:
  9798  1FA4  3001               	movlw	1
  9799  1FA5                     u5225:
  9800  1FA5  1003               	clrc
  9801  1FA6  0CFD               	rrf	___xxtofl@arg+3,f
  9802  1FA7  0CFC               	rrf	___xxtofl@arg+2,f
  9803  1FA8  0CFB               	rrf	___xxtofl@arg+1,f
  9804  1FA9  0CFA               	rrf	___xxtofl@arg,f
  9805  1FAA  3EFF               	addlw	-1
  9806  1FAB  1D03               	skipz
  9807  1FAC  2FA5               	goto	u5225
  9808  1FAD                     l881:
  9809  1FAD  30FF               	movlw	255
  9810  1FAE  057D               	andwf	___xxtofl@arg+3,w
  9811  1FAF  1D03               	btfss	3,2
  9812  1FB0  2FB2               	goto	u5231
  9813  1FB1  2FB3               	goto	u5230
  9814  1FB2                     u5231:
  9815  1FB2  2F92               	goto	l3311
  9816  1FB3                     u5230:
  9817  1FB3  2FBF               	goto	l3319
  9818  1FB4                     l3317:
  9819  1FB4  3001               	movlw	1
  9820  1FB5  02F9               	subwf	___xxtofl@exp,f
  9821  1FB6  3001               	movlw	1
  9822  1FB7  00F4               	movwf	??___xxtofl
  9823  1FB8                     u5245:
  9824  1FB8  1003               	clrc
  9825  1FB9  0DFA               	rlf	___xxtofl@arg,f
  9826  1FBA  0DFB               	rlf	___xxtofl@arg+1,f
  9827  1FBB  0DFC               	rlf	___xxtofl@arg+2,f
  9828  1FBC  0DFD               	rlf	___xxtofl@arg+3,f
  9829  1FBD  0BF4               	decfsz	??___xxtofl,f
  9830  1FBE  2FB8               	goto	u5245
  9831  1FBF                     l3319:
  9832  1FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  9833  1FC0  2FC2               	goto	u5251
  9834  1FC1  2FC3               	goto	u5250
  9835  1FC2                     u5251:
  9836  1FC2  2FC9               	goto	l888
  9837  1FC3                     u5250:
  9838  1FC3                     l3321:
  9839  1FC3  3002               	movlw	2
  9840  1FC4  0279               	subwf	___xxtofl@exp,w
  9841  1FC5  1803               	skipnc
  9842  1FC6  2FC8               	goto	u5261
  9843  1FC7  2FC9               	goto	u5260
  9844  1FC8                     u5261:
  9845  1FC8  2FB4               	goto	l3317
  9846  1FC9                     u5260:
  9847  1FC9                     l888:
  9848  1FC9  1879               	btfsc	___xxtofl@exp,0
  9849  1FCA  2FCC               	goto	u5271
  9850  1FCB  2FCD               	goto	u5270
  9851  1FCC                     u5271:
  9852  1FCC  2FD5               	goto	l889
  9853  1FCD                     u5270:
  9854  1FCD                     l3323:
  9855  1FCD  30FF               	movlw	255
  9856  1FCE  05FA               	andwf	___xxtofl@arg,f
  9857  1FCF  30FF               	movlw	255
  9858  1FD0  05FB               	andwf	___xxtofl@arg+1,f
  9859  1FD1  307F               	movlw	127
  9860  1FD2  05FC               	andwf	___xxtofl@arg+2,f
  9861  1FD3  30FF               	movlw	255
  9862  1FD4  05FD               	andwf	___xxtofl@arg+3,f
  9863  1FD5                     l889:
  9864  1FD5  1003               	clrc
  9865  1FD6  0CF9               	rrf	___xxtofl@exp,f
  9866  1FD7                     l3325:
  9867  1FD7  0879               	movf	___xxtofl@exp,w
  9868  1FD8  00F4               	movwf	??___xxtofl
  9869  1FD9  01F5               	clrf	??___xxtofl+1
  9870  1FDA  01F6               	clrf	??___xxtofl+2
  9871  1FDB  01F7               	clrf	??___xxtofl+3
  9872  1FDC  3018               	movlw	24
  9873  1FDD                     u5285:
  9874  1FDD  1003               	clrc
  9875  1FDE  0DF4               	rlf	??___xxtofl,f
  9876  1FDF  0DF5               	rlf	??___xxtofl+1,f
  9877  1FE0  0DF6               	rlf	??___xxtofl+2,f
  9878  1FE1  0DF7               	rlf	??___xxtofl+3,f
  9879  1FE2                     u5280:
  9880  1FE2  3EFF               	addlw	-1
  9881  1FE3  1D03               	skipz
  9882  1FE4  2FDD               	goto	u5285
  9883  1FE5  0874               	movf	??___xxtofl,w
  9884  1FE6  04FA               	iorwf	___xxtofl@arg,f
  9885  1FE7  0875               	movf	??___xxtofl+1,w
  9886  1FE8  04FB               	iorwf	___xxtofl@arg+1,f
  9887  1FE9  0876               	movf	??___xxtofl+2,w
  9888  1FEA  04FC               	iorwf	___xxtofl@arg+2,f
  9889  1FEB  0877               	movf	??___xxtofl+3,w
  9890  1FEC  04FD               	iorwf	___xxtofl@arg+3,f
  9891  1FED                     l3327:
  9892  1FED  0878               	movf	___xxtofl@sign,w
  9893  1FEE  1903               	btfsc	3,2
  9894  1FEF  2FF1               	goto	u5291
  9895  1FF0  2FF2               	goto	u5290
  9896  1FF1                     u5291:
  9897  1FF1  2FF7               	goto	l3333
  9898  1FF2                     u5290:
  9899  1FF2                     l3329:
  9900  1FF2  1FF3               	btfss	___xxtofl@val+3,7
  9901  1FF3  2FF5               	goto	u5301
  9902  1FF4  2FF6               	goto	u5300
  9903  1FF5                     u5301:
  9904  1FF5  2FF7               	goto	l3333
  9905  1FF6                     u5300:
  9906  1FF6                     l3331:
  9907  1FF6  17FD               	bsf	___xxtofl@arg+3,7
  9908  1FF7                     l3333:
  9909  1FF7  087D               	movf	___xxtofl@arg+3,w
  9910  1FF8  00F3               	movwf	?___xxtofl+3
  9911  1FF9  087C               	movf	___xxtofl@arg+2,w
  9912  1FFA  00F2               	movwf	?___xxtofl+2
  9913  1FFB  087B               	movf	___xxtofl@arg+1,w
  9914  1FFC  00F1               	movwf	?___xxtofl+1
  9915  1FFD  087A               	movf	___xxtofl@arg,w
  9916  1FFE  00F0               	movwf	?___xxtofl
  9917  1FFF                     l877:
  9918  1FFF  0008               	return
  9919  2000                     __end_of___xxtofl:
  9920                           
  9921                           	psect	text33
  9922  0C9F                     __ptext33:	
  9923 ;; *************** function ___flmul *****************
  9924 ;; Defined at:
  9925 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;  b               4    4[BANK0 ] unsigned char 
  9928 ;;  a               4    8[BANK0 ] unsigned char 
  9929 ;; Auto vars:     Size  Location     Type
  9930 ;;  prod            4   24[BANK0 ] struct .
  9931 ;;  grs             4   18[BANK0 ] unsigned long 
  9932 ;;  temp            2   28[BANK0 ] struct .
  9933 ;;  bexp            1   23[BANK0 ] unsigned char 
  9934 ;;  aexp            1   22[BANK0 ] unsigned char 
  9935 ;;  sign            1   17[BANK0 ] unsigned char 
  9936 ;; Return value:  Size  Location     Type
  9937 ;;                  4    4[BANK0 ] unsigned char 
  9938 ;; Registers used:
  9939 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9940 ;; Tracked objects:
  9941 ;;		On entry : 0/0
  9942 ;;		On exit  : 0/0
  9943 ;;		Unchanged: 0/0
  9944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9945 ;;      Params:         0       8       0       0       0
  9946 ;;      Locals:         0      13       0       0       0
  9947 ;;      Temps:          0       5       0       0       0
  9948 ;;      Totals:         0      26       0       0       0
  9949 ;;Total ram usage:       26 bytes
  9950 ;; Hardware stack levels used:    1
  9951 ;; Hardware stack levels required when called:    1
  9952 ;; This function calls:
  9953 ;;		__Umul8_16
  9954 ;; This function is called by:
  9955 ;;		_ADC_channel1
  9956 ;;		_ADC_channel2
  9957 ;;		_fround
  9958 ;;		_scale
  9959 ;;		_sprintf
  9960 ;; This function uses a non-reentrant model
  9961 ;;
  9962                           
  9963                           
  9964                           ;psect for function ___flmul
  9965  0C9F                     ___flmul:
  9966  0C9F                     l2819:	
  9967                           ;incstack = 0
  9968                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9969                           
  9970  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  9971  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  9972  0CA1  0827               	movf	___flmul@b+3,w
  9973  0CA2  3980               	andlw	128
  9974  0CA3  00AC               	movwf	??___flmul
  9975  0CA4  082C               	movf	??___flmul,w
  9976  0CA5  00B1               	movwf	___flmul@sign
  9977  0CA6                     l2821:
  9978  0CA6  0827               	movf	___flmul@b+3,w
  9979  0CA7  00AC               	movwf	??___flmul
  9980  0CA8  072C               	addwf	??___flmul,w
  9981  0CA9  00AD               	movwf	??___flmul+1
  9982  0CAA  082D               	movf	??___flmul+1,w
  9983  0CAB  00B7               	movwf	___flmul@bexp
  9984  0CAC                     l2823:
  9985  0CAC  1FA6               	btfss	___flmul@b+2,7
  9986  0CAD  2CAF               	goto	u3891
  9987  0CAE  2CB0               	goto	u3890
  9988  0CAF                     u3891:
  9989  0CAF  2CB1               	goto	l2827
  9990  0CB0                     u3890:
  9991  0CB0                     l2825:
  9992  0CB0  1437               	bsf	___flmul@bexp,0
  9993  0CB1                     l2827:
  9994  0CB1  0837               	movf	___flmul@bexp,w
  9995  0CB2  1903               	btfsc	3,2
  9996  0CB3  2CB5               	goto	u3901
  9997  0CB4  2CB6               	goto	u3900
  9998  0CB5                     u3901:
  9999  0CB5  2CC5               	goto	l2835
 10000  0CB6                     u3900:
 10001  0CB6                     l2829:
 10002  0CB6  0A37               	incf	___flmul@bexp,w
 10003  0CB7  1D03               	btfss	3,2
 10004  0CB8  2CBA               	goto	u3911
 10005  0CB9  2CBB               	goto	u3910
 10006  0CBA                     u3911:
 10007  0CBA  2CC3               	goto	l2833
 10008  0CBB                     u3910:
 10009  0CBB                     l2831:
 10010  0CBB  3000               	movlw	0
 10011  0CBC  00A7               	movwf	___flmul@b+3
 10012  0CBD  3000               	movlw	0
 10013  0CBE  00A6               	movwf	___flmul@b+2
 10014  0CBF  3000               	movlw	0
 10015  0CC0  00A5               	movwf	___flmul@b+1
 10016  0CC1  3000               	movlw	0
 10017  0CC2  00A4               	movwf	___flmul@b
 10018  0CC3                     l2833:
 10019  0CC3  17A6               	bsf	___flmul@b+2,7
 10020  0CC4  2CCD               	goto	l2837
 10021  0CC5                     l2835:
 10022  0CC5  3000               	movlw	0
 10023  0CC6  00A7               	movwf	___flmul@b+3
 10024  0CC7  3000               	movlw	0
 10025  0CC8  00A6               	movwf	___flmul@b+2
 10026  0CC9  3000               	movlw	0
 10027  0CCA  00A5               	movwf	___flmul@b+1
 10028  0CCB  3000               	movlw	0
 10029  0CCC  00A4               	movwf	___flmul@b
 10030  0CCD                     l2837:
 10031  0CCD  082B               	movf	___flmul@a+3,w
 10032  0CCE  3980               	andlw	128
 10033  0CCF  00AC               	movwf	??___flmul
 10034  0CD0  082C               	movf	??___flmul,w
 10035  0CD1  06B1               	xorwf	___flmul@sign,f
 10036  0CD2                     l2839:
 10037  0CD2  082B               	movf	___flmul@a+3,w
 10038  0CD3  00AC               	movwf	??___flmul
 10039  0CD4  072C               	addwf	??___flmul,w
 10040  0CD5  00AD               	movwf	??___flmul+1
 10041  0CD6  082D               	movf	??___flmul+1,w
 10042  0CD7  00B6               	movwf	___flmul@aexp
 10043  0CD8                     l2841:
 10044  0CD8  1FAA               	btfss	___flmul@a+2,7
 10045  0CD9  2CDB               	goto	u3921
 10046  0CDA  2CDC               	goto	u3920
 10047  0CDB                     u3921:
 10048  0CDB  2CDD               	goto	l2845
 10049  0CDC                     u3920:
 10050  0CDC                     l2843:
 10051  0CDC  1436               	bsf	___flmul@aexp,0
 10052  0CDD                     l2845:
 10053  0CDD  0836               	movf	___flmul@aexp,w
 10054  0CDE  1903               	btfsc	3,2
 10055  0CDF  2CE1               	goto	u3931
 10056  0CE0  2CE2               	goto	u3930
 10057  0CE1                     u3931:
 10058  0CE1  2CF1               	goto	l2853
 10059  0CE2                     u3930:
 10060  0CE2                     l2847:
 10061  0CE2  0A36               	incf	___flmul@aexp,w
 10062  0CE3  1D03               	btfss	3,2
 10063  0CE4  2CE6               	goto	u3941
 10064  0CE5  2CE7               	goto	u3940
 10065  0CE6                     u3941:
 10066  0CE6  2CEF               	goto	l2851
 10067  0CE7                     u3940:
 10068  0CE7                     l2849:
 10069  0CE7  3000               	movlw	0
 10070  0CE8  00AB               	movwf	___flmul@a+3
 10071  0CE9  3000               	movlw	0
 10072  0CEA  00AA               	movwf	___flmul@a+2
 10073  0CEB  3000               	movlw	0
 10074  0CEC  00A9               	movwf	___flmul@a+1
 10075  0CED  3000               	movlw	0
 10076  0CEE  00A8               	movwf	___flmul@a
 10077  0CEF                     l2851:
 10078  0CEF  17AA               	bsf	___flmul@a+2,7
 10079  0CF0  2CF9               	goto	l2855
 10080  0CF1                     l2853:
 10081  0CF1  3000               	movlw	0
 10082  0CF2  00AB               	movwf	___flmul@a+3
 10083  0CF3  3000               	movlw	0
 10084  0CF4  00AA               	movwf	___flmul@a+2
 10085  0CF5  3000               	movlw	0
 10086  0CF6  00A9               	movwf	___flmul@a+1
 10087  0CF7  3000               	movlw	0
 10088  0CF8  00A8               	movwf	___flmul@a
 10089  0CF9                     l2855:
 10090  0CF9  0836               	movf	___flmul@aexp,w
 10091  0CFA  1903               	btfsc	3,2
 10092  0CFB  2CFD               	goto	u3951
 10093  0CFC  2CFE               	goto	u3950
 10094  0CFD                     u3951:
 10095  0CFD  2D03               	goto	l2859
 10096  0CFE                     u3950:
 10097  0CFE                     l2857:
 10098  0CFE  0837               	movf	___flmul@bexp,w
 10099  0CFF  1D03               	btfss	3,2
 10100  0D00  2D02               	goto	u3961
 10101  0D01  2D03               	goto	u3960
 10102  0D02                     u3961:
 10103  0D02  2D0C               	goto	l2863
 10104  0D03                     u3960:
 10105  0D03                     l2859:
 10106  0D03  3000               	movlw	0
 10107  0D04  00A7               	movwf	?___flmul+3
 10108  0D05  3000               	movlw	0
 10109  0D06  00A6               	movwf	?___flmul+2
 10110  0D07  3000               	movlw	0
 10111  0D08  00A5               	movwf	?___flmul+1
 10112  0D09  3000               	movlw	0
 10113  0D0A  00A4               	movwf	?___flmul
 10114  0D0B  2FFF               	goto	l831
 10115  0D0C                     l2863:
 10116  0D0C  0824               	movf	___flmul@b,w
 10117  0D0D  00AC               	movwf	??___flmul
 10118  0D0E  082C               	movf	??___flmul,w
 10119  0D0F  00F0               	movwf	__Umul8_16@multiplicand
 10120  0D10  082A               	movf	___flmul@a+2,w
 10121  0D11  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10122  0D16  0871               	movf	?__Umul8_16+1,w
 10123  0D17  1283               	bcf	3,5	;RP0=0, select bank0
 10124  0D18  1303               	bcf	3,6	;RP1=0, select bank0
 10125  0D19  00BD               	movwf	___flmul@temp+1
 10126  0D1A  0870               	movf	?__Umul8_16,w
 10127  0D1B  00BC               	movwf	___flmul@temp
 10128  0D1C                     l2865:
 10129  0D1C  083C               	movf	___flmul@temp,w
 10130  0D1D  00AC               	movwf	??___flmul
 10131  0D1E  01AD               	clrf	??___flmul+1
 10132  0D1F  01AE               	clrf	??___flmul+2
 10133  0D20  01AF               	clrf	??___flmul+3
 10134  0D21  082F               	movf	??___flmul+3,w
 10135  0D22  00B5               	movwf	___flmul@grs+3
 10136  0D23  082E               	movf	??___flmul+2,w
 10137  0D24  00B4               	movwf	___flmul@grs+2
 10138  0D25  082D               	movf	??___flmul+1,w
 10139  0D26  00B3               	movwf	___flmul@grs+1
 10140  0D27  082C               	movf	??___flmul,w
 10141  0D28  00B2               	movwf	___flmul@grs
 10142  0D29                     l2867:
 10143  0D29  083D               	movf	___flmul@temp+1,w
 10144  0D2A  00AC               	movwf	??___flmul
 10145  0D2B  01AD               	clrf	??___flmul+1
 10146  0D2C  01AE               	clrf	??___flmul+2
 10147  0D2D  01AF               	clrf	??___flmul+3
 10148  0D2E  082F               	movf	??___flmul+3,w
 10149  0D2F  00BB               	movwf	___flmul@prod+3
 10150  0D30  082E               	movf	??___flmul+2,w
 10151  0D31  00BA               	movwf	___flmul@prod+2
 10152  0D32  082D               	movf	??___flmul+1,w
 10153  0D33  00B9               	movwf	___flmul@prod+1
 10154  0D34  082C               	movf	??___flmul,w
 10155  0D35  00B8               	movwf	___flmul@prod
 10156  0D36  0825               	movf	___flmul@b+1,w
 10157  0D37  00AC               	movwf	??___flmul
 10158  0D38  082C               	movf	??___flmul,w
 10159  0D39  00F0               	movwf	__Umul8_16@multiplicand
 10160  0D3A  0829               	movf	___flmul@a+1,w
 10161  0D3B  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10162  0D40  0871               	movf	?__Umul8_16+1,w
 10163  0D41  1283               	bcf	3,5	;RP0=0, select bank0
 10164  0D42  1303               	bcf	3,6	;RP1=0, select bank0
 10165  0D43  00BD               	movwf	___flmul@temp+1
 10166  0D44  0870               	movf	?__Umul8_16,w
 10167  0D45  00BC               	movwf	___flmul@temp
 10168  0D46                     l2869:
 10169  0D46  083C               	movf	___flmul@temp,w
 10170  0D47  00AC               	movwf	??___flmul
 10171  0D48  01AD               	clrf	??___flmul+1
 10172  0D49  01AE               	clrf	??___flmul+2
 10173  0D4A  01AF               	clrf	??___flmul+3
 10174  0D4B  082C               	movf	??___flmul,w
 10175  0D4C  07B2               	addwf	___flmul@grs,f
 10176  0D4D  082D               	movf	??___flmul+1,w
 10177  0D4E  1103               	clrz
 10178  0D4F  1803               	skipnc
 10179  0D50  3E01               	addlw	1
 10180  0D51  1903               	skipnz
 10181  0D52  2D54               	goto	u3971
 10182  0D53  07B3               	addwf	___flmul@grs+1,f
 10183  0D54                     u3971:
 10184  0D54  082E               	movf	??___flmul+2,w
 10185  0D55  1103               	clrz
 10186  0D56  1803               	skipnc
 10187  0D57  3E01               	addlw	1
 10188  0D58  1903               	skipnz
 10189  0D59  2D5B               	goto	u3972
 10190  0D5A  07B4               	addwf	___flmul@grs+2,f
 10191  0D5B                     u3972:
 10192  0D5B  082F               	movf	??___flmul+3,w
 10193  0D5C  1103               	clrz
 10194  0D5D  1803               	skipnc
 10195  0D5E  3E01               	addlw	1
 10196  0D5F  1903               	skipnz
 10197  0D60  2D62               	goto	u3973
 10198  0D61  07B5               	addwf	___flmul@grs+3,f
 10199  0D62                     u3973:
 10200  0D62                     l2871:
 10201  0D62  083D               	movf	___flmul@temp+1,w
 10202  0D63  00AC               	movwf	??___flmul
 10203  0D64  01AD               	clrf	??___flmul+1
 10204  0D65  01AE               	clrf	??___flmul+2
 10205  0D66  01AF               	clrf	??___flmul+3
 10206  0D67  082C               	movf	??___flmul,w
 10207  0D68  07B8               	addwf	___flmul@prod,f
 10208  0D69  082D               	movf	??___flmul+1,w
 10209  0D6A  1103               	clrz
 10210  0D6B  1803               	skipnc
 10211  0D6C  3E01               	addlw	1
 10212  0D6D  1903               	skipnz
 10213  0D6E  2D70               	goto	u3981
 10214  0D6F  07B9               	addwf	___flmul@prod+1,f
 10215  0D70                     u3981:
 10216  0D70  082E               	movf	??___flmul+2,w
 10217  0D71  1103               	clrz
 10218  0D72  1803               	skipnc
 10219  0D73  3E01               	addlw	1
 10220  0D74  1903               	skipnz
 10221  0D75  2D77               	goto	u3982
 10222  0D76  07BA               	addwf	___flmul@prod+2,f
 10223  0D77                     u3982:
 10224  0D77  082F               	movf	??___flmul+3,w
 10225  0D78  1103               	clrz
 10226  0D79  1803               	skipnc
 10227  0D7A  3E01               	addlw	1
 10228  0D7B  1903               	skipnz
 10229  0D7C  2D7E               	goto	u3983
 10230  0D7D  07BB               	addwf	___flmul@prod+3,f
 10231  0D7E                     u3983:
 10232  0D7E  0826               	movf	___flmul@b+2,w
 10233  0D7F  00AC               	movwf	??___flmul
 10234  0D80  082C               	movf	??___flmul,w
 10235  0D81  00F0               	movwf	__Umul8_16@multiplicand
 10236  0D82  0828               	movf	___flmul@a,w
 10237  0D83  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10238  0D88  0871               	movf	?__Umul8_16+1,w
 10239  0D89  1283               	bcf	3,5	;RP0=0, select bank0
 10240  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
 10241  0D8B  00BD               	movwf	___flmul@temp+1
 10242  0D8C  0870               	movf	?__Umul8_16,w
 10243  0D8D  00BC               	movwf	___flmul@temp
 10244  0D8E                     l2873:
 10245  0D8E  083C               	movf	___flmul@temp,w
 10246  0D8F  00AC               	movwf	??___flmul
 10247  0D90  01AD               	clrf	??___flmul+1
 10248  0D91  01AE               	clrf	??___flmul+2
 10249  0D92  01AF               	clrf	??___flmul+3
 10250  0D93  082C               	movf	??___flmul,w
 10251  0D94  07B2               	addwf	___flmul@grs,f
 10252  0D95  082D               	movf	??___flmul+1,w
 10253  0D96  1103               	clrz
 10254  0D97  1803               	skipnc
 10255  0D98  3E01               	addlw	1
 10256  0D99  1903               	skipnz
 10257  0D9A  2D9C               	goto	u3991
 10258  0D9B  07B3               	addwf	___flmul@grs+1,f
 10259  0D9C                     u3991:
 10260  0D9C  082E               	movf	??___flmul+2,w
 10261  0D9D  1103               	clrz
 10262  0D9E  1803               	skipnc
 10263  0D9F  3E01               	addlw	1
 10264  0DA0  1903               	skipnz
 10265  0DA1  2DA3               	goto	u3992
 10266  0DA2  07B4               	addwf	___flmul@grs+2,f
 10267  0DA3                     u3992:
 10268  0DA3  082F               	movf	??___flmul+3,w
 10269  0DA4  1103               	clrz
 10270  0DA5  1803               	skipnc
 10271  0DA6  3E01               	addlw	1
 10272  0DA7  1903               	skipnz
 10273  0DA8  2DAA               	goto	u3993
 10274  0DA9  07B5               	addwf	___flmul@grs+3,f
 10275  0DAA                     u3993:
 10276  0DAA                     l2875:
 10277  0DAA  083D               	movf	___flmul@temp+1,w
 10278  0DAB  00AC               	movwf	??___flmul
 10279  0DAC  01AD               	clrf	??___flmul+1
 10280  0DAD  01AE               	clrf	??___flmul+2
 10281  0DAE  01AF               	clrf	??___flmul+3
 10282  0DAF  082C               	movf	??___flmul,w
 10283  0DB0  07B8               	addwf	___flmul@prod,f
 10284  0DB1  082D               	movf	??___flmul+1,w
 10285  0DB2  1103               	clrz
 10286  0DB3  1803               	skipnc
 10287  0DB4  3E01               	addlw	1
 10288  0DB5  1903               	skipnz
 10289  0DB6  2DB8               	goto	u4001
 10290  0DB7  07B9               	addwf	___flmul@prod+1,f
 10291  0DB8                     u4001:
 10292  0DB8  082E               	movf	??___flmul+2,w
 10293  0DB9  1103               	clrz
 10294  0DBA  1803               	skipnc
 10295  0DBB  3E01               	addlw	1
 10296  0DBC  1903               	skipnz
 10297  0DBD  2DBF               	goto	u4002
 10298  0DBE  07BA               	addwf	___flmul@prod+2,f
 10299  0DBF                     u4002:
 10300  0DBF  082F               	movf	??___flmul+3,w
 10301  0DC0  1103               	clrz
 10302  0DC1  1803               	skipnc
 10303  0DC2  3E01               	addlw	1
 10304  0DC3  1903               	skipnz
 10305  0DC4  2DC6               	goto	u4003
 10306  0DC5  07BB               	addwf	___flmul@prod+3,f
 10307  0DC6                     u4003:
 10308  0DC6                     l2877:
 10309  0DC6  3008               	movlw	8
 10310  0DC7  00AC               	movwf	??___flmul
 10311  0DC8                     u4015:
 10312  0DC8  1003               	clrc
 10313  0DC9  0DB2               	rlf	___flmul@grs,f
 10314  0DCA  0DB3               	rlf	___flmul@grs+1,f
 10315  0DCB  0DB4               	rlf	___flmul@grs+2,f
 10316  0DCC  0DB5               	rlf	___flmul@grs+3,f
 10317  0DCD  0BAC               	decfsz	??___flmul,f
 10318  0DCE  2DC8               	goto	u4015
 10319  0DCF                     l2879:
 10320  0DCF  0825               	movf	___flmul@b+1,w
 10321  0DD0  00AC               	movwf	??___flmul
 10322  0DD1  082C               	movf	??___flmul,w
 10323  0DD2  00F0               	movwf	__Umul8_16@multiplicand
 10324  0DD3  0828               	movf	___flmul@a,w
 10325  0DD4  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10326  0DD9  0871               	movf	?__Umul8_16+1,w
 10327  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
 10328  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
 10329  0DDC  00BD               	movwf	___flmul@temp+1
 10330  0DDD  0870               	movf	?__Umul8_16,w
 10331  0DDE  00BC               	movwf	___flmul@temp
 10332  0DDF                     l2881:
 10333  0DDF  083C               	movf	___flmul@temp,w
 10334  0DE0  00AC               	movwf	??___flmul
 10335  0DE1  083D               	movf	___flmul@temp+1,w
 10336  0DE2  00AD               	movwf	??___flmul+1
 10337  0DE3  01AE               	clrf	??___flmul+2
 10338  0DE4  01AF               	clrf	??___flmul+3
 10339  0DE5  082C               	movf	??___flmul,w
 10340  0DE6  07B2               	addwf	___flmul@grs,f
 10341  0DE7  082D               	movf	??___flmul+1,w
 10342  0DE8  1103               	clrz
 10343  0DE9  1803               	skipnc
 10344  0DEA  3E01               	addlw	1
 10345  0DEB  1903               	skipnz
 10346  0DEC  2DEE               	goto	u4021
 10347  0DED  07B3               	addwf	___flmul@grs+1,f
 10348  0DEE                     u4021:
 10349  0DEE  082E               	movf	??___flmul+2,w
 10350  0DEF  1103               	clrz
 10351  0DF0  1803               	skipnc
 10352  0DF1  3E01               	addlw	1
 10353  0DF2  1903               	skipnz
 10354  0DF3  2DF5               	goto	u4022
 10355  0DF4  07B4               	addwf	___flmul@grs+2,f
 10356  0DF5                     u4022:
 10357  0DF5  082F               	movf	??___flmul+3,w
 10358  0DF6  1103               	clrz
 10359  0DF7  1803               	skipnc
 10360  0DF8  3E01               	addlw	1
 10361  0DF9  1903               	skipnz
 10362  0DFA  2DFC               	goto	u4023
 10363  0DFB  07B5               	addwf	___flmul@grs+3,f
 10364  0DFC                     u4023:
 10365  0DFC                     l2883:
 10366  0DFC  0824               	movf	___flmul@b,w
 10367  0DFD  00AC               	movwf	??___flmul
 10368  0DFE  082C               	movf	??___flmul,w
 10369  0DFF  00F0               	movwf	__Umul8_16@multiplicand
 10370  0E00  0829               	movf	___flmul@a+1,w
 10371  0E01  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10372  0E06  0871               	movf	?__Umul8_16+1,w
 10373  0E07  1283               	bcf	3,5	;RP0=0, select bank0
 10374  0E08  1303               	bcf	3,6	;RP1=0, select bank0
 10375  0E09  00BD               	movwf	___flmul@temp+1
 10376  0E0A  0870               	movf	?__Umul8_16,w
 10377  0E0B  00BC               	movwf	___flmul@temp
 10378  0E0C                     l2885:
 10379  0E0C  083C               	movf	___flmul@temp,w
 10380  0E0D  00AC               	movwf	??___flmul
 10381  0E0E  083D               	movf	___flmul@temp+1,w
 10382  0E0F  00AD               	movwf	??___flmul+1
 10383  0E10  01AE               	clrf	??___flmul+2
 10384  0E11  01AF               	clrf	??___flmul+3
 10385  0E12  082C               	movf	??___flmul,w
 10386  0E13  07B2               	addwf	___flmul@grs,f
 10387  0E14  082D               	movf	??___flmul+1,w
 10388  0E15  1103               	clrz
 10389  0E16  1803               	skipnc
 10390  0E17  3E01               	addlw	1
 10391  0E18  1903               	skipnz
 10392  0E19  2E1B               	goto	u4031
 10393  0E1A  07B3               	addwf	___flmul@grs+1,f
 10394  0E1B                     u4031:
 10395  0E1B  082E               	movf	??___flmul+2,w
 10396  0E1C  1103               	clrz
 10397  0E1D  1803               	skipnc
 10398  0E1E  3E01               	addlw	1
 10399  0E1F  1903               	skipnz
 10400  0E20  2E22               	goto	u4032
 10401  0E21  07B4               	addwf	___flmul@grs+2,f
 10402  0E22                     u4032:
 10403  0E22  082F               	movf	??___flmul+3,w
 10404  0E23  1103               	clrz
 10405  0E24  1803               	skipnc
 10406  0E25  3E01               	addlw	1
 10407  0E26  1903               	skipnz
 10408  0E27  2E29               	goto	u4033
 10409  0E28  07B5               	addwf	___flmul@grs+3,f
 10410  0E29                     u4033:
 10411  0E29                     l2887:
 10412  0E29  3008               	movlw	8
 10413  0E2A  00AC               	movwf	??___flmul
 10414  0E2B                     u4045:
 10415  0E2B  1003               	clrc
 10416  0E2C  0DB2               	rlf	___flmul@grs,f
 10417  0E2D  0DB3               	rlf	___flmul@grs+1,f
 10418  0E2E  0DB4               	rlf	___flmul@grs+2,f
 10419  0E2F  0DB5               	rlf	___flmul@grs+3,f
 10420  0E30  0BAC               	decfsz	??___flmul,f
 10421  0E31  2E2B               	goto	u4045
 10422  0E32  0824               	movf	___flmul@b,w
 10423  0E33  00AC               	movwf	??___flmul
 10424  0E34  082C               	movf	??___flmul,w
 10425  0E35  00F0               	movwf	__Umul8_16@multiplicand
 10426  0E36  0828               	movf	___flmul@a,w
 10427  0E37  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10428  0E3C  0871               	movf	?__Umul8_16+1,w
 10429  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
 10430  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
 10431  0E3F  00BD               	movwf	___flmul@temp+1
 10432  0E40  0870               	movf	?__Umul8_16,w
 10433  0E41  00BC               	movwf	___flmul@temp
 10434  0E42                     l2889:
 10435  0E42  083C               	movf	___flmul@temp,w
 10436  0E43  00AC               	movwf	??___flmul
 10437  0E44  083D               	movf	___flmul@temp+1,w
 10438  0E45  00AD               	movwf	??___flmul+1
 10439  0E46  01AE               	clrf	??___flmul+2
 10440  0E47  01AF               	clrf	??___flmul+3
 10441  0E48  082C               	movf	??___flmul,w
 10442  0E49  07B2               	addwf	___flmul@grs,f
 10443  0E4A  082D               	movf	??___flmul+1,w
 10444  0E4B  1103               	clrz
 10445  0E4C  1803               	skipnc
 10446  0E4D  3E01               	addlw	1
 10447  0E4E  1903               	skipnz
 10448  0E4F  2E51               	goto	u4051
 10449  0E50  07B3               	addwf	___flmul@grs+1,f
 10450  0E51                     u4051:
 10451  0E51  082E               	movf	??___flmul+2,w
 10452  0E52  1103               	clrz
 10453  0E53  1803               	skipnc
 10454  0E54  3E01               	addlw	1
 10455  0E55  1903               	skipnz
 10456  0E56  2E58               	goto	u4052
 10457  0E57  07B4               	addwf	___flmul@grs+2,f
 10458  0E58                     u4052:
 10459  0E58  082F               	movf	??___flmul+3,w
 10460  0E59  1103               	clrz
 10461  0E5A  1803               	skipnc
 10462  0E5B  3E01               	addlw	1
 10463  0E5C  1903               	skipnz
 10464  0E5D  2E5F               	goto	u4053
 10465  0E5E  07B5               	addwf	___flmul@grs+3,f
 10466  0E5F                     u4053:
 10467  0E5F                     l2891:
 10468  0E5F  0825               	movf	___flmul@b+1,w
 10469  0E60  00AC               	movwf	??___flmul
 10470  0E61  082C               	movf	??___flmul,w
 10471  0E62  00F0               	movwf	__Umul8_16@multiplicand
 10472  0E63  082A               	movf	___flmul@a+2,w
 10473  0E64  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10474  0E69  0871               	movf	?__Umul8_16+1,w
 10475  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
 10476  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
 10477  0E6C  00BD               	movwf	___flmul@temp+1
 10478  0E6D  0870               	movf	?__Umul8_16,w
 10479  0E6E  00BC               	movwf	___flmul@temp
 10480  0E6F  083C               	movf	___flmul@temp,w
 10481  0E70  00AC               	movwf	??___flmul
 10482  0E71  083D               	movf	___flmul@temp+1,w
 10483  0E72  00AD               	movwf	??___flmul+1
 10484  0E73  01AE               	clrf	??___flmul+2
 10485  0E74  01AF               	clrf	??___flmul+3
 10486  0E75  082C               	movf	??___flmul,w
 10487  0E76  07B8               	addwf	___flmul@prod,f
 10488  0E77  082D               	movf	??___flmul+1,w
 10489  0E78  1103               	clrz
 10490  0E79  1803               	skipnc
 10491  0E7A  3E01               	addlw	1
 10492  0E7B  1903               	skipnz
 10493  0E7C  2E7E               	goto	u4061
 10494  0E7D  07B9               	addwf	___flmul@prod+1,f
 10495  0E7E                     u4061:
 10496  0E7E  082E               	movf	??___flmul+2,w
 10497  0E7F  1103               	clrz
 10498  0E80  1803               	skipnc
 10499  0E81  3E01               	addlw	1
 10500  0E82  1903               	skipnz
 10501  0E83  2E85               	goto	u4062
 10502  0E84  07BA               	addwf	___flmul@prod+2,f
 10503  0E85                     u4062:
 10504  0E85  082F               	movf	??___flmul+3,w
 10505  0E86  1103               	clrz
 10506  0E87  1803               	skipnc
 10507  0E88  3E01               	addlw	1
 10508  0E89  1903               	skipnz
 10509  0E8A  2E8C               	goto	u4063
 10510  0E8B  07BB               	addwf	___flmul@prod+3,f
 10511  0E8C                     u4063:
 10512  0E8C                     l2893:
 10513  0E8C  0826               	movf	___flmul@b+2,w
 10514  0E8D  00AC               	movwf	??___flmul
 10515  0E8E  082C               	movf	??___flmul,w
 10516  0E8F  00F0               	movwf	__Umul8_16@multiplicand
 10517  0E90  0829               	movf	___flmul@a+1,w
 10518  0E91  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10519  0E96  0871               	movf	?__Umul8_16+1,w
 10520  0E97  1283               	bcf	3,5	;RP0=0, select bank0
 10521  0E98  1303               	bcf	3,6	;RP1=0, select bank0
 10522  0E99  00BD               	movwf	___flmul@temp+1
 10523  0E9A  0870               	movf	?__Umul8_16,w
 10524  0E9B  00BC               	movwf	___flmul@temp
 10525  0E9C                     l2895:
 10526  0E9C  083C               	movf	___flmul@temp,w
 10527  0E9D  00AC               	movwf	??___flmul
 10528  0E9E  083D               	movf	___flmul@temp+1,w
 10529  0E9F  00AD               	movwf	??___flmul+1
 10530  0EA0  01AE               	clrf	??___flmul+2
 10531  0EA1  01AF               	clrf	??___flmul+3
 10532  0EA2  082C               	movf	??___flmul,w
 10533  0EA3  07B8               	addwf	___flmul@prod,f
 10534  0EA4  082D               	movf	??___flmul+1,w
 10535  0EA5  1103               	clrz
 10536  0EA6  1803               	skipnc
 10537  0EA7  3E01               	addlw	1
 10538  0EA8  1903               	skipnz
 10539  0EA9  2EAB               	goto	u4071
 10540  0EAA  07B9               	addwf	___flmul@prod+1,f
 10541  0EAB                     u4071:
 10542  0EAB  082E               	movf	??___flmul+2,w
 10543  0EAC  1103               	clrz
 10544  0EAD  1803               	skipnc
 10545  0EAE  3E01               	addlw	1
 10546  0EAF  1903               	skipnz
 10547  0EB0  2EB2               	goto	u4072
 10548  0EB1  07BA               	addwf	___flmul@prod+2,f
 10549  0EB2                     u4072:
 10550  0EB2  082F               	movf	??___flmul+3,w
 10551  0EB3  1103               	clrz
 10552  0EB4  1803               	skipnc
 10553  0EB5  3E01               	addlw	1
 10554  0EB6  1903               	skipnz
 10555  0EB7  2EB9               	goto	u4073
 10556  0EB8  07BB               	addwf	___flmul@prod+3,f
 10557  0EB9                     u4073:
 10558  0EB9  0826               	movf	___flmul@b+2,w
 10559  0EBA  00AC               	movwf	??___flmul
 10560  0EBB  082C               	movf	??___flmul,w
 10561  0EBC  00F0               	movwf	__Umul8_16@multiplicand
 10562  0EBD  082A               	movf	___flmul@a+2,w
 10563  0EBE  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10564  0EC3  0871               	movf	?__Umul8_16+1,w
 10565  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
 10566  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
 10567  0EC6  00BD               	movwf	___flmul@temp+1
 10568  0EC7  0870               	movf	?__Umul8_16,w
 10569  0EC8  00BC               	movwf	___flmul@temp
 10570  0EC9                     l2897:
 10571  0EC9  083C               	movf	___flmul@temp,w
 10572  0ECA  00AC               	movwf	??___flmul
 10573  0ECB  083D               	movf	___flmul@temp+1,w
 10574  0ECC  00AD               	movwf	??___flmul+1
 10575  0ECD  01AE               	clrf	??___flmul+2
 10576  0ECE  01AF               	clrf	??___flmul+3
 10577  0ECF  3008               	movlw	8
 10578  0ED0                     u4085:
 10579  0ED0  1003               	clrc
 10580  0ED1  0DAC               	rlf	??___flmul,f
 10581  0ED2  0DAD               	rlf	??___flmul+1,f
 10582  0ED3  0DAE               	rlf	??___flmul+2,f
 10583  0ED4  0DAF               	rlf	??___flmul+3,f
 10584  0ED5                     u4080:
 10585  0ED5  3EFF               	addlw	-1
 10586  0ED6  1D03               	skipz
 10587  0ED7  2ED0               	goto	u4085
 10588  0ED8  082C               	movf	??___flmul,w
 10589  0ED9  07B8               	addwf	___flmul@prod,f
 10590  0EDA  082D               	movf	??___flmul+1,w
 10591  0EDB  1103               	clrz
 10592  0EDC  1803               	skipnc
 10593  0EDD  3E01               	addlw	1
 10594  0EDE  1903               	skipnz
 10595  0EDF  2EE1               	goto	u4091
 10596  0EE0  07B9               	addwf	___flmul@prod+1,f
 10597  0EE1                     u4091:
 10598  0EE1  082E               	movf	??___flmul+2,w
 10599  0EE2  1103               	clrz
 10600  0EE3  1803               	skipnc
 10601  0EE4  3E01               	addlw	1
 10602  0EE5  1903               	skipnz
 10603  0EE6  2EE8               	goto	u4092
 10604  0EE7  07BA               	addwf	___flmul@prod+2,f
 10605  0EE8                     u4092:
 10606  0EE8  082F               	movf	??___flmul+3,w
 10607  0EE9  1103               	clrz
 10608  0EEA  1803               	skipnc
 10609  0EEB  3E01               	addlw	1
 10610  0EEC  1903               	skipnz
 10611  0EED  2EEF               	goto	u4093
 10612  0EEE  07BB               	addwf	___flmul@prod+3,f
 10613  0EEF                     u4093:
 10614  0EEF                     l2899:
 10615  0EEF  0832               	movf	___flmul@grs,w
 10616  0EF0  00AC               	movwf	??___flmul
 10617  0EF1  0833               	movf	___flmul@grs+1,w
 10618  0EF2  00AD               	movwf	??___flmul+1
 10619  0EF3  0834               	movf	___flmul@grs+2,w
 10620  0EF4  00AE               	movwf	??___flmul+2
 10621  0EF5  0835               	movf	___flmul@grs+3,w
 10622  0EF6  00AF               	movwf	??___flmul+3
 10623  0EF7  3018               	movlw	24
 10624  0EF8                     u4105:
 10625  0EF8  1003               	clrc
 10626  0EF9  0CAF               	rrf	??___flmul+3,f
 10627  0EFA  0CAE               	rrf	??___flmul+2,f
 10628  0EFB  0CAD               	rrf	??___flmul+1,f
 10629  0EFC  0CAC               	rrf	??___flmul,f
 10630  0EFD                     u4100:
 10631  0EFD  3EFF               	addlw	-1
 10632  0EFE  1D03               	skipz
 10633  0EFF  2EF8               	goto	u4105
 10634  0F00  082C               	movf	??___flmul,w
 10635  0F01  07B8               	addwf	___flmul@prod,f
 10636  0F02  082D               	movf	??___flmul+1,w
 10637  0F03  1103               	clrz
 10638  0F04  1803               	skipnc
 10639  0F05  3E01               	addlw	1
 10640  0F06  1903               	skipnz
 10641  0F07  2F09               	goto	u4111
 10642  0F08  07B9               	addwf	___flmul@prod+1,f
 10643  0F09                     u4111:
 10644  0F09  082E               	movf	??___flmul+2,w
 10645  0F0A  1103               	clrz
 10646  0F0B  1803               	skipnc
 10647  0F0C  3E01               	addlw	1
 10648  0F0D  1903               	skipnz
 10649  0F0E  2F10               	goto	u4112
 10650  0F0F  07BA               	addwf	___flmul@prod+2,f
 10651  0F10                     u4112:
 10652  0F10  082F               	movf	??___flmul+3,w
 10653  0F11  1103               	clrz
 10654  0F12  1803               	skipnc
 10655  0F13  3E01               	addlw	1
 10656  0F14  1903               	skipnz
 10657  0F15  2F17               	goto	u4113
 10658  0F16  07BB               	addwf	___flmul@prod+3,f
 10659  0F17                     u4113:
 10660  0F17                     l2901:
 10661  0F17  3008               	movlw	8
 10662  0F18  00AC               	movwf	??___flmul
 10663  0F19                     u4125:
 10664  0F19  1003               	clrc
 10665  0F1A  0DB2               	rlf	___flmul@grs,f
 10666  0F1B  0DB3               	rlf	___flmul@grs+1,f
 10667  0F1C  0DB4               	rlf	___flmul@grs+2,f
 10668  0F1D  0DB5               	rlf	___flmul@grs+3,f
 10669  0F1E  0BAC               	decfsz	??___flmul,f
 10670  0F1F  2F19               	goto	u4125
 10671  0F20                     l2903:
 10672  0F20  0837               	movf	___flmul@bexp,w
 10673  0F21  0736               	addwf	___flmul@aexp,w
 10674  0F22  00AC               	movwf	??___flmul
 10675  0F23  01AD               	clrf	??___flmul+1
 10676  0F24  0DAD               	rlf	??___flmul+1,f
 10677  0F25  082C               	movf	??___flmul,w
 10678  0F26  3E82               	addlw	130
 10679  0F27  00BC               	movwf	___flmul@temp
 10680  0F28  082D               	movf	??___flmul+1,w
 10681  0F29  1803               	skipnc
 10682  0F2A  3E01               	addlw	1
 10683  0F2B  3EFF               	addlw	255
 10684  0F2C  00BD               	movwf	___flmul@temp+1
 10685  0F2D  2F4B               	goto	l2915
 10686  0F2E                     l2905:
 10687  0F2E  3001               	movlw	1
 10688  0F2F  00AC               	movwf	??___flmul
 10689  0F30                     u4135:
 10690  0F30  1003               	clrc
 10691  0F31  0DB8               	rlf	___flmul@prod,f
 10692  0F32  0DB9               	rlf	___flmul@prod+1,f
 10693  0F33  0DBA               	rlf	___flmul@prod+2,f
 10694  0F34  0DBB               	rlf	___flmul@prod+3,f
 10695  0F35  0BAC               	decfsz	??___flmul,f
 10696  0F36  2F30               	goto	u4135
 10697  0F37                     l2907:
 10698  0F37  1FB5               	btfss	___flmul@grs+3,7
 10699  0F38  2F3A               	goto	u4141
 10700  0F39  2F3B               	goto	u4140
 10701  0F3A                     u4141:
 10702  0F3A  2F3C               	goto	l2911
 10703  0F3B                     u4140:
 10704  0F3B                     l2909:
 10705  0F3B  1438               	bsf	___flmul@prod,0
 10706  0F3C                     l2911:
 10707  0F3C  3001               	movlw	1
 10708  0F3D  00AC               	movwf	??___flmul
 10709  0F3E                     u4155:
 10710  0F3E  1003               	clrc
 10711  0F3F  0DB2               	rlf	___flmul@grs,f
 10712  0F40  0DB3               	rlf	___flmul@grs+1,f
 10713  0F41  0DB4               	rlf	___flmul@grs+2,f
 10714  0F42  0DB5               	rlf	___flmul@grs+3,f
 10715  0F43  0BAC               	decfsz	??___flmul,f
 10716  0F44  2F3E               	goto	u4155
 10717  0F45                     l2913:
 10718  0F45  30FF               	movlw	255
 10719  0F46  07BC               	addwf	___flmul@temp,f
 10720  0F47  1803               	skipnc
 10721  0F48  0ABD               	incf	___flmul@temp+1,f
 10722  0F49  30FF               	movlw	255
 10723  0F4A  07BD               	addwf	___flmul@temp+1,f
 10724  0F4B                     l2915:
 10725  0F4B  1FBA               	btfss	___flmul@prod+2,7
 10726  0F4C  2F4E               	goto	u4161
 10727  0F4D  2F4F               	goto	u4160
 10728  0F4E                     u4161:
 10729  0F4E  2F2E               	goto	l2905
 10730  0F4F                     u4160:
 10731  0F4F                     l2917:
 10732  0F4F  01B6               	clrf	___flmul@aexp
 10733  0F50                     l2919:
 10734  0F50  1FB5               	btfss	___flmul@grs+3,7
 10735  0F51  2F53               	goto	u4171
 10736  0F52  2F54               	goto	u4170
 10737  0F53                     u4171:
 10738  0F53  2F70               	goto	l2927
 10739  0F54                     u4170:
 10740  0F54                     l2921:
 10741  0F54  30FF               	movlw	255
 10742  0F55  0532               	andwf	___flmul@grs,w
 10743  0F56  00AC               	movwf	??___flmul
 10744  0F57  30FF               	movlw	255
 10745  0F58  0533               	andwf	___flmul@grs+1,w
 10746  0F59  00AD               	movwf	??___flmul+1
 10747  0F5A  30FF               	movlw	255
 10748  0F5B  0534               	andwf	___flmul@grs+2,w
 10749  0F5C  00AE               	movwf	??___flmul+2
 10750  0F5D  307F               	movlw	127
 10751  0F5E  0535               	andwf	___flmul@grs+3,w
 10752  0F5F  00AF               	movwf	??___flmul+3
 10753  0F60  082F               	movf	??___flmul+3,w
 10754  0F61  042E               	iorwf	??___flmul+2,w
 10755  0F62  042D               	iorwf	??___flmul+1,w
 10756  0F63  042C               	iorwf	??___flmul,w
 10757  0F64  1903               	skipnz
 10758  0F65  2F67               	goto	u4181
 10759  0F66  2F68               	goto	u4180
 10760  0F67                     u4181:
 10761  0F67  2F6B               	goto	l837
 10762  0F68                     u4180:
 10763  0F68                     l2923:
 10764  0F68  01B6               	clrf	___flmul@aexp
 10765  0F69  0AB6               	incf	___flmul@aexp,f
 10766  0F6A  2F70               	goto	l2927
 10767  0F6B                     l837:
 10768  0F6B  1C38               	btfss	___flmul@prod,0
 10769  0F6C  2F6E               	goto	u4191
 10770  0F6D  2F6F               	goto	u4190
 10771  0F6E                     u4191:
 10772  0F6E  2F70               	goto	l2927
 10773  0F6F                     u4190:
 10774  0F6F  2F68               	goto	l2923
 10775  0F70                     l2927:
 10776  0F70  0836               	movf	___flmul@aexp,w
 10777  0F71  1903               	btfsc	3,2
 10778  0F72  2F74               	goto	u4201
 10779  0F73  2F75               	goto	u4200
 10780  0F74                     u4201:
 10781  0F74  2FA6               	goto	l2937
 10782  0F75                     u4200:
 10783  0F75                     l2929:
 10784  0F75  3001               	movlw	1
 10785  0F76  07B8               	addwf	___flmul@prod,f
 10786  0F77  3000               	movlw	0
 10787  0F78  1803               	skipnc
 10788  0F79  3001               	movlw	1
 10789  0F7A  07B9               	addwf	___flmul@prod+1,f
 10790  0F7B  3000               	movlw	0
 10791  0F7C  1803               	skipnc
 10792  0F7D  3001               	movlw	1
 10793  0F7E  07BA               	addwf	___flmul@prod+2,f
 10794  0F7F  3000               	movlw	0
 10795  0F80  1803               	skipnc
 10796  0F81  3001               	movlw	1
 10797  0F82  07BB               	addwf	___flmul@prod+3,f
 10798  0F83                     l2931:
 10799  0F83  1C3B               	btfss	___flmul@prod+3,0
 10800  0F84  2F86               	goto	u4211
 10801  0F85  2F87               	goto	u4210
 10802  0F86                     u4211:
 10803  0F86  2FA6               	goto	l2937
 10804  0F87                     u4210:
 10805  0F87                     l2933:
 10806  0F87  0838               	movf	___flmul@prod,w
 10807  0F88  00AC               	movwf	??___flmul
 10808  0F89  0839               	movf	___flmul@prod+1,w
 10809  0F8A  00AD               	movwf	??___flmul+1
 10810  0F8B  083A               	movf	___flmul@prod+2,w
 10811  0F8C  00AE               	movwf	??___flmul+2
 10812  0F8D  083B               	movf	___flmul@prod+3,w
 10813  0F8E  00AF               	movwf	??___flmul+3
 10814  0F8F  3001               	movlw	1
 10815  0F90  00B0               	movwf	??___flmul+4
 10816  0F91                     u4225:
 10817  0F91  0D2F               	rlf	??___flmul+3,w
 10818  0F92  0CAF               	rrf	??___flmul+3,f
 10819  0F93  0CAE               	rrf	??___flmul+2,f
 10820  0F94  0CAD               	rrf	??___flmul+1,f
 10821  0F95  0CAC               	rrf	??___flmul,f
 10822  0F96                     u4220:
 10823  0F96  0BB0               	decfsz	??___flmul+4,f
 10824  0F97  2F91               	goto	u4225
 10825  0F98  082F               	movf	??___flmul+3,w
 10826  0F99  00BB               	movwf	___flmul@prod+3
 10827  0F9A  082E               	movf	??___flmul+2,w
 10828  0F9B  00BA               	movwf	___flmul@prod+2
 10829  0F9C  082D               	movf	??___flmul+1,w
 10830  0F9D  00B9               	movwf	___flmul@prod+1
 10831  0F9E  082C               	movf	??___flmul,w
 10832  0F9F  00B8               	movwf	___flmul@prod
 10833  0FA0                     l2935:
 10834  0FA0  3001               	movlw	1
 10835  0FA1  07BC               	addwf	___flmul@temp,f
 10836  0FA2  1803               	skipnc
 10837  0FA3  0ABD               	incf	___flmul@temp+1,f
 10838  0FA4  3000               	movlw	0
 10839  0FA5  07BD               	addwf	___flmul@temp+1,f
 10840  0FA6                     l2937:
 10841  0FA6  083D               	movf	___flmul@temp+1,w
 10842  0FA7  3A80               	xorlw	128
 10843  0FA8  00FF               	movwf	btemp+1
 10844  0FA9  3080               	movlw	128
 10845  0FAA  027F               	subwf	btemp+1,w
 10846  0FAB  1D03               	skipz
 10847  0FAC  2FAF               	goto	u4235
 10848  0FAD  30FF               	movlw	255
 10849  0FAE  023C               	subwf	___flmul@temp,w
 10850  0FAF                     u4235:
 10851  0FAF  1C03               	skipc
 10852  0FB0  2FB2               	goto	u4231
 10853  0FB1  2FB3               	goto	u4230
 10854  0FB2                     u4231:
 10855  0FB2  2FBE               	goto	l2941
 10856  0FB3                     u4230:
 10857  0FB3                     l2939:
 10858  0FB3  307F               	movlw	127
 10859  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
 10860  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
 10861  0FB6  00BB               	movwf	___flmul@prod+3
 10862  0FB7  3080               	movlw	128
 10863  0FB8  00BA               	movwf	___flmul@prod+2
 10864  0FB9  3000               	movlw	0
 10865  0FBA  00B9               	movwf	___flmul@prod+1
 10866  0FBB  3000               	movlw	0
 10867  0FBC  00B8               	movwf	___flmul@prod
 10868  0FBD  2FF3               	goto	l843
 10869  0FBE                     l2941:
 10870  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
 10871  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
 10872  0FC0  083D               	movf	___flmul@temp+1,w
 10873  0FC1  3A80               	xorlw	128
 10874  0FC2  00FF               	movwf	btemp+1
 10875  0FC3  3080               	movlw	128
 10876  0FC4  027F               	subwf	btemp+1,w
 10877  0FC5  1D03               	skipz
 10878  0FC6  2FC9               	goto	u4245
 10879  0FC7  3001               	movlw	1
 10880  0FC8  023C               	subwf	___flmul@temp,w
 10881  0FC9                     u4245:
 10882  0FC9  1803               	skipnc
 10883  0FCA  2FCC               	goto	u4241
 10884  0FCB  2FCD               	goto	u4240
 10885  0FCC                     u4241:
 10886  0FCC  2FD9               	goto	l2947
 10887  0FCD                     u4240:
 10888  0FCD                     l2943:
 10889  0FCD  3000               	movlw	0
 10890  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
 10891  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
 10892  0FD0  00BB               	movwf	___flmul@prod+3
 10893  0FD1  3000               	movlw	0
 10894  0FD2  00BA               	movwf	___flmul@prod+2
 10895  0FD3  3000               	movlw	0
 10896  0FD4  00B9               	movwf	___flmul@prod+1
 10897  0FD5  3000               	movlw	0
 10898  0FD6  00B8               	movwf	___flmul@prod
 10899  0FD7                     l2945:
 10900  0FD7  01B1               	clrf	___flmul@sign
 10901  0FD8  2FF3               	goto	l843
 10902  0FD9                     l2947:
 10903  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
 10904  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
 10905  0FDB  083C               	movf	___flmul@temp,w
 10906  0FDC  00AC               	movwf	??___flmul
 10907  0FDD  082C               	movf	??___flmul,w
 10908  0FDE  00B7               	movwf	___flmul@bexp
 10909  0FDF  30FF               	movlw	255
 10910  0FE0  05B8               	andwf	___flmul@prod,f
 10911  0FE1  30FF               	movlw	255
 10912  0FE2  05B9               	andwf	___flmul@prod+1,f
 10913  0FE3  307F               	movlw	127
 10914  0FE4  05BA               	andwf	___flmul@prod+2,f
 10915  0FE5  3000               	movlw	0
 10916  0FE6  05BB               	andwf	___flmul@prod+3,f
 10917  0FE7                     l2949:
 10918  0FE7  1C37               	btfss	___flmul@bexp,0
 10919  0FE8  2FEA               	goto	u4251
 10920  0FE9  2FEB               	goto	u4250
 10921  0FEA                     u4251:
 10922  0FEA  2FEC               	goto	l2953
 10923  0FEB                     u4250:
 10924  0FEB                     l2951:
 10925  0FEB  17BA               	bsf	___flmul@prod+2,7
 10926  0FEC                     l2953:
 10927  0FEC  0837               	movf	___flmul@bexp,w
 10928  0FED  00AC               	movwf	??___flmul
 10929  0FEE  1003               	clrc
 10930  0FEF  0C2C               	rrf	??___flmul,w
 10931  0FF0  00AD               	movwf	??___flmul+1
 10932  0FF1  082D               	movf	??___flmul+1,w
 10933  0FF2  00BB               	movwf	___flmul@prod+3
 10934  0FF3                     l843:
 10935  0FF3  0831               	movf	___flmul@sign,w
 10936  0FF4  00AC               	movwf	??___flmul
 10937  0FF5  082C               	movf	??___flmul,w
 10938  0FF6  04BB               	iorwf	___flmul@prod+3,f
 10939  0FF7                     l2955:
 10940  0FF7  083B               	movf	___flmul@prod+3,w
 10941  0FF8  00A7               	movwf	?___flmul+3
 10942  0FF9  083A               	movf	___flmul@prod+2,w
 10943  0FFA  00A6               	movwf	?___flmul+2
 10944  0FFB  0839               	movf	___flmul@prod+1,w
 10945  0FFC  00A5               	movwf	?___flmul+1
 10946  0FFD  0838               	movf	___flmul@prod,w
 10947  0FFE  00A4               	movwf	?___flmul
 10948  0FFF                     l831:
 10949  0FFF  0008               	return
 10950  1000                     __end_of___flmul:
 10951                           
 10952                           	psect	text34
 10953  19E6                     __ptext34:	
 10954 ;; *************** function __Umul8_16 *****************
 10955 ;; Defined at:
 10956 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
 10957 ;; Parameters:    Size  Location     Type
 10958 ;;  multiplier      1    wreg     unsigned char 
 10959 ;;  multiplicand    1    0[COMMON] unsigned char 
 10960 ;; Auto vars:     Size  Location     Type
 10961 ;;  multiplier      1    8[COMMON] unsigned char 
 10962 ;;  word_mpld       2    6[COMMON] unsigned int 
 10963 ;;  product         2    4[COMMON] unsigned int 
 10964 ;; Return value:  Size  Location     Type
 10965 ;;                  2    0[COMMON] unsigned int 
 10966 ;; Registers used:
 10967 ;;		wreg, status,2, status,0
 10968 ;; Tracked objects:
 10969 ;;		On entry : 0/0
 10970 ;;		On exit  : 0/0
 10971 ;;		Unchanged: 0/0
 10972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10973 ;;      Params:         2       0       0       0       0
 10974 ;;      Locals:         5       0       0       0       0
 10975 ;;      Temps:          2       0       0       0       0
 10976 ;;      Totals:         9       0       0       0       0
 10977 ;;Total ram usage:        9 bytes
 10978 ;; Hardware stack levels used:    1
 10979 ;; This function calls:
 10980 ;;		Nothing
 10981 ;; This function is called by:
 10982 ;;		___flmul
 10983 ;; This function uses a non-reentrant model
 10984 ;;
 10985                           
 10986                           
 10987                           ;psect for function __Umul8_16
 10988  19E6                     __Umul8_16:
 10989                           
 10990                           ;incstack = 0
 10991                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10992                           ;__Umul8_16@multiplier stored from wreg
 10993  19E6  00F8               	movwf	__Umul8_16@multiplier
 10994  19E7                     l2479:
 10995  19E7  01F4               	clrf	__Umul8_16@product
 10996  19E8  01F5               	clrf	__Umul8_16@product+1
 10997  19E9                     l2481:
 10998  19E9  0870               	movf	__Umul8_16@multiplicand,w
 10999  19EA  00F2               	movwf	??__Umul8_16
 11000  19EB  01F3               	clrf	??__Umul8_16+1
 11001  19EC  0872               	movf	??__Umul8_16,w
 11002  19ED  00F6               	movwf	__Umul8_16@word_mpld
 11003  19EE  0873               	movf	??__Umul8_16+1,w
 11004  19EF  00F7               	movwf	__Umul8_16@word_mpld+1
 11005  19F0                     l2483:
 11006  19F0  1C78               	btfss	__Umul8_16@multiplier,0
 11007  19F1  29F3               	goto	u3081
 11008  19F2  29F4               	goto	u3080
 11009  19F3                     u3081:
 11010  19F3  29FA               	goto	l850
 11011  19F4                     u3080:
 11012  19F4                     l2485:
 11013  19F4  0876               	movf	__Umul8_16@word_mpld,w
 11014  19F5  07F4               	addwf	__Umul8_16@product,f
 11015  19F6  1803               	skipnc
 11016  19F7  0AF5               	incf	__Umul8_16@product+1,f
 11017  19F8  0877               	movf	__Umul8_16@word_mpld+1,w
 11018  19F9  07F5               	addwf	__Umul8_16@product+1,f
 11019  19FA                     l850:
 11020  19FA  3001               	movlw	1
 11021  19FB                     u3095:
 11022  19FB  1003               	clrc
 11023  19FC  0DF6               	rlf	__Umul8_16@word_mpld,f
 11024  19FD  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 11025  19FE  3EFF               	addlw	-1
 11026  19FF  1D03               	skipz
 11027  1A00  29FB               	goto	u3095
 11028  1A01  1003               	clrc
 11029  1A02  0CF8               	rrf	__Umul8_16@multiplier,f
 11030  1A03                     l2487:
 11031  1A03  0878               	movf	__Umul8_16@multiplier,w
 11032  1A04  1D03               	btfss	3,2
 11033  1A05  2A07               	goto	u3101
 11034  1A06  2A08               	goto	u3100
 11035  1A07                     u3101:
 11036  1A07  29F0               	goto	l2483
 11037  1A08                     u3100:
 11038  1A08                     l2489:
 11039  1A08  0875               	movf	__Umul8_16@product+1,w
 11040  1A09  00F1               	movwf	?__Umul8_16+1
 11041  1A0A  0874               	movf	__Umul8_16@product,w
 11042  1A0B  00F0               	movwf	?__Umul8_16
 11043  1A0C                     l852:
 11044  1A0C  0008               	return
 11045  1A0D                     __end_of__Umul8_16:
 11046                           
 11047                           	psect	text35
 11048  1190                     __ptext35:	
 11049 ;; *************** function ___fldiv *****************
 11050 ;; Defined at:
 11051 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 11052 ;; Parameters:    Size  Location     Type
 11053 ;;  a               4   30[BANK0 ] unsigned int 
 11054 ;;  b               4   34[BANK0 ] unsigned int 
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;  grs             4   50[BANK0 ] unsigned long 
 11057 ;;  rem             4   43[BANK0 ] unsigned long 
 11058 ;;  new_exp         2   48[BANK0 ] int 
 11059 ;;  aexp            1   55[BANK0 ] unsigned char 
 11060 ;;  bexp            1   54[BANK0 ] unsigned char 
 11061 ;;  sign            1   47[BANK0 ] unsigned char 
 11062 ;; Return value:  Size  Location     Type
 11063 ;;                  4   30[BANK0 ] unsigned char 
 11064 ;; Registers used:
 11065 ;;		wreg, status,2, status,0, btemp+1
 11066 ;; Tracked objects:
 11067 ;;		On entry : 0/0
 11068 ;;		On exit  : 0/0
 11069 ;;		Unchanged: 0/0
 11070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11071 ;;      Params:         0       8       0       0       0
 11072 ;;      Locals:         0      13       0       0       0
 11073 ;;      Temps:          0       5       0       0       0
 11074 ;;      Totals:         0      26       0       0       0
 11075 ;;Total ram usage:       26 bytes
 11076 ;; Hardware stack levels used:    1
 11077 ;; This function calls:
 11078 ;;		Nothing
 11079 ;; This function is called by:
 11080 ;;		_ADC_channel1
 11081 ;;		_ADC_channel2
 11082 ;; This function uses a non-reentrant model
 11083 ;;
 11084                           
 11085                           
 11086                           ;psect for function ___fldiv
 11087  1190                     ___fldiv:
 11088  1190                     l3647:	
 11089                           ;incstack = 0
 11090                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 11091                           
 11092  1190  1283               	bcf	3,5	;RP0=0, select bank0
 11093  1191  1303               	bcf	3,6	;RP1=0, select bank0
 11094  1192  0845               	movf	___fldiv@b+3,w
 11095  1193  3980               	andlw	128
 11096  1194  00C6               	movwf	??___fldiv
 11097  1195  0846               	movf	??___fldiv,w
 11098  1196  00CF               	movwf	___fldiv@sign
 11099  1197                     l3649:
 11100  1197  0845               	movf	___fldiv@b+3,w
 11101  1198  00C6               	movwf	??___fldiv
 11102  1199  0746               	addwf	??___fldiv,w
 11103  119A  00C7               	movwf	??___fldiv+1
 11104  119B  0847               	movf	??___fldiv+1,w
 11105  119C  00D6               	movwf	___fldiv@bexp
 11106  119D                     l3651:
 11107  119D  1FC4               	btfss	___fldiv@b+2,7
 11108  119E  29A0               	goto	u5831
 11109  119F  29A1               	goto	u5830
 11110  11A0                     u5831:
 11111  11A0  29A2               	goto	l3655
 11112  11A1                     u5830:
 11113  11A1                     l3653:
 11114  11A1  1456               	bsf	___fldiv@bexp,0
 11115  11A2                     l3655:
 11116  11A2  0856               	movf	___fldiv@bexp,w
 11117  11A3  1903               	btfsc	3,2
 11118  11A4  29A6               	goto	u5841
 11119  11A5  29A7               	goto	u5840
 11120  11A6                     u5841:
 11121  11A6  29B7               	goto	l3665
 11122  11A7                     u5840:
 11123  11A7                     l3657:
 11124  11A7  0A56               	incf	___fldiv@bexp,w
 11125  11A8  1D03               	btfss	3,2
 11126  11A9  29AB               	goto	u5851
 11127  11AA  29AC               	goto	u5850
 11128  11AB                     u5851:
 11129  11AB  29B4               	goto	l3661
 11130  11AC                     u5850:
 11131  11AC                     l3659:
 11132  11AC  3000               	movlw	0
 11133  11AD  00C5               	movwf	___fldiv@b+3
 11134  11AE  3000               	movlw	0
 11135  11AF  00C4               	movwf	___fldiv@b+2
 11136  11B0  3000               	movlw	0
 11137  11B1  00C3               	movwf	___fldiv@b+1
 11138  11B2  3000               	movlw	0
 11139  11B3  00C2               	movwf	___fldiv@b
 11140  11B4                     l3661:
 11141  11B4  17C4               	bsf	___fldiv@b+2,7
 11142  11B5                     l3663:
 11143  11B5  01C5               	clrf	___fldiv@b+3
 11144  11B6  29BF               	goto	l3667
 11145  11B7                     l3665:
 11146  11B7  3000               	movlw	0
 11147  11B8  00C5               	movwf	___fldiv@b+3
 11148  11B9  3000               	movlw	0
 11149  11BA  00C4               	movwf	___fldiv@b+2
 11150  11BB  3000               	movlw	0
 11151  11BC  00C3               	movwf	___fldiv@b+1
 11152  11BD  3000               	movlw	0
 11153  11BE  00C2               	movwf	___fldiv@b
 11154  11BF                     l3667:
 11155  11BF  0841               	movf	___fldiv@a+3,w
 11156  11C0  3980               	andlw	128
 11157  11C1  00C6               	movwf	??___fldiv
 11158  11C2  0846               	movf	??___fldiv,w
 11159  11C3  06CF               	xorwf	___fldiv@sign,f
 11160  11C4                     l3669:
 11161  11C4  0841               	movf	___fldiv@a+3,w
 11162  11C5  00C6               	movwf	??___fldiv
 11163  11C6  0746               	addwf	??___fldiv,w
 11164  11C7  00C7               	movwf	??___fldiv+1
 11165  11C8  0847               	movf	??___fldiv+1,w
 11166  11C9  00D7               	movwf	___fldiv@aexp
 11167  11CA                     l3671:
 11168  11CA  1FC0               	btfss	___fldiv@a+2,7
 11169  11CB  29CD               	goto	u5861
 11170  11CC  29CE               	goto	u5860
 11171  11CD                     u5861:
 11172  11CD  29CF               	goto	l3675
 11173  11CE                     u5860:
 11174  11CE                     l3673:
 11175  11CE  1457               	bsf	___fldiv@aexp,0
 11176  11CF                     l3675:
 11177  11CF  0857               	movf	___fldiv@aexp,w
 11178  11D0  1903               	btfsc	3,2
 11179  11D1  29D3               	goto	u5871
 11180  11D2  29D4               	goto	u5870
 11181  11D3                     u5871:
 11182  11D3  29E4               	goto	l3685
 11183  11D4                     u5870:
 11184  11D4                     l3677:
 11185  11D4  0A57               	incf	___fldiv@aexp,w
 11186  11D5  1D03               	btfss	3,2
 11187  11D6  29D8               	goto	u5881
 11188  11D7  29D9               	goto	u5880
 11189  11D8                     u5881:
 11190  11D8  29E1               	goto	l3681
 11191  11D9                     u5880:
 11192  11D9                     l3679:
 11193  11D9  3000               	movlw	0
 11194  11DA  00C1               	movwf	___fldiv@a+3
 11195  11DB  3000               	movlw	0
 11196  11DC  00C0               	movwf	___fldiv@a+2
 11197  11DD  3000               	movlw	0
 11198  11DE  00BF               	movwf	___fldiv@a+1
 11199  11DF  3000               	movlw	0
 11200  11E0  00BE               	movwf	___fldiv@a
 11201  11E1                     l3681:
 11202  11E1  17C0               	bsf	___fldiv@a+2,7
 11203  11E2                     l3683:
 11204  11E2  01C1               	clrf	___fldiv@a+3
 11205  11E3  29EC               	goto	l791
 11206  11E4                     l3685:
 11207  11E4  3000               	movlw	0
 11208  11E5  00C1               	movwf	___fldiv@a+3
 11209  11E6  3000               	movlw	0
 11210  11E7  00C0               	movwf	___fldiv@a+2
 11211  11E8  3000               	movlw	0
 11212  11E9  00BF               	movwf	___fldiv@a+1
 11213  11EA  3000               	movlw	0
 11214  11EB  00BE               	movwf	___fldiv@a
 11215  11EC                     l791:
 11216  11EC  0841               	movf	___fldiv@a+3,w
 11217  11ED  0440               	iorwf	___fldiv@a+2,w
 11218  11EE  043F               	iorwf	___fldiv@a+1,w
 11219  11EF  043E               	iorwf	___fldiv@a,w
 11220  11F0  1D03               	skipz
 11221  11F1  29F3               	goto	u5891
 11222  11F2  29F4               	goto	u5890
 11223  11F3                     u5891:
 11224  11F3  2A0D               	goto	l3695
 11225  11F4                     u5890:
 11226  11F4                     l3687:
 11227  11F4  3000               	movlw	0
 11228  11F5  00C5               	movwf	___fldiv@b+3
 11229  11F6  3000               	movlw	0
 11230  11F7  00C4               	movwf	___fldiv@b+2
 11231  11F8  3000               	movlw	0
 11232  11F9  00C3               	movwf	___fldiv@b+1
 11233  11FA  3000               	movlw	0
 11234  11FB  00C2               	movwf	___fldiv@b
 11235  11FC  3080               	movlw	128
 11236  11FD  04C4               	iorwf	___fldiv@b+2,f
 11237  11FE  307F               	movlw	127
 11238  11FF  04C5               	iorwf	___fldiv@b+3,f
 11239  1200                     l3689:
 11240  1200  084F               	movf	___fldiv@sign,w
 11241  1201  00C6               	movwf	??___fldiv
 11242  1202  0846               	movf	??___fldiv,w
 11243  1203  04C5               	iorwf	___fldiv@b+3,f
 11244  1204                     l3691:
 11245  1204  0845               	movf	___fldiv@b+3,w
 11246  1205  00C1               	movwf	?___fldiv+3
 11247  1206  0844               	movf	___fldiv@b+2,w
 11248  1207  00C0               	movwf	?___fldiv+2
 11249  1208  0843               	movf	___fldiv@b+1,w
 11250  1209  00BF               	movwf	?___fldiv+1
 11251  120A  0842               	movf	___fldiv@b,w
 11252  120B  00BE               	movwf	?___fldiv
 11253  120C  2B6C               	goto	l793
 11254  120D                     l3695:
 11255  120D  0856               	movf	___fldiv@bexp,w
 11256  120E  1D03               	btfss	3,2
 11257  120F  2A11               	goto	u5901
 11258  1210  2A12               	goto	u5900
 11259  1211                     u5901:
 11260  1211  2A1B               	goto	l3701
 11261  1212                     u5900:
 11262  1212                     l3697:
 11263  1212  3000               	movlw	0
 11264  1213  00C1               	movwf	?___fldiv+3
 11265  1214  3000               	movlw	0
 11266  1215  00C0               	movwf	?___fldiv+2
 11267  1216  3000               	movlw	0
 11268  1217  00BF               	movwf	?___fldiv+1
 11269  1218  3000               	movlw	0
 11270  1219  00BE               	movwf	?___fldiv
 11271  121A  2B6C               	goto	l793
 11272  121B                     l3701:
 11273  121B  0856               	movf	___fldiv@bexp,w
 11274  121C  00C6               	movwf	??___fldiv
 11275  121D  01C7               	clrf	??___fldiv+1
 11276  121E  0847               	movf	??___fldiv+1,w
 11277  121F  00C9               	movwf	??___fldiv+3
 11278  1220  0857               	movf	___fldiv@aexp,w
 11279  1221  0246               	subwf	??___fldiv,w
 11280  1222  00C8               	movwf	??___fldiv+2
 11281  1223  1C03               	skipc
 11282  1224  03C9               	decf	??___fldiv+3,f
 11283  1225  0848               	movf	??___fldiv+2,w
 11284  1226  3E7F               	addlw	127
 11285  1227  00D0               	movwf	___fldiv@new_exp
 11286  1228  0849               	movf	??___fldiv+3,w
 11287  1229  1803               	skipnc
 11288  122A  3E01               	addlw	1
 11289  122B  3E00               	addlw	0
 11290  122C  00D1               	movwf	___fldiv@new_exp+1
 11291  122D                     l3703:
 11292  122D  0845               	movf	___fldiv@b+3,w
 11293  122E  00CE               	movwf	___fldiv@rem+3
 11294  122F  0844               	movf	___fldiv@b+2,w
 11295  1230  00CD               	movwf	___fldiv@rem+2
 11296  1231  0843               	movf	___fldiv@b+1,w
 11297  1232  00CC               	movwf	___fldiv@rem+1
 11298  1233  0842               	movf	___fldiv@b,w
 11299  1234  00CB               	movwf	___fldiv@rem
 11300  1235                     l3705:
 11301  1235  3000               	movlw	0
 11302  1236  00C5               	movwf	___fldiv@b+3
 11303  1237  3000               	movlw	0
 11304  1238  00C4               	movwf	___fldiv@b+2
 11305  1239  3000               	movlw	0
 11306  123A  00C3               	movwf	___fldiv@b+1
 11307  123B  3000               	movlw	0
 11308  123C  00C2               	movwf	___fldiv@b
 11309  123D                     l3707:
 11310  123D  3000               	movlw	0
 11311  123E  00D5               	movwf	___fldiv@grs+3
 11312  123F  3000               	movlw	0
 11313  1240  00D4               	movwf	___fldiv@grs+2
 11314  1241  3000               	movlw	0
 11315  1242  00D3               	movwf	___fldiv@grs+1
 11316  1243  3000               	movlw	0
 11317  1244  00D2               	movwf	___fldiv@grs
 11318  1245                     l3709:
 11319  1245  01D7               	clrf	___fldiv@aexp
 11320  1246  2A91               	goto	l3729
 11321  1247                     l3711:
 11322  1247  0857               	movf	___fldiv@aexp,w
 11323  1248  1903               	btfsc	3,2
 11324  1249  2A4B               	goto	u5911
 11325  124A  2A4C               	goto	u5910
 11326  124B                     u5911:
 11327  124B  2A6C               	goto	l3721
 11328  124C                     u5910:
 11329  124C                     l3713:
 11330  124C  3001               	movlw	1
 11331  124D  00C6               	movwf	??___fldiv
 11332  124E                     u5925:
 11333  124E  1003               	clrc
 11334  124F  0DCB               	rlf	___fldiv@rem,f
 11335  1250  0DCC               	rlf	___fldiv@rem+1,f
 11336  1251  0DCD               	rlf	___fldiv@rem+2,f
 11337  1252  0DCE               	rlf	___fldiv@rem+3,f
 11338  1253  0BC6               	decfsz	??___fldiv,f
 11339  1254  2A4E               	goto	u5925
 11340  1255  3001               	movlw	1
 11341  1256  00C6               	movwf	??___fldiv
 11342  1257                     u5935:
 11343  1257  1003               	clrc
 11344  1258  0DC2               	rlf	___fldiv@b,f
 11345  1259  0DC3               	rlf	___fldiv@b+1,f
 11346  125A  0DC4               	rlf	___fldiv@b+2,f
 11347  125B  0DC5               	rlf	___fldiv@b+3,f
 11348  125C  0BC6               	decfsz	??___fldiv,f
 11349  125D  2A57               	goto	u5935
 11350  125E                     l3715:
 11351  125E  1FD5               	btfss	___fldiv@grs+3,7
 11352  125F  2A61               	goto	u5941
 11353  1260  2A62               	goto	u5940
 11354  1261                     u5941:
 11355  1261  2A63               	goto	l3719
 11356  1262                     u5940:
 11357  1262                     l3717:
 11358  1262  1442               	bsf	___fldiv@b,0
 11359  1263                     l3719:
 11360  1263  3001               	movlw	1
 11361  1264  00C6               	movwf	??___fldiv
 11362  1265                     u5955:
 11363  1265  1003               	clrc
 11364  1266  0DD2               	rlf	___fldiv@grs,f
 11365  1267  0DD3               	rlf	___fldiv@grs+1,f
 11366  1268  0DD4               	rlf	___fldiv@grs+2,f
 11367  1269  0DD5               	rlf	___fldiv@grs+3,f
 11368  126A  0BC6               	decfsz	??___fldiv,f
 11369  126B  2A65               	goto	u5955
 11370  126C                     l3721:
 11371  126C  0841               	movf	___fldiv@a+3,w
 11372  126D  024E               	subwf	___fldiv@rem+3,w
 11373  126E  1D03               	skipz
 11374  126F  2A7A               	goto	u5965
 11375  1270  0840               	movf	___fldiv@a+2,w
 11376  1271  024D               	subwf	___fldiv@rem+2,w
 11377  1272  1D03               	skipz
 11378  1273  2A7A               	goto	u5965
 11379  1274  083F               	movf	___fldiv@a+1,w
 11380  1275  024C               	subwf	___fldiv@rem+1,w
 11381  1276  1D03               	skipz
 11382  1277  2A7A               	goto	u5965
 11383  1278  083E               	movf	___fldiv@a,w
 11384  1279  024B               	subwf	___fldiv@rem,w
 11385  127A                     u5965:
 11386  127A  1C03               	skipc
 11387  127B  2A7D               	goto	u5961
 11388  127C  2A7E               	goto	u5960
 11389  127D                     u5961:
 11390  127D  2A8D               	goto	l3727
 11391  127E                     u5960:
 11392  127E                     l3723:
 11393  127E  1755               	bsf	___fldiv@grs+3,6
 11394  127F                     l3725:
 11395  127F  083E               	movf	___fldiv@a,w
 11396  1280  02CB               	subwf	___fldiv@rem,f
 11397  1281  083F               	movf	___fldiv@a+1,w
 11398  1282  1C03               	skipc
 11399  1283  0F3F               	incfsz	___fldiv@a+1,w
 11400  1284  02CC               	subwf	___fldiv@rem+1,f
 11401  1285  0840               	movf	___fldiv@a+2,w
 11402  1286  1C03               	skipc
 11403  1287  0F40               	incfsz	___fldiv@a+2,w
 11404  1288  02CD               	subwf	___fldiv@rem+2,f
 11405  1289  0841               	movf	___fldiv@a+3,w
 11406  128A  1C03               	skipc
 11407  128B  0F41               	incfsz	___fldiv@a+3,w
 11408  128C  02CE               	subwf	___fldiv@rem+3,f
 11409  128D                     l3727:
 11410  128D  3001               	movlw	1
 11411  128E  00C6               	movwf	??___fldiv
 11412  128F  0846               	movf	??___fldiv,w
 11413  1290  07D7               	addwf	___fldiv@aexp,f
 11414  1291                     l3729:
 11415  1291  301A               	movlw	26
 11416  1292  0257               	subwf	___fldiv@aexp,w
 11417  1293  1C03               	skipc
 11418  1294  2A96               	goto	u5971
 11419  1295  2A97               	goto	u5970
 11420  1296                     u5971:
 11421  1296  2A47               	goto	l3711
 11422  1297                     u5970:
 11423  1297                     l3731:
 11424  1297  084E               	movf	___fldiv@rem+3,w
 11425  1298  044D               	iorwf	___fldiv@rem+2,w
 11426  1299  044C               	iorwf	___fldiv@rem+1,w
 11427  129A  044B               	iorwf	___fldiv@rem,w
 11428  129B  1903               	skipnz
 11429  129C  2A9E               	goto	u5981
 11430  129D  2A9F               	goto	u5980
 11431  129E                     u5981:
 11432  129E  2ABE               	goto	l3745
 11433  129F                     u5980:
 11434  129F                     l3733:
 11435  129F  1452               	bsf	___fldiv@grs,0
 11436  12A0  2ABE               	goto	l3745
 11437  12A1                     l3735:
 11438  12A1  3001               	movlw	1
 11439  12A2  00C6               	movwf	??___fldiv
 11440  12A3                     u5995:
 11441  12A3  1003               	clrc
 11442  12A4  0DC2               	rlf	___fldiv@b,f
 11443  12A5  0DC3               	rlf	___fldiv@b+1,f
 11444  12A6  0DC4               	rlf	___fldiv@b+2,f
 11445  12A7  0DC5               	rlf	___fldiv@b+3,f
 11446  12A8  0BC6               	decfsz	??___fldiv,f
 11447  12A9  2AA3               	goto	u5995
 11448  12AA                     l3737:
 11449  12AA  1FD5               	btfss	___fldiv@grs+3,7
 11450  12AB  2AAD               	goto	u6001
 11451  12AC  2AAE               	goto	u6000
 11452  12AD                     u6001:
 11453  12AD  2AAF               	goto	l3741
 11454  12AE                     u6000:
 11455  12AE                     l3739:
 11456  12AE  1442               	bsf	___fldiv@b,0
 11457  12AF                     l3741:
 11458  12AF  3001               	movlw	1
 11459  12B0  00C6               	movwf	??___fldiv
 11460  12B1                     u6015:
 11461  12B1  1003               	clrc
 11462  12B2  0DD2               	rlf	___fldiv@grs,f
 11463  12B3  0DD3               	rlf	___fldiv@grs+1,f
 11464  12B4  0DD4               	rlf	___fldiv@grs+2,f
 11465  12B5  0DD5               	rlf	___fldiv@grs+3,f
 11466  12B6  0BC6               	decfsz	??___fldiv,f
 11467  12B7  2AB1               	goto	u6015
 11468  12B8                     l3743:
 11469  12B8  30FF               	movlw	255
 11470  12B9  07D0               	addwf	___fldiv@new_exp,f
 11471  12BA  1803               	skipnc
 11472  12BB  0AD1               	incf	___fldiv@new_exp+1,f
 11473  12BC  30FF               	movlw	255
 11474  12BD  07D1               	addwf	___fldiv@new_exp+1,f
 11475  12BE                     l3745:
 11476  12BE  1FC4               	btfss	___fldiv@b+2,7
 11477  12BF  2AC1               	goto	u6021
 11478  12C0  2AC2               	goto	u6020
 11479  12C1                     u6021:
 11480  12C1  2AA1               	goto	l3735
 11481  12C2                     u6020:
 11482  12C2                     l3747:
 11483  12C2  01D7               	clrf	___fldiv@aexp
 11484  12C3                     l3749:
 11485  12C3  1FD5               	btfss	___fldiv@grs+3,7
 11486  12C4  2AC6               	goto	u6031
 11487  12C5  2AC7               	goto	u6030
 11488  12C6                     u6031:
 11489  12C6  2AE3               	goto	l3757
 11490  12C7                     u6030:
 11491  12C7                     l3751:
 11492  12C7  30FF               	movlw	255
 11493  12C8  0552               	andwf	___fldiv@grs,w
 11494  12C9  00C6               	movwf	??___fldiv
 11495  12CA  30FF               	movlw	255
 11496  12CB  0553               	andwf	___fldiv@grs+1,w
 11497  12CC  00C7               	movwf	??___fldiv+1
 11498  12CD  30FF               	movlw	255
 11499  12CE  0554               	andwf	___fldiv@grs+2,w
 11500  12CF  00C8               	movwf	??___fldiv+2
 11501  12D0  307F               	movlw	127
 11502  12D1  0555               	andwf	___fldiv@grs+3,w
 11503  12D2  00C9               	movwf	??___fldiv+3
 11504  12D3  0849               	movf	??___fldiv+3,w
 11505  12D4  0448               	iorwf	??___fldiv+2,w
 11506  12D5  0447               	iorwf	??___fldiv+1,w
 11507  12D6  0446               	iorwf	??___fldiv,w
 11508  12D7  1903               	skipnz
 11509  12D8  2ADA               	goto	u6041
 11510  12D9  2ADB               	goto	u6040
 11511  12DA                     u6041:
 11512  12DA  2ADE               	goto	l807
 11513  12DB                     u6040:
 11514  12DB                     l3753:
 11515  12DB  01D7               	clrf	___fldiv@aexp
 11516  12DC  0AD7               	incf	___fldiv@aexp,f
 11517  12DD  2AE3               	goto	l3757
 11518  12DE                     l807:
 11519  12DE  1C42               	btfss	___fldiv@b,0
 11520  12DF  2AE1               	goto	u6051
 11521  12E0  2AE2               	goto	u6050
 11522  12E1                     u6051:
 11523  12E1  2AE3               	goto	l3757
 11524  12E2                     u6050:
 11525  12E2  2ADB               	goto	l3753
 11526  12E3                     l3757:
 11527  12E3  0857               	movf	___fldiv@aexp,w
 11528  12E4  1903               	btfsc	3,2
 11529  12E5  2AE7               	goto	u6061
 11530  12E6  2AE8               	goto	u6060
 11531  12E7                     u6061:
 11532  12E7  2B19               	goto	l3767
 11533  12E8                     u6060:
 11534  12E8                     l3759:
 11535  12E8  3001               	movlw	1
 11536  12E9  07C2               	addwf	___fldiv@b,f
 11537  12EA  3000               	movlw	0
 11538  12EB  1803               	skipnc
 11539  12EC  3001               	movlw	1
 11540  12ED  07C3               	addwf	___fldiv@b+1,f
 11541  12EE  3000               	movlw	0
 11542  12EF  1803               	skipnc
 11543  12F0  3001               	movlw	1
 11544  12F1  07C4               	addwf	___fldiv@b+2,f
 11545  12F2  3000               	movlw	0
 11546  12F3  1803               	skipnc
 11547  12F4  3001               	movlw	1
 11548  12F5  07C5               	addwf	___fldiv@b+3,f
 11549  12F6                     l3761:
 11550  12F6  1C45               	btfss	___fldiv@b+3,0
 11551  12F7  2AF9               	goto	u6071
 11552  12F8  2AFA               	goto	u6070
 11553  12F9                     u6071:
 11554  12F9  2B19               	goto	l3767
 11555  12FA                     u6070:
 11556  12FA                     l3763:
 11557  12FA  0842               	movf	___fldiv@b,w
 11558  12FB  00C6               	movwf	??___fldiv
 11559  12FC  0843               	movf	___fldiv@b+1,w
 11560  12FD  00C7               	movwf	??___fldiv+1
 11561  12FE  0844               	movf	___fldiv@b+2,w
 11562  12FF  00C8               	movwf	??___fldiv+2
 11563  1300  0845               	movf	___fldiv@b+3,w
 11564  1301  00C9               	movwf	??___fldiv+3
 11565  1302  3001               	movlw	1
 11566  1303  00CA               	movwf	??___fldiv+4
 11567  1304                     u6085:
 11568  1304  0D49               	rlf	??___fldiv+3,w
 11569  1305  0CC9               	rrf	??___fldiv+3,f
 11570  1306  0CC8               	rrf	??___fldiv+2,f
 11571  1307  0CC7               	rrf	??___fldiv+1,f
 11572  1308  0CC6               	rrf	??___fldiv,f
 11573  1309                     u6080:
 11574  1309  0BCA               	decfsz	??___fldiv+4,f
 11575  130A  2B04               	goto	u6085
 11576  130B  0849               	movf	??___fldiv+3,w
 11577  130C  00C5               	movwf	___fldiv@b+3
 11578  130D  0848               	movf	??___fldiv+2,w
 11579  130E  00C4               	movwf	___fldiv@b+2
 11580  130F  0847               	movf	??___fldiv+1,w
 11581  1310  00C3               	movwf	___fldiv@b+1
 11582  1311  0846               	movf	??___fldiv,w
 11583  1312  00C2               	movwf	___fldiv@b
 11584  1313                     l3765:
 11585  1313  3001               	movlw	1
 11586  1314  07D0               	addwf	___fldiv@new_exp,f
 11587  1315  1803               	skipnc
 11588  1316  0AD1               	incf	___fldiv@new_exp+1,f
 11589  1317  3000               	movlw	0
 11590  1318  07D1               	addwf	___fldiv@new_exp+1,f
 11591  1319                     l3767:
 11592  1319  0851               	movf	___fldiv@new_exp+1,w
 11593  131A  3A80               	xorlw	128
 11594  131B  00FF               	movwf	btemp+1
 11595  131C  3080               	movlw	128
 11596  131D  027F               	subwf	btemp+1,w
 11597  131E  1D03               	skipz
 11598  131F  2B22               	goto	u6095
 11599  1320  30FF               	movlw	255
 11600  1321  0250               	subwf	___fldiv@new_exp,w
 11601  1322                     u6095:
 11602  1322  1C03               	skipc
 11603  1323  2B25               	goto	u6091
 11604  1324  2B26               	goto	u6090
 11605  1325                     u6091:
 11606  1325  2B34               	goto	l3771
 11607  1326                     u6090:
 11608  1326                     l3769:
 11609  1326  30FF               	movlw	255
 11610  1327  1283               	bcf	3,5	;RP0=0, select bank0
 11611  1328  1303               	bcf	3,6	;RP1=0, select bank0
 11612  1329  00D0               	movwf	___fldiv@new_exp
 11613  132A  3000               	movlw	0
 11614  132B  00D1               	movwf	___fldiv@new_exp+1
 11615  132C  3000               	movlw	0
 11616  132D  00C5               	movwf	___fldiv@b+3
 11617  132E  3000               	movlw	0
 11618  132F  00C4               	movwf	___fldiv@b+2
 11619  1330  3000               	movlw	0
 11620  1331  00C3               	movwf	___fldiv@b+1
 11621  1332  3000               	movlw	0
 11622  1333  00C2               	movwf	___fldiv@b
 11623  1334                     l3771:
 11624  1334  1283               	bcf	3,5	;RP0=0, select bank0
 11625  1335  1303               	bcf	3,6	;RP1=0, select bank0
 11626  1336  0851               	movf	___fldiv@new_exp+1,w
 11627  1337  3A80               	xorlw	128
 11628  1338  00FF               	movwf	btemp+1
 11629  1339  3080               	movlw	128
 11630  133A  027F               	subwf	btemp+1,w
 11631  133B  1D03               	skipz
 11632  133C  2B3F               	goto	u6105
 11633  133D  3001               	movlw	1
 11634  133E  0250               	subwf	___fldiv@new_exp,w
 11635  133F                     u6105:
 11636  133F  1803               	skipnc
 11637  1340  2B42               	goto	u6101
 11638  1341  2B43               	goto	u6100
 11639  1342                     u6101:
 11640  1342  2B50               	goto	l813
 11641  1343                     u6100:
 11642  1343                     l3773:
 11643  1343  1283               	bcf	3,5	;RP0=0, select bank0
 11644  1344  1303               	bcf	3,6	;RP1=0, select bank0
 11645  1345  01D0               	clrf	___fldiv@new_exp
 11646  1346  01D1               	clrf	___fldiv@new_exp+1
 11647  1347                     l3775:
 11648  1347  3000               	movlw	0
 11649  1348  00C5               	movwf	___fldiv@b+3
 11650  1349  3000               	movlw	0
 11651  134A  00C4               	movwf	___fldiv@b+2
 11652  134B  3000               	movlw	0
 11653  134C  00C3               	movwf	___fldiv@b+1
 11654  134D  3000               	movlw	0
 11655  134E  00C2               	movwf	___fldiv@b
 11656  134F                     l3777:
 11657  134F  01CF               	clrf	___fldiv@sign
 11658  1350                     l813:
 11659  1350  1283               	bcf	3,5	;RP0=0, select bank0
 11660  1351  1303               	bcf	3,6	;RP1=0, select bank0
 11661  1352  0850               	movf	___fldiv@new_exp,w
 11662  1353  00C6               	movwf	??___fldiv
 11663  1354  0846               	movf	??___fldiv,w
 11664  1355  00D6               	movwf	___fldiv@bexp
 11665  1356                     l3779:
 11666  1356  1C56               	btfss	___fldiv@bexp,0
 11667  1357  2B59               	goto	u6111
 11668  1358  2B5A               	goto	u6110
 11669  1359                     u6111:
 11670  1359  2B5C               	goto	l3783
 11671  135A                     u6110:
 11672  135A                     l3781:
 11673  135A  17C4               	bsf	___fldiv@b+2,7
 11674  135B  2B60               	goto	l815
 11675  135C                     l3783:
 11676  135C  307F               	movlw	127
 11677  135D  00C6               	movwf	??___fldiv
 11678  135E  0846               	movf	??___fldiv,w
 11679  135F  05C4               	andwf	___fldiv@b+2,f
 11680  1360                     l815:
 11681  1360  0856               	movf	___fldiv@bexp,w
 11682  1361  00C6               	movwf	??___fldiv
 11683  1362  1003               	clrc
 11684  1363  0C46               	rrf	??___fldiv,w
 11685  1364  00C7               	movwf	??___fldiv+1
 11686  1365  0847               	movf	??___fldiv+1,w
 11687  1366  00C5               	movwf	___fldiv@b+3
 11688  1367  084F               	movf	___fldiv@sign,w
 11689  1368  00C6               	movwf	??___fldiv
 11690  1369  0846               	movf	??___fldiv,w
 11691  136A  04C5               	iorwf	___fldiv@b+3,f
 11692  136B  2A04               	goto	l3691
 11693  136C                     l793:
 11694  136C  0008               	return
 11695  136D                     __end_of___fldiv:
 11696                           
 11697                           	psect	text36
 11698  1017                     __ptext36:	
 11699 ;; *************** function _ADC_Config *****************
 11700 ;; Defined at:
 11701 ;;		line 31 in file "Config_ADC.c"
 11702 ;; Parameters:    Size  Location     Type
 11703 ;;  AN_num          1    wreg     unsigned char 
 11704 ;; Auto vars:     Size  Location     Type
 11705 ;;  AN_num          1    2[COMMON] unsigned char 
 11706 ;; Return value:  Size  Location     Type
 11707 ;;                  1    wreg      void 
 11708 ;; Registers used:
 11709 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11710 ;; Tracked objects:
 11711 ;;		On entry : 0/0
 11712 ;;		On exit  : 0/0
 11713 ;;		Unchanged: 0/0
 11714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11715 ;;      Params:         0       0       0       0       0
 11716 ;;      Locals:         1       0       0       0       0
 11717 ;;      Temps:          2       0       0       0       0
 11718 ;;      Totals:         3       0       0       0       0
 11719 ;;Total ram usage:        3 bytes
 11720 ;; Hardware stack levels used:    1
 11721 ;; This function calls:
 11722 ;;		Nothing
 11723 ;; This function is called by:
 11724 ;;		_ADC_channel1
 11725 ;;		_ADC_channel2
 11726 ;; This function uses a non-reentrant model
 11727 ;;
 11728                           
 11729                           
 11730                           ;psect for function _ADC_Config
 11731  1017                     _ADC_Config:
 11732                           
 11733                           ;incstack = 0
 11734                           ; Regs used in _ADC_Config: [wreg-fsr0h+status,2+status,0]
 11735                           ;ADC_Config@AN_num stored from wreg
 11736  1017  00F2               	movwf	ADC_Config@AN_num
 11737  1018                     l3357:
 11738                           
 11739                           ;Config_ADC.c: 33:     switch(AN_num){
 11740  1018  2890               	goto	l3361
 11741  1019                     l182:	
 11742                           ;Config_ADC.c: 34:         case 0:
 11743                           
 11744                           
 11745                           ;Config_ADC.c: 35:             ADCON0bits.CHS3 = 0;
 11746  1019  1283               	bcf	3,5	;RP0=0, select bank0
 11747  101A  1303               	bcf	3,6	;RP1=0, select bank0
 11748  101B  129F               	bcf	31,5	;volatile
 11749                           
 11750                           ;Config_ADC.c: 36:             ADCON0bits.CHS2 = 0;
 11751  101C  121F               	bcf	31,4	;volatile
 11752                           
 11753                           ;Config_ADC.c: 37:             ADCON0bits.CHS1 = 0;
 11754  101D  119F               	bcf	31,3	;volatile
 11755                           
 11756                           ;Config_ADC.c: 38:             ADCON0bits.CHS0 = 0;
 11757  101E  111F               	bcf	31,2	;volatile
 11758                           
 11759                           ;Config_ADC.c: 39:             break;
 11760  101F  28CA               	goto	l3363
 11761  1020                     l184:	
 11762                           ;Config_ADC.c: 40:         case 1:
 11763                           
 11764                           
 11765                           ;Config_ADC.c: 41:             ADCON0bits.CHS3 = 0;
 11766  1020  1283               	bcf	3,5	;RP0=0, select bank0
 11767  1021  1303               	bcf	3,6	;RP1=0, select bank0
 11768  1022  129F               	bcf	31,5	;volatile
 11769                           
 11770                           ;Config_ADC.c: 42:             ADCON0bits.CHS2 = 0;
 11771  1023  121F               	bcf	31,4	;volatile
 11772                           
 11773                           ;Config_ADC.c: 43:             ADCON0bits.CHS1 = 0;
 11774  1024  119F               	bcf	31,3	;volatile
 11775                           
 11776                           ;Config_ADC.c: 44:             ADCON0bits.CHS0 = 1;
 11777  1025  151F               	bsf	31,2	;volatile
 11778                           
 11779                           ;Config_ADC.c: 45:             break;
 11780  1026  28CA               	goto	l3363
 11781  1027                     l185:	
 11782                           ;Config_ADC.c: 46:         case 2:
 11783                           
 11784                           
 11785                           ;Config_ADC.c: 47:             ADCON0bits.CHS3 = 0;
 11786  1027  1283               	bcf	3,5	;RP0=0, select bank0
 11787  1028  1303               	bcf	3,6	;RP1=0, select bank0
 11788  1029  129F               	bcf	31,5	;volatile
 11789                           
 11790                           ;Config_ADC.c: 48:             ADCON0bits.CHS2 = 0;
 11791  102A  121F               	bcf	31,4	;volatile
 11792                           
 11793                           ;Config_ADC.c: 49:             ADCON0bits.CHS1 = 1;
 11794  102B  159F               	bsf	31,3	;volatile
 11795                           
 11796                           ;Config_ADC.c: 50:             ADCON0bits.CHS0 = 0;
 11797  102C  111F               	bcf	31,2	;volatile
 11798                           
 11799                           ;Config_ADC.c: 51:             break;
 11800  102D  28CA               	goto	l3363
 11801  102E                     l186:	
 11802                           ;Config_ADC.c: 52:         case 3:
 11803                           
 11804                           
 11805                           ;Config_ADC.c: 53:             ADCON0bits.CHS3 = 0;
 11806  102E  1283               	bcf	3,5	;RP0=0, select bank0
 11807  102F  1303               	bcf	3,6	;RP1=0, select bank0
 11808  1030  129F               	bcf	31,5	;volatile
 11809                           
 11810                           ;Config_ADC.c: 54:             ADCON0bits.CHS2 = 0;
 11811  1031  121F               	bcf	31,4	;volatile
 11812                           
 11813                           ;Config_ADC.c: 55:             ADCON0bits.CHS1 = 1;
 11814  1032  159F               	bsf	31,3	;volatile
 11815                           
 11816                           ;Config_ADC.c: 56:             ADCON0bits.CHS0 = 1;
 11817  1033  151F               	bsf	31,2	;volatile
 11818                           
 11819                           ;Config_ADC.c: 57:             break;
 11820  1034  28CA               	goto	l3363
 11821  1035                     l187:	
 11822                           ;Config_ADC.c: 58:         case 4:
 11823                           
 11824                           
 11825                           ;Config_ADC.c: 59:             ADCON0bits.CHS3 = 0;
 11826  1035  1283               	bcf	3,5	;RP0=0, select bank0
 11827  1036  1303               	bcf	3,6	;RP1=0, select bank0
 11828  1037  129F               	bcf	31,5	;volatile
 11829                           
 11830                           ;Config_ADC.c: 60:             ADCON0bits.CHS2 = 1;
 11831  1038  161F               	bsf	31,4	;volatile
 11832                           
 11833                           ;Config_ADC.c: 61:             ADCON0bits.CHS1 = 0;
 11834  1039  119F               	bcf	31,3	;volatile
 11835                           
 11836                           ;Config_ADC.c: 62:             ADCON0bits.CHS0 = 0;
 11837  103A  111F               	bcf	31,2	;volatile
 11838                           
 11839                           ;Config_ADC.c: 63:             break;
 11840  103B  28CA               	goto	l3363
 11841  103C                     l188:	
 11842                           ;Config_ADC.c: 64:         case 5:
 11843                           
 11844                           
 11845                           ;Config_ADC.c: 65:             ADCON0bits.CHS3 = 0;
 11846  103C  1283               	bcf	3,5	;RP0=0, select bank0
 11847  103D  1303               	bcf	3,6	;RP1=0, select bank0
 11848  103E  129F               	bcf	31,5	;volatile
 11849                           
 11850                           ;Config_ADC.c: 66:             ADCON0bits.CHS2 = 1;
 11851  103F  161F               	bsf	31,4	;volatile
 11852                           
 11853                           ;Config_ADC.c: 67:             ADCON0bits.CHS1 = 0;
 11854  1040  119F               	bcf	31,3	;volatile
 11855                           
 11856                           ;Config_ADC.c: 68:             ADCON0bits.CHS0 = 1;
 11857  1041  151F               	bsf	31,2	;volatile
 11858                           
 11859                           ;Config_ADC.c: 69:             break;
 11860  1042  28CA               	goto	l3363
 11861  1043                     l189:	
 11862                           ;Config_ADC.c: 70:         case 6:
 11863                           
 11864                           
 11865                           ;Config_ADC.c: 71:             ADCON0bits.CHS3 = 0;
 11866  1043  1283               	bcf	3,5	;RP0=0, select bank0
 11867  1044  1303               	bcf	3,6	;RP1=0, select bank0
 11868  1045  129F               	bcf	31,5	;volatile
 11869                           
 11870                           ;Config_ADC.c: 72:             ADCON0bits.CHS2 = 1;
 11871  1046  161F               	bsf	31,4	;volatile
 11872                           
 11873                           ;Config_ADC.c: 73:             ADCON0bits.CHS1 = 1;
 11874  1047  159F               	bsf	31,3	;volatile
 11875                           
 11876                           ;Config_ADC.c: 74:             ADCON0bits.CHS0 = 0;
 11877  1048  111F               	bcf	31,2	;volatile
 11878                           
 11879                           ;Config_ADC.c: 75:             break;
 11880  1049  28CA               	goto	l3363
 11881  104A                     l190:	
 11882                           ;Config_ADC.c: 76:         case 7:
 11883                           
 11884                           
 11885                           ;Config_ADC.c: 77:             ADCON0bits.CHS3 = 0;
 11886  104A  1283               	bcf	3,5	;RP0=0, select bank0
 11887  104B  1303               	bcf	3,6	;RP1=0, select bank0
 11888  104C  129F               	bcf	31,5	;volatile
 11889                           
 11890                           ;Config_ADC.c: 78:             ADCON0bits.CHS2 = 1;
 11891  104D  161F               	bsf	31,4	;volatile
 11892                           
 11893                           ;Config_ADC.c: 79:             ADCON0bits.CHS1 = 1;
 11894  104E  159F               	bsf	31,3	;volatile
 11895                           
 11896                           ;Config_ADC.c: 80:             ADCON0bits.CHS0 = 1;
 11897  104F  151F               	bsf	31,2	;volatile
 11898                           
 11899                           ;Config_ADC.c: 81:             break;
 11900  1050  28CA               	goto	l3363
 11901  1051                     l191:	
 11902                           ;Config_ADC.c: 82:         case 8:
 11903                           
 11904                           
 11905                           ;Config_ADC.c: 83:             ADCON0bits.CHS3 = 1;
 11906  1051  1283               	bcf	3,5	;RP0=0, select bank0
 11907  1052  1303               	bcf	3,6	;RP1=0, select bank0
 11908  1053  169F               	bsf	31,5	;volatile
 11909                           
 11910                           ;Config_ADC.c: 84:             ADCON0bits.CHS2 = 0;
 11911  1054  121F               	bcf	31,4	;volatile
 11912                           
 11913                           ;Config_ADC.c: 85:             ADCON0bits.CHS1 = 0;
 11914  1055  119F               	bcf	31,3	;volatile
 11915                           
 11916                           ;Config_ADC.c: 86:             ADCON0bits.CHS0 = 0;
 11917  1056  111F               	bcf	31,2	;volatile
 11918                           
 11919                           ;Config_ADC.c: 87:             break;
 11920  1057  28CA               	goto	l3363
 11921  1058                     l192:	
 11922                           ;Config_ADC.c: 88:         case 9:
 11923                           
 11924                           
 11925                           ;Config_ADC.c: 89:             ADCON0bits.CHS3 = 1;
 11926  1058  1283               	bcf	3,5	;RP0=0, select bank0
 11927  1059  1303               	bcf	3,6	;RP1=0, select bank0
 11928  105A  169F               	bsf	31,5	;volatile
 11929                           
 11930                           ;Config_ADC.c: 90:             ADCON0bits.CHS2 = 0;
 11931  105B  121F               	bcf	31,4	;volatile
 11932                           
 11933                           ;Config_ADC.c: 91:             ADCON0bits.CHS1 = 0;
 11934  105C  119F               	bcf	31,3	;volatile
 11935                           
 11936                           ;Config_ADC.c: 92:             ADCON0bits.CHS0 = 1;
 11937  105D  151F               	bsf	31,2	;volatile
 11938                           
 11939                           ;Config_ADC.c: 93:             break;
 11940  105E  28CA               	goto	l3363
 11941  105F                     l193:	
 11942                           ;Config_ADC.c: 94:         case 10:
 11943                           
 11944                           
 11945                           ;Config_ADC.c: 95:             ADCON0bits.CHS3 = 1;
 11946  105F  1283               	bcf	3,5	;RP0=0, select bank0
 11947  1060  1303               	bcf	3,6	;RP1=0, select bank0
 11948  1061  169F               	bsf	31,5	;volatile
 11949                           
 11950                           ;Config_ADC.c: 96:             ADCON0bits.CHS2 = 0;
 11951  1062  121F               	bcf	31,4	;volatile
 11952                           
 11953                           ;Config_ADC.c: 97:             ADCON0bits.CHS1 = 1;
 11954  1063  159F               	bsf	31,3	;volatile
 11955                           
 11956                           ;Config_ADC.c: 98:             ADCON0bits.CHS0 = 0;
 11957  1064  111F               	bcf	31,2	;volatile
 11958                           
 11959                           ;Config_ADC.c: 99:             break;
 11960  1065  28CA               	goto	l3363
 11961  1066                     l194:	
 11962                           ;Config_ADC.c: 100:         case 11:
 11963                           
 11964                           
 11965                           ;Config_ADC.c: 101:             ADCON0bits.CHS3 = 1;
 11966  1066  1283               	bcf	3,5	;RP0=0, select bank0
 11967  1067  1303               	bcf	3,6	;RP1=0, select bank0
 11968  1068  169F               	bsf	31,5	;volatile
 11969                           
 11970                           ;Config_ADC.c: 102:             ADCON0bits.CHS2 = 0;
 11971  1069  121F               	bcf	31,4	;volatile
 11972                           
 11973                           ;Config_ADC.c: 103:             ADCON0bits.CHS1 = 1;
 11974  106A  159F               	bsf	31,3	;volatile
 11975                           
 11976                           ;Config_ADC.c: 104:             ADCON0bits.CHS0 = 1;
 11977  106B  151F               	bsf	31,2	;volatile
 11978                           
 11979                           ;Config_ADC.c: 105:             break;
 11980  106C  28CA               	goto	l3363
 11981  106D                     l195:	
 11982                           ;Config_ADC.c: 106:         case 12:
 11983                           
 11984                           
 11985                           ;Config_ADC.c: 107:             ADCON0bits.CHS3 = 1;
 11986  106D  1283               	bcf	3,5	;RP0=0, select bank0
 11987  106E  1303               	bcf	3,6	;RP1=0, select bank0
 11988  106F  169F               	bsf	31,5	;volatile
 11989                           
 11990                           ;Config_ADC.c: 108:             ADCON0bits.CHS2 = 1;
 11991  1070  161F               	bsf	31,4	;volatile
 11992                           
 11993                           ;Config_ADC.c: 109:             ADCON0bits.CHS1 = 0;
 11994  1071  119F               	bcf	31,3	;volatile
 11995                           
 11996                           ;Config_ADC.c: 110:             ADCON0bits.CHS0 = 0;
 11997  1072  111F               	bcf	31,2	;volatile
 11998                           
 11999                           ;Config_ADC.c: 111:             break;
 12000  1073  28CA               	goto	l3363
 12001  1074                     l196:	
 12002                           ;Config_ADC.c: 112:         case 13:
 12003                           
 12004                           
 12005                           ;Config_ADC.c: 113:             ADCON0bits.CHS3 = 1;
 12006  1074  1283               	bcf	3,5	;RP0=0, select bank0
 12007  1075  1303               	bcf	3,6	;RP1=0, select bank0
 12008  1076  169F               	bsf	31,5	;volatile
 12009                           
 12010                           ;Config_ADC.c: 114:             ADCON0bits.CHS2 = 1;
 12011  1077  161F               	bsf	31,4	;volatile
 12012                           
 12013                           ;Config_ADC.c: 115:             ADCON0bits.CHS1 = 0;
 12014  1078  119F               	bcf	31,3	;volatile
 12015                           
 12016                           ;Config_ADC.c: 116:             ADCON0bits.CHS0 = 1;
 12017  1079  151F               	bsf	31,2	;volatile
 12018                           
 12019                           ;Config_ADC.c: 117:             break;
 12020  107A  28CA               	goto	l3363
 12021  107B                     l197:	
 12022                           ;Config_ADC.c: 118:         case 14:
 12023                           
 12024                           
 12025                           ;Config_ADC.c: 119:             ADCON0bits.CHS3 = 1;
 12026  107B  1283               	bcf	3,5	;RP0=0, select bank0
 12027  107C  1303               	bcf	3,6	;RP1=0, select bank0
 12028  107D  169F               	bsf	31,5	;volatile
 12029                           
 12030                           ;Config_ADC.c: 120:             ADCON0bits.CHS2 = 1;
 12031  107E  161F               	bsf	31,4	;volatile
 12032                           
 12033                           ;Config_ADC.c: 121:             ADCON0bits.CHS1 = 1;
 12034  107F  159F               	bsf	31,3	;volatile
 12035                           
 12036                           ;Config_ADC.c: 122:             ADCON0bits.CHS0 = 0;
 12037  1080  111F               	bcf	31,2	;volatile
 12038                           
 12039                           ;Config_ADC.c: 123:             break;
 12040  1081  28CA               	goto	l3363
 12041  1082                     l198:	
 12042                           ;Config_ADC.c: 124:         case 15:
 12043                           
 12044                           
 12045                           ;Config_ADC.c: 125:             ADCON0bits.CHS3 = 1;
 12046  1082  1283               	bcf	3,5	;RP0=0, select bank0
 12047  1083  1303               	bcf	3,6	;RP1=0, select bank0
 12048  1084  169F               	bsf	31,5	;volatile
 12049                           
 12050                           ;Config_ADC.c: 126:             ADCON0bits.CHS2 = 1;
 12051  1085  161F               	bsf	31,4	;volatile
 12052                           
 12053                           ;Config_ADC.c: 127:             ADCON0bits.CHS1 = 1;
 12054  1086  159F               	bsf	31,3	;volatile
 12055                           
 12056                           ;Config_ADC.c: 128:             ADCON0bits.CHS0 = 1;
 12057  1087  151F               	bsf	31,2	;volatile
 12058                           
 12059                           ;Config_ADC.c: 129:             break;
 12060  1088  28CA               	goto	l3363
 12061  1089                     l199:	
 12062                           ;Config_ADC.c: 130:         default:
 12063                           
 12064                           
 12065                           ;Config_ADC.c: 131:             ADCON0bits.CHS3 = 0;
 12066  1089  1283               	bcf	3,5	;RP0=0, select bank0
 12067  108A  1303               	bcf	3,6	;RP1=0, select bank0
 12068  108B  129F               	bcf	31,5	;volatile
 12069                           
 12070                           ;Config_ADC.c: 132:             ADCON0bits.CHS2 = 0;
 12071  108C  121F               	bcf	31,4	;volatile
 12072                           
 12073                           ;Config_ADC.c: 133:             ADCON0bits.CHS1 = 0;
 12074  108D  119F               	bcf	31,3	;volatile
 12075                           
 12076                           ;Config_ADC.c: 134:             ADCON0bits.CHS0 = 0;
 12077  108E  111F               	bcf	31,2	;volatile
 12078                           
 12079                           ;Config_ADC.c: 135:             break;
 12080  108F  28CA               	goto	l3363
 12081  1090                     l3361:
 12082  1090  0872               	movf	ADC_Config@AN_num,w
 12083  1091  00F0               	movwf	??_ADC_Config
 12084  1092  01F1               	clrf	??_ADC_Config+1
 12085                           
 12086                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12087                           ; Switch size 1, requested type "simple"
 12088                           ; Number of cases is 1, Range of values is 0 to 0
 12089                           ; switch strategies available:
 12090                           ; Name         Instructions Cycles
 12091                           ; simple_byte            4     3 (average)
 12092                           ; direct_byte           11     8 (fixed)
 12093                           ; jumptable            260     6 (fixed)
 12094                           ;	Chosen strategy is simple_byte
 12095  1093  0871               	movf	??_ADC_Config+1,w
 12096  1094  3A00               	xorlw	0	; case 0
 12097  1095  1903               	skipnz
 12098  1096  2898               	goto	l3981
 12099  1097  2889               	goto	l199
 12100  1098                     l3981:
 12101                           
 12102                           ; Switch size 1, requested type "simple"
 12103                           ; Number of cases is 16, Range of values is 0 to 15
 12104                           ; switch strategies available:
 12105                           ; Name         Instructions Cycles
 12106                           ; simple_byte           49    25 (average)
 12107                           ; direct_byte           56     8 (fixed)
 12108                           ; jumptable            260     6 (fixed)
 12109                           ;	Chosen strategy is simple_byte
 12110  1098  0870               	movf	??_ADC_Config,w
 12111  1099  3A00               	xorlw	0	; case 0
 12112  109A  1903               	skipnz
 12113  109B  2819               	goto	l182
 12114  109C  3A01               	xorlw	1	; case 1
 12115  109D  1903               	skipnz
 12116  109E  2820               	goto	l184
 12117  109F  3A03               	xorlw	3	; case 2
 12118  10A0  1903               	skipnz
 12119  10A1  2827               	goto	l185
 12120  10A2  3A01               	xorlw	1	; case 3
 12121  10A3  1903               	skipnz
 12122  10A4  282E               	goto	l186
 12123  10A5  3A07               	xorlw	7	; case 4
 12124  10A6  1903               	skipnz
 12125  10A7  2835               	goto	l187
 12126  10A8  3A01               	xorlw	1	; case 5
 12127  10A9  1903               	skipnz
 12128  10AA  283C               	goto	l188
 12129  10AB  3A03               	xorlw	3	; case 6
 12130  10AC  1903               	skipnz
 12131  10AD  2843               	goto	l189
 12132  10AE  3A01               	xorlw	1	; case 7
 12133  10AF  1903               	skipnz
 12134  10B0  284A               	goto	l190
 12135  10B1  3A0F               	xorlw	15	; case 8
 12136  10B2  1903               	skipnz
 12137  10B3  2851               	goto	l191
 12138  10B4  3A01               	xorlw	1	; case 9
 12139  10B5  1903               	skipnz
 12140  10B6  2858               	goto	l192
 12141  10B7  3A03               	xorlw	3	; case 10
 12142  10B8  1903               	skipnz
 12143  10B9  285F               	goto	l193
 12144  10BA  3A01               	xorlw	1	; case 11
 12145  10BB  1903               	skipnz
 12146  10BC  2866               	goto	l194
 12147  10BD  3A07               	xorlw	7	; case 12
 12148  10BE  1903               	skipnz
 12149  10BF  286D               	goto	l195
 12150  10C0  3A01               	xorlw	1	; case 13
 12151  10C1  1903               	skipnz
 12152  10C2  2874               	goto	l196
 12153  10C3  3A03               	xorlw	3	; case 14
 12154  10C4  1903               	skipnz
 12155  10C5  287B               	goto	l197
 12156  10C6  3A01               	xorlw	1	; case 15
 12157  10C7  1903               	skipnz
 12158  10C8  2882               	goto	l198
 12159  10C9  2889               	goto	l199
 12160  10CA                     l3363:
 12161                           
 12162                           ;Config_ADC.c: 137:     ADCON1 = 0b00000000;
 12163  10CA  1683               	bsf	3,5	;RP0=1, select bank1
 12164  10CB  1303               	bcf	3,6	;RP1=0, select bank1
 12165  10CC  019F               	clrf	31	;volatile
 12166  10CD                     l3365:
 12167                           
 12168                           ;Config_ADC.c: 138:     ADCON0bits.ADCS1 = 1;
 12169  10CD  1283               	bcf	3,5	;RP0=0, select bank0
 12170  10CE  1303               	bcf	3,6	;RP1=0, select bank0
 12171  10CF  179F               	bsf	31,7	;volatile
 12172  10D0                     l3367:
 12173                           
 12174                           ;Config_ADC.c: 139:     ADCON0bits.ADCS0 = 0;
 12175  10D0  131F               	bcf	31,6	;volatile
 12176  10D1                     l3369:
 12177                           
 12178                           ;Config_ADC.c: 140:     ADCON0bits.ADON = 1;
 12179  10D1  141F               	bsf	31,0	;volatile
 12180  10D2                     l200:
 12181  10D2  0008               	return
 12182  10D3                     __end_of_ADC_Config:
 12183  007E                     btemp	set	126	;btemp
 12184  007E                     wtemp0	set	126
 12185                           
 12186                           	psect	config
 12187                           
 12188                           ;Config register CONFIG1 @ 0x2007
 12189                           ;	Oscillator Selection bits
 12190                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 12191                           ;	Watchdog Timer Enable bit
 12192                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 12193                           ;	Power-up Timer Enable bit
 12194                           ;	PWRTE = OFF, PWRT disabled
 12195                           ;	RE3/MCLR pin function select bit
 12196                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 12197                           ;	Code Protection bit
 12198                           ;	CP = OFF, Program memory code protection is disabled
 12199                           ;	Data Code Protection bit
 12200                           ;	CPD = OFF, Data memory code protection is disabled
 12201                           ;	Brown Out Reset Selection bits
 12202                           ;	BOREN = ON, BOR enabled
 12203                           ;	Internal External Switchover bit
 12204                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 12205                           ;	Fail-Safe Clock Monitor Enabled bit
 12206                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 12207                           ;	Low Voltage Programming Enable bit
 12208                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 12209                           ;	In-Circuit Debugger Mode bit
 12210                           ;	DEBUG = 0x1, unprogrammed default
 12211  2007                     	org	8199
 12212  2007  23D2               	dw	9170
 12213                           
 12214                           ;Config register CONFIG2 @ 0x2008
 12215                           ;	Brown-out Reset Selection bit
 12216                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 12217                           ;	Flash Program Memory Self Write Enable bits
 12218                           ;	WRT = OFF, Write protection off
 12219  2008                     	org	8200
 12220  2008  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    144
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     39      71
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_7(CODE[6]), STR_6(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> data2(BANK1[8]), data1(BANK1[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 8
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), data2(BANK1[8]), data1(BANK1[8]), 


Critical Paths under _main in COMMON

    _titulos_LCD->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _setup->_initOsc
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flsub->___xxtofl
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _ADC_channel2->___xxtofl
    _ADC_channel1->___xxtofl
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_float_to_string
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _ADC_channel2->___fldiv
    _ADC_channel1->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _float_to_string->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   48497
                                             37 BANK1      2     2      0
                       _ADC_channel1
                       _ADC_channel2
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _float_to_string
                              _setup
                        _titulos_LCD
 ---------------------------------------------------------------------------------
 (1) _titulos_LCD                                          1     1      0    1376
                                             10 COMMON     1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     666
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     710
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _float_to_string                                      1     1      0   32269
                                             78 BANK0      1     1      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   32269
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_channel2                                         4     4      0    6694
                                             56 BANK0      4     4      0
                         _ADC_Config
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _ADC_channel1                                         4     4      0    6694
                                             56 BANK0      4     4      0
                         _ADC_Config
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Config                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_channel1
     _ADC_Config
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _ADC_channel2
     _ADC_Config
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _float_to_string
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
   _setup
     _initOsc
   _titulos_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      47       7       88.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A5      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 11 15:23:47 2021

             ___fldiv@aexp 0057               ___fldiv@bexp 0056                          pc 0002  
             ___fldiv@sign 004F                         l73 1D57                         l91 1978  
                       l85 1EA3                         l79 1E30                         l88 1A39  
                       l97 1C42                         l98 1C9A                         l99 1C48  
             ___awdiv@sign 0021                         fsr 0004        ___wmul@multiplicand 0072  
      __size_of_ADC_Config 00BC        __Umul8_16@word_mpld 0076                        l100 1C4E  
                      l101 1C54                        l102 1C5A                        l103 1C60  
                      l200 10D2                        l120 1B44                        l104 1C66  
                      l105 1C6C                        l106 1C72                        l123 0805  
                      l107 1C9B                        l126 195D                        l135 19C0  
                      l144 1AB5                        l321 0C9E                        l410 19E5  
                      l314 1577                        l138 1016                        l404 07EF  
                      l190 104A                        l182 1019                        l191 1051  
                      l343 013A                        l192 1058                        l184 1020  
                      l408 19CD                        l193 105F                        l185 1027  
                      l194 1066                        l186 102E                        l602 1F2C  
                      l195 106D                        l187 1035                        l603 1F45  
                      l611 0881                        l196 1074                        l188 103C  
                      l444 1DBD                        l197 107B                        l189 1043  
                      l621 0881                        l381 05C3                        l198 1082  
                      l374 057F                        l199 1089                        l607 1931  
                      l625 118F                        l561 0074                        l618 086C  
                      l626 1101                        l714 1AF9                        l636 1182  
                      l724 1A73                        l813 1350                        l741 1659  
                      l629 1152                        l389 072A                        l582 0902  
                      l574 1C3F                        l815 1360                        l807 12DE  
                      l831 0FFF                        l735 15DB                        l760 1771  
                      l664 1BE6                        l850 19FA                        l594 1B61  
                      l578 093F                        l843 0FF3                        l595 1B7D  
                      l739 1682                        l579 08A4                        l852 1A0C  
                      l596 1B92                        l756 174D                        l748 17FF  
                      l837 0F6B                        l781 199C                        l589 0932  
                      l766 1793                        l791 11EC                        l599 1EC0  
                      l793 136C                        l881 1FAD                        l777 17F3  
                      l769 17D1                        l778 17FF                        l875 1F68  
                      l877 1FFF                        l895 1943                        l888 1FC9  
                      l889 1FD5                        _VAL 00D5                        fsr0 0004  
                      indf 0000               ___awmod@sign 0076               ___flmul@aexp 0036  
             ___flmul@bexp 0037                _titulos_LCD 1CF8               ___flmul@sign 0031  
             ___flmul@temp 003C               ___flmul@prod 0038               ___fltol@exp1 005B  
                     l3001 0949                       l3011 0A3F                       l3003 0950  
                     l3101 0882                       l3021 0AFB                       l3103 088F  
                     l3015 0AC7                       l3121 08C9                       l3113 08A5  
                     l3041 193A                       l3033 0C72                       l3009 0A38  
                     l3211 1EE0                       l3203 1EA4                       l3131 08FC  
                     l3123 08D2                       l3115 08AD                       l3107 0898  
                     l3051 10E6                       l3043 1940                       l3027 0BE3  
                     l3019 0AF4                       l3301 1F70                       l3213 1F04  
                     l3205 1EB8                       l3133 0906                       l3141 0920  
                     l3125 08E4                       l3117 08BE                       l3061 1102  
                     l3045 1942                       l3037 1933                       l2501 0018  
                     l3029 0BEA                       l3311 1F92                       l3215 1F08  
                     l3207 1ED4                       l3223 1927                       l3231 0806  
                     l3127 08F2                       l3119 08C0                       l3071 112B  
                     l3063 1108                       l3055 10EF                       l3039 1934  
                     l2511 0029                       l2503 001A                       l3321 1FC3  
                     l3313 1F96                       l3305 1F79                       l3217 1F42  
                     l3209 1EDC                       l3225 192F                       l3241 0832  
                     l3233 0813                       l3161 19DB                       l3153 19C1  
                     l3129 08F3                       l3081 1156                       l3073 1139  
                     l3065 1117                       l3049 10D3                       l2521 0041  
                     l2513 002F                       l2505 001E                       l3401 00F2  
                     l3331 1FF6                       l3323 1FCD                       l3315 1FA4  
                     l3307 1F7E                       l3219 1F44                       l3227 1931  
                     l3243 083A                       l3171 1D6B                       l3163 19E1  
                     l3155 19C3                       l3147 0927                       l3139 090E  
                     l3075 1143                       l3067 1119                       l2611 1A4E  
                     l2603 1A3A                       l2523 0052                       l2515 0032  
                     l2531 0066                       l2507 0023                       l3411 0125  
                     l3403 00F6                       l3333 1FF7                       l3325 1FD7  
                     l3317 1FB4                       l3309 1F8B                       l2701 1621  
                     l3261 0861                       l3253 0848                       l3245 083C  
                     l3237 081C                       l3181 1DA5                       l3173 1D78  
                     l3157 19C7                       l3149 0937                       l3077 1144  
                     l3069 1122                       l2613 1A52                       l2605 1A40  
                     l2621 1A6F                       l2533 006B                       l2525 0058  
                     l2517 0039                       l2509 0027                       l2541 1BE8  
                     l3421 0158                       l3405 00F9                       l3413 0136  
                     l3341 19A8                       l3327 1FED                       l3319 1FBF  
                     l3191 1B45                       l2711 1666                       l2703 1625  
                     l2631 1589                       l3263 0871                       l3247 0840  
                     l3255 085A                       l3239 0831                       l3183 1DA6  
                     l3175 1D7C                       l3167 1D58                       l3271 1B9E  
                     l3159 19D4                       l3095 1177                       l3087 115E  
                     l3079 114C                       l2615 1A5C                       l2607 1A43  
                     l2535 0070                       l2527 0059                       l2519 003D  
                     l2551 1BFC                       l2543 1BEC                       l3511 04CB  
                     l3503 046F                       l3431 017E                       l3423 0164  
                     l3415 0138                       l3407 010E                       l3343 19AF  
                     l3351 1A77                       l3361 1090                       l2481 19E9  
                     l3329 1FF2                       l3193 1B59                       l2801 17D6  
                     l2713 1668                       l2721 167A                       l2705 1626  
                     l2641 159D                       l2633 158A                       l2625 1578  
                     l3265 0876                       l3185 1DAF                       l3177 1D85  
                     l3169 1D68                       l3281 1BD8                       l3273 1BAB  
                     l3097 1187                       l3089 1170                       l2617 1A62  
                     l2609 1A4A                       l2529 0060                       l2561 1C14  
                     l2553 1C02                       l2545 1BF1                       l3601 0780  
                     l3513 04D1                       l3441 01D1                       l3433 0197  
                     l3425 0168                       l3409 0121                       l3345 19B5  
                     l3337 199E                       l3353 1A93                       l3363 10CA  
                     l2483 19F0                       l3195 1B75                       l2811 17ED  
                     l2803 17DB                       l2731 16AB                       l2723 1686  
                     l2715 166C                       l2707 163D                       l2651 15B3  
                     l2635 158F                       l2643 159F                       l2627 157F  
                     l3179 1D97                       l3187 1DB5                       l3275 1BAF  
                     l3283 1BDE                       l3267 1B93                       l2619 1A69  
                     l2571 1C36                       l2563 1C1E                       l2555 1C05  
                     l2547 1BF3                       l2539 1BE7                       l3611 07A8  
                     l3603 0789                       l3531 0519                       l3515 04DD  
                     l3523 04F2                       l3507 04A6                       l3451 020C  
                     l3443 01DC                       l3435 01B0                       l3427 016C  
                     l3419 013C                       l3347 19BA                       l3339 19A3  
                     l3355 1A99                       l3365 10CD                       l3357 1018  
                     l3701 121B                       l2485 19F4                       l2901 0F17  
                     l2821 0CA6                       l3293 1F47                       l2493 0801  
                     l3197 1B8F                       l2813 17EF                       l2805 17E3  
                     l2741 16C2                       l2733 16AF                       l2725 168B  
                     l2717 166D                       l2709 165D                       l2661 15C8  
                     l2653 15B9                       l2645 15A7                       l2637 1594  
                     l2629 1585                       l3277 1BC1                       l3269 1B9B  
                     l2581 1ABE                       l2573 1C3B                       l2565 1C24  
                     l2557 1C0C                       l2549 1BF7                       l3621 07D1  
                     l3613 07AE                       l3605 078D                       l3541 0594  
                     l3533 0554                       l3525 04FF                       l3517 04E4  
                     l3509 04B0                       l3461 029E                       l3453 0212  
                     l3445 01E2                       l3437 01B4                       l3429 017A  
                     l3381 008A                       l3349 1A74                       l3367 10D0  
                     l3711 1247                       l3703 122D                       l2487 1A03  
                     l2479 19E7                       l2911 0F3C                       l2903 0F20  
                     l2831 0CBB                       l2823 0CAC                       l3295 1F4C  
                     l3199 1B91                       l2815 17FA                       l2807 17E8  
                     l2751 1725                       l2743 16C3                       l2735 16B3  
                     l2719 1676                       l2671 15E5                       l2663 15D0  
                     l2655 15BD                       l2647 15AC                       l2639 159C  
                     l3287 1979                       l3279 1BCF                       l2591 1AE1  
                     l2583 1AC1                       l2495 000C                       l2567 1C2B  
                     l2559 1C10                       l3615 07B5                       l3607 0798  
                     l3551 05CC                       l3543 059A                       l3535 0573  
                     l3527 050D                       l3519 04ED                       l3471 0326  
                     l3463 02B9                       l3455 0231                       l3447 01F5  
                     l3439 01B8                       l3391 00BC                       l3383 008F  
                     l3375 0078                       l3369 10D1                       l3713 124C  
                     l3721 126C                       l3705 1235                       l2489 1A08  
                     l2921 0F54                       l2913 0F45                       l2905 0F2E  
                     l2841 0CD8                       l2833 0CC3                       l2825 0CB0  
                     l3297 1F50                       l2817 17FE                       l2809 17E9  
                     l2761 175A                       l2753 172B                       l2745 16CC  
                     l2737 16BC                       l2729 1694                       l2681 15F9  
                     l2673 15E9                       l2665 15D1                       l2657 15BE  
                     l2649 15B2                       l3289 197D                       l2593 1AE7  
                     l2585 1AC8                       l2577 1AB6                       l2497 000F  
                     l2569 1C31                       l3617 07B9                       l3609 07A4  
                     l3561 0655                       l3553 05D1                       l3545 05A7  
                     l3537 0587                       l3529 0514                       l3481 039B  
                     l3473 0341                       l3457 027C                       l3449 0208  
                     l3465 02C1                       l3393 00CF                       l3385 0093  
                     l3377 007D                       l3625 07D9                       l3641 1C78  
                     l3801 196F                       l3731 1297                       l3723 127E  
                     l3715 125E                       l3707 123D                       l3651 119D  
                     l2931 0F83                       l2923 0F68                       l2907 0F37  
                     l2915 0F4B                       l2851 0CEF                       l2843 0CDC  
                     l2835 0CC5                       l2827 0CB1                       l2819 0C9F  
                     l3299 1F60                       l2771 1775                       l2755 1730  
                     l2739 16BE                       l2747 16D1                       l2691 160D  
                     l2683 15FD                       l2675 15ED                       l2659 15C3  
                     l2667 15D3                       l2595 1AE8                       l2587 1ACC  
                     l2579 1AB8                       l2499 0013                       l3619 07C5  
                     l3571 06FE                       l3563 0690                       l3555 05D8  
                     l3547 05B6                       l3539 0590                       l3483 03A3  
                     l3475 0368                       l3491 03E9                       l3467 02D0  
                     l3459 0295                       l3627 07EB                       l3395 00D3  
                     l3387 00A3                       l3379 0083                       l3811 1976  
                     l3803 1970                       l3741 12AF                       l3733 129F  
                     l3725 127F                       l3717 1262                       l3709 1245  
                     l3661 11B4                       l3653 11A1                       l2941 0FBE  
                     l2933 0F87                       l2917 0F4F                       l2909 0F3B  
                     l2853 0CF1                       l2845 0CDD                       l2837 0CCD  
                     l2829 0CB6                       l3821 1B18                       l2773 1778  
                     l2765 1763                       l2749 16E7                       l2757 173F  
                     l2781 1785                       l2693 1611                       l2685 1601  
                     l2677 15F1                       l2669 15E1                       l2597 1AEF  
                     l2589 1AD0                       l3581 071C                       l3573 0705  
                     l3565 06AF                       l3557 05DC                       l3549 05BD  
                     l3493 041E                       l3485 03C1                       l3477 0377  
                     l3469 0317                       l3389 00A7                       l3397 00E3  
                     l3637 1C41                       l3813 1977                       l3805 1971  
                     l3751 12C7                       l3743 12B8                       l3735 12A1  
                     l3727 128D                       l3719 1263                       l3671 11CA  
                     l3663 11B5                       l3655 11A2                       l3647 1190  
                     l2951 0FEB                       l2943 0FCD                       l2935 0FA0  
                     l2927 0F70                       l2919 0F50                       l2871 0D62  
                     l2863 0D0C                       l2855 0CF9                       l2847 0CE2  
                     l2839 0CD2                       l3823 1B1E                       l3815 1AFA  
                     l2791 1798                       l2783 1786                       l2775 177A  
                     l2767 176C                       l2759 1755                       l2695 1615  
                     l2687 1605                       l2679 15F5                       l2599 1AF5  
                     l3591 0754                       l3583 0724                       l3575 0709  
                     l3567 06BB                       l3559 05FA                       l3495 046B  
                     l3479 0392                       l3399 00F1                       l3807 1974  
                     l3831 1D1E                       l3761 12F6                       l3753 12DB  
                     l3737 12AA                       l3745 12BE                       l3729 1291  
                     l3681 11E1                       l3673 11CE                       l3657 11A7  
                     l3665 11B7                       l3649 1197                       l2953 0FEC  
                     l2945 0FD7                       l2929 0F75                       l2937 0FA6  
                     l2881 0DDF                       l2873 0D8E                       l2865 0D1C  
                     l2857 0CFE                       l2849 0CE7                       l3841 1DC4  
                     l2961 1948                       l3817 1B00                       l2793 179D  
                     l2785 178A                       l2777 177F                       l2769 1770  
                     l2697 1619                       l2689 1609                       l3593 075C  
                     l3585 0735                       l3577 070F                       l3569 06F6  
                     l3497 046D                       l3489 03E0                       l3809 1975  
                     l3833 1D28                       l3825 1CF8                       l3771 1334  
                     l3763 12FA                       l3747 12C2                       l3739 12AE  
                     l3691 1204                       l3683 11E2                       l3675 11CF  
                     l3667 11BF                       l3659 11AC                       l2955 0FF7  
                     l2947 0FD9                       l2939 0FB3                       l2891 0E5F  
                     l2883 0DFC                       l2875 0DAA                       l2867 0D29  
                     l2859 0D03                       l3843 1DCE                       l3851 1E37  
                     l2963 194E                       l3819 1B09                       l2795 17AB  
                     l2787 1790                       l2779 1781                       l2699 161D  
                     l3595 0768                       l3587 073C                       l3579 0716  
                     l2971 1005                       l3835 1D3B                       l3827 1D02  
                     l3781 135A                       l3773 1343                       l3765 1313  
                     l3757 12E3                       l3749 12C3                       l3677 11D4  
                     l3685 11E4                       l3669 11C4                       l2949 0FE7  
                     l2893 0E8C                       l2885 0E0C                       l2877 0DC6  
                     l2869 0D46                       l3845 1DD2                       l3853 1E41  
                     l2965 1951                       l2797 17AF                       l2981 1376  
                     l3597 076E                       l3589 074B                       l2973 100B  
                     l3837 1D44                       l3829 1D0B                       l3861 1C9C  
                     l3783 135C                       l3775 1347                       l3759 12E8  
                     l3767 1319                       l3687 11F4                       l3695 120D  
                     l3679 11D9                       l2895 0E9C                       l2887 0E29  
                     l2879 0DCF                       l3847 1E2B                       l3839 1DBE  
                     l3855 1E45                       l2967 195A                       l2959 1945  
                     l2799 17CD                       l3599 0772                       l3791 1964  
                     l2975 100E                       l3871 1CBA                       l3863 1CA1  
                     l3777 134F                       l3769 1326                       l3697 1212  
                     l3689 1200                       l2897 0EC9                       l2889 0E42  
                     l3857 1E9E                       l3849 1E31                       l2993 1534  
                     l3793 1968                       l2977 1013                       l2969 1002  
                     l3881 1CDF                       l3873 1CBF                       l3865 1CA6  
                     l3779 1356                       l2899 0EEF                       l2987 1483  
                     l2979 1370                       l3859 1A0D                       l3795 1969  
                     l3883 1CEB                       l3875 1CC9                       l3867 1CAB  
                     l3981 1098                       l2989 1489                       l2997 0943  
                     l3797 196D                       l3789 195E                       l3877 1CCE  
                     l3869 1CB0                       l2999 0947                       l3799 196E  
                     l3879 1CD6                       l3977 1C80                       l3979 0150  
                     STR_1 18AD                       STR_2 18B1                       STR_3 18B5  
                     STR_4 18B9                       STR_5 18B9                       STR_6 18A0  
                     STR_7 18A7                       u3100 1A08                       u3101 1A07  
                     u3110 0013                       u3111 0012                       u3200 006B  
                     u3120 001E                       u4001 0DB8                       u3201 006A  
                     u3121 001D                       u4002 0DBF                       u3130 002F  
                     u3210 1BEC                       u4003 0DC6                       u3131 002E  
                     u3211 1BEB                       u4100 0EFD                       u3300 1ABE  
                     u3220 1BF7                       u4021 0DEE                       u3301 1ABD  
                     u3221 1BF6                       u4022 0DF5                       u3150 0041  
                     u3230 1C02                       u4111 0F09                       u4031 0E1B  
                     u4023 0DFC                       u4015 0DC8                       u3151 0040  
                     u3231 1C01                       u3080 19F4                       u4200 0F75  
                     u4112 0F10                       u4032 0E22                       u5000 192F  
                     u3320 1AD0                       u3400 1A5C                       u3081 19F3  
                     u4201 0F74                       u4113 0F17                       u4105 0EF8  
                     u4033 0E29                       u5001 192E                       u3321 1ACF  
                     u3401 1A5B                       u3145 0033                       u4210 0F87  
                     u5010 0813                       u3170 0052                       u3250 1C14  
                     u4211 0F86                       u4051 0E51                       u5011 0812  
                     u3315 1AC2                       u3171 0051                       u3251 1C13  
                     u4220 0F96                       u4140 0F3B                       u4052 0E58  
                     u3500 15E1                       u5100 0876                       u5020 082A  
                     u3340 1AE1                       u3420 1A6F                       u4300 1489  
                     u3260 1C1E                       u4141 0F3A                       u4125 0F19  
                     u4061 0E7E                       u4053 0E5F                       u4045 0E2B  
                     u3501 15E0                       u5101 0875                       u3341 1AE0  
                     u3421 1A6E                       u3405 1A58                       u4301 1488  
                     u3165 0042                       u3261 1C1D                       u3245 1C06  
                     u4230 0FB3                       u4062 0E85                       u3510 15E5  
                     u3430 1589                       u5030 0840                       u5110 1B9B  
                     u3190 0066                       u3095 19FB                       u4231 0FB2  
                     u4135 0F30                       u4071 0EAB                       u4063 0E8C  
                     u3511 15E4                       u3431 1588                       u5031 083F  
                     u5111 1B9A                       u3335 1AD1                       u3415 1A63  
                     u3191 0065                       u3175 004E                       u6000 12AE  
                     u4240 0FCD                       u4160 0F4F                       u4080 0ED5  
                     u4072 0EB2                       u3600 168B                       u3520 163D  
                     u3440 158F                       u5040 0847                       u3360 1AF5  
                     u3280 1C31                       u6001 12AD                       u4241 0FCC  
                     u4225 0F91                       u4161 0F4E                       u4073 0EB9  
                     u3601 168A                       u3521 163C                       u3441 158E  
                     u5041 0846                       u5025 0825                       u3361 1AF4  
                     u3345 1ADD                       u3185 005A                       u3281 1C30  
                     u3265 1C1A                       u4250 0FEB                       u4170 0F54  
                     u5210 1F91                       u3530 1648                       u3450 1594  
                     u5130 1BAF                       u3370 1A40                       u3290 1C36  
                     u4251 0FEA                       u4235 0FAF                       u4171 0F53  
                     u4155 0F3E                       u4091 0EE1                       u5211 1F90  
                     u3611 169D                       u3531 1646                       u3451 1593  
                     u5131 1BAE                       u3355 1AE9                       u3371 1A3F  
                     u4315 14A6                       u3291 1C35                       u3275 1C25  
                     u6100 1343                       u6020 12C2                       u4180 0F68  
                     u4092 0EE8                       u5300 1FF6                       u3700 1755  
                     u3620 16AF                       u3612 16A4                       u3540 1649  
                     u3460 15B2                       u5060 0859                       u5140 1BC1  
                     u4260 1376                       u4340 0947                       u6101 1342  
                     u6021 12C1                       u4245 0FC9                       u4181 0F67  
                     u4093 0EEF                       u4085 0ED0                       u5301 1FF5  
                     u5205 1F83                       u3701 1754                       u3621 16AE  
                     u3613 16AB                       u3525 1639                       u3461 15B1  
                     u5061 0858                       u5141 1BC0                       u5125 1BA0  
                     u4325 14F3                       u4261 1375                       u4405 0A52  
                     u4341 0946                       u6110 135A                       u6030 12C7  
                     u4190 0F6F                       u5230 1FB3                       u3710 175A  
                     u3630 16B3                       u3550 165D                       u3470 15BD  
                     u5070 0860                       u3390 1A52                       u4510 193A  
                     u4430 0AFB                       u4350 0950                       u5310 19A3  
                     u6111 1359                       u6031 12C6                       u6015 12B1  
                     u4191 0F6E                       u5231 1FB2                       u3711 1759  
                     u3631 16B2                       u3551 165C                       u3471 15BC  
                     u5071 085F                       u5055 0849                       u3391 1A51  
                     u4335 153F                       u4511 1939                       u4431 0AFA  
                     u4415 0A8E                       u4351 094F                       u5311 19A2  
                     u6040 12DB                       u6120 1E30                       u3800 179D  
                     u3640 16C2                       u3560 166C                       u3480 15C3  
                     u5160 1BDE                       u4600 115D                       u4520 1940  
                     u5400 0135                       u5320 19B5                       u6105 133F  
                     u6041 12DA                       u5225 1FA5                       u6121 1E2F  
                     u3801 179C                       u3641 16C1                       u3561 166B  
                     u3481 15C2                       u5161 1BDD                       u5145 1BBD  
                     u4601 115C                       u3385 1A44                       u4521 193F  
                     u4505 0C75                       u4425 0ACA                       u5401 0134  
                     u5321 19B4                       u6050 12E2                       u5250 1FC3  
                     u5170 1F4C                       u6130 1EA3                       u3810 17AF  
                     u3730 1770                       u3490 15C8                       u5090 0871  
                     u4530 10E6                       u5410 0164                       u5330 1A81  
                     u6051 12E1                       u5251 1FC2                       u5171 1F4B  
                     u6131 1EA2                       u3811 17AE                       u3731 176F  
                     u3491 15C7                       u5091 0870                       u5155 1BD0  
                     u4531 10E5                       u4275 1393                       u5411 0163  
                     u6060 12E8                       u3900 0CB6                       u5260 1FC9  
                     u5180 1F50                       u3820 17BE                       u3740 1775  
                     u3660 16E7                       u3580 1682                       u4620 116F  
                     u4540 1100                       u5500 0341                       u5420 0168  
                     u5340 1AA3                       u6061 12E7                       u3901 0CB5  
                     u5261 1FC8                       u5245 1FB8                       u5181 1F4F  
                     u3741 1774                       u3725 1765                       u3661 16E6  
                     u3581 1681                       u5085 0863                       u4621 116E  
                     u4541 10FF                       u4285 13ED                       u4445 0B1B  
                     u4365 0970                       u5501 0340                       u5421 0167  
                     u6070 12FA                       u3910 0CBB                       u5270 1FCD  
                     u5190 1F70                       u3830 17CD                       u3750 177F  
                     u3590 1686                       u4710 0902                       u4630 1176  
                     u4470 0BEA                       u4390 0A3F                       u5510 0368  
                     u5430 0197                       u5350 1AB5                       u6071 12F9  
                     u3911 0CBA                       u5271 1FCC                       u5191 1F6F  
                     u6207 1B22                       u3831 17CC                       u3751 177E  
                     u3671 16FE                       u3663 16E3                       u3655 16C5  
                     u3591 1685                       u3575 166F                       u4711 0901  
                     u4631 1175                       u4615 115F                       u4295 1442  
                     u4471 0BE9                       u4455 0B57                       u4391 0A3E  
                     u4375 09AC                       u5511 0367                       u5431 0196  
                     u5351 1AB4                       u6080 1309                       u3920 0CDC  
                     u5280 1FE2                       u3840 17D6                       u3760 1785  
                     u3680 1712                       u3672 16FF                       u4720 0906  
                     u4560 1139                       u5600 050D                       u5520 0377  
                     u5440 01D1                       u5360 0083                       u3921 0CDB  
                     u6217 1955                       u3841 17D5                       u3825 17B9  
                     u3761 1784                       u3681 1713                       u3673 1704  
                     u4721 0905                       u4705 08F5                       u4561 1138  
                     u4465 0BA2                       u4385 09F7                       u5601 050C  
                     u5521 0376                       u5441 01D0                       u5361 0082  
                     u6090 1326                       u3930 0CE2                       u5290 1FF2  
                     u3850 17DB                       u3770 178A                       u3690 1730  
                     u3682 1718                       u3674 1705                       u4730 090D  
                     u4650 1187                       u5530 0392                       u5450 020C  
                     u5370 00A3                       u6091 1325                       u3931 0CE1  
                     u5291 1FF1                       u6227 1E3D                       u3851 17DA  
                     u3771 1789                       u3691 172F                       u3683 1719  
                     u3675 170A                       u4731 090C                       u4651 1186  
                     u4555 1124                       u5531 0391                       u5451 020B  
                     u5371 00A2                       u3940 0CE7                       u4900 1B59  
                     u3860 17E8                       u3780 1790                       u3676 170B  
                     u4820 19E1                       u4660 088F                       u4580 1152  
                     u5700 071C                       u5620 0586                       u5460 0295  
                     u5380 00E3                       u6085 1304                       u3941 0CE6  
                     u5285 1FDD                       u6237 1DCA                       u4901 1B58  
                     u3861 17E7                       u3781 178F                       u4821 19E0  
                     u4805 19CE                       u4661 088E                       u4645 1179  
                     u4581 1151                       u4565 1135                       u4485 0BFD  
                     u5701 071B                       u5621 0585                       u5525 0373  
                     u5461 0294                       u5381 00E2                       u6157 1CB6  
                     u3950 0CFE                       u4910 1B75                       u3870 17ED  
                     u3790 1797                       u4830 1D68                       u4750 091F  
                     u4670 08A3                       u4590 1156                       u5710 0724  
                     u5630 05A7                       u5550 04A5                       u5470 02B9  
                     u5390 00F1                       u6095 1322                       u3951 0CFD  
                     u4911 1B74                       u3871 17EC                       u3791 1796  
                     u4831 1D67                       u4815 19D5                       u4751 091E  
                     u4671 08A2                       u4591 1155                       u4575 1145  
                     u4495 0C39                       u5711 0723                       u5631 05A6  
                     u5615 051C                       u5551 04A4                       u5471 02B8  
                     u5391 00F0                       u6167 1CC5                       u3960 0D03  
                     u4920 1B8F                       u3880 17FE                       u4760 0926  
                     u5800 07C5                       u5720 0735                       u5640 05B6  
                     u5560 04B0                       u5480 02D0                       u3961 0D02  
                     u4921 1B8E                       u3881 17FD                       u4761 0925  
                     u4745 090F                       u5801 07C4                       u5721 0734  
                     u5641 05B5                       u5561 04AF                       u5545 0472  
                     u5481 02CF                       u6177 1010                       u3890 0CB0  
                     u4930 1EB8                       u4850 1D7C                       u4690 08E4  
                     u5810 07D1                       u5730 074B                       u5650 05D1  
                     u5570 04CB                       u5490 0326                       u3971 0D54  
                     u3891 0CAF                       u6187 1B04                       u4931 1EB7  
                     u4851 1D7B                       u4691 08E3                       u5811 07D0  
                     u5731 074A                       u5651 05D0                       u5635 05A3  
                     u5571 04CA                       u5555 04A1                       u5491 0325  
                     u5900 1212                       u3972 0D5B                       u4940 1ED4  
                     u4780 0937                       u5820 07EB                       u5740 075C  
                     u5580 04DD                       u5901 1211                       u3981 0D70  
                     u3973 0D62                       u6197 1B13                       u4925 1B8B  
                     u4941 1ED3                       u4845 1D6D                       u4781 0936  
                     u4685 08CB                       u5821 07EA                       u5741 075B  
                     u5725 0731                       u5645 05B2                       u5581 04DC  
                     u5485 02CC                       u5910 124C                       u5830 11A1  
                     u3982 0D77                       u4950 1EE0                       u4870 1D97  
                     u4790 19C7                       u5750 0768                       u5590 04FF  
                     u5911 124B                       u5831 11A0                       u3991 0D9C  
                     u3983 0D7E                       u4951 1EDF                       u4871 1D96  
                     u4791 19C6                       u4775 0929                       u4695 08E0  
                     u5751 0767                       u5735 0747                       u5591 04FE  
                     u5495 0322                       u5840 11A7                       u3992 0DA3  
                     u5760 0772                       u5680 06FD                       u5841 11A6  
                     u3993 0DAA                       u4961 1EEF                       u4865 1D7E  
                     u5761 0771                       u5681 06FC                       u5665 0658  
                     u5850 11AC                       u4970 1F08                       u4962 1EF0  
                     u4890 1DB5                       u5770 0780                       u5690 0715  
                     u5851 11AB                       u4971 1F07                       u4963 1EF5  
                     u4891 1DB4                       u4875 1D93                       u5771 077F  
                     u5691 0714                       u5675 06BE                       u5595 04FB  
                     u5940 1262                       u5860 11CE                       u4964 1EF6  
                     u5780 0798                       u5941 1261                       u5925 124E  
                     u5861 11CD                       u4981 1F17                       u4965 1EFB  
                     u4885 1DA7                       u5781 0797                       u5870 11D4  
                     u4990 1F42                       u4982 1F18                       u4966 1EFC  
                     u5790 07AE                       u5935 1257                       u5871 11D3  
                     u4991 1F41                       u4983 1F1D                       u5791 07AD  
                     u5775 077C                       u5960 127E                       u5880 11D9  
                     u4984 1F1E                       u5961 127D                       u5881 11D8  
                     u4985 1F23                       u5785 0794                       u5970 1297  
                     u5890 11F4                       u4986 1F24                       u5971 1296  
                     u5955 1265                       u5891 11F3                       u4995 1F3E  
                     u5980 129F                       u5981 129E                       u5965 127A  
                     u5995 12A3          ?_Lcd_Write_String 0073                       _main 1C9C  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0075  
          ___fldiv@new_exp 0050               _sprintf$1109 00AA            __end_of_Lcd_Cmd 195E  
            ___fltol@sign1 005A            __end_of___fladd 1800                      ?_main 0070  
          __end_of___fldiv 136D            __end_of___awdiv 0075            __end_of___flneg 1932  
          __end_of___awmod 1C40            __end_of___flmul 1000            __end_of___flsub 199D  
          __end_of___fltol 0882                      _ANSEL 0188            __end_of___lldiv 1DBE  
          ___awdiv@divisor 0077            __end_of___llmod 1BE7            __end_of___lwdiv 1AFA  
          __end_of___lwmod 1A74            ___awdiv@counter 0020                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089           ADC_Config@AN_num 0072                      _data1 00DF  
                    _data2 00D7            __end_of_dpowers 18A0            __end_of_initOsc 1C9C  
                    _scale 0940            __end_of_isdigit 1944                      _setup 195E  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 07F0           __end_of_Lcd_Init 1B45      __size_of_ADC_channel1 0073  
    __size_of_ADC_channel2 0073           __end_of_Lcd_Port 0806            __initialization 07F0  
             __end_of_main 1CF8                     ??_main 00C5       __size_of__tdiv_to_l_ 00BD  
                   _ADCON1 009F           ___llmod@dividend 0074                     ?_scale 003E  
                   _ADRESH 001E                     _ADRESL 009E                initOsc@IRCF 0072  
         ___awdiv@dividend 0079                     ?_setup 0070                     _ANSELH 0189  
             ??_ADC_Config 0070               _ADC_channel1 1DBE               _ADC_channel2 1E31  
                ??_Lcd_Cmd 0071                     _S1_val 00CB                     _S2_val 00C7  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 0016           __end_of___xxtofl 2000  
         __end_of__powers_ 1844                     ___flge 1EA4                     ___fleq 1B45  
                ??___fladd 005A                     ___wmul 19C1                  ??___fldiv 0046  
                ??___awdiv 007B                  ??___flneg 0074                  ??___awmod 0074  
                ??___flmul 002C                  ??___flsub 007E                  ??___fltol 0055  
                ??___lldiv 0078                  ??___llmod 0078                  ??___lwdiv 007A  
                ??___lwmod 0074                     _fround 136D           ___awdiv@quotient 0022  
          ___awmod@divisor 0070            ___awmod@counter 0075         __end_of_ADC_Config 10D3  
          _float_to_string 1A0D                  ??_initOsc 0070                  ??_isdigit 0070  
       __size_of__Umul8_16 0027                  ??_sprintf 00A5            Lcd_Set_Cursor@a 0076  
          Lcd_Set_Cursor@b 0074                 ___flge@ff1 0070                 ___flge@ff2 0074  
             ___xxtofl@arg 007A               ___xxtofl@exp 0079               ___xxtofl@val 0070  
               ___fleq@ff1 0070                 ___fleq@ff2 0074    __end_of__initialization 07FC  
               ___flneg@f1 0070                 ___fltol@f1 0051             __pcstackCOMMON 0070  
            __end_of_scale 0C9F              __end_of_setup 1979             _Lcd_Set_Cursor 199D  
               __div_to_l_ 0882               ?_titulos_LCD 0070                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070            __div_to_l_@exp1 0025            __div_to_l_@cntr 0024  
                  ??_scale 0042            __div_to_l_@quot 0020               sprintf@width 00B5  
                  ??_setup 0073                 __pbssBANK0 006F                 __pbssBANK1 00C7  
            __div_to_l_@f1 0070              __div_to_l_@f2 0074          __end_of__Umul8_16 1A0D  
               __pmaintext 1C9C                    ?___flge 0070                    ?___fleq 0070  
                  ?___wmul 0070    __end_of_float_to_string 1A3A                    ?_fround 003E  
__size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 19C1                  ?___xxtofl 0070  
                  _S3_cont 006F                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
               __stringtab 1800             _Lcd_Write_Char 1001                    _Lcd_Cmd 1944  
        __end_of__npowers_ 1878                 _scale$1108 004C            __size_of___flge 00A2  
          __size_of___fleq 004E                    ___fladd 1578                    ___fldiv 1190  
                  ___awdiv 000C                    ___flneg 1927                    ___awmod 1BE7  
                  ___flmul 0C9F                    ___flsub 1979                    ___fltol 0806  
                  ___lldiv 1D58            __size_of___wmul 0025                    ___llmod 1B93  
                  ___lwdiv 1AB6                    ___lwmod 1A3A            __size_of_fround 020B  
          ?_Lcd_Set_Cursor 0074                    __ptext1 1CF8                    __ptext2 1A74  
                  __ptext3 1001                    __ptext4 199D                    __ptext5 195E  
                  __ptext6 1C40                    __ptext7 1A0D                    __ptext8 0075  
                  __ptext9 0940                ?__div_to_l_ 0070                    _dpowers 1878  
                  _initOsc 1C40                    _isdigit 1932                 ??___xxtofl 0074  
         ___awmod@dividend 0072                    _sprintf 0075                    clrloop0 0005  
   __end_of_Lcd_Write_Char 1017       end_of_initialization 07FC            ___lldiv@divisor 0070  
          ___lldiv@counter 007D                  _RCSTAbits 0018                  Lcd_Port@a 0070  
           __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074           ?_float_to_string 0070  
            ??__tdiv_to_l_ 0078                  _PORTEbits 0009                ___fladd@grs 0065  
            ___xxtofl@sign 0078                ___fldiv@grs 0052                ___fldiv@rem 004B  
     __size_of_titulos_LCD 0060            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073  
        Lcd_Write_String@i 0078                ___flmul@grs 0032                  _TXSTAbits 0098  
      __size_of__div_to_l_ 00BE             __end_of___flge 1F46             __end_of___fleq 1B93  
           __end_of___wmul 19E6           _Lcd_Write_String 1A74             __end_of_fround 1578  
      start_initialization 07F0        __end_of__tdiv_to_l_ 1190          __size_of_Lcd_Init 004B  
        __size_of_Lcd_Port 0006            ___llmod@divisor 0070            ___llmod@counter 0079  
                 ??___flge 0078                   ??___fleq 0078                   ??___wmul 0074  
                __Umul8_16 19E6            Lcd_Write_Char@a 0072                   ??_fround 0042  
            sprintf@tmpval 00B7                  ___fladd@a 0056                  ___fladd@b 0052  
               fround@prec 0051                  ___fldiv@a 003E                  ___fldiv@b 0042  
                ___flmul@a 0028                  ___flmul@b 0024                  ___flsub@a 0066  
                ___flsub@b 006A                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of___xxtofl 00BA                   ?_Lcd_Cmd 0070  
              sprintf@flag 00B3                sprintf@eexp 00BB                sprintf@fval 00BD  
              sprintf@prec 00C2           ___lwdiv@dividend 0078           ??_Lcd_Set_Cursor 0075  
                 ?___fladd 0052                   ?___fldiv 003E                   ?___awdiv 0077  
                 ?___flneg 0070                   ?___awmod 0070                   ?___flmul 0024  
                 ?___flsub 0066                   ?___fltol 0051                   ?___lldiv 0070  
                 ?___llmod 0070                  __npowers_ 1844                 ?__Umul8_16 0070  
                 ?___lwdiv 0076                   ?___lwmod 0070                  __pstrings 1800  
              __tdiv_to_l_ 10D3               ??__div_to_l_ 0078                   ?_initOsc 0070  
                 ?_isdigit 0070           ___lwdiv@quotient 007B                   ?_sprintf 00A0  
           __size_of_scale 035F             __size_of_setup 001B              ?_ADC_channel1 0070  
            ?_ADC_channel2 0070             ___wmul@product 0074                  clear_ram0 0004  
                 Lcd_Cmd@a 0073         __end_of__div_to_l_ 0940                   _VAL_SWAP 00D3  
               _ADCON0bits 001F                __stringbase 180F          ___wmul@multiplier 0070  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 1AFA                   _Lcd_Port 0800  
           ??_ADC_channel1 0058             ??_ADC_channel2 0058                 _ADC_Config 1017  
 __end_of_Lcd_Write_String 1AB6           __size_of_Lcd_Cmd 001A                ??__Umul8_16 0072  
         __size_of___fladd 0288           __size_of___fldiv 01DD           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 0059           __size_of___flmul 0361  
         __size_of___flsub 0024           __size_of___fltol 007C           __size_of___lldiv 0066  
         __size_of___llmod 0054           __size_of___lwdiv 0044           __size_of___lwmod 003A  
              _fround$1106 004D                _fround$1107 0049         __end_of__stringtab 1810  
              _isdigit$911 0070                 sprintf@val 00AF                   ___xxtofl 1F46  
            ??_titulos_LCD 007A           __size_of_initOsc 005C   __size_of_float_to_string 002D  
         __size_of_isdigit 0012            ___lwdiv@divisor 0076            ___lwdiv@counter 007D  
                 __ptext10 1BE7                   __ptext11 000C                   __ptext20 1D58  
                 __ptext12 1932                   __ptext21 0806                   __ptext13 136D  
                 __ptext30 1E31                   __ptext22 1979                   __ptext14 1A3A  
                 __ptext31 1DBE                   __ptext23 1578                   __ptext15 1AB6  
                 __ptext32 1F46                   __ptext24 1927                   __ptext16 10D3  
                 __ptext33 0C9F                   __ptext25 1EA4                   __ptext17 0882  
                 __ptext34 19E6                   __ptext26 1B45                   __ptext18 19C1  
                 __ptext35 1190                   __ptext27 1AFA                   __ptext19 1B93  
                 __ptext36 1017                   __ptext28 1944                   __ptext29 0800  
                 __powers_ 1810           __size_of_sprintf 077B              __size_of_main 005C  
              _VAL_NIBBLE1 00D1                _VAL_NIBBLE2 00CF                   isdigit@c 0071  
                 scale@scl 0050                  sprintf@ap 00AE           __tdiv_to_l_@exp1 0025  
         __tdiv_to_l_@cntr 0024                  sprintf@sp 00C1                ?_ADC_Config 0070  
      __end_of_titulos_LCD 1D58           __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072  
         ___lldiv@dividend 0074                  stringcode 180A                 _OSCCONbits 008F  
     __end_of_ADC_channel1 1E31       __end_of_ADC_channel2 1EA4         Lcd_Set_Cursor@temp 0077  
             ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070                   sprintf@c 00C4  
                 sprintf@f 00A0           ___lldiv@quotient 0079            ___lwmod@divisor 0070  
          ___lwmod@counter 0075                   stringdir 180A                   stringtab 1800  
            ___fladd@signs 0062          ??_float_to_string 006E               ___fladd@aexp 0063  
             ___fladd@bexp 0064       __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
