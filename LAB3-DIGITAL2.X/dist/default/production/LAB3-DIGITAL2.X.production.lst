

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 11 12:13:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	psect	text8_split_1,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F887 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  0088                     	;# 
   130  0089                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  0105                     	;# 
   154  0107                     	;# 
   155  0108                     	;# 
   156  0109                     	;# 
   157  010C                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  0185                     	;# 
   163  0187                     	;# 
   164  0188                     	;# 
   165  0189                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  008F                     	;# 
   213  0090                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  0105                     	;# 
   232  0107                     	;# 
   233  0108                     	;# 
   234  0109                     	;# 
   235  010C                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  010F                     	;# 
   240  0185                     	;# 
   241  0187                     	;# 
   242  0188                     	;# 
   243  0189                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  000E                     	;# 
   262  000F                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001D                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  0081                     	;# 
   282  0085                     	;# 
   283  0086                     	;# 
   284  0087                     	;# 
   285  0088                     	;# 
   286  0089                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  008E                     	;# 
   290  008F                     	;# 
   291  0090                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0094                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0097                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009A                     	;# 
   304  009B                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  009F                     	;# 
   309  0105                     	;# 
   310  0107                     	;# 
   311  0108                     	;# 
   312  0109                     	;# 
   313  010C                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  0185                     	;# 
   319  0187                     	;# 
   320  0188                     	;# 
   321  0189                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  008F                     	;# 
   369  0090                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0094                     	;# 
   376  0095                     	;# 
   377  0096                     	;# 
   378  0097                     	;# 
   379  0098                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  009F                     	;# 
   387  0105                     	;# 
   388  0107                     	;# 
   389  0108                     	;# 
   390  0109                     	;# 
   391  010C                     	;# 
   392  010C                     	;# 
   393  010D                     	;# 
   394  010E                     	;# 
   395  010F                     	;# 
   396  0185                     	;# 
   397  0187                     	;# 
   398  0188                     	;# 
   399  0189                     	;# 
   400  018C                     	;# 
   401  018D                     	;# 
   402  0000                     	;# 
   403  0001                     	;# 
   404  0002                     	;# 
   405  0003                     	;# 
   406  0004                     	;# 
   407  0005                     	;# 
   408  0006                     	;# 
   409  0007                     	;# 
   410  0008                     	;# 
   411  0009                     	;# 
   412  000A                     	;# 
   413  000B                     	;# 
   414  000C                     	;# 
   415  000D                     	;# 
   416  000E                     	;# 
   417  000E                     	;# 
   418  000F                     	;# 
   419  0010                     	;# 
   420  0011                     	;# 
   421  0012                     	;# 
   422  0013                     	;# 
   423  0014                     	;# 
   424  0015                     	;# 
   425  0015                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001B                     	;# 
   433  001C                     	;# 
   434  001D                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  0081                     	;# 
   438  0085                     	;# 
   439  0086                     	;# 
   440  0087                     	;# 
   441  0088                     	;# 
   442  0089                     	;# 
   443  008C                     	;# 
   444  008D                     	;# 
   445  008E                     	;# 
   446  008F                     	;# 
   447  0090                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0093                     	;# 
   453  0094                     	;# 
   454  0095                     	;# 
   455  0096                     	;# 
   456  0097                     	;# 
   457  0098                     	;# 
   458  0099                     	;# 
   459  009A                     	;# 
   460  009B                     	;# 
   461  009C                     	;# 
   462  009D                     	;# 
   463  009E                     	;# 
   464  009F                     	;# 
   465  0105                     	;# 
   466  0107                     	;# 
   467  0108                     	;# 
   468  0109                     	;# 
   469  010C                     	;# 
   470  010C                     	;# 
   471  010D                     	;# 
   472  010E                     	;# 
   473  010F                     	;# 
   474  0185                     	;# 
   475  0187                     	;# 
   476  0188                     	;# 
   477  0189                     	;# 
   478  018C                     	;# 
   479  018D                     	;# 
   480                           
   481                           	psect	strings
   482  1800                     __pstrings:
   483  1800                     stringtab:
   484  1800                     __stringtab:
   485                           
   486                           ;	String table - string pointers are 1 byte each
   487  1800  1BFF               	btfsc	btemp+1,7
   488  1801  280A               	ljmp	stringcode
   489  1802  1383               	bcf	3,7
   490  1803  187F               	btfsc	btemp+1,0
   491  1804  1783               	bsf	3,7
   492  1805  0800               	movf	0,w
   493  1806  0A84               	incf	4,f
   494  1807  1903               	skipnz
   495  1808  0AFF               	incf	btemp+1,f
   496  1809  0008               	return
   497  180A                     stringcode:
   498  180A                     stringdir:
   499  180A  3018               	movlw	high stringdir
   500  180B  008A               	movwf	10
   501  180C  0804               	movf	4,w
   502  180D  0A84               	incf	4,f
   503  180E  0782               	addwf	2,f
   504  180F                     __stringbase:
   505  180F  3400               	retlw	0
   506  1810                     __end_of__stringtab:
   507  1810                     __powers_:
   508  1810  3400               	retlw	0
   509  1811  3400               	retlw	0
   510  1812  3480               	retlw	128
   511  1813  343F               	retlw	63
   512  1814  3400               	retlw	0
   513  1815  3400               	retlw	0
   514  1816  3420               	retlw	32
   515  1817  3441               	retlw	65
   516  1818  3400               	retlw	0
   517  1819  3400               	retlw	0
   518  181A  34C8               	retlw	200
   519  181B  3442               	retlw	66
   520  181C  3400               	retlw	0
   521  181D  3400               	retlw	0
   522  181E  347A               	retlw	122
   523  181F  3444               	retlw	68
   524  1820  3400               	retlw	0
   525  1821  3440               	retlw	64
   526  1822  341C               	retlw	28
   527  1823  3446               	retlw	70
   528  1824  3400               	retlw	0
   529  1825  3450               	retlw	80
   530  1826  34C3               	retlw	195
   531  1827  3447               	retlw	71
   532  1828  3400               	retlw	0
   533  1829  3424               	retlw	36
   534  182A  3474               	retlw	116
   535  182B  3449               	retlw	73
   536  182C  3480               	retlw	128
   537  182D  3496               	retlw	150
   538  182E  3418               	retlw	24
   539  182F  344B               	retlw	75
   540  1830  3420               	retlw	32
   541  1831  34BC               	retlw	188
   542  1832  34BE               	retlw	190
   543  1833  344C               	retlw	76
   544  1834  3428               	retlw	40
   545  1835  346B               	retlw	107
   546  1836  346E               	retlw	110
   547  1837  344E               	retlw	78
   548  1838  34F9               	retlw	249
   549  1839  3402               	retlw	2
   550  183A  3415               	retlw	21
   551  183B  3450               	retlw	80
   552  183C  34EC               	retlw	236
   553  183D  3478               	retlw	120
   554  183E  34AD               	retlw	173
   555  183F  3460               	retlw	96
   556  1840  34CA               	retlw	202
   557  1841  34F2               	retlw	242
   558  1842  3449               	retlw	73
   559  1843  3471               	retlw	113
   560  1844                     __end_of__powers_:
   561  1844                     __npowers_:
   562  1844  3400               	retlw	0
   563  1845  3400               	retlw	0
   564  1846  3480               	retlw	128
   565  1847  343F               	retlw	63
   566  1848  34CD               	retlw	205
   567  1849  34CC               	retlw	204
   568  184A  34CC               	retlw	204
   569  184B  343D               	retlw	61
   570  184C  340A               	retlw	10
   571  184D  34D7               	retlw	215
   572  184E  3423               	retlw	35
   573  184F  343C               	retlw	60
   574  1850  346F               	retlw	111
   575  1851  3412               	retlw	18
   576  1852  3483               	retlw	131
   577  1853  343A               	retlw	58
   578  1854  3417               	retlw	23
   579  1855  34B7               	retlw	183
   580  1856  34D1               	retlw	209
   581  1857  3438               	retlw	56
   582  1858  34AC               	retlw	172
   583  1859  34C5               	retlw	197
   584  185A  3427               	retlw	39
   585  185B  3437               	retlw	55
   586  185C  34BD               	retlw	189
   587  185D  3437               	retlw	55
   588  185E  3486               	retlw	134
   589  185F  3435               	retlw	53
   590  1860  3495               	retlw	149
   591  1861  34BF               	retlw	191
   592  1862  34D6               	retlw	214
   593  1863  3433               	retlw	51
   594  1864  3477               	retlw	119
   595  1865  34CC               	retlw	204
   596  1866  342B               	retlw	43
   597  1867  3432               	retlw	50
   598  1868  345F               	retlw	95
   599  1869  3470               	retlw	112
   600  186A  3489               	retlw	137
   601  186B  3430               	retlw	48
   602  186C  34FF               	retlw	255
   603  186D  34E6               	retlw	230
   604  186E  34DB               	retlw	219
   605  186F  342E               	retlw	46
   606  1870  3408               	retlw	8
   607  1871  34E5               	retlw	229
   608  1872  343C               	retlw	60
   609  1873  341E               	retlw	30
   610  1874  3460               	retlw	96
   611  1875  3442               	retlw	66
   612  1876  34A2               	retlw	162
   613  1877  340D               	retlw	13
   614  1878                     __end_of__npowers_:
   615  1878                     _dpowers:
   616  1878  3401               	retlw	1
   617  1879  3400               	retlw	0
   618  187A  3400               	retlw	0
   619  187B  3400               	retlw	0
   620  187C  340A               	retlw	10
   621  187D  3400               	retlw	0
   622  187E  3400               	retlw	0
   623  187F  3400               	retlw	0
   624  1880  3464               	retlw	100
   625  1881  3400               	retlw	0
   626  1882  3400               	retlw	0
   627  1883  3400               	retlw	0
   628  1884  34E8               	retlw	232
   629  1885  3403               	retlw	3
   630  1886  3400               	retlw	0
   631  1887  3400               	retlw	0
   632  1888  3410               	retlw	16
   633  1889  3427               	retlw	39
   634  188A  3400               	retlw	0
   635  188B  3400               	retlw	0
   636  188C  34A0               	retlw	160
   637  188D  3486               	retlw	134
   638  188E  3401               	retlw	1
   639  188F  3400               	retlw	0
   640  1890  3440               	retlw	64
   641  1891  3442               	retlw	66
   642  1892  340F               	retlw	15
   643  1893  3400               	retlw	0
   644  1894  3480               	retlw	128
   645  1895  3496               	retlw	150
   646  1896  3498               	retlw	152
   647  1897  3400               	retlw	0
   648  1898  3400               	retlw	0
   649  1899  34E1               	retlw	225
   650  189A  34F5               	retlw	245
   651  189B  3405               	retlw	5
   652  189C  3400               	retlw	0
   653  189D  34CA               	retlw	202
   654  189E  349A               	retlw	154
   655  189F  343B               	retlw	59
   656  18A0                     __end_of_dpowers:
   657  0009                     _PORTEbits	set	9
   658  000B                     _INTCON	set	11
   659  0009                     _PORTE	set	9
   660  0008                     _PORTD	set	8
   661  0005                     _PORTA	set	5
   662  0007                     _PORTC	set	7
   663  0006                     _PORTB	set	6
   664  001E                     _ADRESH	set	30
   665  001F                     _ADCON0bits	set	31
   666  000C                     _PIR1bits	set	12
   667  009F                     _ADCON1	set	159
   668  008F                     _OSCCONbits	set	143
   669  008C                     _PIE1bits	set	140
   670  0089                     _TRISE	set	137
   671  0088                     _TRISD	set	136
   672  0087                     _TRISC	set	135
   673  0086                     _TRISB	set	134
   674  0085                     _TRISA	set	133
   675  009E                     _ADRESL	set	158
   676  0189                     _ANSELH	set	393
   677  0188                     _ANSEL	set	392
   678  18A0                     STR_4:
   679  18A0  3425               	retlw	37	;'%'
   680  18A1  3431               	retlw	49	;'1'
   681  18A2  342E               	retlw	46	;'.'
   682  18A3  3432               	retlw	50	;'2'
   683  18A4  3466               	retlw	102	;'f'
   684  18A5  3420               	retlw	32	;' '
   685  18A6  3420               	retlw	32	;' '
   686  18A7  3425               	retlw	37	;'%'
   687  18A8  3431               	retlw	49	;'1'
   688  18A9  342E               	retlw	46	;'.'
   689  18AA  3432               	retlw	50	;'2'
   690  18AB  3466               	retlw	102	;'f'
   691  18AC  3400               	retlw	0
   692  18AD                     STR_1:
   693  18AD  3453               	retlw	83	;'S'
   694  18AE  3431               	retlw	49	;'1'
   695  18AF  343A               	retlw	58	;':'
   696  18B0  3400               	retlw	0
   697  18B1                     STR_2:
   698  18B1  3453               	retlw	83	;'S'
   699  18B2  3432               	retlw	50	;'2'
   700  18B3  343A               	retlw	58	;':'
   701  18B4  3400               	retlw	0
   702  18B5                     STR_3:
   703  18B5  3453               	retlw	83	;'S'
   704  18B6  3433               	retlw	51	;'3'
   705  18B7  343A               	retlw	58	;':'
   706  18B8  3400               	retlw	0
   707                           
   708                           	psect	cinit
   709  0011                     start_initialization:	
   710                           ; #config settings
   711                           
   712  0011                     __initialization:
   713                           
   714                           ; Clear objects allocated to COMMON
   715  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   716  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   717  0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   718  0014  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   719  0015  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   720  0016  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   721                           
   722                           ; Clear objects allocated to BANK1
   723  0017  1383               	bcf	3,7	;select IRP bank0
   724  0018  30D1               	movlw	low __pbssBANK1
   725  0019  0084               	movwf	4
   726  001A  30E3               	movlw	low (__pbssBANK1+18)
   727  001B  160A  158A  20E8  120A  118A  	fcall	clear_ram0
   728                           
   729                           ; Clear objects allocated to BANK3
   730  0020  1783               	bsf	3,7	;select IRP bank2
   731  0021  3090               	movlw	low __pbssBANK3
   732  0022  0084               	movwf	4
   733  0023  30A0               	movlw	low (__pbssBANK3+16)
   734  0024  160A  158A  20E8  120A  118A  	fcall	clear_ram0
   735  0029                     end_of_initialization:	
   736                           ;End of C runtime variable initialization code
   737                           
   738  0029                     __end_of__initialization:
   739  0029  0183               	clrf	3
   740  002A  160A  158A  2A07   	ljmp	_main	;jump to C main() function
   741                           
   742                           	psect	bssCOMMON
   743  0078                     __pbssCOMMON:
   744  0078                     _ADC_flag2:
   745  0078                     	ds	2
   746  007A                     _ADC_flag1:
   747  007A                     	ds	2
   748  007C                     _S3_cont:
   749  007C                     	ds	1
   750  007D                     _a:
   751  007D                     	ds	1
   752                           
   753                           	psect	bssBANK1
   754  00D1                     __pbssBANK1:
   755  00D1                     _VAL_NIBBLE2:
   756  00D1                     	ds	2
   757  00D3                     _VAL_NIBBLE1:
   758  00D3                     	ds	2
   759  00D5                     _VAL_SWAP:
   760  00D5                     	ds	2
   761  00D7                     _VAL:
   762  00D7                     	ds	2
   763  00D9                     _x:
   764  00D9                     	ds	2
   765  00DB                     _S2_val:
   766  00DB                     	ds	2
   767  00DD                     _S1_val:
   768  00DD                     	ds	2
   769  00DF                     _ADC_VALOR_2:
   770  00DF                     	ds	2
   771  00E1                     _ADC_VALOR_1:
   772  00E1                     	ds	2
   773                           
   774                           	psect	bssBANK3
   775  0190                     __pbssBANK3:
   776  0190                     _data:
   777  0190                     	ds	16
   778                           
   779                           	psect	clrtext
   780  18E8                     clear_ram0:	
   781                           ;	Called with FSR containing the base address, and
   782                           ;	W with the last address+1
   783                           
   784  18E8  0064               	clrwdt	;clear the watchdog before getting into this loop
   785  18E9                     clrloop0:
   786  18E9  0180               	clrf	0	;clear RAM location pointed to by FSR
   787  18EA  0A84               	incf	4,f	;increment pointer
   788  18EB  0604               	xorwf	4,w	;XOR with final address
   789  18EC  1903               	btfsc	3,2	;have we reached the end yet?
   790  18ED  3400               	retlw	0	;all done for this memory range, return
   791  18EE  0604               	xorwf	4,w	;XOR again to restore value
   792  18EF  28E9               	goto	clrloop0	;do the next byte
   793                           
   794                           	psect	cstackBANK1
   795  00A0                     __pcstackBANK1:
   796  00A0                     ___fladd@signs:
   797                           
   798                           ; 1 bytes @ 0x0
   799  00A0                     	ds	1
   800  00A1                     ___fladd@aexp:
   801                           
   802                           ; 1 bytes @ 0x1
   803  00A1                     	ds	1
   804  00A2                     ___fladd@bexp:
   805                           
   806                           ; 1 bytes @ 0x2
   807  00A2                     	ds	1
   808  00A3                     ___fladd@grs:
   809                           
   810                           ; 1 bytes @ 0x3
   811  00A3                     	ds	1
   812  00A4                     ?___flsub:
   813  00A4                     ___flsub@a:	
   814                           ; 4 bytes @ 0x4
   815                           
   816                           
   817                           ; 4 bytes @ 0x4
   818  00A4                     	ds	4
   819  00A8                     ___flsub@b:
   820                           
   821                           ; 4 bytes @ 0x8
   822  00A8                     	ds	4
   823  00AC                     ?_sprintf:
   824  00AC                     sprintf@f:	
   825                           ; 2 bytes @ 0xC
   826                           
   827                           
   828                           ; 1 bytes @ 0xC
   829  00AC                     	ds	5
   830  00B1                     ??_sprintf:
   831                           
   832                           ; 1 bytes @ 0x11
   833  00B1                     	ds	5
   834  00B6                     _sprintf$1070:
   835                           
   836                           ; 4 bytes @ 0x16
   837  00B6                     	ds	4
   838  00BA                     sprintf@ap:
   839                           
   840                           ; 1 bytes @ 0x1A
   841  00BA                     	ds	1
   842  00BB                     sprintf@val:
   843                           
   844                           ; 4 bytes @ 0x1B
   845  00BB                     	ds	4
   846  00BF                     sprintf@flag:
   847                           
   848                           ; 2 bytes @ 0x1F
   849  00BF                     	ds	2
   850  00C1                     sprintf@width:
   851                           
   852                           ; 2 bytes @ 0x21
   853  00C1                     	ds	2
   854  00C3                     sprintf@tmpval:
   855                           
   856                           ; 4 bytes @ 0x23
   857  00C3                     	ds	4
   858  00C7                     sprintf@eexp:
   859                           
   860                           ; 2 bytes @ 0x27
   861  00C7                     	ds	2
   862  00C9                     sprintf@fval:
   863                           
   864                           ; 4 bytes @ 0x29
   865  00C9                     	ds	4
   866  00CD                     sprintf@sp:
   867                           
   868                           ; 1 bytes @ 0x2D
   869  00CD                     	ds	1
   870  00CE                     sprintf@prec:
   871                           
   872                           ; 2 bytes @ 0x2E
   873  00CE                     	ds	2
   874  00D0                     sprintf@c:
   875                           
   876                           ; 1 bytes @ 0x30
   877  00D0                     	ds	1
   878                           
   879                           	psect	cstackCOMMON
   880  0070                     __pcstackCOMMON:
   881  0070                     ?_isdigit:
   882  0070                     ?_ADC_Config:	
   883                           ; 1 bit 
   884                           
   885  0070                     ??_ADC_Config:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0070                     ?_setup:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0070                     ?_Config_INTERRUPT:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     ?_Lcd_Init:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  0070                     ?_titulos_LCD:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0070                     ?_CONVERSION_ADC:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0070                     ?_mapeo:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     ?_initOsc:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     ?_Lcd_Port:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     ?_Lcd_Cmd:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     ?_ISR:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ?_main:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0070                     ?_Lcd_Write_Char:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0070                     ?_ADC:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0070                     ADC@ADRESL_:	
   928                           ; 2 bytes @ 0x0
   929                           
   930  0070                     ADC@ADRESH_:	
   931                           ; 1 bytes @ 0x0
   932                           
   933                           
   934                           ; 1 bytes @ 0x0
   935  0070                     	ds	2
   936  0072                     ADC_Config@AN_num:
   937                           
   938                           ; 1 bytes @ 0x2
   939  0072                     	ds	1
   940  0073                     ??_ADC:
   941  0073                     ??_ISR:	
   942                           ; 1 bytes @ 0x3
   943                           
   944                           
   945                           ; 1 bytes @ 0x3
   946  0073                     	ds	5
   947                           
   948                           	psect	cstackBANK0
   949  0020                     __pcstackBANK0:
   950  0020                     ?___fleq:
   951  0020                     ?___flge:	
   952                           ; 1 bit 
   953                           
   954  0020                     ??_Config_INTERRUPT:	
   955                           ; 1 bit 
   956                           
   957  0020                     ??_CONVERSION_ADC:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0020                     ??_initOsc:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0020                     ??_Lcd_Port:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0020                     ??_isdigit:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0020                     ?__Umul8_16:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0020                     ?___wmul:	
   973                           ; 2 bytes @ 0x0
   974                           
   975  0020                     ?___awmod:	
   976                           ; 2 bytes @ 0x0
   977                           
   978  0020                     ?___lwmod:	
   979                           ; 2 bytes @ 0x0
   980                           
   981  0020                     ?__tdiv_to_l_:	
   982                           ; 2 bytes @ 0x0
   983                           
   984  0020                     ?__div_to_l_:	
   985                           ; 4 bytes @ 0x0
   986                           
   987  0020                     ?___lldiv:	
   988                           ; 4 bytes @ 0x0
   989                           
   990  0020                     ?___flneg:	
   991                           ; 4 bytes @ 0x0
   992                           
   993  0020                     ?___llmod:	
   994                           ; 4 bytes @ 0x0
   995                           
   996  0020                     ?___xxtofl:	
   997                           ; 4 bytes @ 0x0
   998                           
   999  0020                     Lcd_Port@a:	
  1000                           ; 4 bytes @ 0x0
  1001                           
  1002  0020                     __Umul8_16@multiplicand:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0020                     _isdigit$878:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0020                     ___wmul@multiplier:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0020                     ___awmod@divisor:	
  1012                           ; 2 bytes @ 0x0
  1013                           
  1014  0020                     ___lwmod@divisor:	
  1015                           ; 2 bytes @ 0x0
  1016                           
  1017  0020                     ___lldiv@divisor:	
  1018                           ; 2 bytes @ 0x0
  1019                           
  1020  0020                     __div_to_l_@f1:	
  1021                           ; 4 bytes @ 0x0
  1022                           
  1023  0020                     ___fleq@ff1:	
  1024                           ; 4 bytes @ 0x0
  1025                           
  1026  0020                     ___flge@ff1:	
  1027                           ; 4 bytes @ 0x0
  1028                           
  1029  0020                     ___flneg@f1:	
  1030                           ; 4 bytes @ 0x0
  1031                           
  1032  0020                     __tdiv_to_l_@f1:	
  1033                           ; 4 bytes @ 0x0
  1034                           
  1035  0020                     ___llmod@divisor:	
  1036                           ; 4 bytes @ 0x0
  1037                           
  1038  0020                     ___xxtofl@val:	
  1039                           ; 4 bytes @ 0x0
  1040                           
  1041                           
  1042                           ; 4 bytes @ 0x0
  1043  0020                     	ds	1
  1044  0021                     ??_Lcd_Cmd:
  1045  0021                     ??_Lcd_Write_Char:	
  1046                           ; 1 bytes @ 0x1
  1047                           
  1048  0021                     isdigit@c:	
  1049                           ; 1 bytes @ 0x1
  1050                           
  1051                           
  1052                           ; 1 bytes @ 0x1
  1053  0021                     	ds	1
  1054  0022                     ??__Umul8_16:
  1055  0022                     initOsc@IRCF:	
  1056                           ; 1 bytes @ 0x2
  1057                           
  1058  0022                     Lcd_Write_Char@a:	
  1059                           ; 1 bytes @ 0x2
  1060                           
  1061  0022                     ___wmul@multiplicand:	
  1062                           ; 1 bytes @ 0x2
  1063                           
  1064  0022                     ___awmod@dividend:	
  1065                           ; 2 bytes @ 0x2
  1066                           
  1067  0022                     ___lwmod@dividend:	
  1068                           ; 2 bytes @ 0x2
  1069                           
  1070                           
  1071                           ; 2 bytes @ 0x2
  1072  0022                     	ds	1
  1073  0023                     ??_setup:
  1074  0023                     ?_Lcd_Write_String:	
  1075                           ; 1 bytes @ 0x3
  1076                           
  1077  0023                     Lcd_Cmd@a:	
  1078                           ; 1 bytes @ 0x3
  1079                           
  1080  0023                     Lcd_Write_String@a:	
  1081                           ; 1 bytes @ 0x3
  1082                           
  1083                           
  1084                           ; 2 bytes @ 0x3
  1085  0023                     	ds	1
  1086  0024                     ??_Lcd_Init:
  1087  0024                     ?_Lcd_Set_Cursor:	
  1088                           ; 1 bytes @ 0x4
  1089                           
  1090  0024                     ??___wmul:	
  1091                           ; 1 bytes @ 0x4
  1092                           
  1093  0024                     ??___awmod:	
  1094                           ; 1 bytes @ 0x4
  1095                           
  1096  0024                     ??___flneg:	
  1097                           ; 1 bytes @ 0x4
  1098                           
  1099  0024                     ??___lwmod:	
  1100                           ; 1 bytes @ 0x4
  1101                           
  1102  0024                     ??___xxtofl:	
  1103                           ; 1 bytes @ 0x4
  1104                           
  1105  0024                     Lcd_Set_Cursor@b:	
  1106                           ; 1 bytes @ 0x4
  1107                           
  1108  0024                     ___wmul@product:	
  1109                           ; 1 bytes @ 0x4
  1110                           
  1111  0024                     __Umul8_16@product:	
  1112                           ; 2 bytes @ 0x4
  1113                           
  1114  0024                     ___lldiv@dividend:	
  1115                           ; 2 bytes @ 0x4
  1116                           
  1117  0024                     __div_to_l_@f2:	
  1118                           ; 4 bytes @ 0x4
  1119                           
  1120  0024                     ___fleq@ff2:	
  1121                           ; 4 bytes @ 0x4
  1122                           
  1123  0024                     ___flge@ff2:	
  1124                           ; 4 bytes @ 0x4
  1125                           
  1126  0024                     __tdiv_to_l_@f2:	
  1127                           ; 4 bytes @ 0x4
  1128                           
  1129  0024                     ___llmod@dividend:	
  1130                           ; 4 bytes @ 0x4
  1131                           
  1132                           
  1133                           ; 4 bytes @ 0x4
  1134  0024                     	ds	1
  1135  0025                     ??_Lcd_Set_Cursor:
  1136  0025                     ??_Lcd_Write_String:	
  1137                           ; 1 bytes @ 0x5
  1138                           
  1139  0025                     ___awmod@counter:	
  1140                           ; 1 bytes @ 0x5
  1141                           
  1142  0025                     ___lwmod@counter:	
  1143                           ; 1 bytes @ 0x5
  1144                           
  1145                           
  1146                           ; 1 bytes @ 0x5
  1147  0025                     	ds	1
  1148  0026                     ?___lwdiv:
  1149  0026                     Lcd_Set_Cursor@a:	
  1150                           ; 2 bytes @ 0x6
  1151                           
  1152  0026                     ___awmod@sign:	
  1153                           ; 1 bytes @ 0x6
  1154                           
  1155  0026                     ___lwdiv@divisor:	
  1156                           ; 1 bytes @ 0x6
  1157                           
  1158  0026                     __Umul8_16@word_mpld:	
  1159                           ; 2 bytes @ 0x6
  1160                           
  1161                           
  1162                           ; 2 bytes @ 0x6
  1163  0026                     	ds	1
  1164  0027                     ?___awdiv:
  1165  0027                     Lcd_Set_Cursor@temp:	
  1166                           ; 2 bytes @ 0x7
  1167                           
  1168  0027                     ___awdiv@divisor:	
  1169                           ; 1 bytes @ 0x7
  1170                           
  1171                           
  1172                           ; 2 bytes @ 0x7
  1173  0027                     	ds	1
  1174  0028                     ??__tdiv_to_l_:
  1175  0028                     ??__div_to_l_:	
  1176                           ; 1 bytes @ 0x8
  1177                           
  1178  0028                     ??___lldiv:	
  1179                           ; 1 bytes @ 0x8
  1180                           
  1181  0028                     ??___fleq:	
  1182                           ; 1 bytes @ 0x8
  1183                           
  1184  0028                     ??___flge:	
  1185                           ; 1 bytes @ 0x8
  1186                           
  1187  0028                     ??___llmod:	
  1188                           ; 1 bytes @ 0x8
  1189                           
  1190  0028                     __Umul8_16@multiplier:	
  1191                           ; 1 bytes @ 0x8
  1192                           
  1193  0028                     ___xxtofl@sign:	
  1194                           ; 1 bytes @ 0x8
  1195                           
  1196  0028                     Lcd_Write_String@i:	
  1197                           ; 1 bytes @ 0x8
  1198                           
  1199  0028                     ___lwdiv@dividend:	
  1200                           ; 2 bytes @ 0x8
  1201                           
  1202                           
  1203                           ; 2 bytes @ 0x8
  1204  0028                     	ds	1
  1205  0029                     ___llmod@counter:
  1206  0029                     ___xxtofl@exp:	
  1207                           ; 1 bytes @ 0x9
  1208                           
  1209  0029                     ___awdiv@dividend:	
  1210                           ; 1 bytes @ 0x9
  1211                           
  1212  0029                     ___lldiv@quotient:	
  1213                           ; 2 bytes @ 0x9
  1214                           
  1215  0029                     __div_to_l_@quot:	
  1216                           ; 4 bytes @ 0x9
  1217                           
  1218                           
  1219                           ; 4 bytes @ 0x9
  1220  0029                     	ds	1
  1221  002A                     ??_titulos_LCD:
  1222  002A                     ??___lwdiv:	
  1223                           ; 1 bytes @ 0xA
  1224                           
  1225  002A                     ___xxtofl@arg:	
  1226                           ; 1 bytes @ 0xA
  1227                           
  1228                           
  1229                           ; 4 bytes @ 0xA
  1230  002A                     	ds	1
  1231  002B                     ??___awdiv:
  1232  002B                     ___lwdiv@quotient:	
  1233                           ; 1 bytes @ 0xB
  1234                           
  1235                           
  1236                           ; 2 bytes @ 0xB
  1237  002B                     	ds	1
  1238  002C                     ___awdiv@counter:
  1239  002C                     __tdiv_to_l_@quot:	
  1240                           ; 1 bytes @ 0xC
  1241                           
  1242                           
  1243                           ; 4 bytes @ 0xC
  1244  002C                     	ds	1
  1245  002D                     ___lldiv@counter:
  1246  002D                     ___awdiv@sign:	
  1247                           ; 1 bytes @ 0xD
  1248                           
  1249  002D                     __div_to_l_@cntr:	
  1250                           ; 1 bytes @ 0xD
  1251                           
  1252  002D                     ___lwdiv@counter:	
  1253                           ; 1 bytes @ 0xD
  1254                           
  1255                           
  1256                           ; 1 bytes @ 0xD
  1257  002D                     	ds	1
  1258  002E                     __div_to_l_@exp1:
  1259  002E                     ___awdiv@quotient:	
  1260                           ; 1 bytes @ 0xE
  1261                           
  1262                           
  1263                           ; 2 bytes @ 0xE
  1264  002E                     	ds	2
  1265  0030                     ?___flmul:
  1266  0030                     __tdiv_to_l_@cntr:	
  1267                           ; 4 bytes @ 0x10
  1268                           
  1269  0030                     ___flmul@b:	
  1270                           ; 1 bytes @ 0x10
  1271                           
  1272                           
  1273                           ; 4 bytes @ 0x10
  1274  0030                     	ds	1
  1275  0031                     __tdiv_to_l_@exp1:
  1276                           
  1277                           ; 1 bytes @ 0x11
  1278  0031                     	ds	3
  1279  0034                     ___flmul@a:
  1280                           
  1281                           ; 4 bytes @ 0x14
  1282  0034                     	ds	4
  1283  0038                     ??___flmul:
  1284                           
  1285                           ; 1 bytes @ 0x18
  1286  0038                     	ds	5
  1287  003D                     ___flmul@sign:
  1288                           
  1289                           ; 1 bytes @ 0x1D
  1290  003D                     	ds	1
  1291  003E                     ___flmul@grs:
  1292                           
  1293                           ; 4 bytes @ 0x1E
  1294  003E                     	ds	4
  1295  0042                     ___flmul@aexp:
  1296                           
  1297                           ; 1 bytes @ 0x22
  1298  0042                     	ds	1
  1299  0043                     ___flmul@bexp:
  1300                           
  1301                           ; 1 bytes @ 0x23
  1302  0043                     	ds	1
  1303  0044                     ___flmul@prod:
  1304                           
  1305                           ; 4 bytes @ 0x24
  1306  0044                     	ds	4
  1307  0048                     ___flmul@temp:
  1308                           
  1309                           ; 2 bytes @ 0x28
  1310  0048                     	ds	2
  1311  004A                     ?_fround:
  1312  004A                     ?_scale:	
  1313                           ; 4 bytes @ 0x2A
  1314                           
  1315                           
  1316                           ; 4 bytes @ 0x2A
  1317  004A                     	ds	4
  1318  004E                     ??_fround:
  1319  004E                     ??_scale:	
  1320                           ; 1 bytes @ 0x2E
  1321                           
  1322                           
  1323                           ; 1 bytes @ 0x2E
  1324  004E                     	ds	7
  1325  0055                     _fround$1068:
  1326                           
  1327                           ; 4 bytes @ 0x35
  1328  0055                     	ds	3
  1329  0058                     _scale$1069:
  1330                           
  1331                           ; 4 bytes @ 0x38
  1332  0058                     	ds	1
  1333  0059                     _fround$1067:
  1334                           
  1335                           ; 4 bytes @ 0x39
  1336  0059                     	ds	3
  1337  005C                     scale@scl:
  1338                           
  1339                           ; 1 bytes @ 0x3C
  1340  005C                     	ds	1
  1341  005D                     ?___fltol:
  1342  005D                     fround@prec:	
  1343                           ; 4 bytes @ 0x3D
  1344                           
  1345  005D                     ___fltol@f1:	
  1346                           ; 1 bytes @ 0x3D
  1347                           
  1348                           
  1349                           ; 4 bytes @ 0x3D
  1350  005D                     	ds	1
  1351  005E                     ?___fladd:
  1352  005E                     ___fladd@b:	
  1353                           ; 4 bytes @ 0x3E
  1354                           
  1355                           
  1356                           ; 4 bytes @ 0x3E
  1357  005E                     	ds	3
  1358  0061                     ??___fltol:
  1359                           
  1360                           ; 1 bytes @ 0x41
  1361  0061                     	ds	1
  1362  0062                     ___fladd@a:
  1363                           
  1364                           ; 4 bytes @ 0x42
  1365  0062                     	ds	4
  1366  0066                     ??___fladd:
  1367  0066                     ___fltol@sign1:	
  1368                           ; 1 bytes @ 0x46
  1369                           
  1370                           
  1371                           ; 1 bytes @ 0x46
  1372  0066                     	ds	1
  1373  0067                     ___fltol@exp1:
  1374                           
  1375                           ; 1 bytes @ 0x47
  1376  0067                     	ds	7
  1377  006E                     ??_mapeo:
  1378  006E                     ??___flsub:	
  1379                           ; 1 bytes @ 0x4E
  1380                           
  1381                           
  1382                           ; 1 bytes @ 0x4E
  1383  006E                     	ds	1
  1384  006F                     ??_main:
  1385                           
  1386                           	psect	maintext
  1387  1A07                     __pmaintext:	
  1388                           ; 1 bytes @ 0x4F
  1389 ;;
  1390 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1391 ;;
  1392 ;; *************** function _main *****************
  1393 ;; Defined at:
  1394 ;;		line 120 in file "pseudocodigo_lab3.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : B00/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1408 ;;      Params:         0       0       0       0       0
  1409 ;;      Locals:         0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0
  1411 ;;      Totals:         0       0       0       0       0
  1412 ;;Total ram usage:        0 bytes
  1413 ;; Hardware stack levels required when called:    7
  1414 ;; This function calls:
  1415 ;;		_CONVERSION_ADC
  1416 ;;		_Config_INTERRUPT
  1417 ;;		_Lcd_Init
  1418 ;;		_Lcd_Set_Cursor
  1419 ;;		_Lcd_Write_String
  1420 ;;		_mapeo
  1421 ;;		_setup
  1422 ;;		_titulos_LCD
  1423 ;; This function is called by:
  1424 ;;		Startup code after reset
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           
  1429                           ;psect for function _main
  1430  1A07                     _main:
  1431  1A07                     l3640:	
  1432                           ;incstack = 0
  1433                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1434                           
  1435                           
  1436                           ;pseudocodigo_lab3.c: 121:     setup();
  1437  1A07  160A  158A  213C  160A  158A  	fcall	_setup
  1438  1A0C                     l3642:
  1439                           
  1440                           ;pseudocodigo_lab3.c: 122:     Config_INTERRUPT();
  1441  1A0C  160A  158A  20F0  160A  158A  	fcall	_Config_INTERRUPT
  1442  1A11                     l3644:
  1443                           
  1444                           ;pseudocodigo_lab3.c: 123:     Lcd_Init();
  1445  1A11  160A  158A  234C  160A  158A  	fcall	_Lcd_Init
  1446  1A16                     l3646:
  1447                           
  1448                           ;pseudocodigo_lab3.c: 124:     titulos_LCD();
  1449  1A16  160A  158A  2306  160A  158A  	fcall	_titulos_LCD
  1450  1A1B                     l3648:
  1451                           
  1452                           ;pseudocodigo_lab3.c: 132:         CONVERSION_ADC();
  1453  1A1B  160A  158A  2173  160A  158A  	fcall	_CONVERSION_ADC
  1454  1A20                     l3650:
  1455                           
  1456                           ;pseudocodigo_lab3.c: 133:         mapeo();
  1457  1A20  160A  158A  210D  160A  158A  	fcall	_mapeo
  1458  1A25                     l3652:
  1459                           
  1460                           ;pseudocodigo_lab3.c: 135:         Lcd_Set_Cursor(2,1);
  1461  1A25  1283               	bcf	3,5	;RP0=0, select bank0
  1462  1A26  1303               	bcf	3,6	;RP1=0, select bank0
  1463  1A27  01A4               	clrf	Lcd_Set_Cursor@b
  1464  1A28  0AA4               	incf	Lcd_Set_Cursor@b,f
  1465  1A29  3002               	movlw	2
  1466  1A2A  160A  158A  2191  160A  158A  	fcall	_Lcd_Set_Cursor
  1467  1A2F                     l3654:
  1468                           
  1469                           ;pseudocodigo_lab3.c: 136:         Lcd_Write_String(data);
  1470  1A2F  3090               	movlw	(low (_data| (0+256)))& (0+255)
  1471  1A30  1283               	bcf	3,5	;RP0=0, select bank0
  1472  1A31  1303               	bcf	3,6	;RP1=0, select bank0
  1473  1A32  00A3               	movwf	Lcd_Write_String@a
  1474  1A33  3001               	movlw	1
  1475  1A34  00A4               	movwf	Lcd_Write_String@a+1
  1476  1A35  160A  158A  22C0  160A  158A  	fcall	_Lcd_Write_String
  1477  1A3A  2A1B               	goto	l3648
  1478  1A3B  120A  118A  280E   	ljmp	start
  1479  1A3E                     __end_of_main:
  1480                           
  1481                           	psect	text1
  1482  1B06                     __ptext1:	
  1483 ;; *************** function _titulos_LCD *****************
  1484 ;; Defined at:
  1485 ;;		line 169 in file "pseudocodigo_lab3.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1499 ;;      Params:         0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0
  1501 ;;      Temps:          0       1       0       0       0
  1502 ;;      Totals:         0       1       0       0       0
  1503 ;;Total ram usage:        1 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    5
  1506 ;; This function calls:
  1507 ;;		_Lcd_Set_Cursor
  1508 ;;		_Lcd_Write_String
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           
  1515                           ;psect for function _titulos_LCD
  1516  1B06                     _titulos_LCD:
  1517  1B06                     l3590:	
  1518                           ;incstack = 0
  1519                           ; Regs used in _titulos_LCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1520                           
  1521                           
  1522                           ;pseudocodigo_lab3.c: 171:         Lcd_Set_Cursor(1,2);
  1523  1B06  3002               	movlw	2
  1524  1B07  1283               	bcf	3,5	;RP0=0, select bank0
  1525  1B08  1303               	bcf	3,6	;RP1=0, select bank0
  1526  1B09  00AA               	movwf	??_titulos_LCD
  1527  1B0A  082A               	movf	??_titulos_LCD,w
  1528  1B0B  00A4               	movwf	Lcd_Set_Cursor@b
  1529  1B0C  3001               	movlw	1
  1530  1B0D  160A  158A  2191  160A  158A  	fcall	_Lcd_Set_Cursor
  1531  1B12                     l3592:
  1532                           
  1533                           ;pseudocodigo_lab3.c: 172:         Lcd_Write_String("S1:");
  1534  1B12  309E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1535  1B13  1283               	bcf	3,5	;RP0=0, select bank0
  1536  1B14  1303               	bcf	3,6	;RP1=0, select bank0
  1537  1B15  00A3               	movwf	Lcd_Write_String@a
  1538  1B16  3080               	movlw	128
  1539  1B17  00A4               	movwf	Lcd_Write_String@a+1
  1540  1B18  160A  158A  22C0  160A  158A  	fcall	_Lcd_Write_String
  1541  1B1D                     l3594:
  1542                           
  1543                           ;pseudocodigo_lab3.c: 173:         Lcd_Set_Cursor(1,8);
  1544  1B1D  3008               	movlw	8
  1545  1B1E  1283               	bcf	3,5	;RP0=0, select bank0
  1546  1B1F  1303               	bcf	3,6	;RP1=0, select bank0
  1547  1B20  00AA               	movwf	??_titulos_LCD
  1548  1B21  082A               	movf	??_titulos_LCD,w
  1549  1B22  00A4               	movwf	Lcd_Set_Cursor@b
  1550  1B23  3001               	movlw	1
  1551  1B24  160A  158A  2191  160A  158A  	fcall	_Lcd_Set_Cursor
  1552                           
  1553                           ;pseudocodigo_lab3.c: 174:         Lcd_Write_String("S2:");
  1554  1B29  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1555  1B2A  1283               	bcf	3,5	;RP0=0, select bank0
  1556  1B2B  1303               	bcf	3,6	;RP1=0, select bank0
  1557  1B2C  00A3               	movwf	Lcd_Write_String@a
  1558  1B2D  3080               	movlw	128
  1559  1B2E  00A4               	movwf	Lcd_Write_String@a+1
  1560  1B2F  160A  158A  22C0  160A  158A  	fcall	_Lcd_Write_String
  1561  1B34                     l3596:
  1562                           
  1563                           ;pseudocodigo_lab3.c: 175:         Lcd_Set_Cursor(1,13);
  1564  1B34  300D               	movlw	13
  1565  1B35  1283               	bcf	3,5	;RP0=0, select bank0
  1566  1B36  1303               	bcf	3,6	;RP1=0, select bank0
  1567  1B37  00AA               	movwf	??_titulos_LCD
  1568  1B38  082A               	movf	??_titulos_LCD,w
  1569  1B39  00A4               	movwf	Lcd_Set_Cursor@b
  1570  1B3A  3001               	movlw	1
  1571  1B3B  160A  158A  2191  160A  158A  	fcall	_Lcd_Set_Cursor
  1572  1B40                     l3598:
  1573                           
  1574                           ;pseudocodigo_lab3.c: 176:         Lcd_Write_String("S3:");
  1575  1B40  30A6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1576  1B41  1283               	bcf	3,5	;RP0=0, select bank0
  1577  1B42  1303               	bcf	3,6	;RP1=0, select bank0
  1578  1B43  00A3               	movwf	Lcd_Write_String@a
  1579  1B44  3080               	movlw	128
  1580  1B45  00A4               	movwf	Lcd_Write_String@a+1
  1581  1B46  160A  158A  22C0  160A  158A  	fcall	_Lcd_Write_String
  1582  1B4B                     l111:
  1583  1B4B  0008               	return
  1584  1B4C                     __end_of_titulos_LCD:
  1585                           
  1586                           	psect	text2
  1587  1AC0                     __ptext2:	
  1588 ;; *************** function _Lcd_Write_String *****************
  1589 ;; Defined at:
  1590 ;;		line 110 in file "LCD.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  a               2    3[BANK0 ] PTR unsigned char 
  1593 ;;		 -> STR_3(4), STR_2(4), STR_1(4), data(16), 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  i               2    8[BANK0 ] int 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1605 ;;      Params:         0       2       0       0       0
  1606 ;;      Locals:         0       2       0       0       0
  1607 ;;      Temps:          0       3       0       0       0
  1608 ;;      Totals:         0       7       0       0       0
  1609 ;;Total ram usage:        7 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; Hardware stack levels required when called:    4
  1612 ;; This function calls:
  1613 ;;		_Lcd_Write_Char
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;;		_titulos_LCD
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           
  1621                           ;psect for function _Lcd_Write_String
  1622  1AC0                     _Lcd_Write_String:
  1623  1AC0                     l3244:	
  1624                           ;incstack = 0
  1625                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1626                           
  1627                           
  1628                           ;LCD.c: 111:  int i;;LCD.c: 112:  for(i=0;a[i]!='\0';i++)
  1629  1AC0  1283               	bcf	3,5	;RP0=0, select bank0
  1630  1AC1  1303               	bcf	3,6	;RP1=0, select bank0
  1631  1AC2  01A8               	clrf	Lcd_Write_String@i
  1632  1AC3  01A9               	clrf	Lcd_Write_String@i+1
  1633  1AC4  2AE9               	goto	l3250
  1634  1AC5                     l3246:
  1635                           
  1636                           ;LCD.c: 113:     Lcd_Write_Char(a[i]);
  1637  1AC5  0828               	movf	Lcd_Write_String@i,w
  1638  1AC6  0723               	addwf	Lcd_Write_String@a,w
  1639  1AC7  00A6               	movwf	??_Lcd_Write_String+1
  1640  1AC8  0824               	movf	Lcd_Write_String@a+1,w
  1641  1AC9  00A5               	movwf	??_Lcd_Write_String
  1642  1ACA  1803               	skipnc
  1643  1ACB  0AA5               	incf	??_Lcd_Write_String,f
  1644  1ACC  1FA8               	btfss	Lcd_Write_String@i,7
  1645  1ACD  2ACF               	goto	u5070
  1646  1ACE  03A5               	decf	??_Lcd_Write_String,f
  1647  1ACF                     u5070:
  1648  1ACF  1283               	bcf	3,5	;RP0=0, select bank0
  1649  1AD0  1303               	bcf	3,6	;RP1=0, select bank0
  1650  1AD1  0825               	movf	??_Lcd_Write_String,w
  1651  1AD2  00A7               	movwf	??_Lcd_Write_String+2
  1652  1AD3  0827               	movf	??_Lcd_Write_String+2,w
  1653  1AD4  00FF               	movwf	btemp+1
  1654  1AD5  0826               	movf	??_Lcd_Write_String+1,w
  1655  1AD6  0084               	movwf	4
  1656  1AD7  160A  158A  2000  160A  158A  	fcall	stringtab
  1657  1ADC  160A  158A  2124  160A  158A  	fcall	_Lcd_Write_Char
  1658  1AE1                     l3248:
  1659  1AE1  3001               	movlw	1
  1660  1AE2  1283               	bcf	3,5	;RP0=0, select bank0
  1661  1AE3  1303               	bcf	3,6	;RP1=0, select bank0
  1662  1AE4  07A8               	addwf	Lcd_Write_String@i,f
  1663  1AE5  1803               	skipnc
  1664  1AE6  0AA9               	incf	Lcd_Write_String@i+1,f
  1665  1AE7  3000               	movlw	0
  1666  1AE8  07A9               	addwf	Lcd_Write_String@i+1,f
  1667  1AE9                     l3250:
  1668  1AE9  0828               	movf	Lcd_Write_String@i,w
  1669  1AEA  0723               	addwf	Lcd_Write_String@a,w
  1670  1AEB  00A6               	movwf	??_Lcd_Write_String+1
  1671  1AEC  0824               	movf	Lcd_Write_String@a+1,w
  1672  1AED  00A5               	movwf	??_Lcd_Write_String
  1673  1AEE  1803               	skipnc
  1674  1AEF  0AA5               	incf	??_Lcd_Write_String,f
  1675  1AF0  1FA8               	btfss	Lcd_Write_String@i,7
  1676  1AF1  2AF3               	goto	u5080
  1677  1AF2  03A5               	decf	??_Lcd_Write_String,f
  1678  1AF3                     u5080:
  1679  1AF3  1283               	bcf	3,5	;RP0=0, select bank0
  1680  1AF4  1303               	bcf	3,6	;RP1=0, select bank0
  1681  1AF5  0825               	movf	??_Lcd_Write_String,w
  1682  1AF6  00A7               	movwf	??_Lcd_Write_String+2
  1683  1AF7  0827               	movf	??_Lcd_Write_String+2,w
  1684  1AF8  00FF               	movwf	btemp+1
  1685  1AF9  0826               	movf	??_Lcd_Write_String+1,w
  1686  1AFA  0084               	movwf	4
  1687  1AFB  160A  158A  2000  160A  158A  	fcall	stringtab
  1688  1B00  3A00               	xorlw	0
  1689  1B01  1D03               	skipz
  1690  1B02  2B04               	goto	u5091
  1691  1B03  2B05               	goto	u5090
  1692  1B04                     u5091:
  1693  1B04  2AC5               	goto	l3246
  1694  1B05                     u5090:
  1695  1B05                     l173:
  1696  1B05  0008               	return
  1697  1B06                     __end_of_Lcd_Write_String:
  1698                           
  1699                           	psect	text3
  1700  1924                     __ptext3:	
  1701 ;; *************** function _Lcd_Write_Char *****************
  1702 ;; Defined at:
  1703 ;;		line 101 in file "LCD.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  a               1    wreg     unsigned char 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  a               1    2[BANK0 ] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg, status,2, status,0, pclath, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1717 ;;      Params:         0       0       0       0       0
  1718 ;;      Locals:         0       1       0       0       0
  1719 ;;      Temps:          0       1       0       0       0
  1720 ;;      Totals:         0       2       0       0       0
  1721 ;;Total ram usage:        2 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    3
  1724 ;; This function calls:
  1725 ;;		_Lcd_Port
  1726 ;; This function is called by:
  1727 ;;		_Lcd_Write_String
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           
  1732                           ;psect for function _Lcd_Write_Char
  1733  1924                     _Lcd_Write_Char:
  1734                           
  1735                           ;incstack = 0
  1736                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1737                           ;Lcd_Write_Char@a stored from wreg
  1738  1924  1283               	bcf	3,5	;RP0=0, select bank0
  1739  1925  1303               	bcf	3,6	;RP1=0, select bank0
  1740  1926  00A2               	movwf	Lcd_Write_Char@a
  1741  1927                     l2864:
  1742                           
  1743                           ;LCD.c: 102:    PORTEbits.RE0 = 1;
  1744  1927  1409               	bsf	9,0	;volatile
  1745  1928                     l2866:
  1746                           
  1747                           ;LCD.c: 103:    Lcd_Port(a);
  1748  1928  0822               	movf	Lcd_Write_Char@a,w
  1749  1929  160A  118A  2000  160A  158A  	fcall	_Lcd_Port
  1750  192E                     l2868:
  1751                           
  1752                           ;LCD.c: 104:    PORTEbits.RE2 = 1;
  1753  192E  1283               	bcf	3,5	;RP0=0, select bank0
  1754  192F  1303               	bcf	3,6	;RP1=0, select bank0
  1755  1930  1509               	bsf	9,2	;volatile
  1756  1931                     l2870:
  1757                           
  1758                           ;LCD.c: 105:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1759  1931  3019               	movlw	25
  1760  1932  1283               	bcf	3,5	;RP0=0, select bank0
  1761  1933  1303               	bcf	3,6	;RP1=0, select bank0
  1762  1934  00A1               	movwf	??_Lcd_Write_Char
  1763  1935                     u5637:
  1764  1935  0BA1               	decfsz	??_Lcd_Write_Char,f
  1765  1936  2935               	goto	u5637
  1766  1937  2938               	nop2
  1767  1938                     l2872:
  1768                           
  1769                           ;LCD.c: 106:    PORTEbits.RE2 = 0;
  1770  1938  1283               	bcf	3,5	;RP0=0, select bank0
  1771  1939  1303               	bcf	3,6	;RP1=0, select bank0
  1772  193A  1109               	bcf	9,2	;volatile
  1773  193B                     l167:
  1774  193B  0008               	return
  1775  193C                     __end_of_Lcd_Write_Char:
  1776                           
  1777                           	psect	text4
  1778  1991                     __ptext4:	
  1779 ;; *************** function _Lcd_Set_Cursor *****************
  1780 ;; Defined at:
  1781 ;;		line 88 in file "LCD.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  a               1    wreg     unsigned char 
  1784 ;;  b               1    4[BANK0 ] unsigned char 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  a               1    6[BANK0 ] unsigned char 
  1787 ;;  temp            1    7[BANK0 ] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0, pclath, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1797 ;;      Params:         0       1       0       0       0
  1798 ;;      Locals:         0       2       0       0       0
  1799 ;;      Temps:          0       1       0       0       0
  1800 ;;      Totals:         0       4       0       0       0
  1801 ;;Total ram usage:        4 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    4
  1804 ;; This function calls:
  1805 ;;		_Lcd_Cmd
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;;		_titulos_LCD
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function _Lcd_Set_Cursor
  1814  1991                     _Lcd_Set_Cursor:
  1815                           
  1816                           ;incstack = 0
  1817                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1818                           ;Lcd_Set_Cursor@a stored from wreg
  1819  1991  1283               	bcf	3,5	;RP0=0, select bank0
  1820  1992  1303               	bcf	3,6	;RP1=0, select bank0
  1821  1993  00A6               	movwf	Lcd_Set_Cursor@a
  1822  1994                     l3232:
  1823                           
  1824                           ;LCD.c: 89:  char temp;;LCD.c: 90:  if(a == 1){
  1825  1994  0326               	decf	Lcd_Set_Cursor@a,w
  1826  1995  1D03               	btfss	3,2
  1827  1996  2998               	goto	u5051
  1828  1997  2999               	goto	u5050
  1829  1998                     u5051:
  1830  1998  29A5               	goto	l3238
  1831  1999                     u5050:
  1832  1999                     l3234:
  1833                           
  1834                           ;LCD.c: 91:         temp = 0x80 + b - 1;
  1835  1999  0824               	movf	Lcd_Set_Cursor@b,w
  1836  199A  3E7F               	addlw	127
  1837  199B  00A5               	movwf	??_Lcd_Set_Cursor
  1838  199C  0825               	movf	??_Lcd_Set_Cursor,w
  1839  199D  00A7               	movwf	Lcd_Set_Cursor@temp
  1840  199E                     l3236:
  1841                           
  1842                           ;LCD.c: 92:         Lcd_Cmd(temp);
  1843  199E  0827               	movf	Lcd_Set_Cursor@temp,w
  1844  199F  160A  158A  2157  160A  158A  	fcall	_Lcd_Cmd
  1845                           
  1846                           ;LCD.c: 93:  }
  1847  19A4  29B6               	goto	l164
  1848  19A5                     l3238:
  1849  19A5  3002               	movlw	2
  1850  19A6  0626               	xorwf	Lcd_Set_Cursor@a,w
  1851  19A7  1D03               	btfss	3,2
  1852  19A8  29AA               	goto	u5061
  1853  19A9  29AB               	goto	u5060
  1854  19AA                     u5061:
  1855  19AA  29B6               	goto	l164
  1856  19AB                     u5060:
  1857  19AB                     l3240:
  1858                           
  1859                           ;LCD.c: 95:   temp = 0xC0 + b - 1;
  1860  19AB  0824               	movf	Lcd_Set_Cursor@b,w
  1861  19AC  3EBF               	addlw	191
  1862  19AD  00A5               	movwf	??_Lcd_Set_Cursor
  1863  19AE  0825               	movf	??_Lcd_Set_Cursor,w
  1864  19AF  00A7               	movwf	Lcd_Set_Cursor@temp
  1865  19B0                     l3242:
  1866                           
  1867                           ;LCD.c: 96:   Lcd_Cmd(temp);
  1868  19B0  0827               	movf	Lcd_Set_Cursor@temp,w
  1869  19B1  160A  158A  2157  160A  158A  	fcall	_Lcd_Cmd
  1870  19B6                     l164:
  1871  19B6  0008               	return
  1872  19B7                     __end_of_Lcd_Set_Cursor:
  1873                           
  1874                           	psect	text5
  1875  193C                     __ptext5:	
  1876 ;; *************** function _setup *****************
  1877 ;; Defined at:
  1878 ;;		line 194 in file "pseudocodigo_lab3.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1892 ;;      Params:         0       0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0
  1895 ;;      Totals:         0       0       0       0       0
  1896 ;;Total ram usage:        0 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    3
  1899 ;; This function calls:
  1900 ;;		_initOsc
  1901 ;; This function is called by:
  1902 ;;		_main
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           
  1907                           ;psect for function _setup
  1908  193C                     _setup:
  1909  193C                     l3548:	
  1910                           ;incstack = 0
  1911                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1912                           
  1913                           
  1914                           ;pseudocodigo_lab3.c: 195:     initOsc(0b00000110);
  1915  193C  3006               	movlw	6
  1916  193D  160A  158A  24ED  160A  158A  	fcall	_initOsc
  1917  1942                     l3550:
  1918                           
  1919                           ;pseudocodigo_lab3.c: 196:     ANSEL = 0b00000011;
  1920  1942  3003               	movlw	3
  1921  1943  1683               	bsf	3,5	;RP0=1, select bank3
  1922  1944  1703               	bsf	3,6	;RP1=1, select bank3
  1923  1945  0088               	movwf	8	;volatile
  1924  1946                     l3552:
  1925                           
  1926                           ;pseudocodigo_lab3.c: 197:     ANSELH = 0;
  1927  1946  0189               	clrf	9	;volatile
  1928  1947                     l3554:
  1929                           
  1930                           ;pseudocodigo_lab3.c: 198:     TRISA = 0b00000011;
  1931  1947  3003               	movlw	3
  1932  1948  1683               	bsf	3,5	;RP0=1, select bank1
  1933  1949  1303               	bcf	3,6	;RP1=0, select bank1
  1934  194A  0085               	movwf	5	;volatile
  1935  194B                     l3556:
  1936                           
  1937                           ;pseudocodigo_lab3.c: 199:     TRISB = 0;
  1938  194B  0186               	clrf	6	;volatile
  1939  194C                     l3558:
  1940                           
  1941                           ;pseudocodigo_lab3.c: 200:     TRISC = 0;
  1942  194C  0187               	clrf	7	;volatile
  1943  194D                     l3560:
  1944                           
  1945                           ;pseudocodigo_lab3.c: 201:     TRISD = 0;
  1946  194D  0188               	clrf	8	;volatile
  1947  194E                     l3562:
  1948                           
  1949                           ;pseudocodigo_lab3.c: 202:     TRISE = 0;
  1950  194E  0189               	clrf	9	;volatile
  1951  194F                     l3564:
  1952                           
  1953                           ;pseudocodigo_lab3.c: 203:     PORTA = 0;
  1954  194F  1283               	bcf	3,5	;RP0=0, select bank0
  1955  1950  1303               	bcf	3,6	;RP1=0, select bank0
  1956  1951  0185               	clrf	5	;volatile
  1957  1952                     l3566:
  1958                           
  1959                           ;pseudocodigo_lab3.c: 204:     PORTB = 0;
  1960  1952  0186               	clrf	6	;volatile
  1961  1953                     l3568:
  1962                           
  1963                           ;pseudocodigo_lab3.c: 205:     PORTC = 0;
  1964  1953  0187               	clrf	7	;volatile
  1965  1954                     l3570:
  1966                           
  1967                           ;pseudocodigo_lab3.c: 206:     PORTD = 0;
  1968  1954  0188               	clrf	8	;volatile
  1969  1955                     l3572:
  1970                           
  1971                           ;pseudocodigo_lab3.c: 207:     PORTE = 0;
  1972  1955  0189               	clrf	9	;volatile
  1973  1956                     l117:
  1974  1956  0008               	return
  1975  1957                     __end_of_setup:
  1976                           
  1977                           	psect	text6
  1978  1CED                     __ptext6:	
  1979 ;; *************** function _initOsc *****************
  1980 ;; Defined at:
  1981 ;;		line 3 in file "Oscilador.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  IRCF            1    wreg     unsigned char 
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;  IRCF            1    2[BANK0 ] unsigned char 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1995 ;;      Params:         0       0       0       0       0
  1996 ;;      Locals:         0       1       0       0       0
  1997 ;;      Temps:          0       2       0       0       0
  1998 ;;      Totals:         0       3       0       0       0
  1999 ;;Total ram usage:        3 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; Hardware stack levels required when called:    2
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_setup
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           
  2010                           ;psect for function _initOsc
  2011  1CED                     _initOsc:
  2012                           
  2013                           ;incstack = 0
  2014                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  2015                           ;initOsc@IRCF stored from wreg
  2016  1CED  1283               	bcf	3,5	;RP0=0, select bank0
  2017  1CEE  1303               	bcf	3,6	;RP1=0, select bank0
  2018  1CEF  00A2               	movwf	initOsc@IRCF
  2019  1CF0                     l3514:
  2020                           
  2021                           ;Oscilador.c: 5:     switch(IRCF){
  2022  1CF0  2D27               	goto	l3518
  2023  1CF1                     l126:	
  2024                           ;Oscilador.c: 6:         case 0:
  2025                           
  2026                           
  2027                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  2028  1CF1  1683               	bsf	3,5	;RP0=1, select bank1
  2029  1CF2  1303               	bcf	3,6	;RP1=0, select bank1
  2030  1CF3  130F               	bcf	15,6	;volatile
  2031                           
  2032                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  2033  1CF4  128F               	bcf	15,5	;volatile
  2034                           
  2035                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  2036  1CF5  120F               	bcf	15,4	;volatile
  2037                           
  2038                           ;Oscilador.c: 10:             break;
  2039  1CF6  2D49               	goto	l127
  2040  1CF7                     l128:	
  2041                           ;Oscilador.c: 11:          case 1:
  2042                           
  2043                           
  2044                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  2045  1CF7  1683               	bsf	3,5	;RP0=1, select bank1
  2046  1CF8  1303               	bcf	3,6	;RP1=0, select bank1
  2047  1CF9  130F               	bcf	15,6	;volatile
  2048                           
  2049                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  2050  1CFA  128F               	bcf	15,5	;volatile
  2051                           
  2052                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  2053  1CFB  160F               	bsf	15,4	;volatile
  2054                           
  2055                           ;Oscilador.c: 15:             break;
  2056  1CFC  2D49               	goto	l127
  2057  1CFD                     l129:	
  2058                           ;Oscilador.c: 16:         case 2:
  2059                           
  2060                           
  2061                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  2062  1CFD  1683               	bsf	3,5	;RP0=1, select bank1
  2063  1CFE  1303               	bcf	3,6	;RP1=0, select bank1
  2064  1CFF  130F               	bcf	15,6	;volatile
  2065                           
  2066                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  2067  1D00  168F               	bsf	15,5	;volatile
  2068                           
  2069                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  2070  1D01  120F               	bcf	15,4	;volatile
  2071                           
  2072                           ;Oscilador.c: 20:             break;
  2073  1D02  2D49               	goto	l127
  2074  1D03                     l130:	
  2075                           ;Oscilador.c: 21:         case 3:
  2076                           
  2077                           
  2078                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  2079  1D03  1683               	bsf	3,5	;RP0=1, select bank1
  2080  1D04  1303               	bcf	3,6	;RP1=0, select bank1
  2081  1D05  130F               	bcf	15,6	;volatile
  2082                           
  2083                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  2084  1D06  168F               	bsf	15,5	;volatile
  2085                           
  2086                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  2087  1D07  160F               	bsf	15,4	;volatile
  2088                           
  2089                           ;Oscilador.c: 25:             break;
  2090  1D08  2D49               	goto	l127
  2091  1D09                     l131:	
  2092                           ;Oscilador.c: 26:         case 4:
  2093                           
  2094                           
  2095                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  2096  1D09  1683               	bsf	3,5	;RP0=1, select bank1
  2097  1D0A  1303               	bcf	3,6	;RP1=0, select bank1
  2098  1D0B  170F               	bsf	15,6	;volatile
  2099                           
  2100                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  2101  1D0C  128F               	bcf	15,5	;volatile
  2102                           
  2103                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  2104  1D0D  120F               	bcf	15,4	;volatile
  2105                           
  2106                           ;Oscilador.c: 30:             break;
  2107  1D0E  2D49               	goto	l127
  2108  1D0F                     l132:	
  2109                           ;Oscilador.c: 31:         case 5:
  2110                           
  2111                           
  2112                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  2113  1D0F  1683               	bsf	3,5	;RP0=1, select bank1
  2114  1D10  1303               	bcf	3,6	;RP1=0, select bank1
  2115  1D11  170F               	bsf	15,6	;volatile
  2116                           
  2117                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  2118  1D12  128F               	bcf	15,5	;volatile
  2119                           
  2120                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  2121  1D13  160F               	bsf	15,4	;volatile
  2122                           
  2123                           ;Oscilador.c: 35:             break;
  2124  1D14  2D49               	goto	l127
  2125  1D15                     l133:	
  2126                           ;Oscilador.c: 36:         case 6:
  2127                           
  2128                           
  2129                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  2130  1D15  1683               	bsf	3,5	;RP0=1, select bank1
  2131  1D16  1303               	bcf	3,6	;RP1=0, select bank1
  2132  1D17  170F               	bsf	15,6	;volatile
  2133                           
  2134                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  2135  1D18  168F               	bsf	15,5	;volatile
  2136                           
  2137                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  2138  1D19  120F               	bcf	15,4	;volatile
  2139                           
  2140                           ;Oscilador.c: 40:             break;
  2141  1D1A  2D49               	goto	l127
  2142  1D1B                     l134:	
  2143                           ;Oscilador.c: 41:         case 7:
  2144                           
  2145                           
  2146                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  2147  1D1B  1683               	bsf	3,5	;RP0=1, select bank1
  2148  1D1C  1303               	bcf	3,6	;RP1=0, select bank1
  2149  1D1D  170F               	bsf	15,6	;volatile
  2150                           
  2151                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  2152  1D1E  168F               	bsf	15,5	;volatile
  2153                           
  2154                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  2155  1D1F  160F               	bsf	15,4	;volatile
  2156                           
  2157                           ;Oscilador.c: 45:             break;
  2158  1D20  2D49               	goto	l127
  2159  1D21                     l135:	
  2160                           ;Oscilador.c: 46:         default:
  2161                           
  2162                           
  2163                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  2164  1D21  1683               	bsf	3,5	;RP0=1, select bank1
  2165  1D22  1303               	bcf	3,6	;RP1=0, select bank1
  2166  1D23  170F               	bsf	15,6	;volatile
  2167                           
  2168                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  2169  1D24  168F               	bsf	15,5	;volatile
  2170                           
  2171                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  2172  1D25  120F               	bcf	15,4	;volatile
  2173                           
  2174                           ;Oscilador.c: 50:             break;
  2175  1D26  2D49               	goto	l127
  2176  1D27                     l3518:
  2177  1D27  0822               	movf	initOsc@IRCF,w
  2178  1D28  00A0               	movwf	??_initOsc
  2179  1D29  01A1               	clrf	??_initOsc+1
  2180                           
  2181                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2182                           ; Switch size 1, requested type "simple"
  2183                           ; Number of cases is 1, Range of values is 0 to 0
  2184                           ; switch strategies available:
  2185                           ; Name         Instructions Cycles
  2186                           ; simple_byte            4     3 (average)
  2187                           ; direct_byte           11     8 (fixed)
  2188                           ; jumptable            260     6 (fixed)
  2189                           ;	Chosen strategy is simple_byte
  2190  1D2A  0821               	movf	??_initOsc+1,w
  2191  1D2B  3A00               	xorlw	0	; case 0
  2192  1D2C  1903               	skipnz
  2193  1D2D  2D2F               	goto	l3754
  2194  1D2E  2D21               	goto	l135
  2195  1D2F                     l3754:
  2196                           
  2197                           ; Switch size 1, requested type "simple"
  2198                           ; Number of cases is 8, Range of values is 0 to 7
  2199                           ; switch strategies available:
  2200                           ; Name         Instructions Cycles
  2201                           ; simple_byte           25    13 (average)
  2202                           ; direct_byte           32     8 (fixed)
  2203                           ; jumptable            260     6 (fixed)
  2204                           ;	Chosen strategy is simple_byte
  2205  1D2F  0820               	movf	??_initOsc,w
  2206  1D30  3A00               	xorlw	0	; case 0
  2207  1D31  1903               	skipnz
  2208  1D32  2CF1               	goto	l126
  2209  1D33  3A01               	xorlw	1	; case 1
  2210  1D34  1903               	skipnz
  2211  1D35  2CF7               	goto	l128
  2212  1D36  3A03               	xorlw	3	; case 2
  2213  1D37  1903               	skipnz
  2214  1D38  2CFD               	goto	l129
  2215  1D39  3A01               	xorlw	1	; case 3
  2216  1D3A  1903               	skipnz
  2217  1D3B  2D03               	goto	l130
  2218  1D3C  3A07               	xorlw	7	; case 4
  2219  1D3D  1903               	skipnz
  2220  1D3E  2D09               	goto	l131
  2221  1D3F  3A01               	xorlw	1	; case 5
  2222  1D40  1903               	skipnz
  2223  1D41  2D0F               	goto	l132
  2224  1D42  3A03               	xorlw	3	; case 6
  2225  1D43  1903               	skipnz
  2226  1D44  2D15               	goto	l133
  2227  1D45  3A01               	xorlw	1	; case 7
  2228  1D46  1903               	skipnz
  2229  1D47  2D1B               	goto	l134
  2230  1D48  2D21               	goto	l135
  2231  1D49                     l127:
  2232                           
  2233                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  2234  1D49  140F               	bsf	15,0	;volatile
  2235  1D4A                     l136:
  2236  1D4A  0008               	return
  2237  1D4B                     __end_of_initOsc:
  2238                           
  2239                           	psect	text7
  2240  190D                     __ptext7:	
  2241 ;; *************** function _mapeo *****************
  2242 ;; Defined at:
  2243 ;;		line 179 in file "pseudocodigo_lab3.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;		None
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2257 ;;      Params:         0       0       0       0       0
  2258 ;;      Locals:         0       0       0       0       0
  2259 ;;      Temps:          0       1       0       0       0
  2260 ;;      Totals:         0       1       0       0       0
  2261 ;;Total ram usage:        1 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:    6
  2264 ;; This function calls:
  2265 ;;		_sprintf
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           
  2272                           ;psect for function _mapeo
  2273  190D                     _mapeo:
  2274  190D                     l3612:	
  2275                           ;incstack = 0
  2276                           ; Regs used in _mapeo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2277                           
  2278                           
  2279                           ;pseudocodigo_lab3.c: 180:     sprintf(data, "%1.2f  " "%1.2f", ADC_VALOR_1, ADC_VALOR_2
      +                          );
  2280  190D  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2281  190E  1283               	bcf	3,5	;RP0=0, select bank0
  2282  190F  1303               	bcf	3,6	;RP1=0, select bank0
  2283  1910  00EE               	movwf	??_mapeo
  2284  1911  086E               	movf	??_mapeo,w
  2285  1912  1683               	bsf	3,5	;RP0=1, select bank1
  2286  1913  1303               	bcf	3,6	;RP1=0, select bank1
  2287  1914  00AC               	movwf	sprintf@f^(0+128)
  2288  1915  0862               	movf	(_ADC_VALOR_1+1)^(0+128),w
  2289  1916  00AE               	movwf	((?_sprintf+1)^(0+128)+1)
  2290  1917  0861               	movf	_ADC_VALOR_1^(0+128),w
  2291  1918  00AD               	movwf	(?_sprintf^(0+128)+1)
  2292  1919  0860               	movf	(_ADC_VALOR_2+1)^(0+128),w
  2293  191A  00B0               	movwf	((?_sprintf+1)^(0+128)+3)
  2294  191B  085F               	movf	_ADC_VALOR_2^(0+128),w
  2295  191C  00AF               	movwf	(?_sprintf^(0+128)+3)
  2296  191D  3090               	movlw	(low (_data| (0+256)))& (0+255)
  2297  191E  160A  118A  24B4  160A  158A  	fcall	_sprintf
  2298  1923                     l114:
  2299  1923  0008               	return
  2300  1924                     __end_of_mapeo:
  2301                           
  2302                           	psect	text8
  2303  14B4                     __ptext8:	
  2304 ;; *************** function _sprintf *****************
  2305 ;; Defined at:
  2306 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  sp              1    wreg     PTR unsigned char 
  2309 ;;		 -> data(16), 
  2310 ;;  f               1   12[BANK1 ] PTR const unsigned char 
  2311 ;;		 -> STR_4(13), 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  sp              1   45[BANK1 ] PTR unsigned char 
  2314 ;;		 -> data(16), 
  2315 ;;  fval            4   41[BANK1 ] PTR unsigned char 
  2316 ;;  tmpval          4   35[BANK1 ] struct .
  2317 ;;  val             4   27[BANK1 ] unsigned long 
  2318 ;;  prec            2   46[BANK1 ] int 
  2319 ;;  eexp            2   39[BANK1 ] int 
  2320 ;;  width           2   33[BANK1 ] int 
  2321 ;;  flag            2   31[BANK1 ] unsigned short 
  2322 ;;  cp              2    0        PTR const unsigned char 
  2323 ;;  len             2    0        unsigned int 
  2324 ;;  c               1   48[BANK1 ] unsigned char 
  2325 ;;  ap              1   26[BANK1 ] PTR void [1]
  2326 ;;		 -> ?_sprintf(2), 
  2327 ;;  d               1    0        unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  2   12[BANK1 ] int 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2337 ;;      Params:         0       0       5       0       0
  2338 ;;      Locals:         0       0      27       0       0
  2339 ;;      Temps:          0       0       5       0       0
  2340 ;;      Totals:         0       0      37       0       0
  2341 ;;Total ram usage:       37 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    5
  2344 ;; This function calls:
  2345 ;;		___awdiv
  2346 ;;		___fladd
  2347 ;;		___fleq
  2348 ;;		___flge
  2349 ;;		___flmul
  2350 ;;		___flneg
  2351 ;;		___flsub
  2352 ;;		___fltol
  2353 ;;		___lldiv
  2354 ;;		___llmod
  2355 ;;		___wmul
  2356 ;;		___xxtofl
  2357 ;;		__div_to_l_
  2358 ;;		__tdiv_to_l_
  2359 ;;		_fround
  2360 ;;		_isdigit
  2361 ;;		_scale
  2362 ;; This function is called by:
  2363 ;;		_mapeo
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           
  2368                           ;psect for function _sprintf
  2369  14B4                     _sprintf:
  2370                           
  2371                           ;incstack = 0
  2372                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2373                           ;sprintf@sp stored from wreg
  2374  14B4  1683               	bsf	3,5	;RP0=1, select bank1
  2375  14B5  1303               	bcf	3,6	;RP1=0, select bank1
  2376  14B6  00CD               	movwf	sprintf@sp^(0+128)
  2377  14B7                     l3252:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2380  14B7  30AD               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2381  14B8  00B1               	movwf	??_sprintf^(0+128)
  2382  14B9  0831               	movf	??_sprintf^(0+128),w
  2383  14BA  00BA               	movwf	sprintf@ap^(0+128)
  2384  14BB                     L1:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2387  14BB  120A  118A  2DC8   	goto	l3502
  2388  14BE                     l3254:
  2389                           
  2390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2391  14BE  3025               	movlw	37
  2392  14BF  0650               	xorwf	sprintf@c^(0+128),w
  2393  14C0  1903               	btfsc	3,2
  2394  14C1  2CC3               	goto	u5101
  2395  14C2  2CC4               	goto	u5100
  2396  14C3                     u5101:
  2397  14C3  2CD0               	goto	l3260
  2398  14C4                     u5100:
  2399  14C4                     l3256:
  2400                           
  2401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2402  14C4  0850               	movf	sprintf@c^(0+128),w
  2403  14C5  00B1               	movwf	??_sprintf^(0+128)
  2404  14C6  084D               	movf	sprintf@sp^(0+128),w
  2405  14C7  0084               	movwf	4
  2406  14C8  0831               	movf	??_sprintf^(0+128),w
  2407  14C9  1783               	bsf	3,7	;select IRP bank2
  2408  14CA  0080               	movwf	0
  2409  14CB                     l3258:
  2410  14CB  3001               	movlw	1
  2411  14CC  00B1               	movwf	??_sprintf^(0+128)
  2412  14CD  0831               	movf	??_sprintf^(0+128),w
  2413  14CE  07CD               	addwf	sprintf@sp^(0+128),f
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2416  14CF  2CBB               	goto	L1
  2417  14D0                     l3260:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2420  14D0  01C1               	clrf	sprintf@width^(0+128)
  2421  14D1  01C2               	clrf	(sprintf@width+1)^(0+128)
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2424  14D2  01BF               	clrf	sprintf@flag^(0+128)
  2425  14D3  01C0               	clrf	(sprintf@flag+1)^(0+128)
  2426  14D4                     l3262:
  2427                           
  2428                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2429  14D4  082C               	movf	sprintf@f^(0+128),w
  2430  14D5  0084               	movwf	4
  2431  14D6  160A  158A  200A  160A  118A  	fcall	stringdir
  2432  14DB  160A  158A  20F9  160A  118A  	fcall	_isdigit
  2433  14E0  1C03               	btfss	3,0
  2434  14E1  2CE3               	goto	u5111
  2435  14E2  2CE4               	goto	u5110
  2436  14E3                     u5111:
  2437  14E3  2D32               	goto	l3274
  2438  14E4                     u5110:
  2439  14E4                     l3264:
  2440                           
  2441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2442  14E4  1683               	bsf	3,5	;RP0=1, select bank1
  2443  14E5  1303               	bcf	3,6	;RP1=0, select bank1
  2444  14E6  01C1               	clrf	sprintf@width^(0+128)
  2445  14E7  01C2               	clrf	(sprintf@width+1)^(0+128)
  2446  14E8                     l3266:
  2447                           
  2448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2449  14E8  300A               	movlw	10
  2450  14E9  1283               	bcf	3,5	;RP0=0, select bank0
  2451  14EA  1303               	bcf	3,6	;RP1=0, select bank0
  2452  14EB  00A0               	movwf	___wmul@multiplier
  2453  14EC  3000               	movlw	0
  2454  14ED  00A1               	movwf	___wmul@multiplier+1
  2455  14EE  1683               	bsf	3,5	;RP0=1, select bank1
  2456  14EF  1303               	bcf	3,6	;RP1=0, select bank1
  2457  14F0  0842               	movf	(sprintf@width+1)^(0+128),w
  2458  14F1  1283               	bcf	3,5	;RP0=0, select bank0
  2459  14F2  1303               	bcf	3,6	;RP1=0, select bank0
  2460  14F3  00A3               	movwf	___wmul@multiplicand+1
  2461  14F4  1683               	bsf	3,5	;RP0=1, select bank1
  2462  14F5  1303               	bcf	3,6	;RP1=0, select bank1
  2463  14F6  0841               	movf	sprintf@width^(0+128),w
  2464  14F7  1283               	bcf	3,5	;RP0=0, select bank0
  2465  14F8  1303               	bcf	3,6	;RP1=0, select bank0
  2466  14F9  00A2               	movwf	___wmul@multiplicand
  2467  14FA  160A  158A  21B7  160A  118A  	fcall	___wmul
  2468  14FF  1283               	bcf	3,5	;RP0=0, select bank0
  2469  1500  1303               	bcf	3,6	;RP1=0, select bank0
  2470  1501  0821               	movf	?___wmul+1,w
  2471  1502  1683               	bsf	3,5	;RP0=1, select bank1
  2472  1503  1303               	bcf	3,6	;RP1=0, select bank1
  2473  1504  00C2               	movwf	(sprintf@width+1)^(0+128)
  2474  1505  1283               	bcf	3,5	;RP0=0, select bank0
  2475  1506  1303               	bcf	3,6	;RP1=0, select bank0
  2476  1507  0820               	movf	?___wmul,w
  2477  1508  1683               	bsf	3,5	;RP0=1, select bank1
  2478  1509  1303               	bcf	3,6	;RP1=0, select bank1
  2479  150A  00C1               	movwf	sprintf@width^(0+128)
  2480  150B                     l3268:
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2483  150B  082C               	movf	sprintf@f^(0+128),w
  2484  150C  0084               	movwf	4
  2485  150D  160A  158A  200A  160A  118A  	fcall	stringdir
  2486  1512  3ED0               	addlw	208
  2487  1513  00B1               	movwf	??_sprintf^(0+128)
  2488  1514  30FF               	movlw	255
  2489  1515  1803               	skipnc
  2490  1516  3000               	movlw	0
  2491  1517  00B2               	movwf	(??_sprintf^(0+128)+1)
  2492  1518  0831               	movf	??_sprintf^(0+128),w
  2493  1519  07C1               	addwf	sprintf@width^(0+128),f
  2494  151A  1803               	skipnc
  2495  151B  0AC2               	incf	(sprintf@width+1)^(0+128),f
  2496  151C  0832               	movf	(??_sprintf+1)^(0+128),w
  2497  151D  07C2               	addwf	(sprintf@width+1)^(0+128),f
  2498  151E                     l3270:
  2499  151E  3001               	movlw	1
  2500  151F  00B1               	movwf	??_sprintf^(0+128)
  2501  1520  0831               	movf	??_sprintf^(0+128),w
  2502  1521  07AC               	addwf	sprintf@f^(0+128),f
  2503  1522                     l3272:
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2506  1522  082C               	movf	sprintf@f^(0+128),w
  2507  1523  0084               	movwf	4
  2508  1524  160A  158A  200A  160A  118A  	fcall	stringdir
  2509  1529  160A  158A  20F9  160A  118A  	fcall	_isdigit
  2510  152E  1803               	btfsc	3,0
  2511  152F  2D31               	goto	u5121
  2512  1530  2D32               	goto	u5120
  2513  1531                     u5121:
  2514  1531  2CE8               	goto	l3266
  2515  1532                     u5120:
  2516  1532                     l3274:
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2519  1532  1683               	bsf	3,5	;RP0=1, select bank1
  2520  1533  1303               	bcf	3,6	;RP1=0, select bank1
  2521  1534  082C               	movf	sprintf@f^(0+128),w
  2522  1535  0084               	movwf	4
  2523  1536  160A  158A  200A  160A  118A  	fcall	stringdir
  2524  153B  3A2E               	xorlw	46
  2525  153C  1D03               	skipz
  2526  153D  2D3F               	goto	u5131
  2527  153E  2D40               	goto	u5130
  2528  153F                     u5131:
  2529  153F  2D93               	goto	l3290
  2530  1540                     u5130:
  2531  1540                     l3276:
  2532                           
  2533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2534  1540  1740               	bsf	(sprintf@flag^(0+128)+1),6
  2535  1541                     l3278:
  2536                           
  2537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2538  1541  3001               	movlw	1
  2539  1542  00B1               	movwf	??_sprintf^(0+128)
  2540  1543  0831               	movf	??_sprintf^(0+128),w
  2541  1544  07AC               	addwf	sprintf@f^(0+128),f
  2542  1545                     l3280:
  2543                           
  2544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2545  1545  01CE               	clrf	sprintf@prec^(0+128)
  2546  1546  01CF               	clrf	(sprintf@prec+1)^(0+128)
  2547                           
  2548                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2549  1547  2D82               	goto	l3288
  2550  1548                     l3282:
  2551                           
  2552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2553  1548  300A               	movlw	10
  2554  1549  1283               	bcf	3,5	;RP0=0, select bank0
  2555  154A  1303               	bcf	3,6	;RP1=0, select bank0
  2556  154B  00A0               	movwf	___wmul@multiplier
  2557  154C  3000               	movlw	0
  2558  154D  00A1               	movwf	___wmul@multiplier+1
  2559  154E  1683               	bsf	3,5	;RP0=1, select bank1
  2560  154F  1303               	bcf	3,6	;RP1=0, select bank1
  2561  1550  084F               	movf	(sprintf@prec+1)^(0+128),w
  2562  1551  1283               	bcf	3,5	;RP0=0, select bank0
  2563  1552  1303               	bcf	3,6	;RP1=0, select bank0
  2564  1553  00A3               	movwf	___wmul@multiplicand+1
  2565  1554  1683               	bsf	3,5	;RP0=1, select bank1
  2566  1555  1303               	bcf	3,6	;RP1=0, select bank1
  2567  1556  084E               	movf	sprintf@prec^(0+128),w
  2568  1557  1283               	bcf	3,5	;RP0=0, select bank0
  2569  1558  1303               	bcf	3,6	;RP1=0, select bank0
  2570  1559  00A2               	movwf	___wmul@multiplicand
  2571  155A  160A  158A  21B7  160A  118A  	fcall	___wmul
  2572  155F  1283               	bcf	3,5	;RP0=0, select bank0
  2573  1560  1303               	bcf	3,6	;RP1=0, select bank0
  2574  1561  0821               	movf	?___wmul+1,w
  2575  1562  1683               	bsf	3,5	;RP0=1, select bank1
  2576  1563  1303               	bcf	3,6	;RP1=0, select bank1
  2577  1564  00CF               	movwf	(sprintf@prec+1)^(0+128)
  2578  1565  1283               	bcf	3,5	;RP0=0, select bank0
  2579  1566  1303               	bcf	3,6	;RP1=0, select bank0
  2580  1567  0820               	movf	?___wmul,w
  2581  1568  1683               	bsf	3,5	;RP0=1, select bank1
  2582  1569  1303               	bcf	3,6	;RP1=0, select bank1
  2583  156A  00CE               	movwf	sprintf@prec^(0+128)
  2584  156B                     l3284:
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2587  156B  082C               	movf	sprintf@f^(0+128),w
  2588  156C  0084               	movwf	4
  2589  156D  160A  158A  200A  160A  118A  	fcall	stringdir
  2590  1572  3ED0               	addlw	208
  2591  1573  00B1               	movwf	??_sprintf^(0+128)
  2592  1574  30FF               	movlw	255
  2593  1575  1803               	skipnc
  2594  1576  3000               	movlw	0
  2595  1577  00B2               	movwf	(??_sprintf^(0+128)+1)
  2596  1578  0831               	movf	??_sprintf^(0+128),w
  2597  1579  07CE               	addwf	sprintf@prec^(0+128),f
  2598  157A  1803               	skipnc
  2599  157B  0ACF               	incf	(sprintf@prec+1)^(0+128),f
  2600  157C  0832               	movf	(??_sprintf+1)^(0+128),w
  2601  157D  07CF               	addwf	(sprintf@prec+1)^(0+128),f
  2602  157E                     l3286:
  2603  157E  3001               	movlw	1
  2604  157F  00B1               	movwf	??_sprintf^(0+128)
  2605  1580  0831               	movf	??_sprintf^(0+128),w
  2606  1581  07AC               	addwf	sprintf@f^(0+128),f
  2607  1582                     l3288:
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2610  1582  082C               	movf	sprintf@f^(0+128),w
  2611  1583  0084               	movwf	4
  2612  1584  160A  158A  200A  160A  118A  	fcall	stringdir
  2613  1589  160A  158A  20F9  160A  118A  	fcall	_isdigit
  2614  158E  1803               	btfsc	3,0
  2615  158F  2D91               	goto	u5141
  2616  1590  2D92               	goto	u5140
  2617  1591                     u5141:
  2618  1591  2D48               	goto	l3282
  2619  1592                     u5140:
  2620  1592  2D99               	goto	l3296
  2621  1593                     l3290:
  2622                           
  2623                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2624  1593  01CE               	clrf	sprintf@prec^(0+128)
  2625  1594  01CF               	clrf	(sprintf@prec+1)^(0+128)
  2626  1595                     l3292:
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2629  1595  1640               	bsf	(sprintf@flag^(0+128)+1),4
  2630  1596  2D99               	goto	l3296
  2631  1597                     l360:	
  2632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2633                           
  2634                           
  2635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2636  1597  1540               	bsf	(sprintf@flag^(0+128)+1),2
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2639  1598  2DB5               	goto	l3298
  2640  1599                     l3296:
  2641  1599  3001               	movlw	1
  2642  159A  1683               	bsf	3,5	;RP0=1, select bank1
  2643  159B  1303               	bcf	3,6	;RP1=0, select bank1
  2644  159C  07AC               	addwf	sprintf@f^(0+128),f
  2645  159D  30FF               	movlw	-1
  2646  159E  072C               	addwf	sprintf@f^(0+128),w
  2647  159F  0084               	movwf	4
  2648  15A0  160A  158A  200A  160A  118A  	fcall	stringdir
  2649  15A5  00D0               	movwf	sprintf@c^(0+128)
  2650  15A6  00B1               	movwf	??_sprintf^(0+128)
  2651  15A7  01B2               	clrf	(??_sprintf^(0+128)+1)
  2652                           
  2653                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2654                           ; Switch size 1, requested type "simple"
  2655                           ; Number of cases is 1, Range of values is 0 to 0
  2656                           ; switch strategies available:
  2657                           ; Name         Instructions Cycles
  2658                           ; simple_byte            4     3 (average)
  2659                           ; direct_byte           11     8 (fixed)
  2660                           ; jumptable            260     6 (fixed)
  2661                           ;	Chosen strategy is simple_byte
  2662  15A8  0832               	movf	(??_sprintf+1)^(0+128),w
  2663  15A9  3A00               	xorlw	0	; case 0
  2664  15AA  1903               	skipnz
  2665  15AB  2DAD               	goto	l3756
  2666  15AC  2CBB               	goto	L1
  2667  15AD                     l3756:
  2668                           
  2669                           ; Switch size 1, requested type "simple"
  2670                           ; Number of cases is 2, Range of values is 0 to 102
  2671                           ; switch strategies available:
  2672                           ; Name         Instructions Cycles
  2673                           ; simple_byte            7     4 (average)
  2674                           ; jumptable            260     6 (fixed)
  2675                           ;	Chosen strategy is simple_byte
  2676  15AD  0831               	movf	??_sprintf^(0+128),w
  2677  15AE  3A00               	xorlw	0	; case 0
  2678  15AF  1903               	skipnz
  2679  15B0  2FFD               	goto	L3
  2680  15B1  3A66               	xorlw	102	; case 102
  2681  15B2  1903               	skipnz
  2682  15B3  2D97               	goto	l360
  2683  15B4  2CBB               	goto	L1
  2684  15B5                     l3298:
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2687  15B5  3000               	movlw	0
  2688  15B6  053F               	andwf	sprintf@flag^(0+128),w
  2689  15B7  00B1               	movwf	??_sprintf^(0+128)
  2690  15B8  3007               	movlw	7
  2691  15B9  0540               	andwf	(sprintf@flag+1)^(0+128),w
  2692  15BA  00B2               	movwf	(??_sprintf+1)^(0+128)
  2693  15BB  0831               	movf	??_sprintf^(0+128),w
  2694  15BC  0432               	iorwf	(??_sprintf^(0+128)+1),w
  2695  15BD  1903               	btfsc	3,2
  2696  15BE  2DC0               	goto	u5151
  2697  15BF  2DC3               	goto	u5150
  2698  15C0                     u5151:
  2699  15C0  120A  118A  2D03   	goto	l3456
  2700  15C3                     u5150:
  2701  15C3                     l3300:
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2704  15C3  1E40               	btfss	(sprintf@flag+1)^(0+128),4
  2705  15C4  2DC6               	goto	u5161
  2706  15C5  2DC7               	goto	u5160
  2707  15C6                     u5161:
  2708  15C6  2DCB               	goto	l3304
  2709  15C7                     u5160:
  2710  15C7                     l3302:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2713  15C7  3006               	movlw	6
  2714  15C8  00CE               	movwf	sprintf@prec^(0+128)
  2715  15C9  3000               	movlw	0
  2716  15CA  00CF               	movwf	(sprintf@prec^(0+128)+1)
  2717  15CB                     l3304:
  2718                           
  2719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2720  15CB  083A               	movf	sprintf@ap^(0+128),w
  2721  15CC  0084               	movwf	4
  2722  15CD  1383               	bcf	3,7	;select IRP bank0
  2723  15CE  0800               	movf	0,w
  2724  15CF  00C9               	movwf	sprintf@fval^(0+128)
  2725  15D0  0A84               	incf	4,f
  2726  15D1  0800               	movf	0,w
  2727  15D2  00CA               	movwf	(sprintf@fval+1)^(0+128)
  2728  15D3  0A84               	incf	4,f
  2729  15D4  0800               	movf	0,w
  2730  15D5  00CB               	movwf	(sprintf@fval+2)^(0+128)
  2731  15D6  0A84               	incf	4,f
  2732  15D7  0800               	movf	0,w
  2733  15D8  00CC               	movwf	(sprintf@fval+3)^(0+128)
  2734  15D9                     l3306:
  2735  15D9  3004               	movlw	4
  2736  15DA  00B1               	movwf	??_sprintf^(0+128)
  2737  15DB  0831               	movf	??_sprintf^(0+128),w
  2738  15DC  07BA               	addwf	sprintf@ap^(0+128),f
  2739  15DD                     l3308:
  2740                           
  2741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2742  15DD  084C               	movf	(sprintf@fval+3)^(0+128),w
  2743  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  2744  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  2745  15E0  00A3               	movwf	___flge@ff1+3
  2746  15E1  1683               	bsf	3,5	;RP0=1, select bank1
  2747  15E2  1303               	bcf	3,6	;RP1=0, select bank1
  2748  15E3  084B               	movf	(sprintf@fval+2)^(0+128),w
  2749  15E4  1283               	bcf	3,5	;RP0=0, select bank0
  2750  15E5  1303               	bcf	3,6	;RP1=0, select bank0
  2751  15E6  00A2               	movwf	___flge@ff1+2
  2752  15E7  1683               	bsf	3,5	;RP0=1, select bank1
  2753  15E8  1303               	bcf	3,6	;RP1=0, select bank1
  2754  15E9  084A               	movf	(sprintf@fval+1)^(0+128),w
  2755  15EA  1283               	bcf	3,5	;RP0=0, select bank0
  2756  15EB  1303               	bcf	3,6	;RP1=0, select bank0
  2757  15EC  00A1               	movwf	___flge@ff1+1
  2758  15ED  1683               	bsf	3,5	;RP0=1, select bank1
  2759  15EE  1303               	bcf	3,6	;RP1=0, select bank1
  2760  15EF  0849               	movf	sprintf@fval^(0+128),w
  2761  15F0  1283               	bcf	3,5	;RP0=0, select bank0
  2762  15F1  1303               	bcf	3,6	;RP1=0, select bank0
  2763  15F2  00A0               	movwf	___flge@ff1
  2764  15F3  3000               	movlw	0
  2765  15F4  00A7               	movwf	___flge@ff2+3
  2766  15F5  3000               	movlw	0
  2767  15F6  00A6               	movwf	___flge@ff2+2
  2768  15F7  3000               	movlw	0
  2769  15F8  00A5               	movwf	___flge@ff2+1
  2770  15F9  3000               	movlw	0
  2771  15FA  00A4               	movwf	___flge@ff2
  2772  15FB  160A  118A  2013  160A  118A  	fcall	___flge
  2773  1600  1803               	btfsc	3,0
  2774  1601  2E03               	goto	u5171
  2775  1602  2E04               	goto	u5170
  2776  1603                     u5171:
  2777  1603  2E3D               	goto	l3314
  2778  1604                     u5170:
  2779  1604                     l3310:
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2782  1604  1683               	bsf	3,5	;RP0=1, select bank1
  2783  1605  1303               	bcf	3,6	;RP1=0, select bank1
  2784  1606  084C               	movf	(sprintf@fval+3)^(0+128),w
  2785  1607  1283               	bcf	3,5	;RP0=0, select bank0
  2786  1608  1303               	bcf	3,6	;RP1=0, select bank0
  2787  1609  00A3               	movwf	___flneg@f1+3
  2788  160A  1683               	bsf	3,5	;RP0=1, select bank1
  2789  160B  1303               	bcf	3,6	;RP1=0, select bank1
  2790  160C  084B               	movf	(sprintf@fval+2)^(0+128),w
  2791  160D  1283               	bcf	3,5	;RP0=0, select bank0
  2792  160E  1303               	bcf	3,6	;RP1=0, select bank0
  2793  160F  00A2               	movwf	___flneg@f1+2
  2794  1610  1683               	bsf	3,5	;RP0=1, select bank1
  2795  1611  1303               	bcf	3,6	;RP1=0, select bank1
  2796  1612  084A               	movf	(sprintf@fval+1)^(0+128),w
  2797  1613  1283               	bcf	3,5	;RP0=0, select bank0
  2798  1614  1303               	bcf	3,6	;RP1=0, select bank0
  2799  1615  00A1               	movwf	___flneg@f1+1
  2800  1616  1683               	bsf	3,5	;RP0=1, select bank1
  2801  1617  1303               	bcf	3,6	;RP1=0, select bank1
  2802  1618  0849               	movf	sprintf@fval^(0+128),w
  2803  1619  1283               	bcf	3,5	;RP0=0, select bank0
  2804  161A  1303               	bcf	3,6	;RP1=0, select bank0
  2805  161B  00A0               	movwf	___flneg@f1
  2806  161C  160A  118A  2006  160A  118A  	fcall	___flneg
  2807  1621  1283               	bcf	3,5	;RP0=0, select bank0
  2808  1622  1303               	bcf	3,6	;RP1=0, select bank0
  2809  1623  0823               	movf	?___flneg+3,w
  2810  1624  1683               	bsf	3,5	;RP0=1, select bank1
  2811  1625  1303               	bcf	3,6	;RP1=0, select bank1
  2812  1626  00CC               	movwf	(sprintf@fval+3)^(0+128)
  2813  1627  1283               	bcf	3,5	;RP0=0, select bank0
  2814  1628  1303               	bcf	3,6	;RP1=0, select bank0
  2815  1629  0822               	movf	?___flneg+2,w
  2816  162A  1683               	bsf	3,5	;RP0=1, select bank1
  2817  162B  1303               	bcf	3,6	;RP1=0, select bank1
  2818  162C  00CB               	movwf	(sprintf@fval+2)^(0+128)
  2819  162D  1283               	bcf	3,5	;RP0=0, select bank0
  2820  162E  1303               	bcf	3,6	;RP1=0, select bank0
  2821  162F  0821               	movf	?___flneg+1,w
  2822  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2823  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2824  1632  00CA               	movwf	(sprintf@fval+1)^(0+128)
  2825  1633  1283               	bcf	3,5	;RP0=0, select bank0
  2826  1634  1303               	bcf	3,6	;RP1=0, select bank0
  2827  1635  0820               	movf	?___flneg,w
  2828  1636  1683               	bsf	3,5	;RP0=1, select bank1
  2829  1637  1303               	bcf	3,6	;RP1=0, select bank1
  2830  1638  00C9               	movwf	sprintf@fval^(0+128)
  2831  1639                     l3312:
  2832                           
  2833                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2834  1639  3003               	movlw	3
  2835  163A  04BF               	iorwf	sprintf@flag^(0+128),f
  2836  163B  3000               	movlw	0
  2837  163C  04C0               	iorwf	(sprintf@flag+1)^(0+128),f
  2838  163D                     l3314:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2841  163D  1683               	bsf	3,5	;RP0=1, select bank1
  2842  163E  1303               	bcf	3,6	;RP1=0, select bank1
  2843  163F  01C7               	clrf	sprintf@eexp^(0+128)
  2844  1640  01C8               	clrf	(sprintf@eexp+1)^(0+128)
  2845  1641                     l3316:
  2846                           
  2847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2848  1641  084C               	movf	(sprintf@fval+3)^(0+128),w
  2849  1642  1283               	bcf	3,5	;RP0=0, select bank0
  2850  1643  1303               	bcf	3,6	;RP1=0, select bank0
  2851  1644  00A3               	movwf	___fleq@ff1+3
  2852  1645  1683               	bsf	3,5	;RP0=1, select bank1
  2853  1646  1303               	bcf	3,6	;RP1=0, select bank1
  2854  1647  084B               	movf	(sprintf@fval+2)^(0+128),w
  2855  1648  1283               	bcf	3,5	;RP0=0, select bank0
  2856  1649  1303               	bcf	3,6	;RP1=0, select bank0
  2857  164A  00A2               	movwf	___fleq@ff1+2
  2858  164B  1683               	bsf	3,5	;RP0=1, select bank1
  2859  164C  1303               	bcf	3,6	;RP1=0, select bank1
  2860  164D  084A               	movf	(sprintf@fval+1)^(0+128),w
  2861  164E  1283               	bcf	3,5	;RP0=0, select bank0
  2862  164F  1303               	bcf	3,6	;RP1=0, select bank0
  2863  1650  00A1               	movwf	___fleq@ff1+1
  2864  1651  1683               	bsf	3,5	;RP0=1, select bank1
  2865  1652  1303               	bcf	3,6	;RP1=0, select bank1
  2866  1653  0849               	movf	sprintf@fval^(0+128),w
  2867  1654  1283               	bcf	3,5	;RP0=0, select bank0
  2868  1655  1303               	bcf	3,6	;RP1=0, select bank0
  2869  1656  00A0               	movwf	___fleq@ff1
  2870  1657  3000               	movlw	0
  2871  1658  00A7               	movwf	___fleq@ff2+3
  2872  1659  3000               	movlw	0
  2873  165A  00A6               	movwf	___fleq@ff2+2
  2874  165B  3000               	movlw	0
  2875  165C  00A5               	movwf	___fleq@ff2+1
  2876  165D  3000               	movlw	0
  2877  165E  00A4               	movwf	___fleq@ff2
  2878  165F  160A  158A  239C  160A  118A  	fcall	___fleq
  2879  1664  1803               	btfsc	3,0
  2880  1665  2E67               	goto	u5181
  2881  1666  2E68               	goto	u5180
  2882  1667                     u5181:
  2883  1667  2F94               	goto	l3342
  2884  1668                     u5180:
  2885  1668                     l3318:
  2886                           
  2887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2888  1668  1003               	clrc
  2889  1669  1683               	bsf	3,5	;RP0=1, select bank1
  2890  166A  1303               	bcf	3,6	;RP1=0, select bank1
  2891  166B  0D4B               	rlf	(sprintf@fval+2)^(0+128),w
  2892  166C  0D4C               	rlf	(sprintf@fval+3)^(0+128),w
  2893  166D  3E82               	addlw	130
  2894  166E  00C7               	movwf	sprintf@eexp^(0+128)
  2895  166F  30FF               	movlw	255
  2896  1670  1803               	skipnc
  2897  1671  3000               	movlw	0
  2898  1672  00C8               	movwf	(sprintf@eexp^(0+128)+1)
  2899  1673                     l3320:
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2902  1673  30FF               	movlw	255
  2903  1674  07C7               	addwf	sprintf@eexp^(0+128),f
  2904  1675  1803               	skipnc
  2905  1676  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  2906  1677  30FF               	movlw	255
  2907  1678  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  2908  1679                     l3322:
  2909                           
  2910                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2911  1679  3003               	movlw	3
  2912  167A  1283               	bcf	3,5	;RP0=0, select bank0
  2913  167B  1303               	bcf	3,6	;RP1=0, select bank0
  2914  167C  00A0               	movwf	___wmul@multiplier
  2915  167D  3000               	movlw	0
  2916  167E  00A1               	movwf	___wmul@multiplier+1
  2917  167F  1683               	bsf	3,5	;RP0=1, select bank1
  2918  1680  1303               	bcf	3,6	;RP1=0, select bank1
  2919  1681  0848               	movf	(sprintf@eexp+1)^(0+128),w
  2920  1682  1283               	bcf	3,5	;RP0=0, select bank0
  2921  1683  1303               	bcf	3,6	;RP1=0, select bank0
  2922  1684  00A3               	movwf	___wmul@multiplicand+1
  2923  1685  1683               	bsf	3,5	;RP0=1, select bank1
  2924  1686  1303               	bcf	3,6	;RP1=0, select bank1
  2925  1687  0847               	movf	sprintf@eexp^(0+128),w
  2926  1688  1283               	bcf	3,5	;RP0=0, select bank0
  2927  1689  1303               	bcf	3,6	;RP1=0, select bank0
  2928  168A  00A2               	movwf	___wmul@multiplicand
  2929  168B  160A  158A  21B7  160A  118A  	fcall	___wmul
  2930  1690  1283               	bcf	3,5	;RP0=0, select bank0
  2931  1691  1303               	bcf	3,6	;RP1=0, select bank0
  2932  1692  0821               	movf	?___wmul+1,w
  2933  1693  1683               	bsf	3,5	;RP0=1, select bank1
  2934  1694  1303               	bcf	3,6	;RP1=0, select bank1
  2935  1695  00C8               	movwf	(sprintf@eexp+1)^(0+128)
  2936  1696  1283               	bcf	3,5	;RP0=0, select bank0
  2937  1697  1303               	bcf	3,6	;RP1=0, select bank0
  2938  1698  0820               	movf	?___wmul,w
  2939  1699  1683               	bsf	3,5	;RP0=1, select bank1
  2940  169A  1303               	bcf	3,6	;RP1=0, select bank1
  2941  169B  00C7               	movwf	sprintf@eexp^(0+128)
  2942  169C                     l3324:
  2943                           
  2944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2945  169C  300A               	movlw	10
  2946  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2947  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2948  169F  00A7               	movwf	___awdiv@divisor
  2949  16A0  3000               	movlw	0
  2950  16A1  00A8               	movwf	___awdiv@divisor+1
  2951  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2952  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2953  16A4  0848               	movf	(sprintf@eexp+1)^(0+128),w
  2954  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2955  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2956  16A7  00AA               	movwf	___awdiv@dividend+1
  2957  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2958  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2959  16AA  0847               	movf	sprintf@eexp^(0+128),w
  2960  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2961  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2962  16AD  00A9               	movwf	___awdiv@dividend
  2963  16AE  160A  158A  25B3  160A  118A  	fcall	___awdiv
  2964  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2965  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2966  16B5  0828               	movf	?___awdiv+1,w
  2967  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2968  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2969  16B8  00C8               	movwf	(sprintf@eexp+1)^(0+128)
  2970  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2971  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2972  16BB  0827               	movf	?___awdiv,w
  2973  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2974  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2975  16BE  00C7               	movwf	sprintf@eexp^(0+128)
  2976  16BF                     l3326:
  2977                           
  2978                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2979  16BF  1FC8               	btfss	(sprintf@eexp+1)^(0+128),7
  2980  16C0  2EC2               	goto	u5191
  2981  16C1  2EC3               	goto	u5190
  2982  16C2                     u5191:
  2983  16C2  2EC9               	goto	l3330
  2984  16C3                     u5190:
  2985  16C3                     l3328:
  2986                           
  2987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2988  16C3  30FF               	movlw	255
  2989  16C4  07C7               	addwf	sprintf@eexp^(0+128),f
  2990  16C5  1803               	skipnc
  2991  16C6  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  2992  16C7  30FF               	movlw	255
  2993  16C8  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  2994  16C9                     l3330:
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2997  16C9  0347               	decf	sprintf@eexp^(0+128),w
  2998  16CA  3AFF               	xorlw	255
  2999  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  3000  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  3001  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  3002  16D2  084D               	movf	?_scale+3,w
  3003  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  3004  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  3005  16D5  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  3006  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  3007  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  3008  16D8  084C               	movf	?_scale+2,w
  3009  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  3010  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  3011  16DB  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  3012  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  3013  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  3014  16DE  084B               	movf	?_scale+1,w
  3015  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  3016  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  3017  16E1  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  3018  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  3019  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  3020  16E4  084A               	movf	?_scale,w
  3021  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  3022  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  3023  16E7  00C3               	movwf	sprintf@tmpval^(0+128)
  3024  16E8                     l3332:
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  3027  16E8  084C               	movf	(sprintf@fval+3)^(0+128),w
  3028  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  3029  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  3030  16EB  00B3               	movwf	___flmul@b+3
  3031  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  3032  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  3033  16EE  084B               	movf	(sprintf@fval+2)^(0+128),w
  3034  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  3035  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  3036  16F1  00B2               	movwf	___flmul@b+2
  3037  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  3038  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  3039  16F4  084A               	movf	(sprintf@fval+1)^(0+128),w
  3040  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  3041  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  3042  16F7  00B1               	movwf	___flmul@b+1
  3043  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  3044  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  3045  16FA  0849               	movf	sprintf@fval^(0+128),w
  3046  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  3047  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  3048  16FD  00B0               	movwf	___flmul@b
  3049  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  3050  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  3051  1700  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  3052  1701  1283               	bcf	3,5	;RP0=0, select bank0
  3053  1702  1303               	bcf	3,6	;RP1=0, select bank0
  3054  1703  00B7               	movwf	___flmul@a+3
  3055  1704  1683               	bsf	3,5	;RP0=1, select bank1
  3056  1705  1303               	bcf	3,6	;RP1=0, select bank1
  3057  1706  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  3058  1707  1283               	bcf	3,5	;RP0=0, select bank0
  3059  1708  1303               	bcf	3,6	;RP1=0, select bank0
  3060  1709  00B6               	movwf	___flmul@a+2
  3061  170A  1683               	bsf	3,5	;RP0=1, select bank1
  3062  170B  1303               	bcf	3,6	;RP1=0, select bank1
  3063  170C  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  3064  170D  1283               	bcf	3,5	;RP0=0, select bank0
  3065  170E  1303               	bcf	3,6	;RP1=0, select bank0
  3066  170F  00B5               	movwf	___flmul@a+1
  3067  1710  1683               	bsf	3,5	;RP0=1, select bank1
  3068  1711  1303               	bcf	3,6	;RP1=0, select bank1
  3069  1712  0843               	movf	sprintf@tmpval^(0+128),w
  3070  1713  1283               	bcf	3,5	;RP0=0, select bank0
  3071  1714  1303               	bcf	3,6	;RP1=0, select bank0
  3072  1715  00B4               	movwf	___flmul@a
  3073  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  3074  171B  1283               	bcf	3,5	;RP0=0, select bank0
  3075  171C  1303               	bcf	3,6	;RP1=0, select bank0
  3076  171D  0833               	movf	?___flmul+3,w
  3077  171E  1683               	bsf	3,5	;RP0=1, select bank1
  3078  171F  1303               	bcf	3,6	;RP1=0, select bank1
  3079  1720  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  3080  1721  1283               	bcf	3,5	;RP0=0, select bank0
  3081  1722  1303               	bcf	3,6	;RP1=0, select bank0
  3082  1723  0832               	movf	?___flmul+2,w
  3083  1724  1683               	bsf	3,5	;RP0=1, select bank1
  3084  1725  1303               	bcf	3,6	;RP1=0, select bank1
  3085  1726  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  3086  1727  1283               	bcf	3,5	;RP0=0, select bank0
  3087  1728  1303               	bcf	3,6	;RP1=0, select bank0
  3088  1729  0831               	movf	?___flmul+1,w
  3089  172A  1683               	bsf	3,5	;RP0=1, select bank1
  3090  172B  1303               	bcf	3,6	;RP1=0, select bank1
  3091  172C  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  3092  172D  1283               	bcf	3,5	;RP0=0, select bank0
  3093  172E  1303               	bcf	3,6	;RP1=0, select bank0
  3094  172F  0830               	movf	?___flmul,w
  3095  1730  1683               	bsf	3,5	;RP0=1, select bank1
  3096  1731  1303               	bcf	3,6	;RP1=0, select bank1
  3097  1732  00C3               	movwf	sprintf@tmpval^(0+128)
  3098  1733                     l3334:
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  3101  1733  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  3102  1734  1283               	bcf	3,5	;RP0=0, select bank0
  3103  1735  1303               	bcf	3,6	;RP1=0, select bank0
  3104  1736  00A3               	movwf	___flge@ff1+3
  3105  1737  1683               	bsf	3,5	;RP0=1, select bank1
  3106  1738  1303               	bcf	3,6	;RP1=0, select bank1
  3107  1739  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  3108  173A  1283               	bcf	3,5	;RP0=0, select bank0
  3109  173B  1303               	bcf	3,6	;RP1=0, select bank0
  3110  173C  00A2               	movwf	___flge@ff1+2
  3111  173D  1683               	bsf	3,5	;RP0=1, select bank1
  3112  173E  1303               	bcf	3,6	;RP1=0, select bank1
  3113  173F  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  3114  1740  1283               	bcf	3,5	;RP0=0, select bank0
  3115  1741  1303               	bcf	3,6	;RP1=0, select bank0
  3116  1742  00A1               	movwf	___flge@ff1+1
  3117  1743  1683               	bsf	3,5	;RP0=1, select bank1
  3118  1744  1303               	bcf	3,6	;RP1=0, select bank1
  3119  1745  0843               	movf	sprintf@tmpval^(0+128),w
  3120  1746  1283               	bcf	3,5	;RP0=0, select bank0
  3121  1747  1303               	bcf	3,6	;RP1=0, select bank0
  3122  1748  00A0               	movwf	___flge@ff1
  3123  1749  303F               	movlw	63
  3124  174A  00A7               	movwf	___flge@ff2+3
  3125  174B  3080               	movlw	128
  3126  174C  00A6               	movwf	___flge@ff2+2
  3127  174D  3000               	movlw	0
  3128  174E  00A5               	movwf	___flge@ff2+1
  3129  174F  3000               	movlw	0
  3130  1750  00A4               	movwf	___flge@ff2
  3131  1751  160A  118A  2013  160A  118A  	fcall	___flge
  3132  1756  1803               	btfsc	3,0
  3133  1757  2F59               	goto	u5201
  3134  1758  2F5A               	goto	u5200
  3135  1759                     u5201:
  3136  1759  2F63               	goto	l3338
  3137  175A                     u5200:
  3138  175A                     l3336:
  3139                           
  3140                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3141  175A  30FF               	movlw	255
  3142  175B  1683               	bsf	3,5	;RP0=1, select bank1
  3143  175C  1303               	bcf	3,6	;RP1=0, select bank1
  3144  175D  07C7               	addwf	sprintf@eexp^(0+128),f
  3145  175E  1803               	skipnc
  3146  175F  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  3147  1760  30FF               	movlw	255
  3148  1761  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  3149  1762  2F94               	goto	l3342
  3150  1763                     l3338:
  3151  1763  1683               	bsf	3,5	;RP0=1, select bank1
  3152  1764  1303               	bcf	3,6	;RP1=0, select bank1
  3153  1765  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  3154  1766  1283               	bcf	3,5	;RP0=0, select bank0
  3155  1767  1303               	bcf	3,6	;RP1=0, select bank0
  3156  1768  00A3               	movwf	___flge@ff1+3
  3157  1769  1683               	bsf	3,5	;RP0=1, select bank1
  3158  176A  1303               	bcf	3,6	;RP1=0, select bank1
  3159  176B  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  3160  176C  1283               	bcf	3,5	;RP0=0, select bank0
  3161  176D  1303               	bcf	3,6	;RP1=0, select bank0
  3162  176E  00A2               	movwf	___flge@ff1+2
  3163  176F  1683               	bsf	3,5	;RP0=1, select bank1
  3164  1770  1303               	bcf	3,6	;RP1=0, select bank1
  3165  1771  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  3166  1772  1283               	bcf	3,5	;RP0=0, select bank0
  3167  1773  1303               	bcf	3,6	;RP1=0, select bank0
  3168  1774  00A1               	movwf	___flge@ff1+1
  3169  1775  1683               	bsf	3,5	;RP0=1, select bank1
  3170  1776  1303               	bcf	3,6	;RP1=0, select bank1
  3171  1777  0843               	movf	sprintf@tmpval^(0+128),w
  3172  1778  1283               	bcf	3,5	;RP0=0, select bank0
  3173  1779  1303               	bcf	3,6	;RP1=0, select bank0
  3174  177A  00A0               	movwf	___flge@ff1
  3175  177B  3041               	movlw	65
  3176  177C  00A7               	movwf	___flge@ff2+3
  3177  177D  3020               	movlw	32
  3178  177E  00A6               	movwf	___flge@ff2+2
  3179  177F  3000               	movlw	0
  3180  1780  00A5               	movwf	___flge@ff2+1
  3181  1781  3000               	movlw	0
  3182  1782  00A4               	movwf	___flge@ff2
  3183  1783  160A  118A  2013  160A  118A  	fcall	___flge
  3184  1788  1C03               	btfss	3,0
  3185  1789  2F8B               	goto	u5211
  3186  178A  2F8C               	goto	u5210
  3187  178B                     u5211:
  3188  178B  2F94               	goto	l3342
  3189  178C                     u5210:
  3190  178C                     l3340:
  3191                           
  3192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3193  178C  3001               	movlw	1
  3194  178D  1683               	bsf	3,5	;RP0=1, select bank1
  3195  178E  1303               	bcf	3,6	;RP1=0, select bank1
  3196  178F  07C7               	addwf	sprintf@eexp^(0+128),f
  3197  1790  1803               	skipnc
  3198  1791  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  3199  1792  3000               	movlw	0
  3200  1793  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  3201  1794                     l3342:
  3202                           
  3203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3204  1794  1683               	bsf	3,5	;RP0=1, select bank1
  3205  1795  1303               	bcf	3,6	;RP1=0, select bank1
  3206  1796  084F               	movf	(sprintf@prec+1)^(0+128),w
  3207  1797  3A80               	xorlw	128
  3208  1798  00FF               	movwf	btemp+1
  3209  1799  3080               	movlw	128
  3210  179A  027F               	subwf	btemp+1,w
  3211  179B  1D03               	skipz
  3212  179C  2F9F               	goto	u5225
  3213  179D  300D               	movlw	13
  3214  179E  024E               	subwf	sprintf@prec^(0+128),w
  3215  179F                     u5225:
  3216  179F  1803               	skipnc
  3217  17A0  2FA2               	goto	u5221
  3218  17A1  2FA3               	goto	u5220
  3219  17A2                     u5221:
  3220  17A2  2FEA               	goto	l3346
  3221  17A3                     u5220:
  3222  17A3                     l3344:
  3223                           
  3224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3225  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  3226  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  3227  17A5  084E               	movf	sprintf@prec^(0+128),w
  3228  17A6  120A  118A  25E1  160A  118A  	fcall	_fround
  3229  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  3230  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  3231  17AD  084D               	movf	?_fround+3,w
  3232  17AE  00E1               	movwf	___fladd@b+3
  3233  17AF  084C               	movf	?_fround+2,w
  3234  17B0  00E0               	movwf	___fladd@b+2
  3235  17B1  084B               	movf	?_fround+1,w
  3236  17B2  00DF               	movwf	___fladd@b+1
  3237  17B3  084A               	movf	?_fround,w
  3238  17B4  00DE               	movwf	___fladd@b
  3239  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  3240  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  3241  17B7  084C               	movf	(sprintf@fval+3)^(0+128),w
  3242  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  3243  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  3244  17BA  00E5               	movwf	___fladd@a+3
  3245  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  3246  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  3247  17BD  084B               	movf	(sprintf@fval+2)^(0+128),w
  3248  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  3249  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  3250  17C0  00E4               	movwf	___fladd@a+2
  3251  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  3252  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  3253  17C3  084A               	movf	(sprintf@fval+1)^(0+128),w
  3254  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  3255  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  3256  17C6  00E3               	movwf	___fladd@a+1
  3257  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  3258  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  3259  17C9  0849               	movf	sprintf@fval^(0+128),w
  3260  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  3261  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  3262  17CC  00E2               	movwf	___fladd@a
  3263  17CD  160A  118A  2174  160A  118A  	fcall	___fladd
  3264  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  3265  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  3266  17D4  0861               	movf	?___fladd+3,w
  3267  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  3268  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  3269  17D7  00CC               	movwf	(sprintf@fval+3)^(0+128)
  3270  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  3271  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  3272  17DA  0860               	movf	?___fladd+2,w
  3273  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  3274  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  3275  17DD  00CB               	movwf	(sprintf@fval+2)^(0+128)
  3276  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  3277  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  3278  17E0  085F               	movf	?___fladd+1,w
  3279  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  3280  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  3281  17E3  00CA               	movwf	(sprintf@fval+1)^(0+128)
  3282  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  3283  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  3284  17E6  085E               	movf	?___fladd,w
  3285  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  3286  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  3287  17E9  00C9               	movwf	sprintf@fval^(0+128)
  3288  17EA                     l3346:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3291  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  3292  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  3293  17EC  0848               	movf	(sprintf@eexp+1)^(0+128),w
  3294  17ED  3A80               	xorlw	128
  3295  17EE  00FF               	movwf	btemp+1
  3296  17EF  3080               	movlw	128
  3297  17F0  027F               	subwf	btemp+1,w
  3298  17F1  1D03               	skipz
  3299  17F2  2FF5               	goto	u5235
  3300  17F3  300A               	movlw	10
  3301  17F4  0247               	subwf	sprintf@eexp^(0+128),w
  3302  17F5                     u5235:
  3303  17F5  1803               	skipnc
  3304  17F6  2FFA               	goto	u5231
  3305  17F7  120A  118A  282D   	goto	u5230
  3306  17FA                     u5231:
  3307  17FA  120A  118A  288C   	goto	l3354
  3308  17FD                     L3:
  3309  17FD                     L2:
  3310  17FD  120A  118A  2DDC   	ljmp	l3504
  3311                           
  3312                           	psect	text9
  3313  0C9D                     __ptext9:	
  3314 ;; *************** function _scale *****************
  3315 ;; Defined at:
  3316 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  scl             1    wreg     char 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  scl             1   60[BANK0 ] char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  4   42[BANK0 ] char 
  3323 ;; Registers used:
  3324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3330 ;;      Params:         0       4       0       0       0
  3331 ;;      Locals:         0       5       0       0       0
  3332 ;;      Temps:          0      10       0       0       0
  3333 ;;      Totals:         0      19       0       0       0
  3334 ;;Total ram usage:       19 bytes
  3335 ;; Hardware stack levels used:    1
  3336 ;; Hardware stack levels required when called:    4
  3337 ;; This function calls:
  3338 ;;		___awdiv
  3339 ;;		___awmod
  3340 ;;		___flmul
  3341 ;; This function is called by:
  3342 ;;		_sprintf
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           
  3347                           ;psect for function _scale
  3348  0C9D                     _scale:
  3349                           
  3350                           ;incstack = 0
  3351                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3352                           ;scale@scl stored from wreg
  3353  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3355  0C9F  00DC               	movwf	scale@scl
  3356  0CA0                     l2892:
  3357                           
  3358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3359  0CA0  1FDC               	btfss	scale@scl,7
  3360  0CA1  2CA3               	goto	u4081
  3361  0CA2  2CA4               	goto	u4080
  3362  0CA3                     u4081:
  3363  0CA3  2E53               	goto	l2914
  3364  0CA4                     u4080:
  3365  0CA4                     l2894:
  3366                           
  3367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3368  0CA4  09DC               	comf	scale@scl,f
  3369  0CA5  0ADC               	incf	scale@scl,f
  3370  0CA6                     l2896:
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3373  0CA6  085C               	movf	scale@scl,w
  3374  0CA7  3A80               	xorlw	128
  3375  0CA8  3E12               	addlw	-238
  3376  0CA9  1C03               	skipc
  3377  0CAA  2CAC               	goto	u4091
  3378  0CAB  2CAD               	goto	u4090
  3379  0CAC                     u4091:
  3380  0CAC  2D97               	goto	l2904
  3381  0CAD                     u4090:
  3382  0CAD                     l2898:
  3383                           
  3384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3385  0CAD  300A               	movlw	10
  3386  0CAE  00A7               	movwf	___awdiv@divisor
  3387  0CAF  3000               	movlw	0
  3388  0CB0  00A8               	movwf	___awdiv@divisor+1
  3389  0CB1  085C               	movf	scale@scl,w
  3390  0CB2  00A2               	movwf	___awmod@dividend
  3391  0CB3  01A3               	clrf	___awmod@dividend+1
  3392  0CB4  1BA2               	btfsc	___awmod@dividend,7
  3393  0CB5  03A3               	decf	___awmod@dividend+1,f
  3394  0CB6  3064               	movlw	100
  3395  0CB7  00A0               	movwf	___awmod@divisor
  3396  0CB8  3000               	movlw	0
  3397  0CB9  00A1               	movwf	___awmod@divisor+1
  3398  0CBA  160A  158A  2492  120A  158A  	fcall	___awmod
  3399  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  3400  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  3401  0CC1  0821               	movf	?___awmod+1,w
  3402  0CC2  00AA               	movwf	___awdiv@dividend+1
  3403  0CC3  0820               	movf	?___awmod,w
  3404  0CC4  00A9               	movwf	___awdiv@dividend
  3405  0CC5  160A  158A  25B3  120A  158A  	fcall	___awdiv
  3406  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3408  0CCC  0827               	movf	?___awdiv,w
  3409  0CCD  00CE               	movwf	??_scale
  3410  0CCE  3001               	movlw	1
  3411  0CCF                     u4105:
  3412  0CCF  1003               	clrc
  3413  0CD0  0DCE               	rlf	??_scale,f
  3414  0CD1  3EFF               	addlw	-1
  3415  0CD2  1D03               	skipz
  3416  0CD3  2CCF               	goto	u4105
  3417  0CD4  1003               	clrc
  3418  0CD5  0D4E               	rlf	??_scale,w
  3419  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3420  0CD7  0084               	movwf	4
  3421  0CD8  160A  158A  200A  120A  158A  	fcall	stringdir
  3422  0CDD  00CF               	movwf	??_scale+1
  3423  0CDE  160A  158A  200A  120A  158A  	fcall	stringdir
  3424  0CE3  00D0               	movwf	??_scale+2
  3425  0CE4  160A  158A  200A  120A  158A  	fcall	stringdir
  3426  0CE9  00D1               	movwf	??_scale+3
  3427  0CEA  160A  158A  200A  120A  158A  	fcall	stringdir
  3428  0CEF  00D2               	movwf	??_scale+4
  3429  0CF0  0852               	movf	??_scale+4,w
  3430  0CF1  00B3               	movwf	___flmul@b+3
  3431  0CF2  0851               	movf	??_scale+3,w
  3432  0CF3  00B2               	movwf	___flmul@b+2
  3433  0CF4  0850               	movf	??_scale+2,w
  3434  0CF5  00B1               	movwf	___flmul@b+1
  3435  0CF6  084F               	movf	??_scale+1,w
  3436  0CF7  00B0               	movwf	___flmul@b
  3437  0CF8  3064               	movlw	100
  3438  0CF9  00A7               	movwf	___awdiv@divisor
  3439  0CFA  3000               	movlw	0
  3440  0CFB  00A8               	movwf	___awdiv@divisor+1
  3441  0CFC  085C               	movf	scale@scl,w
  3442  0CFD  00A9               	movwf	___awdiv@dividend
  3443  0CFE  01AA               	clrf	___awdiv@dividend+1
  3444  0CFF  1BA9               	btfsc	___awdiv@dividend,7
  3445  0D00  03AA               	decf	___awdiv@dividend+1,f
  3446  0D01  160A  158A  25B3  120A  158A  	fcall	___awdiv
  3447  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3448  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3449  0D08  0827               	movf	?___awdiv,w
  3450  0D09  00D3               	movwf	??_scale+5
  3451  0D0A  3001               	movlw	1
  3452  0D0B                     u4115:
  3453  0D0B  1003               	clrc
  3454  0D0C  0DD3               	rlf	??_scale+5,f
  3455  0D0D  3EFF               	addlw	-1
  3456  0D0E  1D03               	skipz
  3457  0D0F  2D0B               	goto	u4115
  3458  0D10  1003               	clrc
  3459  0D11  0D53               	rlf	??_scale+5,w
  3460  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3461  0D13  0084               	movwf	4
  3462  0D14  160A  158A  200A  120A  158A  	fcall	stringdir
  3463  0D19  00D4               	movwf	??_scale+6
  3464  0D1A  160A  158A  200A  120A  158A  	fcall	stringdir
  3465  0D1F  00D5               	movwf	??_scale+7
  3466  0D20  160A  158A  200A  120A  158A  	fcall	stringdir
  3467  0D25  00D6               	movwf	??_scale+8
  3468  0D26  160A  158A  200A  120A  158A  	fcall	stringdir
  3469  0D2B  00D7               	movwf	??_scale+9
  3470  0D2C  0857               	movf	??_scale+9,w
  3471  0D2D  00B7               	movwf	___flmul@a+3
  3472  0D2E  0856               	movf	??_scale+8,w
  3473  0D2F  00B6               	movwf	___flmul@a+2
  3474  0D30  0855               	movf	??_scale+7,w
  3475  0D31  00B5               	movwf	___flmul@a+1
  3476  0D32  0854               	movf	??_scale+6,w
  3477  0D33  00B4               	movwf	___flmul@a
  3478  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  3479  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3480  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3481  0D3B  0833               	movf	?___flmul+3,w
  3482  0D3C  00DB               	movwf	_scale$1069+3
  3483  0D3D  0832               	movf	?___flmul+2,w
  3484  0D3E  00DA               	movwf	_scale$1069+2
  3485  0D3F  0831               	movf	?___flmul+1,w
  3486  0D40  00D9               	movwf	_scale$1069+1
  3487  0D41  0830               	movf	?___flmul,w
  3488  0D42  00D8               	movwf	_scale$1069
  3489                           
  3490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3491  0D43  300A               	movlw	10
  3492  0D44  00A0               	movwf	___awmod@divisor
  3493  0D45  3000               	movlw	0
  3494  0D46  00A1               	movwf	___awmod@divisor+1
  3495  0D47  085C               	movf	scale@scl,w
  3496  0D48  00A2               	movwf	___awmod@dividend
  3497  0D49  01A3               	clrf	___awmod@dividend+1
  3498  0D4A  1BA2               	btfsc	___awmod@dividend,7
  3499  0D4B  03A3               	decf	___awmod@dividend+1,f
  3500  0D4C  160A  158A  2492  120A  158A  	fcall	___awmod
  3501  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  3502  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  3503  0D53  0820               	movf	?___awmod,w
  3504  0D54  00CE               	movwf	??_scale
  3505  0D55  3001               	movlw	1
  3506  0D56                     u4125:
  3507  0D56  1003               	clrc
  3508  0D57  0DCE               	rlf	??_scale,f
  3509  0D58  3EFF               	addlw	-1
  3510  0D59  1D03               	skipz
  3511  0D5A  2D56               	goto	u4125
  3512  0D5B  1003               	clrc
  3513  0D5C  0D4E               	rlf	??_scale,w
  3514  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3515  0D5E  0084               	movwf	4
  3516  0D5F  160A  158A  200A  120A  158A  	fcall	stringdir
  3517  0D64  00CF               	movwf	??_scale+1
  3518  0D65  160A  158A  200A  120A  158A  	fcall	stringdir
  3519  0D6A  00D0               	movwf	??_scale+2
  3520  0D6B  160A  158A  200A  120A  158A  	fcall	stringdir
  3521  0D70  00D1               	movwf	??_scale+3
  3522  0D71  160A  158A  200A  120A  158A  	fcall	stringdir
  3523  0D76  00D2               	movwf	??_scale+4
  3524  0D77  0852               	movf	??_scale+4,w
  3525  0D78  00B3               	movwf	___flmul@b+3
  3526  0D79  0851               	movf	??_scale+3,w
  3527  0D7A  00B2               	movwf	___flmul@b+2
  3528  0D7B  0850               	movf	??_scale+2,w
  3529  0D7C  00B1               	movwf	___flmul@b+1
  3530  0D7D  084F               	movf	??_scale+1,w
  3531  0D7E  00B0               	movwf	___flmul@b
  3532  0D7F  085B               	movf	_scale$1069+3,w
  3533  0D80  00B7               	movwf	___flmul@a+3
  3534  0D81  085A               	movf	_scale$1069+2,w
  3535  0D82  00B6               	movwf	___flmul@a+2
  3536  0D83  0859               	movf	_scale$1069+1,w
  3537  0D84  00B5               	movwf	___flmul@a+1
  3538  0D85  0858               	movf	_scale$1069,w
  3539  0D86  00B4               	movwf	___flmul@a
  3540  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3541  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3542  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3543  0D8E  0833               	movf	?___flmul+3,w
  3544  0D8F  00CD               	movwf	?_scale+3
  3545  0D90  0832               	movf	?___flmul+2,w
  3546  0D91  00CC               	movwf	?_scale+2
  3547  0D92  0831               	movf	?___flmul+1,w
  3548  0D93  00CB               	movwf	?_scale+1
  3549  0D94  0830               	movf	?___flmul,w
  3550  0D95  00CA               	movwf	?_scale
  3551  0D96  2FFF               	goto	l338
  3552  0D97                     l2904:
  3553  0D97  085C               	movf	scale@scl,w
  3554  0D98  3A80               	xorlw	128
  3555  0D99  3E75               	addlw	-139
  3556  0D9A  1C03               	skipc
  3557  0D9B  2D9D               	goto	u4131
  3558  0D9C  2D9E               	goto	u4130
  3559  0D9D                     u4131:
  3560  0D9D  2E26               	goto	l2910
  3561  0D9E                     u4130:
  3562  0D9E                     l2906:
  3563                           
  3564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3565  0D9E  300A               	movlw	10
  3566  0D9F  00A0               	movwf	___awmod@divisor
  3567  0DA0  3000               	movlw	0
  3568  0DA1  00A1               	movwf	___awmod@divisor+1
  3569  0DA2  085C               	movf	scale@scl,w
  3570  0DA3  00A2               	movwf	___awmod@dividend
  3571  0DA4  01A3               	clrf	___awmod@dividend+1
  3572  0DA5  1BA2               	btfsc	___awmod@dividend,7
  3573  0DA6  03A3               	decf	___awmod@dividend+1,f
  3574  0DA7  160A  158A  2492  120A  158A  	fcall	___awmod
  3575  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  3576  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  3577  0DAE  0820               	movf	?___awmod,w
  3578  0DAF  00CE               	movwf	??_scale
  3579  0DB0  3001               	movlw	1
  3580  0DB1                     u4145:
  3581  0DB1  1003               	clrc
  3582  0DB2  0DCE               	rlf	??_scale,f
  3583  0DB3  3EFF               	addlw	-1
  3584  0DB4  1D03               	skipz
  3585  0DB5  2DB1               	goto	u4145
  3586  0DB6  1003               	clrc
  3587  0DB7  0D4E               	rlf	??_scale,w
  3588  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3589  0DB9  0084               	movwf	4
  3590  0DBA  160A  158A  200A  120A  158A  	fcall	stringdir
  3591  0DBF  00CF               	movwf	??_scale+1
  3592  0DC0  160A  158A  200A  120A  158A  	fcall	stringdir
  3593  0DC5  00D0               	movwf	??_scale+2
  3594  0DC6  160A  158A  200A  120A  158A  	fcall	stringdir
  3595  0DCB  00D1               	movwf	??_scale+3
  3596  0DCC  160A  158A  200A  120A  158A  	fcall	stringdir
  3597  0DD1  00D2               	movwf	??_scale+4
  3598  0DD2  0852               	movf	??_scale+4,w
  3599  0DD3  00B3               	movwf	___flmul@b+3
  3600  0DD4  0851               	movf	??_scale+3,w
  3601  0DD5  00B2               	movwf	___flmul@b+2
  3602  0DD6  0850               	movf	??_scale+2,w
  3603  0DD7  00B1               	movwf	___flmul@b+1
  3604  0DD8  084F               	movf	??_scale+1,w
  3605  0DD9  00B0               	movwf	___flmul@b
  3606  0DDA  300A               	movlw	10
  3607  0DDB  00A7               	movwf	___awdiv@divisor
  3608  0DDC  3000               	movlw	0
  3609  0DDD  00A8               	movwf	___awdiv@divisor+1
  3610  0DDE  085C               	movf	scale@scl,w
  3611  0DDF  00A9               	movwf	___awdiv@dividend
  3612  0DE0  01AA               	clrf	___awdiv@dividend+1
  3613  0DE1  1BA9               	btfsc	___awdiv@dividend,7
  3614  0DE2  03AA               	decf	___awdiv@dividend+1,f
  3615  0DE3  160A  158A  25B3  120A  158A  	fcall	___awdiv
  3616  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3618  0DEA  0827               	movf	?___awdiv,w
  3619  0DEB  00D3               	movwf	??_scale+5
  3620  0DEC  3001               	movlw	1
  3621  0DED                     u4155:
  3622  0DED  1003               	clrc
  3623  0DEE  0DD3               	rlf	??_scale+5,f
  3624  0DEF  3EFF               	addlw	-1
  3625  0DF0  1D03               	skipz
  3626  0DF1  2DED               	goto	u4155
  3627  0DF2  1003               	clrc
  3628  0DF3  0D53               	rlf	??_scale+5,w
  3629  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3630  0DF5  0084               	movwf	4
  3631  0DF6  160A  158A  200A  120A  158A  	fcall	stringdir
  3632  0DFB  00D4               	movwf	??_scale+6
  3633  0DFC  160A  158A  200A  120A  158A  	fcall	stringdir
  3634  0E01  00D5               	movwf	??_scale+7
  3635  0E02  160A  158A  200A  120A  158A  	fcall	stringdir
  3636  0E07  00D6               	movwf	??_scale+8
  3637  0E08  160A  158A  200A  120A  158A  	fcall	stringdir
  3638  0E0D  00D7               	movwf	??_scale+9
  3639  0E0E  0857               	movf	??_scale+9,w
  3640  0E0F  00B7               	movwf	___flmul@a+3
  3641  0E10  0856               	movf	??_scale+8,w
  3642  0E11  00B6               	movwf	___flmul@a+2
  3643  0E12  0855               	movf	??_scale+7,w
  3644  0E13  00B5               	movwf	___flmul@a+1
  3645  0E14  0854               	movf	??_scale+6,w
  3646  0E15  00B4               	movwf	___flmul@a
  3647  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3648  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3650  0E1D  0833               	movf	?___flmul+3,w
  3651  0E1E  00CD               	movwf	?_scale+3
  3652  0E1F  0832               	movf	?___flmul+2,w
  3653  0E20  00CC               	movwf	?_scale+2
  3654  0E21  0831               	movf	?___flmul+1,w
  3655  0E22  00CB               	movwf	?_scale+1
  3656  0E23  0830               	movf	?___flmul,w
  3657  0E24  00CA               	movwf	?_scale
  3658  0E25  2FFF               	goto	l338
  3659  0E26                     l2910:
  3660                           
  3661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3662  0E26  085C               	movf	scale@scl,w
  3663  0E27  00CE               	movwf	??_scale
  3664  0E28  3001               	movlw	1
  3665  0E29                     u4165:
  3666  0E29  1003               	clrc
  3667  0E2A  0DCE               	rlf	??_scale,f
  3668  0E2B  3EFF               	addlw	-1
  3669  0E2C  1D03               	skipz
  3670  0E2D  2E29               	goto	u4165
  3671  0E2E  1003               	clrc
  3672  0E2F  0D4E               	rlf	??_scale,w
  3673  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3674  0E31  0084               	movwf	4
  3675  0E32  160A  158A  200A  120A  158A  	fcall	stringdir
  3676  0E37  00CF               	movwf	??_scale+1
  3677  0E38  160A  158A  200A  120A  158A  	fcall	stringdir
  3678  0E3D  00D0               	movwf	??_scale+2
  3679  0E3E  160A  158A  200A  120A  158A  	fcall	stringdir
  3680  0E43  00D1               	movwf	??_scale+3
  3681  0E44  160A  158A  200A  120A  158A  	fcall	stringdir
  3682  0E49  00D2               	movwf	??_scale+4
  3683  0E4A  0852               	movf	??_scale+4,w
  3684  0E4B  00CD               	movwf	?_scale+3
  3685  0E4C  0851               	movf	??_scale+3,w
  3686  0E4D  00CC               	movwf	?_scale+2
  3687  0E4E  0850               	movf	??_scale+2,w
  3688  0E4F  00CB               	movwf	?_scale+1
  3689  0E50  084F               	movf	??_scale+1,w
  3690  0E51  00CA               	movwf	?_scale
  3691  0E52  2FFF               	goto	l338
  3692  0E53                     l2914:
  3693                           
  3694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3695  0E53  085C               	movf	scale@scl,w
  3696  0E54  3A80               	xorlw	128
  3697  0E55  3E12               	addlw	-238
  3698  0E56  1C03               	skipc
  3699  0E57  2E59               	goto	u4171
  3700  0E58  2E5A               	goto	u4170
  3701  0E59                     u4171:
  3702  0E59  2F44               	goto	l2922
  3703  0E5A                     u4170:
  3704  0E5A                     l2916:
  3705                           
  3706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3707  0E5A  300A               	movlw	10
  3708  0E5B  00A7               	movwf	___awdiv@divisor
  3709  0E5C  3000               	movlw	0
  3710  0E5D  00A8               	movwf	___awdiv@divisor+1
  3711  0E5E  085C               	movf	scale@scl,w
  3712  0E5F  00A2               	movwf	___awmod@dividend
  3713  0E60  01A3               	clrf	___awmod@dividend+1
  3714  0E61  1BA2               	btfsc	___awmod@dividend,7
  3715  0E62  03A3               	decf	___awmod@dividend+1,f
  3716  0E63  3064               	movlw	100
  3717  0E64  00A0               	movwf	___awmod@divisor
  3718  0E65  3000               	movlw	0
  3719  0E66  00A1               	movwf	___awmod@divisor+1
  3720  0E67  160A  158A  2492  120A  158A  	fcall	___awmod
  3721  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  3722  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  3723  0E6E  0821               	movf	?___awmod+1,w
  3724  0E6F  00AA               	movwf	___awdiv@dividend+1
  3725  0E70  0820               	movf	?___awmod,w
  3726  0E71  00A9               	movwf	___awdiv@dividend
  3727  0E72  160A  158A  25B3  120A  158A  	fcall	___awdiv
  3728  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3729  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3730  0E79  0827               	movf	?___awdiv,w
  3731  0E7A  00CE               	movwf	??_scale
  3732  0E7B  3001               	movlw	1
  3733  0E7C                     u4185:
  3734  0E7C  1003               	clrc
  3735  0E7D  0DCE               	rlf	??_scale,f
  3736  0E7E  3EFF               	addlw	-1
  3737  0E7F  1D03               	skipz
  3738  0E80  2E7C               	goto	u4185
  3739  0E81  1003               	clrc
  3740  0E82  0D4E               	rlf	??_scale,w
  3741  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3742  0E84  0084               	movwf	4
  3743  0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  3744  0E8A  00CF               	movwf	??_scale+1
  3745  0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  3746  0E90  00D0               	movwf	??_scale+2
  3747  0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  3748  0E96  00D1               	movwf	??_scale+3
  3749  0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  3750  0E9C  00D2               	movwf	??_scale+4
  3751  0E9D  0852               	movf	??_scale+4,w
  3752  0E9E  00B3               	movwf	___flmul@b+3
  3753  0E9F  0851               	movf	??_scale+3,w
  3754  0EA0  00B2               	movwf	___flmul@b+2
  3755  0EA1  0850               	movf	??_scale+2,w
  3756  0EA2  00B1               	movwf	___flmul@b+1
  3757  0EA3  084F               	movf	??_scale+1,w
  3758  0EA4  00B0               	movwf	___flmul@b
  3759  0EA5  3064               	movlw	100
  3760  0EA6  00A7               	movwf	___awdiv@divisor
  3761  0EA7  3000               	movlw	0
  3762  0EA8  00A8               	movwf	___awdiv@divisor+1
  3763  0EA9  085C               	movf	scale@scl,w
  3764  0EAA  00A9               	movwf	___awdiv@dividend
  3765  0EAB  01AA               	clrf	___awdiv@dividend+1
  3766  0EAC  1BA9               	btfsc	___awdiv@dividend,7
  3767  0EAD  03AA               	decf	___awdiv@dividend+1,f
  3768  0EAE  160A  158A  25B3  120A  158A  	fcall	___awdiv
  3769  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3770  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3771  0EB5  0827               	movf	?___awdiv,w
  3772  0EB6  00D3               	movwf	??_scale+5
  3773  0EB7  3001               	movlw	1
  3774  0EB8                     u4195:
  3775  0EB8  1003               	clrc
  3776  0EB9  0DD3               	rlf	??_scale+5,f
  3777  0EBA  3EFF               	addlw	-1
  3778  0EBB  1D03               	skipz
  3779  0EBC  2EB8               	goto	u4195
  3780  0EBD  1003               	clrc
  3781  0EBE  0D53               	rlf	??_scale+5,w
  3782  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3783  0EC0  0084               	movwf	4
  3784  0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  3785  0EC6  00D4               	movwf	??_scale+6
  3786  0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  3787  0ECC  00D5               	movwf	??_scale+7
  3788  0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  3789  0ED2  00D6               	movwf	??_scale+8
  3790  0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  3791  0ED8  00D7               	movwf	??_scale+9
  3792  0ED9  0857               	movf	??_scale+9,w
  3793  0EDA  00B7               	movwf	___flmul@a+3
  3794  0EDB  0856               	movf	??_scale+8,w
  3795  0EDC  00B6               	movwf	___flmul@a+2
  3796  0EDD  0855               	movf	??_scale+7,w
  3797  0EDE  00B5               	movwf	___flmul@a+1
  3798  0EDF  0854               	movf	??_scale+6,w
  3799  0EE0  00B4               	movwf	___flmul@a
  3800  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3801  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3802  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3803  0EE8  0833               	movf	?___flmul+3,w
  3804  0EE9  00DB               	movwf	_scale$1069+3
  3805  0EEA  0832               	movf	?___flmul+2,w
  3806  0EEB  00DA               	movwf	_scale$1069+2
  3807  0EEC  0831               	movf	?___flmul+1,w
  3808  0EED  00D9               	movwf	_scale$1069+1
  3809  0EEE  0830               	movf	?___flmul,w
  3810  0EEF  00D8               	movwf	_scale$1069
  3811                           
  3812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3813  0EF0  300A               	movlw	10
  3814  0EF1  00A0               	movwf	___awmod@divisor
  3815  0EF2  3000               	movlw	0
  3816  0EF3  00A1               	movwf	___awmod@divisor+1
  3817  0EF4  085C               	movf	scale@scl,w
  3818  0EF5  00A2               	movwf	___awmod@dividend
  3819  0EF6  01A3               	clrf	___awmod@dividend+1
  3820  0EF7  1BA2               	btfsc	___awmod@dividend,7
  3821  0EF8  03A3               	decf	___awmod@dividend+1,f
  3822  0EF9  160A  158A  2492  120A  158A  	fcall	___awmod
  3823  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  3824  0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  3825  0F00  0820               	movf	?___awmod,w
  3826  0F01  00CE               	movwf	??_scale
  3827  0F02  3001               	movlw	1
  3828  0F03                     u4205:
  3829  0F03  1003               	clrc
  3830  0F04  0DCE               	rlf	??_scale,f
  3831  0F05  3EFF               	addlw	-1
  3832  0F06  1D03               	skipz
  3833  0F07  2F03               	goto	u4205
  3834  0F08  1003               	clrc
  3835  0F09  0D4E               	rlf	??_scale,w
  3836  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3837  0F0B  0084               	movwf	4
  3838  0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  3839  0F11  00CF               	movwf	??_scale+1
  3840  0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  3841  0F17  00D0               	movwf	??_scale+2
  3842  0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  3843  0F1D  00D1               	movwf	??_scale+3
  3844  0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  3845  0F23  00D2               	movwf	??_scale+4
  3846  0F24  0852               	movf	??_scale+4,w
  3847  0F25  00B3               	movwf	___flmul@b+3
  3848  0F26  0851               	movf	??_scale+3,w
  3849  0F27  00B2               	movwf	___flmul@b+2
  3850  0F28  0850               	movf	??_scale+2,w
  3851  0F29  00B1               	movwf	___flmul@b+1
  3852  0F2A  084F               	movf	??_scale+1,w
  3853  0F2B  00B0               	movwf	___flmul@b
  3854  0F2C  085B               	movf	_scale$1069+3,w
  3855  0F2D  00B7               	movwf	___flmul@a+3
  3856  0F2E  085A               	movf	_scale$1069+2,w
  3857  0F2F  00B6               	movwf	___flmul@a+2
  3858  0F30  0859               	movf	_scale$1069+1,w
  3859  0F31  00B5               	movwf	___flmul@a+1
  3860  0F32  0858               	movf	_scale$1069,w
  3861  0F33  00B4               	movwf	___flmul@a
  3862  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3863  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3864  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3865  0F3B  0833               	movf	?___flmul+3,w
  3866  0F3C  00CD               	movwf	?_scale+3
  3867  0F3D  0832               	movf	?___flmul+2,w
  3868  0F3E  00CC               	movwf	?_scale+2
  3869  0F3F  0831               	movf	?___flmul+1,w
  3870  0F40  00CB               	movwf	?_scale+1
  3871  0F41  0830               	movf	?___flmul,w
  3872  0F42  00CA               	movwf	?_scale
  3873  0F43  2FFF               	goto	l338
  3874  0F44                     l2922:
  3875  0F44  085C               	movf	scale@scl,w
  3876  0F45  3A80               	xorlw	128
  3877  0F46  3E75               	addlw	-139
  3878  0F47  1C03               	skipc
  3879  0F48  2F4A               	goto	u4211
  3880  0F49  2F4B               	goto	u4210
  3881  0F4A                     u4211:
  3882  0F4A  2FD3               	goto	l2928
  3883  0F4B                     u4210:
  3884  0F4B                     l2924:
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3887  0F4B  300A               	movlw	10
  3888  0F4C  00A0               	movwf	___awmod@divisor
  3889  0F4D  3000               	movlw	0
  3890  0F4E  00A1               	movwf	___awmod@divisor+1
  3891  0F4F  085C               	movf	scale@scl,w
  3892  0F50  00A2               	movwf	___awmod@dividend
  3893  0F51  01A3               	clrf	___awmod@dividend+1
  3894  0F52  1BA2               	btfsc	___awmod@dividend,7
  3895  0F53  03A3               	decf	___awmod@dividend+1,f
  3896  0F54  160A  158A  2492  120A  158A  	fcall	___awmod
  3897  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  3898  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  3899  0F5B  0820               	movf	?___awmod,w
  3900  0F5C  00CE               	movwf	??_scale
  3901  0F5D  3001               	movlw	1
  3902  0F5E                     u4225:
  3903  0F5E  1003               	clrc
  3904  0F5F  0DCE               	rlf	??_scale,f
  3905  0F60  3EFF               	addlw	-1
  3906  0F61  1D03               	skipz
  3907  0F62  2F5E               	goto	u4225
  3908  0F63  1003               	clrc
  3909  0F64  0D4E               	rlf	??_scale,w
  3910  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3911  0F66  0084               	movwf	4
  3912  0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  3913  0F6C  00CF               	movwf	??_scale+1
  3914  0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  3915  0F72  00D0               	movwf	??_scale+2
  3916  0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  3917  0F78  00D1               	movwf	??_scale+3
  3918  0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  3919  0F7E  00D2               	movwf	??_scale+4
  3920  0F7F  0852               	movf	??_scale+4,w
  3921  0F80  00B3               	movwf	___flmul@b+3
  3922  0F81  0851               	movf	??_scale+3,w
  3923  0F82  00B2               	movwf	___flmul@b+2
  3924  0F83  0850               	movf	??_scale+2,w
  3925  0F84  00B1               	movwf	___flmul@b+1
  3926  0F85  084F               	movf	??_scale+1,w
  3927  0F86  00B0               	movwf	___flmul@b
  3928  0F87  300A               	movlw	10
  3929  0F88  00A7               	movwf	___awdiv@divisor
  3930  0F89  3000               	movlw	0
  3931  0F8A  00A8               	movwf	___awdiv@divisor+1
  3932  0F8B  085C               	movf	scale@scl,w
  3933  0F8C  00A9               	movwf	___awdiv@dividend
  3934  0F8D  01AA               	clrf	___awdiv@dividend+1
  3935  0F8E  1BA9               	btfsc	___awdiv@dividend,7
  3936  0F8F  03AA               	decf	___awdiv@dividend+1,f
  3937  0F90  160A  158A  25B3  120A  158A  	fcall	___awdiv
  3938  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3939  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3940  0F97  0827               	movf	?___awdiv,w
  3941  0F98  00D3               	movwf	??_scale+5
  3942  0F99  3001               	movlw	1
  3943  0F9A                     u4235:
  3944  0F9A  1003               	clrc
  3945  0F9B  0DD3               	rlf	??_scale+5,f
  3946  0F9C  3EFF               	addlw	-1
  3947  0F9D  1D03               	skipz
  3948  0F9E  2F9A               	goto	u4235
  3949  0F9F  1003               	clrc
  3950  0FA0  0D53               	rlf	??_scale+5,w
  3951  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3952  0FA2  0084               	movwf	4
  3953  0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  3954  0FA8  00D4               	movwf	??_scale+6
  3955  0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  3956  0FAE  00D5               	movwf	??_scale+7
  3957  0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  3958  0FB4  00D6               	movwf	??_scale+8
  3959  0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  3960  0FBA  00D7               	movwf	??_scale+9
  3961  0FBB  0857               	movf	??_scale+9,w
  3962  0FBC  00B7               	movwf	___flmul@a+3
  3963  0FBD  0856               	movf	??_scale+8,w
  3964  0FBE  00B6               	movwf	___flmul@a+2
  3965  0FBF  0855               	movf	??_scale+7,w
  3966  0FC0  00B5               	movwf	___flmul@a+1
  3967  0FC1  0854               	movf	??_scale+6,w
  3968  0FC2  00B4               	movwf	___flmul@a
  3969  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3970  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3971  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3972  0FCA  0833               	movf	?___flmul+3,w
  3973  0FCB  00CD               	movwf	?_scale+3
  3974  0FCC  0832               	movf	?___flmul+2,w
  3975  0FCD  00CC               	movwf	?_scale+2
  3976  0FCE  0831               	movf	?___flmul+1,w
  3977  0FCF  00CB               	movwf	?_scale+1
  3978  0FD0  0830               	movf	?___flmul,w
  3979  0FD1  00CA               	movwf	?_scale
  3980  0FD2  2FFF               	goto	l338
  3981  0FD3                     l2928:
  3982                           
  3983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3984  0FD3  085C               	movf	scale@scl,w
  3985  0FD4  00CE               	movwf	??_scale
  3986  0FD5  3001               	movlw	1
  3987  0FD6                     u4245:
  3988  0FD6  1003               	clrc
  3989  0FD7  0DCE               	rlf	??_scale,f
  3990  0FD8  3EFF               	addlw	-1
  3991  0FD9  1D03               	skipz
  3992  0FDA  2FD6               	goto	u4245
  3993  0FDB  1003               	clrc
  3994  0FDC  0D4E               	rlf	??_scale,w
  3995  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3996  0FDE  0084               	movwf	4
  3997  0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  3998  0FE4  00CF               	movwf	??_scale+1
  3999  0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  4000  0FEA  00D0               	movwf	??_scale+2
  4001  0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  4002  0FF0  00D1               	movwf	??_scale+3
  4003  0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  4004  0FF6  00D2               	movwf	??_scale+4
  4005  0FF7  0852               	movf	??_scale+4,w
  4006  0FF8  00CD               	movwf	?_scale+3
  4007  0FF9  0851               	movf	??_scale+3,w
  4008  0FFA  00CC               	movwf	?_scale+2
  4009  0FFB  0850               	movf	??_scale+2,w
  4010  0FFC  00CB               	movwf	?_scale+1
  4011  0FFD  084F               	movf	??_scale+1,w
  4012  0FFE  00CA               	movwf	?_scale
  4013  0FFF                     l338:
  4014  0FFF  0008               	return
  4015  1000                     __end_of_scale:
  4016                           
  4017                           	psect	text10
  4018  1C92                     __ptext10:	
  4019 ;; *************** function ___awmod *****************
  4020 ;; Defined at:
  4021 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  divisor         2    0[BANK0 ] int 
  4024 ;;  dividend        2    2[BANK0 ] int 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  sign            1    6[BANK0 ] unsigned char 
  4027 ;;  counter         1    5[BANK0 ] unsigned char 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  2    0[BANK0 ] int 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4037 ;;      Params:         0       4       0       0       0
  4038 ;;      Locals:         0       2       0       0       0
  4039 ;;      Temps:          0       1       0       0       0
  4040 ;;      Totals:         0       7       0       0       0
  4041 ;;Total ram usage:        7 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    2
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_scale
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           
  4052                           ;psect for function ___awmod
  4053  1C92                     ___awmod:
  4054  1C92                     l2434:	
  4055                           ;incstack = 0
  4056                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4057                           
  4058  1C92  1283               	bcf	3,5	;RP0=0, select bank0
  4059  1C93  1303               	bcf	3,6	;RP1=0, select bank0
  4060  1C94  01A6               	clrf	___awmod@sign
  4061  1C95                     l2436:
  4062  1C95  1FA3               	btfss	___awmod@dividend+1,7
  4063  1C96  2C98               	goto	u2951
  4064  1C97  2C99               	goto	u2950
  4065  1C98                     u2951:
  4066  1C98  2CA0               	goto	l2442
  4067  1C99                     u2950:
  4068  1C99                     l2438:
  4069  1C99  09A2               	comf	___awmod@dividend,f
  4070  1C9A  09A3               	comf	___awmod@dividend+1,f
  4071  1C9B  0AA2               	incf	___awmod@dividend,f
  4072  1C9C  1903               	skipnz
  4073  1C9D  0AA3               	incf	___awmod@dividend+1,f
  4074  1C9E                     l2440:
  4075  1C9E  01A6               	clrf	___awmod@sign
  4076  1C9F  0AA6               	incf	___awmod@sign,f
  4077  1CA0                     l2442:
  4078  1CA0  1FA1               	btfss	___awmod@divisor+1,7
  4079  1CA1  2CA3               	goto	u2961
  4080  1CA2  2CA4               	goto	u2960
  4081  1CA3                     u2961:
  4082  1CA3  2CA9               	goto	l2446
  4083  1CA4                     u2960:
  4084  1CA4                     l2444:
  4085  1CA4  09A0               	comf	___awmod@divisor,f
  4086  1CA5  09A1               	comf	___awmod@divisor+1,f
  4087  1CA6  0AA0               	incf	___awmod@divisor,f
  4088  1CA7  1903               	skipnz
  4089  1CA8  0AA1               	incf	___awmod@divisor+1,f
  4090  1CA9                     l2446:
  4091  1CA9  0820               	movf	___awmod@divisor,w
  4092  1CAA  0421               	iorwf	___awmod@divisor+1,w
  4093  1CAB  1903               	btfsc	3,2
  4094  1CAC  2CAE               	goto	u2971
  4095  1CAD  2CAF               	goto	u2970
  4096  1CAE                     u2971:
  4097  1CAE  2CDE               	goto	l2464
  4098  1CAF                     u2970:
  4099  1CAF                     l2448:
  4100  1CAF  01A5               	clrf	___awmod@counter
  4101  1CB0  0AA5               	incf	___awmod@counter,f
  4102  1CB1  2CBD               	goto	l2454
  4103  1CB2                     l2450:
  4104  1CB2  3001               	movlw	1
  4105  1CB3                     u2985:
  4106  1CB3  1003               	clrc
  4107  1CB4  0DA0               	rlf	___awmod@divisor,f
  4108  1CB5  0DA1               	rlf	___awmod@divisor+1,f
  4109  1CB6  3EFF               	addlw	-1
  4110  1CB7  1D03               	skipz
  4111  1CB8  2CB3               	goto	u2985
  4112  1CB9                     l2452:
  4113  1CB9  3001               	movlw	1
  4114  1CBA  00A4               	movwf	??___awmod
  4115  1CBB  0824               	movf	??___awmod,w
  4116  1CBC  07A5               	addwf	___awmod@counter,f
  4117  1CBD                     l2454:
  4118  1CBD  1FA1               	btfss	___awmod@divisor+1,7
  4119  1CBE  2CC0               	goto	u2991
  4120  1CBF  2CC1               	goto	u2990
  4121  1CC0                     u2991:
  4122  1CC0  2CB2               	goto	l2450
  4123  1CC1                     u2990:
  4124  1CC1                     l2456:
  4125  1CC1  0821               	movf	___awmod@divisor+1,w
  4126  1CC2  0223               	subwf	___awmod@dividend+1,w
  4127  1CC3  1D03               	skipz
  4128  1CC4  2CC7               	goto	u3005
  4129  1CC5  0820               	movf	___awmod@divisor,w
  4130  1CC6  0222               	subwf	___awmod@dividend,w
  4131  1CC7                     u3005:
  4132  1CC7  1C03               	skipc
  4133  1CC8  2CCA               	goto	u3001
  4134  1CC9  2CCB               	goto	u3000
  4135  1CCA                     u3001:
  4136  1CCA  2CD1               	goto	l2460
  4137  1CCB                     u3000:
  4138  1CCB                     l2458:
  4139  1CCB  0820               	movf	___awmod@divisor,w
  4140  1CCC  02A2               	subwf	___awmod@dividend,f
  4141  1CCD  0821               	movf	___awmod@divisor+1,w
  4142  1CCE  1C03               	skipc
  4143  1CCF  03A3               	decf	___awmod@dividend+1,f
  4144  1CD0  02A3               	subwf	___awmod@dividend+1,f
  4145  1CD1                     l2460:
  4146  1CD1  3001               	movlw	1
  4147  1CD2                     u3015:
  4148  1CD2  1003               	clrc
  4149  1CD3  0CA1               	rrf	___awmod@divisor+1,f
  4150  1CD4  0CA0               	rrf	___awmod@divisor,f
  4151  1CD5  3EFF               	addlw	-1
  4152  1CD6  1D03               	skipz
  4153  1CD7  2CD2               	goto	u3015
  4154  1CD8                     l2462:
  4155  1CD8  3001               	movlw	1
  4156  1CD9  02A5               	subwf	___awmod@counter,f
  4157  1CDA  1D03               	btfss	3,2
  4158  1CDB  2CDD               	goto	u3021
  4159  1CDC  2CDE               	goto	u3020
  4160  1CDD                     u3021:
  4161  1CDD  2CC1               	goto	l2456
  4162  1CDE                     u3020:
  4163  1CDE                     l2464:
  4164  1CDE  0826               	movf	___awmod@sign,w
  4165  1CDF  1903               	btfsc	3,2
  4166  1CE0  2CE2               	goto	u3031
  4167  1CE1  2CE3               	goto	u3030
  4168  1CE2                     u3031:
  4169  1CE2  2CE8               	goto	l2468
  4170  1CE3                     u3030:
  4171  1CE3                     l2466:
  4172  1CE3  09A2               	comf	___awmod@dividend,f
  4173  1CE4  09A3               	comf	___awmod@dividend+1,f
  4174  1CE5  0AA2               	incf	___awmod@dividend,f
  4175  1CE6  1903               	skipnz
  4176  1CE7  0AA3               	incf	___awmod@dividend+1,f
  4177  1CE8                     l2468:
  4178  1CE8  0823               	movf	___awmod@dividend+1,w
  4179  1CE9  00A1               	movwf	?___awmod+1
  4180  1CEA  0822               	movf	___awmod@dividend,w
  4181  1CEB  00A0               	movwf	?___awmod
  4182  1CEC                     l591:
  4183  1CEC  0008               	return
  4184  1CED                     __end_of___awmod:
  4185                           
  4186                           	psect	text11
  4187  1DB3                     __ptext11:	
  4188 ;; *************** function ___awdiv *****************
  4189 ;; Defined at:
  4190 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  divisor         2    7[BANK0 ] int 
  4193 ;;  dividend        2    9[BANK0 ] int 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  quotient        2   14[BANK0 ] int 
  4196 ;;  sign            1   13[BANK0 ] unsigned char 
  4197 ;;  counter         1   12[BANK0 ] unsigned char 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  2    7[BANK0 ] int 
  4200 ;; Registers used:
  4201 ;;		wreg, status,2, status,0
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4207 ;;      Params:         0       4       0       0       0
  4208 ;;      Locals:         0       4       0       0       0
  4209 ;;      Temps:          0       1       0       0       0
  4210 ;;      Totals:         0       9       0       0       0
  4211 ;;Total ram usage:        9 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    2
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_scale
  4218 ;;		_sprintf
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           
  4223                           ;psect for function ___awdiv
  4224  1DB3                     ___awdiv:
  4225  1DB3                     l2390:	
  4226                           ;incstack = 0
  4227                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4228                           
  4229  1DB3  1283               	bcf	3,5	;RP0=0, select bank0
  4230  1DB4  1303               	bcf	3,6	;RP1=0, select bank0
  4231  1DB5  01AD               	clrf	___awdiv@sign
  4232  1DB6                     l2392:
  4233  1DB6  1FA8               	btfss	___awdiv@divisor+1,7
  4234  1DB7  2DB9               	goto	u2851
  4235  1DB8  2DBA               	goto	u2850
  4236  1DB9                     u2851:
  4237  1DB9  2DC1               	goto	l2398
  4238  1DBA                     u2850:
  4239  1DBA                     l2394:
  4240  1DBA  09A7               	comf	___awdiv@divisor,f
  4241  1DBB  09A8               	comf	___awdiv@divisor+1,f
  4242  1DBC  0AA7               	incf	___awdiv@divisor,f
  4243  1DBD  1903               	skipnz
  4244  1DBE  0AA8               	incf	___awdiv@divisor+1,f
  4245  1DBF                     l2396:
  4246  1DBF  01AD               	clrf	___awdiv@sign
  4247  1DC0  0AAD               	incf	___awdiv@sign,f
  4248  1DC1                     l2398:
  4249  1DC1  1FAA               	btfss	___awdiv@dividend+1,7
  4250  1DC2  2DC4               	goto	u2861
  4251  1DC3  2DC5               	goto	u2860
  4252  1DC4                     u2861:
  4253  1DC4  2DCE               	goto	l2404
  4254  1DC5                     u2860:
  4255  1DC5                     l2400:
  4256  1DC5  09A9               	comf	___awdiv@dividend,f
  4257  1DC6  09AA               	comf	___awdiv@dividend+1,f
  4258  1DC7  0AA9               	incf	___awdiv@dividend,f
  4259  1DC8  1903               	skipnz
  4260  1DC9  0AAA               	incf	___awdiv@dividend+1,f
  4261  1DCA                     l2402:
  4262  1DCA  3001               	movlw	1
  4263  1DCB  00AB               	movwf	??___awdiv
  4264  1DCC  082B               	movf	??___awdiv,w
  4265  1DCD  06AD               	xorwf	___awdiv@sign,f
  4266  1DCE                     l2404:
  4267  1DCE  01AE               	clrf	___awdiv@quotient
  4268  1DCF  01AF               	clrf	___awdiv@quotient+1
  4269  1DD0                     l2406:
  4270  1DD0  0827               	movf	___awdiv@divisor,w
  4271  1DD1  0428               	iorwf	___awdiv@divisor+1,w
  4272  1DD2  1903               	btfsc	3,2
  4273  1DD3  2DD5               	goto	u2871
  4274  1DD4  2DD6               	goto	u2870
  4275  1DD5                     u2871:
  4276  1DD5  2E0D               	goto	l2426
  4277  1DD6                     u2870:
  4278  1DD6                     l2408:
  4279  1DD6  01AC               	clrf	___awdiv@counter
  4280  1DD7  0AAC               	incf	___awdiv@counter,f
  4281  1DD8  2DE4               	goto	l2414
  4282  1DD9                     l2410:
  4283  1DD9  3001               	movlw	1
  4284  1DDA                     u2885:
  4285  1DDA  1003               	clrc
  4286  1DDB  0DA7               	rlf	___awdiv@divisor,f
  4287  1DDC  0DA8               	rlf	___awdiv@divisor+1,f
  4288  1DDD  3EFF               	addlw	-1
  4289  1DDE  1D03               	skipz
  4290  1DDF  2DDA               	goto	u2885
  4291  1DE0                     l2412:
  4292  1DE0  3001               	movlw	1
  4293  1DE1  00AB               	movwf	??___awdiv
  4294  1DE2  082B               	movf	??___awdiv,w
  4295  1DE3  07AC               	addwf	___awdiv@counter,f
  4296  1DE4                     l2414:
  4297  1DE4  1FA8               	btfss	___awdiv@divisor+1,7
  4298  1DE5  2DE7               	goto	u2891
  4299  1DE6  2DE8               	goto	u2890
  4300  1DE7                     u2891:
  4301  1DE7  2DD9               	goto	l2410
  4302  1DE8                     u2890:
  4303  1DE8                     l2416:
  4304  1DE8  3001               	movlw	1
  4305  1DE9                     u2905:
  4306  1DE9  1003               	clrc
  4307  1DEA  0DAE               	rlf	___awdiv@quotient,f
  4308  1DEB  0DAF               	rlf	___awdiv@quotient+1,f
  4309  1DEC  3EFF               	addlw	-1
  4310  1DED  1D03               	skipz
  4311  1DEE  2DE9               	goto	u2905
  4312  1DEF  0828               	movf	___awdiv@divisor+1,w
  4313  1DF0  022A               	subwf	___awdiv@dividend+1,w
  4314  1DF1  1D03               	skipz
  4315  1DF2  2DF5               	goto	u2915
  4316  1DF3  0827               	movf	___awdiv@divisor,w
  4317  1DF4  0229               	subwf	___awdiv@dividend,w
  4318  1DF5                     u2915:
  4319  1DF5  1C03               	skipc
  4320  1DF6  2DF8               	goto	u2911
  4321  1DF7  2DF9               	goto	u2910
  4322  1DF8                     u2911:
  4323  1DF8  2E00               	goto	l2422
  4324  1DF9                     u2910:
  4325  1DF9                     l2418:
  4326  1DF9  0827               	movf	___awdiv@divisor,w
  4327  1DFA  02A9               	subwf	___awdiv@dividend,f
  4328  1DFB  0828               	movf	___awdiv@divisor+1,w
  4329  1DFC  1C03               	skipc
  4330  1DFD  03AA               	decf	___awdiv@dividend+1,f
  4331  1DFE  02AA               	subwf	___awdiv@dividend+1,f
  4332  1DFF                     l2420:
  4333  1DFF  142E               	bsf	___awdiv@quotient,0
  4334  1E00                     l2422:
  4335  1E00  3001               	movlw	1
  4336  1E01                     u2925:
  4337  1E01  1003               	clrc
  4338  1E02  0CA8               	rrf	___awdiv@divisor+1,f
  4339  1E03  0CA7               	rrf	___awdiv@divisor,f
  4340  1E04  3EFF               	addlw	-1
  4341  1E05  1D03               	skipz
  4342  1E06  2E01               	goto	u2925
  4343  1E07                     l2424:
  4344  1E07  3001               	movlw	1
  4345  1E08  02AC               	subwf	___awdiv@counter,f
  4346  1E09  1D03               	btfss	3,2
  4347  1E0A  2E0C               	goto	u2931
  4348  1E0B  2E0D               	goto	u2930
  4349  1E0C                     u2931:
  4350  1E0C  2DE8               	goto	l2416
  4351  1E0D                     u2930:
  4352  1E0D                     l2426:
  4353  1E0D  082D               	movf	___awdiv@sign,w
  4354  1E0E  1903               	btfsc	3,2
  4355  1E0F  2E11               	goto	u2941
  4356  1E10  2E12               	goto	u2940
  4357  1E11                     u2941:
  4358  1E11  2E17               	goto	l2430
  4359  1E12                     u2940:
  4360  1E12                     l2428:
  4361  1E12  09AE               	comf	___awdiv@quotient,f
  4362  1E13  09AF               	comf	___awdiv@quotient+1,f
  4363  1E14  0AAE               	incf	___awdiv@quotient,f
  4364  1E15  1903               	skipnz
  4365  1E16  0AAF               	incf	___awdiv@quotient+1,f
  4366  1E17                     l2430:
  4367  1E17  082F               	movf	___awdiv@quotient+1,w
  4368  1E18  00A8               	movwf	?___awdiv+1
  4369  1E19  082E               	movf	___awdiv@quotient,w
  4370  1E1A  00A7               	movwf	?___awdiv
  4371  1E1B                     l578:
  4372  1E1B  0008               	return
  4373  1E1C                     __end_of___awdiv:
  4374                           
  4375                           	psect	text12
  4376  18F9                     __ptext12:	
  4377 ;; *************** function _isdigit *****************
  4378 ;; Defined at:
  4379 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  c               1    wreg     unsigned char 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  c               1    1[BANK0 ] unsigned char 
  4384 ;; Return value:  Size  Location     Type
  4385 ;;		None               void
  4386 ;; Registers used:
  4387 ;;		wreg, status,2, status,0
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4393 ;;      Params:         0       0       0       0       0
  4394 ;;      Locals:         0       2       0       0       0
  4395 ;;      Temps:          0       0       0       0       0
  4396 ;;      Totals:         0       2       0       0       0
  4397 ;;Total ram usage:        2 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:    2
  4400 ;; This function calls:
  4401 ;;		Nothing
  4402 ;; This function is called by:
  4403 ;;		_sprintf
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           
  4408                           ;psect for function _isdigit
  4409  18F9                     _isdigit:
  4410                           
  4411                           ;incstack = 0
  4412                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4413                           ;isdigit@c stored from wreg
  4414  18F9  1283               	bcf	3,5	;RP0=0, select bank0
  4415  18FA  1303               	bcf	3,6	;RP1=0, select bank0
  4416  18FB  00A1               	movwf	isdigit@c
  4417  18FC                     l2932:
  4418  18FC  01A0               	clrf	_isdigit$878
  4419  18FD                     l2934:
  4420  18FD  303A               	movlw	58
  4421  18FE  0221               	subwf	isdigit@c,w
  4422  18FF  1803               	skipnc
  4423  1900  2902               	goto	u4251
  4424  1901  2903               	goto	u4250
  4425  1902                     u4251:
  4426  1902  290B               	goto	l2940
  4427  1903                     u4250:
  4428  1903                     l2936:
  4429  1903  3030               	movlw	48
  4430  1904  0221               	subwf	isdigit@c,w
  4431  1905  1C03               	skipc
  4432  1906  2908               	goto	u4261
  4433  1907  2909               	goto	u4260
  4434  1908                     u4261:
  4435  1908  290B               	goto	l2940
  4436  1909                     u4260:
  4437  1909                     l2938:
  4438  1909  01A0               	clrf	_isdigit$878
  4439  190A  0AA0               	incf	_isdigit$878,f
  4440  190B                     l2940:
  4441  190B  0C20               	rrf	_isdigit$878,w
  4442  190C                     l912:
  4443  190C  0008               	return
  4444  190D                     __end_of_isdigit:
  4445                           
  4446                           	psect	text13
  4447  05E1                     __ptext13:	
  4448 ;; *************** function _fround *****************
  4449 ;; Defined at:
  4450 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;  prec            1    wreg     unsigned char 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;  prec            1   61[BANK0 ] unsigned char 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  4   42[BANK0 ] unsigned char 
  4457 ;; Registers used:
  4458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4464 ;;      Params:         0       4       0       0       0
  4465 ;;      Locals:         0       9       0       0       0
  4466 ;;      Temps:          0       7       0       0       0
  4467 ;;      Totals:         0      20       0       0       0
  4468 ;;Total ram usage:       20 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    4
  4471 ;; This function calls:
  4472 ;;		___flmul
  4473 ;;		___lwdiv
  4474 ;;		___lwmod
  4475 ;; This function is called by:
  4476 ;;		_sprintf
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           
  4481                           ;psect for function _fround
  4482  05E1                     _fround:
  4483                           
  4484                           ;incstack = 0
  4485                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4486                           ;fround@prec stored from wreg
  4487  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  4488  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  4489  05E3  00DD               	movwf	fround@prec
  4490  05E4                     l2874:
  4491                           
  4492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4493  05E4  306E               	movlw	110
  4494  05E5  025D               	subwf	fround@prec,w
  4495  05E6  1C03               	skipc
  4496  05E7  2DE9               	goto	u4001
  4497  05E8  2DEA               	goto	u4000
  4498  05E9                     u4001:
  4499  05E9  2EF9               	goto	l2882
  4500  05EA                     u4000:
  4501  05EA                     l2876:
  4502                           
  4503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4504  05EA  303F               	movlw	63
  4505  05EB  00B3               	movwf	___flmul@b+3
  4506  05EC  3000               	movlw	0
  4507  05ED  00B2               	movwf	___flmul@b+2
  4508  05EE  3000               	movlw	0
  4509  05EF  00B1               	movwf	___flmul@b+1
  4510  05F0  3000               	movlw	0
  4511  05F1  00B0               	movwf	___flmul@b
  4512  05F2  3064               	movlw	100
  4513  05F3  00A6               	movwf	___lwdiv@divisor
  4514  05F4  3000               	movlw	0
  4515  05F5  00A7               	movwf	___lwdiv@divisor+1
  4516  05F6  085D               	movf	fround@prec,w
  4517  05F7  00CE               	movwf	??_fround
  4518  05F8  01CF               	clrf	??_fround+1
  4519  05F9  084E               	movf	??_fround,w
  4520  05FA  00A8               	movwf	___lwdiv@dividend
  4521  05FB  084F               	movf	??_fround+1,w
  4522  05FC  00A9               	movwf	___lwdiv@dividend+1
  4523  05FD  160A  158A  227A  120A  118A  	fcall	___lwdiv
  4524  0602  1283               	bcf	3,5	;RP0=0, select bank0
  4525  0603  1303               	bcf	3,6	;RP1=0, select bank0
  4526  0604  0826               	movf	?___lwdiv,w
  4527  0605  00D0               	movwf	??_fround+2
  4528  0606  3001               	movlw	1
  4529  0607                     u4015:
  4530  0607  1003               	clrc
  4531  0608  0DD0               	rlf	??_fround+2,f
  4532  0609  3EFF               	addlw	-1
  4533  060A  1D03               	skipz
  4534  060B  2E07               	goto	u4015
  4535  060C  1003               	clrc
  4536  060D  0D50               	rlf	??_fround+2,w
  4537  060E  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4538  060F  0084               	movwf	4
  4539  0610  160A  158A  200A  120A  118A  	fcall	stringdir
  4540  0615  00D1               	movwf	??_fround+3
  4541  0616  160A  158A  200A  120A  118A  	fcall	stringdir
  4542  061B  00D2               	movwf	??_fround+4
  4543  061C  160A  158A  200A  120A  118A  	fcall	stringdir
  4544  0621  00D3               	movwf	??_fround+5
  4545  0622  160A  158A  200A  120A  118A  	fcall	stringdir
  4546  0627  00D4               	movwf	??_fround+6
  4547  0628  0854               	movf	??_fround+6,w
  4548  0629  00B7               	movwf	___flmul@a+3
  4549  062A  0853               	movf	??_fround+5,w
  4550  062B  00B6               	movwf	___flmul@a+2
  4551  062C  0852               	movf	??_fround+4,w
  4552  062D  00B5               	movwf	___flmul@a+1
  4553  062E  0851               	movf	??_fround+3,w
  4554  062F  00B4               	movwf	___flmul@a
  4555  0630  120A  158A  213C  120A  118A  	fcall	___flmul
  4556  0635  1283               	bcf	3,5	;RP0=0, select bank0
  4557  0636  1303               	bcf	3,6	;RP1=0, select bank0
  4558  0637  0833               	movf	?___flmul+3,w
  4559  0638  00DC               	movwf	_fround$1067+3
  4560  0639  0832               	movf	?___flmul+2,w
  4561  063A  00DB               	movwf	_fround$1067+2
  4562  063B  0831               	movf	?___flmul+1,w
  4563  063C  00DA               	movwf	_fround$1067+1
  4564  063D  0830               	movf	?___flmul,w
  4565  063E  00D9               	movwf	_fround$1067
  4566                           
  4567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4568  063F  300A               	movlw	10
  4569  0640  00A6               	movwf	___lwdiv@divisor
  4570  0641  3000               	movlw	0
  4571  0642  00A7               	movwf	___lwdiv@divisor+1
  4572  0643  085D               	movf	fround@prec,w
  4573  0644  00CE               	movwf	??_fround
  4574  0645  01CF               	clrf	??_fround+1
  4575  0646  084E               	movf	??_fround,w
  4576  0647  00A2               	movwf	___lwmod@dividend
  4577  0648  084F               	movf	??_fround+1,w
  4578  0649  00A3               	movwf	___lwmod@dividend+1
  4579  064A  3064               	movlw	100
  4580  064B  00A0               	movwf	___lwmod@divisor
  4581  064C  3000               	movlw	0
  4582  064D  00A1               	movwf	___lwmod@divisor+1
  4583  064E  160A  158A  223E  120A  118A  	fcall	___lwmod
  4584  0653  1283               	bcf	3,5	;RP0=0, select bank0
  4585  0654  1303               	bcf	3,6	;RP1=0, select bank0
  4586  0655  0821               	movf	?___lwmod+1,w
  4587  0656  00A9               	movwf	___lwdiv@dividend+1
  4588  0657  0820               	movf	?___lwmod,w
  4589  0658  00A8               	movwf	___lwdiv@dividend
  4590  0659  160A  158A  227A  120A  118A  	fcall	___lwdiv
  4591  065E  1283               	bcf	3,5	;RP0=0, select bank0
  4592  065F  1303               	bcf	3,6	;RP1=0, select bank0
  4593  0660  0826               	movf	?___lwdiv,w
  4594  0661  00D0               	movwf	??_fround+2
  4595  0662  3001               	movlw	1
  4596  0663                     u4025:
  4597  0663  1003               	clrc
  4598  0664  0DD0               	rlf	??_fround+2,f
  4599  0665  3EFF               	addlw	-1
  4600  0666  1D03               	skipz
  4601  0667  2E63               	goto	u4025
  4602  0668  1003               	clrc
  4603  0669  0D50               	rlf	??_fround+2,w
  4604  066A  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4605  066B  0084               	movwf	4
  4606  066C  160A  158A  200A  120A  118A  	fcall	stringdir
  4607  0671  00D1               	movwf	??_fround+3
  4608  0672  160A  158A  200A  120A  118A  	fcall	stringdir
  4609  0677  00D2               	movwf	??_fround+4
  4610  0678  160A  158A  200A  120A  118A  	fcall	stringdir
  4611  067D  00D3               	movwf	??_fround+5
  4612  067E  160A  158A  200A  120A  118A  	fcall	stringdir
  4613  0683  00D4               	movwf	??_fround+6
  4614  0684  0854               	movf	??_fround+6,w
  4615  0685  00B3               	movwf	___flmul@b+3
  4616  0686  0853               	movf	??_fround+5,w
  4617  0687  00B2               	movwf	___flmul@b+2
  4618  0688  0852               	movf	??_fround+4,w
  4619  0689  00B1               	movwf	___flmul@b+1
  4620  068A  0851               	movf	??_fround+3,w
  4621  068B  00B0               	movwf	___flmul@b
  4622  068C  085C               	movf	_fround$1067+3,w
  4623  068D  00B7               	movwf	___flmul@a+3
  4624  068E  085B               	movf	_fround$1067+2,w
  4625  068F  00B6               	movwf	___flmul@a+2
  4626  0690  085A               	movf	_fround$1067+1,w
  4627  0691  00B5               	movwf	___flmul@a+1
  4628  0692  0859               	movf	_fround$1067,w
  4629  0693  00B4               	movwf	___flmul@a
  4630  0694  120A  158A  213C  120A  118A  	fcall	___flmul
  4631  0699  1283               	bcf	3,5	;RP0=0, select bank0
  4632  069A  1303               	bcf	3,6	;RP1=0, select bank0
  4633  069B  0833               	movf	?___flmul+3,w
  4634  069C  00D8               	movwf	_fround$1068+3
  4635  069D  0832               	movf	?___flmul+2,w
  4636  069E  00D7               	movwf	_fround$1068+2
  4637  069F  0831               	movf	?___flmul+1,w
  4638  06A0  00D6               	movwf	_fround$1068+1
  4639  06A1  0830               	movf	?___flmul,w
  4640  06A2  00D5               	movwf	_fround$1068
  4641                           
  4642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4643  06A3  300A               	movlw	10
  4644  06A4  00A0               	movwf	___lwmod@divisor
  4645  06A5  3000               	movlw	0
  4646  06A6  00A1               	movwf	___lwmod@divisor+1
  4647  06A7  085D               	movf	fround@prec,w
  4648  06A8  00CE               	movwf	??_fround
  4649  06A9  01CF               	clrf	??_fround+1
  4650  06AA  084E               	movf	??_fround,w
  4651  06AB  00A2               	movwf	___lwmod@dividend
  4652  06AC  084F               	movf	??_fround+1,w
  4653  06AD  00A3               	movwf	___lwmod@dividend+1
  4654  06AE  160A  158A  223E  120A  118A  	fcall	___lwmod
  4655  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  4656  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  4657  06B5  0820               	movf	?___lwmod,w
  4658  06B6  00D0               	movwf	??_fround+2
  4659  06B7  3001               	movlw	1
  4660  06B8                     u4035:
  4661  06B8  1003               	clrc
  4662  06B9  0DD0               	rlf	??_fround+2,f
  4663  06BA  3EFF               	addlw	-1
  4664  06BB  1D03               	skipz
  4665  06BC  2EB8               	goto	u4035
  4666  06BD  1003               	clrc
  4667  06BE  0D50               	rlf	??_fround+2,w
  4668  06BF  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4669  06C0  0084               	movwf	4
  4670  06C1  160A  158A  200A  120A  118A  	fcall	stringdir
  4671  06C6  00D1               	movwf	??_fround+3
  4672  06C7  160A  158A  200A  120A  118A  	fcall	stringdir
  4673  06CC  00D2               	movwf	??_fround+4
  4674  06CD  160A  158A  200A  120A  118A  	fcall	stringdir
  4675  06D2  00D3               	movwf	??_fround+5
  4676  06D3  160A  158A  200A  120A  118A  	fcall	stringdir
  4677  06D8  00D4               	movwf	??_fround+6
  4678  06D9  0854               	movf	??_fround+6,w
  4679  06DA  00B3               	movwf	___flmul@b+3
  4680  06DB  0853               	movf	??_fround+5,w
  4681  06DC  00B2               	movwf	___flmul@b+2
  4682  06DD  0852               	movf	??_fround+4,w
  4683  06DE  00B1               	movwf	___flmul@b+1
  4684  06DF  0851               	movf	??_fround+3,w
  4685  06E0  00B0               	movwf	___flmul@b
  4686  06E1  0858               	movf	_fround$1068+3,w
  4687  06E2  00B7               	movwf	___flmul@a+3
  4688  06E3  0857               	movf	_fround$1068+2,w
  4689  06E4  00B6               	movwf	___flmul@a+2
  4690  06E5  0856               	movf	_fround$1068+1,w
  4691  06E6  00B5               	movwf	___flmul@a+1
  4692  06E7  0855               	movf	_fround$1068,w
  4693  06E8  00B4               	movwf	___flmul@a
  4694  06E9  120A  158A  213C  120A  118A  	fcall	___flmul
  4695  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  4696  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  4697  06F0  0833               	movf	?___flmul+3,w
  4698  06F1  00CD               	movwf	?_fround+3
  4699  06F2  0832               	movf	?___flmul+2,w
  4700  06F3  00CC               	movwf	?_fround+2
  4701  06F4  0831               	movf	?___flmul+1,w
  4702  06F5  00CB               	movwf	?_fround+1
  4703  06F6  0830               	movf	?___flmul,w
  4704  06F7  00CA               	movwf	?_fround
  4705  06F8  2FED               	goto	l331
  4706  06F9                     l2882:
  4707  06F9  300B               	movlw	11
  4708  06FA  025D               	subwf	fround@prec,w
  4709  06FB  1C03               	skipc
  4710  06FC  2EFE               	goto	u4041
  4711  06FD  2EFF               	goto	u4040
  4712  06FE                     u4041:
  4713  06FE  2FAA               	goto	l2888
  4714  06FF                     u4040:
  4715  06FF                     l2884:
  4716                           
  4717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4718  06FF  303F               	movlw	63
  4719  0700  00B3               	movwf	___flmul@b+3
  4720  0701  3000               	movlw	0
  4721  0702  00B2               	movwf	___flmul@b+2
  4722  0703  3000               	movlw	0
  4723  0704  00B1               	movwf	___flmul@b+1
  4724  0705  3000               	movlw	0
  4725  0706  00B0               	movwf	___flmul@b
  4726  0707  300A               	movlw	10
  4727  0708  00A6               	movwf	___lwdiv@divisor
  4728  0709  3000               	movlw	0
  4729  070A  00A7               	movwf	___lwdiv@divisor+1
  4730  070B  085D               	movf	fround@prec,w
  4731  070C  00CE               	movwf	??_fround
  4732  070D  01CF               	clrf	??_fround+1
  4733  070E  084E               	movf	??_fround,w
  4734  070F  00A8               	movwf	___lwdiv@dividend
  4735  0710  084F               	movf	??_fround+1,w
  4736  0711  00A9               	movwf	___lwdiv@dividend+1
  4737  0712  160A  158A  227A  120A  118A  	fcall	___lwdiv
  4738  0717  1283               	bcf	3,5	;RP0=0, select bank0
  4739  0718  1303               	bcf	3,6	;RP1=0, select bank0
  4740  0719  0826               	movf	?___lwdiv,w
  4741  071A  00D0               	movwf	??_fround+2
  4742  071B  3001               	movlw	1
  4743  071C                     u4055:
  4744  071C  1003               	clrc
  4745  071D  0DD0               	rlf	??_fround+2,f
  4746  071E  3EFF               	addlw	-1
  4747  071F  1D03               	skipz
  4748  0720  2F1C               	goto	u4055
  4749  0721  1003               	clrc
  4750  0722  0D50               	rlf	??_fround+2,w
  4751  0723  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4752  0724  0084               	movwf	4
  4753  0725  160A  158A  200A  120A  118A  	fcall	stringdir
  4754  072A  00D1               	movwf	??_fround+3
  4755  072B  160A  158A  200A  120A  118A  	fcall	stringdir
  4756  0730  00D2               	movwf	??_fround+4
  4757  0731  160A  158A  200A  120A  118A  	fcall	stringdir
  4758  0736  00D3               	movwf	??_fround+5
  4759  0737  160A  158A  200A  120A  118A  	fcall	stringdir
  4760  073C  00D4               	movwf	??_fround+6
  4761  073D  0854               	movf	??_fround+6,w
  4762  073E  00B7               	movwf	___flmul@a+3
  4763  073F  0853               	movf	??_fround+5,w
  4764  0740  00B6               	movwf	___flmul@a+2
  4765  0741  0852               	movf	??_fround+4,w
  4766  0742  00B5               	movwf	___flmul@a+1
  4767  0743  0851               	movf	??_fround+3,w
  4768  0744  00B4               	movwf	___flmul@a
  4769  0745  120A  158A  213C  120A  118A  	fcall	___flmul
  4770  074A  1283               	bcf	3,5	;RP0=0, select bank0
  4771  074B  1303               	bcf	3,6	;RP1=0, select bank0
  4772  074C  0833               	movf	?___flmul+3,w
  4773  074D  00DC               	movwf	_fround$1067+3
  4774  074E  0832               	movf	?___flmul+2,w
  4775  074F  00DB               	movwf	_fround$1067+2
  4776  0750  0831               	movf	?___flmul+1,w
  4777  0751  00DA               	movwf	_fround$1067+1
  4778  0752  0830               	movf	?___flmul,w
  4779  0753  00D9               	movwf	_fround$1067
  4780                           
  4781                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4782  0754  300A               	movlw	10
  4783  0755  00A0               	movwf	___lwmod@divisor
  4784  0756  3000               	movlw	0
  4785  0757  00A1               	movwf	___lwmod@divisor+1
  4786  0758  085D               	movf	fround@prec,w
  4787  0759  00CE               	movwf	??_fround
  4788  075A  01CF               	clrf	??_fround+1
  4789  075B  084E               	movf	??_fround,w
  4790  075C  00A2               	movwf	___lwmod@dividend
  4791  075D  084F               	movf	??_fround+1,w
  4792  075E  00A3               	movwf	___lwmod@dividend+1
  4793  075F  160A  158A  223E  120A  118A  	fcall	___lwmod
  4794  0764  1283               	bcf	3,5	;RP0=0, select bank0
  4795  0765  1303               	bcf	3,6	;RP1=0, select bank0
  4796  0766  0820               	movf	?___lwmod,w
  4797  0767  00D0               	movwf	??_fround+2
  4798  0768  3001               	movlw	1
  4799  0769                     u4065:
  4800  0769  1003               	clrc
  4801  076A  0DD0               	rlf	??_fround+2,f
  4802  076B  3EFF               	addlw	-1
  4803  076C  1D03               	skipz
  4804  076D  2F69               	goto	u4065
  4805  076E  1003               	clrc
  4806  076F  0D50               	rlf	??_fround+2,w
  4807  0770  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4808  0771  0084               	movwf	4
  4809  0772  160A  158A  200A  120A  118A  	fcall	stringdir
  4810  0777  00D1               	movwf	??_fround+3
  4811  0778  160A  158A  200A  120A  118A  	fcall	stringdir
  4812  077D  00D2               	movwf	??_fround+4
  4813  077E  160A  158A  200A  120A  118A  	fcall	stringdir
  4814  0783  00D3               	movwf	??_fround+5
  4815  0784  160A  158A  200A  120A  118A  	fcall	stringdir
  4816  0789  00D4               	movwf	??_fround+6
  4817  078A  0854               	movf	??_fround+6,w
  4818  078B  00B3               	movwf	___flmul@b+3
  4819  078C  0853               	movf	??_fround+5,w
  4820  078D  00B2               	movwf	___flmul@b+2
  4821  078E  0852               	movf	??_fround+4,w
  4822  078F  00B1               	movwf	___flmul@b+1
  4823  0790  0851               	movf	??_fround+3,w
  4824  0791  00B0               	movwf	___flmul@b
  4825  0792  085C               	movf	_fround$1067+3,w
  4826  0793  00B7               	movwf	___flmul@a+3
  4827  0794  085B               	movf	_fround$1067+2,w
  4828  0795  00B6               	movwf	___flmul@a+2
  4829  0796  085A               	movf	_fround$1067+1,w
  4830  0797  00B5               	movwf	___flmul@a+1
  4831  0798  0859               	movf	_fround$1067,w
  4832  0799  00B4               	movwf	___flmul@a
  4833  079A  120A  158A  213C  120A  118A  	fcall	___flmul
  4834  079F  1283               	bcf	3,5	;RP0=0, select bank0
  4835  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  4836  07A1  0833               	movf	?___flmul+3,w
  4837  07A2  00CD               	movwf	?_fround+3
  4838  07A3  0832               	movf	?___flmul+2,w
  4839  07A4  00CC               	movwf	?_fround+2
  4840  07A5  0831               	movf	?___flmul+1,w
  4841  07A6  00CB               	movwf	?_fround+1
  4842  07A7  0830               	movf	?___flmul,w
  4843  07A8  00CA               	movwf	?_fround
  4844  07A9  2FED               	goto	l331
  4845  07AA                     l2888:
  4846                           
  4847                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4848  07AA  303F               	movlw	63
  4849  07AB  00B3               	movwf	___flmul@b+3
  4850  07AC  3000               	movlw	0
  4851  07AD  00B2               	movwf	___flmul@b+2
  4852  07AE  3000               	movlw	0
  4853  07AF  00B1               	movwf	___flmul@b+1
  4854  07B0  3000               	movlw	0
  4855  07B1  00B0               	movwf	___flmul@b
  4856  07B2  085D               	movf	fround@prec,w
  4857  07B3  00CE               	movwf	??_fround
  4858  07B4  3001               	movlw	1
  4859  07B5                     u4075:
  4860  07B5  1003               	clrc
  4861  07B6  0DCE               	rlf	??_fround,f
  4862  07B7  3EFF               	addlw	-1
  4863  07B8  1D03               	skipz
  4864  07B9  2FB5               	goto	u4075
  4865  07BA  1003               	clrc
  4866  07BB  0D4E               	rlf	??_fround,w
  4867  07BC  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4868  07BD  0084               	movwf	4
  4869  07BE  160A  158A  200A  120A  118A  	fcall	stringdir
  4870  07C3  00CF               	movwf	??_fround+1
  4871  07C4  160A  158A  200A  120A  118A  	fcall	stringdir
  4872  07C9  00D0               	movwf	??_fround+2
  4873  07CA  160A  158A  200A  120A  118A  	fcall	stringdir
  4874  07CF  00D1               	movwf	??_fround+3
  4875  07D0  160A  158A  200A  120A  118A  	fcall	stringdir
  4876  07D5  00D2               	movwf	??_fround+4
  4877  07D6  0852               	movf	??_fround+4,w
  4878  07D7  00B7               	movwf	___flmul@a+3
  4879  07D8  0851               	movf	??_fround+3,w
  4880  07D9  00B6               	movwf	___flmul@a+2
  4881  07DA  0850               	movf	??_fround+2,w
  4882  07DB  00B5               	movwf	___flmul@a+1
  4883  07DC  084F               	movf	??_fround+1,w
  4884  07DD  00B4               	movwf	___flmul@a
  4885  07DE  120A  158A  213C  120A  118A  	fcall	___flmul
  4886  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  4887  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  4888  07E5  0833               	movf	?___flmul+3,w
  4889  07E6  00CD               	movwf	?_fround+3
  4890  07E7  0832               	movf	?___flmul+2,w
  4891  07E8  00CC               	movwf	?_fround+2
  4892  07E9  0831               	movf	?___flmul+1,w
  4893  07EA  00CB               	movwf	?_fround+1
  4894  07EB  0830               	movf	?___flmul,w
  4895  07EC  00CA               	movwf	?_fround
  4896  07ED                     l331:
  4897  07ED  0008               	return
  4898  07EE                     __end_of_fround:
  4899                           
  4900                           	psect	text14
  4901  1A3E                     __ptext14:	
  4902 ;; *************** function ___lwmod *****************
  4903 ;; Defined at:
  4904 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  divisor         2    0[BANK0 ] unsigned int 
  4907 ;;  dividend        2    2[BANK0 ] unsigned int 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;  counter         1    5[BANK0 ] unsigned char 
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  2    0[BANK0 ] unsigned int 
  4912 ;; Registers used:
  4913 ;;		wreg, status,2, status,0
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4919 ;;      Params:         0       4       0       0       0
  4920 ;;      Locals:         0       1       0       0       0
  4921 ;;      Temps:          0       1       0       0       0
  4922 ;;      Totals:         0       6       0       0       0
  4923 ;;Total ram usage:        6 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; Hardware stack levels required when called:    2
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_fround
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           
  4934                           ;psect for function ___lwmod
  4935  1A3E                     ___lwmod:
  4936  1A3E                     l2498:	
  4937                           ;incstack = 0
  4938                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4939                           
  4940  1A3E  1283               	bcf	3,5	;RP0=0, select bank0
  4941  1A3F  1303               	bcf	3,6	;RP1=0, select bank0
  4942  1A40  0820               	movf	___lwmod@divisor,w
  4943  1A41  0421               	iorwf	___lwmod@divisor+1,w
  4944  1A42  1903               	btfsc	3,2
  4945  1A43  2A45               	goto	u3111
  4946  1A44  2A46               	goto	u3110
  4947  1A45                     u3111:
  4948  1A45  2A75               	goto	l2516
  4949  1A46                     u3110:
  4950  1A46                     l2500:
  4951  1A46  01A5               	clrf	___lwmod@counter
  4952  1A47  0AA5               	incf	___lwmod@counter,f
  4953  1A48  2A54               	goto	l2506
  4954  1A49                     l2502:
  4955  1A49  3001               	movlw	1
  4956  1A4A                     u3125:
  4957  1A4A  1003               	clrc
  4958  1A4B  0DA0               	rlf	___lwmod@divisor,f
  4959  1A4C  0DA1               	rlf	___lwmod@divisor+1,f
  4960  1A4D  3EFF               	addlw	-1
  4961  1A4E  1D03               	skipz
  4962  1A4F  2A4A               	goto	u3125
  4963  1A50                     l2504:
  4964  1A50  3001               	movlw	1
  4965  1A51  00A4               	movwf	??___lwmod
  4966  1A52  0824               	movf	??___lwmod,w
  4967  1A53  07A5               	addwf	___lwmod@counter,f
  4968  1A54                     l2506:
  4969  1A54  1FA1               	btfss	___lwmod@divisor+1,7
  4970  1A55  2A57               	goto	u3131
  4971  1A56  2A58               	goto	u3130
  4972  1A57                     u3131:
  4973  1A57  2A49               	goto	l2502
  4974  1A58                     u3130:
  4975  1A58                     l2508:
  4976  1A58  0821               	movf	___lwmod@divisor+1,w
  4977  1A59  0223               	subwf	___lwmod@dividend+1,w
  4978  1A5A  1D03               	skipz
  4979  1A5B  2A5E               	goto	u3145
  4980  1A5C  0820               	movf	___lwmod@divisor,w
  4981  1A5D  0222               	subwf	___lwmod@dividend,w
  4982  1A5E                     u3145:
  4983  1A5E  1C03               	skipc
  4984  1A5F  2A61               	goto	u3141
  4985  1A60  2A62               	goto	u3140
  4986  1A61                     u3141:
  4987  1A61  2A68               	goto	l2512
  4988  1A62                     u3140:
  4989  1A62                     l2510:
  4990  1A62  0820               	movf	___lwmod@divisor,w
  4991  1A63  02A2               	subwf	___lwmod@dividend,f
  4992  1A64  0821               	movf	___lwmod@divisor+1,w
  4993  1A65  1C03               	skipc
  4994  1A66  03A3               	decf	___lwmod@dividend+1,f
  4995  1A67  02A3               	subwf	___lwmod@dividend+1,f
  4996  1A68                     l2512:
  4997  1A68  3001               	movlw	1
  4998  1A69                     u3155:
  4999  1A69  1003               	clrc
  5000  1A6A  0CA1               	rrf	___lwmod@divisor+1,f
  5001  1A6B  0CA0               	rrf	___lwmod@divisor,f
  5002  1A6C  3EFF               	addlw	-1
  5003  1A6D  1D03               	skipz
  5004  1A6E  2A69               	goto	u3155
  5005  1A6F                     l2514:
  5006  1A6F  3001               	movlw	1
  5007  1A70  02A5               	subwf	___lwmod@counter,f
  5008  1A71  1D03               	btfss	3,2
  5009  1A72  2A74               	goto	u3161
  5010  1A73  2A75               	goto	u3160
  5011  1A74                     u3161:
  5012  1A74  2A58               	goto	l2508
  5013  1A75                     u3160:
  5014  1A75                     l2516:
  5015  1A75  0823               	movf	___lwmod@dividend+1,w
  5016  1A76  00A1               	movwf	?___lwmod+1
  5017  1A77  0822               	movf	___lwmod@dividend,w
  5018  1A78  00A0               	movwf	?___lwmod
  5019  1A79                     l741:
  5020  1A79  0008               	return
  5021  1A7A                     __end_of___lwmod:
  5022                           
  5023                           	psect	text15
  5024  1A7A                     __ptext15:	
  5025 ;; *************** function ___lwdiv *****************
  5026 ;; Defined at:
  5027 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  divisor         2    6[BANK0 ] unsigned int 
  5030 ;;  dividend        2    8[BANK0 ] unsigned int 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  quotient        2   11[BANK0 ] unsigned int 
  5033 ;;  counter         1   13[BANK0 ] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  2    6[BANK0 ] unsigned int 
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5043 ;;      Params:         0       4       0       0       0
  5044 ;;      Locals:         0       3       0       0       0
  5045 ;;      Temps:          0       1       0       0       0
  5046 ;;      Totals:         0       8       0       0       0
  5047 ;;Total ram usage:        8 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    2
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_fround
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           
  5058                           ;psect for function ___lwdiv
  5059  1A7A                     ___lwdiv:
  5060  1A7A                     l2472:	
  5061                           ;incstack = 0
  5062                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5063                           
  5064  1A7A  1283               	bcf	3,5	;RP0=0, select bank0
  5065  1A7B  1303               	bcf	3,6	;RP1=0, select bank0
  5066  1A7C  01AB               	clrf	___lwdiv@quotient
  5067  1A7D  01AC               	clrf	___lwdiv@quotient+1
  5068  1A7E                     l2474:
  5069  1A7E  0826               	movf	___lwdiv@divisor,w
  5070  1A7F  0427               	iorwf	___lwdiv@divisor+1,w
  5071  1A80  1903               	btfsc	3,2
  5072  1A81  2A83               	goto	u3041
  5073  1A82  2A84               	goto	u3040
  5074  1A83                     u3041:
  5075  1A83  2ABB               	goto	l2494
  5076  1A84                     u3040:
  5077  1A84                     l2476:
  5078  1A84  01AD               	clrf	___lwdiv@counter
  5079  1A85  0AAD               	incf	___lwdiv@counter,f
  5080  1A86  2A92               	goto	l2482
  5081  1A87                     l2478:
  5082  1A87  3001               	movlw	1
  5083  1A88                     u3055:
  5084  1A88  1003               	clrc
  5085  1A89  0DA6               	rlf	___lwdiv@divisor,f
  5086  1A8A  0DA7               	rlf	___lwdiv@divisor+1,f
  5087  1A8B  3EFF               	addlw	-1
  5088  1A8C  1D03               	skipz
  5089  1A8D  2A88               	goto	u3055
  5090  1A8E                     l2480:
  5091  1A8E  3001               	movlw	1
  5092  1A8F  00AA               	movwf	??___lwdiv
  5093  1A90  082A               	movf	??___lwdiv,w
  5094  1A91  07AD               	addwf	___lwdiv@counter,f
  5095  1A92                     l2482:
  5096  1A92  1FA7               	btfss	___lwdiv@divisor+1,7
  5097  1A93  2A95               	goto	u3061
  5098  1A94  2A96               	goto	u3060
  5099  1A95                     u3061:
  5100  1A95  2A87               	goto	l2478
  5101  1A96                     u3060:
  5102  1A96                     l2484:
  5103  1A96  3001               	movlw	1
  5104  1A97                     u3075:
  5105  1A97  1003               	clrc
  5106  1A98  0DAB               	rlf	___lwdiv@quotient,f
  5107  1A99  0DAC               	rlf	___lwdiv@quotient+1,f
  5108  1A9A  3EFF               	addlw	-1
  5109  1A9B  1D03               	skipz
  5110  1A9C  2A97               	goto	u3075
  5111  1A9D  0827               	movf	___lwdiv@divisor+1,w
  5112  1A9E  0229               	subwf	___lwdiv@dividend+1,w
  5113  1A9F  1D03               	skipz
  5114  1AA0  2AA3               	goto	u3085
  5115  1AA1  0826               	movf	___lwdiv@divisor,w
  5116  1AA2  0228               	subwf	___lwdiv@dividend,w
  5117  1AA3                     u3085:
  5118  1AA3  1C03               	skipc
  5119  1AA4  2AA6               	goto	u3081
  5120  1AA5  2AA7               	goto	u3080
  5121  1AA6                     u3081:
  5122  1AA6  2AAE               	goto	l2490
  5123  1AA7                     u3080:
  5124  1AA7                     l2486:
  5125  1AA7  0826               	movf	___lwdiv@divisor,w
  5126  1AA8  02A8               	subwf	___lwdiv@dividend,f
  5127  1AA9  0827               	movf	___lwdiv@divisor+1,w
  5128  1AAA  1C03               	skipc
  5129  1AAB  03A9               	decf	___lwdiv@dividend+1,f
  5130  1AAC  02A9               	subwf	___lwdiv@dividend+1,f
  5131  1AAD                     l2488:
  5132  1AAD  142B               	bsf	___lwdiv@quotient,0
  5133  1AAE                     l2490:
  5134  1AAE  3001               	movlw	1
  5135  1AAF                     u3095:
  5136  1AAF  1003               	clrc
  5137  1AB0  0CA7               	rrf	___lwdiv@divisor+1,f
  5138  1AB1  0CA6               	rrf	___lwdiv@divisor,f
  5139  1AB2  3EFF               	addlw	-1
  5140  1AB3  1D03               	skipz
  5141  1AB4  2AAF               	goto	u3095
  5142  1AB5                     l2492:
  5143  1AB5  3001               	movlw	1
  5144  1AB6  02AD               	subwf	___lwdiv@counter,f
  5145  1AB7  1D03               	btfss	3,2
  5146  1AB8  2ABA               	goto	u3101
  5147  1AB9  2ABB               	goto	u3100
  5148  1ABA                     u3101:
  5149  1ABA  2A96               	goto	l2484
  5150  1ABB                     u3100:
  5151  1ABB                     l2494:
  5152  1ABB  082C               	movf	___lwdiv@quotient+1,w
  5153  1ABC  00A7               	movwf	?___lwdiv+1
  5154  1ABD  082B               	movf	___lwdiv@quotient,w
  5155  1ABE  00A6               	movwf	?___lwdiv
  5156  1ABF                     l731:
  5157  1ABF  0008               	return
  5158  1AC0                     __end_of___lwdiv:
  5159                           
  5160                           	psect	text16
  5161  093C                     __ptext16:	
  5162 ;; *************** function ___flmul *****************
  5163 ;; Defined at:
  5164 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  b               4   16[BANK0 ] unsigned int 
  5167 ;;  a               4   20[BANK0 ] unsigned int 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;  prod            4   36[BANK0 ] struct .
  5170 ;;  grs             4   30[BANK0 ] unsigned long 
  5171 ;;  temp            2   40[BANK0 ] struct .
  5172 ;;  bexp            1   35[BANK0 ] unsigned char 
  5173 ;;  aexp            1   34[BANK0 ] unsigned char 
  5174 ;;  sign            1   29[BANK0 ] unsigned char 
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  4   16[BANK0 ] unsigned char 
  5177 ;; Registers used:
  5178 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5184 ;;      Params:         0       8       0       0       0
  5185 ;;      Locals:         0      13       0       0       0
  5186 ;;      Temps:          0       5       0       0       0
  5187 ;;      Totals:         0      26       0       0       0
  5188 ;;Total ram usage:       26 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; Hardware stack levels required when called:    3
  5191 ;; This function calls:
  5192 ;;		__Umul8_16
  5193 ;; This function is called by:
  5194 ;;		_fround
  5195 ;;		_scale
  5196 ;;		_sprintf
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           
  5201                           ;psect for function ___flmul
  5202  093C                     ___flmul:
  5203  093C                     l2714:	
  5204                           ;incstack = 0
  5205                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5206                           
  5207  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5208  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5209  093E  0833               	movf	___flmul@b+3,w
  5210  093F  3980               	andlw	128
  5211  0940  00B8               	movwf	??___flmul
  5212  0941  0838               	movf	??___flmul,w
  5213  0942  00BD               	movwf	___flmul@sign
  5214  0943                     l2716:
  5215  0943  0833               	movf	___flmul@b+3,w
  5216  0944  00B8               	movwf	??___flmul
  5217  0945  0738               	addwf	??___flmul,w
  5218  0946  00B9               	movwf	??___flmul+1
  5219  0947  0839               	movf	??___flmul+1,w
  5220  0948  00C3               	movwf	___flmul@bexp
  5221  0949                     l2718:
  5222  0949  1FB2               	btfss	___flmul@b+2,7
  5223  094A  294C               	goto	u3631
  5224  094B  294D               	goto	u3630
  5225  094C                     u3631:
  5226  094C  294E               	goto	l2722
  5227  094D                     u3630:
  5228  094D                     l2720:
  5229  094D  1443               	bsf	___flmul@bexp,0
  5230  094E                     l2722:
  5231  094E  0843               	movf	___flmul@bexp,w
  5232  094F  1903               	btfsc	3,2
  5233  0950  2952               	goto	u3641
  5234  0951  2953               	goto	u3640
  5235  0952                     u3641:
  5236  0952  2962               	goto	l2730
  5237  0953                     u3640:
  5238  0953                     l2724:
  5239  0953  0A43               	incf	___flmul@bexp,w
  5240  0954  1D03               	btfss	3,2
  5241  0955  2957               	goto	u3651
  5242  0956  2958               	goto	u3650
  5243  0957                     u3651:
  5244  0957  2960               	goto	l2728
  5245  0958                     u3650:
  5246  0958                     l2726:
  5247  0958  3000               	movlw	0
  5248  0959  00B3               	movwf	___flmul@b+3
  5249  095A  3000               	movlw	0
  5250  095B  00B2               	movwf	___flmul@b+2
  5251  095C  3000               	movlw	0
  5252  095D  00B1               	movwf	___flmul@b+1
  5253  095E  3000               	movlw	0
  5254  095F  00B0               	movwf	___flmul@b
  5255  0960                     l2728:
  5256  0960  17B2               	bsf	___flmul@b+2,7
  5257  0961  296A               	goto	l2732
  5258  0962                     l2730:
  5259  0962  3000               	movlw	0
  5260  0963  00B3               	movwf	___flmul@b+3
  5261  0964  3000               	movlw	0
  5262  0965  00B2               	movwf	___flmul@b+2
  5263  0966  3000               	movlw	0
  5264  0967  00B1               	movwf	___flmul@b+1
  5265  0968  3000               	movlw	0
  5266  0969  00B0               	movwf	___flmul@b
  5267  096A                     l2732:
  5268  096A  0837               	movf	___flmul@a+3,w
  5269  096B  3980               	andlw	128
  5270  096C  00B8               	movwf	??___flmul
  5271  096D  0838               	movf	??___flmul,w
  5272  096E  06BD               	xorwf	___flmul@sign,f
  5273  096F                     l2734:
  5274  096F  0837               	movf	___flmul@a+3,w
  5275  0970  00B8               	movwf	??___flmul
  5276  0971  0738               	addwf	??___flmul,w
  5277  0972  00B9               	movwf	??___flmul+1
  5278  0973  0839               	movf	??___flmul+1,w
  5279  0974  00C2               	movwf	___flmul@aexp
  5280  0975                     l2736:
  5281  0975  1FB6               	btfss	___flmul@a+2,7
  5282  0976  2978               	goto	u3661
  5283  0977  2979               	goto	u3660
  5284  0978                     u3661:
  5285  0978  297A               	goto	l2740
  5286  0979                     u3660:
  5287  0979                     l2738:
  5288  0979  1442               	bsf	___flmul@aexp,0
  5289  097A                     l2740:
  5290  097A  0842               	movf	___flmul@aexp,w
  5291  097B  1903               	btfsc	3,2
  5292  097C  297E               	goto	u3671
  5293  097D  297F               	goto	u3670
  5294  097E                     u3671:
  5295  097E  298E               	goto	l2748
  5296  097F                     u3670:
  5297  097F                     l2742:
  5298  097F  0A42               	incf	___flmul@aexp,w
  5299  0980  1D03               	btfss	3,2
  5300  0981  2983               	goto	u3681
  5301  0982  2984               	goto	u3680
  5302  0983                     u3681:
  5303  0983  298C               	goto	l2746
  5304  0984                     u3680:
  5305  0984                     l2744:
  5306  0984  3000               	movlw	0
  5307  0985  00B7               	movwf	___flmul@a+3
  5308  0986  3000               	movlw	0
  5309  0987  00B6               	movwf	___flmul@a+2
  5310  0988  3000               	movlw	0
  5311  0989  00B5               	movwf	___flmul@a+1
  5312  098A  3000               	movlw	0
  5313  098B  00B4               	movwf	___flmul@a
  5314  098C                     l2746:
  5315  098C  17B6               	bsf	___flmul@a+2,7
  5316  098D  2996               	goto	l2750
  5317  098E                     l2748:
  5318  098E  3000               	movlw	0
  5319  098F  00B7               	movwf	___flmul@a+3
  5320  0990  3000               	movlw	0
  5321  0991  00B6               	movwf	___flmul@a+2
  5322  0992  3000               	movlw	0
  5323  0993  00B5               	movwf	___flmul@a+1
  5324  0994  3000               	movlw	0
  5325  0995  00B4               	movwf	___flmul@a
  5326  0996                     l2750:
  5327  0996  0842               	movf	___flmul@aexp,w
  5328  0997  1903               	btfsc	3,2
  5329  0998  299A               	goto	u3691
  5330  0999  299B               	goto	u3690
  5331  099A                     u3691:
  5332  099A  29A0               	goto	l2754
  5333  099B                     u3690:
  5334  099B                     l2752:
  5335  099B  0843               	movf	___flmul@bexp,w
  5336  099C  1D03               	btfss	3,2
  5337  099D  299F               	goto	u3701
  5338  099E  29A0               	goto	u3700
  5339  099F                     u3701:
  5340  099F  29A9               	goto	l2758
  5341  09A0                     u3700:
  5342  09A0                     l2754:
  5343  09A0  3000               	movlw	0
  5344  09A1  00B3               	movwf	?___flmul+3
  5345  09A2  3000               	movlw	0
  5346  09A3  00B2               	movwf	?___flmul+2
  5347  09A4  3000               	movlw	0
  5348  09A5  00B1               	movwf	?___flmul+1
  5349  09A6  3000               	movlw	0
  5350  09A7  00B0               	movwf	?___flmul
  5351  09A8  2C9C               	goto	l848
  5352  09A9                     l2758:
  5353  09A9  0830               	movf	___flmul@b,w
  5354  09AA  00B8               	movwf	??___flmul
  5355  09AB  0838               	movf	??___flmul,w
  5356  09AC  00A0               	movwf	__Umul8_16@multiplicand
  5357  09AD  0836               	movf	___flmul@a+2,w
  5358  09AE  160A  158A  21DE  120A  158A  	fcall	__Umul8_16
  5359  09B3  1283               	bcf	3,5	;RP0=0, select bank0
  5360  09B4  1303               	bcf	3,6	;RP1=0, select bank0
  5361  09B5  0821               	movf	?__Umul8_16+1,w
  5362  09B6  00C9               	movwf	___flmul@temp+1
  5363  09B7  0820               	movf	?__Umul8_16,w
  5364  09B8  00C8               	movwf	___flmul@temp
  5365  09B9                     l2760:
  5366  09B9  0848               	movf	___flmul@temp,w
  5367  09BA  00B8               	movwf	??___flmul
  5368  09BB  01B9               	clrf	??___flmul+1
  5369  09BC  01BA               	clrf	??___flmul+2
  5370  09BD  01BB               	clrf	??___flmul+3
  5371  09BE  083B               	movf	??___flmul+3,w
  5372  09BF  00C1               	movwf	___flmul@grs+3
  5373  09C0  083A               	movf	??___flmul+2,w
  5374  09C1  00C0               	movwf	___flmul@grs+2
  5375  09C2  0839               	movf	??___flmul+1,w
  5376  09C3  00BF               	movwf	___flmul@grs+1
  5377  09C4  0838               	movf	??___flmul,w
  5378  09C5  00BE               	movwf	___flmul@grs
  5379  09C6                     l2762:
  5380  09C6  0849               	movf	___flmul@temp+1,w
  5381  09C7  00B8               	movwf	??___flmul
  5382  09C8  01B9               	clrf	??___flmul+1
  5383  09C9  01BA               	clrf	??___flmul+2
  5384  09CA  01BB               	clrf	??___flmul+3
  5385  09CB  083B               	movf	??___flmul+3,w
  5386  09CC  00C7               	movwf	___flmul@prod+3
  5387  09CD  083A               	movf	??___flmul+2,w
  5388  09CE  00C6               	movwf	___flmul@prod+2
  5389  09CF  0839               	movf	??___flmul+1,w
  5390  09D0  00C5               	movwf	___flmul@prod+1
  5391  09D1  0838               	movf	??___flmul,w
  5392  09D2  00C4               	movwf	___flmul@prod
  5393  09D3  0831               	movf	___flmul@b+1,w
  5394  09D4  00B8               	movwf	??___flmul
  5395  09D5  0838               	movf	??___flmul,w
  5396  09D6  00A0               	movwf	__Umul8_16@multiplicand
  5397  09D7  0835               	movf	___flmul@a+1,w
  5398  09D8  160A  158A  21DE  120A  158A  	fcall	__Umul8_16
  5399  09DD  1283               	bcf	3,5	;RP0=0, select bank0
  5400  09DE  1303               	bcf	3,6	;RP1=0, select bank0
  5401  09DF  0821               	movf	?__Umul8_16+1,w
  5402  09E0  00C9               	movwf	___flmul@temp+1
  5403  09E1  0820               	movf	?__Umul8_16,w
  5404  09E2  00C8               	movwf	___flmul@temp
  5405  09E3                     l2764:
  5406  09E3  0848               	movf	___flmul@temp,w
  5407  09E4  00B8               	movwf	??___flmul
  5408  09E5  01B9               	clrf	??___flmul+1
  5409  09E6  01BA               	clrf	??___flmul+2
  5410  09E7  01BB               	clrf	??___flmul+3
  5411  09E8  0838               	movf	??___flmul,w
  5412  09E9  07BE               	addwf	___flmul@grs,f
  5413  09EA  0839               	movf	??___flmul+1,w
  5414  09EB  1103               	clrz
  5415  09EC  1803               	skipnc
  5416  09ED  3E01               	addlw	1
  5417  09EE  1903               	skipnz
  5418  09EF  29F1               	goto	u3711
  5419  09F0  07BF               	addwf	___flmul@grs+1,f
  5420  09F1                     u3711:
  5421  09F1  083A               	movf	??___flmul+2,w
  5422  09F2  1103               	clrz
  5423  09F3  1803               	skipnc
  5424  09F4  3E01               	addlw	1
  5425  09F5  1903               	skipnz
  5426  09F6  29F8               	goto	u3712
  5427  09F7  07C0               	addwf	___flmul@grs+2,f
  5428  09F8                     u3712:
  5429  09F8  083B               	movf	??___flmul+3,w
  5430  09F9  1103               	clrz
  5431  09FA  1803               	skipnc
  5432  09FB  3E01               	addlw	1
  5433  09FC  1903               	skipnz
  5434  09FD  29FF               	goto	u3713
  5435  09FE  07C1               	addwf	___flmul@grs+3,f
  5436  09FF                     u3713:
  5437  09FF                     l2766:
  5438  09FF  0849               	movf	___flmul@temp+1,w
  5439  0A00  00B8               	movwf	??___flmul
  5440  0A01  01B9               	clrf	??___flmul+1
  5441  0A02  01BA               	clrf	??___flmul+2
  5442  0A03  01BB               	clrf	??___flmul+3
  5443  0A04  0838               	movf	??___flmul,w
  5444  0A05  07C4               	addwf	___flmul@prod,f
  5445  0A06  0839               	movf	??___flmul+1,w
  5446  0A07  1103               	clrz
  5447  0A08  1803               	skipnc
  5448  0A09  3E01               	addlw	1
  5449  0A0A  1903               	skipnz
  5450  0A0B  2A0D               	goto	u3721
  5451  0A0C  07C5               	addwf	___flmul@prod+1,f
  5452  0A0D                     u3721:
  5453  0A0D  083A               	movf	??___flmul+2,w
  5454  0A0E  1103               	clrz
  5455  0A0F  1803               	skipnc
  5456  0A10  3E01               	addlw	1
  5457  0A11  1903               	skipnz
  5458  0A12  2A14               	goto	u3722
  5459  0A13  07C6               	addwf	___flmul@prod+2,f
  5460  0A14                     u3722:
  5461  0A14  083B               	movf	??___flmul+3,w
  5462  0A15  1103               	clrz
  5463  0A16  1803               	skipnc
  5464  0A17  3E01               	addlw	1
  5465  0A18  1903               	skipnz
  5466  0A19  2A1B               	goto	u3723
  5467  0A1A  07C7               	addwf	___flmul@prod+3,f
  5468  0A1B                     u3723:
  5469  0A1B  0832               	movf	___flmul@b+2,w
  5470  0A1C  00B8               	movwf	??___flmul
  5471  0A1D  0838               	movf	??___flmul,w
  5472  0A1E  00A0               	movwf	__Umul8_16@multiplicand
  5473  0A1F  0834               	movf	___flmul@a,w
  5474  0A20  160A  158A  21DE  120A  158A  	fcall	__Umul8_16
  5475  0A25  1283               	bcf	3,5	;RP0=0, select bank0
  5476  0A26  1303               	bcf	3,6	;RP1=0, select bank0
  5477  0A27  0821               	movf	?__Umul8_16+1,w
  5478  0A28  00C9               	movwf	___flmul@temp+1
  5479  0A29  0820               	movf	?__Umul8_16,w
  5480  0A2A  00C8               	movwf	___flmul@temp
  5481  0A2B                     l2768:
  5482  0A2B  0848               	movf	___flmul@temp,w
  5483  0A2C  00B8               	movwf	??___flmul
  5484  0A2D  01B9               	clrf	??___flmul+1
  5485  0A2E  01BA               	clrf	??___flmul+2
  5486  0A2F  01BB               	clrf	??___flmul+3
  5487  0A30  0838               	movf	??___flmul,w
  5488  0A31  07BE               	addwf	___flmul@grs,f
  5489  0A32  0839               	movf	??___flmul+1,w
  5490  0A33  1103               	clrz
  5491  0A34  1803               	skipnc
  5492  0A35  3E01               	addlw	1
  5493  0A36  1903               	skipnz
  5494  0A37  2A39               	goto	u3731
  5495  0A38  07BF               	addwf	___flmul@grs+1,f
  5496  0A39                     u3731:
  5497  0A39  083A               	movf	??___flmul+2,w
  5498  0A3A  1103               	clrz
  5499  0A3B  1803               	skipnc
  5500  0A3C  3E01               	addlw	1
  5501  0A3D  1903               	skipnz
  5502  0A3E  2A40               	goto	u3732
  5503  0A3F  07C0               	addwf	___flmul@grs+2,f
  5504  0A40                     u3732:
  5505  0A40  083B               	movf	??___flmul+3,w
  5506  0A41  1103               	clrz
  5507  0A42  1803               	skipnc
  5508  0A43  3E01               	addlw	1
  5509  0A44  1903               	skipnz
  5510  0A45  2A47               	goto	u3733
  5511  0A46  07C1               	addwf	___flmul@grs+3,f
  5512  0A47                     u3733:
  5513  0A47                     l2770:
  5514  0A47  0849               	movf	___flmul@temp+1,w
  5515  0A48  00B8               	movwf	??___flmul
  5516  0A49  01B9               	clrf	??___flmul+1
  5517  0A4A  01BA               	clrf	??___flmul+2
  5518  0A4B  01BB               	clrf	??___flmul+3
  5519  0A4C  0838               	movf	??___flmul,w
  5520  0A4D  07C4               	addwf	___flmul@prod,f
  5521  0A4E  0839               	movf	??___flmul+1,w
  5522  0A4F  1103               	clrz
  5523  0A50  1803               	skipnc
  5524  0A51  3E01               	addlw	1
  5525  0A52  1903               	skipnz
  5526  0A53  2A55               	goto	u3741
  5527  0A54  07C5               	addwf	___flmul@prod+1,f
  5528  0A55                     u3741:
  5529  0A55  083A               	movf	??___flmul+2,w
  5530  0A56  1103               	clrz
  5531  0A57  1803               	skipnc
  5532  0A58  3E01               	addlw	1
  5533  0A59  1903               	skipnz
  5534  0A5A  2A5C               	goto	u3742
  5535  0A5B  07C6               	addwf	___flmul@prod+2,f
  5536  0A5C                     u3742:
  5537  0A5C  083B               	movf	??___flmul+3,w
  5538  0A5D  1103               	clrz
  5539  0A5E  1803               	skipnc
  5540  0A5F  3E01               	addlw	1
  5541  0A60  1903               	skipnz
  5542  0A61  2A63               	goto	u3743
  5543  0A62  07C7               	addwf	___flmul@prod+3,f
  5544  0A63                     u3743:
  5545  0A63                     l2772:
  5546  0A63  3008               	movlw	8
  5547  0A64  00B8               	movwf	??___flmul
  5548  0A65                     u3755:
  5549  0A65  1003               	clrc
  5550  0A66  0DBE               	rlf	___flmul@grs,f
  5551  0A67  0DBF               	rlf	___flmul@grs+1,f
  5552  0A68  0DC0               	rlf	___flmul@grs+2,f
  5553  0A69  0DC1               	rlf	___flmul@grs+3,f
  5554  0A6A  0BB8               	decfsz	??___flmul,f
  5555  0A6B  2A65               	goto	u3755
  5556  0A6C                     l2774:
  5557  0A6C  0831               	movf	___flmul@b+1,w
  5558  0A6D  00B8               	movwf	??___flmul
  5559  0A6E  0838               	movf	??___flmul,w
  5560  0A6F  00A0               	movwf	__Umul8_16@multiplicand
  5561  0A70  0834               	movf	___flmul@a,w
  5562  0A71  160A  158A  21DE  120A  158A  	fcall	__Umul8_16
  5563  0A76  1283               	bcf	3,5	;RP0=0, select bank0
  5564  0A77  1303               	bcf	3,6	;RP1=0, select bank0
  5565  0A78  0821               	movf	?__Umul8_16+1,w
  5566  0A79  00C9               	movwf	___flmul@temp+1
  5567  0A7A  0820               	movf	?__Umul8_16,w
  5568  0A7B  00C8               	movwf	___flmul@temp
  5569  0A7C                     l2776:
  5570  0A7C  0848               	movf	___flmul@temp,w
  5571  0A7D  00B8               	movwf	??___flmul
  5572  0A7E  0849               	movf	___flmul@temp+1,w
  5573  0A7F  00B9               	movwf	??___flmul+1
  5574  0A80  01BA               	clrf	??___flmul+2
  5575  0A81  01BB               	clrf	??___flmul+3
  5576  0A82  0838               	movf	??___flmul,w
  5577  0A83  07BE               	addwf	___flmul@grs,f
  5578  0A84  0839               	movf	??___flmul+1,w
  5579  0A85  1103               	clrz
  5580  0A86  1803               	skipnc
  5581  0A87  3E01               	addlw	1
  5582  0A88  1903               	skipnz
  5583  0A89  2A8B               	goto	u3761
  5584  0A8A  07BF               	addwf	___flmul@grs+1,f
  5585  0A8B                     u3761:
  5586  0A8B  083A               	movf	??___flmul+2,w
  5587  0A8C  1103               	clrz
  5588  0A8D  1803               	skipnc
  5589  0A8E  3E01               	addlw	1
  5590  0A8F  1903               	skipnz
  5591  0A90  2A92               	goto	u3762
  5592  0A91  07C0               	addwf	___flmul@grs+2,f
  5593  0A92                     u3762:
  5594  0A92  083B               	movf	??___flmul+3,w
  5595  0A93  1103               	clrz
  5596  0A94  1803               	skipnc
  5597  0A95  3E01               	addlw	1
  5598  0A96  1903               	skipnz
  5599  0A97  2A99               	goto	u3763
  5600  0A98  07C1               	addwf	___flmul@grs+3,f
  5601  0A99                     u3763:
  5602  0A99                     l2778:
  5603  0A99  0830               	movf	___flmul@b,w
  5604  0A9A  00B8               	movwf	??___flmul
  5605  0A9B  0838               	movf	??___flmul,w
  5606  0A9C  00A0               	movwf	__Umul8_16@multiplicand
  5607  0A9D  0835               	movf	___flmul@a+1,w
  5608  0A9E  160A  158A  21DE  120A  158A  	fcall	__Umul8_16
  5609  0AA3  1283               	bcf	3,5	;RP0=0, select bank0
  5610  0AA4  1303               	bcf	3,6	;RP1=0, select bank0
  5611  0AA5  0821               	movf	?__Umul8_16+1,w
  5612  0AA6  00C9               	movwf	___flmul@temp+1
  5613  0AA7  0820               	movf	?__Umul8_16,w
  5614  0AA8  00C8               	movwf	___flmul@temp
  5615  0AA9                     l2780:
  5616  0AA9  0848               	movf	___flmul@temp,w
  5617  0AAA  00B8               	movwf	??___flmul
  5618  0AAB  0849               	movf	___flmul@temp+1,w
  5619  0AAC  00B9               	movwf	??___flmul+1
  5620  0AAD  01BA               	clrf	??___flmul+2
  5621  0AAE  01BB               	clrf	??___flmul+3
  5622  0AAF  0838               	movf	??___flmul,w
  5623  0AB0  07BE               	addwf	___flmul@grs,f
  5624  0AB1  0839               	movf	??___flmul+1,w
  5625  0AB2  1103               	clrz
  5626  0AB3  1803               	skipnc
  5627  0AB4  3E01               	addlw	1
  5628  0AB5  1903               	skipnz
  5629  0AB6  2AB8               	goto	u3771
  5630  0AB7  07BF               	addwf	___flmul@grs+1,f
  5631  0AB8                     u3771:
  5632  0AB8  083A               	movf	??___flmul+2,w
  5633  0AB9  1103               	clrz
  5634  0ABA  1803               	skipnc
  5635  0ABB  3E01               	addlw	1
  5636  0ABC  1903               	skipnz
  5637  0ABD  2ABF               	goto	u3772
  5638  0ABE  07C0               	addwf	___flmul@grs+2,f
  5639  0ABF                     u3772:
  5640  0ABF  083B               	movf	??___flmul+3,w
  5641  0AC0  1103               	clrz
  5642  0AC1  1803               	skipnc
  5643  0AC2  3E01               	addlw	1
  5644  0AC3  1903               	skipnz
  5645  0AC4  2AC6               	goto	u3773
  5646  0AC5  07C1               	addwf	___flmul@grs+3,f
  5647  0AC6                     u3773:
  5648  0AC6                     l2782:
  5649  0AC6  3008               	movlw	8
  5650  0AC7  00B8               	movwf	??___flmul
  5651  0AC8                     u3785:
  5652  0AC8  1003               	clrc
  5653  0AC9  0DBE               	rlf	___flmul@grs,f
  5654  0ACA  0DBF               	rlf	___flmul@grs+1,f
  5655  0ACB  0DC0               	rlf	___flmul@grs+2,f
  5656  0ACC  0DC1               	rlf	___flmul@grs+3,f
  5657  0ACD  0BB8               	decfsz	??___flmul,f
  5658  0ACE  2AC8               	goto	u3785
  5659  0ACF  0830               	movf	___flmul@b,w
  5660  0AD0  00B8               	movwf	??___flmul
  5661  0AD1  0838               	movf	??___flmul,w
  5662  0AD2  00A0               	movwf	__Umul8_16@multiplicand
  5663  0AD3  0834               	movf	___flmul@a,w
  5664  0AD4  160A  158A  21DE  120A  158A  	fcall	__Umul8_16
  5665  0AD9  1283               	bcf	3,5	;RP0=0, select bank0
  5666  0ADA  1303               	bcf	3,6	;RP1=0, select bank0
  5667  0ADB  0821               	movf	?__Umul8_16+1,w
  5668  0ADC  00C9               	movwf	___flmul@temp+1
  5669  0ADD  0820               	movf	?__Umul8_16,w
  5670  0ADE  00C8               	movwf	___flmul@temp
  5671  0ADF                     l2784:
  5672  0ADF  0848               	movf	___flmul@temp,w
  5673  0AE0  00B8               	movwf	??___flmul
  5674  0AE1  0849               	movf	___flmul@temp+1,w
  5675  0AE2  00B9               	movwf	??___flmul+1
  5676  0AE3  01BA               	clrf	??___flmul+2
  5677  0AE4  01BB               	clrf	??___flmul+3
  5678  0AE5  0838               	movf	??___flmul,w
  5679  0AE6  07BE               	addwf	___flmul@grs,f
  5680  0AE7  0839               	movf	??___flmul+1,w
  5681  0AE8  1103               	clrz
  5682  0AE9  1803               	skipnc
  5683  0AEA  3E01               	addlw	1
  5684  0AEB  1903               	skipnz
  5685  0AEC  2AEE               	goto	u3791
  5686  0AED  07BF               	addwf	___flmul@grs+1,f
  5687  0AEE                     u3791:
  5688  0AEE  083A               	movf	??___flmul+2,w
  5689  0AEF  1103               	clrz
  5690  0AF0  1803               	skipnc
  5691  0AF1  3E01               	addlw	1
  5692  0AF2  1903               	skipnz
  5693  0AF3  2AF5               	goto	u3792
  5694  0AF4  07C0               	addwf	___flmul@grs+2,f
  5695  0AF5                     u3792:
  5696  0AF5  083B               	movf	??___flmul+3,w
  5697  0AF6  1103               	clrz
  5698  0AF7  1803               	skipnc
  5699  0AF8  3E01               	addlw	1
  5700  0AF9  1903               	skipnz
  5701  0AFA  2AFC               	goto	u3793
  5702  0AFB  07C1               	addwf	___flmul@grs+3,f
  5703  0AFC                     u3793:
  5704  0AFC                     l2786:
  5705  0AFC  0831               	movf	___flmul@b+1,w
  5706  0AFD  00B8               	movwf	??___flmul
  5707  0AFE  0838               	movf	??___flmul,w
  5708  0AFF  00A0               	movwf	__Umul8_16@multiplicand
  5709  0B00  0836               	movf	___flmul@a+2,w
  5710  0B01  160A  158A  21DE  120A  158A  	fcall	__Umul8_16
  5711  0B06  1283               	bcf	3,5	;RP0=0, select bank0
  5712  0B07  1303               	bcf	3,6	;RP1=0, select bank0
  5713  0B08  0821               	movf	?__Umul8_16+1,w
  5714  0B09  00C9               	movwf	___flmul@temp+1
  5715  0B0A  0820               	movf	?__Umul8_16,w
  5716  0B0B  00C8               	movwf	___flmul@temp
  5717  0B0C  0848               	movf	___flmul@temp,w
  5718  0B0D  00B8               	movwf	??___flmul
  5719  0B0E  0849               	movf	___flmul@temp+1,w
  5720  0B0F  00B9               	movwf	??___flmul+1
  5721  0B10  01BA               	clrf	??___flmul+2
  5722  0B11  01BB               	clrf	??___flmul+3
  5723  0B12  0838               	movf	??___flmul,w
  5724  0B13  07C4               	addwf	___flmul@prod,f
  5725  0B14  0839               	movf	??___flmul+1,w
  5726  0B15  1103               	clrz
  5727  0B16  1803               	skipnc
  5728  0B17  3E01               	addlw	1
  5729  0B18  1903               	skipnz
  5730  0B19  2B1B               	goto	u3801
  5731  0B1A  07C5               	addwf	___flmul@prod+1,f
  5732  0B1B                     u3801:
  5733  0B1B  083A               	movf	??___flmul+2,w
  5734  0B1C  1103               	clrz
  5735  0B1D  1803               	skipnc
  5736  0B1E  3E01               	addlw	1
  5737  0B1F  1903               	skipnz
  5738  0B20  2B22               	goto	u3802
  5739  0B21  07C6               	addwf	___flmul@prod+2,f
  5740  0B22                     u3802:
  5741  0B22  083B               	movf	??___flmul+3,w
  5742  0B23  1103               	clrz
  5743  0B24  1803               	skipnc
  5744  0B25  3E01               	addlw	1
  5745  0B26  1903               	skipnz
  5746  0B27  2B29               	goto	u3803
  5747  0B28  07C7               	addwf	___flmul@prod+3,f
  5748  0B29                     u3803:
  5749  0B29                     l2788:
  5750  0B29  0832               	movf	___flmul@b+2,w
  5751  0B2A  00B8               	movwf	??___flmul
  5752  0B2B  0838               	movf	??___flmul,w
  5753  0B2C  00A0               	movwf	__Umul8_16@multiplicand
  5754  0B2D  0835               	movf	___flmul@a+1,w
  5755  0B2E  160A  158A  21DE  120A  158A  	fcall	__Umul8_16
  5756  0B33  1283               	bcf	3,5	;RP0=0, select bank0
  5757  0B34  1303               	bcf	3,6	;RP1=0, select bank0
  5758  0B35  0821               	movf	?__Umul8_16+1,w
  5759  0B36  00C9               	movwf	___flmul@temp+1
  5760  0B37  0820               	movf	?__Umul8_16,w
  5761  0B38  00C8               	movwf	___flmul@temp
  5762  0B39                     l2790:
  5763  0B39  0848               	movf	___flmul@temp,w
  5764  0B3A  00B8               	movwf	??___flmul
  5765  0B3B  0849               	movf	___flmul@temp+1,w
  5766  0B3C  00B9               	movwf	??___flmul+1
  5767  0B3D  01BA               	clrf	??___flmul+2
  5768  0B3E  01BB               	clrf	??___flmul+3
  5769  0B3F  0838               	movf	??___flmul,w
  5770  0B40  07C4               	addwf	___flmul@prod,f
  5771  0B41  0839               	movf	??___flmul+1,w
  5772  0B42  1103               	clrz
  5773  0B43  1803               	skipnc
  5774  0B44  3E01               	addlw	1
  5775  0B45  1903               	skipnz
  5776  0B46  2B48               	goto	u3811
  5777  0B47  07C5               	addwf	___flmul@prod+1,f
  5778  0B48                     u3811:
  5779  0B48  083A               	movf	??___flmul+2,w
  5780  0B49  1103               	clrz
  5781  0B4A  1803               	skipnc
  5782  0B4B  3E01               	addlw	1
  5783  0B4C  1903               	skipnz
  5784  0B4D  2B4F               	goto	u3812
  5785  0B4E  07C6               	addwf	___flmul@prod+2,f
  5786  0B4F                     u3812:
  5787  0B4F  083B               	movf	??___flmul+3,w
  5788  0B50  1103               	clrz
  5789  0B51  1803               	skipnc
  5790  0B52  3E01               	addlw	1
  5791  0B53  1903               	skipnz
  5792  0B54  2B56               	goto	u3813
  5793  0B55  07C7               	addwf	___flmul@prod+3,f
  5794  0B56                     u3813:
  5795  0B56  0832               	movf	___flmul@b+2,w
  5796  0B57  00B8               	movwf	??___flmul
  5797  0B58  0838               	movf	??___flmul,w
  5798  0B59  00A0               	movwf	__Umul8_16@multiplicand
  5799  0B5A  0836               	movf	___flmul@a+2,w
  5800  0B5B  160A  158A  21DE  120A  158A  	fcall	__Umul8_16
  5801  0B60  1283               	bcf	3,5	;RP0=0, select bank0
  5802  0B61  1303               	bcf	3,6	;RP1=0, select bank0
  5803  0B62  0821               	movf	?__Umul8_16+1,w
  5804  0B63  00C9               	movwf	___flmul@temp+1
  5805  0B64  0820               	movf	?__Umul8_16,w
  5806  0B65  00C8               	movwf	___flmul@temp
  5807  0B66                     l2792:
  5808  0B66  0848               	movf	___flmul@temp,w
  5809  0B67  00B8               	movwf	??___flmul
  5810  0B68  0849               	movf	___flmul@temp+1,w
  5811  0B69  00B9               	movwf	??___flmul+1
  5812  0B6A  01BA               	clrf	??___flmul+2
  5813  0B6B  01BB               	clrf	??___flmul+3
  5814  0B6C  3008               	movlw	8
  5815  0B6D                     u3825:
  5816  0B6D  1003               	clrc
  5817  0B6E  0DB8               	rlf	??___flmul,f
  5818  0B6F  0DB9               	rlf	??___flmul+1,f
  5819  0B70  0DBA               	rlf	??___flmul+2,f
  5820  0B71  0DBB               	rlf	??___flmul+3,f
  5821  0B72                     u3820:
  5822  0B72  3EFF               	addlw	-1
  5823  0B73  1D03               	skipz
  5824  0B74  2B6D               	goto	u3825
  5825  0B75  0838               	movf	??___flmul,w
  5826  0B76  07C4               	addwf	___flmul@prod,f
  5827  0B77  0839               	movf	??___flmul+1,w
  5828  0B78  1103               	clrz
  5829  0B79  1803               	skipnc
  5830  0B7A  3E01               	addlw	1
  5831  0B7B  1903               	skipnz
  5832  0B7C  2B7E               	goto	u3831
  5833  0B7D  07C5               	addwf	___flmul@prod+1,f
  5834  0B7E                     u3831:
  5835  0B7E  083A               	movf	??___flmul+2,w
  5836  0B7F  1103               	clrz
  5837  0B80  1803               	skipnc
  5838  0B81  3E01               	addlw	1
  5839  0B82  1903               	skipnz
  5840  0B83  2B85               	goto	u3832
  5841  0B84  07C6               	addwf	___flmul@prod+2,f
  5842  0B85                     u3832:
  5843  0B85  083B               	movf	??___flmul+3,w
  5844  0B86  1103               	clrz
  5845  0B87  1803               	skipnc
  5846  0B88  3E01               	addlw	1
  5847  0B89  1903               	skipnz
  5848  0B8A  2B8C               	goto	u3833
  5849  0B8B  07C7               	addwf	___flmul@prod+3,f
  5850  0B8C                     u3833:
  5851  0B8C                     l2794:
  5852  0B8C  083E               	movf	___flmul@grs,w
  5853  0B8D  00B8               	movwf	??___flmul
  5854  0B8E  083F               	movf	___flmul@grs+1,w
  5855  0B8F  00B9               	movwf	??___flmul+1
  5856  0B90  0840               	movf	___flmul@grs+2,w
  5857  0B91  00BA               	movwf	??___flmul+2
  5858  0B92  0841               	movf	___flmul@grs+3,w
  5859  0B93  00BB               	movwf	??___flmul+3
  5860  0B94  3018               	movlw	24
  5861  0B95                     u3845:
  5862  0B95  1003               	clrc
  5863  0B96  0CBB               	rrf	??___flmul+3,f
  5864  0B97  0CBA               	rrf	??___flmul+2,f
  5865  0B98  0CB9               	rrf	??___flmul+1,f
  5866  0B99  0CB8               	rrf	??___flmul,f
  5867  0B9A                     u3840:
  5868  0B9A  3EFF               	addlw	-1
  5869  0B9B  1D03               	skipz
  5870  0B9C  2B95               	goto	u3845
  5871  0B9D  0838               	movf	??___flmul,w
  5872  0B9E  07C4               	addwf	___flmul@prod,f
  5873  0B9F  0839               	movf	??___flmul+1,w
  5874  0BA0  1103               	clrz
  5875  0BA1  1803               	skipnc
  5876  0BA2  3E01               	addlw	1
  5877  0BA3  1903               	skipnz
  5878  0BA4  2BA6               	goto	u3851
  5879  0BA5  07C5               	addwf	___flmul@prod+1,f
  5880  0BA6                     u3851:
  5881  0BA6  083A               	movf	??___flmul+2,w
  5882  0BA7  1103               	clrz
  5883  0BA8  1803               	skipnc
  5884  0BA9  3E01               	addlw	1
  5885  0BAA  1903               	skipnz
  5886  0BAB  2BAD               	goto	u3852
  5887  0BAC  07C6               	addwf	___flmul@prod+2,f
  5888  0BAD                     u3852:
  5889  0BAD  083B               	movf	??___flmul+3,w
  5890  0BAE  1103               	clrz
  5891  0BAF  1803               	skipnc
  5892  0BB0  3E01               	addlw	1
  5893  0BB1  1903               	skipnz
  5894  0BB2  2BB4               	goto	u3853
  5895  0BB3  07C7               	addwf	___flmul@prod+3,f
  5896  0BB4                     u3853:
  5897  0BB4                     l2796:
  5898  0BB4  3008               	movlw	8
  5899  0BB5  00B8               	movwf	??___flmul
  5900  0BB6                     u3865:
  5901  0BB6  1003               	clrc
  5902  0BB7  0DBE               	rlf	___flmul@grs,f
  5903  0BB8  0DBF               	rlf	___flmul@grs+1,f
  5904  0BB9  0DC0               	rlf	___flmul@grs+2,f
  5905  0BBA  0DC1               	rlf	___flmul@grs+3,f
  5906  0BBB  0BB8               	decfsz	??___flmul,f
  5907  0BBC  2BB6               	goto	u3865
  5908  0BBD                     l2798:
  5909  0BBD  0843               	movf	___flmul@bexp,w
  5910  0BBE  0742               	addwf	___flmul@aexp,w
  5911  0BBF  00B8               	movwf	??___flmul
  5912  0BC0  01B9               	clrf	??___flmul+1
  5913  0BC1  0DB9               	rlf	??___flmul+1,f
  5914  0BC2  0838               	movf	??___flmul,w
  5915  0BC3  3E82               	addlw	130
  5916  0BC4  00C8               	movwf	___flmul@temp
  5917  0BC5  0839               	movf	??___flmul+1,w
  5918  0BC6  1803               	skipnc
  5919  0BC7  3E01               	addlw	1
  5920  0BC8  3EFF               	addlw	255
  5921  0BC9  00C9               	movwf	___flmul@temp+1
  5922  0BCA  2BE8               	goto	l2810
  5923  0BCB                     l2800:
  5924  0BCB  3001               	movlw	1
  5925  0BCC  00B8               	movwf	??___flmul
  5926  0BCD                     u3875:
  5927  0BCD  1003               	clrc
  5928  0BCE  0DC4               	rlf	___flmul@prod,f
  5929  0BCF  0DC5               	rlf	___flmul@prod+1,f
  5930  0BD0  0DC6               	rlf	___flmul@prod+2,f
  5931  0BD1  0DC7               	rlf	___flmul@prod+3,f
  5932  0BD2  0BB8               	decfsz	??___flmul,f
  5933  0BD3  2BCD               	goto	u3875
  5934  0BD4                     l2802:
  5935  0BD4  1FC1               	btfss	___flmul@grs+3,7
  5936  0BD5  2BD7               	goto	u3881
  5937  0BD6  2BD8               	goto	u3880
  5938  0BD7                     u3881:
  5939  0BD7  2BD9               	goto	l2806
  5940  0BD8                     u3880:
  5941  0BD8                     l2804:
  5942  0BD8  1444               	bsf	___flmul@prod,0
  5943  0BD9                     l2806:
  5944  0BD9  3001               	movlw	1
  5945  0BDA  00B8               	movwf	??___flmul
  5946  0BDB                     u3895:
  5947  0BDB  1003               	clrc
  5948  0BDC  0DBE               	rlf	___flmul@grs,f
  5949  0BDD  0DBF               	rlf	___flmul@grs+1,f
  5950  0BDE  0DC0               	rlf	___flmul@grs+2,f
  5951  0BDF  0DC1               	rlf	___flmul@grs+3,f
  5952  0BE0  0BB8               	decfsz	??___flmul,f
  5953  0BE1  2BDB               	goto	u3895
  5954  0BE2                     l2808:
  5955  0BE2  30FF               	movlw	255
  5956  0BE3  07C8               	addwf	___flmul@temp,f
  5957  0BE4  1803               	skipnc
  5958  0BE5  0AC9               	incf	___flmul@temp+1,f
  5959  0BE6  30FF               	movlw	255
  5960  0BE7  07C9               	addwf	___flmul@temp+1,f
  5961  0BE8                     l2810:
  5962  0BE8  1FC6               	btfss	___flmul@prod+2,7
  5963  0BE9  2BEB               	goto	u3901
  5964  0BEA  2BEC               	goto	u3900
  5965  0BEB                     u3901:
  5966  0BEB  2BCB               	goto	l2800
  5967  0BEC                     u3900:
  5968  0BEC                     l2812:
  5969  0BEC  01C2               	clrf	___flmul@aexp
  5970  0BED                     l2814:
  5971  0BED  1FC1               	btfss	___flmul@grs+3,7
  5972  0BEE  2BF0               	goto	u3911
  5973  0BEF  2BF1               	goto	u3910
  5974  0BF0                     u3911:
  5975  0BF0  2C0D               	goto	l2822
  5976  0BF1                     u3910:
  5977  0BF1                     l2816:
  5978  0BF1  30FF               	movlw	255
  5979  0BF2  053E               	andwf	___flmul@grs,w
  5980  0BF3  00B8               	movwf	??___flmul
  5981  0BF4  30FF               	movlw	255
  5982  0BF5  053F               	andwf	___flmul@grs+1,w
  5983  0BF6  00B9               	movwf	??___flmul+1
  5984  0BF7  30FF               	movlw	255
  5985  0BF8  0540               	andwf	___flmul@grs+2,w
  5986  0BF9  00BA               	movwf	??___flmul+2
  5987  0BFA  307F               	movlw	127
  5988  0BFB  0541               	andwf	___flmul@grs+3,w
  5989  0BFC  00BB               	movwf	??___flmul+3
  5990  0BFD  083B               	movf	??___flmul+3,w
  5991  0BFE  043A               	iorwf	??___flmul+2,w
  5992  0BFF  0439               	iorwf	??___flmul+1,w
  5993  0C00  0438               	iorwf	??___flmul,w
  5994  0C01  1903               	skipnz
  5995  0C02  2C04               	goto	u3921
  5996  0C03  2C05               	goto	u3920
  5997  0C04                     u3921:
  5998  0C04  2C08               	goto	l854
  5999  0C05                     u3920:
  6000  0C05                     l2818:
  6001  0C05  01C2               	clrf	___flmul@aexp
  6002  0C06  0AC2               	incf	___flmul@aexp,f
  6003  0C07  2C0D               	goto	l2822
  6004  0C08                     l854:
  6005  0C08  1C44               	btfss	___flmul@prod,0
  6006  0C09  2C0B               	goto	u3931
  6007  0C0A  2C0C               	goto	u3930
  6008  0C0B                     u3931:
  6009  0C0B  2C0D               	goto	l2822
  6010  0C0C                     u3930:
  6011  0C0C  2C05               	goto	l2818
  6012  0C0D                     l2822:
  6013  0C0D  0842               	movf	___flmul@aexp,w
  6014  0C0E  1903               	btfsc	3,2
  6015  0C0F  2C11               	goto	u3941
  6016  0C10  2C12               	goto	u3940
  6017  0C11                     u3941:
  6018  0C11  2C43               	goto	l2832
  6019  0C12                     u3940:
  6020  0C12                     l2824:
  6021  0C12  3001               	movlw	1
  6022  0C13  07C4               	addwf	___flmul@prod,f
  6023  0C14  3000               	movlw	0
  6024  0C15  1803               	skipnc
  6025  0C16  3001               	movlw	1
  6026  0C17  07C5               	addwf	___flmul@prod+1,f
  6027  0C18  3000               	movlw	0
  6028  0C19  1803               	skipnc
  6029  0C1A  3001               	movlw	1
  6030  0C1B  07C6               	addwf	___flmul@prod+2,f
  6031  0C1C  3000               	movlw	0
  6032  0C1D  1803               	skipnc
  6033  0C1E  3001               	movlw	1
  6034  0C1F  07C7               	addwf	___flmul@prod+3,f
  6035  0C20                     l2826:
  6036  0C20  1C47               	btfss	___flmul@prod+3,0
  6037  0C21  2C23               	goto	u3951
  6038  0C22  2C24               	goto	u3950
  6039  0C23                     u3951:
  6040  0C23  2C43               	goto	l2832
  6041  0C24                     u3950:
  6042  0C24                     l2828:
  6043  0C24  0844               	movf	___flmul@prod,w
  6044  0C25  00B8               	movwf	??___flmul
  6045  0C26  0845               	movf	___flmul@prod+1,w
  6046  0C27  00B9               	movwf	??___flmul+1
  6047  0C28  0846               	movf	___flmul@prod+2,w
  6048  0C29  00BA               	movwf	??___flmul+2
  6049  0C2A  0847               	movf	___flmul@prod+3,w
  6050  0C2B  00BB               	movwf	??___flmul+3
  6051  0C2C  3001               	movlw	1
  6052  0C2D  00BC               	movwf	??___flmul+4
  6053  0C2E                     u3965:
  6054  0C2E  0D3B               	rlf	??___flmul+3,w
  6055  0C2F  0CBB               	rrf	??___flmul+3,f
  6056  0C30  0CBA               	rrf	??___flmul+2,f
  6057  0C31  0CB9               	rrf	??___flmul+1,f
  6058  0C32  0CB8               	rrf	??___flmul,f
  6059  0C33                     u3960:
  6060  0C33  0BBC               	decfsz	??___flmul+4,f
  6061  0C34  2C2E               	goto	u3965
  6062  0C35  083B               	movf	??___flmul+3,w
  6063  0C36  00C7               	movwf	___flmul@prod+3
  6064  0C37  083A               	movf	??___flmul+2,w
  6065  0C38  00C6               	movwf	___flmul@prod+2
  6066  0C39  0839               	movf	??___flmul+1,w
  6067  0C3A  00C5               	movwf	___flmul@prod+1
  6068  0C3B  0838               	movf	??___flmul,w
  6069  0C3C  00C4               	movwf	___flmul@prod
  6070  0C3D                     l2830:
  6071  0C3D  3001               	movlw	1
  6072  0C3E  07C8               	addwf	___flmul@temp,f
  6073  0C3F  1803               	skipnc
  6074  0C40  0AC9               	incf	___flmul@temp+1,f
  6075  0C41  3000               	movlw	0
  6076  0C42  07C9               	addwf	___flmul@temp+1,f
  6077  0C43                     l2832:
  6078  0C43  0849               	movf	___flmul@temp+1,w
  6079  0C44  3A80               	xorlw	128
  6080  0C45  00FF               	movwf	btemp+1
  6081  0C46  3080               	movlw	128
  6082  0C47  027F               	subwf	btemp+1,w
  6083  0C48  1D03               	skipz
  6084  0C49  2C4C               	goto	u3975
  6085  0C4A  30FF               	movlw	255
  6086  0C4B  0248               	subwf	___flmul@temp,w
  6087  0C4C                     u3975:
  6088  0C4C  1C03               	skipc
  6089  0C4D  2C4F               	goto	u3971
  6090  0C4E  2C50               	goto	u3970
  6091  0C4F                     u3971:
  6092  0C4F  2C5B               	goto	l2836
  6093  0C50                     u3970:
  6094  0C50                     l2834:
  6095  0C50  307F               	movlw	127
  6096  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6097  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6098  0C53  00C7               	movwf	___flmul@prod+3
  6099  0C54  3080               	movlw	128
  6100  0C55  00C6               	movwf	___flmul@prod+2
  6101  0C56  3000               	movlw	0
  6102  0C57  00C5               	movwf	___flmul@prod+1
  6103  0C58  3000               	movlw	0
  6104  0C59  00C4               	movwf	___flmul@prod
  6105  0C5A  2C90               	goto	l860
  6106  0C5B                     l2836:
  6107  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6108  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6109  0C5D  0849               	movf	___flmul@temp+1,w
  6110  0C5E  3A80               	xorlw	128
  6111  0C5F  00FF               	movwf	btemp+1
  6112  0C60  3080               	movlw	128
  6113  0C61  027F               	subwf	btemp+1,w
  6114  0C62  1D03               	skipz
  6115  0C63  2C66               	goto	u3985
  6116  0C64  3001               	movlw	1
  6117  0C65  0248               	subwf	___flmul@temp,w
  6118  0C66                     u3985:
  6119  0C66  1803               	skipnc
  6120  0C67  2C69               	goto	u3981
  6121  0C68  2C6A               	goto	u3980
  6122  0C69                     u3981:
  6123  0C69  2C76               	goto	l2842
  6124  0C6A                     u3980:
  6125  0C6A                     l2838:
  6126  0C6A  3000               	movlw	0
  6127  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6128  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6129  0C6D  00C7               	movwf	___flmul@prod+3
  6130  0C6E  3000               	movlw	0
  6131  0C6F  00C6               	movwf	___flmul@prod+2
  6132  0C70  3000               	movlw	0
  6133  0C71  00C5               	movwf	___flmul@prod+1
  6134  0C72  3000               	movlw	0
  6135  0C73  00C4               	movwf	___flmul@prod
  6136  0C74                     l2840:
  6137  0C74  01BD               	clrf	___flmul@sign
  6138  0C75  2C90               	goto	l860
  6139  0C76                     l2842:
  6140  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6141  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6142  0C78  0848               	movf	___flmul@temp,w
  6143  0C79  00B8               	movwf	??___flmul
  6144  0C7A  0838               	movf	??___flmul,w
  6145  0C7B  00C3               	movwf	___flmul@bexp
  6146  0C7C  30FF               	movlw	255
  6147  0C7D  05C4               	andwf	___flmul@prod,f
  6148  0C7E  30FF               	movlw	255
  6149  0C7F  05C5               	andwf	___flmul@prod+1,f
  6150  0C80  307F               	movlw	127
  6151  0C81  05C6               	andwf	___flmul@prod+2,f
  6152  0C82  3000               	movlw	0
  6153  0C83  05C7               	andwf	___flmul@prod+3,f
  6154  0C84                     l2844:
  6155  0C84  1C43               	btfss	___flmul@bexp,0
  6156  0C85  2C87               	goto	u3991
  6157  0C86  2C88               	goto	u3990
  6158  0C87                     u3991:
  6159  0C87  2C89               	goto	l2848
  6160  0C88                     u3990:
  6161  0C88                     l2846:
  6162  0C88  17C6               	bsf	___flmul@prod+2,7
  6163  0C89                     l2848:
  6164  0C89  0843               	movf	___flmul@bexp,w
  6165  0C8A  00B8               	movwf	??___flmul
  6166  0C8B  1003               	clrc
  6167  0C8C  0C38               	rrf	??___flmul,w
  6168  0C8D  00B9               	movwf	??___flmul+1
  6169  0C8E  0839               	movf	??___flmul+1,w
  6170  0C8F  00C7               	movwf	___flmul@prod+3
  6171  0C90                     l860:
  6172  0C90  083D               	movf	___flmul@sign,w
  6173  0C91  00B8               	movwf	??___flmul
  6174  0C92  0838               	movf	??___flmul,w
  6175  0C93  04C7               	iorwf	___flmul@prod+3,f
  6176  0C94                     l2850:
  6177  0C94  0847               	movf	___flmul@prod+3,w
  6178  0C95  00B3               	movwf	?___flmul+3
  6179  0C96  0846               	movf	___flmul@prod+2,w
  6180  0C97  00B2               	movwf	?___flmul+2
  6181  0C98  0845               	movf	___flmul@prod+1,w
  6182  0C99  00B1               	movwf	?___flmul+1
  6183  0C9A  0844               	movf	___flmul@prod,w
  6184  0C9B  00B0               	movwf	?___flmul
  6185  0C9C                     l848:
  6186  0C9C  0008               	return
  6187  0C9D                     __end_of___flmul:
  6188                           
  6189                           	psect	text17
  6190  19DE                     __ptext17:	
  6191 ;; *************** function __Umul8_16 *****************
  6192 ;; Defined at:
  6193 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;  multiplier      1    wreg     unsigned char 
  6196 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  multiplier      1    8[BANK0 ] unsigned char 
  6199 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  6200 ;;  product         2    4[BANK0 ] unsigned int 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  2    0[BANK0 ] unsigned int 
  6203 ;; Registers used:
  6204 ;;		wreg, status,2, status,0
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6210 ;;      Params:         0       2       0       0       0
  6211 ;;      Locals:         0       5       0       0       0
  6212 ;;      Temps:          0       2       0       0       0
  6213 ;;      Totals:         0       9       0       0       0
  6214 ;;Total ram usage:        9 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    2
  6217 ;; This function calls:
  6218 ;;		Nothing
  6219 ;; This function is called by:
  6220 ;;		___flmul
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           
  6225                           ;psect for function __Umul8_16
  6226  19DE                     __Umul8_16:
  6227                           
  6228                           ;incstack = 0
  6229                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6230                           ;__Umul8_16@multiplier stored from wreg
  6231  19DE  1283               	bcf	3,5	;RP0=0, select bank0
  6232  19DF  1303               	bcf	3,6	;RP1=0, select bank0
  6233  19E0  00A8               	movwf	__Umul8_16@multiplier
  6234  19E1                     l2374:
  6235  19E1  01A4               	clrf	__Umul8_16@product
  6236  19E2  01A5               	clrf	__Umul8_16@product+1
  6237  19E3                     l2376:
  6238  19E3  0820               	movf	__Umul8_16@multiplicand,w
  6239  19E4  00A2               	movwf	??__Umul8_16
  6240  19E5  01A3               	clrf	??__Umul8_16+1
  6241  19E6  0822               	movf	??__Umul8_16,w
  6242  19E7  00A6               	movwf	__Umul8_16@word_mpld
  6243  19E8  0823               	movf	??__Umul8_16+1,w
  6244  19E9  00A7               	movwf	__Umul8_16@word_mpld+1
  6245  19EA                     l2378:
  6246  19EA  1C28               	btfss	__Umul8_16@multiplier,0
  6247  19EB  29ED               	goto	u2821
  6248  19EC  29EE               	goto	u2820
  6249  19ED                     u2821:
  6250  19ED  29F4               	goto	l867
  6251  19EE                     u2820:
  6252  19EE                     l2380:
  6253  19EE  0826               	movf	__Umul8_16@word_mpld,w
  6254  19EF  07A4               	addwf	__Umul8_16@product,f
  6255  19F0  1803               	skipnc
  6256  19F1  0AA5               	incf	__Umul8_16@product+1,f
  6257  19F2  0827               	movf	__Umul8_16@word_mpld+1,w
  6258  19F3  07A5               	addwf	__Umul8_16@product+1,f
  6259  19F4                     l867:
  6260  19F4  3001               	movlw	1
  6261  19F5                     u2835:
  6262  19F5  1003               	clrc
  6263  19F6  0DA6               	rlf	__Umul8_16@word_mpld,f
  6264  19F7  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  6265  19F8  3EFF               	addlw	-1
  6266  19F9  1D03               	skipz
  6267  19FA  29F5               	goto	u2835
  6268  19FB  1003               	clrc
  6269  19FC  0CA8               	rrf	__Umul8_16@multiplier,f
  6270  19FD                     l2382:
  6271  19FD  0828               	movf	__Umul8_16@multiplier,w
  6272  19FE  1D03               	btfss	3,2
  6273  19FF  2A01               	goto	u2841
  6274  1A00  2A02               	goto	u2840
  6275  1A01                     u2841:
  6276  1A01  29EA               	goto	l2378
  6277  1A02                     u2840:
  6278  1A02                     l2384:
  6279  1A02  0825               	movf	__Umul8_16@product+1,w
  6280  1A03  00A1               	movwf	?__Umul8_16+1
  6281  1A04  0824               	movf	__Umul8_16@product,w
  6282  1A05  00A0               	movwf	?__Umul8_16
  6283  1A06                     l869:
  6284  1A06  0008               	return
  6285  1A07                     __end_of__Umul8_16:
  6286                           
  6287                           	psect	text18
  6288  10B7                     __ptext18:	
  6289 ;; *************** function __tdiv_to_l_ *****************
  6290 ;; Defined at:
  6291 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  f1              4    0[BANK0 ] float 
  6294 ;;  f2              4    4[BANK0 ] float 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;  quot            4   12[BANK0 ] unsigned long 
  6297 ;;  exp1            1   17[BANK0 ] unsigned char 
  6298 ;;  cntr            1   16[BANK0 ] unsigned char 
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  4    0[BANK0 ] unsigned long 
  6301 ;; Registers used:
  6302 ;;		wreg, status,2, status,0
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6308 ;;      Params:         0       8       0       0       0
  6309 ;;      Locals:         0       6       0       0       0
  6310 ;;      Temps:          0       4       0       0       0
  6311 ;;      Totals:         0      18       0       0       0
  6312 ;;Total ram usage:       18 bytes
  6313 ;; Hardware stack levels used:    1
  6314 ;; Hardware stack levels required when called:    2
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_sprintf
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           
  6323                           ;psect for function __tdiv_to_l_
  6324  10B7                     __tdiv_to_l_:
  6325  10B7                     l2944:	
  6326                           ;incstack = 0
  6327                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6328                           
  6329  10B7  1283               	bcf	3,5	;RP0=0, select bank0
  6330  10B8  1303               	bcf	3,6	;RP1=0, select bank0
  6331  10B9  0820               	movf	__tdiv_to_l_@f1,w
  6332  10BA  00A8               	movwf	??__tdiv_to_l_
  6333  10BB  0821               	movf	__tdiv_to_l_@f1+1,w
  6334  10BC  00A9               	movwf	??__tdiv_to_l_+1
  6335  10BD  0822               	movf	__tdiv_to_l_@f1+2,w
  6336  10BE  00AA               	movwf	??__tdiv_to_l_+2
  6337  10BF  1003               	clrc
  6338  10C0  0D29               	rlf	??__tdiv_to_l_+1,w
  6339  10C1  0D2A               	rlf	??__tdiv_to_l_+2,w
  6340  10C2  00AB               	movwf	??__tdiv_to_l_+3
  6341  10C3  082B               	movf	??__tdiv_to_l_+3,w
  6342  10C4  00B1               	movwf	__tdiv_to_l_@exp1
  6343  10C5  0831               	movf	__tdiv_to_l_@exp1,w
  6344  10C6  1D03               	btfss	3,2
  6345  10C7  28C9               	goto	u4271
  6346  10C8  28CA               	goto	u4270
  6347  10C9                     u4271:
  6348  10C9  28D3               	goto	l2950
  6349  10CA                     u4270:
  6350  10CA                     l2946:
  6351  10CA  3000               	movlw	0
  6352  10CB  00A3               	movwf	?__tdiv_to_l_+3
  6353  10CC  3000               	movlw	0
  6354  10CD  00A2               	movwf	?__tdiv_to_l_+2
  6355  10CE  3000               	movlw	0
  6356  10CF  00A1               	movwf	?__tdiv_to_l_+1
  6357  10D0  3000               	movlw	0
  6358  10D1  00A0               	movwf	?__tdiv_to_l_
  6359  10D2  2973               	goto	l642
  6360  10D3                     l2950:
  6361  10D3  0824               	movf	__tdiv_to_l_@f2,w
  6362  10D4  00A8               	movwf	??__tdiv_to_l_
  6363  10D5  0825               	movf	__tdiv_to_l_@f2+1,w
  6364  10D6  00A9               	movwf	??__tdiv_to_l_+1
  6365  10D7  0826               	movf	__tdiv_to_l_@f2+2,w
  6366  10D8  00AA               	movwf	??__tdiv_to_l_+2
  6367  10D9  1003               	clrc
  6368  10DA  0D29               	rlf	??__tdiv_to_l_+1,w
  6369  10DB  0D2A               	rlf	??__tdiv_to_l_+2,w
  6370  10DC  00AB               	movwf	??__tdiv_to_l_+3
  6371  10DD  082B               	movf	??__tdiv_to_l_+3,w
  6372  10DE  00B0               	movwf	__tdiv_to_l_@cntr
  6373  10DF  0830               	movf	__tdiv_to_l_@cntr,w
  6374  10E0  1D03               	btfss	3,2
  6375  10E1  28E3               	goto	u4281
  6376  10E2  28E4               	goto	u4280
  6377  10E3                     u4281:
  6378  10E3  28E5               	goto	l643
  6379  10E4                     u4280:
  6380  10E4  28CA               	goto	l2946
  6381  10E5                     l643:
  6382  10E5  17A1               	bsf	__tdiv_to_l_@f1+1,7
  6383  10E6                     l2956:
  6384  10E6  30FF               	movlw	255
  6385  10E7  05A0               	andwf	__tdiv_to_l_@f1,f
  6386  10E8  30FF               	movlw	255
  6387  10E9  05A1               	andwf	__tdiv_to_l_@f1+1,f
  6388  10EA  3000               	movlw	0
  6389  10EB  05A2               	andwf	__tdiv_to_l_@f1+2,f
  6390  10EC                     l2958:
  6391  10EC  17A5               	bsf	__tdiv_to_l_@f2+1,7
  6392  10ED  30FF               	movlw	255
  6393  10EE  05A4               	andwf	__tdiv_to_l_@f2,f
  6394  10EF  30FF               	movlw	255
  6395  10F0  05A5               	andwf	__tdiv_to_l_@f2+1,f
  6396  10F1  3000               	movlw	0
  6397  10F2  05A6               	andwf	__tdiv_to_l_@f2+2,f
  6398  10F3  3000               	movlw	0
  6399  10F4  00AF               	movwf	__tdiv_to_l_@quot+3
  6400  10F5  3000               	movlw	0
  6401  10F6  00AE               	movwf	__tdiv_to_l_@quot+2
  6402  10F7  3000               	movlw	0
  6403  10F8  00AD               	movwf	__tdiv_to_l_@quot+1
  6404  10F9  3000               	movlw	0
  6405  10FA  00AC               	movwf	__tdiv_to_l_@quot
  6406  10FB                     l2960:
  6407  10FB  307F               	movlw	127
  6408  10FC  02B1               	subwf	__tdiv_to_l_@exp1,f
  6409  10FD                     l2962:
  6410  10FD  3098               	movlw	152
  6411  10FE  0730               	addwf	__tdiv_to_l_@cntr,w
  6412  10FF  00A8               	movwf	??__tdiv_to_l_
  6413  1100  0828               	movf	??__tdiv_to_l_,w
  6414  1101  02B1               	subwf	__tdiv_to_l_@exp1,f
  6415  1102  3018               	movlw	24
  6416  1103  00A8               	movwf	??__tdiv_to_l_
  6417  1104  0828               	movf	??__tdiv_to_l_,w
  6418  1105  00B0               	movwf	__tdiv_to_l_@cntr
  6419  1106                     l2964:
  6420  1106  3001               	movlw	1
  6421  1107  00A8               	movwf	??__tdiv_to_l_
  6422  1108                     u4295:
  6423  1108  1003               	clrc
  6424  1109  0DAC               	rlf	__tdiv_to_l_@quot,f
  6425  110A  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  6426  110B  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  6427  110C  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  6428  110D  0BA8               	decfsz	??__tdiv_to_l_,f
  6429  110E  2908               	goto	u4295
  6430  110F                     l2966:
  6431  110F  0826               	movf	__tdiv_to_l_@f2+2,w
  6432  1110  0222               	subwf	__tdiv_to_l_@f1+2,w
  6433  1111  1D03               	skipz
  6434  1112  2919               	goto	u4305
  6435  1113  0825               	movf	__tdiv_to_l_@f2+1,w
  6436  1114  0221               	subwf	__tdiv_to_l_@f1+1,w
  6437  1115  1D03               	skipz
  6438  1116  2919               	goto	u4305
  6439  1117  0824               	movf	__tdiv_to_l_@f2,w
  6440  1118  0220               	subwf	__tdiv_to_l_@f1,w
  6441  1119                     u4305:
  6442  1119  1C03               	skipc
  6443  111A  291C               	goto	u4301
  6444  111B  291D               	goto	u4300
  6445  111C                     u4301:
  6446  111C  2928               	goto	l2972
  6447  111D                     u4300:
  6448  111D                     l2968:
  6449  111D  0824               	movf	__tdiv_to_l_@f2,w
  6450  111E  02A0               	subwf	__tdiv_to_l_@f1,f
  6451  111F  0825               	movf	__tdiv_to_l_@f2+1,w
  6452  1120  1C03               	skipc
  6453  1121  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  6454  1122  02A1               	subwf	__tdiv_to_l_@f1+1,f
  6455  1123  0826               	movf	__tdiv_to_l_@f2+2,w
  6456  1124  1C03               	skipc
  6457  1125  0A26               	incf	__tdiv_to_l_@f2+2,w
  6458  1126  02A2               	subwf	__tdiv_to_l_@f1+2,f
  6459  1127                     l2970:
  6460  1127  142C               	bsf	__tdiv_to_l_@quot,0
  6461  1128                     l2972:
  6462  1128  3001               	movlw	1
  6463  1129                     u4315:
  6464  1129  1003               	clrc
  6465  112A  0DA0               	rlf	__tdiv_to_l_@f1,f
  6466  112B  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  6467  112C  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  6468  112D  3EFF               	addlw	-1
  6469  112E  1D03               	skipz
  6470  112F  2929               	goto	u4315
  6471  1130                     l2974:
  6472  1130  3001               	movlw	1
  6473  1131  02B0               	subwf	__tdiv_to_l_@cntr,f
  6474  1132  1D03               	btfss	3,2
  6475  1133  2935               	goto	u4321
  6476  1134  2936               	goto	u4320
  6477  1135                     u4321:
  6478  1135  2906               	goto	l2964
  6479  1136                     u4320:
  6480  1136                     l646:
  6481  1136  1FB1               	btfss	__tdiv_to_l_@exp1,7
  6482  1137  2939               	goto	u4331
  6483  1138  293A               	goto	u4330
  6484  1139                     u4331:
  6485  1139  2954               	goto	l2984
  6486  113A                     u4330:
  6487  113A                     l2976:
  6488  113A  0831               	movf	__tdiv_to_l_@exp1,w
  6489  113B  3A80               	xorlw	128
  6490  113C  3E97               	addlw	151
  6491  113D  1803               	skipnc
  6492  113E  2940               	goto	u4341
  6493  113F  2941               	goto	u4340
  6494  1140                     u4341:
  6495  1140  2942               	goto	l2982
  6496  1141                     u4340:
  6497  1141  28CA               	goto	l2946
  6498  1142                     l2982:
  6499  1142  3001               	movlw	1
  6500  1143                     u4355:
  6501  1143  1003               	clrc
  6502  1144  0CAF               	rrf	__tdiv_to_l_@quot+3,f
  6503  1145  0CAE               	rrf	__tdiv_to_l_@quot+2,f
  6504  1146  0CAD               	rrf	__tdiv_to_l_@quot+1,f
  6505  1147  0CAC               	rrf	__tdiv_to_l_@quot,f
  6506  1148  3EFF               	addlw	-1
  6507  1149  1D03               	skipz
  6508  114A  2943               	goto	u4355
  6509  114B  3001               	movlw	1
  6510  114C  00A8               	movwf	??__tdiv_to_l_
  6511  114D  0828               	movf	??__tdiv_to_l_,w
  6512  114E  07B1               	addwf	__tdiv_to_l_@exp1,f
  6513  114F  1D03               	btfss	3,2
  6514  1150  2952               	goto	u4361
  6515  1151  2953               	goto	u4360
  6516  1152                     u4361:
  6517  1152  2942               	goto	l2982
  6518  1153                     u4360:
  6519  1153  296B               	goto	l2992
  6520  1154                     l2984:
  6521  1154  3018               	movlw	24
  6522  1155  0231               	subwf	__tdiv_to_l_@exp1,w
  6523  1156  1C03               	skipc
  6524  1157  2959               	goto	u4371
  6525  1158  295A               	goto	u4370
  6526  1159                     u4371:
  6527  1159  2966               	goto	l653
  6528  115A                     u4370:
  6529  115A  28CA               	goto	l2946
  6530  115B                     l2990:
  6531  115B  3001               	movlw	1
  6532  115C  00A8               	movwf	??__tdiv_to_l_
  6533  115D                     u4385:
  6534  115D  1003               	clrc
  6535  115E  0DAC               	rlf	__tdiv_to_l_@quot,f
  6536  115F  0DAD               	rlf	__tdiv_to_l_@quot+1,f
  6537  1160  0DAE               	rlf	__tdiv_to_l_@quot+2,f
  6538  1161  0DAF               	rlf	__tdiv_to_l_@quot+3,f
  6539  1162  0BA8               	decfsz	??__tdiv_to_l_,f
  6540  1163  295D               	goto	u4385
  6541  1164  3001               	movlw	1
  6542  1165  02B1               	subwf	__tdiv_to_l_@exp1,f
  6543  1166                     l653:
  6544  1166  0831               	movf	__tdiv_to_l_@exp1,w
  6545  1167  1D03               	btfss	3,2
  6546  1168  296A               	goto	u4391
  6547  1169  296B               	goto	u4390
  6548  116A                     u4391:
  6549  116A  295B               	goto	l2990
  6550  116B                     u4390:
  6551  116B                     l2992:
  6552  116B  082F               	movf	__tdiv_to_l_@quot+3,w
  6553  116C  00A3               	movwf	?__tdiv_to_l_+3
  6554  116D  082E               	movf	__tdiv_to_l_@quot+2,w
  6555  116E  00A2               	movwf	?__tdiv_to_l_+2
  6556  116F  082D               	movf	__tdiv_to_l_@quot+1,w
  6557  1170  00A1               	movwf	?__tdiv_to_l_+1
  6558  1171  082C               	movf	__tdiv_to_l_@quot,w
  6559  1172  00A0               	movwf	?__tdiv_to_l_
  6560  1173                     l642:
  6561  1173  0008               	return
  6562  1174                     __end_of__tdiv_to_l_:
  6563                           
  6564                           	psect	text19
  6565  087E                     __ptext19:	
  6566 ;; *************** function __div_to_l_ *****************
  6567 ;; Defined at:
  6568 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  f1              4    0[BANK0 ] unsigned long 
  6571 ;;  f2              4    4[BANK0 ] unsigned long 
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;  quot            4    9[BANK0 ] unsigned long 
  6574 ;;  exp1            1   14[BANK0 ] unsigned char 
  6575 ;;  cntr            1   13[BANK0 ] unsigned char 
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  4    0[BANK0 ] unsigned long 
  6578 ;; Registers used:
  6579 ;;		wreg, status,2, status,0
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6585 ;;      Params:         0       8       0       0       0
  6586 ;;      Locals:         0       6       0       0       0
  6587 ;;      Temps:          0       1       0       0       0
  6588 ;;      Totals:         0      15       0       0       0
  6589 ;;Total ram usage:       15 bytes
  6590 ;; Hardware stack levels used:    1
  6591 ;; Hardware stack levels required when called:    2
  6592 ;; This function calls:
  6593 ;;		Nothing
  6594 ;; This function is called by:
  6595 ;;		_sprintf
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           
  6600                           ;psect for function __div_to_l_
  6601  087E                     __div_to_l_:
  6602  087E                     l2996:	
  6603                           ;incstack = 0
  6604                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6605                           
  6606  087E  1003               	clrc
  6607  087F  1283               	bcf	3,5	;RP0=0, select bank0
  6608  0880  1303               	bcf	3,6	;RP1=0, select bank0
  6609  0881  0D22               	rlf	__div_to_l_@f1+2,w
  6610  0882  0D23               	rlf	__div_to_l_@f1+3,w
  6611  0883  00A8               	movwf	??__div_to_l_
  6612  0884  0828               	movf	??__div_to_l_,w
  6613  0885  00AE               	movwf	__div_to_l_@exp1
  6614  0886  082E               	movf	__div_to_l_@exp1,w
  6615  0887  1D03               	btfss	3,2
  6616  0888  288A               	goto	u4401
  6617  0889  288B               	goto	u4400
  6618  088A                     u4401:
  6619  088A  2894               	goto	l3002
  6620  088B                     u4400:
  6621  088B                     l2998:
  6622  088B  3000               	movlw	0
  6623  088C  00A3               	movwf	?__div_to_l_+3
  6624  088D  3000               	movlw	0
  6625  088E  00A2               	movwf	?__div_to_l_+2
  6626  088F  3000               	movlw	0
  6627  0890  00A1               	movwf	?__div_to_l_+1
  6628  0891  3000               	movlw	0
  6629  0892  00A0               	movwf	?__div_to_l_
  6630  0893  293B               	goto	l595
  6631  0894                     l3002:
  6632  0894  1003               	clrc
  6633  0895  0D26               	rlf	__div_to_l_@f2+2,w
  6634  0896  0D27               	rlf	__div_to_l_@f2+3,w
  6635  0897  00A8               	movwf	??__div_to_l_
  6636  0898  0828               	movf	??__div_to_l_,w
  6637  0899  00AD               	movwf	__div_to_l_@cntr
  6638  089A  082D               	movf	__div_to_l_@cntr,w
  6639  089B  1D03               	btfss	3,2
  6640  089C  289E               	goto	u4411
  6641  089D  289F               	goto	u4410
  6642  089E                     u4411:
  6643  089E  28A0               	goto	l596
  6644  089F                     u4410:
  6645  089F  288B               	goto	l2998
  6646  08A0                     l596:
  6647  08A0  17A2               	bsf	__div_to_l_@f1+2,7
  6648  08A1                     l3008:
  6649  08A1  30FF               	movlw	255
  6650  08A2  05A0               	andwf	__div_to_l_@f1,f
  6651  08A3  30FF               	movlw	255
  6652  08A4  05A1               	andwf	__div_to_l_@f1+1,f
  6653  08A5  30FF               	movlw	255
  6654  08A6  05A2               	andwf	__div_to_l_@f1+2,f
  6655  08A7  3000               	movlw	0
  6656  08A8  05A3               	andwf	__div_to_l_@f1+3,f
  6657  08A9                     l3010:
  6658  08A9  17A6               	bsf	__div_to_l_@f2+2,7
  6659  08AA  30FF               	movlw	255
  6660  08AB  05A4               	andwf	__div_to_l_@f2,f
  6661  08AC  30FF               	movlw	255
  6662  08AD  05A5               	andwf	__div_to_l_@f2+1,f
  6663  08AE  30FF               	movlw	255
  6664  08AF  05A6               	andwf	__div_to_l_@f2+2,f
  6665  08B0  3000               	movlw	0
  6666  08B1  05A7               	andwf	__div_to_l_@f2+3,f
  6667  08B2  3000               	movlw	0
  6668  08B3  00AC               	movwf	__div_to_l_@quot+3
  6669  08B4  3000               	movlw	0
  6670  08B5  00AB               	movwf	__div_to_l_@quot+2
  6671  08B6  3000               	movlw	0
  6672  08B7  00AA               	movwf	__div_to_l_@quot+1
  6673  08B8  3000               	movlw	0
  6674  08B9  00A9               	movwf	__div_to_l_@quot
  6675  08BA                     l3012:
  6676  08BA  307F               	movlw	127
  6677  08BB  02AE               	subwf	__div_to_l_@exp1,f
  6678  08BC                     l3014:
  6679  08BC  30A0               	movlw	160
  6680  08BD  072D               	addwf	__div_to_l_@cntr,w
  6681  08BE  00A8               	movwf	??__div_to_l_
  6682  08BF  0828               	movf	??__div_to_l_,w
  6683  08C0  02AE               	subwf	__div_to_l_@exp1,f
  6684  08C1  3020               	movlw	32
  6685  08C2  00A8               	movwf	??__div_to_l_
  6686  08C3  0828               	movf	??__div_to_l_,w
  6687  08C4  00AD               	movwf	__div_to_l_@cntr
  6688  08C5                     l3016:
  6689  08C5  3001               	movlw	1
  6690  08C6  00A8               	movwf	??__div_to_l_
  6691  08C7                     u4425:
  6692  08C7  1003               	clrc
  6693  08C8  0DA9               	rlf	__div_to_l_@quot,f
  6694  08C9  0DAA               	rlf	__div_to_l_@quot+1,f
  6695  08CA  0DAB               	rlf	__div_to_l_@quot+2,f
  6696  08CB  0DAC               	rlf	__div_to_l_@quot+3,f
  6697  08CC  0BA8               	decfsz	??__div_to_l_,f
  6698  08CD  28C7               	goto	u4425
  6699  08CE                     l3018:
  6700  08CE  0827               	movf	__div_to_l_@f2+3,w
  6701  08CF  0223               	subwf	__div_to_l_@f1+3,w
  6702  08D0  1D03               	skipz
  6703  08D1  28DC               	goto	u4435
  6704  08D2  0826               	movf	__div_to_l_@f2+2,w
  6705  08D3  0222               	subwf	__div_to_l_@f1+2,w
  6706  08D4  1D03               	skipz
  6707  08D5  28DC               	goto	u4435
  6708  08D6  0825               	movf	__div_to_l_@f2+1,w
  6709  08D7  0221               	subwf	__div_to_l_@f1+1,w
  6710  08D8  1D03               	skipz
  6711  08D9  28DC               	goto	u4435
  6712  08DA  0824               	movf	__div_to_l_@f2,w
  6713  08DB  0220               	subwf	__div_to_l_@f1,w
  6714  08DC                     u4435:
  6715  08DC  1C03               	skipc
  6716  08DD  28DF               	goto	u4431
  6717  08DE  28E0               	goto	u4430
  6718  08DF                     u4431:
  6719  08DF  28EF               	goto	l3024
  6720  08E0                     u4430:
  6721  08E0                     l3020:
  6722  08E0  0824               	movf	__div_to_l_@f2,w
  6723  08E1  02A0               	subwf	__div_to_l_@f1,f
  6724  08E2  0825               	movf	__div_to_l_@f2+1,w
  6725  08E3  1C03               	skipc
  6726  08E4  0F25               	incfsz	__div_to_l_@f2+1,w
  6727  08E5  02A1               	subwf	__div_to_l_@f1+1,f
  6728  08E6  0826               	movf	__div_to_l_@f2+2,w
  6729  08E7  1C03               	skipc
  6730  08E8  0F26               	incfsz	__div_to_l_@f2+2,w
  6731  08E9  02A2               	subwf	__div_to_l_@f1+2,f
  6732  08EA  0827               	movf	__div_to_l_@f2+3,w
  6733  08EB  1C03               	skipc
  6734  08EC  0F27               	incfsz	__div_to_l_@f2+3,w
  6735  08ED  02A3               	subwf	__div_to_l_@f1+3,f
  6736  08EE                     l3022:
  6737  08EE  1429               	bsf	__div_to_l_@quot,0
  6738  08EF                     l3024:
  6739  08EF  3001               	movlw	1
  6740  08F0  00A8               	movwf	??__div_to_l_
  6741  08F1                     u4445:
  6742  08F1  1003               	clrc
  6743  08F2  0DA0               	rlf	__div_to_l_@f1,f
  6744  08F3  0DA1               	rlf	__div_to_l_@f1+1,f
  6745  08F4  0DA2               	rlf	__div_to_l_@f1+2,f
  6746  08F5  0DA3               	rlf	__div_to_l_@f1+3,f
  6747  08F6  0BA8               	decfsz	??__div_to_l_,f
  6748  08F7  28F1               	goto	u4445
  6749  08F8                     l3026:
  6750  08F8  3001               	movlw	1
  6751  08F9  02AD               	subwf	__div_to_l_@cntr,f
  6752  08FA  1D03               	btfss	3,2
  6753  08FB  28FD               	goto	u4451
  6754  08FC  28FE               	goto	u4450
  6755  08FD                     u4451:
  6756  08FD  28C5               	goto	l3016
  6757  08FE                     u4450:
  6758  08FE                     l599:
  6759  08FE  1FAE               	btfss	__div_to_l_@exp1,7
  6760  08FF  2901               	goto	u4461
  6761  0900  2902               	goto	u4460
  6762  0901                     u4461:
  6763  0901  291C               	goto	l3036
  6764  0902                     u4460:
  6765  0902                     l3028:
  6766  0902  082E               	movf	__div_to_l_@exp1,w
  6767  0903  3A80               	xorlw	128
  6768  0904  3E9F               	addlw	159
  6769  0905  1803               	skipnc
  6770  0906  2908               	goto	u4471
  6771  0907  2909               	goto	u4470
  6772  0908                     u4471:
  6773  0908  290A               	goto	l3034
  6774  0909                     u4470:
  6775  0909  288B               	goto	l2998
  6776  090A                     l3034:
  6777  090A  3001               	movlw	1
  6778  090B                     u4485:
  6779  090B  1003               	clrc
  6780  090C  0CAC               	rrf	__div_to_l_@quot+3,f
  6781  090D  0CAB               	rrf	__div_to_l_@quot+2,f
  6782  090E  0CAA               	rrf	__div_to_l_@quot+1,f
  6783  090F  0CA9               	rrf	__div_to_l_@quot,f
  6784  0910  3EFF               	addlw	-1
  6785  0911  1D03               	skipz
  6786  0912  290B               	goto	u4485
  6787  0913  3001               	movlw	1
  6788  0914  00A8               	movwf	??__div_to_l_
  6789  0915  0828               	movf	??__div_to_l_,w
  6790  0916  07AE               	addwf	__div_to_l_@exp1,f
  6791  0917  1D03               	btfss	3,2
  6792  0918  291A               	goto	u4491
  6793  0919  291B               	goto	u4490
  6794  091A                     u4491:
  6795  091A  290A               	goto	l3034
  6796  091B                     u4490:
  6797  091B  2933               	goto	l3044
  6798  091C                     l3036:
  6799  091C  3020               	movlw	32
  6800  091D  022E               	subwf	__div_to_l_@exp1,w
  6801  091E  1C03               	skipc
  6802  091F  2921               	goto	u4501
  6803  0920  2922               	goto	u4500
  6804  0921                     u4501:
  6805  0921  292E               	goto	l606
  6806  0922                     u4500:
  6807  0922  288B               	goto	l2998
  6808  0923                     l3042:
  6809  0923  3001               	movlw	1
  6810  0924  00A8               	movwf	??__div_to_l_
  6811  0925                     u4515:
  6812  0925  1003               	clrc
  6813  0926  0DA9               	rlf	__div_to_l_@quot,f
  6814  0927  0DAA               	rlf	__div_to_l_@quot+1,f
  6815  0928  0DAB               	rlf	__div_to_l_@quot+2,f
  6816  0929  0DAC               	rlf	__div_to_l_@quot+3,f
  6817  092A  0BA8               	decfsz	??__div_to_l_,f
  6818  092B  2925               	goto	u4515
  6819  092C  3001               	movlw	1
  6820  092D  02AE               	subwf	__div_to_l_@exp1,f
  6821  092E                     l606:
  6822  092E  082E               	movf	__div_to_l_@exp1,w
  6823  092F  1D03               	btfss	3,2
  6824  0930  2932               	goto	u4521
  6825  0931  2933               	goto	u4520
  6826  0932                     u4521:
  6827  0932  2923               	goto	l3042
  6828  0933                     u4520:
  6829  0933                     l3044:
  6830  0933  082C               	movf	__div_to_l_@quot+3,w
  6831  0934  00A3               	movwf	?__div_to_l_+3
  6832  0935  082B               	movf	__div_to_l_@quot+2,w
  6833  0936  00A2               	movwf	?__div_to_l_+2
  6834  0937  082A               	movf	__div_to_l_@quot+1,w
  6835  0938  00A1               	movwf	?__div_to_l_+1
  6836  0939  0829               	movf	__div_to_l_@quot,w
  6837  093A  00A0               	movwf	?__div_to_l_
  6838  093B                     l595:
  6839  093B  0008               	return
  6840  093C                     __end_of__div_to_l_:
  6841                           
  6842                           	psect	text20
  6843  1F44                     __ptext20:	
  6844 ;; *************** function ___xxtofl *****************
  6845 ;; Defined at:
  6846 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  sign            1    wreg     unsigned char 
  6849 ;;  val             4    0[BANK0 ] long 
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;  sign            1    8[BANK0 ] unsigned char 
  6852 ;;  arg             4   10[BANK0 ] unsigned long 
  6853 ;;  exp             1    9[BANK0 ] unsigned char 
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  4    0[BANK0 ] unsigned char 
  6856 ;; Registers used:
  6857 ;;		wreg, status,2, status,0
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6863 ;;      Params:         0       4       0       0       0
  6864 ;;      Locals:         0       6       0       0       0
  6865 ;;      Temps:          0       4       0       0       0
  6866 ;;      Totals:         0      14       0       0       0
  6867 ;;Total ram usage:       14 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    2
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_sprintf
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           
  6878                           ;psect for function ___xxtofl
  6879  1F44                     ___xxtofl:
  6880                           
  6881                           ;incstack = 0
  6882                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6883                           ;___xxtofl@sign stored from wreg
  6884  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  6885  1F45  1303               	bcf	3,6	;RP1=0, select bank0
  6886  1F46  00A8               	movwf	___xxtofl@sign
  6887  1F47                     l3188:
  6888  1F47  0828               	movf	___xxtofl@sign,w
  6889  1F48  1903               	btfsc	3,2
  6890  1F49  2F4B               	goto	u4911
  6891  1F4A  2F4C               	goto	u4910
  6892  1F4B                     u4911:
  6893  1F4B  2F60               	goto	l3194
  6894  1F4C                     u4910:
  6895  1F4C                     l3190:
  6896  1F4C  1FA3               	btfss	___xxtofl@val+3,7
  6897  1F4D  2F4F               	goto	u4921
  6898  1F4E  2F50               	goto	u4920
  6899  1F4F                     u4921:
  6900  1F4F  2F60               	goto	l3194
  6901  1F50                     u4920:
  6902  1F50                     l3192:
  6903  1F50  0920               	comf	___xxtofl@val,w
  6904  1F51  00AA               	movwf	___xxtofl@arg
  6905  1F52  0921               	comf	___xxtofl@val+1,w
  6906  1F53  00AB               	movwf	___xxtofl@arg+1
  6907  1F54  0922               	comf	___xxtofl@val+2,w
  6908  1F55  00AC               	movwf	___xxtofl@arg+2
  6909  1F56  0923               	comf	___xxtofl@val+3,w
  6910  1F57  00AD               	movwf	___xxtofl@arg+3
  6911  1F58  0AAA               	incf	___xxtofl@arg,f
  6912  1F59  1903               	skipnz
  6913  1F5A  0AAB               	incf	___xxtofl@arg+1,f
  6914  1F5B  1903               	skipnz
  6915  1F5C  0AAC               	incf	___xxtofl@arg+2,f
  6916  1F5D  1903               	skipnz
  6917  1F5E  0AAD               	incf	___xxtofl@arg+3,f
  6918  1F5F  2F68               	goto	l892
  6919  1F60                     l3194:
  6920  1F60  0823               	movf	___xxtofl@val+3,w
  6921  1F61  00AD               	movwf	___xxtofl@arg+3
  6922  1F62  0822               	movf	___xxtofl@val+2,w
  6923  1F63  00AC               	movwf	___xxtofl@arg+2
  6924  1F64  0821               	movf	___xxtofl@val+1,w
  6925  1F65  00AB               	movwf	___xxtofl@arg+1
  6926  1F66  0820               	movf	___xxtofl@val,w
  6927  1F67  00AA               	movwf	___xxtofl@arg
  6928  1F68                     l892:
  6929  1F68  0823               	movf	___xxtofl@val+3,w
  6930  1F69  0422               	iorwf	___xxtofl@val+2,w
  6931  1F6A  0421               	iorwf	___xxtofl@val+1,w
  6932  1F6B  0420               	iorwf	___xxtofl@val,w
  6933  1F6C  1D03               	skipz
  6934  1F6D  2F6F               	goto	u4931
  6935  1F6E  2F70               	goto	u4930
  6936  1F6F                     u4931:
  6937  1F6F  2F79               	goto	l3200
  6938  1F70                     u4930:
  6939  1F70                     l3196:
  6940  1F70  3000               	movlw	0
  6941  1F71  00A3               	movwf	?___xxtofl+3
  6942  1F72  3000               	movlw	0
  6943  1F73  00A2               	movwf	?___xxtofl+2
  6944  1F74  3000               	movlw	0
  6945  1F75  00A1               	movwf	?___xxtofl+1
  6946  1F76  3000               	movlw	0
  6947  1F77  00A0               	movwf	?___xxtofl
  6948  1F78  2FFF               	goto	l894
  6949  1F79                     l3200:
  6950  1F79  3096               	movlw	150
  6951  1F7A  00A4               	movwf	??___xxtofl
  6952  1F7B  0824               	movf	??___xxtofl,w
  6953  1F7C  00A9               	movwf	___xxtofl@exp
  6954  1F7D  2F8B               	goto	l3204
  6955  1F7E                     l3202:
  6956  1F7E  3001               	movlw	1
  6957  1F7F  00A4               	movwf	??___xxtofl
  6958  1F80  0824               	movf	??___xxtofl,w
  6959  1F81  07A9               	addwf	___xxtofl@exp,f
  6960  1F82  3001               	movlw	1
  6961  1F83                     u4945:
  6962  1F83  1003               	clrc
  6963  1F84  0CAD               	rrf	___xxtofl@arg+3,f
  6964  1F85  0CAC               	rrf	___xxtofl@arg+2,f
  6965  1F86  0CAB               	rrf	___xxtofl@arg+1,f
  6966  1F87  0CAA               	rrf	___xxtofl@arg,f
  6967  1F88  3EFF               	addlw	-1
  6968  1F89  1D03               	skipz
  6969  1F8A  2F83               	goto	u4945
  6970  1F8B                     l3204:
  6971  1F8B  30FE               	movlw	254
  6972  1F8C  052D               	andwf	___xxtofl@arg+3,w
  6973  1F8D  1D03               	btfss	3,2
  6974  1F8E  2F90               	goto	u4951
  6975  1F8F  2F91               	goto	u4950
  6976  1F90                     u4951:
  6977  1F90  2F7E               	goto	l3202
  6978  1F91                     u4950:
  6979  1F91  2FAD               	goto	l898
  6980  1F92                     l3206:
  6981  1F92  3001               	movlw	1
  6982  1F93  00A4               	movwf	??___xxtofl
  6983  1F94  0824               	movf	??___xxtofl,w
  6984  1F95  07A9               	addwf	___xxtofl@exp,f
  6985  1F96                     l3208:
  6986  1F96  3001               	movlw	1
  6987  1F97  07AA               	addwf	___xxtofl@arg,f
  6988  1F98  3000               	movlw	0
  6989  1F99  1803               	skipnc
  6990  1F9A  3001               	movlw	1
  6991  1F9B  07AB               	addwf	___xxtofl@arg+1,f
  6992  1F9C  3000               	movlw	0
  6993  1F9D  1803               	skipnc
  6994  1F9E  3001               	movlw	1
  6995  1F9F  07AC               	addwf	___xxtofl@arg+2,f
  6996  1FA0  3000               	movlw	0
  6997  1FA1  1803               	skipnc
  6998  1FA2  3001               	movlw	1
  6999  1FA3  07AD               	addwf	___xxtofl@arg+3,f
  7000  1FA4                     l3210:
  7001  1FA4  3001               	movlw	1
  7002  1FA5                     u4965:
  7003  1FA5  1003               	clrc
  7004  1FA6  0CAD               	rrf	___xxtofl@arg+3,f
  7005  1FA7  0CAC               	rrf	___xxtofl@arg+2,f
  7006  1FA8  0CAB               	rrf	___xxtofl@arg+1,f
  7007  1FA9  0CAA               	rrf	___xxtofl@arg,f
  7008  1FAA  3EFF               	addlw	-1
  7009  1FAB  1D03               	skipz
  7010  1FAC  2FA5               	goto	u4965
  7011  1FAD                     l898:
  7012  1FAD  30FF               	movlw	255
  7013  1FAE  052D               	andwf	___xxtofl@arg+3,w
  7014  1FAF  1D03               	btfss	3,2
  7015  1FB0  2FB2               	goto	u4971
  7016  1FB1  2FB3               	goto	u4970
  7017  1FB2                     u4971:
  7018  1FB2  2F92               	goto	l3206
  7019  1FB3                     u4970:
  7020  1FB3  2FBF               	goto	l3214
  7021  1FB4                     l3212:
  7022  1FB4  3001               	movlw	1
  7023  1FB5  02A9               	subwf	___xxtofl@exp,f
  7024  1FB6  3001               	movlw	1
  7025  1FB7  00A4               	movwf	??___xxtofl
  7026  1FB8                     u4985:
  7027  1FB8  1003               	clrc
  7028  1FB9  0DAA               	rlf	___xxtofl@arg,f
  7029  1FBA  0DAB               	rlf	___xxtofl@arg+1,f
  7030  1FBB  0DAC               	rlf	___xxtofl@arg+2,f
  7031  1FBC  0DAD               	rlf	___xxtofl@arg+3,f
  7032  1FBD  0BA4               	decfsz	??___xxtofl,f
  7033  1FBE  2FB8               	goto	u4985
  7034  1FBF                     l3214:
  7035  1FBF  1BAC               	btfsc	___xxtofl@arg+2,7
  7036  1FC0  2FC2               	goto	u4991
  7037  1FC1  2FC3               	goto	u4990
  7038  1FC2                     u4991:
  7039  1FC2  2FC9               	goto	l905
  7040  1FC3                     u4990:
  7041  1FC3                     l3216:
  7042  1FC3  3002               	movlw	2
  7043  1FC4  0229               	subwf	___xxtofl@exp,w
  7044  1FC5  1803               	skipnc
  7045  1FC6  2FC8               	goto	u5001
  7046  1FC7  2FC9               	goto	u5000
  7047  1FC8                     u5001:
  7048  1FC8  2FB4               	goto	l3212
  7049  1FC9                     u5000:
  7050  1FC9                     l905:
  7051  1FC9  1829               	btfsc	___xxtofl@exp,0
  7052  1FCA  2FCC               	goto	u5011
  7053  1FCB  2FCD               	goto	u5010
  7054  1FCC                     u5011:
  7055  1FCC  2FD5               	goto	l906
  7056  1FCD                     u5010:
  7057  1FCD                     l3218:
  7058  1FCD  30FF               	movlw	255
  7059  1FCE  05AA               	andwf	___xxtofl@arg,f
  7060  1FCF  30FF               	movlw	255
  7061  1FD0  05AB               	andwf	___xxtofl@arg+1,f
  7062  1FD1  307F               	movlw	127
  7063  1FD2  05AC               	andwf	___xxtofl@arg+2,f
  7064  1FD3  30FF               	movlw	255
  7065  1FD4  05AD               	andwf	___xxtofl@arg+3,f
  7066  1FD5                     l906:
  7067  1FD5  1003               	clrc
  7068  1FD6  0CA9               	rrf	___xxtofl@exp,f
  7069  1FD7                     l3220:
  7070  1FD7  0829               	movf	___xxtofl@exp,w
  7071  1FD8  00A4               	movwf	??___xxtofl
  7072  1FD9  01A5               	clrf	??___xxtofl+1
  7073  1FDA  01A6               	clrf	??___xxtofl+2
  7074  1FDB  01A7               	clrf	??___xxtofl+3
  7075  1FDC  3018               	movlw	24
  7076  1FDD                     u5025:
  7077  1FDD  1003               	clrc
  7078  1FDE  0DA4               	rlf	??___xxtofl,f
  7079  1FDF  0DA5               	rlf	??___xxtofl+1,f
  7080  1FE0  0DA6               	rlf	??___xxtofl+2,f
  7081  1FE1  0DA7               	rlf	??___xxtofl+3,f
  7082  1FE2                     u5020:
  7083  1FE2  3EFF               	addlw	-1
  7084  1FE3  1D03               	skipz
  7085  1FE4  2FDD               	goto	u5025
  7086  1FE5  0824               	movf	??___xxtofl,w
  7087  1FE6  04AA               	iorwf	___xxtofl@arg,f
  7088  1FE7  0825               	movf	??___xxtofl+1,w
  7089  1FE8  04AB               	iorwf	___xxtofl@arg+1,f
  7090  1FE9  0826               	movf	??___xxtofl+2,w
  7091  1FEA  04AC               	iorwf	___xxtofl@arg+2,f
  7092  1FEB  0827               	movf	??___xxtofl+3,w
  7093  1FEC  04AD               	iorwf	___xxtofl@arg+3,f
  7094  1FED                     l3222:
  7095  1FED  0828               	movf	___xxtofl@sign,w
  7096  1FEE  1903               	btfsc	3,2
  7097  1FEF  2FF1               	goto	u5031
  7098  1FF0  2FF2               	goto	u5030
  7099  1FF1                     u5031:
  7100  1FF1  2FF7               	goto	l3228
  7101  1FF2                     u5030:
  7102  1FF2                     l3224:
  7103  1FF2  1FA3               	btfss	___xxtofl@val+3,7
  7104  1FF3  2FF5               	goto	u5041
  7105  1FF4  2FF6               	goto	u5040
  7106  1FF5                     u5041:
  7107  1FF5  2FF7               	goto	l3228
  7108  1FF6                     u5040:
  7109  1FF6                     l3226:
  7110  1FF6  17AD               	bsf	___xxtofl@arg+3,7
  7111  1FF7                     l3228:
  7112  1FF7  082D               	movf	___xxtofl@arg+3,w
  7113  1FF8  00A3               	movwf	?___xxtofl+3
  7114  1FF9  082C               	movf	___xxtofl@arg+2,w
  7115  1FFA  00A2               	movwf	?___xxtofl+2
  7116  1FFB  082B               	movf	___xxtofl@arg+1,w
  7117  1FFC  00A1               	movwf	?___xxtofl+1
  7118  1FFD  082A               	movf	___xxtofl@arg,w
  7119  1FFE  00A0               	movwf	?___xxtofl
  7120  1FFF                     l894:
  7121  1FFF  0008               	return
  7122  2000                     __end_of___xxtofl:
  7123                           
  7124                           	psect	text21
  7125  19B7                     __ptext21:	
  7126 ;; *************** function ___wmul *****************
  7127 ;; Defined at:
  7128 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7131 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  product         2    4[BANK0 ] unsigned int 
  7134 ;; Return value:  Size  Location     Type
  7135 ;;                  2    0[BANK0 ] unsigned int 
  7136 ;; Registers used:
  7137 ;;		wreg, status,2, status,0
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7143 ;;      Params:         0       4       0       0       0
  7144 ;;      Locals:         0       2       0       0       0
  7145 ;;      Temps:          0       0       0       0       0
  7146 ;;      Totals:         0       6       0       0       0
  7147 ;;Total ram usage:        6 bytes
  7148 ;; Hardware stack levels used:    1
  7149 ;; Hardware stack levels required when called:    2
  7150 ;; This function calls:
  7151 ;;		Nothing
  7152 ;; This function is called by:
  7153 ;;		_sprintf
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           
  7158                           ;psect for function ___wmul
  7159  19B7                     ___wmul:
  7160  19B7                     l3048:	
  7161                           ;incstack = 0
  7162                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7163                           
  7164  19B7  1283               	bcf	3,5	;RP0=0, select bank0
  7165  19B8  1303               	bcf	3,6	;RP1=0, select bank0
  7166  19B9  01A4               	clrf	___wmul@product
  7167  19BA  01A5               	clrf	___wmul@product+1
  7168  19BB                     l3050:
  7169  19BB  1C20               	btfss	___wmul@multiplier,0
  7170  19BC  29BE               	goto	u4531
  7171  19BD  29BF               	goto	u4530
  7172  19BE                     u4531:
  7173  19BE  29C5               	goto	l425
  7174  19BF                     u4530:
  7175  19BF                     l3052:
  7176  19BF  0822               	movf	___wmul@multiplicand,w
  7177  19C0  07A4               	addwf	___wmul@product,f
  7178  19C1  1803               	skipnc
  7179  19C2  0AA5               	incf	___wmul@product+1,f
  7180  19C3  0823               	movf	___wmul@multiplicand+1,w
  7181  19C4  07A5               	addwf	___wmul@product+1,f
  7182  19C5                     l425:
  7183  19C5  3001               	movlw	1
  7184  19C6                     u4545:
  7185  19C6  1003               	clrc
  7186  19C7  0DA2               	rlf	___wmul@multiplicand,f
  7187  19C8  0DA3               	rlf	___wmul@multiplicand+1,f
  7188  19C9  3EFF               	addlw	-1
  7189  19CA  1D03               	skipz
  7190  19CB  29C6               	goto	u4545
  7191  19CC                     l3054:
  7192  19CC  3001               	movlw	1
  7193  19CD                     u4555:
  7194  19CD  1003               	clrc
  7195  19CE  0CA1               	rrf	___wmul@multiplier+1,f
  7196  19CF  0CA0               	rrf	___wmul@multiplier,f
  7197  19D0  3EFF               	addlw	-1
  7198  19D1  1D03               	skipz
  7199  19D2  29CD               	goto	u4555
  7200  19D3                     l3056:
  7201  19D3  0820               	movf	___wmul@multiplier,w
  7202  19D4  0421               	iorwf	___wmul@multiplier+1,w
  7203  19D5  1D03               	btfss	3,2
  7204  19D6  29D8               	goto	u4561
  7205  19D7  29D9               	goto	u4560
  7206  19D8                     u4561:
  7207  19D8  29BB               	goto	l3050
  7208  19D9                     u4560:
  7209  19D9                     l3058:
  7210  19D9  0825               	movf	___wmul@product+1,w
  7211  19DA  00A1               	movwf	?___wmul+1
  7212  19DB  0824               	movf	___wmul@product,w
  7213  19DC  00A0               	movwf	?___wmul
  7214  19DD                     l427:
  7215  19DD  0008               	return
  7216  19DE                     __end_of___wmul:
  7217                           
  7218                           	psect	text22
  7219  1C3C                     __ptext22:	
  7220 ;; *************** function ___llmod *****************
  7221 ;; Defined at:
  7222 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  divisor         4    0[BANK0 ] unsigned long 
  7225 ;;  dividend        4    4[BANK0 ] unsigned long 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;  counter         1    9[BANK0 ] unsigned char 
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  4    0[BANK0 ] unsigned long 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7237 ;;      Params:         0       8       0       0       0
  7238 ;;      Locals:         0       1       0       0       0
  7239 ;;      Temps:          0       1       0       0       0
  7240 ;;      Totals:         0      10       0       0       0
  7241 ;;Total ram usage:       10 bytes
  7242 ;; Hardware stack levels used:    1
  7243 ;; Hardware stack levels required when called:    2
  7244 ;; This function calls:
  7245 ;;		Nothing
  7246 ;; This function is called by:
  7247 ;;		_sprintf
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           
  7252                           ;psect for function ___llmod
  7253  1C3C                     ___llmod:
  7254  1C3C                     l3162:	
  7255                           ;incstack = 0
  7256                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7257                           
  7258  1C3C  1283               	bcf	3,5	;RP0=0, select bank0
  7259  1C3D  1303               	bcf	3,6	;RP1=0, select bank0
  7260  1C3E  0823               	movf	___llmod@divisor+3,w
  7261  1C3F  0422               	iorwf	___llmod@divisor+2,w
  7262  1C40  0421               	iorwf	___llmod@divisor+1,w
  7263  1C41  0420               	iorwf	___llmod@divisor,w
  7264  1C42  1903               	skipnz
  7265  1C43  2C45               	goto	u4851
  7266  1C44  2C46               	goto	u4850
  7267  1C45                     u4851:
  7268  1C45  2C89               	goto	l3178
  7269  1C46                     u4850:
  7270  1C46                     l3164:
  7271  1C46  01A9               	clrf	___llmod@counter
  7272  1C47  0AA9               	incf	___llmod@counter,f
  7273  1C48  2C56               	goto	l3168
  7274  1C49                     l3166:
  7275  1C49  3001               	movlw	1
  7276  1C4A  00A8               	movwf	??___llmod
  7277  1C4B                     u4865:
  7278  1C4B  1003               	clrc
  7279  1C4C  0DA0               	rlf	___llmod@divisor,f
  7280  1C4D  0DA1               	rlf	___llmod@divisor+1,f
  7281  1C4E  0DA2               	rlf	___llmod@divisor+2,f
  7282  1C4F  0DA3               	rlf	___llmod@divisor+3,f
  7283  1C50  0BA8               	decfsz	??___llmod,f
  7284  1C51  2C4B               	goto	u4865
  7285  1C52  3001               	movlw	1
  7286  1C53  00A8               	movwf	??___llmod
  7287  1C54  0828               	movf	??___llmod,w
  7288  1C55  07A9               	addwf	___llmod@counter,f
  7289  1C56                     l3168:
  7290  1C56  1FA3               	btfss	___llmod@divisor+3,7
  7291  1C57  2C59               	goto	u4871
  7292  1C58  2C5A               	goto	u4870
  7293  1C59                     u4871:
  7294  1C59  2C49               	goto	l3166
  7295  1C5A                     u4870:
  7296  1C5A                     l3170:
  7297  1C5A  0823               	movf	___llmod@divisor+3,w
  7298  1C5B  0227               	subwf	___llmod@dividend+3,w
  7299  1C5C  1D03               	skipz
  7300  1C5D  2C68               	goto	u4885
  7301  1C5E  0822               	movf	___llmod@divisor+2,w
  7302  1C5F  0226               	subwf	___llmod@dividend+2,w
  7303  1C60  1D03               	skipz
  7304  1C61  2C68               	goto	u4885
  7305  1C62  0821               	movf	___llmod@divisor+1,w
  7306  1C63  0225               	subwf	___llmod@dividend+1,w
  7307  1C64  1D03               	skipz
  7308  1C65  2C68               	goto	u4885
  7309  1C66  0820               	movf	___llmod@divisor,w
  7310  1C67  0224               	subwf	___llmod@dividend,w
  7311  1C68                     u4885:
  7312  1C68  1C03               	skipc
  7313  1C69  2C6B               	goto	u4881
  7314  1C6A  2C6C               	goto	u4880
  7315  1C6B                     u4881:
  7316  1C6B  2C7A               	goto	l3174
  7317  1C6C                     u4880:
  7318  1C6C                     l3172:
  7319  1C6C  0820               	movf	___llmod@divisor,w
  7320  1C6D  02A4               	subwf	___llmod@dividend,f
  7321  1C6E  0821               	movf	___llmod@divisor+1,w
  7322  1C6F  1C03               	skipc
  7323  1C70  0F21               	incfsz	___llmod@divisor+1,w
  7324  1C71  02A5               	subwf	___llmod@dividend+1,f
  7325  1C72  0822               	movf	___llmod@divisor+2,w
  7326  1C73  1C03               	skipc
  7327  1C74  0F22               	incfsz	___llmod@divisor+2,w
  7328  1C75  02A6               	subwf	___llmod@dividend+2,f
  7329  1C76  0823               	movf	___llmod@divisor+3,w
  7330  1C77  1C03               	skipc
  7331  1C78  0F23               	incfsz	___llmod@divisor+3,w
  7332  1C79  02A7               	subwf	___llmod@dividend+3,f
  7333  1C7A                     l3174:
  7334  1C7A  3001               	movlw	1
  7335  1C7B                     u4895:
  7336  1C7B  1003               	clrc
  7337  1C7C  0CA3               	rrf	___llmod@divisor+3,f
  7338  1C7D  0CA2               	rrf	___llmod@divisor+2,f
  7339  1C7E  0CA1               	rrf	___llmod@divisor+1,f
  7340  1C7F  0CA0               	rrf	___llmod@divisor,f
  7341  1C80  3EFF               	addlw	-1
  7342  1C81  1D03               	skipz
  7343  1C82  2C7B               	goto	u4895
  7344  1C83                     l3176:
  7345  1C83  3001               	movlw	1
  7346  1C84  02A9               	subwf	___llmod@counter,f
  7347  1C85  1D03               	btfss	3,2
  7348  1C86  2C88               	goto	u4901
  7349  1C87  2C89               	goto	u4900
  7350  1C88                     u4901:
  7351  1C88  2C5A               	goto	l3170
  7352  1C89                     u4900:
  7353  1C89                     l3178:
  7354  1C89  0827               	movf	___llmod@dividend+3,w
  7355  1C8A  00A3               	movwf	?___llmod+3
  7356  1C8B  0826               	movf	___llmod@dividend+2,w
  7357  1C8C  00A2               	movwf	?___llmod+2
  7358  1C8D  0825               	movf	___llmod@dividend+1,w
  7359  1C8E  00A1               	movwf	?___llmod+1
  7360  1C8F  0824               	movf	___llmod@dividend,w
  7361  1C90  00A0               	movwf	?___llmod
  7362  1C91                     l681:
  7363  1C91  0008               	return
  7364  1C92                     __end_of___llmod:
  7365                           
  7366                           	psect	text23
  7367  1D4B                     __ptext23:	
  7368 ;; *************** function ___lldiv *****************
  7369 ;; Defined at:
  7370 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7371 ;; Parameters:    Size  Location     Type
  7372 ;;  divisor         4    0[BANK0 ] unsigned long 
  7373 ;;  dividend        4    4[BANK0 ] unsigned long 
  7374 ;; Auto vars:     Size  Location     Type
  7375 ;;  quotient        4    9[BANK0 ] unsigned long 
  7376 ;;  counter         1   13[BANK0 ] unsigned char 
  7377 ;; Return value:  Size  Location     Type
  7378 ;;                  4    0[BANK0 ] unsigned long 
  7379 ;; Registers used:
  7380 ;;		wreg, status,2, status,0
  7381 ;; Tracked objects:
  7382 ;;		On entry : 0/0
  7383 ;;		On exit  : 0/0
  7384 ;;		Unchanged: 0/0
  7385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7386 ;;      Params:         0       8       0       0       0
  7387 ;;      Locals:         0       5       0       0       0
  7388 ;;      Temps:          0       1       0       0       0
  7389 ;;      Totals:         0      14       0       0       0
  7390 ;;Total ram usage:       14 bytes
  7391 ;; Hardware stack levels used:    1
  7392 ;; Hardware stack levels required when called:    2
  7393 ;; This function calls:
  7394 ;;		Nothing
  7395 ;; This function is called by:
  7396 ;;		_sprintf
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400                           
  7401                           ;psect for function ___lldiv
  7402  1D4B                     ___lldiv:
  7403  1D4B                     l3062:	
  7404                           ;incstack = 0
  7405                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7406                           
  7407  1D4B  3000               	movlw	0
  7408  1D4C  1283               	bcf	3,5	;RP0=0, select bank0
  7409  1D4D  1303               	bcf	3,6	;RP1=0, select bank0
  7410  1D4E  00AC               	movwf	___lldiv@quotient+3
  7411  1D4F  3000               	movlw	0
  7412  1D50  00AB               	movwf	___lldiv@quotient+2
  7413  1D51  3000               	movlw	0
  7414  1D52  00AA               	movwf	___lldiv@quotient+1
  7415  1D53  3000               	movlw	0
  7416  1D54  00A9               	movwf	___lldiv@quotient
  7417  1D55  0823               	movf	___lldiv@divisor+3,w
  7418  1D56  0422               	iorwf	___lldiv@divisor+2,w
  7419  1D57  0421               	iorwf	___lldiv@divisor+1,w
  7420  1D58  0420               	iorwf	___lldiv@divisor,w
  7421  1D59  1903               	skipnz
  7422  1D5A  2D5C               	goto	u4571
  7423  1D5B  2D5D               	goto	u4570
  7424  1D5C                     u4571:
  7425  1D5C  2DAA               	goto	l3082
  7426  1D5D                     u4570:
  7427  1D5D                     l3064:
  7428  1D5D  01AD               	clrf	___lldiv@counter
  7429  1D5E  0AAD               	incf	___lldiv@counter,f
  7430  1D5F  2D6D               	goto	l3068
  7431  1D60                     l3066:
  7432  1D60  3001               	movlw	1
  7433  1D61  00A8               	movwf	??___lldiv
  7434  1D62                     u4585:
  7435  1D62  1003               	clrc
  7436  1D63  0DA0               	rlf	___lldiv@divisor,f
  7437  1D64  0DA1               	rlf	___lldiv@divisor+1,f
  7438  1D65  0DA2               	rlf	___lldiv@divisor+2,f
  7439  1D66  0DA3               	rlf	___lldiv@divisor+3,f
  7440  1D67  0BA8               	decfsz	??___lldiv,f
  7441  1D68  2D62               	goto	u4585
  7442  1D69  3001               	movlw	1
  7443  1D6A  00A8               	movwf	??___lldiv
  7444  1D6B  0828               	movf	??___lldiv,w
  7445  1D6C  07AD               	addwf	___lldiv@counter,f
  7446  1D6D                     l3068:
  7447  1D6D  1FA3               	btfss	___lldiv@divisor+3,7
  7448  1D6E  2D70               	goto	u4591
  7449  1D6F  2D71               	goto	u4590
  7450  1D70                     u4591:
  7451  1D70  2D60               	goto	l3066
  7452  1D71                     u4590:
  7453  1D71                     l3070:
  7454  1D71  3001               	movlw	1
  7455  1D72  00A8               	movwf	??___lldiv
  7456  1D73                     u4605:
  7457  1D73  1003               	clrc
  7458  1D74  0DA9               	rlf	___lldiv@quotient,f
  7459  1D75  0DAA               	rlf	___lldiv@quotient+1,f
  7460  1D76  0DAB               	rlf	___lldiv@quotient+2,f
  7461  1D77  0DAC               	rlf	___lldiv@quotient+3,f
  7462  1D78  0BA8               	decfsz	??___lldiv,f
  7463  1D79  2D73               	goto	u4605
  7464  1D7A                     l3072:
  7465  1D7A  0823               	movf	___lldiv@divisor+3,w
  7466  1D7B  0227               	subwf	___lldiv@dividend+3,w
  7467  1D7C  1D03               	skipz
  7468  1D7D  2D88               	goto	u4615
  7469  1D7E  0822               	movf	___lldiv@divisor+2,w
  7470  1D7F  0226               	subwf	___lldiv@dividend+2,w
  7471  1D80  1D03               	skipz
  7472  1D81  2D88               	goto	u4615
  7473  1D82  0821               	movf	___lldiv@divisor+1,w
  7474  1D83  0225               	subwf	___lldiv@dividend+1,w
  7475  1D84  1D03               	skipz
  7476  1D85  2D88               	goto	u4615
  7477  1D86  0820               	movf	___lldiv@divisor,w
  7478  1D87  0224               	subwf	___lldiv@dividend,w
  7479  1D88                     u4615:
  7480  1D88  1C03               	skipc
  7481  1D89  2D8B               	goto	u4611
  7482  1D8A  2D8C               	goto	u4610
  7483  1D8B                     u4611:
  7484  1D8B  2D9B               	goto	l3078
  7485  1D8C                     u4610:
  7486  1D8C                     l3074:
  7487  1D8C  0820               	movf	___lldiv@divisor,w
  7488  1D8D  02A4               	subwf	___lldiv@dividend,f
  7489  1D8E  0821               	movf	___lldiv@divisor+1,w
  7490  1D8F  1C03               	skipc
  7491  1D90  0F21               	incfsz	___lldiv@divisor+1,w
  7492  1D91  02A5               	subwf	___lldiv@dividend+1,f
  7493  1D92  0822               	movf	___lldiv@divisor+2,w
  7494  1D93  1C03               	skipc
  7495  1D94  0F22               	incfsz	___lldiv@divisor+2,w
  7496  1D95  02A6               	subwf	___lldiv@dividend+2,f
  7497  1D96  0823               	movf	___lldiv@divisor+3,w
  7498  1D97  1C03               	skipc
  7499  1D98  0F23               	incfsz	___lldiv@divisor+3,w
  7500  1D99  02A7               	subwf	___lldiv@dividend+3,f
  7501  1D9A                     l3076:
  7502  1D9A  1429               	bsf	___lldiv@quotient,0
  7503  1D9B                     l3078:
  7504  1D9B  3001               	movlw	1
  7505  1D9C                     u4625:
  7506  1D9C  1003               	clrc
  7507  1D9D  0CA3               	rrf	___lldiv@divisor+3,f
  7508  1D9E  0CA2               	rrf	___lldiv@divisor+2,f
  7509  1D9F  0CA1               	rrf	___lldiv@divisor+1,f
  7510  1DA0  0CA0               	rrf	___lldiv@divisor,f
  7511  1DA1  3EFF               	addlw	-1
  7512  1DA2  1D03               	skipz
  7513  1DA3  2D9C               	goto	u4625
  7514  1DA4                     l3080:
  7515  1DA4  3001               	movlw	1
  7516  1DA5  02AD               	subwf	___lldiv@counter,f
  7517  1DA6  1D03               	btfss	3,2
  7518  1DA7  2DA9               	goto	u4631
  7519  1DA8  2DAA               	goto	u4630
  7520  1DA9                     u4631:
  7521  1DA9  2D71               	goto	l3070
  7522  1DAA                     u4630:
  7523  1DAA                     l3082:
  7524  1DAA  082C               	movf	___lldiv@quotient+3,w
  7525  1DAB  00A3               	movwf	?___lldiv+3
  7526  1DAC  082B               	movf	___lldiv@quotient+2,w
  7527  1DAD  00A2               	movwf	?___lldiv+2
  7528  1DAE  082A               	movf	___lldiv@quotient+1,w
  7529  1DAF  00A1               	movwf	?___lldiv+1
  7530  1DB0  0829               	movf	___lldiv@quotient,w
  7531  1DB1  00A0               	movwf	?___lldiv
  7532  1DB2                     l461:
  7533  1DB2  0008               	return
  7534  1DB3                     __end_of___lldiv:
  7535                           
  7536                           	psect	text24
  7537  0802                     __ptext24:	
  7538 ;; *************** function ___fltol *****************
  7539 ;; Defined at:
  7540 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;  f1              4   61[BANK0 ] unsigned long 
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;  exp1            1   71[BANK0 ] unsigned char 
  7545 ;;  sign1           1   70[BANK0 ] unsigned char 
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  4   61[BANK0 ] long 
  7548 ;; Registers used:
  7549 ;;		wreg, status,2, status,0
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7555 ;;      Params:         0       4       0       0       0
  7556 ;;      Locals:         0       2       0       0       0
  7557 ;;      Temps:          0       5       0       0       0
  7558 ;;      Totals:         0      11       0       0       0
  7559 ;;Total ram usage:       11 bytes
  7560 ;; Hardware stack levels used:    1
  7561 ;; Hardware stack levels required when called:    2
  7562 ;; This function calls:
  7563 ;;		Nothing
  7564 ;; This function is called by:
  7565 ;;		_sprintf
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569                           
  7570                           ;psect for function ___fltol
  7571  0802                     ___fltol:
  7572  0802                     l3126:	
  7573                           ;incstack = 0
  7574                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7575                           
  7576  0802  1003               	clrc
  7577  0803  1283               	bcf	3,5	;RP0=0, select bank0
  7578  0804  1303               	bcf	3,6	;RP1=0, select bank0
  7579  0805  0D5F               	rlf	___fltol@f1+2,w
  7580  0806  0D60               	rlf	___fltol@f1+3,w
  7581  0807  00E1               	movwf	??___fltol
  7582  0808  0861               	movf	??___fltol,w
  7583  0809  00E7               	movwf	___fltol@exp1
  7584  080A  0867               	movf	___fltol@exp1,w
  7585  080B  1D03               	btfss	3,2
  7586  080C  280E               	goto	u4751
  7587  080D  280F               	goto	u4750
  7588  080E                     u4751:
  7589  080E  2818               	goto	l3132
  7590  080F                     u4750:
  7591  080F                     l3128:
  7592  080F  3000               	movlw	0
  7593  0810  00E0               	movwf	?___fltol+3
  7594  0811  3000               	movlw	0
  7595  0812  00DF               	movwf	?___fltol+2
  7596  0813  3000               	movlw	0
  7597  0814  00DE               	movwf	?___fltol+1
  7598  0815  3000               	movlw	0
  7599  0816  00DD               	movwf	?___fltol
  7600  0817  287D               	goto	l628
  7601  0818                     l3132:
  7602  0818  085D               	movf	___fltol@f1,w
  7603  0819  00E1               	movwf	??___fltol
  7604  081A  085E               	movf	___fltol@f1+1,w
  7605  081B  00E2               	movwf	??___fltol+1
  7606  081C  085F               	movf	___fltol@f1+2,w
  7607  081D  00E3               	movwf	??___fltol+2
  7608  081E  0860               	movf	___fltol@f1+3,w
  7609  081F  00E4               	movwf	??___fltol+3
  7610  0820  301F               	movlw	31
  7611  0821                     u4765:
  7612  0821  1003               	clrc
  7613  0822  0CE4               	rrf	??___fltol+3,f
  7614  0823  0CE3               	rrf	??___fltol+2,f
  7615  0824  0CE2               	rrf	??___fltol+1,f
  7616  0825  0CE1               	rrf	??___fltol,f
  7617  0826                     u4760:
  7618  0826  3EFF               	addlw	-1
  7619  0827  1D03               	skipz
  7620  0828  2821               	goto	u4765
  7621  0829  0861               	movf	??___fltol,w
  7622  082A  00E5               	movwf	??___fltol+4
  7623  082B  0865               	movf	??___fltol+4,w
  7624  082C  00E6               	movwf	___fltol@sign1
  7625  082D                     l3134:
  7626  082D  17DF               	bsf	___fltol@f1+2,7
  7627  082E                     l3136:
  7628  082E  30FF               	movlw	255
  7629  082F  05DD               	andwf	___fltol@f1,f
  7630  0830  30FF               	movlw	255
  7631  0831  05DE               	andwf	___fltol@f1+1,f
  7632  0832  30FF               	movlw	255
  7633  0833  05DF               	andwf	___fltol@f1+2,f
  7634  0834  3000               	movlw	0
  7635  0835  05E0               	andwf	___fltol@f1+3,f
  7636  0836                     l3138:
  7637  0836  3096               	movlw	150
  7638  0837  02E7               	subwf	___fltol@exp1,f
  7639  0838                     l3140:
  7640  0838  1FE7               	btfss	___fltol@exp1,7
  7641  0839  283B               	goto	u4771
  7642  083A  283C               	goto	u4770
  7643  083B                     u4771:
  7644  083B  2856               	goto	l3150
  7645  083C                     u4770:
  7646  083C                     l3142:
  7647  083C  0867               	movf	___fltol@exp1,w
  7648  083D  3A80               	xorlw	128
  7649  083E  3E97               	addlw	151
  7650  083F  1803               	skipnc
  7651  0840  2842               	goto	u4781
  7652  0841  2843               	goto	u4780
  7653  0842                     u4781:
  7654  0842  2844               	goto	l3148
  7655  0843                     u4780:
  7656  0843  280F               	goto	l3128
  7657  0844                     l3148:
  7658  0844  3001               	movlw	1
  7659  0845                     u4795:
  7660  0845  1003               	clrc
  7661  0846  0CE0               	rrf	___fltol@f1+3,f
  7662  0847  0CDF               	rrf	___fltol@f1+2,f
  7663  0848  0CDE               	rrf	___fltol@f1+1,f
  7664  0849  0CDD               	rrf	___fltol@f1,f
  7665  084A  3EFF               	addlw	-1
  7666  084B  1D03               	skipz
  7667  084C  2845               	goto	u4795
  7668  084D  3001               	movlw	1
  7669  084E  00E1               	movwf	??___fltol
  7670  084F  0861               	movf	??___fltol,w
  7671  0850  07E7               	addwf	___fltol@exp1,f
  7672  0851  1D03               	btfss	3,2
  7673  0852  2854               	goto	u4801
  7674  0853  2855               	goto	u4800
  7675  0854                     u4801:
  7676  0854  2844               	goto	l3148
  7677  0855                     u4800:
  7678  0855  286D               	goto	l3158
  7679  0856                     l3150:
  7680  0856  3020               	movlw	32
  7681  0857  0267               	subwf	___fltol@exp1,w
  7682  0858  1C03               	skipc
  7683  0859  285B               	goto	u4811
  7684  085A  285C               	goto	u4810
  7685  085B                     u4811:
  7686  085B  2868               	goto	l635
  7687  085C                     u4810:
  7688  085C  280F               	goto	l3128
  7689  085D                     l3156:
  7690  085D  3001               	movlw	1
  7691  085E  00E1               	movwf	??___fltol
  7692  085F                     u4825:
  7693  085F  1003               	clrc
  7694  0860  0DDD               	rlf	___fltol@f1,f
  7695  0861  0DDE               	rlf	___fltol@f1+1,f
  7696  0862  0DDF               	rlf	___fltol@f1+2,f
  7697  0863  0DE0               	rlf	___fltol@f1+3,f
  7698  0864  0BE1               	decfsz	??___fltol,f
  7699  0865  285F               	goto	u4825
  7700  0866  3001               	movlw	1
  7701  0867  02E7               	subwf	___fltol@exp1,f
  7702  0868                     l635:
  7703  0868  0867               	movf	___fltol@exp1,w
  7704  0869  1D03               	btfss	3,2
  7705  086A  286C               	goto	u4831
  7706  086B  286D               	goto	u4830
  7707  086C                     u4831:
  7708  086C  285D               	goto	l3156
  7709  086D                     u4830:
  7710  086D                     l3158:
  7711  086D  0866               	movf	___fltol@sign1,w
  7712  086E  1903               	btfsc	3,2
  7713  086F  2871               	goto	u4841
  7714  0870  2872               	goto	u4840
  7715  0871                     u4841:
  7716  0871  287D               	goto	l638
  7717  0872                     u4840:
  7718  0872                     l3160:
  7719  0872  09DD               	comf	___fltol@f1,f
  7720  0873  09DE               	comf	___fltol@f1+1,f
  7721  0874  09DF               	comf	___fltol@f1+2,f
  7722  0875  09E0               	comf	___fltol@f1+3,f
  7723  0876  0ADD               	incf	___fltol@f1,f
  7724  0877  1903               	skipnz
  7725  0878  0ADE               	incf	___fltol@f1+1,f
  7726  0879  1903               	skipnz
  7727  087A  0ADF               	incf	___fltol@f1+2,f
  7728  087B  1903               	skipnz
  7729  087C  0AE0               	incf	___fltol@f1+3,f
  7730  087D                     l638:
  7731  087D                     l628:
  7732  087D  0008               	return
  7733  087E                     __end_of___fltol:
  7734                           
  7735                           	psect	text25
  7736  1BEC                     __ptext25:	
  7737 ;; *************** function ___flsub *****************
  7738 ;; Defined at:
  7739 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7740 ;; Parameters:    Size  Location     Type
  7741 ;;  a               4    4[BANK1 ] long 
  7742 ;;  b               4    8[BANK1 ] long 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;		None
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  4    4[BANK1 ] long 
  7747 ;; Registers used:
  7748 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7754 ;;      Params:         0       0       8       0       0
  7755 ;;      Locals:         0       0       0       0       0
  7756 ;;      Temps:          0       0       0       0       0
  7757 ;;      Totals:         0       0       8       0       0
  7758 ;;Total ram usage:        8 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; Hardware stack levels required when called:    3
  7761 ;; This function calls:
  7762 ;;		___fladd
  7763 ;; This function is called by:
  7764 ;;		_sprintf
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           
  7769                           ;psect for function ___flsub
  7770  1BEC                     ___flsub:
  7771  1BEC                     l3182:	
  7772                           ;incstack = 0
  7773                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7774                           
  7775  1BEC  3080               	movlw	128
  7776  1BED  1683               	bsf	3,5	;RP0=1, select bank1
  7777  1BEE  1303               	bcf	3,6	;RP1=0, select bank1
  7778  1BEF  06A7               	xorwf	(___flsub@a+3)^(0+128),f
  7779  1BF0                     l3184:
  7780  1BF0  082B               	movf	(___flsub@b+3)^(0+128),w
  7781  1BF1  1283               	bcf	3,5	;RP0=0, select bank0
  7782  1BF2  1303               	bcf	3,6	;RP1=0, select bank0
  7783  1BF3  00E1               	movwf	___fladd@b+3
  7784  1BF4  1683               	bsf	3,5	;RP0=1, select bank1
  7785  1BF5  1303               	bcf	3,6	;RP1=0, select bank1
  7786  1BF6  082A               	movf	(___flsub@b+2)^(0+128),w
  7787  1BF7  1283               	bcf	3,5	;RP0=0, select bank0
  7788  1BF8  1303               	bcf	3,6	;RP1=0, select bank0
  7789  1BF9  00E0               	movwf	___fladd@b+2
  7790  1BFA  1683               	bsf	3,5	;RP0=1, select bank1
  7791  1BFB  1303               	bcf	3,6	;RP1=0, select bank1
  7792  1BFC  0829               	movf	(___flsub@b+1)^(0+128),w
  7793  1BFD  1283               	bcf	3,5	;RP0=0, select bank0
  7794  1BFE  1303               	bcf	3,6	;RP1=0, select bank0
  7795  1BFF  00DF               	movwf	___fladd@b+1
  7796  1C00  1683               	bsf	3,5	;RP0=1, select bank1
  7797  1C01  1303               	bcf	3,6	;RP1=0, select bank1
  7798  1C02  0828               	movf	___flsub@b^(0+128),w
  7799  1C03  1283               	bcf	3,5	;RP0=0, select bank0
  7800  1C04  1303               	bcf	3,6	;RP1=0, select bank0
  7801  1C05  00DE               	movwf	___fladd@b
  7802  1C06  1683               	bsf	3,5	;RP0=1, select bank1
  7803  1C07  1303               	bcf	3,6	;RP1=0, select bank1
  7804  1C08  0827               	movf	(___flsub@a+3)^(0+128),w
  7805  1C09  1283               	bcf	3,5	;RP0=0, select bank0
  7806  1C0A  1303               	bcf	3,6	;RP1=0, select bank0
  7807  1C0B  00E5               	movwf	___fladd@a+3
  7808  1C0C  1683               	bsf	3,5	;RP0=1, select bank1
  7809  1C0D  1303               	bcf	3,6	;RP1=0, select bank1
  7810  1C0E  0826               	movf	(___flsub@a+2)^(0+128),w
  7811  1C0F  1283               	bcf	3,5	;RP0=0, select bank0
  7812  1C10  1303               	bcf	3,6	;RP1=0, select bank0
  7813  1C11  00E4               	movwf	___fladd@a+2
  7814  1C12  1683               	bsf	3,5	;RP0=1, select bank1
  7815  1C13  1303               	bcf	3,6	;RP1=0, select bank1
  7816  1C14  0825               	movf	(___flsub@a+1)^(0+128),w
  7817  1C15  1283               	bcf	3,5	;RP0=0, select bank0
  7818  1C16  1303               	bcf	3,6	;RP1=0, select bank0
  7819  1C17  00E3               	movwf	___fladd@a+1
  7820  1C18  1683               	bsf	3,5	;RP0=1, select bank1
  7821  1C19  1303               	bcf	3,6	;RP1=0, select bank1
  7822  1C1A  0824               	movf	___flsub@a^(0+128),w
  7823  1C1B  1283               	bcf	3,5	;RP0=0, select bank0
  7824  1C1C  1303               	bcf	3,6	;RP1=0, select bank0
  7825  1C1D  00E2               	movwf	___fladd@a
  7826  1C1E  160A  118A  2174  160A  158A  	fcall	___fladd
  7827  1C23  1283               	bcf	3,5	;RP0=0, select bank0
  7828  1C24  1303               	bcf	3,6	;RP1=0, select bank0
  7829  1C25  0861               	movf	?___fladd+3,w
  7830  1C26  1683               	bsf	3,5	;RP0=1, select bank1
  7831  1C27  1303               	bcf	3,6	;RP1=0, select bank1
  7832  1C28  00A7               	movwf	(?___flsub+3)^(0+128)
  7833  1C29  1283               	bcf	3,5	;RP0=0, select bank0
  7834  1C2A  1303               	bcf	3,6	;RP1=0, select bank0
  7835  1C2B  0860               	movf	?___fladd+2,w
  7836  1C2C  1683               	bsf	3,5	;RP0=1, select bank1
  7837  1C2D  1303               	bcf	3,6	;RP1=0, select bank1
  7838  1C2E  00A6               	movwf	(?___flsub+2)^(0+128)
  7839  1C2F  1283               	bcf	3,5	;RP0=0, select bank0
  7840  1C30  1303               	bcf	3,6	;RP1=0, select bank0
  7841  1C31  085F               	movf	?___fladd+1,w
  7842  1C32  1683               	bsf	3,5	;RP0=1, select bank1
  7843  1C33  1303               	bcf	3,6	;RP1=0, select bank1
  7844  1C34  00A5               	movwf	(?___flsub+1)^(0+128)
  7845  1C35  1283               	bcf	3,5	;RP0=0, select bank0
  7846  1C36  1303               	bcf	3,6	;RP1=0, select bank0
  7847  1C37  085E               	movf	?___fladd,w
  7848  1C38  1683               	bsf	3,5	;RP0=1, select bank1
  7849  1C39  1303               	bcf	3,6	;RP1=0, select bank1
  7850  1C3A  00A4               	movwf	?___flsub^(0+128)
  7851  1C3B                     l798:
  7852  1C3B  0008               	return
  7853  1C3C                     __end_of___flsub:
  7854                           
  7855                           	psect	text26
  7856  1174                     __ptext26:	
  7857 ;; *************** function ___fladd *****************
  7858 ;; Defined at:
  7859 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;  b               4   62[BANK0 ] long 
  7862 ;;  a               4   66[BANK0 ] long 
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;  grs             1    3[BANK1 ] unsigned char 
  7865 ;;  bexp            1    2[BANK1 ] unsigned char 
  7866 ;;  aexp            1    1[BANK1 ] unsigned char 
  7867 ;;  signs           1    0[BANK1 ] unsigned char 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  4   62[BANK0 ] unsigned char 
  7870 ;; Registers used:
  7871 ;;		wreg, status,2, status,0, btemp+1
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7877 ;;      Params:         0       8       0       0       0
  7878 ;;      Locals:         0       0       4       0       0
  7879 ;;      Temps:          0       8       0       0       0
  7880 ;;      Totals:         0      16       4       0       0
  7881 ;;Total ram usage:       20 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    2
  7884 ;; This function calls:
  7885 ;;		Nothing
  7886 ;; This function is called by:
  7887 ;;		_sprintf
  7888 ;;		___flsub
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           
  7893                           ;psect for function ___fladd
  7894  1174                     ___fladd:
  7895  1174                     l2520:	
  7896                           ;incstack = 0
  7897                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7898                           
  7899  1174  1283               	bcf	3,5	;RP0=0, select bank0
  7900  1175  1303               	bcf	3,6	;RP1=0, select bank0
  7901  1176  0861               	movf	___fladd@b+3,w
  7902  1177  3980               	andlw	128
  7903  1178  00E6               	movwf	??___fladd
  7904  1179  0866               	movf	??___fladd,w
  7905  117A  1683               	bsf	3,5	;RP0=1, select bank1
  7906  117B  1303               	bcf	3,6	;RP1=0, select bank1
  7907  117C  00A0               	movwf	___fladd@signs^(0+128)
  7908  117D                     l2522:
  7909  117D  1283               	bcf	3,5	;RP0=0, select bank0
  7910  117E  1303               	bcf	3,6	;RP1=0, select bank0
  7911  117F  0861               	movf	___fladd@b+3,w
  7912  1180  00E6               	movwf	??___fladd
  7913  1181  0766               	addwf	??___fladd,w
  7914  1182  00E7               	movwf	??___fladd+1
  7915  1183  0867               	movf	??___fladd+1,w
  7916  1184  1683               	bsf	3,5	;RP0=1, select bank1
  7917  1185  1303               	bcf	3,6	;RP1=0, select bank1
  7918  1186  00A2               	movwf	___fladd@bexp^(0+128)
  7919  1187                     l2524:
  7920  1187  1283               	bcf	3,5	;RP0=0, select bank0
  7921  1188  1303               	bcf	3,6	;RP1=0, select bank0
  7922  1189  1FE0               	btfss	___fladd@b+2,7
  7923  118A  298C               	goto	u3171
  7924  118B  298D               	goto	u3170
  7925  118C                     u3171:
  7926  118C  2990               	goto	l2528
  7927  118D                     u3170:
  7928  118D                     l2526:
  7929  118D  1683               	bsf	3,5	;RP0=1, select bank1
  7930  118E  1303               	bcf	3,6	;RP1=0, select bank1
  7931  118F  1422               	bsf	___fladd@bexp^(0+128),0
  7932  1190                     l2528:
  7933  1190  1683               	bsf	3,5	;RP0=1, select bank1
  7934  1191  1303               	bcf	3,6	;RP1=0, select bank1
  7935  1192  0822               	movf	___fladd@bexp^(0+128),w
  7936  1193  1903               	btfsc	3,2
  7937  1194  2996               	goto	u3181
  7938  1195  2997               	goto	u3180
  7939  1196                     u3181:
  7940  1196  29AA               	goto	l2538
  7941  1197                     u3180:
  7942  1197                     l2530:
  7943  1197  0A22               	incf	___fladd@bexp^(0+128),w
  7944  1198  1D03               	btfss	3,2
  7945  1199  299B               	goto	u3191
  7946  119A  299C               	goto	u3190
  7947  119B                     u3191:
  7948  119B  29A6               	goto	l2534
  7949  119C                     u3190:
  7950  119C                     l2532:
  7951  119C  3000               	movlw	0
  7952  119D  1283               	bcf	3,5	;RP0=0, select bank0
  7953  119E  1303               	bcf	3,6	;RP1=0, select bank0
  7954  119F  00E1               	movwf	___fladd@b+3
  7955  11A0  3000               	movlw	0
  7956  11A1  00E0               	movwf	___fladd@b+2
  7957  11A2  3000               	movlw	0
  7958  11A3  00DF               	movwf	___fladd@b+1
  7959  11A4  3000               	movlw	0
  7960  11A5  00DE               	movwf	___fladd@b
  7961  11A6                     l2534:
  7962  11A6  1283               	bcf	3,5	;RP0=0, select bank0
  7963  11A7  17E0               	bsf	___fladd@b+2,7
  7964  11A8                     l2536:
  7965  11A8  01E1               	clrf	___fladd@b+3
  7966  11A9  29B4               	goto	l2540
  7967  11AA                     l2538:
  7968  11AA  3000               	movlw	0
  7969  11AB  1283               	bcf	3,5	;RP0=0, select bank0
  7970  11AC  1303               	bcf	3,6	;RP1=0, select bank0
  7971  11AD  00E1               	movwf	___fladd@b+3
  7972  11AE  3000               	movlw	0
  7973  11AF  00E0               	movwf	___fladd@b+2
  7974  11B0  3000               	movlw	0
  7975  11B1  00DF               	movwf	___fladd@b+1
  7976  11B2  3000               	movlw	0
  7977  11B3  00DE               	movwf	___fladd@b
  7978  11B4                     l2540:
  7979  11B4  0865               	movf	___fladd@a+3,w
  7980  11B5  3980               	andlw	128
  7981  11B6  00E6               	movwf	??___fladd
  7982  11B7  0866               	movf	??___fladd,w
  7983  11B8  1683               	bsf	3,5	;RP0=1, select bank1
  7984  11B9  1303               	bcf	3,6	;RP1=0, select bank1
  7985  11BA  00A1               	movwf	___fladd@aexp^(0+128)
  7986  11BB                     l2542:
  7987  11BB  0821               	movf	___fladd@aexp^(0+128),w
  7988  11BC  0620               	xorwf	___fladd@signs^(0+128),w
  7989  11BD  1903               	skipnz
  7990  11BE  29C0               	goto	u3201
  7991  11BF  29C1               	goto	u3200
  7992  11C0                     u3201:
  7993  11C0  29C2               	goto	l2546
  7994  11C1                     u3200:
  7995  11C1                     l2544:
  7996  11C1  1720               	bsf	___fladd@signs^(0+128),6
  7997  11C2                     l2546:
  7998  11C2  1283               	bcf	3,5	;RP0=0, select bank0
  7999  11C3  1303               	bcf	3,6	;RP1=0, select bank0
  8000  11C4  0865               	movf	___fladd@a+3,w
  8001  11C5  00E6               	movwf	??___fladd
  8002  11C6  0766               	addwf	??___fladd,w
  8003  11C7  00E7               	movwf	??___fladd+1
  8004  11C8  0867               	movf	??___fladd+1,w
  8005  11C9  1683               	bsf	3,5	;RP0=1, select bank1
  8006  11CA  1303               	bcf	3,6	;RP1=0, select bank1
  8007  11CB  00A1               	movwf	___fladd@aexp^(0+128)
  8008  11CC                     l2548:
  8009  11CC  1283               	bcf	3,5	;RP0=0, select bank0
  8010  11CD  1303               	bcf	3,6	;RP1=0, select bank0
  8011  11CE  1FE4               	btfss	___fladd@a+2,7
  8012  11CF  29D1               	goto	u3211
  8013  11D0  29D2               	goto	u3210
  8014  11D1                     u3211:
  8015  11D1  29D5               	goto	l2552
  8016  11D2                     u3210:
  8017  11D2                     l2550:
  8018  11D2  1683               	bsf	3,5	;RP0=1, select bank1
  8019  11D3  1303               	bcf	3,6	;RP1=0, select bank1
  8020  11D4  1421               	bsf	___fladd@aexp^(0+128),0
  8021  11D5                     l2552:
  8022  11D5  1683               	bsf	3,5	;RP0=1, select bank1
  8023  11D6  1303               	bcf	3,6	;RP1=0, select bank1
  8024  11D7  0821               	movf	___fladd@aexp^(0+128),w
  8025  11D8  1903               	btfsc	3,2
  8026  11D9  29DB               	goto	u3221
  8027  11DA  29DC               	goto	u3220
  8028  11DB                     u3221:
  8029  11DB  29EF               	goto	l2562
  8030  11DC                     u3220:
  8031  11DC                     l2554:
  8032  11DC  0A21               	incf	___fladd@aexp^(0+128),w
  8033  11DD  1D03               	btfss	3,2
  8034  11DE  29E0               	goto	u3231
  8035  11DF  29E1               	goto	u3230
  8036  11E0                     u3231:
  8037  11E0  29EB               	goto	l2558
  8038  11E1                     u3230:
  8039  11E1                     l2556:
  8040  11E1  3000               	movlw	0
  8041  11E2  1283               	bcf	3,5	;RP0=0, select bank0
  8042  11E3  1303               	bcf	3,6	;RP1=0, select bank0
  8043  11E4  00E5               	movwf	___fladd@a+3
  8044  11E5  3000               	movlw	0
  8045  11E6  00E4               	movwf	___fladd@a+2
  8046  11E7  3000               	movlw	0
  8047  11E8  00E3               	movwf	___fladd@a+1
  8048  11E9  3000               	movlw	0
  8049  11EA  00E2               	movwf	___fladd@a
  8050  11EB                     l2558:
  8051  11EB  1283               	bcf	3,5	;RP0=0, select bank0
  8052  11EC  17E4               	bsf	___fladd@a+2,7
  8053  11ED                     l2560:
  8054  11ED  01E5               	clrf	___fladd@a+3
  8055  11EE  29F9               	goto	l752
  8056  11EF                     l2562:
  8057  11EF  3000               	movlw	0
  8058  11F0  1283               	bcf	3,5	;RP0=0, select bank0
  8059  11F1  1303               	bcf	3,6	;RP1=0, select bank0
  8060  11F2  00E5               	movwf	___fladd@a+3
  8061  11F3  3000               	movlw	0
  8062  11F4  00E4               	movwf	___fladd@a+2
  8063  11F5  3000               	movlw	0
  8064  11F6  00E3               	movwf	___fladd@a+1
  8065  11F7  3000               	movlw	0
  8066  11F8  00E2               	movwf	___fladd@a
  8067  11F9                     l752:
  8068  11F9  1683               	bsf	3,5	;RP0=1, select bank1
  8069  11FA  1303               	bcf	3,6	;RP1=0, select bank1
  8070  11FB  0822               	movf	___fladd@bexp^(0+128),w
  8071  11FC  0221               	subwf	___fladd@aexp^(0+128),w
  8072  11FD  1803               	skipnc
  8073  11FE  2A00               	goto	u3241
  8074  11FF  2A01               	goto	u3240
  8075  1200                     u3241:
  8076  1200  2A77               	goto	l2598
  8077  1201                     u3240:
  8078  1201                     l2564:
  8079  1201  1F20               	btfss	___fladd@signs^(0+128),6
  8080  1202  2A04               	goto	u3251
  8081  1203  2A05               	goto	u3250
  8082  1204                     u3251:
  8083  1204  2A0D               	goto	l2568
  8084  1205                     u3250:
  8085  1205                     l2566:
  8086  1205  3080               	movlw	128
  8087  1206  1283               	bcf	3,5	;RP0=0, select bank0
  8088  1207  1303               	bcf	3,6	;RP1=0, select bank0
  8089  1208  00E6               	movwf	??___fladd
  8090  1209  0866               	movf	??___fladd,w
  8091  120A  1683               	bsf	3,5	;RP0=1, select bank1
  8092  120B  1303               	bcf	3,6	;RP1=0, select bank1
  8093  120C  06A0               	xorwf	___fladd@signs^(0+128),f
  8094  120D                     l2568:
  8095  120D  0822               	movf	___fladd@bexp^(0+128),w
  8096  120E  1283               	bcf	3,5	;RP0=0, select bank0
  8097  120F  1303               	bcf	3,6	;RP1=0, select bank0
  8098  1210  00E6               	movwf	??___fladd
  8099  1211  0866               	movf	??___fladd,w
  8100  1212  1683               	bsf	3,5	;RP0=1, select bank1
  8101  1213  1303               	bcf	3,6	;RP1=0, select bank1
  8102  1214  00A3               	movwf	___fladd@grs^(0+128)
  8103  1215                     l2570:
  8104  1215  0821               	movf	___fladd@aexp^(0+128),w
  8105  1216  1283               	bcf	3,5	;RP0=0, select bank0
  8106  1217  1303               	bcf	3,6	;RP1=0, select bank0
  8107  1218  00E6               	movwf	??___fladd
  8108  1219  0866               	movf	??___fladd,w
  8109  121A  1683               	bsf	3,5	;RP0=1, select bank1
  8110  121B  1303               	bcf	3,6	;RP1=0, select bank1
  8111  121C  00A2               	movwf	___fladd@bexp^(0+128)
  8112  121D                     l2572:
  8113  121D  0823               	movf	___fladd@grs^(0+128),w
  8114  121E  1283               	bcf	3,5	;RP0=0, select bank0
  8115  121F  1303               	bcf	3,6	;RP1=0, select bank0
  8116  1220  00E6               	movwf	??___fladd
  8117  1221  0866               	movf	??___fladd,w
  8118  1222  1683               	bsf	3,5	;RP0=1, select bank1
  8119  1223  1303               	bcf	3,6	;RP1=0, select bank1
  8120  1224  00A1               	movwf	___fladd@aexp^(0+128)
  8121  1225                     l2574:
  8122  1225  1283               	bcf	3,5	;RP0=0, select bank0
  8123  1226  1303               	bcf	3,6	;RP1=0, select bank0
  8124  1227  085E               	movf	___fladd@b,w
  8125  1228  00E6               	movwf	??___fladd
  8126  1229  0866               	movf	??___fladd,w
  8127  122A  1683               	bsf	3,5	;RP0=1, select bank1
  8128  122B  1303               	bcf	3,6	;RP1=0, select bank1
  8129  122C  00A3               	movwf	___fladd@grs^(0+128)
  8130  122D                     l2576:
  8131  122D  1283               	bcf	3,5	;RP0=0, select bank0
  8132  122E  1303               	bcf	3,6	;RP1=0, select bank0
  8133  122F  0862               	movf	___fladd@a,w
  8134  1230  00E6               	movwf	??___fladd
  8135  1231  0866               	movf	??___fladd,w
  8136  1232  00DE               	movwf	___fladd@b
  8137  1233                     l2578:
  8138  1233  1683               	bsf	3,5	;RP0=1, select bank1
  8139  1234  1303               	bcf	3,6	;RP1=0, select bank1
  8140  1235  0823               	movf	___fladd@grs^(0+128),w
  8141  1236  1283               	bcf	3,5	;RP0=0, select bank0
  8142  1237  1303               	bcf	3,6	;RP1=0, select bank0
  8143  1238  00E6               	movwf	??___fladd
  8144  1239  0866               	movf	??___fladd,w
  8145  123A  00E2               	movwf	___fladd@a
  8146  123B                     l2580:
  8147  123B  085F               	movf	___fladd@b+1,w
  8148  123C  00E6               	movwf	??___fladd
  8149  123D  0866               	movf	??___fladd,w
  8150  123E  1683               	bsf	3,5	;RP0=1, select bank1
  8151  123F  1303               	bcf	3,6	;RP1=0, select bank1
  8152  1240  00A3               	movwf	___fladd@grs^(0+128)
  8153  1241                     l2582:
  8154  1241  1283               	bcf	3,5	;RP0=0, select bank0
  8155  1242  1303               	bcf	3,6	;RP1=0, select bank0
  8156  1243  0863               	movf	___fladd@a+1,w
  8157  1244  00E6               	movwf	??___fladd
  8158  1245  0866               	movf	??___fladd,w
  8159  1246  00DF               	movwf	___fladd@b+1
  8160  1247                     l2584:
  8161  1247  1683               	bsf	3,5	;RP0=1, select bank1
  8162  1248  1303               	bcf	3,6	;RP1=0, select bank1
  8163  1249  0823               	movf	___fladd@grs^(0+128),w
  8164  124A  1283               	bcf	3,5	;RP0=0, select bank0
  8165  124B  1303               	bcf	3,6	;RP1=0, select bank0
  8166  124C  00E6               	movwf	??___fladd
  8167  124D  0866               	movf	??___fladd,w
  8168  124E  00E3               	movwf	___fladd@a+1
  8169  124F                     l2586:
  8170  124F  0860               	movf	___fladd@b+2,w
  8171  1250  00E6               	movwf	??___fladd
  8172  1251  0866               	movf	??___fladd,w
  8173  1252  1683               	bsf	3,5	;RP0=1, select bank1
  8174  1253  1303               	bcf	3,6	;RP1=0, select bank1
  8175  1254  00A3               	movwf	___fladd@grs^(0+128)
  8176  1255                     l2588:
  8177  1255  1283               	bcf	3,5	;RP0=0, select bank0
  8178  1256  1303               	bcf	3,6	;RP1=0, select bank0
  8179  1257  0864               	movf	___fladd@a+2,w
  8180  1258  00E6               	movwf	??___fladd
  8181  1259  0866               	movf	??___fladd,w
  8182  125A  00E0               	movwf	___fladd@b+2
  8183  125B                     l2590:
  8184  125B  1683               	bsf	3,5	;RP0=1, select bank1
  8185  125C  1303               	bcf	3,6	;RP1=0, select bank1
  8186  125D  0823               	movf	___fladd@grs^(0+128),w
  8187  125E  1283               	bcf	3,5	;RP0=0, select bank0
  8188  125F  1303               	bcf	3,6	;RP1=0, select bank0
  8189  1260  00E6               	movwf	??___fladd
  8190  1261  0866               	movf	??___fladd,w
  8191  1262  00E4               	movwf	___fladd@a+2
  8192  1263                     l2592:
  8193  1263  0861               	movf	___fladd@b+3,w
  8194  1264  00E6               	movwf	??___fladd
  8195  1265  0866               	movf	??___fladd,w
  8196  1266  1683               	bsf	3,5	;RP0=1, select bank1
  8197  1267  1303               	bcf	3,6	;RP1=0, select bank1
  8198  1268  00A3               	movwf	___fladd@grs^(0+128)
  8199  1269                     l2594:
  8200  1269  1283               	bcf	3,5	;RP0=0, select bank0
  8201  126A  1303               	bcf	3,6	;RP1=0, select bank0
  8202  126B  0865               	movf	___fladd@a+3,w
  8203  126C  00E6               	movwf	??___fladd
  8204  126D  0866               	movf	??___fladd,w
  8205  126E  00E1               	movwf	___fladd@b+3
  8206  126F                     l2596:
  8207  126F  1683               	bsf	3,5	;RP0=1, select bank1
  8208  1270  1303               	bcf	3,6	;RP1=0, select bank1
  8209  1271  0823               	movf	___fladd@grs^(0+128),w
  8210  1272  1283               	bcf	3,5	;RP0=0, select bank0
  8211  1273  1303               	bcf	3,6	;RP1=0, select bank0
  8212  1274  00E6               	movwf	??___fladd
  8213  1275  0866               	movf	??___fladd,w
  8214  1276  00E5               	movwf	___fladd@a+3
  8215  1277                     l2598:
  8216  1277  1683               	bsf	3,5	;RP0=1, select bank1
  8217  1278  1303               	bcf	3,6	;RP1=0, select bank1
  8218  1279  01A3               	clrf	___fladd@grs^(0+128)
  8219  127A                     l2600:
  8220  127A  0821               	movf	___fladd@aexp^(0+128),w
  8221  127B  1283               	bcf	3,5	;RP0=0, select bank0
  8222  127C  1303               	bcf	3,6	;RP1=0, select bank0
  8223  127D  00E6               	movwf	??___fladd
  8224  127E  01E7               	clrf	??___fladd+1
  8225  127F  0867               	movf	??___fladd+1,w
  8226  1280  00E9               	movwf	??___fladd+3
  8227  1281  1683               	bsf	3,5	;RP0=1, select bank1
  8228  1282  1303               	bcf	3,6	;RP1=0, select bank1
  8229  1283  0822               	movf	___fladd@bexp^(0+128),w
  8230  1284  1283               	bcf	3,5	;RP0=0, select bank0
  8231  1285  1303               	bcf	3,6	;RP1=0, select bank0
  8232  1286  0266               	subwf	??___fladd,w
  8233  1287  00E8               	movwf	??___fladd+2
  8234  1288  1C03               	skipc
  8235  1289  03E9               	decf	??___fladd+3,f
  8236  128A  0869               	movf	??___fladd+3,w
  8237  128B  3A80               	xorlw	128
  8238  128C  00FF               	movwf	btemp+1
  8239  128D  3080               	movlw	128
  8240  128E  027F               	subwf	btemp+1,w
  8241  128F  1D03               	skipz
  8242  1290  2A93               	goto	u3265
  8243  1291  301A               	movlw	26
  8244  1292  0268               	subwf	??___fladd+2,w
  8245  1293                     u3265:
  8246  1293  1C03               	skipc
  8247  1294  2A96               	goto	u3261
  8248  1295  2A97               	goto	u3260
  8249  1296                     u3261:
  8250  1296  2AE9               	goto	l2616
  8251  1297                     u3260:
  8252  1297                     l2602:
  8253  1297  1283               	bcf	3,5	;RP0=0, select bank0
  8254  1298  1303               	bcf	3,6	;RP1=0, select bank0
  8255  1299  0861               	movf	___fladd@b+3,w
  8256  129A  0460               	iorwf	___fladd@b+2,w
  8257  129B  045F               	iorwf	___fladd@b+1,w
  8258  129C  045E               	iorwf	___fladd@b,w
  8259  129D  1D03               	skipz
  8260  129E  2AA0               	goto	u3271
  8261  129F  2AA2               	goto	u3270
  8262  12A0                     u3271:
  8263  12A0  3001               	movlw	1
  8264  12A1  2AA3               	goto	u3280
  8265  12A2                     u3270:
  8266  12A2  3000               	movlw	0
  8267  12A3                     u3280:
  8268  12A3  00E6               	movwf	??___fladd
  8269  12A4  0866               	movf	??___fladd,w
  8270  12A5  1683               	bsf	3,5	;RP0=1, select bank1
  8271  12A6  1303               	bcf	3,6	;RP1=0, select bank1
  8272  12A7  00A3               	movwf	___fladd@grs^(0+128)
  8273  12A8  3000               	movlw	0
  8274  12A9  1283               	bcf	3,5	;RP0=0, select bank0
  8275  12AA  1303               	bcf	3,6	;RP1=0, select bank0
  8276  12AB  00E1               	movwf	___fladd@b+3
  8277  12AC  3000               	movlw	0
  8278  12AD  00E0               	movwf	___fladd@b+2
  8279  12AE  3000               	movlw	0
  8280  12AF  00DF               	movwf	___fladd@b+1
  8281  12B0  3000               	movlw	0
  8282  12B1  00DE               	movwf	___fladd@b
  8283  12B2  1683               	bsf	3,5	;RP0=1, select bank1
  8284  12B3  1303               	bcf	3,6	;RP1=0, select bank1
  8285  12B4  0821               	movf	___fladd@aexp^(0+128),w
  8286  12B5  1283               	bcf	3,5	;RP0=0, select bank0
  8287  12B6  1303               	bcf	3,6	;RP1=0, select bank0
  8288  12B7  00E6               	movwf	??___fladd
  8289  12B8  0866               	movf	??___fladd,w
  8290  12B9  1683               	bsf	3,5	;RP0=1, select bank1
  8291  12BA  1303               	bcf	3,6	;RP1=0, select bank1
  8292  12BB  00A2               	movwf	___fladd@bexp^(0+128)
  8293  12BC  2AF1               	goto	l756
  8294  12BD                     l758:
  8295  12BD  1C23               	btfss	___fladd@grs^(0+128),0
  8296  12BE  2AC0               	goto	u3291
  8297  12BF  2AC1               	goto	u3290
  8298  12C0                     u3291:
  8299  12C0  2ACE               	goto	l2606
  8300  12C1                     u3290:
  8301  12C1                     l2604:
  8302  12C1  0823               	movf	___fladd@grs^(0+128),w
  8303  12C2  1283               	bcf	3,5	;RP0=0, select bank0
  8304  12C3  1303               	bcf	3,6	;RP1=0, select bank0
  8305  12C4  00E6               	movwf	??___fladd
  8306  12C5  1003               	clrc
  8307  12C6  0C66               	rrf	??___fladd,w
  8308  12C7  3801               	iorlw	1
  8309  12C8  00E7               	movwf	??___fladd+1
  8310  12C9  0867               	movf	??___fladd+1,w
  8311  12CA  1683               	bsf	3,5	;RP0=1, select bank1
  8312  12CB  1303               	bcf	3,6	;RP1=0, select bank1
  8313  12CC  00A3               	movwf	___fladd@grs^(0+128)
  8314  12CD  2AD0               	goto	l2608
  8315  12CE                     l2606:
  8316  12CE  1003               	clrc
  8317  12CF  0CA3               	rrf	___fladd@grs^(0+128),f
  8318  12D0                     l2608:
  8319  12D0  1283               	bcf	3,5	;RP0=0, select bank0
  8320  12D1  1303               	bcf	3,6	;RP1=0, select bank0
  8321  12D2  1C5E               	btfss	___fladd@b,0
  8322  12D3  2AD5               	goto	u3301
  8323  12D4  2AD6               	goto	u3300
  8324  12D5                     u3301:
  8325  12D5  2AD9               	goto	l2612
  8326  12D6                     u3300:
  8327  12D6                     l2610:
  8328  12D6  1683               	bsf	3,5	;RP0=1, select bank1
  8329  12D7  1303               	bcf	3,6	;RP1=0, select bank1
  8330  12D8  17A3               	bsf	___fladd@grs^(0+128),7
  8331  12D9                     l2612:
  8332  12D9  3001               	movlw	1
  8333  12DA  1283               	bcf	3,5	;RP0=0, select bank0
  8334  12DB  00E6               	movwf	??___fladd
  8335  12DC                     u3315:
  8336  12DC  0D61               	rlf	___fladd@b+3,w
  8337  12DD  0CE1               	rrf	___fladd@b+3,f
  8338  12DE  0CE0               	rrf	___fladd@b+2,f
  8339  12DF  0CDF               	rrf	___fladd@b+1,f
  8340  12E0  0CDE               	rrf	___fladd@b,f
  8341  12E1  0BE6               	decfsz	??___fladd& (0+127),f
  8342  12E2  2ADC               	goto	u3315
  8343  12E3                     l2614:
  8344  12E3  3001               	movlw	1
  8345  12E4  00E6               	movwf	??___fladd
  8346  12E5  0866               	movf	??___fladd,w
  8347  12E6  1683               	bsf	3,5	;RP0=1, select bank1
  8348  12E7  1303               	bcf	3,6	;RP1=0, select bank1
  8349  12E8  07A2               	addwf	___fladd@bexp^(0+128),f
  8350  12E9                     l2616:
  8351  12E9  1683               	bsf	3,5	;RP0=1, select bank1
  8352  12EA  1303               	bcf	3,6	;RP1=0, select bank1
  8353  12EB  0821               	movf	___fladd@aexp^(0+128),w
  8354  12EC  0222               	subwf	___fladd@bexp^(0+128),w
  8355  12ED  1C03               	skipc
  8356  12EE  2AF0               	goto	u3321
  8357  12EF  2AF1               	goto	u3320
  8358  12F0                     u3321:
  8359  12F0  2ABD               	goto	l758
  8360  12F1                     u3320:
  8361  12F1                     l756:
  8362  12F1  1B20               	btfsc	___fladd@signs^(0+128),6
  8363  12F2  2AF4               	goto	u3331
  8364  12F3  2AF5               	goto	u3330
  8365  12F4                     u3331:
  8366  12F4  2B51               	goto	l2642
  8367  12F5                     u3330:
  8368  12F5                     l2618:
  8369  12F5  0822               	movf	___fladd@bexp^(0+128),w
  8370  12F6  1D03               	btfss	3,2
  8371  12F7  2AF9               	goto	u3341
  8372  12F8  2AFA               	goto	u3340
  8373  12F9                     u3341:
  8374  12F9  2B05               	goto	l2624
  8375  12FA                     u3340:
  8376  12FA                     l2620:
  8377  12FA  3000               	movlw	0
  8378  12FB  1283               	bcf	3,5	;RP0=0, select bank0
  8379  12FC  1303               	bcf	3,6	;RP1=0, select bank0
  8380  12FD  00E1               	movwf	?___fladd+3
  8381  12FE  3000               	movlw	0
  8382  12FF  00E0               	movwf	?___fladd+2
  8383  1300  3000               	movlw	0
  8384  1301  00DF               	movwf	?___fladd+1
  8385  1302  3000               	movlw	0
  8386  1303  00DE               	movwf	?___fladd
  8387  1304  2CB3               	goto	l765
  8388  1305                     l2624:
  8389  1305  1283               	bcf	3,5	;RP0=0, select bank0
  8390  1306  1303               	bcf	3,6	;RP1=0, select bank0
  8391  1307  0862               	movf	___fladd@a,w
  8392  1308  07DE               	addwf	___fladd@b,f
  8393  1309  0863               	movf	___fladd@a+1,w
  8394  130A  1103               	clrz
  8395  130B  1803               	skipnc
  8396  130C  3E01               	addlw	1
  8397  130D  1903               	skipnz
  8398  130E  2B10               	goto	u3351
  8399  130F  07DF               	addwf	___fladd@b+1,f
  8400  1310                     u3351:
  8401  1310  0864               	movf	___fladd@a+2,w
  8402  1311  1103               	clrz
  8403  1312  1803               	skipnc
  8404  1313  3E01               	addlw	1
  8405  1314  1903               	skipnz
  8406  1315  2B17               	goto	u3352
  8407  1316  07E0               	addwf	___fladd@b+2,f
  8408  1317                     u3352:
  8409  1317  0865               	movf	___fladd@a+3,w
  8410  1318  1103               	clrz
  8411  1319  1803               	skipnc
  8412  131A  3E01               	addlw	1
  8413  131B  1903               	skipnz
  8414  131C  2B1E               	goto	u3353
  8415  131D  07E1               	addwf	___fladd@b+3,f
  8416  131E                     u3353:
  8417  131E                     l2626:
  8418  131E  1C61               	btfss	___fladd@b+3,0
  8419  131F  2B21               	goto	u3361
  8420  1320  2B22               	goto	u3360
  8421  1321                     u3361:
  8422  1321  2C17               	goto	l2676
  8423  1322                     u3360:
  8424  1322                     l2628:
  8425  1322  1683               	bsf	3,5	;RP0=1, select bank1
  8426  1323  1303               	bcf	3,6	;RP1=0, select bank1
  8427  1324  1C23               	btfss	___fladd@grs^(0+128),0
  8428  1325  2B27               	goto	u3371
  8429  1326  2B28               	goto	u3370
  8430  1327                     u3371:
  8431  1327  2B35               	goto	l2632
  8432  1328                     u3370:
  8433  1328                     l2630:
  8434  1328  0823               	movf	___fladd@grs^(0+128),w
  8435  1329  1283               	bcf	3,5	;RP0=0, select bank0
  8436  132A  1303               	bcf	3,6	;RP1=0, select bank0
  8437  132B  00E6               	movwf	??___fladd
  8438  132C  1003               	clrc
  8439  132D  0C66               	rrf	??___fladd,w
  8440  132E  3801               	iorlw	1
  8441  132F  00E7               	movwf	??___fladd+1
  8442  1330  0867               	movf	??___fladd+1,w
  8443  1331  1683               	bsf	3,5	;RP0=1, select bank1
  8444  1332  1303               	bcf	3,6	;RP1=0, select bank1
  8445  1333  00A3               	movwf	___fladd@grs^(0+128)
  8446  1334  2B37               	goto	l2634
  8447  1335                     l2632:
  8448  1335  1003               	clrc
  8449  1336  0CA3               	rrf	___fladd@grs^(0+128),f
  8450  1337                     l2634:
  8451  1337  1283               	bcf	3,5	;RP0=0, select bank0
  8452  1338  1303               	bcf	3,6	;RP1=0, select bank0
  8453  1339  1C5E               	btfss	___fladd@b,0
  8454  133A  2B3C               	goto	u3381
  8455  133B  2B3D               	goto	u3380
  8456  133C                     u3381:
  8457  133C  2B40               	goto	l2638
  8458  133D                     u3380:
  8459  133D                     l2636:
  8460  133D  1683               	bsf	3,5	;RP0=1, select bank1
  8461  133E  1303               	bcf	3,6	;RP1=0, select bank1
  8462  133F  17A3               	bsf	___fladd@grs^(0+128),7
  8463  1340                     l2638:
  8464  1340  3001               	movlw	1
  8465  1341  1283               	bcf	3,5	;RP0=0, select bank0
  8466  1342  00E6               	movwf	??___fladd
  8467  1343                     u3395:
  8468  1343  0D61               	rlf	___fladd@b+3,w
  8469  1344  0CE1               	rrf	___fladd@b+3,f
  8470  1345  0CE0               	rrf	___fladd@b+2,f
  8471  1346  0CDF               	rrf	___fladd@b+1,f
  8472  1347  0CDE               	rrf	___fladd@b,f
  8473  1348  0BE6               	decfsz	??___fladd& (0+127),f
  8474  1349  2B43               	goto	u3395
  8475  134A                     l2640:
  8476  134A  3001               	movlw	1
  8477  134B  00E6               	movwf	??___fladd
  8478  134C  0866               	movf	??___fladd,w
  8479  134D  1683               	bsf	3,5	;RP0=1, select bank1
  8480  134E  1303               	bcf	3,6	;RP1=0, select bank1
  8481  134F  07A2               	addwf	___fladd@bexp^(0+128),f
  8482  1350  2C17               	goto	l2676
  8483  1351                     l2642:
  8484  1351  1283               	bcf	3,5	;RP0=0, select bank0
  8485  1352  1303               	bcf	3,6	;RP1=0, select bank0
  8486  1353  0861               	movf	___fladd@b+3,w
  8487  1354  3A80               	xorlw	128
  8488  1355  00FF               	movwf	btemp+1
  8489  1356  0865               	movf	___fladd@a+3,w
  8490  1357  3A80               	xorlw	128
  8491  1358  027F               	subwf	btemp+1,w
  8492  1359  1D03               	skipz
  8493  135A  2B65               	goto	u3403
  8494  135B  0864               	movf	___fladd@a+2,w
  8495  135C  0260               	subwf	___fladd@b+2,w
  8496  135D  1D03               	skipz
  8497  135E  2B65               	goto	u3403
  8498  135F  0863               	movf	___fladd@a+1,w
  8499  1360  025F               	subwf	___fladd@b+1,w
  8500  1361  1D03               	skipz
  8501  1362  2B65               	goto	u3403
  8502  1363  0862               	movf	___fladd@a,w
  8503  1364  025E               	subwf	___fladd@b,w
  8504  1365                     u3403:
  8505  1365  1803               	skipnc
  8506  1366  2B68               	goto	u3401
  8507  1367  2B69               	goto	u3400
  8508  1368                     u3401:
  8509  1368  2BC5               	goto	l2652
  8510  1369                     u3400:
  8511  1369                     l2644:
  8512  1369  30FF               	movlw	255
  8513  136A  00E6               	movwf	??___fladd
  8514  136B  30FF               	movlw	255
  8515  136C  00E7               	movwf	??___fladd+1
  8516  136D  30FF               	movlw	255
  8517  136E  00E8               	movwf	??___fladd+2
  8518  136F  30FF               	movlw	255
  8519  1370  00E9               	movwf	??___fladd+3
  8520  1371  0862               	movf	___fladd@a,w
  8521  1372  00EA               	movwf	??___fladd+4
  8522  1373  0863               	movf	___fladd@a+1,w
  8523  1374  00EB               	movwf	??___fladd+5
  8524  1375  0864               	movf	___fladd@a+2,w
  8525  1376  00EC               	movwf	??___fladd+6
  8526  1377  0865               	movf	___fladd@a+3,w
  8527  1378  00ED               	movwf	??___fladd+7
  8528  1379  085E               	movf	___fladd@b,w
  8529  137A  02EA               	subwf	??___fladd+4,f
  8530  137B  085F               	movf	___fladd@b+1,w
  8531  137C  1C03               	skipc
  8532  137D  0F5F               	incfsz	___fladd@b+1,w
  8533  137E  2B80               	goto	u3411
  8534  137F  2B81               	goto	u3412
  8535  1380                     u3411:
  8536  1380  02EB               	subwf	??___fladd+5,f
  8537  1381                     u3412:
  8538  1381  0860               	movf	___fladd@b+2,w
  8539  1382  1C03               	skipc
  8540  1383  0F60               	incfsz	___fladd@b+2,w
  8541  1384  2B86               	goto	u3413
  8542  1385  2B87               	goto	u3414
  8543  1386                     u3413:
  8544  1386  02EC               	subwf	??___fladd+6,f
  8545  1387                     u3414:
  8546  1387  0861               	movf	___fladd@b+3,w
  8547  1388  1C03               	skipc
  8548  1389  0F61               	incfsz	___fladd@b+3,w
  8549  138A  2B8C               	goto	u3415
  8550  138B  2B8D               	goto	u3416
  8551  138C                     u3415:
  8552  138C  02ED               	subwf	??___fladd+7,f
  8553  138D                     u3416:
  8554  138D  086A               	movf	??___fladd+4,w
  8555  138E  07E6               	addwf	??___fladd,f
  8556  138F  086B               	movf	??___fladd+5,w
  8557  1390  1803               	skipnc
  8558  1391  0F6B               	incfsz	??___fladd+5,w
  8559  1392  2B94               	goto	u3420
  8560  1393  2B95               	goto	u3421
  8561  1394                     u3420:
  8562  1394  07E7               	addwf	??___fladd+1,f
  8563  1395                     u3421:
  8564  1395  086C               	movf	??___fladd+6,w
  8565  1396  1803               	skipnc
  8566  1397  0F6C               	incfsz	??___fladd+6,w
  8567  1398  2B9A               	goto	u3422
  8568  1399  2B9B               	goto	u3423
  8569  139A                     u3422:
  8570  139A  07E8               	addwf	??___fladd+2,f
  8571  139B                     u3423:
  8572  139B  086D               	movf	??___fladd+7,w
  8573  139C  1803               	skipnc
  8574  139D  0A6D               	incf	??___fladd+7,w
  8575  139E  07E9               	addwf	??___fladd+3,f
  8576  139F  0869               	movf	??___fladd+3,w
  8577  13A0  00E1               	movwf	___fladd@b+3
  8578  13A1  0868               	movf	??___fladd+2,w
  8579  13A2  00E0               	movwf	___fladd@b+2
  8580  13A3  0867               	movf	??___fladd+1,w
  8581  13A4  00DF               	movwf	___fladd@b+1
  8582  13A5  0866               	movf	??___fladd,w
  8583  13A6  00DE               	movwf	___fladd@b
  8584  13A7                     l2646:
  8585  13A7  3080               	movlw	128
  8586  13A8  00E6               	movwf	??___fladd
  8587  13A9  0866               	movf	??___fladd,w
  8588  13AA  1683               	bsf	3,5	;RP0=1, select bank1
  8589  13AB  1303               	bcf	3,6	;RP1=0, select bank1
  8590  13AC  06A0               	xorwf	___fladd@signs^(0+128),f
  8591  13AD  09A3               	comf	___fladd@grs^(0+128),f
  8592  13AE  0AA3               	incf	___fladd@grs^(0+128),f
  8593  13AF                     l2648:
  8594  13AF  0823               	movf	___fladd@grs^(0+128),w
  8595  13B0  1D03               	btfss	3,2
  8596  13B1  2BB3               	goto	u3431
  8597  13B2  2BB4               	goto	u3430
  8598  13B3                     u3431:
  8599  13B3  2BD3               	goto	l773
  8600  13B4                     u3430:
  8601  13B4                     l2650:
  8602  13B4  3001               	movlw	1
  8603  13B5  1283               	bcf	3,5	;RP0=0, select bank0
  8604  13B6  1303               	bcf	3,6	;RP1=0, select bank0
  8605  13B7  07DE               	addwf	___fladd@b,f
  8606  13B8  3000               	movlw	0
  8607  13B9  1803               	skipnc
  8608  13BA  3001               	movlw	1
  8609  13BB  07DF               	addwf	___fladd@b+1,f
  8610  13BC  3000               	movlw	0
  8611  13BD  1803               	skipnc
  8612  13BE  3001               	movlw	1
  8613  13BF  07E0               	addwf	___fladd@b+2,f
  8614  13C0  3000               	movlw	0
  8615  13C1  1803               	skipnc
  8616  13C2  3001               	movlw	1
  8617  13C3  07E1               	addwf	___fladd@b+3,f
  8618  13C4  2BD3               	goto	l773
  8619  13C5                     l2652:
  8620  13C5  0862               	movf	___fladd@a,w
  8621  13C6  02DE               	subwf	___fladd@b,f
  8622  13C7  0863               	movf	___fladd@a+1,w
  8623  13C8  1C03               	skipc
  8624  13C9  0F63               	incfsz	___fladd@a+1,w
  8625  13CA  02DF               	subwf	___fladd@b+1,f
  8626  13CB  0864               	movf	___fladd@a+2,w
  8627  13CC  1C03               	skipc
  8628  13CD  0F64               	incfsz	___fladd@a+2,w
  8629  13CE  02E0               	subwf	___fladd@b+2,f
  8630  13CF  0865               	movf	___fladd@a+3,w
  8631  13D0  1C03               	skipc
  8632  13D1  0F65               	incfsz	___fladd@a+3,w
  8633  13D2  02E1               	subwf	___fladd@b+3,f
  8634  13D3                     l773:
  8635  13D3  1283               	bcf	3,5	;RP0=0, select bank0
  8636  13D4  0861               	movf	___fladd@b+3,w
  8637  13D5  0460               	iorwf	___fladd@b+2,w
  8638  13D6  045F               	iorwf	___fladd@b+1,w
  8639  13D7  045E               	iorwf	___fladd@b,w
  8640  13D8  1D03               	skipz
  8641  13D9  2BDB               	goto	u3441
  8642  13DA  2BDC               	goto	u3440
  8643  13DB                     u3441:
  8644  13DB  2C12               	goto	l2674
  8645  13DC                     u3440:
  8646  13DC                     l2654:
  8647  13DC  1683               	bsf	3,5	;RP0=1, select bank1
  8648  13DD  1303               	bcf	3,6	;RP1=0, select bank1
  8649  13DE  0823               	movf	___fladd@grs^(0+128),w
  8650  13DF  1D03               	btfss	3,2
  8651  13E0  2BE2               	goto	u3451
  8652  13E1  2BE3               	goto	u3450
  8653  13E2                     u3451:
  8654  13E2  2C12               	goto	l2674
  8655  13E3                     u3450:
  8656  13E3                     l2656:
  8657  13E3  3000               	movlw	0
  8658  13E4  1283               	bcf	3,5	;RP0=0, select bank0
  8659  13E5  1303               	bcf	3,6	;RP1=0, select bank0
  8660  13E6  00E1               	movwf	?___fladd+3
  8661  13E7  3000               	movlw	0
  8662  13E8  00E0               	movwf	?___fladd+2
  8663  13E9  3000               	movlw	0
  8664  13EA  00DF               	movwf	?___fladd+1
  8665  13EB  3000               	movlw	0
  8666  13EC  00DE               	movwf	?___fladd
  8667  13ED  2CB3               	goto	l765
  8668  13EE                     l2660:
  8669  13EE  3001               	movlw	1
  8670  13EF  00E6               	movwf	??___fladd
  8671  13F0                     u3465:
  8672  13F0  1003               	clrc
  8673  13F1  0DDE               	rlf	___fladd@b,f
  8674  13F2  0DDF               	rlf	___fladd@b+1,f
  8675  13F3  0DE0               	rlf	___fladd@b+2,f
  8676  13F4  0DE1               	rlf	___fladd@b+3,f
  8677  13F5  0BE6               	decfsz	??___fladd,f
  8678  13F6  2BF0               	goto	u3465
  8679  13F7                     l2662:
  8680  13F7  1683               	bsf	3,5	;RP0=1, select bank1
  8681  13F8  1303               	bcf	3,6	;RP1=0, select bank1
  8682  13F9  1FA3               	btfss	___fladd@grs^(0+128),7
  8683  13FA  2BFC               	goto	u3471
  8684  13FB  2BFD               	goto	u3470
  8685  13FC                     u3471:
  8686  13FC  2C00               	goto	l777
  8687  13FD                     u3470:
  8688  13FD                     l2664:
  8689  13FD  1283               	bcf	3,5	;RP0=0, select bank0
  8690  13FE  1303               	bcf	3,6	;RP1=0, select bank0
  8691  13FF  145E               	bsf	___fladd@b,0
  8692  1400                     l777:
  8693  1400  1683               	bsf	3,5	;RP0=1, select bank1
  8694  1401  1303               	bcf	3,6	;RP1=0, select bank1
  8695  1402  1C23               	btfss	___fladd@grs^(0+128),0
  8696  1403  2C05               	goto	u3481
  8697  1404  2C06               	goto	u3480
  8698  1405                     u3481:
  8699  1405  2C09               	goto	l2668
  8700  1406                     u3480:
  8701  1406                     l2666:
  8702  1406  1403               	setc
  8703  1407  0DA3               	rlf	___fladd@grs^(0+128),f
  8704  1408  2C0B               	goto	l2670
  8705  1409                     l2668:
  8706  1409  1003               	clrc
  8707  140A  0DA3               	rlf	___fladd@grs^(0+128),f
  8708  140B                     l2670:
  8709  140B  0822               	movf	___fladd@bexp^(0+128),w
  8710  140C  1903               	btfsc	3,2
  8711  140D  2C0F               	goto	u3491
  8712  140E  2C10               	goto	u3490
  8713  140F                     u3491:
  8714  140F  2C12               	goto	l2674
  8715  1410                     u3490:
  8716  1410                     l2672:
  8717  1410  3001               	movlw	1
  8718  1411  02A2               	subwf	___fladd@bexp^(0+128),f
  8719  1412                     l2674:
  8720  1412  1283               	bcf	3,5	;RP0=0, select bank0
  8721  1413  1FE0               	btfss	___fladd@b+2,7
  8722  1414  2C16               	goto	u3501
  8723  1415  2C17               	goto	u3500
  8724  1416                     u3501:
  8725  1416  2BEE               	goto	l2660
  8726  1417                     u3500:
  8727  1417                     l2676:
  8728  1417  1683               	bsf	3,5	;RP0=1, select bank1
  8729  1418  1303               	bcf	3,6	;RP1=0, select bank1
  8730  1419  01A1               	clrf	___fladd@aexp^(0+128)
  8731  141A                     l2678:
  8732  141A  1FA3               	btfss	___fladd@grs^(0+128),7
  8733  141B  2C1D               	goto	u3511
  8734  141C  2C1E               	goto	u3510
  8735  141D                     u3511:
  8736  141D  2C30               	goto	l2686
  8737  141E                     u3510:
  8738  141E                     l2680:
  8739  141E  0823               	movf	___fladd@grs^(0+128),w
  8740  141F  397F               	andlw	127
  8741  1420  1903               	btfsc	3,2
  8742  1421  2C23               	goto	u3521
  8743  1422  2C24               	goto	u3520
  8744  1423                     u3521:
  8745  1423  2C29               	goto	l783
  8746  1424                     u3520:
  8747  1424                     l2682:
  8748  1424  1683               	bsf	3,5	;RP0=1, select bank1
  8749  1425  1303               	bcf	3,6	;RP1=0, select bank1
  8750  1426  01A1               	clrf	___fladd@aexp^(0+128)
  8751  1427  0AA1               	incf	___fladd@aexp^(0+128),f
  8752  1428  2C30               	goto	l2686
  8753  1429                     l783:
  8754  1429  1283               	bcf	3,5	;RP0=0, select bank0
  8755  142A  1303               	bcf	3,6	;RP1=0, select bank0
  8756  142B  1C5E               	btfss	___fladd@b,0
  8757  142C  2C2E               	goto	u3531
  8758  142D  2C2F               	goto	u3530
  8759  142E                     u3531:
  8760  142E  2C30               	goto	l2686
  8761  142F                     u3530:
  8762  142F  2C24               	goto	l2682
  8763  1430                     l2686:
  8764  1430  1683               	bsf	3,5	;RP0=1, select bank1
  8765  1431  1303               	bcf	3,6	;RP1=0, select bank1
  8766  1432  0821               	movf	___fladd@aexp^(0+128),w
  8767  1433  1903               	btfsc	3,2
  8768  1434  2C36               	goto	u3541
  8769  1435  2C37               	goto	u3540
  8770  1436                     u3541:
  8771  1436  2C73               	goto	l786
  8772  1437                     u3540:
  8773  1437                     l2688:
  8774  1437  3001               	movlw	1
  8775  1438  1283               	bcf	3,5	;RP0=0, select bank0
  8776  1439  1303               	bcf	3,6	;RP1=0, select bank0
  8777  143A  07DE               	addwf	___fladd@b,f
  8778  143B  3000               	movlw	0
  8779  143C  1803               	skipnc
  8780  143D  3001               	movlw	1
  8781  143E  07DF               	addwf	___fladd@b+1,f
  8782  143F  3000               	movlw	0
  8783  1440  1803               	skipnc
  8784  1441  3001               	movlw	1
  8785  1442  07E0               	addwf	___fladd@b+2,f
  8786  1443  3000               	movlw	0
  8787  1444  1803               	skipnc
  8788  1445  3001               	movlw	1
  8789  1446  07E1               	addwf	___fladd@b+3,f
  8790  1447                     l2690:
  8791  1447  1C61               	btfss	___fladd@b+3,0
  8792  1448  2C4A               	goto	u3551
  8793  1449  2C4B               	goto	u3550
  8794  144A                     u3551:
  8795  144A  2C73               	goto	l786
  8796  144B                     u3550:
  8797  144B                     l2692:
  8798  144B  085E               	movf	___fladd@b,w
  8799  144C  00E6               	movwf	??___fladd
  8800  144D  085F               	movf	___fladd@b+1,w
  8801  144E  00E7               	movwf	??___fladd+1
  8802  144F  0860               	movf	___fladd@b+2,w
  8803  1450  00E8               	movwf	??___fladd+2
  8804  1451  0861               	movf	___fladd@b+3,w
  8805  1452  00E9               	movwf	??___fladd+3
  8806  1453  3001               	movlw	1
  8807  1454  00EA               	movwf	??___fladd+4
  8808  1455                     u3565:
  8809  1455  0D69               	rlf	??___fladd+3,w
  8810  1456  0CE9               	rrf	??___fladd+3,f
  8811  1457  0CE8               	rrf	??___fladd+2,f
  8812  1458  0CE7               	rrf	??___fladd+1,f
  8813  1459  0CE6               	rrf	??___fladd,f
  8814  145A                     u3560:
  8815  145A  0BEA               	decfsz	??___fladd+4,f
  8816  145B  2C55               	goto	u3565
  8817  145C  0869               	movf	??___fladd+3,w
  8818  145D  00E1               	movwf	___fladd@b+3
  8819  145E  0868               	movf	??___fladd+2,w
  8820  145F  00E0               	movwf	___fladd@b+2
  8821  1460  0867               	movf	??___fladd+1,w
  8822  1461  00DF               	movwf	___fladd@b+1
  8823  1462  0866               	movf	??___fladd,w
  8824  1463  00DE               	movwf	___fladd@b
  8825  1464  1683               	bsf	3,5	;RP0=1, select bank1
  8826  1465  1303               	bcf	3,6	;RP1=0, select bank1
  8827  1466  0A22               	incf	___fladd@bexp^(0+128),w
  8828  1467  1903               	btfsc	3,2
  8829  1468  2C6A               	goto	u3571
  8830  1469  2C6B               	goto	u3570
  8831  146A                     u3571:
  8832  146A  2C73               	goto	l786
  8833  146B                     u3570:
  8834  146B                     l2694:
  8835  146B  3001               	movlw	1
  8836  146C  1283               	bcf	3,5	;RP0=0, select bank0
  8837  146D  1303               	bcf	3,6	;RP1=0, select bank0
  8838  146E  00E6               	movwf	??___fladd
  8839  146F  0866               	movf	??___fladd,w
  8840  1470  1683               	bsf	3,5	;RP0=1, select bank1
  8841  1471  1303               	bcf	3,6	;RP1=0, select bank1
  8842  1472  07A2               	addwf	___fladd@bexp^(0+128),f
  8843  1473                     l786:
  8844  1473  1683               	bsf	3,5	;RP0=1, select bank1
  8845  1474  1303               	bcf	3,6	;RP1=0, select bank1
  8846  1475  0A22               	incf	___fladd@bexp^(0+128),w
  8847  1476  1903               	btfsc	3,2
  8848  1477  2C79               	goto	u3581
  8849  1478  2C7A               	goto	u3580
  8850  1479                     u3581:
  8851  1479  2C7F               	goto	l2698
  8852  147A                     u3580:
  8853  147A                     l2696:
  8854  147A  0822               	movf	___fladd@bexp^(0+128),w
  8855  147B  1D03               	btfss	3,2
  8856  147C  2C7E               	goto	u3591
  8857  147D  2C7F               	goto	u3590
  8858  147E                     u3591:
  8859  147E  2C91               	goto	l2704
  8860  147F                     u3590:
  8861  147F                     l2698:
  8862  147F  3000               	movlw	0
  8863  1480  1283               	bcf	3,5	;RP0=0, select bank0
  8864  1481  1303               	bcf	3,6	;RP1=0, select bank0
  8865  1482  00E1               	movwf	___fladd@b+3
  8866  1483  3000               	movlw	0
  8867  1484  00E0               	movwf	___fladd@b+2
  8868  1485  3000               	movlw	0
  8869  1486  00DF               	movwf	___fladd@b+1
  8870  1487  3000               	movlw	0
  8871  1488  00DE               	movwf	___fladd@b
  8872  1489                     l2700:
  8873  1489  1683               	bsf	3,5	;RP0=1, select bank1
  8874  148A  1303               	bcf	3,6	;RP1=0, select bank1
  8875  148B  0822               	movf	___fladd@bexp^(0+128),w
  8876  148C  1D03               	btfss	3,2
  8877  148D  2C8F               	goto	u3601
  8878  148E  2C90               	goto	u3600
  8879  148F                     u3601:
  8880  148F  2C91               	goto	l2704
  8881  1490                     u3600:
  8882  1490                     l2702:
  8883  1490  01A0               	clrf	___fladd@signs^(0+128)
  8884  1491                     l2704:
  8885  1491  1C22               	btfss	___fladd@bexp^(0+128),0
  8886  1492  2C94               	goto	u3611
  8887  1493  2C95               	goto	u3610
  8888  1494                     u3611:
  8889  1494  2C99               	goto	l2708
  8890  1495                     u3610:
  8891  1495                     l2706:
  8892  1495  1283               	bcf	3,5	;RP0=0, select bank0
  8893  1496  1303               	bcf	3,6	;RP1=0, select bank0
  8894  1497  17E0               	bsf	___fladd@b+2,7
  8895  1498  2C9F               	goto	l794
  8896  1499                     l2708:
  8897  1499  307F               	movlw	127
  8898  149A  1283               	bcf	3,5	;RP0=0, select bank0
  8899  149B  1303               	bcf	3,6	;RP1=0, select bank0
  8900  149C  00E6               	movwf	??___fladd
  8901  149D  0866               	movf	??___fladd,w
  8902  149E  05E0               	andwf	___fladd@b+2,f
  8903  149F                     l794:
  8904  149F  1683               	bsf	3,5	;RP0=1, select bank1
  8905  14A0  1303               	bcf	3,6	;RP1=0, select bank1
  8906  14A1  0822               	movf	___fladd@bexp^(0+128),w
  8907  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  8908  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  8909  14A4  00E6               	movwf	??___fladd
  8910  14A5  1003               	clrc
  8911  14A6  0C66               	rrf	??___fladd,w
  8912  14A7  00E7               	movwf	??___fladd+1
  8913  14A8  0867               	movf	??___fladd+1,w
  8914  14A9  00E1               	movwf	___fladd@b+3
  8915  14AA                     l2710:
  8916  14AA  1683               	bsf	3,5	;RP0=1, select bank1
  8917  14AB  1303               	bcf	3,6	;RP1=0, select bank1
  8918  14AC  1FA0               	btfss	___fladd@signs^(0+128),7
  8919  14AD  2CAF               	goto	u3621
  8920  14AE  2CB0               	goto	u3620
  8921  14AF                     u3621:
  8922  14AF  2CB3               	goto	l795
  8923  14B0                     u3620:
  8924  14B0                     l2712:
  8925  14B0  1283               	bcf	3,5	;RP0=0, select bank0
  8926  14B1  1303               	bcf	3,6	;RP1=0, select bank0
  8927  14B2  17E1               	bsf	___fladd@b+3,7
  8928  14B3                     l795:
  8929  14B3                     l765:
  8930  14B3  0008               	return
  8931  14B4                     __end_of___fladd:
  8932                           
  8933                           	psect	text27
  8934  1006                     __ptext27:	
  8935 ;; *************** function ___flneg *****************
  8936 ;; Defined at:
  8937 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8938 ;; Parameters:    Size  Location     Type
  8939 ;;  f1              4    0[BANK0 ] unsigned char 
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;		None
  8942 ;; Return value:  Size  Location     Type
  8943 ;;                  4    0[BANK0 ] unsigned char 
  8944 ;; Registers used:
  8945 ;;		wreg
  8946 ;; Tracked objects:
  8947 ;;		On entry : 0/0
  8948 ;;		On exit  : 0/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8951 ;;      Params:         0       4       0       0       0
  8952 ;;      Locals:         0       0       0       0       0
  8953 ;;      Temps:          0       0       0       0       0
  8954 ;;      Totals:         0       4       0       0       0
  8955 ;;Total ram usage:        4 bytes
  8956 ;; Hardware stack levels used:    1
  8957 ;; Hardware stack levels required when called:    2
  8958 ;; This function calls:
  8959 ;;		Nothing
  8960 ;; This function is called by:
  8961 ;;		_sprintf
  8962 ;; This function uses a non-reentrant model
  8963 ;;
  8964                           
  8965                           
  8966                           ;psect for function ___flneg
  8967  1006                     ___flneg:
  8968  1006                     l3118:	
  8969                           ;incstack = 0
  8970                           ; Regs used in ___flneg: [wreg]
  8971                           
  8972  1006  1283               	bcf	3,5	;RP0=0, select bank0
  8973  1007  1303               	bcf	3,6	;RP1=0, select bank0
  8974  1008  0823               	movf	___flneg@f1+3,w
  8975  1009  0422               	iorwf	___flneg@f1+2,w
  8976  100A  0421               	iorwf	___flneg@f1+1,w
  8977  100B  0420               	iorwf	___flneg@f1,w
  8978  100C  1903               	skipnz
  8979  100D  280F               	goto	u4741
  8980  100E  2810               	goto	u4740
  8981  100F                     u4741:
  8982  100F  2812               	goto	l3122
  8983  1010                     u4740:
  8984  1010                     l3120:
  8985  1010  3080               	movlw	128
  8986  1011  06A3               	xorwf	___flneg@f1+3,f
  8987  1012                     l3122:
  8988  1012                     l624:
  8989  1012  0008               	return
  8990  1013                     __end_of___flneg:
  8991                           
  8992                           	psect	text28
  8993  1013                     __ptext28:	
  8994 ;; *************** function ___flge *****************
  8995 ;; Defined at:
  8996 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8997 ;; Parameters:    Size  Location     Type
  8998 ;;  ff1             4    0[BANK0 ] unsigned char 
  8999 ;;  ff2             4    4[BANK0 ] unsigned char 
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;		None
  9002 ;; Return value:  Size  Location     Type
  9003 ;;		None               void
  9004 ;; Registers used:
  9005 ;;		wreg, status,2, status,0
  9006 ;; Tracked objects:
  9007 ;;		On entry : 0/0
  9008 ;;		On exit  : 0/0
  9009 ;;		Unchanged: 0/0
  9010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9011 ;;      Params:         0       8       0       0       0
  9012 ;;      Locals:         0       0       0       0       0
  9013 ;;      Temps:          0       4       0       0       0
  9014 ;;      Totals:         0      12       0       0       0
  9015 ;;Total ram usage:       12 bytes
  9016 ;; Hardware stack levels used:    1
  9017 ;; Hardware stack levels required when called:    2
  9018 ;; This function calls:
  9019 ;;		Nothing
  9020 ;; This function is called by:
  9021 ;;		_sprintf
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           
  9026                           ;psect for function ___flge
  9027  1013                     ___flge:
  9028  1013                     l3098:	
  9029                           ;incstack = 0
  9030                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9031                           
  9032  1013  3000               	movlw	0
  9033  1014  1283               	bcf	3,5	;RP0=0, select bank0
  9034  1015  1303               	bcf	3,6	;RP1=0, select bank0
  9035  1016  0520               	andwf	___flge@ff1,w
  9036  1017  00A8               	movwf	??___flge
  9037  1018  3000               	movlw	0
  9038  1019  0521               	andwf	___flge@ff1+1,w
  9039  101A  00A9               	movwf	??___flge+1
  9040  101B  3080               	movlw	128
  9041  101C  0522               	andwf	___flge@ff1+2,w
  9042  101D  00AA               	movwf	??___flge+2
  9043  101E  307F               	movlw	127
  9044  101F  0523               	andwf	___flge@ff1+3,w
  9045  1020  00AB               	movwf	??___flge+3
  9046  1021  082B               	movf	??___flge+3,w
  9047  1022  042A               	iorwf	??___flge+2,w
  9048  1023  0429               	iorwf	??___flge+1,w
  9049  1024  0428               	iorwf	??___flge,w
  9050  1025  1D03               	skipz
  9051  1026  2828               	goto	u4671
  9052  1027  2829               	goto	u4670
  9053  1028                     u4671:
  9054  1028  2831               	goto	l616
  9055  1029                     u4670:
  9056  1029                     l3100:
  9057  1029  3000               	movlw	0
  9058  102A  00A3               	movwf	___flge@ff1+3
  9059  102B  3000               	movlw	0
  9060  102C  00A2               	movwf	___flge@ff1+2
  9061  102D  3000               	movlw	0
  9062  102E  00A1               	movwf	___flge@ff1+1
  9063  102F  3000               	movlw	0
  9064  1030  00A0               	movwf	___flge@ff1
  9065  1031                     l616:
  9066  1031  3000               	movlw	0
  9067  1032  0524               	andwf	___flge@ff2,w
  9068  1033  00A8               	movwf	??___flge
  9069  1034  3000               	movlw	0
  9070  1035  0525               	andwf	___flge@ff2+1,w
  9071  1036  00A9               	movwf	??___flge+1
  9072  1037  3080               	movlw	128
  9073  1038  0526               	andwf	___flge@ff2+2,w
  9074  1039  00AA               	movwf	??___flge+2
  9075  103A  307F               	movlw	127
  9076  103B  0527               	andwf	___flge@ff2+3,w
  9077  103C  00AB               	movwf	??___flge+3
  9078  103D  082B               	movf	??___flge+3,w
  9079  103E  042A               	iorwf	??___flge+2,w
  9080  103F  0429               	iorwf	??___flge+1,w
  9081  1040  0428               	iorwf	??___flge,w
  9082  1041  1D03               	skipz
  9083  1042  2844               	goto	u4681
  9084  1043  2845               	goto	u4680
  9085  1044                     u4681:
  9086  1044  284D               	goto	l3104
  9087  1045                     u4680:
  9088  1045                     l3102:
  9089  1045  3000               	movlw	0
  9090  1046  00A7               	movwf	___flge@ff2+3
  9091  1047  3000               	movlw	0
  9092  1048  00A6               	movwf	___flge@ff2+2
  9093  1049  3000               	movlw	0
  9094  104A  00A5               	movwf	___flge@ff2+1
  9095  104B  3000               	movlw	0
  9096  104C  00A4               	movwf	___flge@ff2
  9097  104D                     l3104:
  9098  104D  1FA3               	btfss	___flge@ff1+3,7
  9099  104E  2850               	goto	u4691
  9100  104F  2851               	goto	u4690
  9101  1050                     u4691:
  9102  1050  2875               	goto	l3108
  9103  1051                     u4690:
  9104  1051                     l3106:
  9105  1051  3000               	movlw	0
  9106  1052  00A8               	movwf	??___flge
  9107  1053  3000               	movlw	0
  9108  1054  00A9               	movwf	??___flge+1
  9109  1055  3000               	movlw	0
  9110  1056  00AA               	movwf	??___flge+2
  9111  1057  3080               	movlw	128
  9112  1058  00AB               	movwf	??___flge+3
  9113  1059  0820               	movf	___flge@ff1,w
  9114  105A  02A8               	subwf	??___flge,f
  9115  105B  0821               	movf	___flge@ff1+1,w
  9116  105C  1C03               	skipc
  9117  105D  0F21               	incfsz	___flge@ff1+1,w
  9118  105E  2860               	goto	u4701
  9119  105F  2861               	goto	u4702
  9120  1060                     u4701:
  9121  1060  02A9               	subwf	??___flge+1,f
  9122  1061                     u4702:
  9123  1061  0822               	movf	___flge@ff1+2,w
  9124  1062  1C03               	skipc
  9125  1063  0F22               	incfsz	___flge@ff1+2,w
  9126  1064  2866               	goto	u4703
  9127  1065  2867               	goto	u4704
  9128  1066                     u4703:
  9129  1066  02AA               	subwf	??___flge+2,f
  9130  1067                     u4704:
  9131  1067  0823               	movf	___flge@ff1+3,w
  9132  1068  1C03               	skipc
  9133  1069  0F23               	incfsz	___flge@ff1+3,w
  9134  106A  286C               	goto	u4705
  9135  106B  286D               	goto	u4706
  9136  106C                     u4705:
  9137  106C  02AB               	subwf	??___flge+3,f
  9138  106D                     u4706:
  9139  106D  082B               	movf	??___flge+3,w
  9140  106E  00A3               	movwf	___flge@ff1+3
  9141  106F  082A               	movf	??___flge+2,w
  9142  1070  00A2               	movwf	___flge@ff1+2
  9143  1071  0829               	movf	??___flge+1,w
  9144  1072  00A1               	movwf	___flge@ff1+1
  9145  1073  0828               	movf	??___flge,w
  9146  1074  00A0               	movwf	___flge@ff1
  9147  1075                     l3108:
  9148  1075  1FA7               	btfss	___flge@ff2+3,7
  9149  1076  2878               	goto	u4711
  9150  1077  2879               	goto	u4710
  9151  1078                     u4711:
  9152  1078  289D               	goto	l619
  9153  1079                     u4710:
  9154  1079                     l3110:
  9155  1079  3000               	movlw	0
  9156  107A  00A8               	movwf	??___flge
  9157  107B  3000               	movlw	0
  9158  107C  00A9               	movwf	??___flge+1
  9159  107D  3000               	movlw	0
  9160  107E  00AA               	movwf	??___flge+2
  9161  107F  3080               	movlw	128
  9162  1080  00AB               	movwf	??___flge+3
  9163  1081  0824               	movf	___flge@ff2,w
  9164  1082  02A8               	subwf	??___flge,f
  9165  1083  0825               	movf	___flge@ff2+1,w
  9166  1084  1C03               	skipc
  9167  1085  0F25               	incfsz	___flge@ff2+1,w
  9168  1086  2888               	goto	u4721
  9169  1087  2889               	goto	u4722
  9170  1088                     u4721:
  9171  1088  02A9               	subwf	??___flge+1,f
  9172  1089                     u4722:
  9173  1089  0826               	movf	___flge@ff2+2,w
  9174  108A  1C03               	skipc
  9175  108B  0F26               	incfsz	___flge@ff2+2,w
  9176  108C  288E               	goto	u4723
  9177  108D  288F               	goto	u4724
  9178  108E                     u4723:
  9179  108E  02AA               	subwf	??___flge+2,f
  9180  108F                     u4724:
  9181  108F  0827               	movf	___flge@ff2+3,w
  9182  1090  1C03               	skipc
  9183  1091  0F27               	incfsz	___flge@ff2+3,w
  9184  1092  2894               	goto	u4725
  9185  1093  2895               	goto	u4726
  9186  1094                     u4725:
  9187  1094  02AB               	subwf	??___flge+3,f
  9188  1095                     u4726:
  9189  1095  082B               	movf	??___flge+3,w
  9190  1096  00A7               	movwf	___flge@ff2+3
  9191  1097  082A               	movf	??___flge+2,w
  9192  1098  00A6               	movwf	___flge@ff2+2
  9193  1099  0829               	movf	??___flge+1,w
  9194  109A  00A5               	movwf	___flge@ff2+1
  9195  109B  0828               	movf	??___flge,w
  9196  109C  00A4               	movwf	___flge@ff2
  9197  109D                     l619:
  9198  109D  3080               	movlw	128
  9199  109E  06A3               	xorwf	___flge@ff1+3,f
  9200  109F  3080               	movlw	128
  9201  10A0  06A7               	xorwf	___flge@ff2+3,f
  9202  10A1  0827               	movf	___flge@ff2+3,w
  9203  10A2  0223               	subwf	___flge@ff1+3,w
  9204  10A3  1D03               	skipz
  9205  10A4  28AF               	goto	u4735
  9206  10A5  0826               	movf	___flge@ff2+2,w
  9207  10A6  0222               	subwf	___flge@ff1+2,w
  9208  10A7  1D03               	skipz
  9209  10A8  28AF               	goto	u4735
  9210  10A9  0825               	movf	___flge@ff2+1,w
  9211  10AA  0221               	subwf	___flge@ff1+1,w
  9212  10AB  1D03               	skipz
  9213  10AC  28AF               	goto	u4735
  9214  10AD  0824               	movf	___flge@ff2,w
  9215  10AE  0220               	subwf	___flge@ff1,w
  9216  10AF                     u4735:
  9217  10AF  1803               	skipnc
  9218  10B0  28B2               	goto	u4731
  9219  10B1  28B3               	goto	u4730
  9220  10B2                     u4731:
  9221  10B2  28B5               	goto	l3114
  9222  10B3                     u4730:
  9223  10B3                     l3112:
  9224  10B3  1003               	clrc
  9225  10B4  28B6               	goto	l620
  9226  10B5                     l3114:
  9227  10B5  1403               	setc
  9228  10B6                     l620:
  9229  10B6  0008               	return
  9230  10B7                     __end_of___flge:
  9231                           
  9232                           	psect	text29
  9233  1B9C                     __ptext29:	
  9234 ;; *************** function ___fleq *****************
  9235 ;; Defined at:
  9236 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;  ff1             4    0[BANK0 ] unsigned char 
  9239 ;;  ff2             4    4[BANK0 ] unsigned char 
  9240 ;; Auto vars:     Size  Location     Type
  9241 ;;		None
  9242 ;; Return value:  Size  Location     Type
  9243 ;;		None               void
  9244 ;; Registers used:
  9245 ;;		wreg, status,2, status,0
  9246 ;; Tracked objects:
  9247 ;;		On entry : 0/0
  9248 ;;		On exit  : 0/0
  9249 ;;		Unchanged: 0/0
  9250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9251 ;;      Params:         0       8       0       0       0
  9252 ;;      Locals:         0       0       0       0       0
  9253 ;;      Temps:          0       4       0       0       0
  9254 ;;      Totals:         0      12       0       0       0
  9255 ;;Total ram usage:       12 bytes
  9256 ;; Hardware stack levels used:    1
  9257 ;; Hardware stack levels required when called:    2
  9258 ;; This function calls:
  9259 ;;		Nothing
  9260 ;; This function is called by:
  9261 ;;		_sprintf
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           
  9266                           ;psect for function ___fleq
  9267  1B9C                     ___fleq:
  9268  1B9C                     l3086:	
  9269                           ;incstack = 0
  9270                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9271                           
  9272  1B9C  3000               	movlw	0
  9273  1B9D  1283               	bcf	3,5	;RP0=0, select bank0
  9274  1B9E  1303               	bcf	3,6	;RP1=0, select bank0
  9275  1B9F  0520               	andwf	___fleq@ff1,w
  9276  1BA0  00A8               	movwf	??___fleq
  9277  1BA1  3000               	movlw	0
  9278  1BA2  0521               	andwf	___fleq@ff1+1,w
  9279  1BA3  00A9               	movwf	??___fleq+1
  9280  1BA4  3080               	movlw	128
  9281  1BA5  0522               	andwf	___fleq@ff1+2,w
  9282  1BA6  00AA               	movwf	??___fleq+2
  9283  1BA7  307F               	movlw	127
  9284  1BA8  0523               	andwf	___fleq@ff1+3,w
  9285  1BA9  00AB               	movwf	??___fleq+3
  9286  1BAA  082B               	movf	??___fleq+3,w
  9287  1BAB  042A               	iorwf	??___fleq+2,w
  9288  1BAC  0429               	iorwf	??___fleq+1,w
  9289  1BAD  0428               	iorwf	??___fleq,w
  9290  1BAE  1D03               	skipz
  9291  1BAF  2BB1               	goto	u4641
  9292  1BB0  2BB2               	goto	u4640
  9293  1BB1                     u4641:
  9294  1BB1  2BBA               	goto	l611
  9295  1BB2                     u4640:
  9296  1BB2                     l3088:
  9297  1BB2  3000               	movlw	0
  9298  1BB3  00A3               	movwf	___fleq@ff1+3
  9299  1BB4  3000               	movlw	0
  9300  1BB5  00A2               	movwf	___fleq@ff1+2
  9301  1BB6  3000               	movlw	0
  9302  1BB7  00A1               	movwf	___fleq@ff1+1
  9303  1BB8  3000               	movlw	0
  9304  1BB9  00A0               	movwf	___fleq@ff1
  9305  1BBA                     l611:
  9306  1BBA  3000               	movlw	0
  9307  1BBB  0524               	andwf	___fleq@ff2,w
  9308  1BBC  00A8               	movwf	??___fleq
  9309  1BBD  3000               	movlw	0
  9310  1BBE  0525               	andwf	___fleq@ff2+1,w
  9311  1BBF  00A9               	movwf	??___fleq+1
  9312  1BC0  3080               	movlw	128
  9313  1BC1  0526               	andwf	___fleq@ff2+2,w
  9314  1BC2  00AA               	movwf	??___fleq+2
  9315  1BC3  307F               	movlw	127
  9316  1BC4  0527               	andwf	___fleq@ff2+3,w
  9317  1BC5  00AB               	movwf	??___fleq+3
  9318  1BC6  082B               	movf	??___fleq+3,w
  9319  1BC7  042A               	iorwf	??___fleq+2,w
  9320  1BC8  0429               	iorwf	??___fleq+1,w
  9321  1BC9  0428               	iorwf	??___fleq,w
  9322  1BCA  1D03               	skipz
  9323  1BCB  2BCD               	goto	u4651
  9324  1BCC  2BCE               	goto	u4650
  9325  1BCD                     u4651:
  9326  1BCD  2BD6               	goto	l612
  9327  1BCE                     u4650:
  9328  1BCE                     l3090:
  9329  1BCE  3000               	movlw	0
  9330  1BCF  00A7               	movwf	___fleq@ff2+3
  9331  1BD0  3000               	movlw	0
  9332  1BD1  00A6               	movwf	___fleq@ff2+2
  9333  1BD2  3000               	movlw	0
  9334  1BD3  00A5               	movwf	___fleq@ff2+1
  9335  1BD4  3000               	movlw	0
  9336  1BD5  00A4               	movwf	___fleq@ff2
  9337  1BD6                     l612:
  9338  1BD6  0827               	movf	___fleq@ff2+3,w
  9339  1BD7  0623               	xorwf	___fleq@ff1+3,w
  9340  1BD8  1D03               	skipz
  9341  1BD9  2BE4               	goto	u4665
  9342  1BDA  0826               	movf	___fleq@ff2+2,w
  9343  1BDB  0622               	xorwf	___fleq@ff1+2,w
  9344  1BDC  1D03               	skipz
  9345  1BDD  2BE4               	goto	u4665
  9346  1BDE  0825               	movf	___fleq@ff2+1,w
  9347  1BDF  0621               	xorwf	___fleq@ff1+1,w
  9348  1BE0  1D03               	skipz
  9349  1BE1  2BE4               	goto	u4665
  9350  1BE2  0824               	movf	___fleq@ff2,w
  9351  1BE3  0620               	xorwf	___fleq@ff1,w
  9352  1BE4                     u4665:
  9353  1BE4  1903               	skipnz
  9354  1BE5  2BE7               	goto	u4661
  9355  1BE6  2BE8               	goto	u4660
  9356  1BE7                     u4661:
  9357  1BE7  2BEA               	goto	l3094
  9358  1BE8                     u4660:
  9359  1BE8                     l3092:
  9360  1BE8  1003               	clrc
  9361  1BE9  2BEB               	goto	l613
  9362  1BEA                     l3094:
  9363  1BEA  1403               	setc
  9364  1BEB                     l613:
  9365  1BEB  0008               	return
  9366  1BEC                     __end_of___fleq:
  9367                           
  9368                           	psect	text30
  9369  1B4C                     __ptext30:	
  9370 ;; *************** function _Lcd_Init *****************
  9371 ;; Defined at:
  9372 ;;		line 14 in file "LCD.c"
  9373 ;; Parameters:    Size  Location     Type
  9374 ;;		None
  9375 ;; Auto vars:     Size  Location     Type
  9376 ;;		None
  9377 ;; Return value:  Size  Location     Type
  9378 ;;                  1    wreg      void 
  9379 ;; Registers used:
  9380 ;;		wreg, status,2, status,0, pclath, cstack
  9381 ;; Tracked objects:
  9382 ;;		On entry : 0/0
  9383 ;;		On exit  : 0/0
  9384 ;;		Unchanged: 0/0
  9385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9386 ;;      Params:         0       0       0       0       0
  9387 ;;      Locals:         0       0       0       0       0
  9388 ;;      Temps:          0       2       0       0       0
  9389 ;;      Totals:         0       2       0       0       0
  9390 ;;Total ram usage:        2 bytes
  9391 ;; Hardware stack levels used:    1
  9392 ;; Hardware stack levels required when called:    4
  9393 ;; This function calls:
  9394 ;;		_Lcd_Cmd
  9395 ;;		_Lcd_Port
  9396 ;; This function is called by:
  9397 ;;		_main
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           
  9402                           ;psect for function _Lcd_Init
  9403  1B4C                     _Lcd_Init:
  9404  1B4C                     l3580:	
  9405                           ;incstack = 0
  9406                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9407                           
  9408                           
  9409                           ;LCD.c: 15:   Lcd_Port(0x00);
  9410  1B4C  3000               	movlw	0
  9411  1B4D  160A  118A  2000  160A  158A  	fcall	_Lcd_Port
  9412  1B52                     l3582:
  9413                           
  9414                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  9415  1B52  3034               	movlw	52
  9416  1B53  1283               	bcf	3,5	;RP0=0, select bank0
  9417  1B54  1303               	bcf	3,6	;RP1=0, select bank0
  9418  1B55  00A5               	movwf	??_Lcd_Init+1
  9419  1B56  30F1               	movlw	241
  9420  1B57  00A4               	movwf	??_Lcd_Init
  9421  1B58                     u5647:
  9422  1B58  0BA4               	decfsz	??_Lcd_Init,f
  9423  1B59  2B58               	goto	u5647
  9424  1B5A  0BA5               	decfsz	??_Lcd_Init+1,f
  9425  1B5B  2B58               	goto	u5647
  9426  1B5C                     l3584:
  9427                           
  9428                           ;LCD.c: 17:   Lcd_Cmd(0x030);
  9429  1B5C  3030               	movlw	48
  9430  1B5D  160A  158A  2157  160A  158A  	fcall	_Lcd_Cmd
  9431                           
  9432                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9433  1B62  300D               	movlw	13
  9434  1B63  1283               	bcf	3,5	;RP0=0, select bank0
  9435  1B64  1303               	bcf	3,6	;RP1=0, select bank0
  9436  1B65  00A5               	movwf	??_Lcd_Init+1
  9437  1B66  30FB               	movlw	251
  9438  1B67  00A4               	movwf	??_Lcd_Init
  9439  1B68                     u5657:
  9440  1B68  0BA4               	decfsz	??_Lcd_Init,f
  9441  1B69  2B68               	goto	u5657
  9442  1B6A  0BA5               	decfsz	??_Lcd_Init+1,f
  9443  1B6B  2B68               	goto	u5657
  9444  1B6C                     l3586:
  9445                           
  9446                           ;LCD.c: 19:   Lcd_Cmd(0x030);
  9447  1B6C  3030               	movlw	48
  9448  1B6D  160A  158A  2157  160A  158A  	fcall	_Lcd_Cmd
  9449  1B72                     l3588:
  9450                           
  9451                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  9452  1B72  301D               	movlw	29
  9453  1B73  1283               	bcf	3,5	;RP0=0, select bank0
  9454  1B74  1303               	bcf	3,6	;RP1=0, select bank0
  9455  1B75  00A5               	movwf	??_Lcd_Init+1
  9456  1B76  3090               	movlw	144
  9457  1B77  00A4               	movwf	??_Lcd_Init
  9458  1B78                     u5667:
  9459  1B78  0BA4               	decfsz	??_Lcd_Init,f
  9460  1B79  2B78               	goto	u5667
  9461  1B7A  0BA5               	decfsz	??_Lcd_Init+1,f
  9462  1B7B  2B78               	goto	u5667
  9463  1B7C  0000               	nop
  9464                           
  9465                           ;LCD.c: 21:   Lcd_Cmd(0x030);
  9466  1B7D  3030               	movlw	48
  9467  1B7E  160A  158A  2157  160A  158A  	fcall	_Lcd_Cmd
  9468                           
  9469                           ;LCD.c: 22:   Lcd_Cmd(0x038);
  9470  1B83  3038               	movlw	56
  9471  1B84  160A  158A  2157  160A  158A  	fcall	_Lcd_Cmd
  9472                           
  9473                           ;LCD.c: 23:   Lcd_Cmd(0x00C);
  9474  1B89  300C               	movlw	12
  9475  1B8A  160A  158A  2157  160A  158A  	fcall	_Lcd_Cmd
  9476                           
  9477                           ;LCD.c: 24:   Lcd_Cmd(0x001);
  9478  1B8F  3001               	movlw	1
  9479  1B90  160A  158A  2157  160A  158A  	fcall	_Lcd_Cmd
  9480                           
  9481                           ;LCD.c: 25:   Lcd_Cmd(0x006);
  9482  1B95  3006               	movlw	6
  9483  1B96  160A  158A  2157  160A  158A  	fcall	_Lcd_Cmd
  9484  1B9B                     l149:
  9485  1B9B  0008               	return
  9486  1B9C                     __end_of_Lcd_Init:
  9487                           
  9488                           	psect	text31
  9489  1957                     __ptext31:	
  9490 ;; *************** function _Lcd_Cmd *****************
  9491 ;; Defined at:
  9492 ;;		line 73 in file "LCD.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;  a               1    wreg     unsigned char 
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;  a               1    3[BANK0 ] unsigned char 
  9497 ;; Return value:  Size  Location     Type
  9498 ;;                  1    wreg      void 
  9499 ;; Registers used:
  9500 ;;		wreg, status,2, status,0, pclath, cstack
  9501 ;; Tracked objects:
  9502 ;;		On entry : 0/0
  9503 ;;		On exit  : 0/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9506 ;;      Params:         0       0       0       0       0
  9507 ;;      Locals:         0       1       0       0       0
  9508 ;;      Temps:          0       2       0       0       0
  9509 ;;      Totals:         0       3       0       0       0
  9510 ;;Total ram usage:        3 bytes
  9511 ;; Hardware stack levels used:    1
  9512 ;; Hardware stack levels required when called:    3
  9513 ;; This function calls:
  9514 ;;		_Lcd_Port
  9515 ;; This function is called by:
  9516 ;;		_Lcd_Init
  9517 ;;		_Lcd_Set_Cursor
  9518 ;;		_Lcd_Clear
  9519 ;;		_Lcd_Shift_Right
  9520 ;;		_Lcd_Shift_Left
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           
  9525                           ;psect for function _Lcd_Cmd
  9526  1957                     _Lcd_Cmd:
  9527                           
  9528                           ;incstack = 0
  9529                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9530                           ;Lcd_Cmd@a stored from wreg
  9531  1957  1283               	bcf	3,5	;RP0=0, select bank0
  9532  1958  1303               	bcf	3,6	;RP1=0, select bank0
  9533  1959  00A3               	movwf	Lcd_Cmd@a
  9534  195A                     l2854:
  9535                           
  9536                           ;LCD.c: 74:  PORTEbits.RE0 = 0;
  9537  195A  1009               	bcf	9,0	;volatile
  9538  195B                     l2856:
  9539                           
  9540                           ;LCD.c: 75:  Lcd_Port(a);
  9541  195B  0823               	movf	Lcd_Cmd@a,w
  9542  195C  160A  118A  2000  160A  158A  	fcall	_Lcd_Port
  9543  1961                     l2858:
  9544                           
  9545                           ;LCD.c: 76:  PORTEbits.RE2 = 1;
  9546  1961  1283               	bcf	3,5	;RP0=0, select bank0
  9547  1962  1303               	bcf	3,6	;RP1=0, select bank0
  9548  1963  1509               	bsf	9,2	;volatile
  9549  1964                     l2860:
  9550                           
  9551                           ;LCD.c: 77:         _delay((unsigned long)((4)*(8000000/4000.0)));
  9552  1964  300B               	movlw	11
  9553  1965  1283               	bcf	3,5	;RP0=0, select bank0
  9554  1966  1303               	bcf	3,6	;RP1=0, select bank0
  9555  1967  00A2               	movwf	??_Lcd_Cmd+1
  9556  1968  3061               	movlw	97
  9557  1969  00A1               	movwf	??_Lcd_Cmd
  9558  196A                     u5677:
  9559  196A  0BA1               	decfsz	??_Lcd_Cmd,f
  9560  196B  296A               	goto	u5677
  9561  196C  0BA2               	decfsz	??_Lcd_Cmd+1,f
  9562  196D  296A               	goto	u5677
  9563  196E  296F               	nop2
  9564  196F                     l2862:
  9565                           
  9566                           ;LCD.c: 78:         PORTEbits.RE2 = 0;
  9567  196F  1283               	bcf	3,5	;RP0=0, select bank0
  9568  1970  1303               	bcf	3,6	;RP1=0, select bank0
  9569  1971  1109               	bcf	9,2	;volatile
  9570  1972                     l155:
  9571  1972  0008               	return
  9572  1973                     __end_of_Lcd_Cmd:
  9573                           
  9574                           	psect	text32
  9575  1000                     __ptext32:	
  9576 ;; *************** function _Lcd_Port *****************
  9577 ;; Defined at:
  9578 ;;		line 29 in file "LCD.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;  a               1    wreg     unsigned char 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  a               1    0[BANK0 ] unsigned char 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  1    wreg      void 
  9585 ;; Registers used:
  9586 ;;		wreg
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9592 ;;      Params:         0       0       0       0       0
  9593 ;;      Locals:         0       1       0       0       0
  9594 ;;      Temps:          0       0       0       0       0
  9595 ;;      Totals:         0       1       0       0       0
  9596 ;;Total ram usage:        1 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; Hardware stack levels required when called:    2
  9599 ;; This function calls:
  9600 ;;		Nothing
  9601 ;; This function is called by:
  9602 ;;		_Lcd_Init
  9603 ;;		_Lcd_Cmd
  9604 ;;		_Lcd_Write_Char
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608                           
  9609                           ;psect for function _Lcd_Port
  9610  1000                     _Lcd_Port:
  9611                           
  9612                           ;incstack = 0
  9613                           ; Regs used in _Lcd_Port: [wreg]
  9614                           ;Lcd_Port@a stored from wreg
  9615  1000  1283               	bcf	3,5	;RP0=0, select bank0
  9616  1001  1303               	bcf	3,6	;RP1=0, select bank0
  9617  1002  00A0               	movwf	Lcd_Port@a
  9618  1003                     l2388:
  9619                           
  9620                           ;LCD.c: 30:     PORTD = a;
  9621  1003  0820               	movf	Lcd_Port@a,w
  9622  1004  0088               	movwf	8	;volatile
  9623  1005                     l152:
  9624  1005  0008               	return
  9625  1006                     __end_of_Lcd_Port:
  9626                           
  9627                           	psect	text33
  9628  18F0                     __ptext33:	
  9629 ;; *************** function _Config_INTERRUPT *****************
  9630 ;; Defined at:
  9631 ;;		line 212 in file "pseudocodigo_lab3.c"
  9632 ;; Parameters:    Size  Location     Type
  9633 ;;		None
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;		None
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  1    wreg      void 
  9638 ;; Registers used:
  9639 ;;		wreg
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9645 ;;      Params:         0       0       0       0       0
  9646 ;;      Locals:         0       0       0       0       0
  9647 ;;      Temps:          0       0       0       0       0
  9648 ;;      Totals:         0       0       0       0       0
  9649 ;;Total ram usage:        0 bytes
  9650 ;; Hardware stack levels used:    1
  9651 ;; Hardware stack levels required when called:    2
  9652 ;; This function calls:
  9653 ;;		Nothing
  9654 ;; This function is called by:
  9655 ;;		_main
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           
  9660                           ;psect for function _Config_INTERRUPT
  9661  18F0                     _Config_INTERRUPT:
  9662  18F0                     l3574:	
  9663                           ;incstack = 0
  9664                           ; Regs used in _Config_INTERRUPT: [wreg]
  9665                           
  9666                           
  9667                           ;pseudocodigo_lab3.c: 213:     INTCON = 0b11000001;
  9668  18F0  30C1               	movlw	193
  9669  18F1  008B               	movwf	11	;volatile
  9670  18F2                     l3576:
  9671                           
  9672                           ;pseudocodigo_lab3.c: 214:     PIE1bits.ADIE = 1;
  9673  18F2  1683               	bsf	3,5	;RP0=1, select bank1
  9674  18F3  1303               	bcf	3,6	;RP1=0, select bank1
  9675  18F4  170C               	bsf	12,6	;volatile
  9676  18F5                     l3578:
  9677                           
  9678                           ;pseudocodigo_lab3.c: 215:     PIR1bits.ADIF = 1;
  9679  18F5  1283               	bcf	3,5	;RP0=0, select bank0
  9680  18F6  1303               	bcf	3,6	;RP1=0, select bank0
  9681  18F7  170C               	bsf	12,6	;volatile
  9682  18F8                     l120:
  9683  18F8  0008               	return
  9684  18F9                     __end_of_Config_INTERRUPT:
  9685                           
  9686                           	psect	text34
  9687  1973                     __ptext34:	
  9688 ;; *************** function _CONVERSION_ADC *****************
  9689 ;; Defined at:
  9690 ;;		line 152 in file "pseudocodigo_lab3.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;		None
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;		None
  9695 ;; Return value:  Size  Location     Type
  9696 ;;                  1    wreg      void 
  9697 ;; Registers used:
  9698 ;;		wreg, status,2, status,0
  9699 ;; Tracked objects:
  9700 ;;		On entry : 0/0
  9701 ;;		On exit  : 0/0
  9702 ;;		Unchanged: 0/0
  9703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9704 ;;      Params:         0       0       0       0       0
  9705 ;;      Locals:         0       0       0       0       0
  9706 ;;      Temps:          0       0       0       0       0
  9707 ;;      Totals:         0       0       0       0       0
  9708 ;;Total ram usage:        0 bytes
  9709 ;; Hardware stack levels used:    1
  9710 ;; Hardware stack levels required when called:    2
  9711 ;; This function calls:
  9712 ;;		Nothing
  9713 ;; This function is called by:
  9714 ;;		_main
  9715 ;; This function uses a non-reentrant model
  9716 ;;
  9717                           
  9718                           
  9719                           ;psect for function _CONVERSION_ADC
  9720  1973                     _CONVERSION_ADC:
  9721  1973                     l3600:	
  9722                           ;incstack = 0
  9723                           ; Regs used in _CONVERSION_ADC: [wreg+status,2+status,0]
  9724                           
  9725                           
  9726                           ;pseudocodigo_lab3.c: 153:     if (ADC_flag1 == 1 || ADC_flag2 == 1){
  9727  1973  037A               	decf	_ADC_flag1,w
  9728  1974  047B               	iorwf	_ADC_flag1+1,w
  9729  1975  1903               	btfsc	3,2
  9730  1976  2978               	goto	u5571
  9731  1977  2979               	goto	u5570
  9732  1978                     u5571:
  9733  1978  297F               	goto	l3604
  9734  1979                     u5570:
  9735  1979                     l3602:
  9736  1979  0378               	decf	_ADC_flag2,w
  9737  197A  0479               	iorwf	_ADC_flag2+1,w
  9738  197B  1D03               	btfss	3,2
  9739  197C  297E               	goto	u5581
  9740  197D  297F               	goto	u5580
  9741  197E                     u5581:
  9742  197E  2990               	goto	l108
  9743  197F                     u5580:
  9744  197F                     l3604:
  9745                           
  9746                           ;pseudocodigo_lab3.c: 155:         ADC_flag1 = 0;
  9747  197F  01FA               	clrf	_ADC_flag1
  9748  1980  01FB               	clrf	_ADC_flag1+1
  9749                           
  9750                           ;pseudocodigo_lab3.c: 156:         ADC_flag2 = 0;
  9751  1981  01F8               	clrf	_ADC_flag2
  9752  1982  01F9               	clrf	_ADC_flag2+1
  9753  1983                     l3606:
  9754                           
  9755                           ;pseudocodigo_lab3.c: 157:         PORTB = ADC_VALOR_1;
  9756  1983  1683               	bsf	3,5	;RP0=1, select bank1
  9757  1984  1303               	bcf	3,6	;RP1=0, select bank1
  9758  1985  0861               	movf	_ADC_VALOR_1^(0+128),w
  9759  1986  1283               	bcf	3,5	;RP0=0, select bank0
  9760  1987  1303               	bcf	3,6	;RP1=0, select bank0
  9761  1988  0086               	movwf	6	;volatile
  9762  1989                     l3608:
  9763                           
  9764                           ;pseudocodigo_lab3.c: 158:         PORTC = ADC_VALOR_2;
  9765  1989  1683               	bsf	3,5	;RP0=1, select bank1
  9766  198A  1303               	bcf	3,6	;RP1=0, select bank1
  9767  198B  085F               	movf	_ADC_VALOR_2^(0+128),w
  9768  198C  1283               	bcf	3,5	;RP0=0, select bank0
  9769  198D  1303               	bcf	3,6	;RP1=0, select bank0
  9770  198E  0087               	movwf	7	;volatile
  9771  198F                     l3610:
  9772                           
  9773                           ;pseudocodigo_lab3.c: 159:         PIR1bits.ADIF = 1;
  9774  198F  170C               	bsf	12,6	;volatile
  9775  1990                     l108:
  9776  1990  0008               	return
  9777  1991                     __end_of_CONVERSION_ADC:
  9778                           
  9779                           	psect	text35
  9780  1E1C                     __ptext35:	
  9781 ;; *************** function _ISR *****************
  9782 ;; Defined at:
  9783 ;;		line 90 in file "pseudocodigo_lab3.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;		None
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;		None
  9788 ;; Return value:  Size  Location     Type
  9789 ;;                  1    wreg      void 
  9790 ;; Registers used:
  9791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9792 ;; Tracked objects:
  9793 ;;		On entry : 0/0
  9794 ;;		On exit  : 0/0
  9795 ;;		Unchanged: 0/0
  9796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9797 ;;      Params:         0       0       0       0       0
  9798 ;;      Locals:         0       0       0       0       0
  9799 ;;      Temps:          5       0       0       0       0
  9800 ;;      Totals:         5       0       0       0       0
  9801 ;;Total ram usage:        5 bytes
  9802 ;; Hardware stack levels used:    1
  9803 ;; Hardware stack levels required when called:    1
  9804 ;; This function calls:
  9805 ;;		_ADC
  9806 ;;		_ADC_Config
  9807 ;; This function is called by:
  9808 ;;		Interrupt level 1
  9809 ;; This function uses a non-reentrant model
  9810 ;;
  9811                           
  9812                           
  9813                           ;psect for function _ISR
  9814  1E1C                     _ISR:
  9815  1E1C                     i1l3614:
  9816                           
  9817                           ;pseudocodigo_lab3.c: 93:     if (PIR1bits.ADIF) {
  9818  1E1C  1283               	bcf	3,5	;RP0=0, select bank0
  9819  1E1D  1303               	bcf	3,6	;RP1=0, select bank0
  9820  1E1E  1F0C               	btfss	12,6	;volatile
  9821  1E1F  2E21               	goto	u559_21
  9822  1E20  2E22               	goto	u559_20
  9823  1E21                     u559_21:
  9824  1E21  2E7F               	goto	i1l94
  9825  1E22                     u559_20:
  9826  1E22                     i1l3616:
  9827                           
  9828                           ;pseudocodigo_lab3.c: 95:         ADC_Config (0);
  9829  1E22  3000               	movlw	0
  9830  1E23  160A  158A  2688  160A  158A  	fcall	_ADC_Config
  9831  1E28                     i1l3618:
  9832                           
  9833                           ;pseudocodigo_lab3.c: 96:         _delay((unsigned long)((2)*(8000000/4000.0)));
  9834  1E28  3006               	movlw	6
  9835  1E29  00F4               	movwf	??_ISR+1
  9836  1E2A  3030               	movlw	48
  9837  1E2B  00F3               	movwf	??_ISR
  9838  1E2C                     u568_27:
  9839  1E2C  0BF3               	decfsz	??_ISR,f
  9840  1E2D  2E2C               	goto	u568_27
  9841  1E2E  0BF4               	decfsz	??_ISR+1,f
  9842  1E2F  2E2C               	goto	u568_27
  9843  1E30  0000               	nop
  9844  1E31                     i1l3620:
  9845                           
  9846                           ;pseudocodigo_lab3.c: 97:         ADCON0bits.GO = 1;
  9847  1E31  1283               	bcf	3,5	;RP0=0, select bank0
  9848  1E32  1303               	bcf	3,6	;RP1=0, select bank0
  9849  1E33  149F               	bsf	31,1	;volatile
  9850                           
  9851                           ;pseudocodigo_lab3.c: 98:         while (ADCON0bits.GO != 0) {
  9852  1E34  2E4B               	goto	i1l3626
  9853  1E35                     i1l3622:
  9854                           
  9855                           ;pseudocodigo_lab3.c: 99:             ADC_VALOR_1 = ADC(ADRESL, ADRESH);
  9856  1E35  081E               	movf	30,w	;volatile
  9857  1E36  00F3               	movwf	??_ISR
  9858  1E37  0873               	movf	??_ISR,w
  9859  1E38  00F0               	movwf	ADC@ADRESH_
  9860  1E39  1683               	bsf	3,5	;RP0=1, select bank1
  9861  1E3A  1303               	bcf	3,6	;RP1=0, select bank1
  9862  1E3B  081E               	movf	30,w	;volatile
  9863  1E3C  120A  118A  27EE  160A  158A  	fcall	_ADC
  9864  1E41  0871               	movf	?_ADC+1,w
  9865  1E42  1683               	bsf	3,5	;RP0=1, select bank1
  9866  1E43  1303               	bcf	3,6	;RP1=0, select bank1
  9867  1E44  00E2               	movwf	(_ADC_VALOR_1+1)^(0+128)
  9868  1E45  0870               	movf	?_ADC,w
  9869  1E46  00E1               	movwf	_ADC_VALOR_1^(0+128)
  9870  1E47                     i1l3624:
  9871                           
  9872                           ;pseudocodigo_lab3.c: 100:             ADC_flag1 = 1;
  9873  1E47  3001               	movlw	1
  9874  1E48  00FA               	movwf	_ADC_flag1
  9875  1E49  3000               	movlw	0
  9876  1E4A  00FB               	movwf	_ADC_flag1+1
  9877  1E4B                     i1l3626:
  9878                           
  9879                           ;pseudocodigo_lab3.c: 98:         while (ADCON0bits.GO != 0) {
  9880  1E4B  1283               	bcf	3,5	;RP0=0, select bank0
  9881  1E4C  189F               	btfsc	31,1	;volatile
  9882  1E4D  2E4F               	goto	u560_21
  9883  1E4E  2E50               	goto	u560_20
  9884  1E4F                     u560_21:
  9885  1E4F  2E35               	goto	i1l3622
  9886  1E50                     u560_20:
  9887  1E50                     i1l3628:
  9888                           
  9889                           ;pseudocodigo_lab3.c: 104:         ADC_Config (1);
  9890  1E50  3001               	movlw	1
  9891  1E51  160A  158A  2688  160A  158A  	fcall	_ADC_Config
  9892  1E56                     i1l3630:
  9893                           
  9894                           ;pseudocodigo_lab3.c: 105:         _delay((unsigned long)((2)*(8000000/4000.0)));
  9895  1E56  3006               	movlw	6
  9896  1E57  00F4               	movwf	??_ISR+1
  9897  1E58  3030               	movlw	48
  9898  1E59  00F3               	movwf	??_ISR
  9899  1E5A                     u569_27:
  9900  1E5A  0BF3               	decfsz	??_ISR,f
  9901  1E5B  2E5A               	goto	u569_27
  9902  1E5C  0BF4               	decfsz	??_ISR+1,f
  9903  1E5D  2E5A               	goto	u569_27
  9904  1E5E  0000               	nop
  9905  1E5F                     i1l3632:
  9906                           
  9907                           ;pseudocodigo_lab3.c: 106:         ADCON0bits.GO = 1;
  9908  1E5F  1283               	bcf	3,5	;RP0=0, select bank0
  9909  1E60  1303               	bcf	3,6	;RP1=0, select bank0
  9910  1E61  149F               	bsf	31,1	;volatile
  9911                           
  9912                           ;pseudocodigo_lab3.c: 107:         while (ADCON0bits.GO != 0) {
  9913  1E62  2E79               	goto	i1l3638
  9914  1E63                     i1l3634:
  9915                           
  9916                           ;pseudocodigo_lab3.c: 108:             ADC_VALOR_2 = ADC(ADRESL, ADRESH);
  9917  1E63  081E               	movf	30,w	;volatile
  9918  1E64  00F3               	movwf	??_ISR
  9919  1E65  0873               	movf	??_ISR,w
  9920  1E66  00F0               	movwf	ADC@ADRESH_
  9921  1E67  1683               	bsf	3,5	;RP0=1, select bank1
  9922  1E68  1303               	bcf	3,6	;RP1=0, select bank1
  9923  1E69  081E               	movf	30,w	;volatile
  9924  1E6A  120A  118A  27EE  160A  158A  	fcall	_ADC
  9925  1E6F  0871               	movf	?_ADC+1,w
  9926  1E70  1683               	bsf	3,5	;RP0=1, select bank1
  9927  1E71  1303               	bcf	3,6	;RP1=0, select bank1
  9928  1E72  00E0               	movwf	(_ADC_VALOR_2+1)^(0+128)
  9929  1E73  0870               	movf	?_ADC,w
  9930  1E74  00DF               	movwf	_ADC_VALOR_2^(0+128)
  9931  1E75                     i1l3636:
  9932                           
  9933                           ;pseudocodigo_lab3.c: 109:             ADC_flag2 = 1;
  9934  1E75  3001               	movlw	1
  9935  1E76  00F8               	movwf	_ADC_flag2
  9936  1E77  3000               	movlw	0
  9937  1E78  00F9               	movwf	_ADC_flag2+1
  9938  1E79                     i1l3638:
  9939                           
  9940                           ;pseudocodigo_lab3.c: 107:         while (ADCON0bits.GO != 0) {
  9941  1E79  1283               	bcf	3,5	;RP0=0, select bank0
  9942  1E7A  189F               	btfsc	31,1	;volatile
  9943  1E7B  2E7D               	goto	u561_21
  9944  1E7C  2E7E               	goto	u561_20
  9945  1E7D                     u561_21:
  9946  1E7D  2E63               	goto	i1l3634
  9947  1E7E                     u561_20:
  9948  1E7E                     i1l93:
  9949                           
  9950                           ;pseudocodigo_lab3.c: 111:         PIR1bits.ADIF = 0;
  9951  1E7E  130C               	bcf	12,6	;volatile
  9952  1E7F                     i1l94:
  9953  1E7F  0877               	movf	??_ISR+4,w
  9954  1E80  008A               	movwf	10
  9955  1E81  0876               	movf	??_ISR+3,w
  9956  1E82  0084               	movwf	4
  9957  1E83  0E75               	swapf	??_ISR+2,w
  9958  1E84  0083               	movwf	3
  9959  1E85  0EFE               	swapf	btemp,f
  9960  1E86  0E7E               	swapf	btemp,w
  9961  1E87  0009               	retfie
  9962  1E88                     __end_of_ISR:
  9963                           
  9964                           	psect	intentry
  9965  0004                     __pintentry:	
  9966                           ;incstack = 0
  9967                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9968                           
  9969  0004                     interrupt_function:
  9970  007E                     saved_w	set	btemp
  9971  0004  00FE               	movwf	btemp
  9972  0005  0E03               	swapf	3,w
  9973  0006  00F5               	movwf	??_ISR+2
  9974  0007  0804               	movf	4,w
  9975  0008  00F6               	movwf	??_ISR+3
  9976  0009  080A               	movf	10,w
  9977  000A  00F7               	movwf	??_ISR+4
  9978  000B  160A  158A  2E1C   	ljmp	_ISR
  9979                           
  9980                           	psect	text36
  9981  1E88                     __ptext36:	
  9982 ;; *************** function _ADC_Config *****************
  9983 ;; Defined at:
  9984 ;;		line 31 in file "Config_ADC.c"
  9985 ;; Parameters:    Size  Location     Type
  9986 ;;  AN_num          1    wreg     unsigned char 
  9987 ;; Auto vars:     Size  Location     Type
  9988 ;;  AN_num          1    2[COMMON] unsigned char 
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  1    wreg      void 
  9991 ;; Registers used:
  9992 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9998 ;;      Params:         0       0       0       0       0
  9999 ;;      Locals:         1       0       0       0       0
 10000 ;;      Temps:          2       0       0       0       0
 10001 ;;      Totals:         3       0       0       0       0
 10002 ;;Total ram usage:        3 bytes
 10003 ;; Hardware stack levels used:    1
 10004 ;; This function calls:
 10005 ;;		Nothing
 10006 ;; This function is called by:
 10007 ;;		_ISR
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011                           
 10012                           ;psect for function _ADC_Config
 10013  1E88                     _ADC_Config:
 10014                           
 10015                           ;incstack = 0
 10016                           ; Regs used in _ADC_Config: [wreg-fsr0h+status,2+status,0]
 10017                           ;ADC_Config@AN_num stored from wreg
 10018  1E88  00F2               	movwf	ADC_Config@AN_num
 10019  1E89                     i1l3526:
 10020                           
 10021                           ;Config_ADC.c: 33:     switch(AN_num){
 10022  1E89  2F01               	goto	i1l3530
 10023  1E8A                     i1l211:	
 10024                           ;Config_ADC.c: 34:         case 0:
 10025                           
 10026                           
 10027                           ;Config_ADC.c: 35:             ADCON0bits.CHS3 = 0;
 10028  1E8A  1283               	bcf	3,5	;RP0=0, select bank0
 10029  1E8B  1303               	bcf	3,6	;RP1=0, select bank0
 10030  1E8C  129F               	bcf	31,5	;volatile
 10031                           
 10032                           ;Config_ADC.c: 36:             ADCON0bits.CHS2 = 0;
 10033  1E8D  121F               	bcf	31,4	;volatile
 10034                           
 10035                           ;Config_ADC.c: 37:             ADCON0bits.CHS1 = 0;
 10036  1E8E  119F               	bcf	31,3	;volatile
 10037                           
 10038                           ;Config_ADC.c: 38:             ADCON0bits.CHS0 = 0;
 10039  1E8F  111F               	bcf	31,2	;volatile
 10040                           
 10041                           ;Config_ADC.c: 39:             break;
 10042  1E90  2F3B               	goto	i1l3532
 10043  1E91                     i1l213:	
 10044                           ;Config_ADC.c: 40:         case 1:
 10045                           
 10046                           
 10047                           ;Config_ADC.c: 41:             ADCON0bits.CHS3 = 0;
 10048  1E91  1283               	bcf	3,5	;RP0=0, select bank0
 10049  1E92  1303               	bcf	3,6	;RP1=0, select bank0
 10050  1E93  129F               	bcf	31,5	;volatile
 10051                           
 10052                           ;Config_ADC.c: 42:             ADCON0bits.CHS2 = 0;
 10053  1E94  121F               	bcf	31,4	;volatile
 10054                           
 10055                           ;Config_ADC.c: 43:             ADCON0bits.CHS1 = 0;
 10056  1E95  119F               	bcf	31,3	;volatile
 10057                           
 10058                           ;Config_ADC.c: 44:             ADCON0bits.CHS0 = 1;
 10059  1E96  151F               	bsf	31,2	;volatile
 10060                           
 10061                           ;Config_ADC.c: 45:             break;
 10062  1E97  2F3B               	goto	i1l3532
 10063  1E98                     i1l214:	
 10064                           ;Config_ADC.c: 46:         case 2:
 10065                           
 10066                           
 10067                           ;Config_ADC.c: 47:             ADCON0bits.CHS3 = 0;
 10068  1E98  1283               	bcf	3,5	;RP0=0, select bank0
 10069  1E99  1303               	bcf	3,6	;RP1=0, select bank0
 10070  1E9A  129F               	bcf	31,5	;volatile
 10071                           
 10072                           ;Config_ADC.c: 48:             ADCON0bits.CHS2 = 0;
 10073  1E9B  121F               	bcf	31,4	;volatile
 10074                           
 10075                           ;Config_ADC.c: 49:             ADCON0bits.CHS1 = 1;
 10076  1E9C  159F               	bsf	31,3	;volatile
 10077                           
 10078                           ;Config_ADC.c: 50:             ADCON0bits.CHS0 = 0;
 10079  1E9D  111F               	bcf	31,2	;volatile
 10080                           
 10081                           ;Config_ADC.c: 51:             break;
 10082  1E9E  2F3B               	goto	i1l3532
 10083  1E9F                     i1l215:	
 10084                           ;Config_ADC.c: 52:         case 3:
 10085                           
 10086                           
 10087                           ;Config_ADC.c: 53:             ADCON0bits.CHS3 = 0;
 10088  1E9F  1283               	bcf	3,5	;RP0=0, select bank0
 10089  1EA0  1303               	bcf	3,6	;RP1=0, select bank0
 10090  1EA1  129F               	bcf	31,5	;volatile
 10091                           
 10092                           ;Config_ADC.c: 54:             ADCON0bits.CHS2 = 0;
 10093  1EA2  121F               	bcf	31,4	;volatile
 10094                           
 10095                           ;Config_ADC.c: 55:             ADCON0bits.CHS1 = 1;
 10096  1EA3  159F               	bsf	31,3	;volatile
 10097                           
 10098                           ;Config_ADC.c: 56:             ADCON0bits.CHS0 = 1;
 10099  1EA4  151F               	bsf	31,2	;volatile
 10100                           
 10101                           ;Config_ADC.c: 57:             break;
 10102  1EA5  2F3B               	goto	i1l3532
 10103  1EA6                     i1l216:	
 10104                           ;Config_ADC.c: 58:         case 4:
 10105                           
 10106                           
 10107                           ;Config_ADC.c: 59:             ADCON0bits.CHS3 = 0;
 10108  1EA6  1283               	bcf	3,5	;RP0=0, select bank0
 10109  1EA7  1303               	bcf	3,6	;RP1=0, select bank0
 10110  1EA8  129F               	bcf	31,5	;volatile
 10111                           
 10112                           ;Config_ADC.c: 60:             ADCON0bits.CHS2 = 1;
 10113  1EA9  161F               	bsf	31,4	;volatile
 10114                           
 10115                           ;Config_ADC.c: 61:             ADCON0bits.CHS1 = 0;
 10116  1EAA  119F               	bcf	31,3	;volatile
 10117                           
 10118                           ;Config_ADC.c: 62:             ADCON0bits.CHS0 = 0;
 10119  1EAB  111F               	bcf	31,2	;volatile
 10120                           
 10121                           ;Config_ADC.c: 63:             break;
 10122  1EAC  2F3B               	goto	i1l3532
 10123  1EAD                     i1l217:	
 10124                           ;Config_ADC.c: 64:         case 5:
 10125                           
 10126                           
 10127                           ;Config_ADC.c: 65:             ADCON0bits.CHS3 = 0;
 10128  1EAD  1283               	bcf	3,5	;RP0=0, select bank0
 10129  1EAE  1303               	bcf	3,6	;RP1=0, select bank0
 10130  1EAF  129F               	bcf	31,5	;volatile
 10131                           
 10132                           ;Config_ADC.c: 66:             ADCON0bits.CHS2 = 1;
 10133  1EB0  161F               	bsf	31,4	;volatile
 10134                           
 10135                           ;Config_ADC.c: 67:             ADCON0bits.CHS1 = 0;
 10136  1EB1  119F               	bcf	31,3	;volatile
 10137                           
 10138                           ;Config_ADC.c: 68:             ADCON0bits.CHS0 = 1;
 10139  1EB2  151F               	bsf	31,2	;volatile
 10140                           
 10141                           ;Config_ADC.c: 69:             break;
 10142  1EB3  2F3B               	goto	i1l3532
 10143  1EB4                     i1l218:	
 10144                           ;Config_ADC.c: 70:         case 6:
 10145                           
 10146                           
 10147                           ;Config_ADC.c: 71:             ADCON0bits.CHS3 = 0;
 10148  1EB4  1283               	bcf	3,5	;RP0=0, select bank0
 10149  1EB5  1303               	bcf	3,6	;RP1=0, select bank0
 10150  1EB6  129F               	bcf	31,5	;volatile
 10151                           
 10152                           ;Config_ADC.c: 72:             ADCON0bits.CHS2 = 1;
 10153  1EB7  161F               	bsf	31,4	;volatile
 10154                           
 10155                           ;Config_ADC.c: 73:             ADCON0bits.CHS1 = 1;
 10156  1EB8  159F               	bsf	31,3	;volatile
 10157                           
 10158                           ;Config_ADC.c: 74:             ADCON0bits.CHS0 = 0;
 10159  1EB9  111F               	bcf	31,2	;volatile
 10160                           
 10161                           ;Config_ADC.c: 75:             break;
 10162  1EBA  2F3B               	goto	i1l3532
 10163  1EBB                     i1l219:	
 10164                           ;Config_ADC.c: 76:         case 7:
 10165                           
 10166                           
 10167                           ;Config_ADC.c: 77:             ADCON0bits.CHS3 = 0;
 10168  1EBB  1283               	bcf	3,5	;RP0=0, select bank0
 10169  1EBC  1303               	bcf	3,6	;RP1=0, select bank0
 10170  1EBD  129F               	bcf	31,5	;volatile
 10171                           
 10172                           ;Config_ADC.c: 78:             ADCON0bits.CHS2 = 1;
 10173  1EBE  161F               	bsf	31,4	;volatile
 10174                           
 10175                           ;Config_ADC.c: 79:             ADCON0bits.CHS1 = 1;
 10176  1EBF  159F               	bsf	31,3	;volatile
 10177                           
 10178                           ;Config_ADC.c: 80:             ADCON0bits.CHS0 = 1;
 10179  1EC0  151F               	bsf	31,2	;volatile
 10180                           
 10181                           ;Config_ADC.c: 81:             break;
 10182  1EC1  2F3B               	goto	i1l3532
 10183  1EC2                     i1l220:	
 10184                           ;Config_ADC.c: 82:         case 8:
 10185                           
 10186                           
 10187                           ;Config_ADC.c: 83:             ADCON0bits.CHS3 = 1;
 10188  1EC2  1283               	bcf	3,5	;RP0=0, select bank0
 10189  1EC3  1303               	bcf	3,6	;RP1=0, select bank0
 10190  1EC4  169F               	bsf	31,5	;volatile
 10191                           
 10192                           ;Config_ADC.c: 84:             ADCON0bits.CHS2 = 0;
 10193  1EC5  121F               	bcf	31,4	;volatile
 10194                           
 10195                           ;Config_ADC.c: 85:             ADCON0bits.CHS1 = 0;
 10196  1EC6  119F               	bcf	31,3	;volatile
 10197                           
 10198                           ;Config_ADC.c: 86:             ADCON0bits.CHS0 = 0;
 10199  1EC7  111F               	bcf	31,2	;volatile
 10200                           
 10201                           ;Config_ADC.c: 87:             break;
 10202  1EC8  2F3B               	goto	i1l3532
 10203  1EC9                     i1l221:	
 10204                           ;Config_ADC.c: 88:         case 9:
 10205                           
 10206                           
 10207                           ;Config_ADC.c: 89:             ADCON0bits.CHS3 = 1;
 10208  1EC9  1283               	bcf	3,5	;RP0=0, select bank0
 10209  1ECA  1303               	bcf	3,6	;RP1=0, select bank0
 10210  1ECB  169F               	bsf	31,5	;volatile
 10211                           
 10212                           ;Config_ADC.c: 90:             ADCON0bits.CHS2 = 0;
 10213  1ECC  121F               	bcf	31,4	;volatile
 10214                           
 10215                           ;Config_ADC.c: 91:             ADCON0bits.CHS1 = 0;
 10216  1ECD  119F               	bcf	31,3	;volatile
 10217                           
 10218                           ;Config_ADC.c: 92:             ADCON0bits.CHS0 = 1;
 10219  1ECE  151F               	bsf	31,2	;volatile
 10220                           
 10221                           ;Config_ADC.c: 93:             break;
 10222  1ECF  2F3B               	goto	i1l3532
 10223  1ED0                     i1l222:	
 10224                           ;Config_ADC.c: 94:         case 10:
 10225                           
 10226                           
 10227                           ;Config_ADC.c: 95:             ADCON0bits.CHS3 = 1;
 10228  1ED0  1283               	bcf	3,5	;RP0=0, select bank0
 10229  1ED1  1303               	bcf	3,6	;RP1=0, select bank0
 10230  1ED2  169F               	bsf	31,5	;volatile
 10231                           
 10232                           ;Config_ADC.c: 96:             ADCON0bits.CHS2 = 0;
 10233  1ED3  121F               	bcf	31,4	;volatile
 10234                           
 10235                           ;Config_ADC.c: 97:             ADCON0bits.CHS1 = 1;
 10236  1ED4  159F               	bsf	31,3	;volatile
 10237                           
 10238                           ;Config_ADC.c: 98:             ADCON0bits.CHS0 = 0;
 10239  1ED5  111F               	bcf	31,2	;volatile
 10240                           
 10241                           ;Config_ADC.c: 99:             break;
 10242  1ED6  2F3B               	goto	i1l3532
 10243  1ED7                     i1l223:	
 10244                           ;Config_ADC.c: 100:         case 11:
 10245                           
 10246                           
 10247                           ;Config_ADC.c: 101:             ADCON0bits.CHS3 = 1;
 10248  1ED7  1283               	bcf	3,5	;RP0=0, select bank0
 10249  1ED8  1303               	bcf	3,6	;RP1=0, select bank0
 10250  1ED9  169F               	bsf	31,5	;volatile
 10251                           
 10252                           ;Config_ADC.c: 102:             ADCON0bits.CHS2 = 0;
 10253  1EDA  121F               	bcf	31,4	;volatile
 10254                           
 10255                           ;Config_ADC.c: 103:             ADCON0bits.CHS1 = 1;
 10256  1EDB  159F               	bsf	31,3	;volatile
 10257                           
 10258                           ;Config_ADC.c: 104:             ADCON0bits.CHS0 = 1;
 10259  1EDC  151F               	bsf	31,2	;volatile
 10260                           
 10261                           ;Config_ADC.c: 105:             break;
 10262  1EDD  2F3B               	goto	i1l3532
 10263  1EDE                     i1l224:	
 10264                           ;Config_ADC.c: 106:         case 12:
 10265                           
 10266                           
 10267                           ;Config_ADC.c: 107:             ADCON0bits.CHS3 = 1;
 10268  1EDE  1283               	bcf	3,5	;RP0=0, select bank0
 10269  1EDF  1303               	bcf	3,6	;RP1=0, select bank0
 10270  1EE0  169F               	bsf	31,5	;volatile
 10271                           
 10272                           ;Config_ADC.c: 108:             ADCON0bits.CHS2 = 1;
 10273  1EE1  161F               	bsf	31,4	;volatile
 10274                           
 10275                           ;Config_ADC.c: 109:             ADCON0bits.CHS1 = 0;
 10276  1EE2  119F               	bcf	31,3	;volatile
 10277                           
 10278                           ;Config_ADC.c: 110:             ADCON0bits.CHS0 = 0;
 10279  1EE3  111F               	bcf	31,2	;volatile
 10280                           
 10281                           ;Config_ADC.c: 111:             break;
 10282  1EE4  2F3B               	goto	i1l3532
 10283  1EE5                     i1l225:	
 10284                           ;Config_ADC.c: 112:         case 13:
 10285                           
 10286                           
 10287                           ;Config_ADC.c: 113:             ADCON0bits.CHS3 = 1;
 10288  1EE5  1283               	bcf	3,5	;RP0=0, select bank0
 10289  1EE6  1303               	bcf	3,6	;RP1=0, select bank0
 10290  1EE7  169F               	bsf	31,5	;volatile
 10291                           
 10292                           ;Config_ADC.c: 114:             ADCON0bits.CHS2 = 1;
 10293  1EE8  161F               	bsf	31,4	;volatile
 10294                           
 10295                           ;Config_ADC.c: 115:             ADCON0bits.CHS1 = 0;
 10296  1EE9  119F               	bcf	31,3	;volatile
 10297                           
 10298                           ;Config_ADC.c: 116:             ADCON0bits.CHS0 = 1;
 10299  1EEA  151F               	bsf	31,2	;volatile
 10300                           
 10301                           ;Config_ADC.c: 117:             break;
 10302  1EEB  2F3B               	goto	i1l3532
 10303  1EEC                     i1l226:	
 10304                           ;Config_ADC.c: 118:         case 14:
 10305                           
 10306                           
 10307                           ;Config_ADC.c: 119:             ADCON0bits.CHS3 = 1;
 10308  1EEC  1283               	bcf	3,5	;RP0=0, select bank0
 10309  1EED  1303               	bcf	3,6	;RP1=0, select bank0
 10310  1EEE  169F               	bsf	31,5	;volatile
 10311                           
 10312                           ;Config_ADC.c: 120:             ADCON0bits.CHS2 = 1;
 10313  1EEF  161F               	bsf	31,4	;volatile
 10314                           
 10315                           ;Config_ADC.c: 121:             ADCON0bits.CHS1 = 1;
 10316  1EF0  159F               	bsf	31,3	;volatile
 10317                           
 10318                           ;Config_ADC.c: 122:             ADCON0bits.CHS0 = 0;
 10319  1EF1  111F               	bcf	31,2	;volatile
 10320                           
 10321                           ;Config_ADC.c: 123:             break;
 10322  1EF2  2F3B               	goto	i1l3532
 10323  1EF3                     i1l227:	
 10324                           ;Config_ADC.c: 124:         case 15:
 10325                           
 10326                           
 10327                           ;Config_ADC.c: 125:             ADCON0bits.CHS3 = 1;
 10328  1EF3  1283               	bcf	3,5	;RP0=0, select bank0
 10329  1EF4  1303               	bcf	3,6	;RP1=0, select bank0
 10330  1EF5  169F               	bsf	31,5	;volatile
 10331                           
 10332                           ;Config_ADC.c: 126:             ADCON0bits.CHS2 = 1;
 10333  1EF6  161F               	bsf	31,4	;volatile
 10334                           
 10335                           ;Config_ADC.c: 127:             ADCON0bits.CHS1 = 1;
 10336  1EF7  159F               	bsf	31,3	;volatile
 10337                           
 10338                           ;Config_ADC.c: 128:             ADCON0bits.CHS0 = 1;
 10339  1EF8  151F               	bsf	31,2	;volatile
 10340                           
 10341                           ;Config_ADC.c: 129:             break;
 10342  1EF9  2F3B               	goto	i1l3532
 10343  1EFA                     i1l228:	
 10344                           ;Config_ADC.c: 130:         default:
 10345                           
 10346                           
 10347                           ;Config_ADC.c: 131:             ADCON0bits.CHS3 = 0;
 10348  1EFA  1283               	bcf	3,5	;RP0=0, select bank0
 10349  1EFB  1303               	bcf	3,6	;RP1=0, select bank0
 10350  1EFC  129F               	bcf	31,5	;volatile
 10351                           
 10352                           ;Config_ADC.c: 132:             ADCON0bits.CHS2 = 0;
 10353  1EFD  121F               	bcf	31,4	;volatile
 10354                           
 10355                           ;Config_ADC.c: 133:             ADCON0bits.CHS1 = 0;
 10356  1EFE  119F               	bcf	31,3	;volatile
 10357                           
 10358                           ;Config_ADC.c: 134:             ADCON0bits.CHS0 = 0;
 10359  1EFF  111F               	bcf	31,2	;volatile
 10360                           
 10361                           ;Config_ADC.c: 135:             break;
 10362  1F00  2F3B               	goto	i1l3532
 10363  1F01                     i1l3530:
 10364  1F01  0872               	movf	ADC_Config@AN_num,w
 10365  1F02  00F0               	movwf	??_ADC_Config
 10366  1F03  01F1               	clrf	??_ADC_Config+1
 10367                           
 10368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10369                           ; Switch size 1, requested type "simple"
 10370                           ; Number of cases is 1, Range of values is 0 to 0
 10371                           ; switch strategies available:
 10372                           ; Name         Instructions Cycles
 10373                           ; simple_byte            4     3 (average)
 10374                           ; direct_byte           11     8 (fixed)
 10375                           ; jumptable            260     6 (fixed)
 10376                           ;	Chosen strategy is simple_byte
 10377  1F04  0871               	movf	??_ADC_Config+1,w
 10378  1F05  3A00               	xorlw	0	; case 0
 10379  1F06  1903               	skipnz
 10380  1F07  2F09               	goto	i1l3758
 10381  1F08  2EFA               	goto	i1l228
 10382  1F09                     i1l3758:
 10383                           
 10384                           ; Switch size 1, requested type "simple"
 10385                           ; Number of cases is 16, Range of values is 0 to 15
 10386                           ; switch strategies available:
 10387                           ; Name         Instructions Cycles
 10388                           ; simple_byte           49    25 (average)
 10389                           ; direct_byte           56     8 (fixed)
 10390                           ; jumptable            260     6 (fixed)
 10391                           ;	Chosen strategy is simple_byte
 10392  1F09  0870               	movf	??_ADC_Config,w
 10393  1F0A  3A00               	xorlw	0	; case 0
 10394  1F0B  1903               	skipnz
 10395  1F0C  2E8A               	goto	i1l211
 10396  1F0D  3A01               	xorlw	1	; case 1
 10397  1F0E  1903               	skipnz
 10398  1F0F  2E91               	goto	i1l213
 10399  1F10  3A03               	xorlw	3	; case 2
 10400  1F11  1903               	skipnz
 10401  1F12  2E98               	goto	i1l214
 10402  1F13  3A01               	xorlw	1	; case 3
 10403  1F14  1903               	skipnz
 10404  1F15  2E9F               	goto	i1l215
 10405  1F16  3A07               	xorlw	7	; case 4
 10406  1F17  1903               	skipnz
 10407  1F18  2EA6               	goto	i1l216
 10408  1F19  3A01               	xorlw	1	; case 5
 10409  1F1A  1903               	skipnz
 10410  1F1B  2EAD               	goto	i1l217
 10411  1F1C  3A03               	xorlw	3	; case 6
 10412  1F1D  1903               	skipnz
 10413  1F1E  2EB4               	goto	i1l218
 10414  1F1F  3A01               	xorlw	1	; case 7
 10415  1F20  1903               	skipnz
 10416  1F21  2EBB               	goto	i1l219
 10417  1F22  3A0F               	xorlw	15	; case 8
 10418  1F23  1903               	skipnz
 10419  1F24  2EC2               	goto	i1l220
 10420  1F25  3A01               	xorlw	1	; case 9
 10421  1F26  1903               	skipnz
 10422  1F27  2EC9               	goto	i1l221
 10423  1F28  3A03               	xorlw	3	; case 10
 10424  1F29  1903               	skipnz
 10425  1F2A  2ED0               	goto	i1l222
 10426  1F2B  3A01               	xorlw	1	; case 11
 10427  1F2C  1903               	skipnz
 10428  1F2D  2ED7               	goto	i1l223
 10429  1F2E  3A07               	xorlw	7	; case 12
 10430  1F2F  1903               	skipnz
 10431  1F30  2EDE               	goto	i1l224
 10432  1F31  3A01               	xorlw	1	; case 13
 10433  1F32  1903               	skipnz
 10434  1F33  2EE5               	goto	i1l225
 10435  1F34  3A03               	xorlw	3	; case 14
 10436  1F35  1903               	skipnz
 10437  1F36  2EEC               	goto	i1l226
 10438  1F37  3A01               	xorlw	1	; case 15
 10439  1F38  1903               	skipnz
 10440  1F39  2EF3               	goto	i1l227
 10441  1F3A  2EFA               	goto	i1l228
 10442  1F3B                     i1l3532:
 10443                           
 10444                           ;Config_ADC.c: 137:     ADCON1 = 0b00000000;
 10445  1F3B  1683               	bsf	3,5	;RP0=1, select bank1
 10446  1F3C  1303               	bcf	3,6	;RP1=0, select bank1
 10447  1F3D  019F               	clrf	31	;volatile
 10448  1F3E                     i1l3534:
 10449                           
 10450                           ;Config_ADC.c: 138:     ADCON0bits.ADCS1 = 0;
 10451  1F3E  1283               	bcf	3,5	;RP0=0, select bank0
 10452  1F3F  1303               	bcf	3,6	;RP1=0, select bank0
 10453  1F40  139F               	bcf	31,7	;volatile
 10454  1F41                     i1l3536:
 10455                           
 10456                           ;Config_ADC.c: 139:     ADCON0bits.ADCS0 = 0;
 10457  1F41  131F               	bcf	31,6	;volatile
 10458  1F42                     i1l3538:
 10459                           
 10460                           ;Config_ADC.c: 140:     ADCON0bits.ADON = 1;
 10461  1F42  141F               	bsf	31,0	;volatile
 10462  1F43                     i1l229:
 10463  1F43  0008               	return
 10464  1F44                     __end_of_ADC_Config:
 10465                           
 10466                           	psect	text37
 10467  07EE                     __ptext37:	
 10468 ;; *************** function _ADC *****************
 10469 ;; Defined at:
 10470 ;;		line 11 in file "Config_ADC.c"
 10471 ;; Parameters:    Size  Location     Type
 10472 ;;  ADRESL_         1    wreg     unsigned char 
 10473 ;;  ADRESH_         1    0[COMMON] unsigned char 
 10474 ;; Auto vars:     Size  Location     Type
 10475 ;;  ADRESL_         1    0[COMMON] unsigned char 
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  2    0[COMMON] int 
 10478 ;; Registers used:
 10479 ;;		wreg
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/0
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10485 ;;      Params:         3       0       0       0       0
 10486 ;;      Locals:         0       0       0       0       0
 10487 ;;      Temps:          0       0       0       0       0
 10488 ;;      Totals:         3       0       0       0       0
 10489 ;;Total ram usage:        3 bytes
 10490 ;; Hardware stack levels used:    1
 10491 ;; This function calls:
 10492 ;;		Nothing
 10493 ;; This function is called by:
 10494 ;;		_ISR
 10495 ;; This function uses a non-reentrant model
 10496 ;;
 10497                           
 10498                           
 10499                           ;psect for function _ADC
 10500  07EE                     _ADC:
 10501  07EE                     i1l3544:	
 10502                           ;incstack = 0
 10503                           ; Regs used in _ADC: [wreg]
 10504                           
 10505                           
 10506                           ;Config_ADC.c: 12:     VAL = (ADRESL << 8) | ADRESH;
 10507  07EE  1683               	bsf	3,5	;RP0=1, select bank1
 10508  07EF  1303               	bcf	3,6	;RP1=0, select bank1
 10509  07F0  081E               	movf	30,w	;volatile
 10510  07F1  00D8               	movwf	(_VAL+1)^(0+128)
 10511  07F2  1283               	bcf	3,5	;RP0=0, select bank0
 10512  07F3  1303               	bcf	3,6	;RP1=0, select bank0
 10513  07F4  081E               	movf	30,w	;volatile
 10514  07F5  1683               	bsf	3,5	;RP0=1, select bank1
 10515  07F6  1303               	bcf	3,6	;RP1=0, select bank1
 10516  07F7  00D7               	movwf	_VAL^(0+128)
 10517                           
 10518                           ;Config_ADC.c: 13:     return VAL;
 10519  07F8  0858               	movf	(_VAL+1)^(0+128),w
 10520  07F9  00F1               	movwf	?_ADC+1
 10521  07FA  0857               	movf	_VAL^(0+128),w
 10522  07FB  00F0               	movwf	?_ADC
 10523  07FC                     i1l198:
 10524  07FC  0008               	return
 10525  07FD                     __end_of_ADC:
 10526  007E                     btemp	set	126	;btemp
 10527  007E                     wtemp0	set	126
 10528                           
 10529                           	psect	config
 10530                           
 10531                           ;Config register CONFIG1 @ 0x2007
 10532                           ;	Oscillator Selection bits
 10533                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 10534                           ;	Watchdog Timer Enable bit
 10535                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10536                           ;	Power-up Timer Enable bit
 10537                           ;	PWRTE = OFF, PWRT disabled
 10538                           ;	RE3/MCLR pin function select bit
 10539                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10540                           ;	Code Protection bit
 10541                           ;	CP = OFF, Program memory code protection is disabled
 10542                           ;	Data Code Protection bit
 10543                           ;	CPD = OFF, Data memory code protection is disabled
 10544                           ;	Brown Out Reset Selection bits
 10545                           ;	BOREN = ON, BOR enabled
 10546                           ;	Internal External Switchover bit
 10547                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10548                           ;	Fail-Safe Clock Monitor Enabled bit
 10549                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10550                           ;	Low Voltage Programming Enable bit
 10551                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10552                           ;	In-Circuit Debugger Mode bit
 10553                           ;	DEBUG = 0x1, unprogrammed default
 10554  2007                     	org	8199
 10555  2007  23D2               	dw	9170
 10556                           
 10557                           ;Config register CONFIG2 @ 0x2008
 10558                           ;	Brown-out Reset Selection bit
 10559                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10560                           ;	Flash Program Memory Self Write Enable bits
 10561                           ;	WRT = OFF, Write protection off
 10562  2008                     	org	8200
 10563  2008  3FFF               	dw	16383
 10564                           
 10565                           	psect	text8_split_1
 10566  002D                     u5230:
 10567  002D                     l3348:
 10568  002D  1683               	bsf	3,5	;RP0=1, select bank1
 10569  002E  1303               	bcf	3,6	;RP1=0, select bank1
 10570  002F  084C               	movf	(sprintf@fval+3)^(0+128),w
 10571  0030  1283               	bcf	3,5	;RP0=0, select bank0
 10572  0031  1303               	bcf	3,6	;RP1=0, select bank0
 10573  0032  00A3               	movwf	___fleq@ff1+3
 10574  0033  1683               	bsf	3,5	;RP0=1, select bank1
 10575  0034  1303               	bcf	3,6	;RP1=0, select bank1
 10576  0035  084B               	movf	(sprintf@fval+2)^(0+128),w
 10577  0036  1283               	bcf	3,5	;RP0=0, select bank0
 10578  0037  1303               	bcf	3,6	;RP1=0, select bank0
 10579  0038  00A2               	movwf	___fleq@ff1+2
 10580  0039  1683               	bsf	3,5	;RP0=1, select bank1
 10581  003A  1303               	bcf	3,6	;RP1=0, select bank1
 10582  003B  084A               	movf	(sprintf@fval+1)^(0+128),w
 10583  003C  1283               	bcf	3,5	;RP0=0, select bank0
 10584  003D  1303               	bcf	3,6	;RP1=0, select bank0
 10585  003E  00A1               	movwf	___fleq@ff1+1
 10586  003F  1683               	bsf	3,5	;RP0=1, select bank1
 10587  0040  1303               	bcf	3,6	;RP1=0, select bank1
 10588  0041  0849               	movf	sprintf@fval^(0+128),w
 10589  0042  1283               	bcf	3,5	;RP0=0, select bank0
 10590  0043  1303               	bcf	3,6	;RP1=0, select bank0
 10591  0044  00A0               	movwf	___fleq@ff1
 10592  0045  3000               	movlw	0
 10593  0046  00A7               	movwf	___fleq@ff2+3
 10594  0047  3000               	movlw	0
 10595  0048  00A6               	movwf	___fleq@ff2+2
 10596  0049  3000               	movlw	0
 10597  004A  00A5               	movwf	___fleq@ff2+1
 10598  004B  3000               	movlw	0
 10599  004C  00A4               	movwf	___fleq@ff2
 10600  004D  160A  158A  239C  120A  118A  	fcall	___fleq
 10601  0052  1803               	btfsc	3,0
 10602  0053  2855               	goto	u5241
 10603  0054  2856               	goto	u5240
 10604  0055                     u5241:
 10605  0055  2938               	goto	l3368
 10606  0056                     u5240:
 10607  0056                     l3350:
 10608  0056  1683               	bsf	3,5	;RP0=1, select bank1
 10609  0057  1303               	bcf	3,6	;RP1=0, select bank1
 10610  0058  084C               	movf	(sprintf@fval+3)^(0+128),w
 10611  0059  1283               	bcf	3,5	;RP0=0, select bank0
 10612  005A  1303               	bcf	3,6	;RP1=0, select bank0
 10613  005B  00E0               	movwf	___fltol@f1+3
 10614  005C  1683               	bsf	3,5	;RP0=1, select bank1
 10615  005D  1303               	bcf	3,6	;RP1=0, select bank1
 10616  005E  084B               	movf	(sprintf@fval+2)^(0+128),w
 10617  005F  1283               	bcf	3,5	;RP0=0, select bank0
 10618  0060  1303               	bcf	3,6	;RP1=0, select bank0
 10619  0061  00DF               	movwf	___fltol@f1+2
 10620  0062  1683               	bsf	3,5	;RP0=1, select bank1
 10621  0063  1303               	bcf	3,6	;RP1=0, select bank1
 10622  0064  084A               	movf	(sprintf@fval+1)^(0+128),w
 10623  0065  1283               	bcf	3,5	;RP0=0, select bank0
 10624  0066  1303               	bcf	3,6	;RP1=0, select bank0
 10625  0067  00DE               	movwf	___fltol@f1+1
 10626  0068  1683               	bsf	3,5	;RP0=1, select bank1
 10627  0069  1303               	bcf	3,6	;RP1=0, select bank1
 10628  006A  0849               	movf	sprintf@fval^(0+128),w
 10629  006B  1283               	bcf	3,5	;RP0=0, select bank0
 10630  006C  1303               	bcf	3,6	;RP1=0, select bank0
 10631  006D  00DD               	movwf	___fltol@f1
 10632  006E  120A  158A  2002  120A  118A  	fcall	___fltol
 10633  0073  1283               	bcf	3,5	;RP0=0, select bank0
 10634  0074  1303               	bcf	3,6	;RP1=0, select bank0
 10635  0075  0860               	movf	?___fltol+3,w
 10636  0076  045F               	iorwf	?___fltol+2,w
 10637  0077  045E               	iorwf	?___fltol+1,w
 10638  0078  045D               	iorwf	?___fltol,w
 10639  0079  1D03               	skipz
 10640  007A  287C               	goto	u5251
 10641  007B  287D               	goto	u5250
 10642  007C                     u5251:
 10643  007C  2938               	goto	l3368
 10644  007D                     u5250:
 10645  007D                     l3352:
 10646  007D  1683               	bsf	3,5	;RP0=1, select bank1
 10647  007E  1303               	bcf	3,6	;RP1=0, select bank1
 10648  007F  0848               	movf	(sprintf@eexp+1)^(0+128),w
 10649  0080  3A80               	xorlw	128
 10650  0081  00FF               	movwf	btemp+1
 10651  0082  3080               	movlw	128
 10652  0083  027F               	subwf	btemp+1,w
 10653  0084  1D03               	skipz
 10654  0085  2888               	goto	u5265
 10655  0086  3002               	movlw	2
 10656  0087  0247               	subwf	sprintf@eexp^(0+128),w
 10657  0088                     u5265:
 10658  0088  1C03               	skipc
 10659  0089  288B               	goto	u5261
 10660  008A  288C               	goto	u5260
 10661  008B                     u5261:
 10662  008B  2938               	goto	l3368
 10663  008C                     u5260:
 10664  008C                     l3354:
 10665                           
 10666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10667  008C  1683               	bsf	3,5	;RP0=1, select bank1
 10668  008D  1303               	bcf	3,6	;RP1=0, select bank1
 10669  008E  0846               	movf	(sprintf@tmpval+3)^(0+128),w
 10670  008F  1283               	bcf	3,5	;RP0=0, select bank0
 10671  0090  1303               	bcf	3,6	;RP1=0, select bank0
 10672  0091  00A3               	movwf	___flge@ff1+3
 10673  0092  1683               	bsf	3,5	;RP0=1, select bank1
 10674  0093  1303               	bcf	3,6	;RP1=0, select bank1
 10675  0094  0845               	movf	(sprintf@tmpval+2)^(0+128),w
 10676  0095  1283               	bcf	3,5	;RP0=0, select bank0
 10677  0096  1303               	bcf	3,6	;RP1=0, select bank0
 10678  0097  00A2               	movwf	___flge@ff1+2
 10679  0098  1683               	bsf	3,5	;RP0=1, select bank1
 10680  0099  1303               	bcf	3,6	;RP1=0, select bank1
 10681  009A  0844               	movf	(sprintf@tmpval+1)^(0+128),w
 10682  009B  1283               	bcf	3,5	;RP0=0, select bank0
 10683  009C  1303               	bcf	3,6	;RP1=0, select bank0
 10684  009D  00A1               	movwf	___flge@ff1+1
 10685  009E  1683               	bsf	3,5	;RP0=1, select bank1
 10686  009F  1303               	bcf	3,6	;RP1=0, select bank1
 10687  00A0  0843               	movf	sprintf@tmpval^(0+128),w
 10688  00A1  1283               	bcf	3,5	;RP0=0, select bank0
 10689  00A2  1303               	bcf	3,6	;RP1=0, select bank0
 10690  00A3  00A0               	movwf	___flge@ff1
 10691  00A4  3040               	movlw	64
 10692  00A5  00A7               	movwf	___flge@ff2+3
 10693  00A6  3089               	movlw	137
 10694  00A7  00A6               	movwf	___flge@ff2+2
 10695  00A8  3070               	movlw	112
 10696  00A9  00A5               	movwf	___flge@ff2+1
 10697  00AA  305F               	movlw	95
 10698  00AB  00A4               	movwf	___flge@ff2
 10699  00AC  160A  118A  2013  120A  118A  	fcall	___flge
 10700  00B1  1803               	btfsc	3,0
 10701  00B2  28B4               	goto	u5271
 10702  00B3  28B5               	goto	u5270
 10703  00B4                     u5271:
 10704  00B4  28BE               	goto	l3358
 10705  00B5                     u5270:
 10706  00B5                     l3356:
 10707                           
 10708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10709  00B5  30F7               	movlw	247
 10710  00B6  1683               	bsf	3,5	;RP0=1, select bank1
 10711  00B7  1303               	bcf	3,6	;RP1=0, select bank1
 10712  00B8  07C7               	addwf	sprintf@eexp^(0+128),f
 10713  00B9  1803               	skipnc
 10714  00BA  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
 10715  00BB  30FF               	movlw	255
 10716  00BC  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
 10717                           
 10718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10719  00BD  28C6               	goto	l3360
 10720  00BE                     l3358:
 10721                           
 10722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10723  00BE  30F8               	movlw	248
 10724  00BF  1683               	bsf	3,5	;RP0=1, select bank1
 10725  00C0  1303               	bcf	3,6	;RP1=0, select bank1
 10726  00C1  07C7               	addwf	sprintf@eexp^(0+128),f
 10727  00C2  1803               	skipnc
 10728  00C3  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
 10729  00C4  30FF               	movlw	255
 10730  00C5  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
 10731  00C6                     l3360:
 10732                           
 10733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10734  00C6  0847               	movf	sprintf@eexp^(0+128),w
 10735  00C7  120A  158A  249D  120A  118A  	fcall	_scale
 10736  00CC  1283               	bcf	3,5	;RP0=0, select bank0
 10737  00CD  1303               	bcf	3,6	;RP1=0, select bank0
 10738  00CE  084D               	movf	?_scale+3,w
 10739  00CF  1683               	bsf	3,5	;RP0=1, select bank1
 10740  00D0  1303               	bcf	3,6	;RP1=0, select bank1
 10741  00D1  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
 10742  00D2  1283               	bcf	3,5	;RP0=0, select bank0
 10743  00D3  1303               	bcf	3,6	;RP1=0, select bank0
 10744  00D4  084C               	movf	?_scale+2,w
 10745  00D5  1683               	bsf	3,5	;RP0=1, select bank1
 10746  00D6  1303               	bcf	3,6	;RP1=0, select bank1
 10747  00D7  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
 10748  00D8  1283               	bcf	3,5	;RP0=0, select bank0
 10749  00D9  1303               	bcf	3,6	;RP1=0, select bank0
 10750  00DA  084B               	movf	?_scale+1,w
 10751  00DB  1683               	bsf	3,5	;RP0=1, select bank1
 10752  00DC  1303               	bcf	3,6	;RP1=0, select bank1
 10753  00DD  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
 10754  00DE  1283               	bcf	3,5	;RP0=0, select bank0
 10755  00DF  1303               	bcf	3,6	;RP1=0, select bank0
 10756  00E0  084A               	movf	?_scale,w
 10757  00E1  1683               	bsf	3,5	;RP0=1, select bank1
 10758  00E2  1303               	bcf	3,6	;RP1=0, select bank1
 10759  00E3  00C3               	movwf	sprintf@tmpval^(0+128)
 10760  00E4                     l3362:
 10761  00E4  084C               	movf	(sprintf@fval+3)^(0+128),w
 10762  00E5  1283               	bcf	3,5	;RP0=0, select bank0
 10763  00E6  1303               	bcf	3,6	;RP1=0, select bank0
 10764  00E7  00A3               	movwf	__div_to_l_@f1+3
 10765  00E8  1683               	bsf	3,5	;RP0=1, select bank1
 10766  00E9  1303               	bcf	3,6	;RP1=0, select bank1
 10767  00EA  084B               	movf	(sprintf@fval+2)^(0+128),w
 10768  00EB  1283               	bcf	3,5	;RP0=0, select bank0
 10769  00EC  1303               	bcf	3,6	;RP1=0, select bank0
 10770  00ED  00A2               	movwf	__div_to_l_@f1+2
 10771  00EE  1683               	bsf	3,5	;RP0=1, select bank1
 10772  00EF  1303               	bcf	3,6	;RP1=0, select bank1
 10773  00F0  084A               	movf	(sprintf@fval+1)^(0+128),w
 10774  00F1  1283               	bcf	3,5	;RP0=0, select bank0
 10775  00F2  1303               	bcf	3,6	;RP1=0, select bank0
 10776  00F3  00A1               	movwf	__div_to_l_@f1+1
 10777  00F4  1683               	bsf	3,5	;RP0=1, select bank1
 10778  00F5  1303               	bcf	3,6	;RP1=0, select bank1
 10779  00F6  0849               	movf	sprintf@fval^(0+128),w
 10780  00F7  1283               	bcf	3,5	;RP0=0, select bank0
 10781  00F8  1303               	bcf	3,6	;RP1=0, select bank0
 10782  00F9  00A0               	movwf	__div_to_l_@f1
 10783  00FA  1683               	bsf	3,5	;RP0=1, select bank1
 10784  00FB  1303               	bcf	3,6	;RP1=0, select bank1
 10785  00FC  0846               	movf	(sprintf@tmpval+3)^(0+128),w
 10786  00FD  1283               	bcf	3,5	;RP0=0, select bank0
 10787  00FE  1303               	bcf	3,6	;RP1=0, select bank0
 10788  00FF  00A7               	movwf	__div_to_l_@f2+3
 10789  0100  1683               	bsf	3,5	;RP0=1, select bank1
 10790  0101  1303               	bcf	3,6	;RP1=0, select bank1
 10791  0102  0845               	movf	(sprintf@tmpval+2)^(0+128),w
 10792  0103  1283               	bcf	3,5	;RP0=0, select bank0
 10793  0104  1303               	bcf	3,6	;RP1=0, select bank0
 10794  0105  00A6               	movwf	__div_to_l_@f2+2
 10795  0106  1683               	bsf	3,5	;RP0=1, select bank1
 10796  0107  1303               	bcf	3,6	;RP1=0, select bank1
 10797  0108  0844               	movf	(sprintf@tmpval+1)^(0+128),w
 10798  0109  1283               	bcf	3,5	;RP0=0, select bank0
 10799  010A  1303               	bcf	3,6	;RP1=0, select bank0
 10800  010B  00A5               	movwf	__div_to_l_@f2+1
 10801  010C  1683               	bsf	3,5	;RP0=1, select bank1
 10802  010D  1303               	bcf	3,6	;RP1=0, select bank1
 10803  010E  0843               	movf	sprintf@tmpval^(0+128),w
 10804  010F  1283               	bcf	3,5	;RP0=0, select bank0
 10805  0110  1303               	bcf	3,6	;RP1=0, select bank0
 10806  0111  00A4               	movwf	__div_to_l_@f2
 10807  0112  120A  158A  207E  120A  118A  	fcall	__div_to_l_
 10808  0117  1283               	bcf	3,5	;RP0=0, select bank0
 10809  0118  1303               	bcf	3,6	;RP1=0, select bank0
 10810  0119  0823               	movf	?__div_to_l_+3,w
 10811  011A  1683               	bsf	3,5	;RP0=1, select bank1
 10812  011B  1303               	bcf	3,6	;RP1=0, select bank1
 10813  011C  00BE               	movwf	(sprintf@val+3)^(0+128)
 10814  011D  1283               	bcf	3,5	;RP0=0, select bank0
 10815  011E  1303               	bcf	3,6	;RP1=0, select bank0
 10816  011F  0822               	movf	?__div_to_l_+2,w
 10817  0120  1683               	bsf	3,5	;RP0=1, select bank1
 10818  0121  1303               	bcf	3,6	;RP1=0, select bank1
 10819  0122  00BD               	movwf	(sprintf@val+2)^(0+128)
 10820  0123  1283               	bcf	3,5	;RP0=0, select bank0
 10821  0124  1303               	bcf	3,6	;RP1=0, select bank0
 10822  0125  0821               	movf	?__div_to_l_+1,w
 10823  0126  1683               	bsf	3,5	;RP0=1, select bank1
 10824  0127  1303               	bcf	3,6	;RP1=0, select bank1
 10825  0128  00BC               	movwf	(sprintf@val+1)^(0+128)
 10826  0129  1283               	bcf	3,5	;RP0=0, select bank0
 10827  012A  1303               	bcf	3,6	;RP1=0, select bank0
 10828  012B  0820               	movf	?__div_to_l_,w
 10829  012C  1683               	bsf	3,5	;RP0=1, select bank1
 10830  012D  1303               	bcf	3,6	;RP1=0, select bank1
 10831  012E  00BB               	movwf	sprintf@val^(0+128)
 10832  012F                     l3366:
 10833                           
 10834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10835  012F  3000               	movlw	0
 10836  0130  00CC               	movwf	(sprintf@fval+3)^(0+128)
 10837  0131  3000               	movlw	0
 10838  0132  00CB               	movwf	(sprintf@fval+2)^(0+128)
 10839  0133  3000               	movlw	0
 10840  0134  00CA               	movwf	(sprintf@fval+1)^(0+128)
 10841  0135  3000               	movlw	0
 10842  0136  00C9               	movwf	sprintf@fval^(0+128)
 10843                           
 10844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10845  0137  29BA               	goto	l3374
 10846  0138                     l3368:
 10847                           
 10848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10849  0138  1683               	bsf	3,5	;RP0=1, select bank1
 10850  0139  1303               	bcf	3,6	;RP1=0, select bank1
 10851  013A  084C               	movf	(sprintf@fval+3)^(0+128),w
 10852  013B  1283               	bcf	3,5	;RP0=0, select bank0
 10853  013C  1303               	bcf	3,6	;RP1=0, select bank0
 10854  013D  00E0               	movwf	___fltol@f1+3
 10855  013E  1683               	bsf	3,5	;RP0=1, select bank1
 10856  013F  1303               	bcf	3,6	;RP1=0, select bank1
 10857  0140  084B               	movf	(sprintf@fval+2)^(0+128),w
 10858  0141  1283               	bcf	3,5	;RP0=0, select bank0
 10859  0142  1303               	bcf	3,6	;RP1=0, select bank0
 10860  0143  00DF               	movwf	___fltol@f1+2
 10861  0144  1683               	bsf	3,5	;RP0=1, select bank1
 10862  0145  1303               	bcf	3,6	;RP1=0, select bank1
 10863  0146  084A               	movf	(sprintf@fval+1)^(0+128),w
 10864  0147  1283               	bcf	3,5	;RP0=0, select bank0
 10865  0148  1303               	bcf	3,6	;RP1=0, select bank0
 10866  0149  00DE               	movwf	___fltol@f1+1
 10867  014A  1683               	bsf	3,5	;RP0=1, select bank1
 10868  014B  1303               	bcf	3,6	;RP1=0, select bank1
 10869  014C  0849               	movf	sprintf@fval^(0+128),w
 10870  014D  1283               	bcf	3,5	;RP0=0, select bank0
 10871  014E  1303               	bcf	3,6	;RP1=0, select bank0
 10872  014F  00DD               	movwf	___fltol@f1
 10873  0150  120A  158A  2002  120A  118A  	fcall	___fltol
 10874  0155  1283               	bcf	3,5	;RP0=0, select bank0
 10875  0156  1303               	bcf	3,6	;RP1=0, select bank0
 10876  0157  0860               	movf	?___fltol+3,w
 10877  0158  1683               	bsf	3,5	;RP0=1, select bank1
 10878  0159  1303               	bcf	3,6	;RP1=0, select bank1
 10879  015A  00BE               	movwf	(sprintf@val+3)^(0+128)
 10880  015B  1283               	bcf	3,5	;RP0=0, select bank0
 10881  015C  1303               	bcf	3,6	;RP1=0, select bank0
 10882  015D  085F               	movf	?___fltol+2,w
 10883  015E  1683               	bsf	3,5	;RP0=1, select bank1
 10884  015F  1303               	bcf	3,6	;RP1=0, select bank1
 10885  0160  00BD               	movwf	(sprintf@val+2)^(0+128)
 10886  0161  1283               	bcf	3,5	;RP0=0, select bank0
 10887  0162  1303               	bcf	3,6	;RP1=0, select bank0
 10888  0163  085E               	movf	?___fltol+1,w
 10889  0164  1683               	bsf	3,5	;RP0=1, select bank1
 10890  0165  1303               	bcf	3,6	;RP1=0, select bank1
 10891  0166  00BC               	movwf	(sprintf@val+1)^(0+128)
 10892  0167  1283               	bcf	3,5	;RP0=0, select bank0
 10893  0168  1303               	bcf	3,6	;RP1=0, select bank0
 10894  0169  085D               	movf	?___fltol,w
 10895  016A  1683               	bsf	3,5	;RP0=1, select bank1
 10896  016B  1303               	bcf	3,6	;RP1=0, select bank1
 10897  016C  00BB               	movwf	sprintf@val^(0+128)
 10898  016D                     l3370:
 10899                           
 10900                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10901  016D  083E               	movf	(sprintf@val+3)^(0+128),w
 10902  016E  1283               	bcf	3,5	;RP0=0, select bank0
 10903  016F  1303               	bcf	3,6	;RP1=0, select bank0
 10904  0170  00A3               	movwf	___xxtofl@val+3
 10905  0171  1683               	bsf	3,5	;RP0=1, select bank1
 10906  0172  1303               	bcf	3,6	;RP1=0, select bank1
 10907  0173  083D               	movf	(sprintf@val+2)^(0+128),w
 10908  0174  1283               	bcf	3,5	;RP0=0, select bank0
 10909  0175  1303               	bcf	3,6	;RP1=0, select bank0
 10910  0176  00A2               	movwf	___xxtofl@val+2
 10911  0177  1683               	bsf	3,5	;RP0=1, select bank1
 10912  0178  1303               	bcf	3,6	;RP1=0, select bank1
 10913  0179  083C               	movf	(sprintf@val+1)^(0+128),w
 10914  017A  1283               	bcf	3,5	;RP0=0, select bank0
 10915  017B  1303               	bcf	3,6	;RP1=0, select bank0
 10916  017C  00A1               	movwf	___xxtofl@val+1
 10917  017D  1683               	bsf	3,5	;RP0=1, select bank1
 10918  017E  1303               	bcf	3,6	;RP1=0, select bank1
 10919  017F  083B               	movf	sprintf@val^(0+128),w
 10920  0180  1283               	bcf	3,5	;RP0=0, select bank0
 10921  0181  1303               	bcf	3,6	;RP1=0, select bank0
 10922  0182  00A0               	movwf	___xxtofl@val
 10923  0183  3000               	movlw	0
 10924  0184  160A  158A  2744  120A  118A  	fcall	___xxtofl
 10925  0189  1283               	bcf	3,5	;RP0=0, select bank0
 10926  018A  1303               	bcf	3,6	;RP1=0, select bank0
 10927  018B  0823               	movf	?___xxtofl+3,w
 10928  018C  1683               	bsf	3,5	;RP0=1, select bank1
 10929  018D  1303               	bcf	3,6	;RP1=0, select bank1
 10930  018E  00A7               	movwf	(___flsub@a+3)^(0+128)
 10931  018F  1283               	bcf	3,5	;RP0=0, select bank0
 10932  0190  1303               	bcf	3,6	;RP1=0, select bank0
 10933  0191  0822               	movf	?___xxtofl+2,w
 10934  0192  1683               	bsf	3,5	;RP0=1, select bank1
 10935  0193  1303               	bcf	3,6	;RP1=0, select bank1
 10936  0194  00A6               	movwf	(___flsub@a+2)^(0+128)
 10937  0195  1283               	bcf	3,5	;RP0=0, select bank0
 10938  0196  1303               	bcf	3,6	;RP1=0, select bank0
 10939  0197  0821               	movf	?___xxtofl+1,w
 10940  0198  1683               	bsf	3,5	;RP0=1, select bank1
 10941  0199  1303               	bcf	3,6	;RP1=0, select bank1
 10942  019A  00A5               	movwf	(___flsub@a+1)^(0+128)
 10943  019B  1283               	bcf	3,5	;RP0=0, select bank0
 10944  019C  1303               	bcf	3,6	;RP1=0, select bank0
 10945  019D  0820               	movf	?___xxtofl,w
 10946  019E  1683               	bsf	3,5	;RP0=1, select bank1
 10947  019F  1303               	bcf	3,6	;RP1=0, select bank1
 10948  01A0  00A4               	movwf	___flsub@a^(0+128)
 10949  01A1  084C               	movf	(sprintf@fval+3)^(0+128),w
 10950  01A2  00AB               	movwf	(___flsub@b+3)^(0+128)
 10951  01A3  084B               	movf	(sprintf@fval+2)^(0+128),w
 10952  01A4  00AA               	movwf	(___flsub@b+2)^(0+128)
 10953  01A5  084A               	movf	(sprintf@fval+1)^(0+128),w
 10954  01A6  00A9               	movwf	(___flsub@b+1)^(0+128)
 10955  01A7  0849               	movf	sprintf@fval^(0+128),w
 10956  01A8  00A8               	movwf	___flsub@b^(0+128)
 10957  01A9  160A  158A  23EC  120A  118A  	fcall	___flsub
 10958  01AE  1683               	bsf	3,5	;RP0=1, select bank1
 10959  01AF  1303               	bcf	3,6	;RP1=0, select bank1
 10960  01B0  0827               	movf	(?___flsub+3)^(0+128),w
 10961  01B1  00CC               	movwf	(sprintf@fval+3)^(0+128)
 10962  01B2  0826               	movf	(?___flsub+2)^(0+128),w
 10963  01B3  00CB               	movwf	(sprintf@fval+2)^(0+128)
 10964  01B4  0825               	movf	(?___flsub+1)^(0+128),w
 10965  01B5  00CA               	movwf	(sprintf@fval+1)^(0+128)
 10966  01B6  0824               	movf	?___flsub^(0+128),w
 10967  01B7  00C9               	movwf	sprintf@fval^(0+128)
 10968  01B8                     l3372:
 10969                           
 10970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10971  01B8  01C7               	clrf	sprintf@eexp^(0+128)
 10972  01B9  01C8               	clrf	(sprintf@eexp+1)^(0+128)
 10973  01BA                     l3374:
 10974                           
 10975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10976  01BA  01D0               	clrf	sprintf@c^(0+128)
 10977  01BB  0AD0               	incf	sprintf@c^(0+128),f
 10978  01BC                     l3380:
 10979                           
 10980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10981  01BC  0850               	movf	sprintf@c^(0+128),w
 10982  01BD  00B1               	movwf	??_sprintf^(0+128)
 10983  01BE  3001               	movlw	1
 10984  01BF                     u5285:
 10985  01BF  1003               	clrc
 10986  01C0  0DB1               	rlf	??_sprintf^(0+128),f
 10987  01C1  3EFF               	addlw	-1
 10988  01C2  1D03               	skipz
 10989  01C3  29BF               	goto	u5285
 10990  01C4  1003               	clrc
 10991  01C5  0D31               	rlf	??_sprintf^(0+128),w
 10992  01C6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10993  01C7  0084               	movwf	4
 10994  01C8  160A  158A  200A  120A  118A  	fcall	stringdir
 10995  01CD  00B2               	movwf	(??_sprintf+1)^(0+128)
 10996  01CE  160A  158A  200A  120A  118A  	fcall	stringdir
 10997  01D3  00B3               	movwf	((??_sprintf+1)^(0+128)+1)
 10998  01D4  160A  158A  200A  120A  118A  	fcall	stringdir
 10999  01D9  00B4               	movwf	((??_sprintf+1)^(0+128)+2)
 11000  01DA  160A  158A  200A  120A  118A  	fcall	stringdir
 11001  01DF  00B5               	movwf	((??_sprintf+1)^(0+128)+3)
 11002  01E0  0835               	movf	(??_sprintf+4)^(0+128),w
 11003  01E1  023E               	subwf	(sprintf@val+3)^(0+128),w
 11004  01E2  1D03               	skipz
 11005  01E3  29EE               	goto	u5295
 11006  01E4  0834               	movf	(??_sprintf+3)^(0+128),w
 11007  01E5  023D               	subwf	(sprintf@val+2)^(0+128),w
 11008  01E6  1D03               	skipz
 11009  01E7  29EE               	goto	u5295
 11010  01E8  0833               	movf	(??_sprintf+2)^(0+128),w
 11011  01E9  023C               	subwf	(sprintf@val+1)^(0+128),w
 11012  01EA  1D03               	skipz
 11013  01EB  29EE               	goto	u5295
 11014  01EC  0832               	movf	(??_sprintf+1)^(0+128),w
 11015  01ED  023B               	subwf	sprintf@val^(0+128),w
 11016  01EE                     u5295:
 11017  01EE  1803               	skipnc
 11018  01EF  29F1               	goto	u5291
 11019  01F0  29F2               	goto	u5290
 11020  01F1                     u5291:
 11021  01F1  29F3               	goto	l3384
 11022  01F2                     u5290:
 11023  01F2  29FD               	goto	l3386
 11024  01F3                     l3384:
 11025  01F3  3001               	movlw	1
 11026  01F4  00B1               	movwf	??_sprintf^(0+128)
 11027  01F5  0831               	movf	??_sprintf^(0+128),w
 11028  01F6  07D0               	addwf	sprintf@c^(0+128),f
 11029  01F7  300A               	movlw	10
 11030  01F8  0650               	xorwf	sprintf@c^(0+128),w
 11031  01F9  1D03               	btfss	3,2
 11032  01FA  29FC               	goto	u5301
 11033  01FB  29FD               	goto	u5300
 11034  01FC                     u5301:
 11035  01FC  29BC               	goto	l3380
 11036  01FD                     u5300:
 11037  01FD                     l3386:
 11038                           
 11039                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 11040  01FD  0850               	movf	sprintf@c^(0+128),w
 11041  01FE  074E               	addwf	sprintf@prec^(0+128),w
 11042  01FF  00B1               	movwf	??_sprintf^(0+128)
 11043  0200  084F               	movf	(sprintf@prec+1)^(0+128),w
 11044  0201  1803               	skipnc
 11045  0202  0A4F               	incf	(sprintf@prec+1)^(0+128),w
 11046  0203  00B2               	movwf	(??_sprintf^(0+128)+1)
 11047  0204  0847               	movf	sprintf@eexp^(0+128),w
 11048  0205  0731               	addwf	??_sprintf^(0+128),w
 11049  0206  00B3               	movwf	(??_sprintf+2)^(0+128)
 11050  0207  0848               	movf	(sprintf@eexp+1)^(0+128),w
 11051  0208  1803               	skipnc
 11052  0209  0A48               	incf	(sprintf@eexp+1)^(0+128),w
 11053  020A  0732               	addwf	(??_sprintf+1)^(0+128),w
 11054  020B  00B4               	movwf	(??_sprintf+3)^(0+128)
 11055  020C  0833               	movf	(??_sprintf+2)^(0+128),w
 11056  020D  02C1               	subwf	sprintf@width^(0+128),f
 11057  020E  0834               	movf	(??_sprintf+3)^(0+128),w
 11058  020F  1C03               	skipc
 11059  0210  03C2               	decf	(sprintf@width+1)^(0+128),f
 11060  0211  02C2               	subwf	(sprintf@width+1)^(0+128),f
 11061                           
 11062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 11063  0212  084E               	movf	sprintf@prec^(0+128),w
 11064  0213  044F               	iorwf	(sprintf@prec+1)^(0+128),w
 11065  0214  1903               	btfsc	3,2
 11066  0215  2A17               	goto	u5311
 11067  0216  2A18               	goto	u5310
 11068  0217                     u5311:
 11069  0217  2A1E               	goto	l3390
 11070  0218                     u5310:
 11071  0218                     l3388:
 11072                           
 11073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 11074  0218  30FF               	movlw	255
 11075  0219  07C1               	addwf	sprintf@width^(0+128),f
 11076  021A  1803               	skipnc
 11077  021B  0AC2               	incf	(sprintf@width+1)^(0+128),f
 11078  021C  30FF               	movlw	255
 11079  021D  07C2               	addwf	(sprintf@width+1)^(0+128),f
 11080  021E                     l3390:
 11081                           
 11082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 11083  021E  3003               	movlw	3
 11084  021F  053F               	andwf	sprintf@flag^(0+128),w
 11085  0220  00B1               	movwf	??_sprintf^(0+128)
 11086  0221  3000               	movlw	0
 11087  0222  0540               	andwf	(sprintf@flag+1)^(0+128),w
 11088  0223  00B2               	movwf	(??_sprintf+1)^(0+128)
 11089  0224  0831               	movf	??_sprintf^(0+128),w
 11090  0225  0432               	iorwf	(??_sprintf^(0+128)+1),w
 11091  0226  1903               	btfsc	3,2
 11092  0227  2A29               	goto	u5321
 11093  0228  2A2A               	goto	u5320
 11094  0229                     u5321:
 11095  0229  2A3F               	goto	l3400
 11096  022A                     u5320:
 11097  022A                     l3392:
 11098                           
 11099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 11100  022A  30FF               	movlw	255
 11101  022B  07C1               	addwf	sprintf@width^(0+128),f
 11102  022C  1803               	skipnc
 11103  022D  0AC2               	incf	(sprintf@width+1)^(0+128),f
 11104  022E  30FF               	movlw	255
 11105  022F  07C2               	addwf	(sprintf@width+1)^(0+128),f
 11106  0230  2A3F               	goto	l3400
 11107  0231                     l3394:
 11108                           
 11109                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 11110  0231  3020               	movlw	32
 11111  0232  1683               	bsf	3,5	;RP0=1, select bank1
 11112  0233  1303               	bcf	3,6	;RP1=0, select bank1
 11113  0234  00B1               	movwf	??_sprintf^(0+128)
 11114  0235  084D               	movf	sprintf@sp^(0+128),w
 11115  0236  0084               	movwf	4
 11116  0237  0831               	movf	??_sprintf^(0+128),w
 11117  0238  1783               	bsf	3,7	;select IRP bank2
 11118  0239  0080               	movwf	0
 11119  023A                     l3396:
 11120  023A  3001               	movlw	1
 11121  023B  00B1               	movwf	??_sprintf^(0+128)
 11122  023C  0831               	movf	??_sprintf^(0+128),w
 11123  023D  07CD               	addwf	sprintf@sp^(0+128),f
 11124  023E  2A2A               	goto	l3392
 11125  023F                     l3400:
 11126                           
 11127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 11128  023F  0842               	movf	(sprintf@width+1)^(0+128),w
 11129  0240  3A80               	xorlw	128
 11130  0241  00FF               	movwf	btemp+1
 11131  0242  3080               	movlw	128
 11132  0243  027F               	subwf	btemp+1,w
 11133  0244  1D03               	skipz
 11134  0245  2A48               	goto	u5335
 11135  0246  3001               	movlw	1
 11136  0247  0241               	subwf	sprintf@width^(0+128),w
 11137  0248                     u5335:
 11138  0248  1803               	skipnc
 11139  0249  2A4B               	goto	u5331
 11140  024A  2A4C               	goto	u5330
 11141  024B                     u5331:
 11142  024B  2A31               	goto	l3394
 11143  024C                     u5330:
 11144  024C                     l3402:
 11145                           
 11146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 11147  024C  3003               	movlw	3
 11148  024D  1683               	bsf	3,5	;RP0=1, select bank1
 11149  024E  1303               	bcf	3,6	;RP1=0, select bank1
 11150  024F  053F               	andwf	sprintf@flag^(0+128),w
 11151  0250  00B1               	movwf	??_sprintf^(0+128)
 11152  0251  3000               	movlw	0
 11153  0252  0540               	andwf	(sprintf@flag+1)^(0+128),w
 11154  0253  00B2               	movwf	(??_sprintf+1)^(0+128)
 11155  0254  0831               	movf	??_sprintf^(0+128),w
 11156  0255  0432               	iorwf	(??_sprintf^(0+128)+1),w
 11157  0256  1903               	btfsc	3,2
 11158  0257  2A59               	goto	u5341
 11159  0258  2A5A               	goto	u5340
 11160  0259                     u5341:
 11161  0259  2B0C               	goto	l391
 11162  025A                     u5340:
 11163  025A                     l3404:
 11164                           
 11165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 11166  025A  302D               	movlw	45
 11167  025B  00B1               	movwf	??_sprintf^(0+128)
 11168  025C  084D               	movf	sprintf@sp^(0+128),w
 11169  025D  0084               	movwf	4
 11170  025E  0831               	movf	??_sprintf^(0+128),w
 11171  025F  1783               	bsf	3,7	;select IRP bank2
 11172  0260  0080               	movwf	0
 11173  0261                     l3406:
 11174  0261  3001               	movlw	1
 11175  0262  00B1               	movwf	??_sprintf^(0+128)
 11176  0263  0831               	movf	??_sprintf^(0+128),w
 11177  0264  07CD               	addwf	sprintf@sp^(0+128),f
 11178  0265  2B0C               	goto	l391
 11179  0266                     l3408:
 11180                           
 11181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 11182  0266  0850               	movf	sprintf@c^(0+128),w
 11183  0267  00B1               	movwf	??_sprintf^(0+128)
 11184  0268  3001               	movlw	1
 11185  0269                     u5355:
 11186  0269  1003               	clrc
 11187  026A  0DB1               	rlf	??_sprintf^(0+128),f
 11188  026B  3EFF               	addlw	-1
 11189  026C  1D03               	skipz
 11190  026D  2A69               	goto	u5355
 11191  026E  1003               	clrc
 11192  026F  0D31               	rlf	??_sprintf^(0+128),w
 11193  0270  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11194  0271  0084               	movwf	4
 11195  0272  160A  158A  200A  120A  118A  	fcall	stringdir
 11196  0277  1283               	bcf	3,5	;RP0=0, select bank0
 11197  0278  1303               	bcf	3,6	;RP1=0, select bank0
 11198  0279  00A0               	movwf	___lldiv@divisor
 11199  027A  160A  158A  200A  120A  118A  	fcall	stringdir
 11200  027F  00A1               	movwf	___lldiv@divisor+1
 11201  0280  160A  158A  200A  120A  118A  	fcall	stringdir
 11202  0285  00A2               	movwf	___lldiv@divisor+2
 11203  0286  160A  158A  200A  120A  118A  	fcall	stringdir
 11204  028B  00A3               	movwf	___lldiv@divisor+3
 11205  028C  1683               	bsf	3,5	;RP0=1, select bank1
 11206  028D  1303               	bcf	3,6	;RP1=0, select bank1
 11207  028E  083E               	movf	(sprintf@val+3)^(0+128),w
 11208  028F  1283               	bcf	3,5	;RP0=0, select bank0
 11209  0290  1303               	bcf	3,6	;RP1=0, select bank0
 11210  0291  00A7               	movwf	___lldiv@dividend+3
 11211  0292  1683               	bsf	3,5	;RP0=1, select bank1
 11212  0293  1303               	bcf	3,6	;RP1=0, select bank1
 11213  0294  083D               	movf	(sprintf@val+2)^(0+128),w
 11214  0295  1283               	bcf	3,5	;RP0=0, select bank0
 11215  0296  1303               	bcf	3,6	;RP1=0, select bank0
 11216  0297  00A6               	movwf	___lldiv@dividend+2
 11217  0298  1683               	bsf	3,5	;RP0=1, select bank1
 11218  0299  1303               	bcf	3,6	;RP1=0, select bank1
 11219  029A  083C               	movf	(sprintf@val+1)^(0+128),w
 11220  029B  1283               	bcf	3,5	;RP0=0, select bank0
 11221  029C  1303               	bcf	3,6	;RP1=0, select bank0
 11222  029D  00A5               	movwf	___lldiv@dividend+1
 11223  029E  1683               	bsf	3,5	;RP0=1, select bank1
 11224  029F  1303               	bcf	3,6	;RP1=0, select bank1
 11225  02A0  083B               	movf	sprintf@val^(0+128),w
 11226  02A1  1283               	bcf	3,5	;RP0=0, select bank0
 11227  02A2  1303               	bcf	3,6	;RP1=0, select bank0
 11228  02A3  00A4               	movwf	___lldiv@dividend
 11229  02A4  160A  158A  254B  120A  118A  	fcall	___lldiv
 11230  02A9  1283               	bcf	3,5	;RP0=0, select bank0
 11231  02AA  1303               	bcf	3,6	;RP1=0, select bank0
 11232  02AB  0823               	movf	?___lldiv+3,w
 11233  02AC  1683               	bsf	3,5	;RP0=1, select bank1
 11234  02AD  1303               	bcf	3,6	;RP1=0, select bank1
 11235  02AE  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
 11236  02AF  1283               	bcf	3,5	;RP0=0, select bank0
 11237  02B0  1303               	bcf	3,6	;RP1=0, select bank0
 11238  02B1  0822               	movf	?___lldiv+2,w
 11239  02B2  1683               	bsf	3,5	;RP0=1, select bank1
 11240  02B3  1303               	bcf	3,6	;RP1=0, select bank1
 11241  02B4  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
 11242  02B5  1283               	bcf	3,5	;RP0=0, select bank0
 11243  02B6  1303               	bcf	3,6	;RP1=0, select bank0
 11244  02B7  0821               	movf	?___lldiv+1,w
 11245  02B8  1683               	bsf	3,5	;RP0=1, select bank1
 11246  02B9  1303               	bcf	3,6	;RP1=0, select bank1
 11247  02BA  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
 11248  02BB  1283               	bcf	3,5	;RP0=0, select bank0
 11249  02BC  1303               	bcf	3,6	;RP1=0, select bank0
 11250  02BD  0820               	movf	?___lldiv,w
 11251  02BE  1683               	bsf	3,5	;RP0=1, select bank1
 11252  02BF  1303               	bcf	3,6	;RP1=0, select bank1
 11253  02C0  00C3               	movwf	sprintf@tmpval^(0+128)
 11254  02C1                     l3410:
 11255                           
 11256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 11257  02C1  3000               	movlw	0
 11258  02C2  1283               	bcf	3,5	;RP0=0, select bank0
 11259  02C3  1303               	bcf	3,6	;RP1=0, select bank0
 11260  02C4  00A3               	movwf	___llmod@divisor+3
 11261  02C5  3000               	movlw	0
 11262  02C6  00A2               	movwf	___llmod@divisor+2
 11263  02C7  3000               	movlw	0
 11264  02C8  00A1               	movwf	___llmod@divisor+1
 11265  02C9  300A               	movlw	10
 11266  02CA  00A0               	movwf	___llmod@divisor
 11267  02CB  1683               	bsf	3,5	;RP0=1, select bank1
 11268  02CC  1303               	bcf	3,6	;RP1=0, select bank1
 11269  02CD  0846               	movf	(sprintf@tmpval+3)^(0+128),w
 11270  02CE  1283               	bcf	3,5	;RP0=0, select bank0
 11271  02CF  1303               	bcf	3,6	;RP1=0, select bank0
 11272  02D0  00A7               	movwf	___llmod@dividend+3
 11273  02D1  1683               	bsf	3,5	;RP0=1, select bank1
 11274  02D2  1303               	bcf	3,6	;RP1=0, select bank1
 11275  02D3  0845               	movf	(sprintf@tmpval+2)^(0+128),w
 11276  02D4  1283               	bcf	3,5	;RP0=0, select bank0
 11277  02D5  1303               	bcf	3,6	;RP1=0, select bank0
 11278  02D6  00A6               	movwf	___llmod@dividend+2
 11279  02D7  1683               	bsf	3,5	;RP0=1, select bank1
 11280  02D8  1303               	bcf	3,6	;RP1=0, select bank1
 11281  02D9  0844               	movf	(sprintf@tmpval+1)^(0+128),w
 11282  02DA  1283               	bcf	3,5	;RP0=0, select bank0
 11283  02DB  1303               	bcf	3,6	;RP1=0, select bank0
 11284  02DC  00A5               	movwf	___llmod@dividend+1
 11285  02DD  1683               	bsf	3,5	;RP0=1, select bank1
 11286  02DE  1303               	bcf	3,6	;RP1=0, select bank1
 11287  02DF  0843               	movf	sprintf@tmpval^(0+128),w
 11288  02E0  1283               	bcf	3,5	;RP0=0, select bank0
 11289  02E1  1303               	bcf	3,6	;RP1=0, select bank0
 11290  02E2  00A4               	movwf	___llmod@dividend
 11291  02E3  160A  158A  243C  120A  118A  	fcall	___llmod
 11292  02E8  1283               	bcf	3,5	;RP0=0, select bank0
 11293  02E9  1303               	bcf	3,6	;RP1=0, select bank0
 11294  02EA  0823               	movf	?___llmod+3,w
 11295  02EB  1683               	bsf	3,5	;RP0=1, select bank1
 11296  02EC  1303               	bcf	3,6	;RP1=0, select bank1
 11297  02ED  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
 11298  02EE  1283               	bcf	3,5	;RP0=0, select bank0
 11299  02EF  1303               	bcf	3,6	;RP1=0, select bank0
 11300  02F0  0822               	movf	?___llmod+2,w
 11301  02F1  1683               	bsf	3,5	;RP0=1, select bank1
 11302  02F2  1303               	bcf	3,6	;RP1=0, select bank1
 11303  02F3  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
 11304  02F4  1283               	bcf	3,5	;RP0=0, select bank0
 11305  02F5  1303               	bcf	3,6	;RP1=0, select bank0
 11306  02F6  0821               	movf	?___llmod+1,w
 11307  02F7  1683               	bsf	3,5	;RP0=1, select bank1
 11308  02F8  1303               	bcf	3,6	;RP1=0, select bank1
 11309  02F9  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
 11310  02FA  1283               	bcf	3,5	;RP0=0, select bank0
 11311  02FB  1303               	bcf	3,6	;RP1=0, select bank0
 11312  02FC  0820               	movf	?___llmod,w
 11313  02FD  1683               	bsf	3,5	;RP0=1, select bank1
 11314  02FE  1303               	bcf	3,6	;RP1=0, select bank1
 11315  02FF  00C3               	movwf	sprintf@tmpval^(0+128)
 11316  0300                     l3412:
 11317                           
 11318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 11319  0300  0843               	movf	sprintf@tmpval^(0+128),w
 11320  0301  3E30               	addlw	48
 11321  0302  00B1               	movwf	??_sprintf^(0+128)
 11322  0303  084D               	movf	sprintf@sp^(0+128),w
 11323  0304  0084               	movwf	4
 11324  0305  0831               	movf	??_sprintf^(0+128),w
 11325  0306  1783               	bsf	3,7	;select IRP bank2
 11326  0307  0080               	movwf	0
 11327  0308  3001               	movlw	1
 11328  0309  00B1               	movwf	??_sprintf^(0+128)
 11329  030A  0831               	movf	??_sprintf^(0+128),w
 11330  030B  07CD               	addwf	sprintf@sp^(0+128),f
 11331  030C                     l391:	
 11332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 11333                           
 11334                           
 11335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 11336  030C  3001               	movlw	1
 11337  030D  02D0               	subwf	sprintf@c^(0+128),f
 11338  030E  0A50               	incf	sprintf@c^(0+128),w
 11339  030F  1D03               	btfss	3,2
 11340  0310  2B12               	goto	u5361
 11341  0311  2B13               	goto	u5360
 11342  0312                     u5361:
 11343  0312  2A66               	goto	l3408
 11344  0313                     u5360:
 11345  0313  2B27               	goto	l3420
 11346  0314                     l3414:
 11347                           
 11348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 11349  0314  3030               	movlw	48
 11350  0315  1683               	bsf	3,5	;RP0=1, select bank1
 11351  0316  1303               	bcf	3,6	;RP1=0, select bank1
 11352  0317  00B1               	movwf	??_sprintf^(0+128)
 11353  0318  084D               	movf	sprintf@sp^(0+128),w
 11354  0319  0084               	movwf	4
 11355  031A  0831               	movf	??_sprintf^(0+128),w
 11356  031B  1783               	bsf	3,7	;select IRP bank2
 11357  031C  0080               	movwf	0
 11358  031D                     l3416:
 11359  031D  3001               	movlw	1
 11360  031E  00B1               	movwf	??_sprintf^(0+128)
 11361  031F  0831               	movf	??_sprintf^(0+128),w
 11362  0320  07CD               	addwf	sprintf@sp^(0+128),f
 11363  0321                     l3418:
 11364                           
 11365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 11366  0321  30FF               	movlw	255
 11367  0322  07C7               	addwf	sprintf@eexp^(0+128),f
 11368  0323  1803               	skipnc
 11369  0324  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
 11370  0325  30FF               	movlw	255
 11371  0326  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
 11372  0327                     l3420:
 11373                           
 11374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 11375  0327  0848               	movf	(sprintf@eexp+1)^(0+128),w
 11376  0328  3A80               	xorlw	128
 11377  0329  00FF               	movwf	btemp+1
 11378  032A  3080               	movlw	128
 11379  032B  027F               	subwf	btemp+1,w
 11380  032C  1D03               	skipz
 11381  032D  2B30               	goto	u5375
 11382  032E  3001               	movlw	1
 11383  032F  0247               	subwf	sprintf@eexp^(0+128),w
 11384  0330                     u5375:
 11385  0330  1803               	skipnc
 11386  0331  2B33               	goto	u5371
 11387  0332  2B34               	goto	u5370
 11388  0333                     u5371:
 11389  0333  2B14               	goto	l3414
 11390  0334                     u5370:
 11391  0334                     l3422:
 11392                           
 11393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11394  0334  1683               	bsf	3,5	;RP0=1, select bank1
 11395  0335  1303               	bcf	3,6	;RP1=0, select bank1
 11396  0336  084F               	movf	(sprintf@prec+1)^(0+128),w
 11397  0337  3A80               	xorlw	128
 11398  0338  00FF               	movwf	btemp+1
 11399  0339  3080               	movlw	128
 11400  033A  027F               	subwf	btemp+1,w
 11401  033B  1D03               	skipz
 11402  033C  2B3F               	goto	u5385
 11403  033D  3009               	movlw	9
 11404  033E  024E               	subwf	sprintf@prec^(0+128),w
 11405  033F                     u5385:
 11406  033F  1C03               	skipc
 11407  0340  2B42               	goto	u5381
 11408  0341  2B43               	goto	u5380
 11409  0342                     u5381:
 11410  0342  2B4A               	goto	l3426
 11411  0343                     u5380:
 11412  0343                     l3424:
 11413                           
 11414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 11415  0343  3008               	movlw	8
 11416  0344  1683               	bsf	3,5	;RP0=1, select bank1
 11417  0345  1303               	bcf	3,6	;RP1=0, select bank1
 11418  0346  00B1               	movwf	??_sprintf^(0+128)
 11419  0347  0831               	movf	??_sprintf^(0+128),w
 11420  0348  00D0               	movwf	sprintf@c^(0+128)
 11421  0349  2B50               	goto	l398
 11422  034A                     l3426:
 11423                           
 11424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 11425  034A  1683               	bsf	3,5	;RP0=1, select bank1
 11426  034B  1303               	bcf	3,6	;RP1=0, select bank1
 11427  034C  084E               	movf	sprintf@prec^(0+128),w
 11428  034D  00B1               	movwf	??_sprintf^(0+128)
 11429  034E  0831               	movf	??_sprintf^(0+128),w
 11430  034F  00D0               	movwf	sprintf@c^(0+128)
 11431  0350                     l398:
 11432                           
 11433                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 11434  0350  0850               	movf	sprintf@c^(0+128),w
 11435  0351  00B1               	movwf	??_sprintf^(0+128)
 11436  0352  01B2               	clrf	(??_sprintf^(0+128)+1)
 11437  0353  0831               	movf	??_sprintf^(0+128),w
 11438  0354  02CE               	subwf	sprintf@prec^(0+128),f
 11439  0355  0832               	movf	(??_sprintf+1)^(0+128),w
 11440  0356  1C03               	skipc
 11441  0357  03CF               	decf	(sprintf@prec+1)^(0+128),f
 11442  0358  02CF               	subwf	(sprintf@prec+1)^(0+128),f
 11443  0359                     l3428:
 11444                           
 11445                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 11446  0359  0850               	movf	sprintf@c^(0+128),w
 11447  035A  1903               	btfsc	3,2
 11448  035B  2B5D               	goto	u5391
 11449  035C  2B5E               	goto	u5390
 11450  035D                     u5391:
 11451  035D  2B69               	goto	l3434
 11452  035E                     u5390:
 11453  035E                     l3430:
 11454                           
 11455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 11456  035E  302E               	movlw	46
 11457  035F  00B1               	movwf	??_sprintf^(0+128)
 11458  0360  084D               	movf	sprintf@sp^(0+128),w
 11459  0361  0084               	movwf	4
 11460  0362  0831               	movf	??_sprintf^(0+128),w
 11461  0363  1783               	bsf	3,7	;select IRP bank2
 11462  0364  0080               	movwf	0
 11463  0365                     l3432:
 11464  0365  3001               	movlw	1
 11465  0366  00B1               	movwf	??_sprintf^(0+128)
 11466  0367  0831               	movf	??_sprintf^(0+128),w
 11467  0368  07CD               	addwf	sprintf@sp^(0+128),f
 11468  0369                     l3434:
 11469                           
 11470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11471  0369  0850               	movf	sprintf@c^(0+128),w
 11472  036A  120A  158A  249D  120A  118A  	fcall	_scale
 11473  036F  1283               	bcf	3,5	;RP0=0, select bank0
 11474  0370  1303               	bcf	3,6	;RP1=0, select bank0
 11475  0371  084D               	movf	?_scale+3,w
 11476  0372  1683               	bsf	3,5	;RP0=1, select bank1
 11477  0373  1303               	bcf	3,6	;RP1=0, select bank1
 11478  0374  00B9               	movwf	(_sprintf$1070+3)^(0+128)
 11479  0375  1283               	bcf	3,5	;RP0=0, select bank0
 11480  0376  1303               	bcf	3,6	;RP1=0, select bank0
 11481  0377  084C               	movf	?_scale+2,w
 11482  0378  1683               	bsf	3,5	;RP0=1, select bank1
 11483  0379  1303               	bcf	3,6	;RP1=0, select bank1
 11484  037A  00B8               	movwf	(_sprintf$1070+2)^(0+128)
 11485  037B  1283               	bcf	3,5	;RP0=0, select bank0
 11486  037C  1303               	bcf	3,6	;RP1=0, select bank0
 11487  037D  084B               	movf	?_scale+1,w
 11488  037E  1683               	bsf	3,5	;RP0=1, select bank1
 11489  037F  1303               	bcf	3,6	;RP1=0, select bank1
 11490  0380  00B7               	movwf	(_sprintf$1070+1)^(0+128)
 11491  0381  1283               	bcf	3,5	;RP0=0, select bank0
 11492  0382  1303               	bcf	3,6	;RP1=0, select bank0
 11493  0383  084A               	movf	?_scale,w
 11494  0384  1683               	bsf	3,5	;RP0=1, select bank1
 11495  0385  1303               	bcf	3,6	;RP1=0, select bank1
 11496  0386  00B6               	movwf	_sprintf$1070^(0+128)
 11497  0387                     l3436:
 11498                           
 11499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11500  0387  0839               	movf	(_sprintf$1070+3)^(0+128),w
 11501  0388  1283               	bcf	3,5	;RP0=0, select bank0
 11502  0389  1303               	bcf	3,6	;RP1=0, select bank0
 11503  038A  00B7               	movwf	___flmul@a+3
 11504  038B  1683               	bsf	3,5	;RP0=1, select bank1
 11505  038C  1303               	bcf	3,6	;RP1=0, select bank1
 11506  038D  0838               	movf	(_sprintf$1070+2)^(0+128),w
 11507  038E  1283               	bcf	3,5	;RP0=0, select bank0
 11508  038F  1303               	bcf	3,6	;RP1=0, select bank0
 11509  0390  00B6               	movwf	___flmul@a+2
 11510  0391  1683               	bsf	3,5	;RP0=1, select bank1
 11511  0392  1303               	bcf	3,6	;RP1=0, select bank1
 11512  0393  0837               	movf	(_sprintf$1070+1)^(0+128),w
 11513  0394  1283               	bcf	3,5	;RP0=0, select bank0
 11514  0395  1303               	bcf	3,6	;RP1=0, select bank0
 11515  0396  00B5               	movwf	___flmul@a+1
 11516  0397  1683               	bsf	3,5	;RP0=1, select bank1
 11517  0398  1303               	bcf	3,6	;RP1=0, select bank1
 11518  0399  0836               	movf	_sprintf$1070^(0+128),w
 11519  039A  1283               	bcf	3,5	;RP0=0, select bank0
 11520  039B  1303               	bcf	3,6	;RP1=0, select bank0
 11521  039C  00B4               	movwf	___flmul@a
 11522  039D  1683               	bsf	3,5	;RP0=1, select bank1
 11523  039E  1303               	bcf	3,6	;RP1=0, select bank1
 11524  039F  084C               	movf	(sprintf@fval+3)^(0+128),w
 11525  03A0  1283               	bcf	3,5	;RP0=0, select bank0
 11526  03A1  1303               	bcf	3,6	;RP1=0, select bank0
 11527  03A2  00B3               	movwf	___flmul@b+3
 11528  03A3  1683               	bsf	3,5	;RP0=1, select bank1
 11529  03A4  1303               	bcf	3,6	;RP1=0, select bank1
 11530  03A5  084B               	movf	(sprintf@fval+2)^(0+128),w
 11531  03A6  1283               	bcf	3,5	;RP0=0, select bank0
 11532  03A7  1303               	bcf	3,6	;RP1=0, select bank0
 11533  03A8  00B2               	movwf	___flmul@b+2
 11534  03A9  1683               	bsf	3,5	;RP0=1, select bank1
 11535  03AA  1303               	bcf	3,6	;RP1=0, select bank1
 11536  03AB  084A               	movf	(sprintf@fval+1)^(0+128),w
 11537  03AC  1283               	bcf	3,5	;RP0=0, select bank0
 11538  03AD  1303               	bcf	3,6	;RP1=0, select bank0
 11539  03AE  00B1               	movwf	___flmul@b+1
 11540  03AF  1683               	bsf	3,5	;RP0=1, select bank1
 11541  03B0  1303               	bcf	3,6	;RP1=0, select bank1
 11542  03B1  0849               	movf	sprintf@fval^(0+128),w
 11543  03B2  1283               	bcf	3,5	;RP0=0, select bank0
 11544  03B3  1303               	bcf	3,6	;RP1=0, select bank0
 11545  03B4  00B0               	movwf	___flmul@b
 11546  03B5  120A  158A  213C  120A  118A  	fcall	___flmul
 11547  03BA  1283               	bcf	3,5	;RP0=0, select bank0
 11548  03BB  1303               	bcf	3,6	;RP1=0, select bank0
 11549  03BC  0833               	movf	?___flmul+3,w
 11550  03BD  00E0               	movwf	___fltol@f1+3
 11551  03BE  0832               	movf	?___flmul+2,w
 11552  03BF  00DF               	movwf	___fltol@f1+2
 11553  03C0  0831               	movf	?___flmul+1,w
 11554  03C1  00DE               	movwf	___fltol@f1+1
 11555  03C2  0830               	movf	?___flmul,w
 11556  03C3  00DD               	movwf	___fltol@f1
 11557  03C4  120A  158A  2002  120A  118A  	fcall	___fltol
 11558  03C9  1283               	bcf	3,5	;RP0=0, select bank0
 11559  03CA  1303               	bcf	3,6	;RP1=0, select bank0
 11560  03CB  0860               	movf	?___fltol+3,w
 11561  03CC  1683               	bsf	3,5	;RP0=1, select bank1
 11562  03CD  1303               	bcf	3,6	;RP1=0, select bank1
 11563  03CE  00BE               	movwf	(sprintf@val+3)^(0+128)
 11564  03CF  1283               	bcf	3,5	;RP0=0, select bank0
 11565  03D0  1303               	bcf	3,6	;RP1=0, select bank0
 11566  03D1  085F               	movf	?___fltol+2,w
 11567  03D2  1683               	bsf	3,5	;RP0=1, select bank1
 11568  03D3  1303               	bcf	3,6	;RP1=0, select bank1
 11569  03D4  00BD               	movwf	(sprintf@val+2)^(0+128)
 11570  03D5  1283               	bcf	3,5	;RP0=0, select bank0
 11571  03D6  1303               	bcf	3,6	;RP1=0, select bank0
 11572  03D7  085E               	movf	?___fltol+1,w
 11573  03D8  1683               	bsf	3,5	;RP0=1, select bank1
 11574  03D9  1303               	bcf	3,6	;RP1=0, select bank1
 11575  03DA  00BC               	movwf	(sprintf@val+1)^(0+128)
 11576  03DB  1283               	bcf	3,5	;RP0=0, select bank0
 11577  03DC  1303               	bcf	3,6	;RP1=0, select bank0
 11578  03DD  085D               	movf	?___fltol,w
 11579  03DE  1683               	bsf	3,5	;RP0=1, select bank1
 11580  03DF  1303               	bcf	3,6	;RP1=0, select bank1
 11581  03E0  00BB               	movwf	sprintf@val^(0+128)
 11582                           
 11583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11584  03E1  2CE3               	goto	l3446
 11585  03E2                     l3438:
 11586                           
 11587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11588  03E2  0850               	movf	sprintf@c^(0+128),w
 11589  03E3  00B1               	movwf	??_sprintf^(0+128)
 11590  03E4  3001               	movlw	1
 11591  03E5                     u5405:
 11592  03E5  1003               	clrc
 11593  03E6  0DB1               	rlf	??_sprintf^(0+128),f
 11594  03E7  3EFF               	addlw	-1
 11595  03E8  1D03               	skipz
 11596  03E9  2BE5               	goto	u5405
 11597  03EA  1003               	clrc
 11598  03EB  0D31               	rlf	??_sprintf^(0+128),w
 11599  03EC  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11600  03ED  0084               	movwf	4
 11601  03EE  160A  158A  200A  120A  118A  	fcall	stringdir
 11602  03F3  1283               	bcf	3,5	;RP0=0, select bank0
 11603  03F4  1303               	bcf	3,6	;RP1=0, select bank0
 11604  03F5  00A0               	movwf	___lldiv@divisor
 11605  03F6  160A  158A  200A  120A  118A  	fcall	stringdir
 11606  03FB  00A1               	movwf	___lldiv@divisor+1
 11607  03FC  160A  158A  200A  120A  118A  	fcall	stringdir
 11608  0401  00A2               	movwf	___lldiv@divisor+2
 11609  0402  160A  158A  200A  120A  118A  	fcall	stringdir
 11610  0407  00A3               	movwf	___lldiv@divisor+3
 11611  0408  1683               	bsf	3,5	;RP0=1, select bank1
 11612  0409  1303               	bcf	3,6	;RP1=0, select bank1
 11613  040A  083E               	movf	(sprintf@val+3)^(0+128),w
 11614  040B  1283               	bcf	3,5	;RP0=0, select bank0
 11615  040C  1303               	bcf	3,6	;RP1=0, select bank0
 11616  040D  00A7               	movwf	___lldiv@dividend+3
 11617  040E  1683               	bsf	3,5	;RP0=1, select bank1
 11618  040F  1303               	bcf	3,6	;RP1=0, select bank1
 11619  0410  083D               	movf	(sprintf@val+2)^(0+128),w
 11620  0411  1283               	bcf	3,5	;RP0=0, select bank0
 11621  0412  1303               	bcf	3,6	;RP1=0, select bank0
 11622  0413  00A6               	movwf	___lldiv@dividend+2
 11623  0414  1683               	bsf	3,5	;RP0=1, select bank1
 11624  0415  1303               	bcf	3,6	;RP1=0, select bank1
 11625  0416  083C               	movf	(sprintf@val+1)^(0+128),w
 11626  0417  1283               	bcf	3,5	;RP0=0, select bank0
 11627  0418  1303               	bcf	3,6	;RP1=0, select bank0
 11628  0419  00A5               	movwf	___lldiv@dividend+1
 11629  041A  1683               	bsf	3,5	;RP0=1, select bank1
 11630  041B  1303               	bcf	3,6	;RP1=0, select bank1
 11631  041C  083B               	movf	sprintf@val^(0+128),w
 11632  041D  1283               	bcf	3,5	;RP0=0, select bank0
 11633  041E  1303               	bcf	3,6	;RP1=0, select bank0
 11634  041F  00A4               	movwf	___lldiv@dividend
 11635  0420  160A  158A  254B  120A  118A  	fcall	___lldiv
 11636  0425  1283               	bcf	3,5	;RP0=0, select bank0
 11637  0426  1303               	bcf	3,6	;RP1=0, select bank0
 11638  0427  0823               	movf	?___lldiv+3,w
 11639  0428  1683               	bsf	3,5	;RP0=1, select bank1
 11640  0429  1303               	bcf	3,6	;RP1=0, select bank1
 11641  042A  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
 11642  042B  1283               	bcf	3,5	;RP0=0, select bank0
 11643  042C  1303               	bcf	3,6	;RP1=0, select bank0
 11644  042D  0822               	movf	?___lldiv+2,w
 11645  042E  1683               	bsf	3,5	;RP0=1, select bank1
 11646  042F  1303               	bcf	3,6	;RP1=0, select bank1
 11647  0430  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
 11648  0431  1283               	bcf	3,5	;RP0=0, select bank0
 11649  0432  1303               	bcf	3,6	;RP1=0, select bank0
 11650  0433  0821               	movf	?___lldiv+1,w
 11651  0434  1683               	bsf	3,5	;RP0=1, select bank1
 11652  0435  1303               	bcf	3,6	;RP1=0, select bank1
 11653  0436  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
 11654  0437  1283               	bcf	3,5	;RP0=0, select bank0
 11655  0438  1303               	bcf	3,6	;RP1=0, select bank0
 11656  0439  0820               	movf	?___lldiv,w
 11657  043A  1683               	bsf	3,5	;RP0=1, select bank1
 11658  043B  1303               	bcf	3,6	;RP1=0, select bank1
 11659  043C  00C3               	movwf	sprintf@tmpval^(0+128)
 11660  043D                     l3440:
 11661                           
 11662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11663  043D  3000               	movlw	0
 11664  043E  1283               	bcf	3,5	;RP0=0, select bank0
 11665  043F  1303               	bcf	3,6	;RP1=0, select bank0
 11666  0440  00A3               	movwf	___llmod@divisor+3
 11667  0441  3000               	movlw	0
 11668  0442  00A2               	movwf	___llmod@divisor+2
 11669  0443  3000               	movlw	0
 11670  0444  00A1               	movwf	___llmod@divisor+1
 11671  0445  300A               	movlw	10
 11672  0446  00A0               	movwf	___llmod@divisor
 11673  0447  1683               	bsf	3,5	;RP0=1, select bank1
 11674  0448  1303               	bcf	3,6	;RP1=0, select bank1
 11675  0449  0846               	movf	(sprintf@tmpval+3)^(0+128),w
 11676  044A  1283               	bcf	3,5	;RP0=0, select bank0
 11677  044B  1303               	bcf	3,6	;RP1=0, select bank0
 11678  044C  00A7               	movwf	___llmod@dividend+3
 11679  044D  1683               	bsf	3,5	;RP0=1, select bank1
 11680  044E  1303               	bcf	3,6	;RP1=0, select bank1
 11681  044F  0845               	movf	(sprintf@tmpval+2)^(0+128),w
 11682  0450  1283               	bcf	3,5	;RP0=0, select bank0
 11683  0451  1303               	bcf	3,6	;RP1=0, select bank0
 11684  0452  00A6               	movwf	___llmod@dividend+2
 11685  0453  1683               	bsf	3,5	;RP0=1, select bank1
 11686  0454  1303               	bcf	3,6	;RP1=0, select bank1
 11687  0455  0844               	movf	(sprintf@tmpval+1)^(0+128),w
 11688  0456  1283               	bcf	3,5	;RP0=0, select bank0
 11689  0457  1303               	bcf	3,6	;RP1=0, select bank0
 11690  0458  00A5               	movwf	___llmod@dividend+1
 11691  0459  1683               	bsf	3,5	;RP0=1, select bank1
 11692  045A  1303               	bcf	3,6	;RP1=0, select bank1
 11693  045B  0843               	movf	sprintf@tmpval^(0+128),w
 11694  045C  1283               	bcf	3,5	;RP0=0, select bank0
 11695  045D  1303               	bcf	3,6	;RP1=0, select bank0
 11696  045E  00A4               	movwf	___llmod@dividend
 11697  045F  160A  158A  243C  120A  118A  	fcall	___llmod
 11698  0464  1283               	bcf	3,5	;RP0=0, select bank0
 11699  0465  1303               	bcf	3,6	;RP1=0, select bank0
 11700  0466  0823               	movf	?___llmod+3,w
 11701  0467  1683               	bsf	3,5	;RP0=1, select bank1
 11702  0468  1303               	bcf	3,6	;RP1=0, select bank1
 11703  0469  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
 11704  046A  1283               	bcf	3,5	;RP0=0, select bank0
 11705  046B  1303               	bcf	3,6	;RP1=0, select bank0
 11706  046C  0822               	movf	?___llmod+2,w
 11707  046D  1683               	bsf	3,5	;RP0=1, select bank1
 11708  046E  1303               	bcf	3,6	;RP1=0, select bank1
 11709  046F  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
 11710  0470  1283               	bcf	3,5	;RP0=0, select bank0
 11711  0471  1303               	bcf	3,6	;RP1=0, select bank0
 11712  0472  0821               	movf	?___llmod+1,w
 11713  0473  1683               	bsf	3,5	;RP0=1, select bank1
 11714  0474  1303               	bcf	3,6	;RP1=0, select bank1
 11715  0475  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
 11716  0476  1283               	bcf	3,5	;RP0=0, select bank0
 11717  0477  1303               	bcf	3,6	;RP1=0, select bank0
 11718  0478  0820               	movf	?___llmod,w
 11719  0479  1683               	bsf	3,5	;RP0=1, select bank1
 11720  047A  1303               	bcf	3,6	;RP1=0, select bank1
 11721  047B  00C3               	movwf	sprintf@tmpval^(0+128)
 11722  047C                     l3442:
 11723                           
 11724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11725  047C  0843               	movf	sprintf@tmpval^(0+128),w
 11726  047D  3E30               	addlw	48
 11727  047E  00B1               	movwf	??_sprintf^(0+128)
 11728  047F  084D               	movf	sprintf@sp^(0+128),w
 11729  0480  0084               	movwf	4
 11730  0481  0831               	movf	??_sprintf^(0+128),w
 11731  0482  1783               	bsf	3,7	;select IRP bank2
 11732  0483  0080               	movwf	0
 11733  0484  3001               	movlw	1
 11734  0485  00B1               	movwf	??_sprintf^(0+128)
 11735  0486  0831               	movf	??_sprintf^(0+128),w
 11736  0487  07CD               	addwf	sprintf@sp^(0+128),f
 11737  0488                     l3444:
 11738                           
 11739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11740  0488  0850               	movf	sprintf@c^(0+128),w
 11741  0489  00B1               	movwf	??_sprintf^(0+128)
 11742  048A  3001               	movlw	1
 11743  048B                     u5415:
 11744  048B  1003               	clrc
 11745  048C  0DB1               	rlf	??_sprintf^(0+128),f
 11746  048D  3EFF               	addlw	-1
 11747  048E  1D03               	skipz
 11748  048F  2C8B               	goto	u5415
 11749  0490  1003               	clrc
 11750  0491  0D31               	rlf	??_sprintf^(0+128),w
 11751  0492  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11752  0493  0084               	movwf	4
 11753  0494  160A  158A  200A  120A  118A  	fcall	stringdir
 11754  0499  1283               	bcf	3,5	;RP0=0, select bank0
 11755  049A  1303               	bcf	3,6	;RP1=0, select bank0
 11756  049B  00A0               	movwf	___llmod@divisor
 11757  049C  160A  158A  200A  120A  118A  	fcall	stringdir
 11758  04A1  00A1               	movwf	___llmod@divisor+1
 11759  04A2  160A  158A  200A  120A  118A  	fcall	stringdir
 11760  04A7  00A2               	movwf	___llmod@divisor+2
 11761  04A8  160A  158A  200A  120A  118A  	fcall	stringdir
 11762  04AD  00A3               	movwf	___llmod@divisor+3
 11763  04AE  1683               	bsf	3,5	;RP0=1, select bank1
 11764  04AF  1303               	bcf	3,6	;RP1=0, select bank1
 11765  04B0  083E               	movf	(sprintf@val+3)^(0+128),w
 11766  04B1  1283               	bcf	3,5	;RP0=0, select bank0
 11767  04B2  1303               	bcf	3,6	;RP1=0, select bank0
 11768  04B3  00A7               	movwf	___llmod@dividend+3
 11769  04B4  1683               	bsf	3,5	;RP0=1, select bank1
 11770  04B5  1303               	bcf	3,6	;RP1=0, select bank1
 11771  04B6  083D               	movf	(sprintf@val+2)^(0+128),w
 11772  04B7  1283               	bcf	3,5	;RP0=0, select bank0
 11773  04B8  1303               	bcf	3,6	;RP1=0, select bank0
 11774  04B9  00A6               	movwf	___llmod@dividend+2
 11775  04BA  1683               	bsf	3,5	;RP0=1, select bank1
 11776  04BB  1303               	bcf	3,6	;RP1=0, select bank1
 11777  04BC  083C               	movf	(sprintf@val+1)^(0+128),w
 11778  04BD  1283               	bcf	3,5	;RP0=0, select bank0
 11779  04BE  1303               	bcf	3,6	;RP1=0, select bank0
 11780  04BF  00A5               	movwf	___llmod@dividend+1
 11781  04C0  1683               	bsf	3,5	;RP0=1, select bank1
 11782  04C1  1303               	bcf	3,6	;RP1=0, select bank1
 11783  04C2  083B               	movf	sprintf@val^(0+128),w
 11784  04C3  1283               	bcf	3,5	;RP0=0, select bank0
 11785  04C4  1303               	bcf	3,6	;RP1=0, select bank0
 11786  04C5  00A4               	movwf	___llmod@dividend
 11787  04C6  160A  158A  243C  120A  118A  	fcall	___llmod
 11788  04CB  1283               	bcf	3,5	;RP0=0, select bank0
 11789  04CC  1303               	bcf	3,6	;RP1=0, select bank0
 11790  04CD  0823               	movf	?___llmod+3,w
 11791  04CE  1683               	bsf	3,5	;RP0=1, select bank1
 11792  04CF  1303               	bcf	3,6	;RP1=0, select bank1
 11793  04D0  00BE               	movwf	(sprintf@val+3)^(0+128)
 11794  04D1  1283               	bcf	3,5	;RP0=0, select bank0
 11795  04D2  1303               	bcf	3,6	;RP1=0, select bank0
 11796  04D3  0822               	movf	?___llmod+2,w
 11797  04D4  1683               	bsf	3,5	;RP0=1, select bank1
 11798  04D5  1303               	bcf	3,6	;RP1=0, select bank1
 11799  04D6  00BD               	movwf	(sprintf@val+2)^(0+128)
 11800  04D7  1283               	bcf	3,5	;RP0=0, select bank0
 11801  04D8  1303               	bcf	3,6	;RP1=0, select bank0
 11802  04D9  0821               	movf	?___llmod+1,w
 11803  04DA  1683               	bsf	3,5	;RP0=1, select bank1
 11804  04DB  1303               	bcf	3,6	;RP1=0, select bank1
 11805  04DC  00BC               	movwf	(sprintf@val+1)^(0+128)
 11806  04DD  1283               	bcf	3,5	;RP0=0, select bank0
 11807  04DE  1303               	bcf	3,6	;RP1=0, select bank0
 11808  04DF  0820               	movf	?___llmod,w
 11809  04E0  1683               	bsf	3,5	;RP0=1, select bank1
 11810  04E1  1303               	bcf	3,6	;RP1=0, select bank1
 11811  04E2  00BB               	movwf	sprintf@val^(0+128)
 11812  04E3                     l3446:
 11813                           
 11814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11815  04E3  3001               	movlw	1
 11816  04E4  02D0               	subwf	sprintf@c^(0+128),f
 11817  04E5  0A50               	incf	sprintf@c^(0+128),w
 11818  04E6  1D03               	btfss	3,2
 11819  04E7  2CE9               	goto	u5421
 11820  04E8  2CEA               	goto	u5420
 11821  04E9                     u5421:
 11822  04E9  2BE2               	goto	l3438
 11823  04EA                     u5420:
 11824  04EA  2CFC               	goto	l3454
 11825  04EB                     l3448:
 11826                           
 11827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11828  04EB  3030               	movlw	48
 11829  04EC  00B1               	movwf	??_sprintf^(0+128)
 11830  04ED  084D               	movf	sprintf@sp^(0+128),w
 11831  04EE  0084               	movwf	4
 11832  04EF  0831               	movf	??_sprintf^(0+128),w
 11833  04F0  1783               	bsf	3,7	;select IRP bank2
 11834  04F1  0080               	movwf	0
 11835  04F2                     l3450:
 11836  04F2  3001               	movlw	1
 11837  04F3  00B1               	movwf	??_sprintf^(0+128)
 11838  04F4  0831               	movf	??_sprintf^(0+128),w
 11839  04F5  07CD               	addwf	sprintf@sp^(0+128),f
 11840  04F6                     l3452:
 11841                           
 11842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11843  04F6  30FF               	movlw	255
 11844  04F7  07CE               	addwf	sprintf@prec^(0+128),f
 11845  04F8  1803               	skipnc
 11846  04F9  0ACF               	incf	(sprintf@prec+1)^(0+128),f
 11847  04FA  30FF               	movlw	255
 11848  04FB  07CF               	addwf	(sprintf@prec+1)^(0+128),f
 11849  04FC                     l3454:
 11850                           
 11851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11852  04FC  084E               	movf	sprintf@prec^(0+128),w
 11853  04FD  044F               	iorwf	(sprintf@prec+1)^(0+128),w
 11854  04FE  1D03               	btfss	3,2
 11855  04FF  2D01               	goto	u5431
 11856  0500  2D02               	goto	u5430
 11857  0501                     u5431:
 11858  0501  2CEB               	goto	l3448
 11859  0502                     u5430:
 11860  0502  2DC8               	goto	l3502
 11861  0503                     l3456:
 11862                           
 11863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 11864  0503  084E               	movf	sprintf@prec^(0+128),w
 11865  0504  044F               	iorwf	(sprintf@prec+1)^(0+128),w
 11866  0505  1D03               	btfss	3,2
 11867  0506  2D08               	goto	u5441
 11868  0507  2D09               	goto	u5440
 11869  0508                     u5441:
 11870  0508  2D17               	goto	l406
 11871  0509                     u5440:
 11872  0509                     l3458:
 11873  0509  083E               	movf	(sprintf@val+3)^(0+128),w
 11874  050A  043D               	iorwf	(sprintf@val+2)^(0+128),w
 11875  050B  043C               	iorwf	(sprintf@val+1)^(0+128),w
 11876  050C  043B               	iorwf	sprintf@val^(0+128),w
 11877  050D  1D03               	skipz
 11878  050E  2D10               	goto	u5451
 11879  050F  2D11               	goto	u5450
 11880  0510                     u5451:
 11881  0510  2D17               	goto	l406
 11882  0511                     u5450:
 11883  0511                     l3460:
 11884                           
 11885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11886  0511  3001               	movlw	1
 11887  0512  07CE               	addwf	sprintf@prec^(0+128),f
 11888  0513  1803               	skipnc
 11889  0514  0ACF               	incf	(sprintf@prec+1)^(0+128),f
 11890  0515  3000               	movlw	0
 11891  0516  07CF               	addwf	(sprintf@prec+1)^(0+128),f
 11892  0517                     l406:
 11893                           
 11894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11895  0517  084F               	movf	(sprintf@prec+1)^(0+128),w
 11896  0518  3A80               	xorlw	128
 11897  0519  3C80               	sublw	128
 11898  051A  1D03               	skipz
 11899  051B  2D1E               	goto	u5465
 11900  051C  084E               	movf	sprintf@prec^(0+128),w
 11901  051D  0250               	subwf	sprintf@c^(0+128),w
 11902  051E                     u5465:
 11903  051E  1803               	skipnc
 11904  051F  2D21               	goto	u5461
 11905  0520  2D22               	goto	u5460
 11906  0521                     u5461:
 11907  0521  2D29               	goto	l3464
 11908  0522                     u5460:
 11909  0522                     l3462:
 11910                           
 11911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11912  0522  1683               	bsf	3,5	;RP0=1, select bank1
 11913  0523  1303               	bcf	3,6	;RP1=0, select bank1
 11914  0524  084E               	movf	sprintf@prec^(0+128),w
 11915  0525  00B1               	movwf	??_sprintf^(0+128)
 11916  0526  0831               	movf	??_sprintf^(0+128),w
 11917  0527  00D0               	movwf	sprintf@c^(0+128)
 11918  0528  2D41               	goto	l3468
 11919  0529                     l3464:
 11920  0529  1683               	bsf	3,5	;RP0=1, select bank1
 11921  052A  1303               	bcf	3,6	;RP1=0, select bank1
 11922  052B  084F               	movf	(sprintf@prec+1)^(0+128),w
 11923  052C  3A80               	xorlw	128
 11924  052D  00B1               	movwf	??_sprintf^(0+128)
 11925  052E  3080               	movlw	128
 11926  052F  0231               	subwf	??_sprintf^(0+128),w
 11927  0530  1D03               	skipz
 11928  0531  2D34               	goto	u5475
 11929  0532  0850               	movf	sprintf@c^(0+128),w
 11930  0533  024E               	subwf	sprintf@prec^(0+128),w
 11931  0534                     u5475:
 11932  0534  1803               	skipnc
 11933  0535  2D37               	goto	u5471
 11934  0536  2D38               	goto	u5470
 11935  0537                     u5471:
 11936  0537  2D41               	goto	l3468
 11937  0538                     u5470:
 11938  0538                     l3466:
 11939                           
 11940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11941  0538  1683               	bsf	3,5	;RP0=1, select bank1
 11942  0539  1303               	bcf	3,6	;RP1=0, select bank1
 11943  053A  0850               	movf	sprintf@c^(0+128),w
 11944  053B  00B1               	movwf	??_sprintf^(0+128)
 11945  053C  01B2               	clrf	(??_sprintf^(0+128)+1)
 11946  053D  0831               	movf	??_sprintf^(0+128),w
 11947  053E  00CE               	movwf	sprintf@prec^(0+128)
 11948  053F  0832               	movf	(??_sprintf+1)^(0+128),w
 11949  0540  00CF               	movwf	(sprintf@prec+1)^(0+128)
 11950  0541                     l3468:
 11951                           
 11952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11953  0541  1683               	bsf	3,5	;RP0=1, select bank1
 11954  0542  1303               	bcf	3,6	;RP1=0, select bank1
 11955  0543  0841               	movf	sprintf@width^(0+128),w
 11956  0544  0442               	iorwf	(sprintf@width+1)^(0+128),w
 11957  0545  1903               	btfsc	3,2
 11958  0546  2D48               	goto	u5481
 11959  0547  2D49               	goto	u5480
 11960  0548                     u5481:
 11961  0548  2D5B               	goto	l3474
 11962  0549                     u5480:
 11963  0549                     l3470:
 11964  0549  3003               	movlw	3
 11965  054A  053F               	andwf	sprintf@flag^(0+128),w
 11966  054B  00B1               	movwf	??_sprintf^(0+128)
 11967  054C  3000               	movlw	0
 11968  054D  0540               	andwf	(sprintf@flag+1)^(0+128),w
 11969  054E  00B2               	movwf	(??_sprintf+1)^(0+128)
 11970  054F  0831               	movf	??_sprintf^(0+128),w
 11971  0550  0432               	iorwf	(??_sprintf^(0+128)+1),w
 11972  0551  1903               	btfsc	3,2
 11973  0552  2D54               	goto	u5491
 11974  0553  2D55               	goto	u5490
 11975  0554                     u5491:
 11976  0554  2D5B               	goto	l3474
 11977  0555                     u5490:
 11978  0555                     l3472:
 11979                           
 11980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11981  0555  30FF               	movlw	255
 11982  0556  07C1               	addwf	sprintf@width^(0+128),f
 11983  0557  1803               	skipnc
 11984  0558  0AC2               	incf	(sprintf@width+1)^(0+128),f
 11985  0559  30FF               	movlw	255
 11986  055A  07C2               	addwf	(sprintf@width+1)^(0+128),f
 11987  055B                     l3474:
 11988                           
 11989                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11990  055B  1F40               	btfss	(sprintf@flag+1)^(0+128),6
 11991  055C  2D5E               	goto	u5501
 11992  055D  2D5F               	goto	u5500
 11993  055E                     u5501:
 11994  055E  2D7A               	goto	l3482
 11995  055F                     u5500:
 11996  055F                     l3476:
 11997                           
 11998                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11999  055F  084F               	movf	(sprintf@prec+1)^(0+128),w
 12000  0560  3A80               	xorlw	128
 12001  0561  00B1               	movwf	??_sprintf^(0+128)
 12002  0562  0842               	movf	(sprintf@width+1)^(0+128),w
 12003  0563  3A80               	xorlw	128
 12004  0564  0231               	subwf	??_sprintf^(0+128),w
 12005  0565  1D03               	skipz
 12006  0566  2D69               	goto	u5515
 12007  0567  0841               	movf	sprintf@width^(0+128),w
 12008  0568  024E               	subwf	sprintf@prec^(0+128),w
 12009  0569                     u5515:
 12010  0569  1803               	skipnc
 12011  056A  2D6C               	goto	u5511
 12012  056B  2D6D               	goto	u5510
 12013  056C                     u5511:
 12014  056C  2D76               	goto	l3480
 12015  056D                     u5510:
 12016  056D                     l3478:
 12017                           
 12018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 12019  056D  1683               	bsf	3,5	;RP0=1, select bank1
 12020  056E  1303               	bcf	3,6	;RP1=0, select bank1
 12021  056F  084E               	movf	sprintf@prec^(0+128),w
 12022  0570  02C1               	subwf	sprintf@width^(0+128),f
 12023  0571  084F               	movf	(sprintf@prec+1)^(0+128),w
 12024  0572  1C03               	skipc
 12025  0573  03C2               	decf	(sprintf@width+1)^(0+128),f
 12026  0574  02C2               	subwf	(sprintf@width+1)^(0+128),f
 12027  0575  2D7A               	goto	l3482
 12028  0576                     l3480:
 12029                           
 12030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 12031  0576  1683               	bsf	3,5	;RP0=1, select bank1
 12032  0577  1303               	bcf	3,6	;RP1=0, select bank1
 12033  0578  01C1               	clrf	sprintf@width^(0+128)
 12034  0579  01C2               	clrf	(sprintf@width+1)^(0+128)
 12035  057A                     l3482:
 12036                           
 12037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 12038  057A  0842               	movf	(sprintf@width+1)^(0+128),w
 12039  057B  3A80               	xorlw	128
 12040  057C  3C80               	sublw	128
 12041  057D  1D03               	skipz
 12042  057E  2D81               	goto	u5525
 12043  057F  0841               	movf	sprintf@width^(0+128),w
 12044  0580  0250               	subwf	sprintf@c^(0+128),w
 12045  0581                     u5525:
 12046  0581  1803               	skipnc
 12047  0582  2D84               	goto	u5521
 12048  0583  2D85               	goto	u5520
 12049  0584                     u5521:
 12050  0584  2D91               	goto	l3486
 12051  0585                     u5520:
 12052  0585                     l3484:
 12053                           
 12054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 12055  0585  1683               	bsf	3,5	;RP0=1, select bank1
 12056  0586  1303               	bcf	3,6	;RP1=0, select bank1
 12057  0587  0850               	movf	sprintf@c^(0+128),w
 12058  0588  00B1               	movwf	??_sprintf^(0+128)
 12059  0589  01B2               	clrf	(??_sprintf^(0+128)+1)
 12060  058A  0831               	movf	??_sprintf^(0+128),w
 12061  058B  02C1               	subwf	sprintf@width^(0+128),f
 12062  058C  0832               	movf	(??_sprintf+1)^(0+128),w
 12063  058D  1C03               	skipc
 12064  058E  03C2               	decf	(sprintf@width+1)^(0+128),f
 12065  058F  02C2               	subwf	(sprintf@width+1)^(0+128),f
 12066  0590  2D95               	goto	l3488
 12067  0591                     l3486:
 12068                           
 12069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 12070  0591  1683               	bsf	3,5	;RP0=1, select bank1
 12071  0592  1303               	bcf	3,6	;RP1=0, select bank1
 12072  0593  01C1               	clrf	sprintf@width^(0+128)
 12073  0594  01C2               	clrf	(sprintf@width+1)^(0+128)
 12074  0595                     l3488:
 12075                           
 12076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 12077  0595  0841               	movf	sprintf@width^(0+128),w
 12078  0596  0442               	iorwf	(sprintf@width+1)^(0+128),w
 12079  0597  1903               	btfsc	3,2
 12080  0598  2D9A               	goto	u5531
 12081  0599  2D9B               	goto	u5530
 12082  059A                     u5531:
 12083  059A  2DB2               	goto	l3496
 12084  059B                     u5530:
 12085  059B                     l3490:
 12086                           
 12087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 12088  059B  3020               	movlw	32
 12089  059C  00B1               	movwf	??_sprintf^(0+128)
 12090  059D  084D               	movf	sprintf@sp^(0+128),w
 12091  059E  0084               	movwf	4
 12092  059F  0831               	movf	??_sprintf^(0+128),w
 12093  05A0  1783               	bsf	3,7	;select IRP bank2
 12094  05A1  0080               	movwf	0
 12095  05A2                     l3492:
 12096  05A2  3001               	movlw	1
 12097  05A3  00B1               	movwf	??_sprintf^(0+128)
 12098  05A4  0831               	movf	??_sprintf^(0+128),w
 12099  05A5  07CD               	addwf	sprintf@sp^(0+128),f
 12100  05A6                     l3494:
 12101  05A6  30FF               	movlw	255
 12102  05A7  07C1               	addwf	sprintf@width^(0+128),f
 12103  05A8  1803               	skipnc
 12104  05A9  0AC2               	incf	(sprintf@width+1)^(0+128),f
 12105  05AA  30FF               	movlw	255
 12106  05AB  07C2               	addwf	(sprintf@width+1)^(0+128),f
 12107  05AC  0841               	movf	sprintf@width^(0+128),w
 12108  05AD  0442               	iorwf	(sprintf@width+1)^(0+128),w
 12109  05AE  1D03               	btfss	3,2
 12110  05AF  2DB1               	goto	u5541
 12111  05B0  2DB2               	goto	u5540
 12112  05B1                     u5541:
 12113  05B1  2D9B               	goto	l3490
 12114  05B2                     u5540:
 12115  05B2                     l3496:
 12116                           
 12117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 12118  05B2  3003               	movlw	3
 12119  05B3  053F               	andwf	sprintf@flag^(0+128),w
 12120  05B4  00B1               	movwf	??_sprintf^(0+128)
 12121  05B5  3000               	movlw	0
 12122  05B6  0540               	andwf	(sprintf@flag+1)^(0+128),w
 12123  05B7  00B2               	movwf	(??_sprintf+1)^(0+128)
 12124  05B8  0831               	movf	??_sprintf^(0+128),w
 12125  05B9  0432               	iorwf	(??_sprintf^(0+128)+1),w
 12126  05BA  1903               	btfsc	3,2
 12127  05BB  2DBD               	goto	u5551
 12128  05BC  2DBE               	goto	u5550
 12129  05BD                     u5551:
 12130  05BD  2DC8               	goto	l3502
 12131  05BE                     u5550:
 12132  05BE                     l3498:
 12133                           
 12134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 12135  05BE  302D               	movlw	45
 12136  05BF  00B1               	movwf	??_sprintf^(0+128)
 12137  05C0  084D               	movf	sprintf@sp^(0+128),w
 12138  05C1  0084               	movwf	4
 12139  05C2  0831               	movf	??_sprintf^(0+128),w
 12140  05C3  1783               	bsf	3,7	;select IRP bank2
 12141  05C4  0080               	movwf	0
 12142  05C5  160A  118A  2CCB   	goto	l3258
 12143  05C8                     l3502:
 12144                           
 12145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 12146  05C8  3001               	movlw	1
 12147  05C9  07AC               	addwf	sprintf@f^(0+128),f
 12148  05CA  30FF               	movlw	-1
 12149  05CB  072C               	addwf	sprintf@f^(0+128),w
 12150  05CC  0084               	movwf	4
 12151  05CD  160A  158A  200A  120A  118A  	fcall	stringdir
 12152  05D2  00B1               	movwf	??_sprintf^(0+128)
 12153  05D3  0831               	movf	??_sprintf^(0+128),w
 12154  05D4  00D0               	movwf	sprintf@c^(0+128)
 12155  05D5  0850               	movf	sprintf@c^(0+128),w
 12156  05D6  1D03               	btfss	3,2
 12157  05D7  2DD9               	goto	u5561
 12158  05D8  2DDC               	goto	u5560
 12159  05D9                     u5561:
 12160  05D9  160A  118A  2CBE   	goto	l3254
 12161  05DC                     u5560:
 12162  05DC                     l3504:
 12163                           
 12164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 12165  05DC  084D               	movf	sprintf@sp^(0+128),w
 12166  05DD  0084               	movwf	4
 12167  05DE  1783               	bsf	3,7	;select IRP bank2
 12168  05DF  0180               	clrf	0
 12169  05E0                     l421:
 12170  05E0  0008               	return
 12171  05E1                     __end_of_sprintf:

Data Sizes:
    Strings     25
    Constant    144
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     79      79
    BANK1            80     49      67
    BANK3            96      0      16
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> data(BANK3[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), data(BANK3[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_ADC
    _ISR->_ADC_Config

Critical Paths under _main in BANK0

    _main->_mapeo
    _titulos_LCD->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _setup->_initOsc
    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _mapeo->_sprintf
    _sprintf->___flsub
    ___flsub->___fladd

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   33024
                     _CONVERSION_ADC
                   _Config_INTERRUPT
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _mapeo
                              _setup
                        _titulos_LCD
 ---------------------------------------------------------------------------------
 (1) _titulos_LCD                                          1     1      0     920
                                             10 BANK0      1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     438
                                              3 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     482
                                              4 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _mapeo                                                1     1      0   31096
                                             78 BANK0      1     1      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   31096
                                             12 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7408
                                             42 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1364
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    5871
                                             42 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     618
                                              6 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4393
                                             16 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              0 BANK0     18    10      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     615
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             61 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                              4 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             62 BANK0     16     8      8
                                              0 BANK1      4     4      0
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONVERSION_ADC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  5     5      0     174
                                              3 COMMON     5     5      0
                                _ADC
                         _ADC_Config
 ---------------------------------------------------------------------------------
 (7) _ADC_Config                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) _ADC                                                  4     1      3     152
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVERSION_ADC
   _Config_INTERRUPT
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _mapeo
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
   _setup
     _initOsc
   _titulos_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port

 _ISR (ROOT)
   _ADC
   _ADC_Config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      B0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     31      43       7       83.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      10       9       16.7%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      B0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 11 12:13:30 2021

                        _a 007D                          _x 00D9                          pc 0002  
             ___awdiv@sign 002D                         fsr 0004        ___wmul@multiplicand 0022  
      __size_of_ADC_Config 00BC        __Umul8_16@word_mpld 0026                        l111 1B4B  
                      l120 18F8                        l114 1923                        l130 1D03  
                      l131 1D09                        l108 1990                        l132 1D0F  
                      l133 1D15                        l117 1956                        l134 1D1B  
                      l126 1CF1                        l135 1D21                        l127 1D49  
                      l152 1005                        l136 1D4A                        l128 1CF7  
                      l129 1CFD                        l155 1972                        l331 07ED  
                      l164 19B6                        l149 1B9B                        l421 05E0  
                      l173 1B05                        l406 0517                        l167 193B  
                      _ADC 07EE                        l360 1597                        l425 19C5  
                      l338 0FFF                        l611 1BBA                        l427 19DD  
                      l612 1BD6                        l620 10B6                        l613 1BEB  
                      l461 1DB2                        l606 092E                        l391 030C  
                      l616 1031                        l624 1012                        l642 1173  
                      l619 109D                        l635 0868                        l643 10E5  
                      l731 1ABF                        l628 087D                        l653 1166  
                      l741 1A79                        l638 087D                        l646 1136  
                      l398 0350                        l591 1CEC                        l752 11F9  
                      l912 190C                        l681 1C91                        l905 1FC9  
                      l906 1FD5                        l578 1E1B                        l595 093B  
                      l756 12F1                        l596 08A0                        l860 0C90  
                      l773 13D3                        l765 14B3                        l758 12BD  
                      l854 0C08                        l783 1429                        l599 08FE  
                      l848 0C9C                        l777 1400                        l794 149F  
                      l786 1473                        l795 14B3                        l867 19F4  
                      l892 1F68                        l869 1A06                        l798 1C3B  
                      l894 1FFF                        l898 1FAD                        _ISR 1E1C  
                      _VAL 00D7                        fsr0 0004                        indf 0000  
             ___awmod@sign 0026               ___flmul@aexp 0042               ___flmul@bexp 0043  
              _titulos_LCD 1B06               ___flmul@sign 003D               ___flmul@temp 0048  
             ___flmul@prod 0044                       ?_ADC 0070                       ?_ISR 0070  
             ___fltol@exp1 0067                       l3010 08A9                       l3002 0894  
                     l3100 1029                       l3020 08E0                       l3012 08BA  
                     l3110 1079                       l3102 1045                       l3022 08EE  
                     l3014 08BC                       l3112 10B3                       l3104 104D  
                     l3120 1010                       l3200 1F79                       l3024 08EF  
                     l3016 08C5                       l3008 08A1                       l2400 1DC5  
                     l3114 10B5                       l3106 1051                       l3122 1012  
                     l3050 19BB                       l3210 1FA4                       l3202 1F7E  
                     l3042 0923                       l3034 090A                       l3026 08F8  
                     l3018 08CE                       l2410 1DD9                       l2402 1DCA  
                     l3108 1075                       l3140 0838                       l3132 0818  
                     l3052 19BF                       l3220 1FD7                       l3212 1FB4  
                     l3204 1F8B                       l3044 0933                       l3028 0902  
                     l3036 091C                       l2500 1A46                       l2420 1DFF  
                     l2412 1DE0                       l2404 1DCE                       l3300 15C3  
                     l3118 1006                       l3142 083C                       l3150 0856  
                     l3134 082D                       l3126 0802                       l3070 1D71  
                     l3062 1D4B                       l3054 19CC                       l3222 1FED  
                     l3214 1FBF                       l3206 1F92                       l2510 1A62  
                     l2502 1A49                       l2430 1E17                       l2422 1E00  
                     l2414 1DE4                       l2406 1DD0                       l3310 1604  
                     l3302 15C7                       l2600 127A                       l2520 1174  
                     l3160 0872                       l3136 082E                       l3128 080F  
                     l3080 1DA4                       l3072 1D7A                       l3064 1D5D  
                     l3056 19D3                       l3048 19B7                       l3224 1FF2  
                     l3216 1FC3                       l3208 1F96                       l2512 1A68  
                     l2504 1A50                       l2424 1E07                       l2416 1DE8  
                     l2408 1DD6                       l2440 1C9E                       l3400 023F  
                     l3320 1673                       l3312 1639                       l3304 15CB  
                     l3240 19AB                       l3232 1994                       l3090 1BCE  
                     l2610 12D6                       l2602 1297                       l2530 1197  
                     l2522 117D                       l3138 0836                       l3074 1D8C  
                     l3066 1D60                       l3082 1DAA                       l3170 1C5A  
                     l3162 1C3C                       l3058 19D9                       l3226 1FF6  
                     l3218 1FCD                       l2514 1A6F                       l2506 1A54  
                     l2418 1DF9                       l2426 1E0D                       l2450 1CB2  
                     l2442 1CA0                       l2434 1C92                       l3410 02C1  
                     l3402 024C                       l3330 16C9                       l3322 1679  
                     l3314 163D                       l3306 15D9                       l3242 19B0  
                     l3234 1999                       l3250 1AE9                       l3092 1BE8  
                     l2700 1489                       l2620 12FA                       l2612 12D9  
                     l2604 12C1                       l2540 11B4                       l2532 119C  
                     l2524 1187                       l3156 085D                       l3148 0844  
                     l3076 1D9A                       l3068 1D6D                       l3172 1C6C  
                     l3164 1C46                       l3228 1FF7                       l2380 19EE  
                     l2508 1A58                       l2516 1A75                       l2428 1E12  
                     l2460 1CD1                       l2452 1CB9                       l2444 1CA4  
                     l2436 1C95                       l3420 0327                       l3412 0300  
                     l3404 025A                       l3340 178C                       l3332 16E8  
                     l3324 169C                       l3316 1641                       l3308 15DD  
                     l3260 14D0                       l3252 14B7                       l3236 199E  
                     l3244 1AC0                       l3094 1BEA                       l3086 1B9C  
                     l2710 14AA                       l2702 1490                       l2630 1328  
                     l2614 12E3                       l2606 12CE                       l2550 11D2  
                     l2542 11BB                       l2534 11A6                       l2526 118D  
                     l3182 1BEC                       l3158 086D                       l3078 1D9B  
                     l3174 1C7A                       l3166 1C49                       l3190 1F4C  
                     l2382 19FD                       l2374 19E1                       l2390 1DB3  
                     l2462 1CD8                       l2454 1CBD                       l2446 1CA9  
                     l2438 1C99                       l3430 035E                       l3422 0334  
                     l3414 0314                       l3406 0261                       l3350 0056  
                     l3334 1733                       l3326 16BF                       l3318 1668  
                     l3342 1794                       l3270 151E                       l3262 14D4  
                     l3254 14BE                       l3502 05C8                       l3238 19A5  
                     l3246 1AC5                       l3600 1973                       l3088 1BB2  
                     l2712 14B0                       l2704 1491                       l2640 134A  
                     l2632 1335                       l2624 1305                       l2608 12D0  
                     l2616 12E9                       l2560 11ED                       l2552 11D5  
                     l2544 11C1                       l2536 11A8                       l2528 1190  
                     l3184 1BF0                       l3176 1C83                       l3168 1C56  
                     l3192 1F50                       l2384 1A02                       l2376 19E3  
                     l2800 0BCB                       l2720 094D                       l2480 1A8E  
                     l2472 1A7A                       l2392 1DB6                       l2456 1CC1  
                     l2448 1CAF                       l2464 1CDE                       l3440 043D  
                     l3432 0365                       l3424 0343                       l3416 031D  
                     l3408 0266                       l3360 00C6                       l3352 007D  
                     l3344 17A3                       l3336 175A                       l3328 16C3  
                     l3504 05DC                       l3280 1545                       l3272 1522  
                     l3264 14E4                       l3256 14C4                       l3248 1AE1  
                     l3610 198F                       l3602 1979                       l3098 1013  
                     l2706 1495                       l2650 13B4                       l2634 1337  
                     l2626 131E                       l2618 12F5                       l2642 1351  
                     l2570 1215                       l2554 11DC                       l2562 11EF  
                     l2546 11C2                       l2538 11AA                       l3178 1C89  
                     l3194 1F60                       l2378 19EA                       l2802 0BD4  
                     l2810 0BE8                       l2730 0962                       l2722 094E  
                     l2714 093C                       l2490 1AAE                       l2482 1A92  
                     l2474 1A7E                       l2394 1DBA                       l2466 1CE3  
                     l2458 1CCB                       l3450 04F2                       l3442 047C  
                     l3434 0369                       l3426 034A                       l3418 0321  
                     l3370 016D                       l3362 00E4                       l3354 008C  
                     l3346 17EA                       l3338 1763                       l3282 1548  
                     l3290 1593                       l3266 14E8                       l3274 1532  
                     l3258 14CB                       l3514 1CF0                       l3604 197F  
                     l2388 1003                       l2708 1499                       l2660 13EE  
                     l2644 1369                       l2652 13C5                       l2636 133D  
                     l2628 1322                       l2580 123B                       l2572 121D  
                     l2564 1201                       l2556 11E1                       l2548 11CC  
                     l3196 1F70                       l3188 1F47                       l2812 0BEC  
                     l2804 0BD8                       l2740 097A                       l2732 096A  
                     l2724 0953                       l2716 0943                       l2492 1AB5  
                     l2484 1A96                       l2476 1A84                       l2396 1DBF  
                     l2468 1CE8                       l3460 0511                       l3452 04F6  
                     l3444 0488                       l3436 0387                       l3428 0359  
                     l3380 01BC                       l3372 01B8                       l3356 00B5  
                     l3348 002D                       l3292 1595                       l3284 156B  
                     l3276 1540                       l3268 150B                       l3612 190D  
                     l3606 1983                       l2670 140B                       l2662 13F7  
                     l2654 13DC                       l2646 13A7                       l2638 1340  
                     l2590 125B                       l2582 1241                       l2574 1225  
                     l2566 1205                       l2558 11EB                       l2830 0C3D  
                     l2822 0C0D                       l2814 0BED                       l2806 0BD9  
                     l2750 0996                       l2742 097F                       l2734 096F  
                     l2726 0958                       l2718 0949                       l2486 1AA7  
                     l2478 1A87                       l2494 1ABB                       l2398 1DC1  
                     l2910 0E26                       l3470 0549                       l3462 0522  
                     l3454 04FC                       l3438 03E2                       l3446 04E3  
                     l3390 021E                       l3374 01BA                       l3366 012F  
                     l3358 00BE                       l3286 157E                       l3278 1541  
                     l3518 1D27                       l3550 1942                       l3608 1989  
                     l2680 141E                       l2672 1410                       l2664 13FD  
                     l2656 13E3                       l2648 13AF                       l2592 1263  
                     l2584 1247                       l2576 122D                       l2568 120D  
                     l2840 0C74                       l2824 0C12                       l2832 0C43  
                     l2816 0BF1                       l2808 0BE2                       l2760 09B9  
                     l2752 099B                       l2744 0984                       l2736 0975  
                     l2728 0960                       l2488 1AAD                       l2904 0D97  
                     l3480 0576                       l3472 0555                       l3464 0529  
                     l3448 04EB                       l3392 022A                       l3384 01F3  
                     l3368 0138                       l3456 0503                       l3296 1599  
                     l3288 1582                       l3560 194D                       l3552 1946  
                     l3640 1A07                       l2690 1447                       l2682 1424  
                     l2666 1406                       l2674 1412                       l2594 1269  
                     l2586 124F                       l2578 1233                       l2850 0C94  
                     l2842 0C76                       l2834 0C50                       l2826 0C20  
                     l2818 0C05                       l2770 0A47                       l2762 09C6  
                     l2754 09A0                       l2746 098C                       l2738 0979  
                     l2498 1A3E                       l2922 0F44                       l2906 0D9E  
                     l2914 0E53                       l3490 059B                       l3482 057A  
                     l3474 055B                       l3466 0538                       l3458 0509  
                     l3394 0231                       l3386 01FD                       l3298 15B5  
                     l3570 1954                       l3562 194E                       l3554 1947  
                     l3650 1A20                       l3642 1A0C                       l2860 1964  
                     l3580 1B4C                       l2692 144B                       l2668 1409  
                     l2676 1417                       l2596 126F                       l2588 1255  
                     l2844 0C84                       l2836 0C5B                       l2828 0C24  
                     l2780 0AA9                       l2772 0A63                       l2764 09E3  
                     l2748 098E                       l2940 190B                       l2932 18FC  
                     l2924 0F4B                       l2916 0E5A                       l3492 05A2  
                     l3484 0585                       l3476 055F                       l3468 0541  
                     l3396 023A                       l3388 0218                       l3572 1955  
                     l3564 194F                       l3556 194B                       l3548 193C  
                     l3652 1A25                       l3644 1A11                       l3574 18F0  
                     l2862 196F                       l2854 195A                       l3582 1B52  
                     l2694 146B                       l2686 1430                       l2678 141A  
                     l2598 1277                       l2950 10D3                       l2846 0C88  
                     l2838 0C6A                       l2790 0B39                       l2782 0AC6  
                     l2774 0A6C                       l2766 09FF                       l2758 09A9  
                     l2934 18FD                       l3494 05A6                       l3486 0591  
                     l3478 056D                       l3566 1952                       l3558 194C  
                     l2870 1931                       l3590 1B06                       l3654 1A2F  
                     l3646 1A16                       l3576 18F2                       l2856 195B  
                     l3584 1B5C                       l2696 147A                       l2688 1437  
                     l2960 10FB                       l2944 10B7                       l2848 0C89  
                     l2792 0B66                       l2784 0ADF                       l2776 0A7C  
                     l2768 0A2B                       l2936 1903                       l2928 0FD3  
                     l3496 05B2                       l3488 0595                       l3568 1953  
                     l2872 1938                       l2864 1927                       l3592 1B12  
                     l3648 1A1B                       l3578 18F5                       l2858 1961  
                     l3586 1B6C                       l2698 147F                       l2970 1127  
                     l2962 10FD                       l2946 10CA                       l2794 0B8C  
                     l2786 0AFC                       l2778 0A99                       l2882 06F9  
                     l2874 05E4                       l2938 1909                       l3498 05BE  
                     l3754 1D2F                       l2866 1928                       l3594 1B1D  
                     l3588 1B72                       l2972 1128                       l2964 1106  
                     l2956 10E6                       l2796 0BB4                       l2788 0B29  
                     l2884 06FF                       l2876 05EA                       l2892 0CA0  
                     l3756 15AD                       l2868 192E                       l3596 1B34  
                     l2990 115B                       l2982 1142                       l2974 1130  
                     l2966 110F                       l2958 10EC                       l2798 0BBD  
                     l2894 0CA4                       l3598 1B40                       l2992 116B  
                     l2976 113A                       l2984 1154                       l2968 111D  
                     l2888 07AA                       l2896 0CA6                       l2898 0CAD  
                     l2996 087E                       l2998 088B                       STR_1 18AD  
                     STR_2 18B1                       STR_3 18B5                       STR_4 18A0  
                     u3000 1CCB                       u3001 1CCA                       u3100 1ABB  
                     u3020 1CDE                       u3101 1ABA                       u3021 1CDD  
                     u3005 1CC7                       u3110 1A46                       u3030 1CE3  
                     u3111 1A45                       u3031 1CE2                       u3015 1CD2  
                     u3200 11C1                       u3040 1A84                       u4000 05EA  
                     u3201 11C0                       u3041 1A83                       u4001 05E9  
                     u3210 11D2                       u3130 1A58                       u3211 11D1  
                     u3131 1A57                       u3300 12D6                       u3220 11DC  
                     u3060 1A96                       u3140 1A62                       u3301 12D5  
                     u3221 11DB                       u3061 1A95                       u3141 1A61  
                     u3125 1A4A                       u3230 11E1                       u3231 11E0  
                     u3055 1A88                       u4015 0607                       u3400 1369  
                     u3320 12F1                       u3240 1201                       u5000 1FC9  
                     u3080 1AA7                       u3160 1A75                       u4040 06FF  
                     u3401 1368                       u3321 12F0                       u3241 1200  
                     u5001 1FC8                       u3081 1AA6                       u3161 1A74  
                     u3145 1A5E                       u4041 06FE                       u4025 0663  
                     u4105 0CCF                       u3330 12F5                       u3250 1205  
                     u3170 118D                       u5010 1FCD                       u4210 0F4B  
                     u4130 0D9E                       u3411 1380                       u3403 1365  
                     u3331 12F4                       u3315 12DC                       u3251 1204  
                     u3171 118C                       u5011 1FCC                       u3075 1A97  
                     u3155 1A69                       u4035 06B8                       u4211 0F4A  
                     u4131 0D9D                       u4115 0D0B                       u3500 1417  
                     u3420 1394                       u3412 1381                       u3340 12FA  
                     u3260 1297                       u3180 1197                       u5020 1FE2  
                     u4300 111D                       u5100 14C4                       u3501 1416  
                     u3421 1395                       u3413 1386                       u3341 12F9  
                     u3261 1296                       u3181 1196                       u4301 111C  
                     u3085 1AA3                       u4205 0F03                       u4125 0D56  
                     u5101 14C3                       u3510 141E                       u3430 13B4  
                     u3422 139A                       u3414 1387                       u3270 12A2  
                     u3190 119C                       u5030 1FF2                       u5110 14E4  
                     u3511 141D                       u3431 13B3                       u3423 139B  
                     u3415 138C                       u3351 1310                       u3271 12A0  
                     u3191 119B                       u5031 1FF1                       u3095 1AAF  
                     u4055 071C                       u5111 14E3                       u3600 1490  
                     u3520 1424                       u3440 13DC                       u3416 138D  
                     u3360 1322                       u3352 1317                       u3280 12A3  
                     u5040 1FF6                       u4400 088B                       u4320 1136  
                     u4080 0CA4                       u5200 175A                       u5120 1532  
                     u3601 148F                       u3521 1423                       u3441 13DB  
                     u3361 1321                       u3353 131E                       u3265 1293  
                     u5041 1FF5                       u5025 1FDD                       u4401 088A  
                     u4321 1135                       u4305 1119                       u4065 0769  
                     u4225 0F5E                       u4145 0DB1                       u4081 0CA3  
                     u5201 1759                       u5121 1531                       u3610 1495  
                     u3530 142F                       u3450 13E3                       u3370 1328  
                     u3290 12C1                       u4410 089F                       u4330 113A  
                     u4250 1903                       u4170 0E5A                       u4090 0CAD  
                     u5210 178C                       u5130 1540                       u5050 1999  
                     u3611 1494                       u3531 142E                       u3451 13E2  
                     u3371 1327                       u3291 12C0                       u4411 089E  
                     u4331 1139                       u4315 1129                       u4075 07B5  
                     u4251 1902                       u4235 0F9A                       u4171 0E59  
                     u4155 0DED                       u4091 0CAC                       u5211 178B  
                     u5131 153F                       u5051 1998                       u3620 14B0  
                     u3540 1437                       u3380 133D                       u4500 0922  
                     u4340 1141                       u2820 19EE                       u3700 09A0  
                     u4260 1909                       u5300 01FD                       u5220 17A3  
                     u5140 1592                       u5060 19AB                       u3621 14AF  
                     u3541 1436                       u3381 133C                       u4501 0921  
                     u4341 1140                       u2821 19ED                       u3701 099F  
                     u4261 1908                       u4245 0FD6                       u4165 0E29  
                     u5301 01FC                       u5221 17A2                       u5141 1591  
                     u5061 19AA                       u3550 144B                       u3470 13FD  
                     u4430 08E0                       u4270 10CA                       u3630 094D  
                     u2910 1DF9                       u5310 0218                       u5230 002D  
                     u5150 15C3                       u5070 1ACF                       u3551 144A  
                     u3471 13FC                       u4431 08DF                       u4271 10C9  
                     u3711 09F1                       u3631 094C                       u2911 1DF8  
                     u5311 0217                       u5231 17FA                       u5151 15C0  
                     u3560 145A                       u3480 1406                       u4520 0933  
                     u4360 1153                       u4280 10E4                       u2840 1A02  
                     u3712 09F8                       u3640 0953                       u5320 022A  
                     u5240 0056                       u5160 15C7                       u5080 1AF3  
                     u3481 1405                       u3465 13F0                       u4521 0932  
                     u4425 08C7                       u4361 1152                       u4281 10E3  
                     u2841 1A01                       u3801 0B1B                       u3721 0A0D  
                     u3713 09FF                       u3641 0952                       u2905 1DE9  
                     u4185 0E7C                       u5321 0229                       u5241 0055  
                     u5225 179F                       u5161 15C6                       u3570 146B  
                     u3490 1410                       u4610 1D8C                       u4530 19BF  
                     u4450 08FE                       u4370 115A                       u3802 0B22  
                     u3722 0A14                       u3650 0958                       u2930 1E0D  
                     u2850 1DBA                       u5330 024C                       u5250 007D  
                     u5170 1604                       u5090 1B05                       u3571 146A  
                     u3491 140F                       u3395 1343                       u4611 1D8B  
                     u4531 19BE                       u4515 0925                       u4451 08FD  
                     u4435 08DC                       u4371 1159                       u4355 1143  
                     u2835 19F5                       u3811 0B48                       u3803 0B29  
                     u3731 0A39                       u3723 0A1B                       u3651 0957  
                     u2931 1E0C                       u2915 1DF5                       u2851 1DB9  
                     u4195 0EB8                       u5331 024B                       u5251 007C  
                     u5235 17F5                       u5171 1603                       u5091 1B04  
                     u3580 147A                       u4460 0902                       u3900 0BEC  
                     u3820 0B72                       u3812 0B4F                       u3732 0A40  
                     u3660 0979                       u2940 1E12                       u2860 1DC5  
                     u5500 055F                       u5420 04EA                       u5340 025A  
                     u5260 008C                       u5180 1668                       u4701 1060  
                     u3581 1479                       u3565 1455                       u4605 1D73  
                     u4461 0901                       u4445 08F1                       u3901 0BEB  
                     u3813 0B56                       u3741 0A55                       u3733 0A47  
                     u3661 0978                       u2941 1E11                       u2925 1E01  
                     u2861 1DC4                       u5501 055E                       u5421 04E9  
                     u5405 03E5                       u5341 0259                       u5261 008B  
                     u5181 1667                       u4710 1079                       u4702 1061  
                     u3590 147F                       u4630 1DAA                       u4470 0909  
                     u4390 116B                       u3910 0BF1                       u3742 0A5C  
                     u3670 097F                       u2870 1DD6                       u2950 1C99  
                     u5510 056D                       u5430 0502                       u5270 00B5  
                     u5190 16C3                       u4711 1078                       u4703 1066  
                     u3591 147E                       u4631 1DA9                       u4615 1D88  
                     u4471 0908                       u4391 116A                       u4295 1108  
                     u3911 0BF0                       u3831 0B7E                       u3743 0A63  
                     u3671 097E                       u2871 1DD5                       u2951 1C98  
                     u5511 056C                       u5431 0501                       u5415 048B  
                     u5335 0248                       u5271 00B4                       u5191 16C2  
                     u4640 1BB2                       u4704 1067                       u4800 0855  
                     u4560 19D9                       u3920 0C05                       u3840 0B9A  
                     u3832 0B85                       u3680 0984                       u2960 1CA4  
                     u5520 0585                       u5440 0509                       u5360 0313  
                     u4641 1BB1                       u4721 1088                       u4705 106C  
                     u4801 0854                       u4625 1D9C                       u4561 19D8  
                     u4545 19C6                       u4385 115D                       u3921 0C04  
                     u3833 0B8C                       u3825 0B6D                       u3761 0A8B  
                     u3681 0983                       u2961 1CA3                       u5521 0584  
                     u5441 0508                       u5361 0312                       u5265 0088  
                     u4650 1BCE                       u4730 10B3                       u4722 1089  
                     u4706 106D                       u4810 085C                       u4570 1D5D  
                     u4490 091B                       u3930 0C0C                       u3762 0A92  
                     u3690 099B                       u2890 1DE8                       u2970 1CAF  
                     u5530 059B                       u5450 0511                       u5370 0334  
                     u5290 01F2                       u4651 1BCD                       u4731 10B2  
                     u4723 108E                       u4811 085B                       u4571 1D5C  
                     u4555 19CD                       u4491 091A                       u3931 0C0B  
                     u3851 0BA6                       u3771 0AB8                       u3763 0A99  
                     u3755 0A65                       u3691 099A                       u2891 1DE7  
                     u2971 1CAE                       u5531 059A                       u5515 0569  
                     u5451 0510                       u5371 0333                       u5355 0269  
                     u5291 01F1                       u4660 1BE8                       u4724 108F  
                     u4740 1010                       u4900 1C89                       u3940 0C12  
                     u3852 0BAD                       u3772 0ABF                       u5540 05B2  
                     u5460 0522                       u5380 0343                       u4661 1BE7  
                     u4725 1094                       u4741 100F                       u4901 1C88  
                     u4485 090B                       u3941 0C11                       u3853 0BB4  
                     u3845 0B95                       u3773 0AC6                       u2885 1DDA  
                     u5541 05B1                       u5525 0581                       u5461 0521  
                     u5381 0342                       u5285 01BF                       u4726 1095  
                     u4670 1029                       u4830 086D                       u4750 080F  
                     u4590 1D71                       u4910 1F4C                       u3950 0C24  
                     u2990 1CC1                       u5550 05BE                       u5470 0538  
                     u5390 035E                       u4735 10AF                       u4671 1028  
                     u4831 086C                       u4751 080E                       u4591 1D70  
                     u4911 1F4B                       u3951 0C23                       u3791 0AEE  
                     u2991 1CC0                       u5551 05BD                       u5471 0537  
                     u5391 035D                       u5375 0330                       u5295 01EE  
                     u4680 1045                       u4840 0872                       u4760 0826  
                     u4920 1F50                       u3960 0C33                       u3880 0BD8  
                     u3792 0AF5                       u5560 05DC                       u5480 0549  
                     u4665 1BE4                       u4681 1044                       u4841 0871  
                     u4825 085F                       u4585 1D62                       u4921 1F4F  
                     u3881 0BD7                       u3865 0BB6                       u3793 0AFC  
                     u3785 0AC8                       u2985 1CB3                       u5561 05D9  
                     u5481 0548                       u5465 051E                       u5385 033F  
                     u5570 1979                       u4690 1051                       u4770 083C  
                     u4850 1C46                       u4930 1F70                       u3970 0C50  
                     u5490 0555                       u5571 1978                       u4691 1050  
                     u4771 083B                       u4851 1C45                       u4931 1F6F  
                     u3971 0C4F                       u3875 0BCD                       u5491 0554  
                     u5475 0534                       u5580 197F                       u4780 0843  
                     u3980 0C6A                       i1l93 1E7E                       u5581 197E  
                     u4781 0842                       u4765 0821                       u3981 0C69  
                     u3965 0C2E                       u5637 1935                       i1l94 1E7F  
                     u4870 1C5A                       u4950 1F91                       u3990 0C88  
                     u5647 1B58                       u4871 1C59                       u4951 1F90  
                     u3991 0C87                       u3975 0C4C                       u3895 0BDB  
                     u4880 1C6C                       u5657 1B68                       u4881 1C6B  
                     u4865 1C4B                       u4945 1F83                       u3985 0C66  
                     u4970 1FB3                       u5667 1B78                       u4795 0845  
                     u4971 1FB2                       u5677 196A                       u4885 1C68  
                     u4965 1FA5                       u4990 1FC3                       u4895 1C7B  
                     u4991 1FC2                       u4985 1FB8                       _data 0190  
        ?_Lcd_Write_String 0023                       _main 1A07                       btemp 007E  
 __end_of_Config_INTERRUPT 18F9                       start 000E         ??_Lcd_Write_String 0025  
             _sprintf$1070 00B6            __end_of_Lcd_Cmd 1973                      ??_ADC 0073  
                    ??_ISR 0073              ___fltol@sign1 0066            __end_of___fladd 14B4  
                    ?_main 0070            __end_of___awdiv 1E1C            __end_of___flneg 1013  
          __end_of___awmod 1CED            __end_of___flmul 0C9D            __end_of___flsub 1C3C  
          __end_of___fltol 087E                      _ANSEL 0188            __end_of___lldiv 1DB3  
          ___awdiv@divisor 0027            __end_of___llmod 1C92            __end_of___lwdiv 1AC0  
                    i1l211 1E8A                      i1l220 1EC2                      i1l221 1EC9  
                    i1l213 1E91                      i1l222 1ED0                      i1l214 1E98  
                    i1l223 1ED7                      i1l215 1E9F                      i1l224 1EDE  
                    i1l216 1EA6                      i1l225 1EE5                      i1l217 1EAD  
                    i1l226 1EEC                      i1l218 1EB4                      i1l227 1EF3  
                    i1l219 1EBB                      i1l228 1EFA                      i1l229 1F43  
          __end_of___lwmod 1A7A                      i1l198 07FC            ___awdiv@counter 002C  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0026  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089           ADC_Config@AN_num 0072  
          __end_of_dpowers 18A0            __end_of_initOsc 1D4B                      _mapeo 190D  
                    _scale 0C9D            __end_of_isdigit 190D                      _setup 193C  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 05E1           __end_of_Lcd_Init 1B9C           __end_of_Lcd_Port 1006  
          __initialization 0011               __end_of_main 1A3E                     ??_main 006F  
     __size_of__tdiv_to_l_ 00BD                     _ADCON1 009F                     ?_mapeo 0070  
         ___llmod@dividend 0024                     ?_scale 004A                     _ADRESH 001E  
                   _ADRESL 009E                initOsc@IRCF 0022           ___awdiv@dividend 0029  
                   ?_setup 0070                     _ANSELH 0189               ??_ADC_Config 0070  
                   i1l3530 1F01                     i1l3532 1F3B                     i1l3620 1E31  
                   i1l3534 1F3E                     i1l3526 1E89                     i1l3630 1E56  
                   i1l3622 1E35                     i1l3614 1E1C                     i1l3544 07EE  
                   i1l3536 1F41                     i1l3632 1E5F                     i1l3624 1E47  
                   i1l3616 1E22                     i1l3538 1F42                     i1l3634 1E63  
                   i1l3626 1E4B                     i1l3618 1E28                     i1l3636 1E75  
                   i1l3628 1E50                     i1l3638 1E79                     i1l3758 1F09  
                   _INTCON 000B                     u560_20 1E50                     u560_21 1E4F  
                   u561_20 1E7E                     u561_21 1E7D                     u559_20 1E22  
                   u559_21 1E21                  ??_Lcd_Cmd 0021                     u568_27 1E2C  
                   u569_27 1E5A                     _S1_val 00DD                     _S2_val 00DB  
  __size_of_Lcd_Write_Char 0018           __end_of___xxtofl 2000           __end_of__powers_ 1844  
                   ___flge 1013                     ___fleq 1B9C                  ??___fladd 0066  
                   ___wmul 19B7                  ??___awdiv 002B                  ??___flneg 0024  
                ??___awmod 0024                  ??___flmul 0038                  ??___flsub 006E  
                ??___fltol 0061                  ??___lldiv 0028                  ??___llmod 0028  
                ??___lwdiv 002A                  ??___lwmod 0024                     _fround 05E1  
         ___awdiv@quotient 002E            ___awmod@divisor 0020            ___awmod@counter 0025  
       __end_of_ADC_Config 1F44                  ??_initOsc 0020                  ??_isdigit 0020  
       __size_of__Umul8_16 0029                     saved_w 007E                  ??_sprintf 00B1  
               ADC@ADRESH_ 0070                 ADC@ADRESL_ 0070            Lcd_Set_Cursor@a 0026  
          Lcd_Set_Cursor@b 0024                 ___flge@ff1 0020                 ___flge@ff2 0024  
             ___xxtofl@arg 002A               ___xxtofl@exp 0029               ___xxtofl@val 0020  
               ___fleq@ff1 0020                 ___fleq@ff2 0024    __end_of__initialization 0029  
               ___flneg@f1 0020                 ___fltol@f1 005D             __pcstackCOMMON 0070  
            __end_of_mapeo 1924              __end_of_scale 1000              __end_of_setup 1957  
           _Lcd_Set_Cursor 1991                 __div_to_l_ 087E               ?_titulos_LCD 0070  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070            __div_to_l_@exp1 002E  
                  ??_mapeo 006E            __div_to_l_@cntr 002D                    ??_scale 004E  
          __div_to_l_@quot 0029               sprintf@width 00C1                    ??_setup 0023  
               __pbssBANK1 00D1                 __pbssBANK3 0190    __size_of_CONVERSION_ADC 001E  
            __div_to_l_@f1 0020              __div_to_l_@f2 0024          ?_Config_INTERRUPT 0070  
        __end_of__Umul8_16 1A07                 __pmaintext 1A07         ??_Config_INTERRUPT 0020  
                  ?___flge 0020                    ?___fleq 0020                    ?___wmul 0020  
               __pintentry 0004                    ?_fround 004A  __size_of_Lcd_Write_String 0046  
   __end_of_Lcd_Set_Cursor 19B7                  ?___xxtofl 0020                    _S3_cont 007C  
               ??_Lcd_Init 0024                 ??_Lcd_Port 0020                 __stringtab 1800  
           _Lcd_Write_Char 1924                    _Lcd_Cmd 1957          __end_of__npowers_ 1878  
               _scale$1069 0058                  _ADC_flag1 007A                  _ADC_flag2 0078  
          __size_of___flge 00A4            __size_of___fleq 0050                    ___fladd 1174  
                  ___awdiv 1DB3                    ___flneg 1006                    ___awmod 1C92  
                  ___flmul 093C                    ___flsub 1BEC                    ___fltol 0802  
                  ___lldiv 1D4B            __size_of___wmul 0027                    ___llmod 1C3C  
                  ___lwdiv 1A7A                    ___lwmod 1A3E            __size_of_fround 020D  
          ?_Lcd_Set_Cursor 0024                    __ptext1 1B06                    __ptext2 1AC0  
                  __ptext3 1924                    __ptext4 1991                    __ptext5 193C  
                  __ptext6 1CED                    __ptext7 190D                    __ptext8 14B4  
                  __ptext9 0C9D               __size_of_ADC 000F               __size_of_ISR 006C  
              ?__div_to_l_ 0020                    _dpowers 1878                    _initOsc 1CED  
                  _isdigit 18F9                 ??___xxtofl 0024           ___awmod@dividend 0022  
                  _sprintf 14B4                    clrloop0 18E9     __end_of_Lcd_Write_Char 193C  
     end_of_initialization 0029            ___lldiv@divisor 0020            ___lldiv@counter 002D  
                  psplit$0 130033                  Lcd_Port@a 0020             __tdiv_to_l_@f1 0020  
           __tdiv_to_l_@f2 0024              ??__tdiv_to_l_ 0028                  _PORTEbits 0009  
              ___fladd@grs 00A3              ___xxtofl@sign 0028       __size_of_titulos_LCD 0046  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0023          Lcd_Write_String@i 0028  
           _CONVERSION_ADC 1973                ___flmul@grs 003E        __size_of__div_to_l_ 00BE  
           __end_of___flge 10B7             __end_of___fleq 1BEC                _ADC_VALOR_1 00E1  
              _ADC_VALOR_2 00DF             __end_of___wmul 19DE           _Lcd_Write_String 1AC0  
           __end_of_fround 07EE        start_initialization 0011                __end_of_ADC 07FD  
              __end_of_ISR 1E88        __end_of__tdiv_to_l_ 1174     __end_of_CONVERSION_ADC 1991  
        __size_of_Lcd_Init 0050          pnum$text8_split_1 0033          __size_of_Lcd_Port 0006  
          ___llmod@divisor 0020            ___llmod@counter 0029                   ??___flge 0028  
                 ??___fleq 0028                   ??___wmul 0024                  __Umul8_16 19DE  
          Lcd_Write_Char@a 0022                   ??_fround 004E              sprintf@tmpval 00C3  
                ___fladd@a 0062                  ___fladd@b 005E                 fround@prec 005D  
__size_of_Config_INTERRUPT 0009                  ___flmul@a 0034                  ___flmul@b 0030  
              __pbssCOMMON 0078                  ___flsub@a 00A4                  ___flsub@b 00A8  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BC            ?_CONVERSION_ADC 0070                   ?_Lcd_Cmd 0070  
              sprintf@flag 00BF                sprintf@eexp 00C7                sprintf@fval 00C9  
              sprintf@prec 00CE           ___lwdiv@dividend 0028           ??_Lcd_Set_Cursor 0025  
                 ?___fladd 005E                   ?___awdiv 0027                   ?___flneg 0020  
                 ?___awmod 0020                   ?___flmul 0030                   ?___flsub 00A4  
                 ?___fltol 005D                   ?___lldiv 0020                   ?___llmod 0020  
                __npowers_ 1844                 ?__Umul8_16 0020                   ?___lwdiv 0026  
                 ?___lwmod 0020                  __pstrings 1800                __tdiv_to_l_ 10B7  
             ??__div_to_l_ 0028                   ?_initOsc 0070                   ?_isdigit 0070  
         ___lwdiv@quotient 002B                   ?_sprintf 00AC             __size_of_mapeo 0017  
           __size_of_scale 0363             __size_of_setup 001B          interrupt_function 0004  
           ___wmul@product 0024                  clear_ram0 18E8                   _PIE1bits 008C  
                 Lcd_Cmd@a 0023                   _PIR1bits 000C         __end_of__div_to_l_ 093C  
                 _VAL_SWAP 00D5                 _ADCON0bits 001F                __stringbase 180F  
        ___wmul@multiplier 0020           ??_Lcd_Write_Char 0021                   _Lcd_Init 1B4C  
                 _Lcd_Port 1000                 _ADC_Config 1E88   __end_of_Lcd_Write_String 1B06  
         __size_of_Lcd_Cmd 001C                ??__Umul8_16 0022           __size_of___fladd 0340  
         __size_of___awdiv 0069           __size_of___flneg 000D           __size_of___awmod 005B  
         __size_of___flmul 0361           __size_of___flsub 0050           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___llmod 0056           __size_of___lwdiv 0046  
         __size_of___lwmod 003C                _fround$1067 0059                _fround$1068 0055  
       __end_of__stringtab 1810                _isdigit$878 0020           _Config_INTERRUPT 18F0  
               sprintf@val 00BB                   ___xxtofl 1F44              ??_titulos_LCD 002A  
         __size_of_initOsc 005E           __size_of_isdigit 0014            ___lwdiv@divisor 0026  
          ___lwdiv@counter 002D                   __ptext10 1C92                   __ptext11 1DB3  
                 __ptext20 1F44                   __ptext12 18F9                   __ptext21 19B7  
                 __ptext13 05E1                   __ptext30 1B4C                   __ptext22 1C3C  
                 __ptext14 1A3E                   __ptext31 1957                   __ptext23 1D4B  
                 __ptext15 1A7A                   __ptext32 1000                   __ptext24 0802  
                 __ptext16 093C                   __ptext33 18F0                   __ptext25 1BEC  
                 __ptext17 19DE                   __ptext34 1973                   __ptext26 1174  
                 __ptext18 10B7                   __ptext35 1E1C                   __ptext27 1006  
                 __ptext19 087E                   __ptext36 1E88                   __ptext28 1013  
                 __ptext37 07EE                   __ptext29 1B9C                   __powers_ 1810  
         __size_of_sprintf F12D              __size_of_main 0037                  pnum$text8 0013  
         ??_CONVERSION_ADC 0020                _VAL_NIBBLE1 00D3                _VAL_NIBBLE2 00D1  
                 isdigit@c 0021                   scale@scl 005C                   intlevel1 0000  
                sprintf@ap 00BA           __tdiv_to_l_@exp1 0031           __tdiv_to_l_@cntr 0030  
                sprintf@sp 00CD                ?_ADC_Config 0070        __end_of_titulos_LCD 1B4C  
         __tdiv_to_l_@quot 002C           ___lwmod@dividend 0022           ___lldiv@dividend 0024  
                stringcode 180A                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 0027  
             ?__tdiv_to_l_ 0020     __Umul8_16@multiplicand 0020                   sprintf@c 00D0  
                 sprintf@f 00AC           ___lldiv@quotient 0029            ___lwmod@divisor 0020  
          ___lwmod@counter 0025                   stringdir 180A                   stringtab 1800  
            ___fladd@signs 00A0               ___fladd@aexp 00A1               ___fladd@bexp 00A2  
     __Umul8_16@multiplier 0028          __Umul8_16@product 0024  
