

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 10 22:43:52 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0009                     _PORTEbits	set	9
   458  000B                     _INTCON	set	11
   459  0009                     _PORTE	set	9
   460  0008                     _PORTD	set	8
   461  0005                     _PORTA	set	5
   462  0007                     _PORTC	set	7
   463  0006                     _PORTB	set	6
   464  001E                     _ADRESH	set	30
   465  001F                     _ADCON0bits	set	31
   466  000C                     _PIR1bits	set	12
   467  009F                     _ADCON1	set	159
   468  008F                     _OSCCONbits	set	143
   469  008C                     _PIE1bits	set	140
   470  0089                     _TRISE	set	137
   471  0088                     _TRISD	set	136
   472  0087                     _TRISC	set	135
   473  0086                     _TRISB	set	134
   474  0085                     _TRISA	set	133
   475  009E                     _ADRESL	set	158
   476  0189                     _ANSELH	set	393
   477  0188                     _ANSEL	set	392
   478                           
   479                           	psect	strings
   480  03D0                     __pstrings:
   481  03D0                     stringtab:
   482  03D0                     __stringtab:
   483  03D0                     stringcode:	
   484                           ;	String table - string pointers are 1 byte each
   485                           
   486  03D0                     stringdir:
   487  03D0  3003               	movlw	high stringdir
   488  03D1  008A               	movwf	10
   489  03D2  0804               	movf	4,w
   490  03D3  0A84               	incf	4,f
   491  03D4  0782               	addwf	2,f
   492  03D5                     __stringbase:
   493  03D5  3400               	retlw	0
   494  03D6                     __end_of__stringtab:
   495  03D6                     STR_1:
   496  03D6  3453               	retlw	83	;'S'
   497  03D7  3431               	retlw	49	;'1'
   498  03D8  343A               	retlw	58	;':'
   499  03D9  3400               	retlw	0
   500  03DA                     STR_2:
   501  03DA  3453               	retlw	83	;'S'
   502  03DB  3432               	retlw	50	;'2'
   503  03DC  343A               	retlw	58	;':'
   504  03DD  3400               	retlw	0
   505  03DE                     STR_3:
   506  03DE  3453               	retlw	83	;'S'
   507  03DF  3433               	retlw	51	;'3'
   508  03E0  343A               	retlw	58	;':'
   509  03E1  3400               	retlw	0
   510                           
   511                           	psect	cinit
   512  0011                     start_initialization:	
   513                           ; #config settings
   514                           
   515  0011                     __initialization:
   516                           
   517                           ; Clear objects allocated to COMMON
   518  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   519  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   520  0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   521  0014  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   522  0015  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   523  0016  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   524                           
   525                           ; Clear objects allocated to BANK0
   526  0017  1383               	bcf	3,7	;select IRP bank0
   527  0018  3020               	movlw	low __pbssBANK0
   528  0019  0084               	movwf	4
   529  001A  3032               	movlw	low (__pbssBANK0+18)
   530  001B  120A  118A  23F8  120A  118A  	fcall	clear_ram0
   531  0020                     end_of_initialization:	
   532                           ;End of C runtime variable initialization code
   533                           
   534  0020                     __end_of__initialization:
   535  0020  0183               	clrf	3
   536  0021  120A  118A  2A98   	ljmp	_main	;jump to C main() function
   537                           
   538                           	psect	bssCOMMON
   539  0078                     __pbssCOMMON:
   540  0078                     _ADC_flag1:
   541  0078                     	ds	2
   542  007A                     _ADC_VALOR_1:
   543  007A                     	ds	2
   544  007C                     _S3_cont:
   545  007C                     	ds	1
   546  007D                     _a:
   547  007D                     	ds	1
   548                           
   549                           	psect	bssBANK0
   550  0020                     __pbssBANK0:
   551  0020                     _VAL_NIBBLE2:
   552  0020                     	ds	2
   553  0022                     _VAL_NIBBLE1:
   554  0022                     	ds	2
   555  0024                     _VAL_SWAP:
   556  0024                     	ds	2
   557  0026                     _VAL:
   558  0026                     	ds	2
   559  0028                     _ADC_flag2:
   560  0028                     	ds	2
   561  002A                     _x:
   562  002A                     	ds	2
   563  002C                     _S2_val:
   564  002C                     	ds	2
   565  002E                     _S1_val:
   566  002E                     	ds	2
   567  0030                     _ADC_VALOR_2:
   568  0030                     	ds	2
   569                           
   570                           	psect	clrtext
   571  03F8                     clear_ram0:	
   572                           ;	Called with FSR containing the base address, and
   573                           ;	W with the last address+1
   574                           
   575  03F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   576  03F9                     clrloop0:
   577  03F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   578  03FA  0A84               	incf	4,f	;increment pointer
   579  03FB  0604               	xorwf	4,w	;XOR with final address
   580  03FC  1903               	btfsc	3,2	;have we reached the end yet?
   581  03FD  3400               	retlw	0	;all done for this memory range, return
   582  03FE  0604               	xorwf	4,w	;XOR again to restore value
   583  03FF  2BF9               	goto	clrloop0	;do the next byte
   584                           
   585                           	psect	cstackCOMMON
   586  0070                     __pcstackCOMMON:
   587  0070                     ?_ADC_Config:
   588  0070                     ??_ADC_Config:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_setup:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_Config_INTERRUPT:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_Lcd_Init:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_titulos_LCD:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_CONVERSION_ADC:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_mapeo:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_Lcd_Write_Char:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_Lcd_Write_String:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_initOsc:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_Lcd_Port:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_Lcd_Cmd:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_ISR:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_main:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_ADC:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ADC@ADRESL_:	
   634                           ; 2 bytes @ 0x0
   635                           
   636  0070                     ADC@ADRESH_:	
   637                           ; 1 bytes @ 0x0
   638                           
   639                           
   640                           ; 1 bytes @ 0x0
   641  0070                     	ds	2
   642  0072                     ADC_Config@AN_num:
   643                           
   644                           ; 1 bytes @ 0x2
   645  0072                     	ds	1
   646  0073                     ??_ADC:
   647  0073                     ??_ISR:	
   648                           ; 1 bytes @ 0x3
   649                           
   650                           
   651                           ; 1 bytes @ 0x3
   652  0073                     	ds	5
   653                           
   654                           	psect	cstackBANK0
   655  0032                     __pcstackBANK0:
   656  0032                     ??_Config_INTERRUPT:
   657  0032                     ??_CONVERSION_ADC:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0032                     ??_initOsc:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0032                     ??_Lcd_Port:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0032                     ?___wmul:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0032                     Lcd_Port@a:	
   670                           ; 2 bytes @ 0x0
   671                           
   672  0032                     ___wmul@multiplier:	
   673                           ; 1 bytes @ 0x0
   674                           
   675                           
   676                           ; 2 bytes @ 0x0
   677  0032                     	ds	1
   678  0033                     ??_Lcd_Write_Char:
   679  0033                     ??_Lcd_Cmd:	
   680                           ; 1 bytes @ 0x1
   681                           
   682                           
   683                           ; 1 bytes @ 0x1
   684  0033                     	ds	1
   685  0034                     initOsc@IRCF:
   686  0034                     Lcd_Write_Char@a:	
   687                           ; 1 bytes @ 0x2
   688                           
   689  0034                     ___wmul@multiplicand:	
   690                           ; 1 bytes @ 0x2
   691                           
   692                           
   693                           ; 2 bytes @ 0x2
   694  0034                     	ds	1
   695  0035                     ??_setup:
   696  0035                     ??_Lcd_Write_String:	
   697                           ; 1 bytes @ 0x3
   698                           
   699  0035                     Lcd_Cmd@a:	
   700                           ; 1 bytes @ 0x3
   701                           
   702  0035                     Lcd_Write_String@i:	
   703                           ; 1 bytes @ 0x3
   704                           
   705                           
   706                           ; 2 bytes @ 0x3
   707  0035                     	ds	1
   708  0036                     ??_Lcd_Init:
   709  0036                     ?_Lcd_Set_Cursor:	
   710                           ; 1 bytes @ 0x4
   711                           
   712  0036                     ??___wmul:	
   713                           ; 1 bytes @ 0x4
   714                           
   715  0036                     Lcd_Set_Cursor@b:	
   716                           ; 1 bytes @ 0x4
   717                           
   718  0036                     ___wmul@product:	
   719                           ; 1 bytes @ 0x4
   720                           
   721                           
   722                           ; 2 bytes @ 0x4
   723  0036                     	ds	1
   724  0037                     ??_Lcd_Set_Cursor:
   725  0037                     Lcd_Write_String@a:	
   726                           ; 1 bytes @ 0x5
   727                           
   728                           
   729                           ; 1 bytes @ 0x5
   730  0037                     	ds	1
   731  0038                     ?___awdiv:
   732  0038                     Lcd_Set_Cursor@a:	
   733                           ; 2 bytes @ 0x6
   734                           
   735  0038                     ___awdiv@divisor:	
   736                           ; 1 bytes @ 0x6
   737                           
   738                           
   739                           ; 2 bytes @ 0x6
   740  0038                     	ds	1
   741  0039                     Lcd_Set_Cursor@temp:
   742                           
   743                           ; 1 bytes @ 0x7
   744  0039                     	ds	1
   745  003A                     ??_titulos_LCD:
   746  003A                     ___awdiv@dividend:	
   747                           ; 1 bytes @ 0x8
   748                           
   749                           
   750                           ; 2 bytes @ 0x8
   751  003A                     	ds	2
   752  003C                     ??___awdiv:
   753                           
   754                           ; 1 bytes @ 0xA
   755  003C                     	ds	1
   756  003D                     ___awdiv@counter:
   757                           
   758                           ; 1 bytes @ 0xB
   759  003D                     	ds	1
   760  003E                     ___awdiv@sign:
   761                           
   762                           ; 1 bytes @ 0xC
   763  003E                     	ds	1
   764  003F                     ___awdiv@quotient:
   765                           
   766                           ; 2 bytes @ 0xD
   767  003F                     	ds	2
   768  0041                     ??_mapeo:
   769  0041                     ??_main:	
   770                           ; 1 bytes @ 0xF
   771                           
   772                           
   773                           	psect	maintext
   774  0298                     __pmaintext:	
   775                           ; 1 bytes @ 0xF
   776 ;;
   777 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   778 ;;
   779 ;; *************** function _main *****************
   780 ;; Defined at:
   781 ;;		line 117 in file "pseudocodigo_lab3.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : B00/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   795 ;;      Params:         0       0       0       0       0
   796 ;;      Locals:         0       0       0       0       0
   797 ;;      Temps:          0       0       0       0       0
   798 ;;      Totals:         0       0       0       0       0
   799 ;;Total ram usage:        0 bytes
   800 ;; Hardware stack levels required when called:    6
   801 ;; This function calls:
   802 ;;		_CONVERSION_ADC
   803 ;;		_Config_INTERRUPT
   804 ;;		_Lcd_Init
   805 ;;		_Lcd_Set_Cursor
   806 ;;		_Lcd_Write_Char
   807 ;;		_mapeo
   808 ;;		_setup
   809 ;;		_titulos_LCD
   810 ;; This function is called by:
   811 ;;		Startup code after reset
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           
   816                           ;psect for function _main
   817  0298                     _main:
   818  0298                     l1341:	
   819                           ;incstack = 0
   820                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   821                           
   822                           
   823                           ;pseudocodigo_lab3.c: 118:     setup();
   824  0298  120A  118A  2383  120A  118A  	fcall	_setup
   825  029D                     l1343:
   826                           
   827                           ;pseudocodigo_lab3.c: 119:     Config_INTERRUPT();
   828  029D  120A  118A  23EF  120A  118A  	fcall	_Config_INTERRUPT
   829  02A2                     l1345:
   830                           
   831                           ;pseudocodigo_lab3.c: 120:     Lcd_Init();
   832  02A2  120A  118A  2211  120A  118A  	fcall	_Lcd_Init
   833                           
   834                           ;pseudocodigo_lab3.c: 121:     titulos_LCD();
   835  02A7  120A  118A  2261  120A  118A  	fcall	_titulos_LCD
   836  02AC                     l1347:
   837                           
   838                           ;pseudocodigo_lab3.c: 129:         CONVERSION_ADC();
   839  02AC  120A  118A  239E  120A  118A  	fcall	_CONVERSION_ADC
   840  02B1                     l1349:
   841                           
   842                           ;pseudocodigo_lab3.c: 130:         mapeo();
   843  02B1  120A  118A  2342  120A  118A  	fcall	_mapeo
   844  02B6                     l1351:
   845                           
   846                           ;pseudocodigo_lab3.c: 132:         Lcd_Set_Cursor(2,1);
   847  02B6  1283               	bcf	3,5	;RP0=0, select bank0
   848  02B7  1303               	bcf	3,6	;RP1=0, select bank0
   849  02B8  01B6               	clrf	Lcd_Set_Cursor@b
   850  02B9  0AB6               	incf	Lcd_Set_Cursor@b,f
   851  02BA  3002               	movlw	2
   852  02BB  120A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
   853  02C0                     l1353:
   854                           
   855                           ;pseudocodigo_lab3.c: 133:         Lcd_Write_Char(S2_val);
   856  02C0  1283               	bcf	3,5	;RP0=0, select bank0
   857  02C1  1303               	bcf	3,6	;RP1=0, select bank0
   858  02C2  082C               	movf	_S2_val,w
   859  02C3  120A  118A  23B8  120A  118A  	fcall	_Lcd_Write_Char
   860  02C8  2AAC               	goto	l1347
   861  02C9  120A  118A  280E   	ljmp	start
   862  02CC                     __end_of_main:
   863                           
   864                           	psect	text1
   865  0261                     __ptext1:	
   866 ;; *************** function _titulos_LCD *****************
   867 ;; Defined at:
   868 ;;		line 166 in file "pseudocodigo_lab3.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   882 ;;      Params:         0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0
   884 ;;      Temps:          0       1       0       0       0
   885 ;;      Totals:         0       1       0       0       0
   886 ;;Total ram usage:        1 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; Hardware stack levels required when called:    5
   889 ;; This function calls:
   890 ;;		_Lcd_Set_Cursor
   891 ;;		_Lcd_Write_String
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           
   898                           ;psect for function _titulos_LCD
   899  0261                     _titulos_LCD:
   900  0261                     l1291:	
   901                           ;incstack = 0
   902                           ; Regs used in _titulos_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   903                           
   904                           
   905                           ;pseudocodigo_lab3.c: 168:         Lcd_Set_Cursor(1,2);
   906  0261  3002               	movlw	2
   907  0262  1283               	bcf	3,5	;RP0=0, select bank0
   908  0263  1303               	bcf	3,6	;RP1=0, select bank0
   909  0264  00BA               	movwf	??_titulos_LCD
   910  0265  083A               	movf	??_titulos_LCD,w
   911  0266  00B6               	movwf	Lcd_Set_Cursor@b
   912  0267  3001               	movlw	1
   913  0268  120A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
   914  026D                     l1293:
   915                           
   916                           ;pseudocodigo_lab3.c: 169:         Lcd_Write_String("S1:");
   917  026D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   918  026E  120A  118A  22CC  120A  118A  	fcall	_Lcd_Write_String
   919  0273                     l1295:
   920                           
   921                           ;pseudocodigo_lab3.c: 170:         Lcd_Set_Cursor(1,8);
   922  0273  3008               	movlw	8
   923  0274  1283               	bcf	3,5	;RP0=0, select bank0
   924  0275  1303               	bcf	3,6	;RP1=0, select bank0
   925  0276  00BA               	movwf	??_titulos_LCD
   926  0277  083A               	movf	??_titulos_LCD,w
   927  0278  00B6               	movwf	Lcd_Set_Cursor@b
   928  0279  3001               	movlw	1
   929  027A  120A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
   930                           
   931                           ;pseudocodigo_lab3.c: 171:         Lcd_Write_String("S2:");
   932  027F  3005               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   933  0280  120A  118A  22CC  120A  118A  	fcall	_Lcd_Write_String
   934  0285                     l1297:
   935                           
   936                           ;pseudocodigo_lab3.c: 172:         Lcd_Set_Cursor(1,13);
   937  0285  300D               	movlw	13
   938  0286  1283               	bcf	3,5	;RP0=0, select bank0
   939  0287  1303               	bcf	3,6	;RP1=0, select bank0
   940  0288  00BA               	movwf	??_titulos_LCD
   941  0289  083A               	movf	??_titulos_LCD,w
   942  028A  00B6               	movwf	Lcd_Set_Cursor@b
   943  028B  3001               	movlw	1
   944  028C  120A  118A  231C  120A  118A  	fcall	_Lcd_Set_Cursor
   945  0291                     l1299:
   946                           
   947                           ;pseudocodigo_lab3.c: 173:         Lcd_Write_String("S3:");
   948  0291  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   949  0292  120A  118A  22CC  120A  118A  	fcall	_Lcd_Write_String
   950  0297                     l109:
   951  0297  0008               	return
   952  0298                     __end_of_titulos_LCD:
   953                           
   954                           	psect	text2
   955  02CC                     __ptext2:	
   956 ;; *************** function _Lcd_Write_String *****************
   957 ;; Defined at:
   958 ;;		line 123 in file "LCD.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  a               1    wreg     PTR unsigned char 
   961 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  a               1    5[BANK0 ] PTR unsigned char 
   964 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
   965 ;;  i               2    3[BANK0 ] int 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   975 ;;      Params:         0       0       0       0       0
   976 ;;      Locals:         0       3       0       0       0
   977 ;;      Temps:          0       0       0       0       0
   978 ;;      Totals:         0       3       0       0       0
   979 ;;Total ram usage:        3 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    4
   982 ;; This function calls:
   983 ;;		_Lcd_Write_Char
   984 ;; This function is called by:
   985 ;;		_titulos_LCD
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           
   990                           ;psect for function _Lcd_Write_String
   991  02CC                     _Lcd_Write_String:
   992                           
   993                           ;incstack = 0
   994                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   995                           ;Lcd_Write_String@a stored from wreg
   996  02CC  1283               	bcf	3,5	;RP0=0, select bank0
   997  02CD  1303               	bcf	3,6	;RP1=0, select bank0
   998  02CE  00B7               	movwf	Lcd_Write_String@a
   999  02CF                     l1149:
  1000                           
  1001                           ;LCD.c: 124:  int i;;LCD.c: 125:  for(i=0;a[i]!='\0';i++)
  1002  02CF  01B5               	clrf	Lcd_Write_String@i
  1003  02D0  01B6               	clrf	Lcd_Write_String@i+1
  1004  02D1  2AE7               	goto	l1155
  1005  02D2                     l1151:
  1006                           
  1007                           ;LCD.c: 126:     Lcd_Write_Char(a[i]);
  1008  02D2  0835               	movf	Lcd_Write_String@i,w
  1009  02D3  0737               	addwf	Lcd_Write_String@a,w
  1010  02D4  0084               	movwf	4
  1011  02D5  120A  118A  23D0  120A  118A  	fcall	stringdir
  1012  02DA  120A  118A  23B8  120A  118A  	fcall	_Lcd_Write_Char
  1013  02DF                     l1153:
  1014  02DF  3001               	movlw	1
  1015  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1016  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1017  02E2  07B5               	addwf	Lcd_Write_String@i,f
  1018  02E3  1803               	skipnc
  1019  02E4  0AB6               	incf	Lcd_Write_String@i+1,f
  1020  02E5  3000               	movlw	0
  1021  02E6  07B6               	addwf	Lcd_Write_String@i+1,f
  1022  02E7                     l1155:
  1023  02E7  0835               	movf	Lcd_Write_String@i,w
  1024  02E8  0737               	addwf	Lcd_Write_String@a,w
  1025  02E9  0084               	movwf	4
  1026  02EA  120A  118A  23D0  120A  118A  	fcall	stringdir
  1027  02EF  3A00               	xorlw	0
  1028  02F0  1D03               	skipz
  1029  02F1  2AF3               	goto	u261
  1030  02F2  2AF4               	goto	u260
  1031  02F3                     u261:
  1032  02F3  2AD2               	goto	l1151
  1033  02F4                     u260:
  1034  02F4                     l171:
  1035  02F4  0008               	return
  1036  02F5                     __end_of_Lcd_Write_String:
  1037                           
  1038                           	psect	text3
  1039  03B8                     __ptext3:	
  1040 ;; *************** function _Lcd_Write_Char *****************
  1041 ;; Defined at:
  1042 ;;		line 107 in file "LCD.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  a               1    wreg     unsigned char 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  a               1    2[BANK0 ] unsigned char 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0, pclath, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       0       0       0       0
  1057 ;;      Locals:         0       1       0       0       0
  1058 ;;      Temps:          0       1       0       0       0
  1059 ;;      Totals:         0       2       0       0       0
  1060 ;;Total ram usage:        2 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; Hardware stack levels required when called:    3
  1063 ;; This function calls:
  1064 ;;		_Lcd_Port
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;;		_Lcd_Write_String
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           
  1072                           ;psect for function _Lcd_Write_Char
  1073  03B8                     _Lcd_Write_Char:
  1074                           
  1075                           ;incstack = 0
  1076                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1077                           ;Lcd_Write_Char@a stored from wreg
  1078  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  1079  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  1080  03BA  00B4               	movwf	Lcd_Write_Char@a
  1081  03BB                     l1117:
  1082                           
  1083                           ;LCD.c: 111:    PORTEbits.RE0 = 1;
  1084  03BB  1409               	bsf	9,0	;volatile
  1085  03BC                     l1119:
  1086                           
  1087                           ;LCD.c: 112:    Lcd_Port(a);
  1088  03BC  0834               	movf	Lcd_Write_Char@a,w
  1089  03BD  120A  118A  2400  120A  118A  	fcall	_Lcd_Port
  1090  03C2                     l1121:
  1091                           
  1092                           ;LCD.c: 113:    PORTEbits.RE2 = 1;
  1093  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  1094  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  1095  03C4  1509               	bsf	9,2	;volatile
  1096  03C5                     l1123:
  1097                           
  1098                           ;LCD.c: 114:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1099  03C5  3019               	movlw	25
  1100  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  1101  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  1102  03C8  00B3               	movwf	??_Lcd_Write_Char
  1103  03C9                     u477:
  1104  03C9  0BB3               	decfsz	??_Lcd_Write_Char,f
  1105  03CA  2BC9               	goto	u477
  1106  03CB  2BCC               	nop2
  1107  03CC                     l1125:
  1108                           
  1109                           ;LCD.c: 115:    PORTEbits.RE2 = 0;
  1110  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  1111  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  1112  03CE  1109               	bcf	9,2	;volatile
  1113  03CF                     l165:
  1114  03CF  0008               	return
  1115  03D0                     __end_of_Lcd_Write_Char:
  1116                           
  1117                           	psect	text4
  1118  031C                     __ptext4:	
  1119 ;; *************** function _Lcd_Set_Cursor *****************
  1120 ;; Defined at:
  1121 ;;		line 88 in file "LCD.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  a               1    wreg     unsigned char 
  1124 ;;  b               1    4[BANK0 ] unsigned char 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  a               1    6[BANK0 ] unsigned char 
  1127 ;;  temp            1    7[BANK0 ] unsigned char 
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2, status,0, pclath, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         0       1       0       0       0
  1138 ;;      Locals:         0       2       0       0       0
  1139 ;;      Temps:          0       1       0       0       0
  1140 ;;      Totals:         0       4       0       0       0
  1141 ;;Total ram usage:        4 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    4
  1144 ;; This function calls:
  1145 ;;		_Lcd_Cmd
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;;		_titulos_LCD
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           
  1153                           ;psect for function _Lcd_Set_Cursor
  1154  031C                     _Lcd_Set_Cursor:
  1155                           
  1156                           ;incstack = 0
  1157                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1158                           ;Lcd_Set_Cursor@a stored from wreg
  1159  031C  1283               	bcf	3,5	;RP0=0, select bank0
  1160  031D  1303               	bcf	3,6	;RP1=0, select bank0
  1161  031E  00B8               	movwf	Lcd_Set_Cursor@a
  1162  031F                     l1137:
  1163                           
  1164                           ;LCD.c: 89:  char temp;;LCD.c: 90:  if(a == 1){
  1165  031F  0338               	decf	Lcd_Set_Cursor@a,w
  1166  0320  1D03               	btfss	3,2
  1167  0321  2B23               	goto	u241
  1168  0322  2B24               	goto	u240
  1169  0323                     u241:
  1170  0323  2B30               	goto	l1143
  1171  0324                     u240:
  1172  0324                     l1139:
  1173                           
  1174                           ;LCD.c: 91:         temp = 0x80 + b - 1;
  1175  0324  0836               	movf	Lcd_Set_Cursor@b,w
  1176  0325  3E7F               	addlw	127
  1177  0326  00B7               	movwf	??_Lcd_Set_Cursor
  1178  0327  0837               	movf	??_Lcd_Set_Cursor,w
  1179  0328  00B9               	movwf	Lcd_Set_Cursor@temp
  1180  0329                     l1141:
  1181                           
  1182                           ;LCD.c: 95:         Lcd_Cmd(temp);
  1183  0329  0839               	movf	Lcd_Set_Cursor@temp,w
  1184  032A  120A  118A  2367  120A  118A  	fcall	_Lcd_Cmd
  1185                           
  1186                           ;LCD.c: 96:  }
  1187  032F  2B41               	goto	l162
  1188  0330                     l1143:
  1189  0330  3002               	movlw	2
  1190  0331  0638               	xorwf	Lcd_Set_Cursor@a,w
  1191  0332  1D03               	btfss	3,2
  1192  0333  2B35               	goto	u251
  1193  0334  2B36               	goto	u250
  1194  0335                     u251:
  1195  0335  2B41               	goto	l162
  1196  0336                     u250:
  1197  0336                     l1145:
  1198                           
  1199                           ;LCD.c: 98:   temp = 0xC0 + b - 1;
  1200  0336  0836               	movf	Lcd_Set_Cursor@b,w
  1201  0337  3EBF               	addlw	191
  1202  0338  00B7               	movwf	??_Lcd_Set_Cursor
  1203  0339  0837               	movf	??_Lcd_Set_Cursor,w
  1204  033A  00B9               	movwf	Lcd_Set_Cursor@temp
  1205  033B                     l1147:
  1206                           
  1207                           ;LCD.c: 102:   Lcd_Cmd(temp);
  1208  033B  0839               	movf	Lcd_Set_Cursor@temp,w
  1209  033C  120A  118A  2367  120A  118A  	fcall	_Lcd_Cmd
  1210  0341                     l162:
  1211  0341  0008               	return
  1212  0342                     __end_of_Lcd_Set_Cursor:
  1213                           
  1214                           	psect	text5
  1215  0383                     __ptext5:	
  1216 ;; *************** function _setup *****************
  1217 ;; Defined at:
  1218 ;;		line 191 in file "pseudocodigo_lab3.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1232 ;;      Params:         0       0       0       0       0
  1233 ;;      Locals:         0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0
  1235 ;;      Totals:         0       0       0       0       0
  1236 ;;Total ram usage:        0 bytes
  1237 ;; Hardware stack levels used:    1
  1238 ;; Hardware stack levels required when called:    3
  1239 ;; This function calls:
  1240 ;;		_initOsc
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           
  1247                           ;psect for function _setup
  1248  0383                     _setup:
  1249  0383                     l1249:	
  1250                           ;incstack = 0
  1251                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1252                           
  1253                           
  1254                           ;pseudocodigo_lab3.c: 192:     initOsc(0b00000110);
  1255  0383  3006               	movlw	6
  1256  0384  120A  118A  21B3  120A  118A  	fcall	_initOsc
  1257  0389                     l1251:
  1258                           
  1259                           ;pseudocodigo_lab3.c: 193:     ANSEL = 0b00000011;
  1260  0389  3003               	movlw	3
  1261  038A  1683               	bsf	3,5	;RP0=1, select bank3
  1262  038B  1703               	bsf	3,6	;RP1=1, select bank3
  1263  038C  0088               	movwf	8	;volatile
  1264  038D                     l1253:
  1265                           
  1266                           ;pseudocodigo_lab3.c: 194:     ANSELH = 0;
  1267  038D  0189               	clrf	9	;volatile
  1268  038E                     l1255:
  1269                           
  1270                           ;pseudocodigo_lab3.c: 195:     TRISA = 0b00000011;
  1271  038E  3003               	movlw	3
  1272  038F  1683               	bsf	3,5	;RP0=1, select bank1
  1273  0390  1303               	bcf	3,6	;RP1=0, select bank1
  1274  0391  0085               	movwf	5	;volatile
  1275  0392                     l1257:
  1276                           
  1277                           ;pseudocodigo_lab3.c: 196:     TRISB = 0;
  1278  0392  0186               	clrf	6	;volatile
  1279  0393                     l1259:
  1280                           
  1281                           ;pseudocodigo_lab3.c: 197:     TRISC = 0;
  1282  0393  0187               	clrf	7	;volatile
  1283  0394                     l1261:
  1284                           
  1285                           ;pseudocodigo_lab3.c: 198:     TRISD = 0;
  1286  0394  0188               	clrf	8	;volatile
  1287  0395                     l1263:
  1288                           
  1289                           ;pseudocodigo_lab3.c: 199:     TRISE = 0;
  1290  0395  0189               	clrf	9	;volatile
  1291  0396                     l1265:
  1292                           
  1293                           ;pseudocodigo_lab3.c: 200:     PORTA = 0;
  1294  0396  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0397  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0398  0185               	clrf	5	;volatile
  1297  0399                     l1267:
  1298                           
  1299                           ;pseudocodigo_lab3.c: 201:     PORTB = 0;
  1300  0399  0186               	clrf	6	;volatile
  1301  039A                     l1269:
  1302                           
  1303                           ;pseudocodigo_lab3.c: 202:     PORTC = 0;
  1304  039A  0187               	clrf	7	;volatile
  1305  039B                     l1271:
  1306                           
  1307                           ;pseudocodigo_lab3.c: 203:     PORTD = 0;
  1308  039B  0188               	clrf	8	;volatile
  1309  039C                     l1273:
  1310                           
  1311                           ;pseudocodigo_lab3.c: 204:     PORTE = 0;
  1312  039C  0189               	clrf	9	;volatile
  1313  039D                     l115:
  1314  039D  0008               	return
  1315  039E                     __end_of_setup:
  1316                           
  1317                           	psect	text6
  1318  01B3                     __ptext6:	
  1319 ;; *************** function _initOsc *****************
  1320 ;; Defined at:
  1321 ;;		line 3 in file "Oscilador.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  IRCF            1    wreg     unsigned char 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  IRCF            1    2[BANK0 ] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       0       0       0       0
  1336 ;;      Locals:         0       1       0       0       0
  1337 ;;      Temps:          0       2       0       0       0
  1338 ;;      Totals:         0       3       0       0       0
  1339 ;;Total ram usage:        3 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    2
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_setup
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           
  1350                           ;psect for function _initOsc
  1351  01B3                     _initOsc:
  1352                           
  1353                           ;incstack = 0
  1354                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1355                           ;initOsc@IRCF stored from wreg
  1356  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1357  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1358  01B5  00B4               	movwf	initOsc@IRCF
  1359  01B6                     l1157:
  1360                           
  1361                           ;Oscilador.c: 5:     switch(IRCF){
  1362  01B6  29ED               	goto	l1161
  1363  01B7                     l124:	
  1364                           ;Oscilador.c: 6:         case 0:
  1365                           
  1366                           
  1367                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  1368  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  1369  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  1370  01B9  130F               	bcf	15,6	;volatile
  1371                           
  1372                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  1373  01BA  128F               	bcf	15,5	;volatile
  1374                           
  1375                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  1376  01BB  120F               	bcf	15,4	;volatile
  1377                           
  1378                           ;Oscilador.c: 10:             break;
  1379  01BC  2A0F               	goto	l125
  1380  01BD                     l126:	
  1381                           ;Oscilador.c: 11:          case 1:
  1382                           
  1383                           
  1384                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  1385  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  1386  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  1387  01BF  130F               	bcf	15,6	;volatile
  1388                           
  1389                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  1390  01C0  128F               	bcf	15,5	;volatile
  1391                           
  1392                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  1393  01C1  160F               	bsf	15,4	;volatile
  1394                           
  1395                           ;Oscilador.c: 15:             break;
  1396  01C2  2A0F               	goto	l125
  1397  01C3                     l127:	
  1398                           ;Oscilador.c: 16:         case 2:
  1399                           
  1400                           
  1401                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  1402  01C3  1683               	bsf	3,5	;RP0=1, select bank1
  1403  01C4  1303               	bcf	3,6	;RP1=0, select bank1
  1404  01C5  130F               	bcf	15,6	;volatile
  1405                           
  1406                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  1407  01C6  168F               	bsf	15,5	;volatile
  1408                           
  1409                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  1410  01C7  120F               	bcf	15,4	;volatile
  1411                           
  1412                           ;Oscilador.c: 20:             break;
  1413  01C8  2A0F               	goto	l125
  1414  01C9                     l128:	
  1415                           ;Oscilador.c: 21:         case 3:
  1416                           
  1417                           
  1418                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  1419  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  1420  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  1421  01CB  130F               	bcf	15,6	;volatile
  1422                           
  1423                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  1424  01CC  168F               	bsf	15,5	;volatile
  1425                           
  1426                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  1427  01CD  160F               	bsf	15,4	;volatile
  1428                           
  1429                           ;Oscilador.c: 25:             break;
  1430  01CE  2A0F               	goto	l125
  1431  01CF                     l129:	
  1432                           ;Oscilador.c: 26:         case 4:
  1433                           
  1434                           
  1435                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  1436  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  1437  01D0  1303               	bcf	3,6	;RP1=0, select bank1
  1438  01D1  170F               	bsf	15,6	;volatile
  1439                           
  1440                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  1441  01D2  128F               	bcf	15,5	;volatile
  1442                           
  1443                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  1444  01D3  120F               	bcf	15,4	;volatile
  1445                           
  1446                           ;Oscilador.c: 30:             break;
  1447  01D4  2A0F               	goto	l125
  1448  01D5                     l130:	
  1449                           ;Oscilador.c: 31:         case 5:
  1450                           
  1451                           
  1452                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1453  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  1454  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  1455  01D7  170F               	bsf	15,6	;volatile
  1456                           
  1457                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1458  01D8  128F               	bcf	15,5	;volatile
  1459                           
  1460                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1461  01D9  160F               	bsf	15,4	;volatile
  1462                           
  1463                           ;Oscilador.c: 35:             break;
  1464  01DA  2A0F               	goto	l125
  1465  01DB                     l131:	
  1466                           ;Oscilador.c: 36:         case 6:
  1467                           
  1468                           
  1469                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1470  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  1471  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  1472  01DD  170F               	bsf	15,6	;volatile
  1473                           
  1474                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1475  01DE  168F               	bsf	15,5	;volatile
  1476                           
  1477                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1478  01DF  120F               	bcf	15,4	;volatile
  1479                           
  1480                           ;Oscilador.c: 40:             break;
  1481  01E0  2A0F               	goto	l125
  1482  01E1                     l132:	
  1483                           ;Oscilador.c: 41:         case 7:
  1484                           
  1485                           
  1486                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1487  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  1488  01E2  1303               	bcf	3,6	;RP1=0, select bank1
  1489  01E3  170F               	bsf	15,6	;volatile
  1490                           
  1491                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1492  01E4  168F               	bsf	15,5	;volatile
  1493                           
  1494                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1495  01E5  160F               	bsf	15,4	;volatile
  1496                           
  1497                           ;Oscilador.c: 45:             break;
  1498  01E6  2A0F               	goto	l125
  1499  01E7                     l133:	
  1500                           ;Oscilador.c: 46:         default:
  1501                           
  1502                           
  1503                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1504  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  1505  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  1506  01E9  170F               	bsf	15,6	;volatile
  1507                           
  1508                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1509  01EA  168F               	bsf	15,5	;volatile
  1510                           
  1511                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1512  01EB  120F               	bcf	15,4	;volatile
  1513                           
  1514                           ;Oscilador.c: 50:             break;
  1515  01EC  2A0F               	goto	l125
  1516  01ED                     l1161:
  1517  01ED  0834               	movf	initOsc@IRCF,w
  1518  01EE  00B2               	movwf	??_initOsc
  1519  01EF  01B3               	clrf	??_initOsc+1
  1520                           
  1521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1522                           ; Switch size 1, requested type "simple"
  1523                           ; Number of cases is 1, Range of values is 0 to 0
  1524                           ; switch strategies available:
  1525                           ; Name         Instructions Cycles
  1526                           ; simple_byte            4     3 (average)
  1527                           ; direct_byte           11     8 (fixed)
  1528                           ; jumptable            260     6 (fixed)
  1529                           ;	Chosen strategy is simple_byte
  1530  01F0  0833               	movf	??_initOsc+1,w
  1531  01F1  3A00               	xorlw	0	; case 0
  1532  01F2  1903               	skipnz
  1533  01F3  29F5               	goto	l1423
  1534  01F4  29E7               	goto	l133
  1535  01F5                     l1423:
  1536                           
  1537                           ; Switch size 1, requested type "simple"
  1538                           ; Number of cases is 8, Range of values is 0 to 7
  1539                           ; switch strategies available:
  1540                           ; Name         Instructions Cycles
  1541                           ; simple_byte           25    13 (average)
  1542                           ; direct_byte           32     8 (fixed)
  1543                           ; jumptable            260     6 (fixed)
  1544                           ;	Chosen strategy is simple_byte
  1545  01F5  0832               	movf	??_initOsc,w
  1546  01F6  3A00               	xorlw	0	; case 0
  1547  01F7  1903               	skipnz
  1548  01F8  29B7               	goto	l124
  1549  01F9  3A01               	xorlw	1	; case 1
  1550  01FA  1903               	skipnz
  1551  01FB  29BD               	goto	l126
  1552  01FC  3A03               	xorlw	3	; case 2
  1553  01FD  1903               	skipnz
  1554  01FE  29C3               	goto	l127
  1555  01FF  3A01               	xorlw	1	; case 3
  1556  0200  1903               	skipnz
  1557  0201  29C9               	goto	l128
  1558  0202  3A07               	xorlw	7	; case 4
  1559  0203  1903               	skipnz
  1560  0204  29CF               	goto	l129
  1561  0205  3A01               	xorlw	1	; case 5
  1562  0206  1903               	skipnz
  1563  0207  29D5               	goto	l130
  1564  0208  3A03               	xorlw	3	; case 6
  1565  0209  1903               	skipnz
  1566  020A  29DB               	goto	l131
  1567  020B  3A01               	xorlw	1	; case 7
  1568  020C  1903               	skipnz
  1569  020D  29E1               	goto	l132
  1570  020E  29E7               	goto	l133
  1571  020F                     l125:
  1572                           
  1573                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1574  020F  140F               	bsf	15,0	;volatile
  1575  0210                     l134:
  1576  0210  0008               	return
  1577  0211                     __end_of_initOsc:
  1578                           
  1579                           	psect	text7
  1580  0342                     __ptext7:	
  1581 ;; *************** function _mapeo *****************
  1582 ;; Defined at:
  1583 ;;		line 176 in file "pseudocodigo_lab3.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0, pclath, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1597 ;;      Params:         0       0       0       0       0
  1598 ;;      Locals:         0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0
  1600 ;;      Totals:         0       0       0       0       0
  1601 ;;Total ram usage:        0 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; Hardware stack levels required when called:    3
  1604 ;; This function calls:
  1605 ;;		___awdiv
  1606 ;;		___wmul
  1607 ;; This function is called by:
  1608 ;;		_main
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           
  1613                           ;psect for function _mapeo
  1614  0342                     _mapeo:
  1615  0342                     l1313:	
  1616                           ;incstack = 0
  1617                           ; Regs used in _mapeo: [wreg+status,2+status,0+pclath+cstack]
  1618                           
  1619                           
  1620                           ;pseudocodigo_lab3.c: 177:     S2_val = (ADC_VALOR_2*5)/255;
  1621  0342  30FF               	movlw	255
  1622  0343  1283               	bcf	3,5	;RP0=0, select bank0
  1623  0344  1303               	bcf	3,6	;RP1=0, select bank0
  1624  0345  00B8               	movwf	___awdiv@divisor
  1625  0346  3000               	movlw	0
  1626  0347  00B9               	movwf	___awdiv@divisor+1
  1627  0348  0831               	movf	_ADC_VALOR_2+1,w
  1628  0349  00B3               	movwf	___wmul@multiplier+1
  1629  034A  0830               	movf	_ADC_VALOR_2,w
  1630  034B  00B2               	movwf	___wmul@multiplier
  1631  034C  3005               	movlw	5
  1632  034D  00B4               	movwf	___wmul@multiplicand
  1633  034E  3000               	movlw	0
  1634  034F  00B5               	movwf	___wmul@multiplicand+1
  1635  0350  120A  118A  22F5  120A  118A  	fcall	___wmul
  1636  0355  1283               	bcf	3,5	;RP0=0, select bank0
  1637  0356  1303               	bcf	3,6	;RP1=0, select bank0
  1638  0357  0833               	movf	?___wmul+1,w
  1639  0358  00BB               	movwf	___awdiv@dividend+1
  1640  0359  0832               	movf	?___wmul,w
  1641  035A  00BA               	movwf	___awdiv@dividend
  1642  035B  120A  118A  214A  120A  118A  	fcall	___awdiv
  1643  0360  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0361  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0362  0839               	movf	?___awdiv+1,w
  1646  0363  00AD               	movwf	_S2_val+1
  1647  0364  0838               	movf	?___awdiv,w
  1648  0365  00AC               	movwf	_S2_val
  1649  0366                     l112:
  1650  0366  0008               	return
  1651  0367                     __end_of_mapeo:
  1652                           
  1653                           	psect	text8
  1654  02F5                     __ptext8:	
  1655 ;; *************** function ___wmul *****************
  1656 ;; Defined at:
  1657 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1660 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  product         2    4[BANK0 ] unsigned int 
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  2    0[BANK0 ] unsigned int 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2, status,0
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1672 ;;      Params:         0       4       0       0       0
  1673 ;;      Locals:         0       2       0       0       0
  1674 ;;      Temps:          0       0       0       0       0
  1675 ;;      Totals:         0       6       0       0       0
  1676 ;;Total ram usage:        6 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; Hardware stack levels required when called:    2
  1679 ;; This function calls:
  1680 ;;		Nothing
  1681 ;; This function is called by:
  1682 ;;		_mapeo
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           
  1687                           ;psect for function ___wmul
  1688  02F5                     ___wmul:
  1689  02F5                     l1169:	
  1690                           ;incstack = 0
  1691                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1692                           
  1693  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1694  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1695  02F7  01B6               	clrf	___wmul@product
  1696  02F8  01B7               	clrf	___wmul@product+1
  1697  02F9                     l1171:
  1698  02F9  1C32               	btfss	___wmul@multiplier,0
  1699  02FA  2AFC               	goto	u271
  1700  02FB  2AFD               	goto	u270
  1701  02FC                     u271:
  1702  02FC  2B03               	goto	l313
  1703  02FD                     u270:
  1704  02FD                     l1173:
  1705  02FD  0834               	movf	___wmul@multiplicand,w
  1706  02FE  07B6               	addwf	___wmul@product,f
  1707  02FF  1803               	skipnc
  1708  0300  0AB7               	incf	___wmul@product+1,f
  1709  0301  0835               	movf	___wmul@multiplicand+1,w
  1710  0302  07B7               	addwf	___wmul@product+1,f
  1711  0303                     l313:
  1712  0303  3001               	movlw	1
  1713  0304                     u285:
  1714  0304  1003               	clrc
  1715  0305  0DB4               	rlf	___wmul@multiplicand,f
  1716  0306  0DB5               	rlf	___wmul@multiplicand+1,f
  1717  0307  3EFF               	addlw	-1
  1718  0308  1D03               	skipz
  1719  0309  2B04               	goto	u285
  1720  030A                     l1175:
  1721  030A  3001               	movlw	1
  1722  030B                     u295:
  1723  030B  1003               	clrc
  1724  030C  0CB3               	rrf	___wmul@multiplier+1,f
  1725  030D  0CB2               	rrf	___wmul@multiplier,f
  1726  030E  3EFF               	addlw	-1
  1727  030F  1D03               	skipz
  1728  0310  2B0B               	goto	u295
  1729  0311                     l1177:
  1730  0311  0832               	movf	___wmul@multiplier,w
  1731  0312  0433               	iorwf	___wmul@multiplier+1,w
  1732  0313  1D03               	btfss	3,2
  1733  0314  2B16               	goto	u301
  1734  0315  2B17               	goto	u300
  1735  0316                     u301:
  1736  0316  2AF9               	goto	l1171
  1737  0317                     u300:
  1738  0317                     l1179:
  1739  0317  0837               	movf	___wmul@product+1,w
  1740  0318  00B3               	movwf	?___wmul+1
  1741  0319  0836               	movf	___wmul@product,w
  1742  031A  00B2               	movwf	?___wmul
  1743  031B                     l315:
  1744  031B  0008               	return
  1745  031C                     __end_of___wmul:
  1746                           
  1747                           	psect	text9
  1748  014A                     __ptext9:	
  1749 ;; *************** function ___awdiv *****************
  1750 ;; Defined at:
  1751 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  divisor         2    6[BANK0 ] int 
  1754 ;;  dividend        2    8[BANK0 ] int 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  quotient        2   13[BANK0 ] int 
  1757 ;;  sign            1   12[BANK0 ] unsigned char 
  1758 ;;  counter         1   11[BANK0 ] unsigned char 
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  2    6[BANK0 ] int 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1768 ;;      Params:         0       4       0       0       0
  1769 ;;      Locals:         0       4       0       0       0
  1770 ;;      Temps:          0       1       0       0       0
  1771 ;;      Totals:         0       9       0       0       0
  1772 ;;Total ram usage:        9 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    2
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_mapeo
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           
  1783                           ;psect for function ___awdiv
  1784  014A                     ___awdiv:
  1785  014A                     l1183:	
  1786                           ;incstack = 0
  1787                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1788                           
  1789  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1790  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1791  014C  01BE               	clrf	___awdiv@sign
  1792  014D                     l1185:
  1793  014D  1FB9               	btfss	___awdiv@divisor+1,7
  1794  014E  2950               	goto	u311
  1795  014F  2951               	goto	u310
  1796  0150                     u311:
  1797  0150  2958               	goto	l1191
  1798  0151                     u310:
  1799  0151                     l1187:
  1800  0151  09B8               	comf	___awdiv@divisor,f
  1801  0152  09B9               	comf	___awdiv@divisor+1,f
  1802  0153  0AB8               	incf	___awdiv@divisor,f
  1803  0154  1903               	skipnz
  1804  0155  0AB9               	incf	___awdiv@divisor+1,f
  1805  0156                     l1189:
  1806  0156  01BE               	clrf	___awdiv@sign
  1807  0157  0ABE               	incf	___awdiv@sign,f
  1808  0158                     l1191:
  1809  0158  1FBB               	btfss	___awdiv@dividend+1,7
  1810  0159  295B               	goto	u321
  1811  015A  295C               	goto	u320
  1812  015B                     u321:
  1813  015B  2965               	goto	l1197
  1814  015C                     u320:
  1815  015C                     l1193:
  1816  015C  09BA               	comf	___awdiv@dividend,f
  1817  015D  09BB               	comf	___awdiv@dividend+1,f
  1818  015E  0ABA               	incf	___awdiv@dividend,f
  1819  015F  1903               	skipnz
  1820  0160  0ABB               	incf	___awdiv@dividend+1,f
  1821  0161                     l1195:
  1822  0161  3001               	movlw	1
  1823  0162  00BC               	movwf	??___awdiv
  1824  0163  083C               	movf	??___awdiv,w
  1825  0164  06BE               	xorwf	___awdiv@sign,f
  1826  0165                     l1197:
  1827  0165  01BF               	clrf	___awdiv@quotient
  1828  0166  01C0               	clrf	___awdiv@quotient+1
  1829  0167                     l1199:
  1830  0167  0838               	movf	___awdiv@divisor,w
  1831  0168  0439               	iorwf	___awdiv@divisor+1,w
  1832  0169  1903               	btfsc	3,2
  1833  016A  296C               	goto	u331
  1834  016B  296D               	goto	u330
  1835  016C                     u331:
  1836  016C  29A4               	goto	l1219
  1837  016D                     u330:
  1838  016D                     l1201:
  1839  016D  01BD               	clrf	___awdiv@counter
  1840  016E  0ABD               	incf	___awdiv@counter,f
  1841  016F  297B               	goto	l1207
  1842  0170                     l1203:
  1843  0170  3001               	movlw	1
  1844  0171                     u345:
  1845  0171  1003               	clrc
  1846  0172  0DB8               	rlf	___awdiv@divisor,f
  1847  0173  0DB9               	rlf	___awdiv@divisor+1,f
  1848  0174  3EFF               	addlw	-1
  1849  0175  1D03               	skipz
  1850  0176  2971               	goto	u345
  1851  0177                     l1205:
  1852  0177  3001               	movlw	1
  1853  0178  00BC               	movwf	??___awdiv
  1854  0179  083C               	movf	??___awdiv,w
  1855  017A  07BD               	addwf	___awdiv@counter,f
  1856  017B                     l1207:
  1857  017B  1FB9               	btfss	___awdiv@divisor+1,7
  1858  017C  297E               	goto	u351
  1859  017D  297F               	goto	u350
  1860  017E                     u351:
  1861  017E  2970               	goto	l1203
  1862  017F                     u350:
  1863  017F                     l1209:
  1864  017F  3001               	movlw	1
  1865  0180                     u365:
  1866  0180  1003               	clrc
  1867  0181  0DBF               	rlf	___awdiv@quotient,f
  1868  0182  0DC0               	rlf	___awdiv@quotient+1,f
  1869  0183  3EFF               	addlw	-1
  1870  0184  1D03               	skipz
  1871  0185  2980               	goto	u365
  1872  0186  0839               	movf	___awdiv@divisor+1,w
  1873  0187  023B               	subwf	___awdiv@dividend+1,w
  1874  0188  1D03               	skipz
  1875  0189  298C               	goto	u375
  1876  018A  0838               	movf	___awdiv@divisor,w
  1877  018B  023A               	subwf	___awdiv@dividend,w
  1878  018C                     u375:
  1879  018C  1C03               	skipc
  1880  018D  298F               	goto	u371
  1881  018E  2990               	goto	u370
  1882  018F                     u371:
  1883  018F  2997               	goto	l1215
  1884  0190                     u370:
  1885  0190                     l1211:
  1886  0190  0838               	movf	___awdiv@divisor,w
  1887  0191  02BA               	subwf	___awdiv@dividend,f
  1888  0192  0839               	movf	___awdiv@divisor+1,w
  1889  0193  1C03               	skipc
  1890  0194  03BB               	decf	___awdiv@dividend+1,f
  1891  0195  02BB               	subwf	___awdiv@dividend+1,f
  1892  0196                     l1213:
  1893  0196  143F               	bsf	___awdiv@quotient,0
  1894  0197                     l1215:
  1895  0197  3001               	movlw	1
  1896  0198                     u385:
  1897  0198  1003               	clrc
  1898  0199  0CB9               	rrf	___awdiv@divisor+1,f
  1899  019A  0CB8               	rrf	___awdiv@divisor,f
  1900  019B  3EFF               	addlw	-1
  1901  019C  1D03               	skipz
  1902  019D  2998               	goto	u385
  1903  019E                     l1217:
  1904  019E  3001               	movlw	1
  1905  019F  02BD               	subwf	___awdiv@counter,f
  1906  01A0  1D03               	btfss	3,2
  1907  01A1  29A3               	goto	u391
  1908  01A2  29A4               	goto	u390
  1909  01A3                     u391:
  1910  01A3  297F               	goto	l1209
  1911  01A4                     u390:
  1912  01A4                     l1219:
  1913  01A4  083E               	movf	___awdiv@sign,w
  1914  01A5  1903               	btfsc	3,2
  1915  01A6  29A8               	goto	u401
  1916  01A7  29A9               	goto	u400
  1917  01A8                     u401:
  1918  01A8  29AE               	goto	l1223
  1919  01A9                     u400:
  1920  01A9                     l1221:
  1921  01A9  09BF               	comf	___awdiv@quotient,f
  1922  01AA  09C0               	comf	___awdiv@quotient+1,f
  1923  01AB  0ABF               	incf	___awdiv@quotient,f
  1924  01AC  1903               	skipnz
  1925  01AD  0AC0               	incf	___awdiv@quotient+1,f
  1926  01AE                     l1223:
  1927  01AE  0840               	movf	___awdiv@quotient+1,w
  1928  01AF  00B9               	movwf	?___awdiv+1
  1929  01B0  083F               	movf	___awdiv@quotient,w
  1930  01B1  00B8               	movwf	?___awdiv
  1931  01B2                     l466:
  1932  01B2  0008               	return
  1933  01B3                     __end_of___awdiv:
  1934                           
  1935                           	psect	text10
  1936  0211                     __ptext10:	
  1937 ;; *************** function _Lcd_Init *****************
  1938 ;; Defined at:
  1939 ;;		line 14 in file "LCD.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;		None
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;		None
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0, pclath, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1953 ;;      Params:         0       0       0       0       0
  1954 ;;      Locals:         0       0       0       0       0
  1955 ;;      Temps:          0       2       0       0       0
  1956 ;;      Totals:         0       2       0       0       0
  1957 ;;Total ram usage:        2 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; Hardware stack levels required when called:    4
  1960 ;; This function calls:
  1961 ;;		_Lcd_Cmd
  1962 ;;		_Lcd_Port
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           
  1969                           ;psect for function _Lcd_Init
  1970  0211                     _Lcd_Init:
  1971  0211                     l1281:	
  1972                           ;incstack = 0
  1973                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1974                           
  1975                           
  1976                           ;LCD.c: 15:   Lcd_Port(0x00);
  1977  0211  3000               	movlw	0
  1978  0212  120A  118A  2400  120A  118A  	fcall	_Lcd_Port
  1979  0217                     l1283:
  1980                           
  1981                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1982  0217  3034               	movlw	52
  1983  0218  1283               	bcf	3,5	;RP0=0, select bank0
  1984  0219  1303               	bcf	3,6	;RP1=0, select bank0
  1985  021A  00B7               	movwf	??_Lcd_Init+1
  1986  021B  30F1               	movlw	241
  1987  021C  00B6               	movwf	??_Lcd_Init
  1988  021D                     u487:
  1989  021D  0BB6               	decfsz	??_Lcd_Init,f
  1990  021E  2A1D               	goto	u487
  1991  021F  0BB7               	decfsz	??_Lcd_Init+1,f
  1992  0220  2A1D               	goto	u487
  1993  0221                     l1285:
  1994                           
  1995                           ;LCD.c: 17:   Lcd_Cmd(0x030);
  1996  0221  3030               	movlw	48
  1997  0222  120A  118A  2367  120A  118A  	fcall	_Lcd_Cmd
  1998                           
  1999                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2000  0227  300D               	movlw	13
  2001  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2002  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2003  022A  00B7               	movwf	??_Lcd_Init+1
  2004  022B  30FB               	movlw	251
  2005  022C  00B6               	movwf	??_Lcd_Init
  2006  022D                     u497:
  2007  022D  0BB6               	decfsz	??_Lcd_Init,f
  2008  022E  2A2D               	goto	u497
  2009  022F  0BB7               	decfsz	??_Lcd_Init+1,f
  2010  0230  2A2D               	goto	u497
  2011  0231                     l1287:
  2012                           
  2013                           ;LCD.c: 19:   Lcd_Cmd(0x030);
  2014  0231  3030               	movlw	48
  2015  0232  120A  118A  2367  120A  118A  	fcall	_Lcd_Cmd
  2016  0237                     l1289:
  2017                           
  2018                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2019  0237  301D               	movlw	29
  2020  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2022  023A  00B7               	movwf	??_Lcd_Init+1
  2023  023B  3090               	movlw	144
  2024  023C  00B6               	movwf	??_Lcd_Init
  2025  023D                     u507:
  2026  023D  0BB6               	decfsz	??_Lcd_Init,f
  2027  023E  2A3D               	goto	u507
  2028  023F  0BB7               	decfsz	??_Lcd_Init+1,f
  2029  0240  2A3D               	goto	u507
  2030  0241  0000               	nop
  2031                           
  2032                           ;LCD.c: 21:   Lcd_Cmd(0x030);
  2033  0242  3030               	movlw	48
  2034  0243  120A  118A  2367  120A  118A  	fcall	_Lcd_Cmd
  2035                           
  2036                           ;LCD.c: 22:   Lcd_Cmd(0x038);
  2037  0248  3038               	movlw	56
  2038  0249  120A  118A  2367  120A  118A  	fcall	_Lcd_Cmd
  2039                           
  2040                           ;LCD.c: 23:   Lcd_Cmd(0x00C);
  2041  024E  300C               	movlw	12
  2042  024F  120A  118A  2367  120A  118A  	fcall	_Lcd_Cmd
  2043                           
  2044                           ;LCD.c: 24:   Lcd_Cmd(0x001);
  2045  0254  3001               	movlw	1
  2046  0255  120A  118A  2367  120A  118A  	fcall	_Lcd_Cmd
  2047                           
  2048                           ;LCD.c: 25:   Lcd_Cmd(0x006);
  2049  025A  3006               	movlw	6
  2050  025B  120A  118A  2367  120A  118A  	fcall	_Lcd_Cmd
  2051  0260                     l147:
  2052  0260  0008               	return
  2053  0261                     __end_of_Lcd_Init:
  2054                           
  2055                           	psect	text11
  2056  0367                     __ptext11:	
  2057 ;; *************** function _Lcd_Cmd *****************
  2058 ;; Defined at:
  2059 ;;		line 73 in file "LCD.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  a               1    wreg     unsigned char 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  a               1    3[BANK0 ] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0, pclath, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2073 ;;      Params:         0       0       0       0       0
  2074 ;;      Locals:         0       1       0       0       0
  2075 ;;      Temps:          0       2       0       0       0
  2076 ;;      Totals:         0       3       0       0       0
  2077 ;;Total ram usage:        3 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    3
  2080 ;; This function calls:
  2081 ;;		_Lcd_Port
  2082 ;; This function is called by:
  2083 ;;		_Lcd_Init
  2084 ;;		_Lcd_Set_Cursor
  2085 ;;		_Lcd_Clear
  2086 ;;		_Lcd_Shift_Right
  2087 ;;		_Lcd_Shift_Left
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           
  2092                           ;psect for function _Lcd_Cmd
  2093  0367                     _Lcd_Cmd:
  2094                           
  2095                           ;incstack = 0
  2096                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2097                           ;Lcd_Cmd@a stored from wreg
  2098  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0368  1303               	bcf	3,6	;RP1=0, select bank0
  2100  0369  00B5               	movwf	Lcd_Cmd@a
  2101  036A                     l1127:
  2102                           
  2103                           ;LCD.c: 74:  PORTEbits.RE0 = 0;
  2104  036A  1009               	bcf	9,0	;volatile
  2105  036B                     l1129:
  2106                           
  2107                           ;LCD.c: 75:  Lcd_Port(a);
  2108  036B  0835               	movf	Lcd_Cmd@a,w
  2109  036C  120A  118A  2400  120A  118A  	fcall	_Lcd_Port
  2110  0371                     l1131:
  2111                           
  2112                           ;LCD.c: 76:  PORTEbits.RE2 = 1;
  2113  0371  1283               	bcf	3,5	;RP0=0, select bank0
  2114  0372  1303               	bcf	3,6	;RP1=0, select bank0
  2115  0373  1509               	bsf	9,2	;volatile
  2116  0374                     l1133:
  2117                           
  2118                           ;LCD.c: 77:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2119  0374  300B               	movlw	11
  2120  0375  1283               	bcf	3,5	;RP0=0, select bank0
  2121  0376  1303               	bcf	3,6	;RP1=0, select bank0
  2122  0377  00B4               	movwf	??_Lcd_Cmd+1
  2123  0378  3061               	movlw	97
  2124  0379  00B3               	movwf	??_Lcd_Cmd
  2125  037A                     u517:
  2126  037A  0BB3               	decfsz	??_Lcd_Cmd,f
  2127  037B  2B7A               	goto	u517
  2128  037C  0BB4               	decfsz	??_Lcd_Cmd+1,f
  2129  037D  2B7A               	goto	u517
  2130  037E  2B7F               	nop2
  2131  037F                     l1135:
  2132                           
  2133                           ;LCD.c: 78:         PORTEbits.RE2 = 0;
  2134  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2135  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2136  0381  1109               	bcf	9,2	;volatile
  2137  0382                     l153:
  2138  0382  0008               	return
  2139  0383                     __end_of_Lcd_Cmd:
  2140                           
  2141                           	psect	text12
  2142  0400                     __ptext12:	
  2143 ;; *************** function _Lcd_Port *****************
  2144 ;; Defined at:
  2145 ;;		line 29 in file "LCD.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  a               1    wreg     unsigned char 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  a               1    0[BANK0 ] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2159 ;;      Params:         0       0       0       0       0
  2160 ;;      Locals:         0       1       0       0       0
  2161 ;;      Temps:          0       0       0       0       0
  2162 ;;      Totals:         0       1       0       0       0
  2163 ;;Total ram usage:        1 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    2
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_Lcd_Init
  2170 ;;		_Lcd_Cmd
  2171 ;;		_Lcd_Write_Char
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           
  2176                           ;psect for function _Lcd_Port
  2177  0400                     _Lcd_Port:
  2178                           
  2179                           ;incstack = 0
  2180                           ; Regs used in _Lcd_Port: [wreg]
  2181                           ;Lcd_Port@a stored from wreg
  2182  0400  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0401  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0402  00B2               	movwf	Lcd_Port@a
  2185  0403                     l1115:
  2186                           
  2187                           ;LCD.c: 30:     PORTD = a;
  2188  0403  0832               	movf	Lcd_Port@a,w
  2189  0404  0088               	movwf	8	;volatile
  2190  0405                     l150:
  2191  0405  0008               	return
  2192  0406                     __end_of_Lcd_Port:
  2193                           
  2194                           	psect	text13
  2195  03EF                     __ptext13:	
  2196 ;; *************** function _Config_INTERRUPT *****************
  2197 ;; Defined at:
  2198 ;;		line 209 in file "pseudocodigo_lab3.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;		None
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;		None
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		wreg
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2212 ;;      Params:         0       0       0       0       0
  2213 ;;      Locals:         0       0       0       0       0
  2214 ;;      Temps:          0       0       0       0       0
  2215 ;;      Totals:         0       0       0       0       0
  2216 ;;Total ram usage:        0 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:    2
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_main
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           
  2227                           ;psect for function _Config_INTERRUPT
  2228  03EF                     _Config_INTERRUPT:
  2229  03EF                     l1275:	
  2230                           ;incstack = 0
  2231                           ; Regs used in _Config_INTERRUPT: [wreg]
  2232                           
  2233                           
  2234                           ;pseudocodigo_lab3.c: 210:     INTCON = 0b11000001;
  2235  03EF  30C1               	movlw	193
  2236  03F0  008B               	movwf	11	;volatile
  2237  03F1                     l1277:
  2238                           
  2239                           ;pseudocodigo_lab3.c: 211:     PIE1bits.ADIE = 1;
  2240  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  2241  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  2242  03F3  170C               	bsf	12,6	;volatile
  2243  03F4                     l1279:
  2244                           
  2245                           ;pseudocodigo_lab3.c: 212:     PIR1bits.ADIF = 1;
  2246  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2247  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2248  03F6  170C               	bsf	12,6	;volatile
  2249  03F7                     l118:
  2250  03F7  0008               	return
  2251  03F8                     __end_of_Config_INTERRUPT:
  2252                           
  2253                           	psect	text14
  2254  039E                     __ptext14:	
  2255 ;; *************** function _CONVERSION_ADC *****************
  2256 ;; Defined at:
  2257 ;;		line 149 in file "pseudocodigo_lab3.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2271 ;;      Params:         0       0       0       0       0
  2272 ;;      Locals:         0       0       0       0       0
  2273 ;;      Temps:          0       0       0       0       0
  2274 ;;      Totals:         0       0       0       0       0
  2275 ;;Total ram usage:        0 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    2
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           
  2286                           ;psect for function _CONVERSION_ADC
  2287  039E                     _CONVERSION_ADC:
  2288  039E                     l1301:	
  2289                           ;incstack = 0
  2290                           ; Regs used in _CONVERSION_ADC: [wreg+status,2+status,0]
  2291                           
  2292                           
  2293                           ;pseudocodigo_lab3.c: 150:     if (ADC_flag1 == 1 || ADC_flag2 == 1){
  2294  039E  0378               	decf	_ADC_flag1,w
  2295  039F  0479               	iorwf	_ADC_flag1+1,w
  2296  03A0  1903               	btfsc	3,2
  2297  03A1  2BA3               	goto	u411
  2298  03A2  2BA4               	goto	u410
  2299  03A3                     u411:
  2300  03A3  2BAC               	goto	l1305
  2301  03A4                     u410:
  2302  03A4                     l1303:
  2303  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2304  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  2305  03A6  0328               	decf	_ADC_flag2,w
  2306  03A7  0429               	iorwf	_ADC_flag2+1,w
  2307  03A8  1D03               	btfss	3,2
  2308  03A9  2BAB               	goto	u421
  2309  03AA  2BAC               	goto	u420
  2310  03AB                     u421:
  2311  03AB  2BB7               	goto	l106
  2312  03AC                     u420:
  2313  03AC                     l1305:
  2314                           
  2315                           ;pseudocodigo_lab3.c: 152:         ADC_flag1 = 0;
  2316  03AC  01F8               	clrf	_ADC_flag1
  2317  03AD  01F9               	clrf	_ADC_flag1+1
  2318                           
  2319                           ;pseudocodigo_lab3.c: 153:         ADC_flag2 = 0;
  2320  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2321  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2322  03B0  01A8               	clrf	_ADC_flag2
  2323  03B1  01A9               	clrf	_ADC_flag2+1
  2324  03B2                     l1307:
  2325                           
  2326                           ;pseudocodigo_lab3.c: 154:         PORTB = ADC_VALOR_1;
  2327  03B2  087A               	movf	_ADC_VALOR_1,w
  2328  03B3  0086               	movwf	6	;volatile
  2329  03B4                     l1309:
  2330                           
  2331                           ;pseudocodigo_lab3.c: 155:         PORTC = ADC_VALOR_2;
  2332  03B4  0830               	movf	_ADC_VALOR_2,w
  2333  03B5  0087               	movwf	7	;volatile
  2334  03B6                     l1311:
  2335                           
  2336                           ;pseudocodigo_lab3.c: 156:         PIR1bits.ADIF = 1;
  2337  03B6  170C               	bsf	12,6	;volatile
  2338  03B7                     l106:
  2339  03B7  0008               	return
  2340  03B8                     __end_of_CONVERSION_ADC:
  2341                           
  2342                           	psect	text15
  2343  00E0                     __ptext15:	
  2344 ;; *************** function _ISR *****************
  2345 ;; Defined at:
  2346 ;;		line 87 in file "pseudocodigo_lab3.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2360 ;;      Params:         0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0
  2362 ;;      Temps:          5       0       0       0       0
  2363 ;;      Totals:         5       0       0       0       0
  2364 ;;Total ram usage:        5 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    1
  2367 ;; This function calls:
  2368 ;;		_ADC
  2369 ;;		_ADC_Config
  2370 ;; This function is called by:
  2371 ;;		Interrupt level 1
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           
  2376                           ;psect for function _ISR
  2377  00E0                     _ISR:
  2378  00E0                     i1l1315:
  2379                           
  2380                           ;pseudocodigo_lab3.c: 90:     if (PIR1bits.ADIF) {
  2381  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  2382  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  2383  00E2  1F0C               	btfss	12,6	;volatile
  2384  00E3  28E5               	goto	u43_21
  2385  00E4  28E6               	goto	u43_20
  2386  00E5                     u43_21:
  2387  00E5  2941               	goto	i1l92
  2388  00E6                     u43_20:
  2389  00E6                     i1l1317:
  2390                           
  2391                           ;pseudocodigo_lab3.c: 92:         ADC_Config (0);
  2392  00E6  3000               	movlw	0
  2393  00E7  120A  118A  2024  120A  118A  	fcall	_ADC_Config
  2394  00EC                     i1l1319:
  2395                           
  2396                           ;pseudocodigo_lab3.c: 93:         _delay((unsigned long)((2)*(8000000/4000.0)));
  2397  00EC  3006               	movlw	6
  2398  00ED  00F4               	movwf	??_ISR+1
  2399  00EE  3030               	movlw	48
  2400  00EF  00F3               	movwf	??_ISR
  2401  00F0                     u52_27:
  2402  00F0  0BF3               	decfsz	??_ISR,f
  2403  00F1  28F0               	goto	u52_27
  2404  00F2  0BF4               	decfsz	??_ISR+1,f
  2405  00F3  28F0               	goto	u52_27
  2406  00F4  0000               	nop
  2407  00F5                     i1l1321:
  2408                           
  2409                           ;pseudocodigo_lab3.c: 94:         ADCON0bits.GO = 1;
  2410  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  2411  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  2412  00F7  149F               	bsf	31,1	;volatile
  2413                           
  2414                           ;pseudocodigo_lab3.c: 95:         while (ADCON0bits.GO != 0) {
  2415  00F8  290D               	goto	i1l1327
  2416  00F9                     i1l1323:
  2417                           
  2418                           ;pseudocodigo_lab3.c: 96:             ADC_VALOR_1 = ADC(ADRESL, ADRESH);
  2419  00F9  081E               	movf	30,w	;volatile
  2420  00FA  00F3               	movwf	??_ISR
  2421  00FB  0873               	movf	??_ISR,w
  2422  00FC  00F0               	movwf	ADC@ADRESH_
  2423  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  2424  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  2425  00FF  081E               	movf	30,w	;volatile
  2426  0100  120A  118A  23E2  120A  118A  	fcall	_ADC
  2427  0105  0871               	movf	?_ADC+1,w
  2428  0106  00FB               	movwf	_ADC_VALOR_1+1
  2429  0107  0870               	movf	?_ADC,w
  2430  0108  00FA               	movwf	_ADC_VALOR_1
  2431  0109                     i1l1325:
  2432                           
  2433                           ;pseudocodigo_lab3.c: 97:             ADC_flag1 = 1;
  2434  0109  3001               	movlw	1
  2435  010A  00F8               	movwf	_ADC_flag1
  2436  010B  3000               	movlw	0
  2437  010C  00F9               	movwf	_ADC_flag1+1
  2438  010D                     i1l1327:
  2439                           
  2440                           ;pseudocodigo_lab3.c: 95:         while (ADCON0bits.GO != 0) {
  2441  010D  1283               	bcf	3,5	;RP0=0, select bank0
  2442  010E  1303               	bcf	3,6	;RP1=0, select bank0
  2443  010F  189F               	btfsc	31,1	;volatile
  2444  0110  2912               	goto	u44_21
  2445  0111  2913               	goto	u44_20
  2446  0112                     u44_21:
  2447  0112  28F9               	goto	i1l1323
  2448  0113                     u44_20:
  2449  0113                     i1l1329:
  2450                           
  2451                           ;pseudocodigo_lab3.c: 101:         ADC_Config (1);
  2452  0113  3001               	movlw	1
  2453  0114  120A  118A  2024  120A  118A  	fcall	_ADC_Config
  2454  0119                     i1l1331:
  2455                           
  2456                           ;pseudocodigo_lab3.c: 102:         _delay((unsigned long)((2)*(8000000/4000.0)));
  2457  0119  3006               	movlw	6
  2458  011A  00F4               	movwf	??_ISR+1
  2459  011B  3030               	movlw	48
  2460  011C  00F3               	movwf	??_ISR
  2461  011D                     u53_27:
  2462  011D  0BF3               	decfsz	??_ISR,f
  2463  011E  291D               	goto	u53_27
  2464  011F  0BF4               	decfsz	??_ISR+1,f
  2465  0120  291D               	goto	u53_27
  2466  0121  0000               	nop
  2467  0122                     i1l1333:
  2468                           
  2469                           ;pseudocodigo_lab3.c: 103:         ADCON0bits.GO = 1;
  2470  0122  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0123  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0124  149F               	bsf	31,1	;volatile
  2473                           
  2474                           ;pseudocodigo_lab3.c: 104:         while (ADCON0bits.GO != 0) {
  2475  0125  293C               	goto	i1l1339
  2476  0126                     i1l1335:
  2477                           
  2478                           ;pseudocodigo_lab3.c: 105:             ADC_VALOR_2 = ADC(ADRESL, ADRESH);
  2479  0126  081E               	movf	30,w	;volatile
  2480  0127  00F3               	movwf	??_ISR
  2481  0128  0873               	movf	??_ISR,w
  2482  0129  00F0               	movwf	ADC@ADRESH_
  2483  012A  1683               	bsf	3,5	;RP0=1, select bank1
  2484  012B  1303               	bcf	3,6	;RP1=0, select bank1
  2485  012C  081E               	movf	30,w	;volatile
  2486  012D  120A  118A  23E2  120A  118A  	fcall	_ADC
  2487  0132  0871               	movf	?_ADC+1,w
  2488  0133  1283               	bcf	3,5	;RP0=0, select bank0
  2489  0134  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0135  00B1               	movwf	_ADC_VALOR_2+1
  2491  0136  0870               	movf	?_ADC,w
  2492  0137  00B0               	movwf	_ADC_VALOR_2
  2493  0138                     i1l1337:
  2494                           
  2495                           ;pseudocodigo_lab3.c: 106:             ADC_flag2 = 1;
  2496  0138  3001               	movlw	1
  2497  0139  00A8               	movwf	_ADC_flag2
  2498  013A  3000               	movlw	0
  2499  013B  00A9               	movwf	_ADC_flag2+1
  2500  013C                     i1l1339:
  2501                           
  2502                           ;pseudocodigo_lab3.c: 104:         while (ADCON0bits.GO != 0) {
  2503  013C  189F               	btfsc	31,1	;volatile
  2504  013D  293F               	goto	u45_21
  2505  013E  2940               	goto	u45_20
  2506  013F                     u45_21:
  2507  013F  2926               	goto	i1l1335
  2508  0140                     u45_20:
  2509  0140                     i1l91:
  2510                           
  2511                           ;pseudocodigo_lab3.c: 108:         PIR1bits.ADIF = 0;
  2512  0140  130C               	bcf	12,6	;volatile
  2513  0141                     i1l92:
  2514  0141  0877               	movf	??_ISR+4,w
  2515  0142  008A               	movwf	10
  2516  0143  0876               	movf	??_ISR+3,w
  2517  0144  0084               	movwf	4
  2518  0145  0E75               	swapf	??_ISR+2,w
  2519  0146  0083               	movwf	3
  2520  0147  0EFE               	swapf	btemp,f
  2521  0148  0E7E               	swapf	btemp,w
  2522  0149  0009               	retfie
  2523  014A                     __end_of_ISR:
  2524                           
  2525                           	psect	intentry
  2526  0004                     __pintentry:	
  2527                           ;incstack = 0
  2528                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2529                           
  2530  0004                     interrupt_function:
  2531  007E                     saved_w	set	btemp
  2532  0004  00FE               	movwf	btemp
  2533  0005  0E03               	swapf	3,w
  2534  0006  00F5               	movwf	??_ISR+2
  2535  0007  0804               	movf	4,w
  2536  0008  00F6               	movwf	??_ISR+3
  2537  0009  080A               	movf	10,w
  2538  000A  00F7               	movwf	??_ISR+4
  2539  000B  120A  118A  28E0   	ljmp	_ISR
  2540                           
  2541                           	psect	text16
  2542  0024                     __ptext16:	
  2543 ;; *************** function _ADC_Config *****************
  2544 ;; Defined at:
  2545 ;;		line 31 in file "Config_ADC.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  AN_num          1    wreg     unsigned char 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  AN_num          1    2[COMMON] unsigned char 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2559 ;;      Params:         0       0       0       0       0
  2560 ;;      Locals:         1       0       0       0       0
  2561 ;;      Temps:          2       0       0       0       0
  2562 ;;      Totals:         3       0       0       0       0
  2563 ;;Total ram usage:        3 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; This function calls:
  2566 ;;		Nothing
  2567 ;; This function is called by:
  2568 ;;		_ISR
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           
  2573                           ;psect for function _ADC_Config
  2574  0024                     _ADC_Config:
  2575                           
  2576                           ;incstack = 0
  2577                           ; Regs used in _ADC_Config: [wreg-fsr0h+status,2+status,0]
  2578                           ;ADC_Config@AN_num stored from wreg
  2579  0024  00F2               	movwf	ADC_Config@AN_num
  2580  0025                     i1l1227:
  2581                           
  2582                           ;Config_ADC.c: 33:     switch(AN_num){
  2583  0025  289D               	goto	i1l1231
  2584  0026                     i1l209:	
  2585                           ;Config_ADC.c: 34:         case 0:
  2586                           
  2587                           
  2588                           ;Config_ADC.c: 35:             ADCON0bits.CHS3 = 0;
  2589  0026  1283               	bcf	3,5	;RP0=0, select bank0
  2590  0027  1303               	bcf	3,6	;RP1=0, select bank0
  2591  0028  129F               	bcf	31,5	;volatile
  2592                           
  2593                           ;Config_ADC.c: 36:             ADCON0bits.CHS2 = 0;
  2594  0029  121F               	bcf	31,4	;volatile
  2595                           
  2596                           ;Config_ADC.c: 37:             ADCON0bits.CHS1 = 0;
  2597  002A  119F               	bcf	31,3	;volatile
  2598                           
  2599                           ;Config_ADC.c: 38:             ADCON0bits.CHS0 = 0;
  2600  002B  111F               	bcf	31,2	;volatile
  2601                           
  2602                           ;Config_ADC.c: 39:             break;
  2603  002C  28D7               	goto	i1l1233
  2604  002D                     i1l211:	
  2605                           ;Config_ADC.c: 40:         case 1:
  2606                           
  2607                           
  2608                           ;Config_ADC.c: 41:             ADCON0bits.CHS3 = 0;
  2609  002D  1283               	bcf	3,5	;RP0=0, select bank0
  2610  002E  1303               	bcf	3,6	;RP1=0, select bank0
  2611  002F  129F               	bcf	31,5	;volatile
  2612                           
  2613                           ;Config_ADC.c: 42:             ADCON0bits.CHS2 = 0;
  2614  0030  121F               	bcf	31,4	;volatile
  2615                           
  2616                           ;Config_ADC.c: 43:             ADCON0bits.CHS1 = 0;
  2617  0031  119F               	bcf	31,3	;volatile
  2618                           
  2619                           ;Config_ADC.c: 44:             ADCON0bits.CHS0 = 1;
  2620  0032  151F               	bsf	31,2	;volatile
  2621                           
  2622                           ;Config_ADC.c: 45:             break;
  2623  0033  28D7               	goto	i1l1233
  2624  0034                     i1l212:	
  2625                           ;Config_ADC.c: 46:         case 2:
  2626                           
  2627                           
  2628                           ;Config_ADC.c: 47:             ADCON0bits.CHS3 = 0;
  2629  0034  1283               	bcf	3,5	;RP0=0, select bank0
  2630  0035  1303               	bcf	3,6	;RP1=0, select bank0
  2631  0036  129F               	bcf	31,5	;volatile
  2632                           
  2633                           ;Config_ADC.c: 48:             ADCON0bits.CHS2 = 0;
  2634  0037  121F               	bcf	31,4	;volatile
  2635                           
  2636                           ;Config_ADC.c: 49:             ADCON0bits.CHS1 = 1;
  2637  0038  159F               	bsf	31,3	;volatile
  2638                           
  2639                           ;Config_ADC.c: 50:             ADCON0bits.CHS0 = 0;
  2640  0039  111F               	bcf	31,2	;volatile
  2641                           
  2642                           ;Config_ADC.c: 51:             break;
  2643  003A  28D7               	goto	i1l1233
  2644  003B                     i1l213:	
  2645                           ;Config_ADC.c: 52:         case 3:
  2646                           
  2647                           
  2648                           ;Config_ADC.c: 53:             ADCON0bits.CHS3 = 0;
  2649  003B  1283               	bcf	3,5	;RP0=0, select bank0
  2650  003C  1303               	bcf	3,6	;RP1=0, select bank0
  2651  003D  129F               	bcf	31,5	;volatile
  2652                           
  2653                           ;Config_ADC.c: 54:             ADCON0bits.CHS2 = 0;
  2654  003E  121F               	bcf	31,4	;volatile
  2655                           
  2656                           ;Config_ADC.c: 55:             ADCON0bits.CHS1 = 1;
  2657  003F  159F               	bsf	31,3	;volatile
  2658                           
  2659                           ;Config_ADC.c: 56:             ADCON0bits.CHS0 = 1;
  2660  0040  151F               	bsf	31,2	;volatile
  2661                           
  2662                           ;Config_ADC.c: 57:             break;
  2663  0041  28D7               	goto	i1l1233
  2664  0042                     i1l214:	
  2665                           ;Config_ADC.c: 58:         case 4:
  2666                           
  2667                           
  2668                           ;Config_ADC.c: 59:             ADCON0bits.CHS3 = 0;
  2669  0042  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0043  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0044  129F               	bcf	31,5	;volatile
  2672                           
  2673                           ;Config_ADC.c: 60:             ADCON0bits.CHS2 = 1;
  2674  0045  161F               	bsf	31,4	;volatile
  2675                           
  2676                           ;Config_ADC.c: 61:             ADCON0bits.CHS1 = 0;
  2677  0046  119F               	bcf	31,3	;volatile
  2678                           
  2679                           ;Config_ADC.c: 62:             ADCON0bits.CHS0 = 0;
  2680  0047  111F               	bcf	31,2	;volatile
  2681                           
  2682                           ;Config_ADC.c: 63:             break;
  2683  0048  28D7               	goto	i1l1233
  2684  0049                     i1l215:	
  2685                           ;Config_ADC.c: 64:         case 5:
  2686                           
  2687                           
  2688                           ;Config_ADC.c: 65:             ADCON0bits.CHS3 = 0;
  2689  0049  1283               	bcf	3,5	;RP0=0, select bank0
  2690  004A  1303               	bcf	3,6	;RP1=0, select bank0
  2691  004B  129F               	bcf	31,5	;volatile
  2692                           
  2693                           ;Config_ADC.c: 66:             ADCON0bits.CHS2 = 1;
  2694  004C  161F               	bsf	31,4	;volatile
  2695                           
  2696                           ;Config_ADC.c: 67:             ADCON0bits.CHS1 = 0;
  2697  004D  119F               	bcf	31,3	;volatile
  2698                           
  2699                           ;Config_ADC.c: 68:             ADCON0bits.CHS0 = 1;
  2700  004E  151F               	bsf	31,2	;volatile
  2701                           
  2702                           ;Config_ADC.c: 69:             break;
  2703  004F  28D7               	goto	i1l1233
  2704  0050                     i1l216:	
  2705                           ;Config_ADC.c: 70:         case 6:
  2706                           
  2707                           
  2708                           ;Config_ADC.c: 71:             ADCON0bits.CHS3 = 0;
  2709  0050  1283               	bcf	3,5	;RP0=0, select bank0
  2710  0051  1303               	bcf	3,6	;RP1=0, select bank0
  2711  0052  129F               	bcf	31,5	;volatile
  2712                           
  2713                           ;Config_ADC.c: 72:             ADCON0bits.CHS2 = 1;
  2714  0053  161F               	bsf	31,4	;volatile
  2715                           
  2716                           ;Config_ADC.c: 73:             ADCON0bits.CHS1 = 1;
  2717  0054  159F               	bsf	31,3	;volatile
  2718                           
  2719                           ;Config_ADC.c: 74:             ADCON0bits.CHS0 = 0;
  2720  0055  111F               	bcf	31,2	;volatile
  2721                           
  2722                           ;Config_ADC.c: 75:             break;
  2723  0056  28D7               	goto	i1l1233
  2724  0057                     i1l217:	
  2725                           ;Config_ADC.c: 76:         case 7:
  2726                           
  2727                           
  2728                           ;Config_ADC.c: 77:             ADCON0bits.CHS3 = 0;
  2729  0057  1283               	bcf	3,5	;RP0=0, select bank0
  2730  0058  1303               	bcf	3,6	;RP1=0, select bank0
  2731  0059  129F               	bcf	31,5	;volatile
  2732                           
  2733                           ;Config_ADC.c: 78:             ADCON0bits.CHS2 = 1;
  2734  005A  161F               	bsf	31,4	;volatile
  2735                           
  2736                           ;Config_ADC.c: 79:             ADCON0bits.CHS1 = 1;
  2737  005B  159F               	bsf	31,3	;volatile
  2738                           
  2739                           ;Config_ADC.c: 80:             ADCON0bits.CHS0 = 1;
  2740  005C  151F               	bsf	31,2	;volatile
  2741                           
  2742                           ;Config_ADC.c: 81:             break;
  2743  005D  28D7               	goto	i1l1233
  2744  005E                     i1l218:	
  2745                           ;Config_ADC.c: 82:         case 8:
  2746                           
  2747                           
  2748                           ;Config_ADC.c: 83:             ADCON0bits.CHS3 = 1;
  2749  005E  1283               	bcf	3,5	;RP0=0, select bank0
  2750  005F  1303               	bcf	3,6	;RP1=0, select bank0
  2751  0060  169F               	bsf	31,5	;volatile
  2752                           
  2753                           ;Config_ADC.c: 84:             ADCON0bits.CHS2 = 0;
  2754  0061  121F               	bcf	31,4	;volatile
  2755                           
  2756                           ;Config_ADC.c: 85:             ADCON0bits.CHS1 = 0;
  2757  0062  119F               	bcf	31,3	;volatile
  2758                           
  2759                           ;Config_ADC.c: 86:             ADCON0bits.CHS0 = 0;
  2760  0063  111F               	bcf	31,2	;volatile
  2761                           
  2762                           ;Config_ADC.c: 87:             break;
  2763  0064  28D7               	goto	i1l1233
  2764  0065                     i1l219:	
  2765                           ;Config_ADC.c: 88:         case 9:
  2766                           
  2767                           
  2768                           ;Config_ADC.c: 89:             ADCON0bits.CHS3 = 1;
  2769  0065  1283               	bcf	3,5	;RP0=0, select bank0
  2770  0066  1303               	bcf	3,6	;RP1=0, select bank0
  2771  0067  169F               	bsf	31,5	;volatile
  2772                           
  2773                           ;Config_ADC.c: 90:             ADCON0bits.CHS2 = 0;
  2774  0068  121F               	bcf	31,4	;volatile
  2775                           
  2776                           ;Config_ADC.c: 91:             ADCON0bits.CHS1 = 0;
  2777  0069  119F               	bcf	31,3	;volatile
  2778                           
  2779                           ;Config_ADC.c: 92:             ADCON0bits.CHS0 = 1;
  2780  006A  151F               	bsf	31,2	;volatile
  2781                           
  2782                           ;Config_ADC.c: 93:             break;
  2783  006B  28D7               	goto	i1l1233
  2784  006C                     i1l220:	
  2785                           ;Config_ADC.c: 94:         case 10:
  2786                           
  2787                           
  2788                           ;Config_ADC.c: 95:             ADCON0bits.CHS3 = 1;
  2789  006C  1283               	bcf	3,5	;RP0=0, select bank0
  2790  006D  1303               	bcf	3,6	;RP1=0, select bank0
  2791  006E  169F               	bsf	31,5	;volatile
  2792                           
  2793                           ;Config_ADC.c: 96:             ADCON0bits.CHS2 = 0;
  2794  006F  121F               	bcf	31,4	;volatile
  2795                           
  2796                           ;Config_ADC.c: 97:             ADCON0bits.CHS1 = 1;
  2797  0070  159F               	bsf	31,3	;volatile
  2798                           
  2799                           ;Config_ADC.c: 98:             ADCON0bits.CHS0 = 0;
  2800  0071  111F               	bcf	31,2	;volatile
  2801                           
  2802                           ;Config_ADC.c: 99:             break;
  2803  0072  28D7               	goto	i1l1233
  2804  0073                     i1l221:	
  2805                           ;Config_ADC.c: 100:         case 11:
  2806                           
  2807                           
  2808                           ;Config_ADC.c: 101:             ADCON0bits.CHS3 = 1;
  2809  0073  1283               	bcf	3,5	;RP0=0, select bank0
  2810  0074  1303               	bcf	3,6	;RP1=0, select bank0
  2811  0075  169F               	bsf	31,5	;volatile
  2812                           
  2813                           ;Config_ADC.c: 102:             ADCON0bits.CHS2 = 0;
  2814  0076  121F               	bcf	31,4	;volatile
  2815                           
  2816                           ;Config_ADC.c: 103:             ADCON0bits.CHS1 = 1;
  2817  0077  159F               	bsf	31,3	;volatile
  2818                           
  2819                           ;Config_ADC.c: 104:             ADCON0bits.CHS0 = 1;
  2820  0078  151F               	bsf	31,2	;volatile
  2821                           
  2822                           ;Config_ADC.c: 105:             break;
  2823  0079  28D7               	goto	i1l1233
  2824  007A                     i1l222:	
  2825                           ;Config_ADC.c: 106:         case 12:
  2826                           
  2827                           
  2828                           ;Config_ADC.c: 107:             ADCON0bits.CHS3 = 1;
  2829  007A  1283               	bcf	3,5	;RP0=0, select bank0
  2830  007B  1303               	bcf	3,6	;RP1=0, select bank0
  2831  007C  169F               	bsf	31,5	;volatile
  2832                           
  2833                           ;Config_ADC.c: 108:             ADCON0bits.CHS2 = 1;
  2834  007D  161F               	bsf	31,4	;volatile
  2835                           
  2836                           ;Config_ADC.c: 109:             ADCON0bits.CHS1 = 0;
  2837  007E  119F               	bcf	31,3	;volatile
  2838                           
  2839                           ;Config_ADC.c: 110:             ADCON0bits.CHS0 = 0;
  2840  007F  111F               	bcf	31,2	;volatile
  2841                           
  2842                           ;Config_ADC.c: 111:             break;
  2843  0080  28D7               	goto	i1l1233
  2844  0081                     i1l223:	
  2845                           ;Config_ADC.c: 112:         case 13:
  2846                           
  2847                           
  2848                           ;Config_ADC.c: 113:             ADCON0bits.CHS3 = 1;
  2849  0081  1283               	bcf	3,5	;RP0=0, select bank0
  2850  0082  1303               	bcf	3,6	;RP1=0, select bank0
  2851  0083  169F               	bsf	31,5	;volatile
  2852                           
  2853                           ;Config_ADC.c: 114:             ADCON0bits.CHS2 = 1;
  2854  0084  161F               	bsf	31,4	;volatile
  2855                           
  2856                           ;Config_ADC.c: 115:             ADCON0bits.CHS1 = 0;
  2857  0085  119F               	bcf	31,3	;volatile
  2858                           
  2859                           ;Config_ADC.c: 116:             ADCON0bits.CHS0 = 1;
  2860  0086  151F               	bsf	31,2	;volatile
  2861                           
  2862                           ;Config_ADC.c: 117:             break;
  2863  0087  28D7               	goto	i1l1233
  2864  0088                     i1l224:	
  2865                           ;Config_ADC.c: 118:         case 14:
  2866                           
  2867                           
  2868                           ;Config_ADC.c: 119:             ADCON0bits.CHS3 = 1;
  2869  0088  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0089  1303               	bcf	3,6	;RP1=0, select bank0
  2871  008A  169F               	bsf	31,5	;volatile
  2872                           
  2873                           ;Config_ADC.c: 120:             ADCON0bits.CHS2 = 1;
  2874  008B  161F               	bsf	31,4	;volatile
  2875                           
  2876                           ;Config_ADC.c: 121:             ADCON0bits.CHS1 = 1;
  2877  008C  159F               	bsf	31,3	;volatile
  2878                           
  2879                           ;Config_ADC.c: 122:             ADCON0bits.CHS0 = 0;
  2880  008D  111F               	bcf	31,2	;volatile
  2881                           
  2882                           ;Config_ADC.c: 123:             break;
  2883  008E  28D7               	goto	i1l1233
  2884  008F                     i1l225:	
  2885                           ;Config_ADC.c: 124:         case 15:
  2886                           
  2887                           
  2888                           ;Config_ADC.c: 125:             ADCON0bits.CHS3 = 1;
  2889  008F  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0090  1303               	bcf	3,6	;RP1=0, select bank0
  2891  0091  169F               	bsf	31,5	;volatile
  2892                           
  2893                           ;Config_ADC.c: 126:             ADCON0bits.CHS2 = 1;
  2894  0092  161F               	bsf	31,4	;volatile
  2895                           
  2896                           ;Config_ADC.c: 127:             ADCON0bits.CHS1 = 1;
  2897  0093  159F               	bsf	31,3	;volatile
  2898                           
  2899                           ;Config_ADC.c: 128:             ADCON0bits.CHS0 = 1;
  2900  0094  151F               	bsf	31,2	;volatile
  2901                           
  2902                           ;Config_ADC.c: 129:             break;
  2903  0095  28D7               	goto	i1l1233
  2904  0096                     i1l226:	
  2905                           ;Config_ADC.c: 130:         default:
  2906                           
  2907                           
  2908                           ;Config_ADC.c: 131:             ADCON0bits.CHS3 = 0;
  2909  0096  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0097  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0098  129F               	bcf	31,5	;volatile
  2912                           
  2913                           ;Config_ADC.c: 132:             ADCON0bits.CHS2 = 0;
  2914  0099  121F               	bcf	31,4	;volatile
  2915                           
  2916                           ;Config_ADC.c: 133:             ADCON0bits.CHS1 = 0;
  2917  009A  119F               	bcf	31,3	;volatile
  2918                           
  2919                           ;Config_ADC.c: 134:             ADCON0bits.CHS0 = 0;
  2920  009B  111F               	bcf	31,2	;volatile
  2921                           
  2922                           ;Config_ADC.c: 135:             break;
  2923  009C  28D7               	goto	i1l1233
  2924  009D                     i1l1231:
  2925  009D  0872               	movf	ADC_Config@AN_num,w
  2926  009E  00F0               	movwf	??_ADC_Config
  2927  009F  01F1               	clrf	??_ADC_Config+1
  2928                           
  2929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2930                           ; Switch size 1, requested type "simple"
  2931                           ; Number of cases is 1, Range of values is 0 to 0
  2932                           ; switch strategies available:
  2933                           ; Name         Instructions Cycles
  2934                           ; simple_byte            4     3 (average)
  2935                           ; direct_byte           11     8 (fixed)
  2936                           ; jumptable            260     6 (fixed)
  2937                           ;	Chosen strategy is simple_byte
  2938  00A0  0871               	movf	??_ADC_Config+1,w
  2939  00A1  3A00               	xorlw	0	; case 0
  2940  00A2  1903               	skipnz
  2941  00A3  28A5               	goto	i1l1425
  2942  00A4  2896               	goto	i1l226
  2943  00A5                     i1l1425:
  2944                           
  2945                           ; Switch size 1, requested type "simple"
  2946                           ; Number of cases is 16, Range of values is 0 to 15
  2947                           ; switch strategies available:
  2948                           ; Name         Instructions Cycles
  2949                           ; simple_byte           49    25 (average)
  2950                           ; direct_byte           56     8 (fixed)
  2951                           ; jumptable            260     6 (fixed)
  2952                           ;	Chosen strategy is simple_byte
  2953  00A5  0870               	movf	??_ADC_Config,w
  2954  00A6  3A00               	xorlw	0	; case 0
  2955  00A7  1903               	skipnz
  2956  00A8  2826               	goto	i1l209
  2957  00A9  3A01               	xorlw	1	; case 1
  2958  00AA  1903               	skipnz
  2959  00AB  282D               	goto	i1l211
  2960  00AC  3A03               	xorlw	3	; case 2
  2961  00AD  1903               	skipnz
  2962  00AE  2834               	goto	i1l212
  2963  00AF  3A01               	xorlw	1	; case 3
  2964  00B0  1903               	skipnz
  2965  00B1  283B               	goto	i1l213
  2966  00B2  3A07               	xorlw	7	; case 4
  2967  00B3  1903               	skipnz
  2968  00B4  2842               	goto	i1l214
  2969  00B5  3A01               	xorlw	1	; case 5
  2970  00B6  1903               	skipnz
  2971  00B7  2849               	goto	i1l215
  2972  00B8  3A03               	xorlw	3	; case 6
  2973  00B9  1903               	skipnz
  2974  00BA  2850               	goto	i1l216
  2975  00BB  3A01               	xorlw	1	; case 7
  2976  00BC  1903               	skipnz
  2977  00BD  2857               	goto	i1l217
  2978  00BE  3A0F               	xorlw	15	; case 8
  2979  00BF  1903               	skipnz
  2980  00C0  285E               	goto	i1l218
  2981  00C1  3A01               	xorlw	1	; case 9
  2982  00C2  1903               	skipnz
  2983  00C3  2865               	goto	i1l219
  2984  00C4  3A03               	xorlw	3	; case 10
  2985  00C5  1903               	skipnz
  2986  00C6  286C               	goto	i1l220
  2987  00C7  3A01               	xorlw	1	; case 11
  2988  00C8  1903               	skipnz
  2989  00C9  2873               	goto	i1l221
  2990  00CA  3A07               	xorlw	7	; case 12
  2991  00CB  1903               	skipnz
  2992  00CC  287A               	goto	i1l222
  2993  00CD  3A01               	xorlw	1	; case 13
  2994  00CE  1903               	skipnz
  2995  00CF  2881               	goto	i1l223
  2996  00D0  3A03               	xorlw	3	; case 14
  2997  00D1  1903               	skipnz
  2998  00D2  2888               	goto	i1l224
  2999  00D3  3A01               	xorlw	1	; case 15
  3000  00D4  1903               	skipnz
  3001  00D5  288F               	goto	i1l225
  3002  00D6  2896               	goto	i1l226
  3003  00D7                     i1l1233:
  3004                           
  3005                           ;Config_ADC.c: 137:     ADCON1 = 0b00000000;
  3006  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  3007  00D8  1303               	bcf	3,6	;RP1=0, select bank1
  3008  00D9  019F               	clrf	31	;volatile
  3009  00DA                     i1l1235:
  3010                           
  3011                           ;Config_ADC.c: 138:     ADCON0bits.ADCS1 = 0;
  3012  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  3013  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  3014  00DC  139F               	bcf	31,7	;volatile
  3015  00DD                     i1l1237:
  3016                           
  3017                           ;Config_ADC.c: 139:     ADCON0bits.ADCS0 = 0;
  3018  00DD  131F               	bcf	31,6	;volatile
  3019  00DE                     i1l1239:
  3020                           
  3021                           ;Config_ADC.c: 140:     ADCON0bits.ADON = 1;
  3022  00DE  141F               	bsf	31,0	;volatile
  3023  00DF                     i1l227:
  3024  00DF  0008               	return
  3025  00E0                     __end_of_ADC_Config:
  3026                           
  3027                           	psect	text17
  3028  03E2                     __ptext17:	
  3029 ;; *************** function _ADC *****************
  3030 ;; Defined at:
  3031 ;;		line 11 in file "Config_ADC.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  ADRESL_         1    wreg     unsigned char 
  3034 ;;  ADRESH_         1    0[COMMON] unsigned char 
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;  ADRESL_         1    0[COMMON] unsigned char 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  2    0[COMMON] int 
  3039 ;; Registers used:
  3040 ;;		wreg
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3046 ;;      Params:         3       0       0       0       0
  3047 ;;      Locals:         0       0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0
  3049 ;;      Totals:         3       0       0       0       0
  3050 ;;Total ram usage:        3 bytes
  3051 ;; Hardware stack levels used:    1
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_ISR
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           
  3060                           ;psect for function _ADC
  3061  03E2                     _ADC:
  3062  03E2                     i1l1245:	
  3063                           ;incstack = 0
  3064                           ; Regs used in _ADC: [wreg]
  3065                           
  3066                           
  3067                           ;Config_ADC.c: 12:     VAL = (ADRESL << 8) | ADRESH;
  3068  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  3069  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  3070  03E4  081E               	movf	30,w	;volatile
  3071  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  3072  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  3073  03E7  00A7               	movwf	_VAL+1
  3074  03E8  081E               	movf	30,w	;volatile
  3075  03E9  00A6               	movwf	_VAL
  3076                           
  3077                           ;Config_ADC.c: 13:     return VAL;
  3078  03EA  0827               	movf	_VAL+1,w
  3079  03EB  00F1               	movwf	?_ADC+1
  3080  03EC  0826               	movf	_VAL,w
  3081  03ED  00F0               	movwf	?_ADC
  3082  03EE                     i1l196:
  3083  03EE  0008               	return
  3084  03EF                     __end_of_ADC:
  3085  007E                     btemp	set	126	;btemp
  3086  007E                     wtemp0	set	126
  3087                           
  3088                           	psect	config
  3089                           
  3090                           ;Config register CONFIG1 @ 0x2007
  3091                           ;	Oscillator Selection bits
  3092                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  3093                           ;	Watchdog Timer Enable bit
  3094                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3095                           ;	Power-up Timer Enable bit
  3096                           ;	PWRTE = OFF, PWRT disabled
  3097                           ;	RE3/MCLR pin function select bit
  3098                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3099                           ;	Code Protection bit
  3100                           ;	CP = OFF, Program memory code protection is disabled
  3101                           ;	Data Code Protection bit
  3102                           ;	CPD = OFF, Data memory code protection is disabled
  3103                           ;	Brown Out Reset Selection bits
  3104                           ;	BOREN = ON, BOR enabled
  3105                           ;	Internal External Switchover bit
  3106                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3107                           ;	Fail-Safe Clock Monitor Enabled bit
  3108                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3109                           ;	Low Voltage Programming Enable bit
  3110                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3111                           ;	In-Circuit Debugger Mode bit
  3112                           ;	DEBUG = 0x1, unprogrammed default
  3113  2007                     	org	8199
  3114  2007  23D2               	dw	9170
  3115                           
  3116                           ;Config register CONFIG2 @ 0x2008
  3117                           ;	Brown-out Reset Selection bit
  3118                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3119                           ;	Flash Program Memory Self Write Enable bits
  3120                           ;	WRT = OFF, Write protection off
  3121  2008                     	org	8200
  3122  2008  3FFF               	dw	16383

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     15      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_ADC
    _ISR->_ADC_Config

Critical Paths under _main in BANK0

    _titulos_LCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _setup->_initOsc
    _mapeo->___awdiv
    ___awdiv->___wmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2025
                     _CONVERSION_ADC
                   _Config_INTERRUPT
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                              _mapeo
                              _setup
                        _titulos_LCD
 ---------------------------------------------------------------------------------
 (1) _titulos_LCD                                          1     1      0     715
                                              8 BANK0      1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     233
                                              3 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     482
                                              4 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _mapeo                                                0     0      0     696
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONVERSION_ADC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  5     5      0     174
                                              3 COMMON     5     5      0
                                _ADC
                         _ADC_Config
 ---------------------------------------------------------------------------------
 (6) _ADC_Config                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _ADC                                                  4     1      3     152
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVERSION_ADC
   _Config_INTERRUPT
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _mapeo
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _setup
     _initOsc
   _titulos_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port

 _ISR (ROOT)
   _ADC
   _ADC_Config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      21       5       41.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 10 22:43:52 2021

                        _a 007D                          _x 002A                          pc 0002  
             ___awdiv@sign 003E                         fsr 0004        ___wmul@multiplicand 0034  
      __size_of_ADC_Config 00BC                        l112 0366                        l106 03B7  
                      l130 01D5                        l131 01DB                        l115 039D  
                      l132 01E1                        l124 01B7                        l133 01E7  
                      l125 020F                        l109 0297                        l118 03F7  
                      l150 0405                        l134 0210                        l126 01BD  
                      l127 01C3                        l128 01C9                        l153 0382  
                      l313 0303                        l129 01CF                        l162 0341  
                      l147 0260                        l315 031B                        l171 02F4  
                      l165 03CF                        _ADC 03E2                        l466 01B2  
                      u300 0317                        u301 0316                        u310 0151  
                      u311 0150                        u400 01A9                        u320 015C  
                      u240 0324                        u401 01A8                        u321 015B  
                      u241 0323                        u410 03A4                        u330 016D  
                      u250 0336                        u411 03A3                        u331 016C  
                      u251 0335                        u420 03AC                        u260 02F4  
                      u421 03AB                        u261 02F3                        u350 017F  
                      u270 02FD                        u351 017E                        u271 02FC  
                      u345 0171                        u370 0190                        u507 023D  
                      u371 018F                        _ISR 00E0                        u517 037A  
                      u365 0180                        u285 0304                        u390 01A4  
                      u391 01A3                        u375 018C                        u295 030B  
                      u385 0198                        u477 03C9                        _VAL 0026  
                      u487 021D                        u497 022D                        fsr0 0004  
                      indf 0000                _titulos_LCD 0261                       ?_ADC 0070  
                     ?_ISR 0070                       l1201 016D                       l1121 03C2  
                     l1115 0403                       l1131 0371                       l1211 0190  
                     l1203 0170                       l1123 03C5                       l1301 039E  
                     l1133 0374                       l1221 01A9                       l1213 0196  
                     l1205 0177                       l1141 0329                       l1125 03CC  
                     l1117 03BB                       l1311 03B6                       l1303 03A4  
                     l1135 037F                       l1127 036A                       l1223 01AE  
                     l1215 0197                       l1207 017B                       l1143 0330  
                     l1119 03BC                       l1151 02D2                       l1305 03AC  
                     l1129 036B                       l1217 019E                       l1209 017F  
                     l1313 0342                       l1161 01ED                       l1145 0336  
                     l1137 031F                       l1153 02DF                       l1307 03B2  
                     l1219 01A4                       l1171 02F9                       l1251 0389  
                     l1147 033B                       l1139 0324                       l1155 02E7  
                     l1309 03B4                       l1173 02FD                       l1157 01B6  
                     l1261 0394                       l1253 038D                       l1149 02CF  
                     l1341 0298                       l1191 0158                       l1183 014A  
                     l1175 030A                       l1423 01F5                       l1271 039B  
                     l1263 0395                       l1255 038E                       l1351 02B6  
                     l1343 029D                       l1281 0211                       l1193 015C  
                     l1185 014D                       l1177 0311                       l1169 02F5  
                     l1273 039C                       l1265 0396                       l1257 0392  
                     l1249 0383                       l1353 02C0                       l1345 02A2  
                     l1275 03EF                       l1283 0217                       l1195 0161  
                     l1187 0151                       l1179 0317                       l1267 0399  
                     l1259 0393                       l1291 0261                       l1347 02AC  
                     l1277 03F1                       l1285 0221                       l1197 0165  
                     l1189 0156                       l1269 039A                       l1293 026D  
                     l1349 02B1                       l1279 03F4                       l1287 0231  
                     l1199 0167                       l1295 0273                       l1289 0237  
                     l1297 0285                       l1299 0291                       STR_1 03D6  
                     STR_2 03DA                       STR_3 03DE                       i1l91 0140  
                     i1l92 0141          ?_Lcd_Write_String 0070                       _main 0298  
                     btemp 007E   __end_of_Config_INTERRUPT 03F8                       start 000E  
       ??_Lcd_Write_String 0035            __end_of_Lcd_Cmd 0383                      ??_ADC 0073  
                    ??_ISR 0073                      ?_main 0070            __end_of___awdiv 01B3  
                    _ANSEL 0188            ___awdiv@divisor 0038                      i1l211 002D  
                    i1l220 006C                      i1l212 0034                      i1l221 0073  
                    i1l213 003B                      i1l222 007A                      i1l214 0042  
                    i1l223 0081                      i1l215 0049                      i1l224 0088  
                    i1l216 0050                      i1l225 008F                      i1l217 0057  
                    i1l209 0026                      i1l226 0096                      i1l218 005E  
                    i1l227 00DF                      i1l219 0065                      i1l196 03EE  
          ___awdiv@counter 003D                      u43_20 00E6                      u43_21 00E5  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u44_20 0113  
                    u44_21 0112                      u52_27 00F0                      u45_20 0140  
                    u45_21 013F                      u53_27 011D    __size_of_Lcd_Set_Cursor 0026  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089           ADC_Config@AN_num 0072  
          __end_of_initOsc 0211                      _mapeo 0342                      _setup 0383  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0261           __end_of_Lcd_Port 0406            __initialization 0011  
             __end_of_main 02CC                     ??_main 0041                     _ADCON1 009F  
                   ?_mapeo 0070                     _ADRESH 001E                     _ADRESL 009E  
              initOsc@IRCF 0034           ___awdiv@dividend 003A                     ?_setup 0070  
                   _ANSELH 0189                     i1l1231 009D                     i1l1233 00D7  
                   i1l1321 00F5                     i1l1235 00DA                     i1l1227 0025  
                   i1l1331 0119                     i1l1323 00F9                     i1l1315 00E0  
                   i1l1245 03E2                     i1l1237 00DD                     i1l1333 0122  
                   i1l1325 0109                     i1l1317 00E6                     i1l1239 00DE  
                   i1l1335 0126                     i1l1327 010D                     i1l1319 00EC  
                   i1l1425 00A5                     i1l1337 0138                     i1l1329 0113  
                   i1l1339 013C               ??_ADC_Config 0070                     _INTCON 000B  
                ??_Lcd_Cmd 0033                     _S1_val 002E                     _S2_val 002C  
  __size_of_Lcd_Write_Char 0018                     ___wmul 02F5                  ??___awdiv 003C  
         ___awdiv@quotient 003F         __end_of_ADC_Config 00E0                  ??_initOsc 0032  
                   saved_w 007E                 ADC@ADRESH_ 0070                 ADC@ADRESL_ 0070  
          Lcd_Set_Cursor@a 0038            Lcd_Set_Cursor@b 0036    __end_of__initialization 0020  
           __pcstackCOMMON 0070              __end_of_mapeo 0367              __end_of_setup 039E  
           _Lcd_Set_Cursor 031C               ?_titulos_LCD 0070                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_mapeo 0041                    ??_setup 0035  
               __pbssBANK0 0020    __size_of_CONVERSION_ADC 001A          ?_Config_INTERRUPT 0070  
               __pmaintext 0298         ??_Config_INTERRUPT 0032                    ?___wmul 0032  
               __pintentry 0004  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 0342  
                  _S3_cont 007C                 ??_Lcd_Init 0036                 ??_Lcd_Port 0032  
               __stringtab 03D0             _Lcd_Write_Char 03B8                    _Lcd_Cmd 0367  
                _ADC_flag1 0078                  _ADC_flag2 0028                    ___awdiv 014A  
          __size_of___wmul 0027            ?_Lcd_Set_Cursor 0036                    __ptext1 0261  
                  __ptext2 02CC                    __ptext3 03B8                    __ptext4 031C  
                  __ptext5 0383                    __ptext6 01B3                    __ptext7 0342  
                  __ptext8 02F5                    __ptext9 014A               __size_of_ADC 000D  
             __size_of_ISR 006A                    _initOsc 01B3                    clrloop0 03F9  
   __end_of_Lcd_Write_Char 03D0       end_of_initialization 0020                  Lcd_Port@a 0032  
                _PORTEbits 0009       __size_of_titulos_LCD 0037            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0037          Lcd_Write_String@i 0035             _CONVERSION_ADC 039E  
              _ADC_VALOR_1 007A                _ADC_VALOR_2 0030             __end_of___wmul 031C  
         _Lcd_Write_String 02CC        start_initialization 0011                __end_of_ADC 03EF  
              __end_of_ISR 014A     __end_of_CONVERSION_ADC 03B8          __size_of_Lcd_Init 0050  
        __size_of_Lcd_Port 0006                   ??___wmul 0036            Lcd_Write_Char@a 0034  
__size_of_Config_INTERRUPT 0009                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0032            ?_CONVERSION_ADC 0070                   ?_Lcd_Cmd 0070  
         ??_Lcd_Set_Cursor 0037                   ?___awdiv 0038                  __pstrings 03D0  
                 ?_initOsc 0070             __size_of_mapeo 0025             __size_of_setup 001B  
        interrupt_function 0004             ___wmul@product 0036                  clear_ram0 03F8  
                 _PIE1bits 008C                   Lcd_Cmd@a 0035                   _PIR1bits 000C  
                 _VAL_SWAP 0024                 _ADCON0bits 001F                __stringbase 03D5  
        ___wmul@multiplier 0032           ??_Lcd_Write_Char 0033                   _Lcd_Init 0211  
                 _Lcd_Port 0400                 _ADC_Config 0024   __end_of_Lcd_Write_String 02F5  
         __size_of_Lcd_Cmd 001C           __size_of___awdiv 0069         __end_of__stringtab 03D6  
         _Config_INTERRUPT 03EF              ??_titulos_LCD 003A           __size_of_initOsc 005E  
                 __ptext10 0211                   __ptext11 0367                   __ptext12 0400  
                 __ptext13 03EF                   __ptext14 039E                   __ptext15 00E0  
                 __ptext16 0024                   __ptext17 03E2              __size_of_main 0034  
         ??_CONVERSION_ADC 0032                _VAL_NIBBLE1 0022                _VAL_NIBBLE2 0020  
                 intlevel1 0000                ?_ADC_Config 0070        __end_of_titulos_LCD 0298  
                stringcode 03D0                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 0039  
                 stringdir 03D0                   stringtab 03D0  
