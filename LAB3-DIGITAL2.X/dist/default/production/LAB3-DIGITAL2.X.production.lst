

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 11 14:19:23 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  0105                     	;# 
   150  0107                     	;# 
   151  0108                     	;# 
   152  0109                     	;# 
   153  010C                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0185                     	;# 
   159  0187                     	;# 
   160  0188                     	;# 
   161  0189                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  0105                     	;# 
   228  0107                     	;# 
   229  0108                     	;# 
   230  0109                     	;# 
   231  010C                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  0185                     	;# 
   237  0187                     	;# 
   238  0188                     	;# 
   239  0189                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001D                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0086                     	;# 
   280  0087                     	;# 
   281  0088                     	;# 
   282  0089                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  0105                     	;# 
   306  0107                     	;# 
   307  0108                     	;# 
   308  0109                     	;# 
   309  010C                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  0185                     	;# 
   315  0187                     	;# 
   316  0188                     	;# 
   317  0189                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  000E                     	;# 
   336  000F                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0014                     	;# 
   342  0015                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0017                     	;# 
   346  0018                     	;# 
   347  0019                     	;# 
   348  001A                     	;# 
   349  001B                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001D                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  0081                     	;# 
   356  0085                     	;# 
   357  0086                     	;# 
   358  0087                     	;# 
   359  0088                     	;# 
   360  0089                     	;# 
   361  008C                     	;# 
   362  008D                     	;# 
   363  008E                     	;# 
   364  008F                     	;# 
   365  0090                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0095                     	;# 
   373  0096                     	;# 
   374  0097                     	;# 
   375  0098                     	;# 
   376  0099                     	;# 
   377  009A                     	;# 
   378  009B                     	;# 
   379  009C                     	;# 
   380  009D                     	;# 
   381  009E                     	;# 
   382  009F                     	;# 
   383  0105                     	;# 
   384  0107                     	;# 
   385  0108                     	;# 
   386  0109                     	;# 
   387  010C                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  010F                     	;# 
   392  0185                     	;# 
   393  0187                     	;# 
   394  0188                     	;# 
   395  0189                     	;# 
   396  018C                     	;# 
   397  018D                     	;# 
   398  0000                     	;# 
   399  0001                     	;# 
   400  0002                     	;# 
   401  0003                     	;# 
   402  0004                     	;# 
   403  0005                     	;# 
   404  0006                     	;# 
   405  0007                     	;# 
   406  0008                     	;# 
   407  0009                     	;# 
   408  000A                     	;# 
   409  000B                     	;# 
   410  000C                     	;# 
   411  000D                     	;# 
   412  000E                     	;# 
   413  000E                     	;# 
   414  000F                     	;# 
   415  0010                     	;# 
   416  0011                     	;# 
   417  0012                     	;# 
   418  0013                     	;# 
   419  0014                     	;# 
   420  0015                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  001D                     	;# 
   431  001E                     	;# 
   432  001F                     	;# 
   433  0081                     	;# 
   434  0085                     	;# 
   435  0086                     	;# 
   436  0087                     	;# 
   437  0088                     	;# 
   438  0089                     	;# 
   439  008C                     	;# 
   440  008D                     	;# 
   441  008E                     	;# 
   442  008F                     	;# 
   443  0090                     	;# 
   444  0091                     	;# 
   445  0092                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0093                     	;# 
   449  0094                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  009F                     	;# 
   461  0105                     	;# 
   462  0107                     	;# 
   463  0108                     	;# 
   464  0109                     	;# 
   465  010C                     	;# 
   466  010C                     	;# 
   467  010D                     	;# 
   468  010E                     	;# 
   469  010F                     	;# 
   470  0185                     	;# 
   471  0187                     	;# 
   472  0188                     	;# 
   473  0189                     	;# 
   474  018C                     	;# 
   475  018D                     	;# 
   476                           
   477                           	psect	strings
   478  1800                     __pstrings:
   479  1800                     stringtab:
   480  1800                     __stringtab:
   481                           
   482                           ;	String table - string pointers are 1 byte each
   483  1800  1BFF               	btfsc	btemp+1,7
   484  1801  280A               	ljmp	stringcode
   485  1802  1383               	bcf	3,7
   486  1803  187F               	btfsc	btemp+1,0
   487  1804  1783               	bsf	3,7
   488  1805  0800               	movf	0,w
   489  1806  0A84               	incf	4,f
   490  1807  1903               	skipnz
   491  1808  0AFF               	incf	btemp+1,f
   492  1809  0008               	return
   493  180A                     stringcode:
   494  180A                     stringdir:
   495  180A  3018               	movlw	high stringdir
   496  180B  008A               	movwf	10
   497  180C  0804               	movf	4,w
   498  180D  0A84               	incf	4,f
   499  180E  0782               	addwf	2,f
   500  180F                     __stringbase:
   501  180F  3400               	retlw	0
   502  1810                     __end_of__stringtab:
   503  1810                     __powers_:
   504  1810  3400               	retlw	0
   505  1811  3400               	retlw	0
   506  1812  3480               	retlw	128
   507  1813  343F               	retlw	63
   508  1814  3400               	retlw	0
   509  1815  3400               	retlw	0
   510  1816  3420               	retlw	32
   511  1817  3441               	retlw	65
   512  1818  3400               	retlw	0
   513  1819  3400               	retlw	0
   514  181A  34C8               	retlw	200
   515  181B  3442               	retlw	66
   516  181C  3400               	retlw	0
   517  181D  3400               	retlw	0
   518  181E  347A               	retlw	122
   519  181F  3444               	retlw	68
   520  1820  3400               	retlw	0
   521  1821  3440               	retlw	64
   522  1822  341C               	retlw	28
   523  1823  3446               	retlw	70
   524  1824  3400               	retlw	0
   525  1825  3450               	retlw	80
   526  1826  34C3               	retlw	195
   527  1827  3447               	retlw	71
   528  1828  3400               	retlw	0
   529  1829  3424               	retlw	36
   530  182A  3474               	retlw	116
   531  182B  3449               	retlw	73
   532  182C  3480               	retlw	128
   533  182D  3496               	retlw	150
   534  182E  3418               	retlw	24
   535  182F  344B               	retlw	75
   536  1830  3420               	retlw	32
   537  1831  34BC               	retlw	188
   538  1832  34BE               	retlw	190
   539  1833  344C               	retlw	76
   540  1834  3428               	retlw	40
   541  1835  346B               	retlw	107
   542  1836  346E               	retlw	110
   543  1837  344E               	retlw	78
   544  1838  34F9               	retlw	249
   545  1839  3402               	retlw	2
   546  183A  3415               	retlw	21
   547  183B  3450               	retlw	80
   548  183C  34EC               	retlw	236
   549  183D  3478               	retlw	120
   550  183E  34AD               	retlw	173
   551  183F  3460               	retlw	96
   552  1840  34CA               	retlw	202
   553  1841  34F2               	retlw	242
   554  1842  3449               	retlw	73
   555  1843  3471               	retlw	113
   556  1844                     __end_of__powers_:
   557  1844                     __npowers_:
   558  1844  3400               	retlw	0
   559  1845  3400               	retlw	0
   560  1846  3480               	retlw	128
   561  1847  343F               	retlw	63
   562  1848  34CD               	retlw	205
   563  1849  34CC               	retlw	204
   564  184A  34CC               	retlw	204
   565  184B  343D               	retlw	61
   566  184C  340A               	retlw	10
   567  184D  34D7               	retlw	215
   568  184E  3423               	retlw	35
   569  184F  343C               	retlw	60
   570  1850  346F               	retlw	111
   571  1851  3412               	retlw	18
   572  1852  3483               	retlw	131
   573  1853  343A               	retlw	58
   574  1854  3417               	retlw	23
   575  1855  34B7               	retlw	183
   576  1856  34D1               	retlw	209
   577  1857  3438               	retlw	56
   578  1858  34AC               	retlw	172
   579  1859  34C5               	retlw	197
   580  185A  3427               	retlw	39
   581  185B  3437               	retlw	55
   582  185C  34BD               	retlw	189
   583  185D  3437               	retlw	55
   584  185E  3486               	retlw	134
   585  185F  3435               	retlw	53
   586  1860  3495               	retlw	149
   587  1861  34BF               	retlw	191
   588  1862  34D6               	retlw	214
   589  1863  3433               	retlw	51
   590  1864  3477               	retlw	119
   591  1865  34CC               	retlw	204
   592  1866  342B               	retlw	43
   593  1867  3432               	retlw	50
   594  1868  345F               	retlw	95
   595  1869  3470               	retlw	112
   596  186A  3489               	retlw	137
   597  186B  3430               	retlw	48
   598  186C  34FF               	retlw	255
   599  186D  34E6               	retlw	230
   600  186E  34DB               	retlw	219
   601  186F  342E               	retlw	46
   602  1870  3408               	retlw	8
   603  1871  34E5               	retlw	229
   604  1872  343C               	retlw	60
   605  1873  341E               	retlw	30
   606  1874  3460               	retlw	96
   607  1875  3442               	retlw	66
   608  1876  34A2               	retlw	162
   609  1877  340D               	retlw	13
   610  1878                     __end_of__npowers_:
   611  1878                     _dpowers:
   612  1878  3401               	retlw	1
   613  1879  3400               	retlw	0
   614  187A  3400               	retlw	0
   615  187B  3400               	retlw	0
   616  187C  340A               	retlw	10
   617  187D  3400               	retlw	0
   618  187E  3400               	retlw	0
   619  187F  3400               	retlw	0
   620  1880  3464               	retlw	100
   621  1881  3400               	retlw	0
   622  1882  3400               	retlw	0
   623  1883  3400               	retlw	0
   624  1884  34E8               	retlw	232
   625  1885  3403               	retlw	3
   626  1886  3400               	retlw	0
   627  1887  3400               	retlw	0
   628  1888  3410               	retlw	16
   629  1889  3427               	retlw	39
   630  188A  3400               	retlw	0
   631  188B  3400               	retlw	0
   632  188C  34A0               	retlw	160
   633  188D  3486               	retlw	134
   634  188E  3401               	retlw	1
   635  188F  3400               	retlw	0
   636  1890  3440               	retlw	64
   637  1891  3442               	retlw	66
   638  1892  340F               	retlw	15
   639  1893  3400               	retlw	0
   640  1894  3480               	retlw	128
   641  1895  3496               	retlw	150
   642  1896  3498               	retlw	152
   643  1897  3400               	retlw	0
   644  1898  3400               	retlw	0
   645  1899  34E1               	retlw	225
   646  189A  34F5               	retlw	245
   647  189B  3405               	retlw	5
   648  189C  3400               	retlw	0
   649  189D  34CA               	retlw	202
   650  189E  349A               	retlw	154
   651  189F  343B               	retlw	59
   652  18A0                     __end_of_dpowers:
   653  0009                     _PORTEbits	set	9
   654  0009                     _PORTE	set	9
   655  0008                     _PORTD	set	8
   656  0007                     _PORTC	set	7
   657  0006                     _PORTB	set	6
   658  0005                     _PORTA	set	5
   659  001E                     _ADRESH	set	30
   660  001F                     _ADCON0bits	set	31
   661  009F                     _ADCON1	set	159
   662  009E                     _ADRESL	set	158
   663  008F                     _OSCCONbits	set	143
   664  0089                     _TRISE	set	137
   665  0088                     _TRISD	set	136
   666  0087                     _TRISC	set	135
   667  0086                     _TRISB	set	134
   668  0085                     _TRISA	set	133
   669  0189                     _ANSELH	set	393
   670  0188                     _ANSEL	set	392
   671  18A0                     STR_6:
   672  18A0  3425               	retlw	37	;'%'
   673  18A1  3431               	retlw	49	;'1'
   674  18A2  342E               	retlw	46	;'.'
   675  18A3  3432               	retlw	50	;'2'
   676  18A4  3466               	retlw	102	;'f'
   677  18A5  3420               	retlw	32	;' '
   678  18A6  3400               	retlw	0
   679  18A7                     STR_7:
   680  18A7  3425               	retlw	37	;'%'
   681  18A8  3431               	retlw	49	;'1'
   682  18A9  342E               	retlw	46	;'.'
   683  18AA  3432               	retlw	50	;'2'
   684  18AB  3466               	retlw	102	;'f'
   685  18AC  3400               	retlw	0
   686  18AD                     STR_1:
   687  18AD  3453               	retlw	83	;'S'
   688  18AE  3431               	retlw	49	;'1'
   689  18AF  343A               	retlw	58	;':'
   690  18B0  3400               	retlw	0
   691  18B1                     STR_2:
   692  18B1  3453               	retlw	83	;'S'
   693  18B2  3432               	retlw	50	;'2'
   694  18B3  343A               	retlw	58	;':'
   695  18B4  3400               	retlw	0
   696  18B5                     STR_3:
   697  18B5  3453               	retlw	83	;'S'
   698  18B6  3433               	retlw	51	;'3'
   699  18B7  343A               	retlw	58	;':'
   700  18B8  3400               	retlw	0
   701  18B9                     STR_4:
   702  18B9  3476               	retlw	118	;'v'
   703  18BA  3400               	retlw	0
   704  18B9                     
   705                           	psect	cinit
   706  07F0                     start_initialization:	
   707                           ; #config settings
   708                           
   709  07F0                     __initialization:
   710                           
   711                           ; Clear objects allocated to BANK0
   712  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   713  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   714  07F2  01EF               	clrf	__pbssBANK0& (0+127)
   715                           
   716                           ; Clear objects allocated to BANK1
   717  07F3  1383               	bcf	3,7	;select IRP bank0
   718  07F4  30C7               	movlw	low __pbssBANK1
   719  07F5  0084               	movwf	4
   720  07F6  30E7               	movlw	low (__pbssBANK1+32)
   721  07F7  120A  118A  2004  120A  118A  	fcall	clear_ram0
   722  07FC                     end_of_initialization:	
   723                           ;End of C runtime variable initialization code
   724                           
   725  07FC                     __end_of__initialization:
   726  07FC  0183               	clrf	3
   727  07FD  160A  158A  2C9C   	ljmp	_main	;jump to C main() function
   728                           
   729                           	psect	bssBANK0
   730  006F                     __pbssBANK0:
   731  006F                     _S3_cont:
   732  006F                     	ds	1
   733                           
   734                           	psect	bssBANK1
   735  00C7                     __pbssBANK1:
   736  00C7                     _S2_val:
   737  00C7                     	ds	4
   738  00CB                     _S1_val:
   739  00CB                     	ds	4
   740  00CF                     _VAL_NIBBLE2:
   741  00CF                     	ds	2
   742  00D1                     _VAL_NIBBLE1:
   743  00D1                     	ds	2
   744  00D3                     _VAL_SWAP:
   745  00D3                     	ds	2
   746  00D5                     _VAL:
   747  00D5                     	ds	2
   748  00D7                     _data2:
   749  00D7                     	ds	8
   750  00DF                     _data1:
   751  00DF                     	ds	8
   752                           
   753                           	psect	clrtext
   754  0004                     clear_ram0:	
   755                           ;	Called with FSR containing the base address, and
   756                           ;	W with the last address+1
   757                           
   758  0004  0064               	clrwdt	;clear the watchdog before getting into this loop
   759  0005                     clrloop0:
   760  0005  0180               	clrf	0	;clear RAM location pointed to by FSR
   761  0006  0A84               	incf	4,f	;increment pointer
   762  0007  0604               	xorwf	4,w	;XOR with final address
   763  0008  1903               	btfsc	3,2	;have we reached the end yet?
   764  0009  3400               	retlw	0	;all done for this memory range, return
   765  000A  0604               	xorwf	4,w	;XOR again to restore value
   766  000B  2805               	goto	clrloop0	;do the next byte
   767                           
   768                           	psect	cstackBANK1
   769  00A0                     __pcstackBANK1:
   770  00A0                     ?_sprintf:
   771  00A0                     sprintf@f:	
   772                           ; 2 bytes @ 0x0
   773                           
   774                           
   775                           ; 1 bytes @ 0x0
   776  00A0                     	ds	5
   777  00A5                     ??_sprintf:
   778                           
   779                           ; 1 bytes @ 0x5
   780  00A5                     	ds	5
   781  00AA                     _sprintf$1003:
   782                           
   783                           ; 4 bytes @ 0xA
   784  00AA                     	ds	4
   785  00AE                     sprintf@ap:
   786                           
   787                           ; 1 bytes @ 0xE
   788  00AE                     	ds	1
   789  00AF                     sprintf@val:
   790                           
   791                           ; 4 bytes @ 0xF
   792  00AF                     	ds	4
   793  00B3                     sprintf@flag:
   794                           
   795                           ; 2 bytes @ 0x13
   796  00B3                     	ds	2
   797  00B5                     sprintf@width:
   798                           
   799                           ; 2 bytes @ 0x15
   800  00B5                     	ds	2
   801  00B7                     sprintf@tmpval:
   802                           
   803                           ; 4 bytes @ 0x17
   804  00B7                     	ds	4
   805  00BB                     sprintf@eexp:
   806                           
   807                           ; 2 bytes @ 0x1B
   808  00BB                     	ds	2
   809  00BD                     sprintf@fval:
   810                           
   811                           ; 4 bytes @ 0x1D
   812  00BD                     	ds	4
   813  00C1                     sprintf@sp:
   814                           
   815                           ; 1 bytes @ 0x21
   816  00C1                     	ds	1
   817  00C2                     sprintf@prec:
   818                           
   819                           ; 2 bytes @ 0x22
   820  00C2                     	ds	2
   821  00C4                     sprintf@c:
   822                           
   823                           ; 1 bytes @ 0x24
   824  00C4                     	ds	1
   825  00C5                     ??_main:
   826                           
   827                           ; 1 bytes @ 0x25
   828  00C5                     	ds	2
   829                           
   830                           	psect	cstackCOMMON
   831  0070                     __pcstackCOMMON:
   832  0070                     ?_isdigit:
   833  0070                     ?___fleq:	
   834                           ; 1 bit 
   835                           
   836  0070                     ?___flge:	
   837                           ; 1 bit 
   838                           
   839  0070                     ?_setup:	
   840                           ; 1 bit 
   841                           
   842  0070                     ?_Lcd_Init:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_titulos_LCD:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_ADC_channel1:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ?_ADC_channel2:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0070                     ?_float_to_string:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ?_ADC_Config:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ??_ADC_Config:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ?_initOsc:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ??_initOsc:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0070                     ?_Lcd_Port:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0070                     ??_Lcd_Port:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  0070                     ?_Lcd_Cmd:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0070                     ??_isdigit:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0070                     ?_main:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     ?_Lcd_Write_Char:	
   885                           ; 1 bytes @ 0x0
   886                           
   887  0070                     ?__Umul8_16:	
   888                           ; 1 bytes @ 0x0
   889                           
   890  0070                     ?___wmul:	
   891                           ; 2 bytes @ 0x0
   892                           
   893  0070                     ?___awmod:	
   894                           ; 2 bytes @ 0x0
   895                           
   896  0070                     ?___lwmod:	
   897                           ; 2 bytes @ 0x0
   898                           
   899  0070                     ?__tdiv_to_l_:	
   900                           ; 2 bytes @ 0x0
   901                           
   902  0070                     ?__div_to_l_:	
   903                           ; 4 bytes @ 0x0
   904                           
   905  0070                     ?___lldiv:	
   906                           ; 4 bytes @ 0x0
   907                           
   908  0070                     ?___flneg:	
   909                           ; 4 bytes @ 0x0
   910                           
   911  0070                     ?___llmod:	
   912                           ; 4 bytes @ 0x0
   913                           
   914  0070                     ?___xxtofl:	
   915                           ; 4 bytes @ 0x0
   916                           
   917  0070                     Lcd_Port@a:	
   918                           ; 4 bytes @ 0x0
   919                           
   920  0070                     __Umul8_16@multiplicand:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     _isdigit$811:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ___wmul@multiplier:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ___awmod@divisor:	
   930                           ; 2 bytes @ 0x0
   931                           
   932  0070                     ___lwmod@divisor:	
   933                           ; 2 bytes @ 0x0
   934                           
   935  0070                     ___lldiv@divisor:	
   936                           ; 2 bytes @ 0x0
   937                           
   938  0070                     __div_to_l_@f1:	
   939                           ; 4 bytes @ 0x0
   940                           
   941  0070                     ___fleq@ff1:	
   942                           ; 4 bytes @ 0x0
   943                           
   944  0070                     ___flge@ff1:	
   945                           ; 4 bytes @ 0x0
   946                           
   947  0070                     ___flneg@f1:	
   948                           ; 4 bytes @ 0x0
   949                           
   950  0070                     __tdiv_to_l_@f1:	
   951                           ; 4 bytes @ 0x0
   952                           
   953  0070                     ___llmod@divisor:	
   954                           ; 4 bytes @ 0x0
   955                           
   956  0070                     ___xxtofl@val:	
   957                           ; 4 bytes @ 0x0
   958                           
   959                           
   960                           ; 4 bytes @ 0x0
   961  0070                     	ds	1
   962  0071                     ??_Lcd_Cmd:
   963  0071                     ??_Lcd_Write_Char:	
   964                           ; 1 bytes @ 0x1
   965                           
   966  0071                     isdigit@c:	
   967                           ; 1 bytes @ 0x1
   968                           
   969                           
   970                           ; 1 bytes @ 0x1
   971  0071                     	ds	1
   972  0072                     ??__Umul8_16:
   973  0072                     initOsc@IRCF:	
   974                           ; 1 bytes @ 0x2
   975                           
   976  0072                     Lcd_Write_Char@a:	
   977                           ; 1 bytes @ 0x2
   978                           
   979  0072                     ADC_Config@AN_num:	
   980                           ; 1 bytes @ 0x2
   981                           
   982  0072                     ___wmul@multiplicand:	
   983                           ; 1 bytes @ 0x2
   984                           
   985  0072                     ___awmod@dividend:	
   986                           ; 2 bytes @ 0x2
   987                           
   988  0072                     ___lwmod@dividend:	
   989                           ; 2 bytes @ 0x2
   990                           
   991                           
   992                           ; 2 bytes @ 0x2
   993  0072                     	ds	1
   994  0073                     ??_setup:
   995  0073                     ?_Lcd_Write_String:	
   996                           ; 1 bytes @ 0x3
   997                           
   998  0073                     Lcd_Cmd@a:	
   999                           ; 1 bytes @ 0x3
  1000                           
  1001  0073                     Lcd_Write_String@a:	
  1002                           ; 1 bytes @ 0x3
  1003                           
  1004                           
  1005                           ; 2 bytes @ 0x3
  1006  0073                     	ds	1
  1007  0074                     ??_Lcd_Init:
  1008  0074                     ?_Lcd_Set_Cursor:	
  1009                           ; 1 bytes @ 0x4
  1010                           
  1011  0074                     ??___wmul:	
  1012                           ; 1 bytes @ 0x4
  1013                           
  1014  0074                     ??___awmod:	
  1015                           ; 1 bytes @ 0x4
  1016                           
  1017  0074                     ??___flneg:	
  1018                           ; 1 bytes @ 0x4
  1019                           
  1020  0074                     ??___lwmod:	
  1021                           ; 1 bytes @ 0x4
  1022                           
  1023  0074                     ??___xxtofl:	
  1024                           ; 1 bytes @ 0x4
  1025                           
  1026  0074                     Lcd_Set_Cursor@b:	
  1027                           ; 1 bytes @ 0x4
  1028                           
  1029  0074                     ___wmul@product:	
  1030                           ; 1 bytes @ 0x4
  1031                           
  1032  0074                     __Umul8_16@product:	
  1033                           ; 2 bytes @ 0x4
  1034                           
  1035  0074                     ___lldiv@dividend:	
  1036                           ; 2 bytes @ 0x4
  1037                           
  1038  0074                     __div_to_l_@f2:	
  1039                           ; 4 bytes @ 0x4
  1040                           
  1041  0074                     ___fleq@ff2:	
  1042                           ; 4 bytes @ 0x4
  1043                           
  1044  0074                     ___flge@ff2:	
  1045                           ; 4 bytes @ 0x4
  1046                           
  1047  0074                     __tdiv_to_l_@f2:	
  1048                           ; 4 bytes @ 0x4
  1049                           
  1050  0074                     ___llmod@dividend:	
  1051                           ; 4 bytes @ 0x4
  1052                           
  1053                           
  1054                           ; 4 bytes @ 0x4
  1055  0074                     	ds	1
  1056  0075                     ??_Lcd_Set_Cursor:
  1057  0075                     ??_Lcd_Write_String:	
  1058                           ; 1 bytes @ 0x5
  1059                           
  1060  0075                     ___awmod@counter:	
  1061                           ; 1 bytes @ 0x5
  1062                           
  1063  0075                     ___lwmod@counter:	
  1064                           ; 1 bytes @ 0x5
  1065                           
  1066                           
  1067                           ; 1 bytes @ 0x5
  1068  0075                     	ds	1
  1069  0076                     ?___lwdiv:
  1070  0076                     Lcd_Set_Cursor@a:	
  1071                           ; 2 bytes @ 0x6
  1072                           
  1073  0076                     ___awmod@sign:	
  1074                           ; 1 bytes @ 0x6
  1075                           
  1076  0076                     ___lwdiv@divisor:	
  1077                           ; 1 bytes @ 0x6
  1078                           
  1079  0076                     __Umul8_16@word_mpld:	
  1080                           ; 2 bytes @ 0x6
  1081                           
  1082                           
  1083                           ; 2 bytes @ 0x6
  1084  0076                     	ds	1
  1085  0077                     ?___awdiv:
  1086  0077                     Lcd_Set_Cursor@temp:	
  1087                           ; 2 bytes @ 0x7
  1088                           
  1089  0077                     ___awdiv@divisor:	
  1090                           ; 1 bytes @ 0x7
  1091                           
  1092                           
  1093                           ; 2 bytes @ 0x7
  1094  0077                     	ds	1
  1095  0078                     ??__tdiv_to_l_:
  1096  0078                     ??__div_to_l_:	
  1097                           ; 1 bytes @ 0x8
  1098                           
  1099  0078                     ??___lldiv:	
  1100                           ; 1 bytes @ 0x8
  1101                           
  1102  0078                     ??___fleq:	
  1103                           ; 1 bytes @ 0x8
  1104                           
  1105  0078                     ??___flge:	
  1106                           ; 1 bytes @ 0x8
  1107                           
  1108  0078                     ??___llmod:	
  1109                           ; 1 bytes @ 0x8
  1110                           
  1111  0078                     __Umul8_16@multiplier:	
  1112                           ; 1 bytes @ 0x8
  1113                           
  1114  0078                     ___xxtofl@sign:	
  1115                           ; 1 bytes @ 0x8
  1116                           
  1117  0078                     Lcd_Write_String@i:	
  1118                           ; 1 bytes @ 0x8
  1119                           
  1120  0078                     ___lwdiv@dividend:	
  1121                           ; 2 bytes @ 0x8
  1122                           
  1123                           
  1124                           ; 2 bytes @ 0x8
  1125  0078                     	ds	1
  1126  0079                     ___llmod@counter:
  1127  0079                     ___xxtofl@exp:	
  1128                           ; 1 bytes @ 0x9
  1129                           
  1130  0079                     ___awdiv@dividend:	
  1131                           ; 1 bytes @ 0x9
  1132                           
  1133  0079                     ___lldiv@quotient:	
  1134                           ; 2 bytes @ 0x9
  1135                           
  1136                           
  1137                           ; 4 bytes @ 0x9
  1138  0079                     	ds	1
  1139  007A                     ??_titulos_LCD:
  1140  007A                     ??___lwdiv:	
  1141                           ; 1 bytes @ 0xA
  1142                           
  1143  007A                     ___xxtofl@arg:	
  1144                           ; 1 bytes @ 0xA
  1145                           
  1146                           
  1147                           ; 4 bytes @ 0xA
  1148  007A                     	ds	1
  1149  007B                     ??___awdiv:
  1150  007B                     ___lwdiv@quotient:	
  1151                           ; 1 bytes @ 0xB
  1152                           
  1153                           
  1154                           ; 2 bytes @ 0xB
  1155  007B                     	ds	2
  1156  007D                     ___lldiv@counter:
  1157  007D                     ___lwdiv@counter:	
  1158                           ; 1 bytes @ 0xD
  1159                           
  1160                           
  1161                           ; 1 bytes @ 0xD
  1162  007D                     	ds	1
  1163  007E                     ??___flsub:
  1164                           
  1165                           	psect	cstackBANK0
  1166  0020                     __pcstackBANK0:	
  1167                           ; 1 bytes @ 0xE
  1168                           
  1169  0020                     ___awdiv@counter:
  1170  0020                     __div_to_l_@quot:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0020                     __tdiv_to_l_@quot:	
  1174                           ; 4 bytes @ 0x0
  1175                           
  1176                           
  1177                           ; 4 bytes @ 0x0
  1178  0020                     	ds	1
  1179  0021                     ___awdiv@sign:
  1180                           
  1181                           ; 1 bytes @ 0x1
  1182  0021                     	ds	1
  1183  0022                     ___awdiv@quotient:
  1184                           
  1185                           ; 2 bytes @ 0x2
  1186  0022                     	ds	2
  1187  0024                     ?___flmul:
  1188  0024                     __div_to_l_@cntr:	
  1189                           ; 4 bytes @ 0x4
  1190                           
  1191  0024                     __tdiv_to_l_@cntr:	
  1192                           ; 1 bytes @ 0x4
  1193                           
  1194  0024                     ___flmul@b:	
  1195                           ; 1 bytes @ 0x4
  1196                           
  1197                           
  1198                           ; 4 bytes @ 0x4
  1199  0024                     	ds	1
  1200  0025                     __div_to_l_@exp1:
  1201  0025                     __tdiv_to_l_@exp1:	
  1202                           ; 1 bytes @ 0x5
  1203                           
  1204                           
  1205                           ; 1 bytes @ 0x5
  1206  0025                     	ds	3
  1207  0028                     ___flmul@a:
  1208                           
  1209                           ; 4 bytes @ 0x8
  1210  0028                     	ds	4
  1211  002C                     ??___flmul:
  1212                           
  1213                           ; 1 bytes @ 0xC
  1214  002C                     	ds	5
  1215  0031                     ___flmul@sign:
  1216                           
  1217                           ; 1 bytes @ 0x11
  1218  0031                     	ds	1
  1219  0032                     ___flmul@grs:
  1220                           
  1221                           ; 4 bytes @ 0x12
  1222  0032                     	ds	4
  1223  0036                     ___flmul@aexp:
  1224                           
  1225                           ; 1 bytes @ 0x16
  1226  0036                     	ds	1
  1227  0037                     ___flmul@bexp:
  1228                           
  1229                           ; 1 bytes @ 0x17
  1230  0037                     	ds	1
  1231  0038                     ___flmul@prod:
  1232                           
  1233                           ; 4 bytes @ 0x18
  1234  0038                     	ds	4
  1235  003C                     ___flmul@temp:
  1236                           
  1237                           ; 2 bytes @ 0x1C
  1238  003C                     	ds	2
  1239  003E                     ?_fround:
  1240  003E                     ?_scale:	
  1241                           ; 4 bytes @ 0x1E
  1242                           
  1243  003E                     ?___fldiv:	
  1244                           ; 4 bytes @ 0x1E
  1245                           
  1246  003E                     ___fldiv@a:	
  1247                           ; 4 bytes @ 0x1E
  1248                           
  1249                           
  1250                           ; 4 bytes @ 0x1E
  1251  003E                     	ds	4
  1252  0042                     ??_fround:
  1253  0042                     ??_scale:	
  1254                           ; 1 bytes @ 0x22
  1255                           
  1256  0042                     ___fldiv@b:	
  1257                           ; 1 bytes @ 0x22
  1258                           
  1259                           
  1260                           ; 4 bytes @ 0x22
  1261  0042                     	ds	4
  1262  0046                     ??___fldiv:
  1263                           
  1264                           ; 1 bytes @ 0x26
  1265  0046                     	ds	3
  1266  0049                     _fround$1001:
  1267                           
  1268                           ; 4 bytes @ 0x29
  1269  0049                     	ds	2
  1270  004B                     ___fldiv@rem:
  1271                           
  1272                           ; 4 bytes @ 0x2B
  1273  004B                     	ds	1
  1274  004C                     _scale$1002:
  1275                           
  1276                           ; 4 bytes @ 0x2C
  1277  004C                     	ds	1
  1278  004D                     _fround$1000:
  1279                           
  1280                           ; 4 bytes @ 0x2D
  1281  004D                     	ds	2
  1282  004F                     ___fldiv@sign:
  1283                           
  1284                           ; 1 bytes @ 0x2F
  1285  004F                     	ds	1
  1286  0050                     scale@scl:
  1287  0050                     ___fldiv@new_exp:	
  1288                           ; 1 bytes @ 0x30
  1289                           
  1290                           
  1291                           ; 2 bytes @ 0x30
  1292  0050                     	ds	1
  1293  0051                     ?___fltol:
  1294  0051                     fround@prec:	
  1295                           ; 4 bytes @ 0x31
  1296                           
  1297  0051                     ___fltol@f1:	
  1298                           ; 1 bytes @ 0x31
  1299                           
  1300                           
  1301                           ; 4 bytes @ 0x31
  1302  0051                     	ds	1
  1303  0052                     ?___fladd:
  1304  0052                     ___fladd@b:	
  1305                           ; 4 bytes @ 0x32
  1306                           
  1307  0052                     ___fldiv@grs:	
  1308                           ; 4 bytes @ 0x32
  1309                           
  1310                           
  1311                           ; 4 bytes @ 0x32
  1312  0052                     	ds	3
  1313  0055                     ??___fltol:
  1314                           
  1315                           ; 1 bytes @ 0x35
  1316  0055                     	ds	1
  1317  0056                     ___fldiv@bexp:
  1318  0056                     ___fladd@a:	
  1319                           ; 1 bytes @ 0x36
  1320                           
  1321                           
  1322                           ; 4 bytes @ 0x36
  1323  0056                     	ds	1
  1324  0057                     ___fldiv@aexp:
  1325                           
  1326                           ; 1 bytes @ 0x37
  1327  0057                     	ds	1
  1328  0058                     ??_ADC_channel1:
  1329  0058                     ??_ADC_channel2:	
  1330                           ; 1 bytes @ 0x38
  1331                           
  1332                           
  1333                           ; 1 bytes @ 0x38
  1334  0058                     	ds	2
  1335  005A                     ??___fladd:
  1336  005A                     ___fltol@sign1:	
  1337                           ; 1 bytes @ 0x3A
  1338                           
  1339                           
  1340                           ; 1 bytes @ 0x3A
  1341  005A                     	ds	1
  1342  005B                     ___fltol@exp1:
  1343                           
  1344                           ; 1 bytes @ 0x3B
  1345  005B                     	ds	7
  1346  0062                     ___fladd@signs:
  1347                           
  1348                           ; 1 bytes @ 0x42
  1349  0062                     	ds	1
  1350  0063                     ___fladd@aexp:
  1351                           
  1352                           ; 1 bytes @ 0x43
  1353  0063                     	ds	1
  1354  0064                     ___fladd@bexp:
  1355                           
  1356                           ; 1 bytes @ 0x44
  1357  0064                     	ds	1
  1358  0065                     ___fladd@grs:
  1359                           
  1360                           ; 1 bytes @ 0x45
  1361  0065                     	ds	1
  1362  0066                     ?___flsub:
  1363  0066                     ___flsub@a:	
  1364                           ; 4 bytes @ 0x46
  1365                           
  1366                           
  1367                           ; 4 bytes @ 0x46
  1368  0066                     	ds	4
  1369  006A                     ___flsub@b:
  1370                           
  1371                           ; 4 bytes @ 0x4A
  1372  006A                     	ds	4
  1373  006E                     ??_float_to_string:
  1374                           
  1375                           ; 1 bytes @ 0x4E
  1376  006E                     	ds	1
  1377                           
  1378                           	psect	maintext
  1379  1C9C                     __pmaintext:	
  1380 ;;
  1381 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1382 ;;
  1383 ;; *************** function _main *****************
  1384 ;; Defined at:
  1385 ;;		line 93 in file "pseudocodigo_lab3.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : B00/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1399 ;;      Params:         0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0
  1401 ;;      Temps:          0       0       2       0       0
  1402 ;;      Totals:         0       0       2       0       0
  1403 ;;Total ram usage:        2 bytes
  1404 ;; Hardware stack levels required when called:    5
  1405 ;; This function calls:
  1406 ;;		_ADC_channel1
  1407 ;;		_ADC_channel2
  1408 ;;		_Lcd_Init
  1409 ;;		_Lcd_Set_Cursor
  1410 ;;		_Lcd_Write_String
  1411 ;;		_float_to_string
  1412 ;;		_setup
  1413 ;;		_titulos_LCD
  1414 ;; This function is called by:
  1415 ;;		Startup code after reset
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           
  1420                           ;psect for function _main
  1421  1C9C                     _main:
  1422  1C9C                     l3845:	
  1423                           ;incstack = 0
  1424                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1425                           
  1426                           
  1427                           ;pseudocodigo_lab3.c: 94:     setup();
  1428  1C9C  160A  158A  215E  160A  158A  	fcall	_setup
  1429  1CA1                     l3847:
  1430                           
  1431                           ;pseudocodigo_lab3.c: 95:     Lcd_Init();
  1432  1CA1  160A  158A  22FA  160A  158A  	fcall	_Lcd_Init
  1433  1CA6                     l3849:
  1434                           
  1435                           ;pseudocodigo_lab3.c: 96:     titulos_LCD();
  1436  1CA6  160A  158A  24F8  160A  158A  	fcall	_titulos_LCD
  1437  1CAB                     l3851:
  1438                           
  1439                           ;pseudocodigo_lab3.c: 104:         ADC_channel1();
  1440  1CAB  160A  158A  25BE  160A  158A  	fcall	_ADC_channel1
  1441  1CB0                     l3853:
  1442                           
  1443                           ;pseudocodigo_lab3.c: 105:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1444  1CB0  3003               	movlw	3
  1445  1CB1  1683               	bsf	3,5	;RP0=1, select bank1
  1446  1CB2  1303               	bcf	3,6	;RP1=0, select bank1
  1447  1CB3  00C6               	movwf	(??_main^(0+128)+1)
  1448  1CB4  3097               	movlw	151
  1449  1CB5  00C5               	movwf	??_main^(0+128)
  1450  1CB6                     u6157:
  1451  1CB6  0BC5               	decfsz	??_main^(0+128),f
  1452  1CB7  2CB6               	goto	u6157
  1453  1CB8  0BC6               	decfsz	(??_main^(0+128)+1),f
  1454  1CB9  2CB6               	goto	u6157
  1455  1CBA                     l3855:
  1456                           
  1457                           ;pseudocodigo_lab3.c: 106:         ADC_channel2();
  1458  1CBA  160A  158A  2631  160A  158A  	fcall	_ADC_channel2
  1459  1CBF                     l3857:
  1460                           
  1461                           ;pseudocodigo_lab3.c: 107:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1462  1CBF  3003               	movlw	3
  1463  1CC0  1683               	bsf	3,5	;RP0=1, select bank1
  1464  1CC1  1303               	bcf	3,6	;RP1=0, select bank1
  1465  1CC2  00C6               	movwf	(??_main^(0+128)+1)
  1466  1CC3  3097               	movlw	151
  1467  1CC4  00C5               	movwf	??_main^(0+128)
  1468  1CC5                     u6167:
  1469  1CC5  0BC5               	decfsz	??_main^(0+128),f
  1470  1CC6  2CC5               	goto	u6167
  1471  1CC7  0BC6               	decfsz	(??_main^(0+128)+1),f
  1472  1CC8  2CC5               	goto	u6167
  1473  1CC9                     l3859:
  1474                           
  1475                           ;pseudocodigo_lab3.c: 109:         float_to_string();
  1476  1CC9  160A  158A  220D  160A  158A  	fcall	_float_to_string
  1477  1CCE                     l3861:
  1478                           
  1479                           ;pseudocodigo_lab3.c: 111:         Lcd_Set_Cursor(2,1);
  1480  1CCE  01F4               	clrf	Lcd_Set_Cursor@b
  1481  1CCF  0AF4               	incf	Lcd_Set_Cursor@b,f
  1482  1CD0  3002               	movlw	2
  1483  1CD1  160A  158A  219D  160A  158A  	fcall	_Lcd_Set_Cursor
  1484  1CD6                     l3863:
  1485                           
  1486                           ;pseudocodigo_lab3.c: 112:         Lcd_Write_String(data1);
  1487  1CD6  30DF               	movlw	(low (_data1| 0))& (0+255)
  1488  1CD7  00F3               	movwf	Lcd_Write_String@a
  1489  1CD8  3000               	movlw	0
  1490  1CD9  00F4               	movwf	Lcd_Write_String@a+1
  1491  1CDA  160A  158A  2274  160A  158A  	fcall	_Lcd_Write_String
  1492  1CDF                     l3865:
  1493                           
  1494                           ;pseudocodigo_lab3.c: 113:         Lcd_Set_Cursor(2,7);
  1495  1CDF  3007               	movlw	7
  1496  1CE0  1683               	bsf	3,5	;RP0=1, select bank1
  1497  1CE1  1303               	bcf	3,6	;RP1=0, select bank1
  1498  1CE2  00C5               	movwf	??_main^(0+128)
  1499  1CE3  0845               	movf	??_main^(0+128),w
  1500  1CE4  00F4               	movwf	Lcd_Set_Cursor@b
  1501  1CE5  3002               	movlw	2
  1502  1CE6  160A  158A  219D  160A  158A  	fcall	_Lcd_Set_Cursor
  1503  1CEB                     l3867:
  1504                           
  1505                           ;pseudocodigo_lab3.c: 114:         Lcd_Write_String(data2);
  1506  1CEB  30D7               	movlw	(low (_data2| 0))& (0+255)
  1507  1CEC  00F3               	movwf	Lcd_Write_String@a
  1508  1CED  3000               	movlw	0
  1509  1CEE  00F4               	movwf	Lcd_Write_String@a+1
  1510  1CEF  160A  158A  2274  160A  158A  	fcall	_Lcd_Write_String
  1511  1CF4  2CAB               	goto	l3851
  1512  1CF5  120A  118A  2800   	ljmp	start
  1513  1CF8                     __end_of_main:
  1514                           
  1515                           	psect	text1
  1516  1CF8                     __ptext1:	
  1517 ;; *************** function _titulos_LCD *****************
  1518 ;; Defined at:
  1519 ;;		line 128 in file "pseudocodigo_lab3.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         0       0       0       0       0
  1534 ;;      Locals:         0       0       0       0       0
  1535 ;;      Temps:          1       0       0       0       0
  1536 ;;      Totals:         1       0       0       0       0
  1537 ;;Total ram usage:        1 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    3
  1540 ;; This function calls:
  1541 ;;		_Lcd_Set_Cursor
  1542 ;;		_Lcd_Write_String
  1543 ;; This function is called by:
  1544 ;;		_main
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           
  1549                           ;psect for function _titulos_LCD
  1550  1CF8                     _titulos_LCD:
  1551  1CF8                     l3809:	
  1552                           ;incstack = 0
  1553                           ; Regs used in _titulos_LCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1554                           
  1555                           
  1556                           ;pseudocodigo_lab3.c: 130:         Lcd_Set_Cursor(1,2);
  1557  1CF8  3002               	movlw	2
  1558  1CF9  00FA               	movwf	??_titulos_LCD
  1559  1CFA  087A               	movf	??_titulos_LCD,w
  1560  1CFB  00F4               	movwf	Lcd_Set_Cursor@b
  1561  1CFC  3001               	movlw	1
  1562  1CFD  160A  158A  219D  160A  158A  	fcall	_Lcd_Set_Cursor
  1563  1D02                     l3811:
  1564                           
  1565                           ;pseudocodigo_lab3.c: 131:         Lcd_Write_String("S1:");
  1566  1D02  309E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1567  1D03  00F3               	movwf	Lcd_Write_String@a
  1568  1D04  3080               	movlw	128
  1569  1D05  00F4               	movwf	Lcd_Write_String@a+1
  1570  1D06  160A  158A  2274  160A  158A  	fcall	_Lcd_Write_String
  1571  1D0B                     l3813:
  1572                           
  1573                           ;pseudocodigo_lab3.c: 132:         Lcd_Set_Cursor(1,8);
  1574  1D0B  3008               	movlw	8
  1575  1D0C  00FA               	movwf	??_titulos_LCD
  1576  1D0D  087A               	movf	??_titulos_LCD,w
  1577  1D0E  00F4               	movwf	Lcd_Set_Cursor@b
  1578  1D0F  3001               	movlw	1
  1579  1D10  160A  158A  219D  160A  158A  	fcall	_Lcd_Set_Cursor
  1580                           
  1581                           ;pseudocodigo_lab3.c: 133:         Lcd_Write_String("S2:");
  1582  1D15  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1583  1D16  00F3               	movwf	Lcd_Write_String@a
  1584  1D17  3080               	movlw	128
  1585  1D18  00F4               	movwf	Lcd_Write_String@a+1
  1586  1D19  160A  158A  2274  160A  158A  	fcall	_Lcd_Write_String
  1587  1D1E                     l3815:
  1588                           
  1589                           ;pseudocodigo_lab3.c: 134:         Lcd_Set_Cursor(1,14);
  1590  1D1E  300E               	movlw	14
  1591  1D1F  00FA               	movwf	??_titulos_LCD
  1592  1D20  087A               	movf	??_titulos_LCD,w
  1593  1D21  00F4               	movwf	Lcd_Set_Cursor@b
  1594  1D22  3001               	movlw	1
  1595  1D23  160A  158A  219D  160A  158A  	fcall	_Lcd_Set_Cursor
  1596  1D28                     l3817:
  1597                           
  1598                           ;pseudocodigo_lab3.c: 135:         Lcd_Write_String("S3:");
  1599  1D28  30A6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1600  1D29  00F3               	movwf	Lcd_Write_String@a
  1601  1D2A  3080               	movlw	128
  1602  1D2B  00F4               	movwf	Lcd_Write_String@a+1
  1603  1D2C  160A  158A  2274  160A  158A  	fcall	_Lcd_Write_String
  1604                           
  1605                           ;pseudocodigo_lab3.c: 136:         Lcd_Set_Cursor(2,5);
  1606  1D31  3005               	movlw	5
  1607  1D32  00FA               	movwf	??_titulos_LCD
  1608  1D33  087A               	movf	??_titulos_LCD,w
  1609  1D34  00F4               	movwf	Lcd_Set_Cursor@b
  1610  1D35  3002               	movlw	2
  1611  1D36  160A  158A  219D  160A  158A  	fcall	_Lcd_Set_Cursor
  1612  1D3B                     l3819:
  1613                           
  1614                           ;pseudocodigo_lab3.c: 137:         Lcd_Write_String("v");
  1615  1D3B  30AA               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1616  1D3C  00F3               	movwf	Lcd_Write_String@a
  1617  1D3D  3080               	movlw	128
  1618  1D3E  00F4               	movwf	Lcd_Write_String@a+1
  1619  1D3F  160A  158A  2274  160A  158A  	fcall	_Lcd_Write_String
  1620  1D44                     l3821:
  1621                           
  1622                           ;pseudocodigo_lab3.c: 138:         Lcd_Set_Cursor(2,12);
  1623  1D44  300C               	movlw	12
  1624  1D45  00FA               	movwf	??_titulos_LCD
  1625  1D46  087A               	movf	??_titulos_LCD,w
  1626  1D47  00F4               	movwf	Lcd_Set_Cursor@b
  1627  1D48  3002               	movlw	2
  1628  1D49  160A  158A  219D  160A  158A  	fcall	_Lcd_Set_Cursor
  1629                           
  1630                           ;pseudocodigo_lab3.c: 139:         Lcd_Write_String("v");
  1631  1D4E  30AA               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1632  1D4F  00F3               	movwf	Lcd_Write_String@a
  1633  1D50  3080               	movlw	128
  1634  1D51  00F4               	movwf	Lcd_Write_String@a+1
  1635  1D52  160A  158A  2274  160A  158A  	fcall	_Lcd_Write_String
  1636  1D57                     l73:
  1637  1D57  0008               	return
  1638  1D58                     __end_of_titulos_LCD:
  1639                           
  1640                           	psect	text2
  1641  1A74                     __ptext2:	
  1642 ;; *************** function _Lcd_Write_String *****************
  1643 ;; Defined at:
  1644 ;;		line 70 in file "LCD.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  a               2    3[COMMON] PTR unsigned char 
  1647 ;;		 -> STR_5(2), STR_4(2), STR_3(4), STR_2(4), 
  1648 ;;		 -> STR_1(4), data2(8), data1(8), 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  i               2    8[COMMON] int 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1660 ;;      Params:         2       0       0       0       0
  1661 ;;      Locals:         2       0       0       0       0
  1662 ;;      Temps:          3       0       0       0       0
  1663 ;;      Totals:         7       0       0       0       0
  1664 ;;Total ram usage:        7 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; Hardware stack levels required when called:    2
  1667 ;; This function calls:
  1668 ;;		_Lcd_Write_Char
  1669 ;; This function is called by:
  1670 ;;		_main
  1671 ;;		_titulos_LCD
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           
  1676                           ;psect for function _Lcd_Write_String
  1677  1A74                     _Lcd_Write_String:
  1678  1A74                     l3333:	
  1679                           ;incstack = 0
  1680                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1681                           
  1682                           
  1683                           ;LCD.c: 71:  int i;;LCD.c: 72:  for(i=0;a[i]!='\0';i++)
  1684  1A74  01F8               	clrf	Lcd_Write_String@i
  1685  1A75  01F9               	clrf	Lcd_Write_String@i+1
  1686  1A76  2A99               	goto	l3339
  1687  1A77                     l3335:
  1688                           
  1689                           ;LCD.c: 73:     Lcd_Write_Char(a[i]);
  1690  1A77  0878               	movf	Lcd_Write_String@i,w
  1691  1A78  0773               	addwf	Lcd_Write_String@a,w
  1692  1A79  00F6               	movwf	??_Lcd_Write_String+1
  1693  1A7A  0874               	movf	Lcd_Write_String@a+1,w
  1694  1A7B  00F5               	movwf	??_Lcd_Write_String
  1695  1A7C  1803               	skipnc
  1696  1A7D  0AF5               	incf	??_Lcd_Write_String,f
  1697  1A7E  1FF8               	btfss	Lcd_Write_String@i,7
  1698  1A7F  2A81               	goto	u5330
  1699  1A80  03F5               	decf	??_Lcd_Write_String,f
  1700  1A81                     u5330:
  1701  1A81  0875               	movf	??_Lcd_Write_String,w
  1702  1A82  00F7               	movwf	??_Lcd_Write_String+2
  1703  1A83  0877               	movf	??_Lcd_Write_String+2,w
  1704  1A84  1283               	bcf	3,5	;RP0=0, select bank0
  1705  1A85  1303               	bcf	3,6	;RP1=0, select bank0
  1706  1A86  00FF               	movwf	btemp+1
  1707  1A87  0876               	movf	??_Lcd_Write_String+1,w
  1708  1A88  0084               	movwf	4
  1709  1A89  160A  158A  2000  160A  158A  	fcall	stringtab
  1710  1A8E  160A  118A  2001  160A  158A  	fcall	_Lcd_Write_Char
  1711  1A93                     l3337:
  1712  1A93  3001               	movlw	1
  1713  1A94  07F8               	addwf	Lcd_Write_String@i,f
  1714  1A95  1803               	skipnc
  1715  1A96  0AF9               	incf	Lcd_Write_String@i+1,f
  1716  1A97  3000               	movlw	0
  1717  1A98  07F9               	addwf	Lcd_Write_String@i+1,f
  1718  1A99                     l3339:
  1719  1A99  0878               	movf	Lcd_Write_String@i,w
  1720  1A9A  0773               	addwf	Lcd_Write_String@a,w
  1721  1A9B  00F6               	movwf	??_Lcd_Write_String+1
  1722  1A9C  0874               	movf	Lcd_Write_String@a+1,w
  1723  1A9D  00F5               	movwf	??_Lcd_Write_String
  1724  1A9E  1803               	skipnc
  1725  1A9F  0AF5               	incf	??_Lcd_Write_String,f
  1726  1AA0  1FF8               	btfss	Lcd_Write_String@i,7
  1727  1AA1  2AA3               	goto	u5340
  1728  1AA2  03F5               	decf	??_Lcd_Write_String,f
  1729  1AA3                     u5340:
  1730  1AA3  0875               	movf	??_Lcd_Write_String,w
  1731  1AA4  00F7               	movwf	??_Lcd_Write_String+2
  1732  1AA5  0877               	movf	??_Lcd_Write_String+2,w
  1733  1AA6  1283               	bcf	3,5	;RP0=0, select bank0
  1734  1AA7  1303               	bcf	3,6	;RP1=0, select bank0
  1735  1AA8  00FF               	movwf	btemp+1
  1736  1AA9  0876               	movf	??_Lcd_Write_String+1,w
  1737  1AAA  0084               	movwf	4
  1738  1AAB  160A  158A  2000  160A  158A  	fcall	stringtab
  1739  1AB0  3A00               	xorlw	0
  1740  1AB1  1D03               	skipz
  1741  1AB2  2AB4               	goto	u5351
  1742  1AB3  2AB5               	goto	u5350
  1743  1AB4                     u5351:
  1744  1AB4  2A77               	goto	l3335
  1745  1AB5                     u5350:
  1746  1AB5                     l144:
  1747  1AB5  0008               	return
  1748  1AB6                     __end_of_Lcd_Write_String:
  1749                           
  1750                           	psect	text3
  1751  1001                     __ptext3:	
  1752 ;; *************** function _Lcd_Write_Char *****************
  1753 ;; Defined at:
  1754 ;;		line 61 in file "LCD.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  a               1    wreg     unsigned char 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  a               1    2[COMMON] unsigned char 
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0, pclath, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1768 ;;      Params:         0       0       0       0       0
  1769 ;;      Locals:         1       0       0       0       0
  1770 ;;      Temps:          1       0       0       0       0
  1771 ;;      Totals:         2       0       0       0       0
  1772 ;;Total ram usage:        2 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    1
  1775 ;; This function calls:
  1776 ;;		_Lcd_Port
  1777 ;; This function is called by:
  1778 ;;		_Lcd_Write_String
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           
  1783                           ;psect for function _Lcd_Write_Char
  1784  1001                     _Lcd_Write_Char:
  1785                           
  1786                           ;incstack = 0
  1787                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1788                           ;Lcd_Write_Char@a stored from wreg
  1789  1001  00F2               	movwf	Lcd_Write_Char@a
  1790  1002                     l2953:
  1791                           
  1792                           ;LCD.c: 62:    PORTEbits.RE0 = 1;
  1793  1002  1283               	bcf	3,5	;RP0=0, select bank0
  1794  1003  1303               	bcf	3,6	;RP1=0, select bank0
  1795  1004  1409               	bsf	9,0	;volatile
  1796  1005                     l2955:
  1797                           
  1798                           ;LCD.c: 63:    Lcd_Port(a);
  1799  1005  0872               	movf	Lcd_Write_Char@a,w
  1800  1006  120A  158A  2000  160A  118A  	fcall	_Lcd_Port
  1801  100B                     l2957:
  1802                           
  1803                           ;LCD.c: 64:    PORTEbits.RE2 = 1;
  1804  100B  1283               	bcf	3,5	;RP0=0, select bank0
  1805  100C  1303               	bcf	3,6	;RP1=0, select bank0
  1806  100D  1509               	bsf	9,2	;volatile
  1807  100E                     l2959:
  1808                           
  1809                           ;LCD.c: 65:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1810  100E  301A               	movlw	26
  1811  100F  00F1               	movwf	??_Lcd_Write_Char
  1812  1010                     u6177:
  1813  1010  0BF1               	decfsz	??_Lcd_Write_Char,f
  1814  1011  2810               	goto	u6177
  1815  1012  0000               	nop
  1816  1013                     l2961:
  1817                           
  1818                           ;LCD.c: 66:    PORTEbits.RE2 = 0;
  1819  1013  1283               	bcf	3,5	;RP0=0, select bank0
  1820  1014  1303               	bcf	3,6	;RP1=0, select bank0
  1821  1015  1109               	bcf	9,2	;volatile
  1822  1016                     l138:
  1823  1016  0008               	return
  1824  1017                     __end_of_Lcd_Write_Char:
  1825                           
  1826                           	psect	text4
  1827  199D                     __ptext4:	
  1828 ;; *************** function _Lcd_Set_Cursor *****************
  1829 ;; Defined at:
  1830 ;;		line 48 in file "LCD.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  a               1    wreg     unsigned char 
  1833 ;;  b               1    4[COMMON] unsigned char 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  a               1    6[COMMON] unsigned char 
  1836 ;;  temp            1    7[COMMON] unsigned char 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0, pclath, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1846 ;;      Params:         1       0       0       0       0
  1847 ;;      Locals:         2       0       0       0       0
  1848 ;;      Temps:          1       0       0       0       0
  1849 ;;      Totals:         4       0       0       0       0
  1850 ;;Total ram usage:        4 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    2
  1853 ;; This function calls:
  1854 ;;		_Lcd_Cmd
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;;		_titulos_LCD
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           
  1862                           ;psect for function _Lcd_Set_Cursor
  1863  199D                     _Lcd_Set_Cursor:
  1864                           
  1865                           ;incstack = 0
  1866                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1867                           ;Lcd_Set_Cursor@a stored from wreg
  1868  199D  00F6               	movwf	Lcd_Set_Cursor@a
  1869  199E                     l3321:
  1870                           
  1871                           ;LCD.c: 49:  char temp;;LCD.c: 50:  if(a == 1){
  1872  199E  0376               	decf	Lcd_Set_Cursor@a,w
  1873  199F  1D03               	btfss	3,2
  1874  19A0  29A2               	goto	u5311
  1875  19A1  29A3               	goto	u5310
  1876  19A2                     u5311:
  1877  19A2  29AF               	goto	l3327
  1878  19A3                     u5310:
  1879  19A3                     l3323:
  1880                           
  1881                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  1882  19A3  0874               	movf	Lcd_Set_Cursor@b,w
  1883  19A4  3E7F               	addlw	127
  1884  19A5  00F5               	movwf	??_Lcd_Set_Cursor
  1885  19A6  0875               	movf	??_Lcd_Set_Cursor,w
  1886  19A7  00F7               	movwf	Lcd_Set_Cursor@temp
  1887  19A8                     l3325:
  1888                           
  1889                           ;LCD.c: 52:         Lcd_Cmd(temp);
  1890  19A8  0877               	movf	Lcd_Set_Cursor@temp,w
  1891  19A9  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  1892                           
  1893                           ;LCD.c: 53:  }
  1894  19AE  29C0               	goto	l135
  1895  19AF                     l3327:
  1896  19AF  3002               	movlw	2
  1897  19B0  0676               	xorwf	Lcd_Set_Cursor@a,w
  1898  19B1  1D03               	btfss	3,2
  1899  19B2  29B4               	goto	u5321
  1900  19B3  29B5               	goto	u5320
  1901  19B4                     u5321:
  1902  19B4  29C0               	goto	l135
  1903  19B5                     u5320:
  1904  19B5                     l3329:
  1905                           
  1906                           ;LCD.c: 55:   temp = 0xC0 + b - 1;
  1907  19B5  0874               	movf	Lcd_Set_Cursor@b,w
  1908  19B6  3EBF               	addlw	191
  1909  19B7  00F5               	movwf	??_Lcd_Set_Cursor
  1910  19B8  0875               	movf	??_Lcd_Set_Cursor,w
  1911  19B9  00F7               	movwf	Lcd_Set_Cursor@temp
  1912  19BA                     l3331:
  1913                           
  1914                           ;LCD.c: 56:   Lcd_Cmd(temp);
  1915  19BA  0877               	movf	Lcd_Set_Cursor@temp,w
  1916  19BB  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  1917  19C0                     l135:
  1918  19C0  0008               	return
  1919  19C1                     __end_of_Lcd_Set_Cursor:
  1920                           
  1921                           	psect	text5
  1922  195E                     __ptext5:	
  1923 ;; *************** function _setup *****************
  1924 ;; Defined at:
  1925 ;;		line 175 in file "pseudocodigo_lab3.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;		None
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;		None
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1939 ;;      Params:         0       0       0       0       0
  1940 ;;      Locals:         0       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0
  1942 ;;      Totals:         0       0       0       0       0
  1943 ;;Total ram usage:        0 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    1
  1946 ;; This function calls:
  1947 ;;		_initOsc
  1948 ;; This function is called by:
  1949 ;;		_main
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           
  1954                           ;psect for function _setup
  1955  195E                     _setup:
  1956  195E                     l3773:	
  1957                           ;incstack = 0
  1958                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1959                           
  1960                           
  1961                           ;pseudocodigo_lab3.c: 176:     initOsc(0b00000110);
  1962  195E  3006               	movlw	6
  1963  195F  160A  158A  2440  160A  158A  	fcall	_initOsc
  1964  1964                     l3775:
  1965                           
  1966                           ;pseudocodigo_lab3.c: 177:     ANSEL = 0b00000011;
  1967  1964  3003               	movlw	3
  1968  1965  1683               	bsf	3,5	;RP0=1, select bank3
  1969  1966  1703               	bsf	3,6	;RP1=1, select bank3
  1970  1967  0088               	movwf	8	;volatile
  1971  1968                     l3777:
  1972                           
  1973                           ;pseudocodigo_lab3.c: 178:     ANSELH = 0;
  1974  1968  0189               	clrf	9	;volatile
  1975  1969                     l3779:
  1976                           
  1977                           ;pseudocodigo_lab3.c: 179:     TRISA = 0b00000011;
  1978  1969  3003               	movlw	3
  1979  196A  1683               	bsf	3,5	;RP0=1, select bank1
  1980  196B  1303               	bcf	3,6	;RP1=0, select bank1
  1981  196C  0085               	movwf	5	;volatile
  1982  196D                     l3781:
  1983                           
  1984                           ;pseudocodigo_lab3.c: 180:     TRISB = 0;
  1985  196D  0186               	clrf	6	;volatile
  1986  196E                     l3783:
  1987                           
  1988                           ;pseudocodigo_lab3.c: 181:     TRISC = 0;
  1989  196E  0187               	clrf	7	;volatile
  1990  196F                     l3785:
  1991                           
  1992                           ;pseudocodigo_lab3.c: 182:     TRISD = 0;
  1993  196F  0188               	clrf	8	;volatile
  1994  1970                     l3787:
  1995                           
  1996                           ;pseudocodigo_lab3.c: 183:     TRISE = 0;
  1997  1970  0189               	clrf	9	;volatile
  1998  1971                     l3789:
  1999                           
  2000                           ;pseudocodigo_lab3.c: 184:     PORTA = 0;
  2001  1971  1283               	bcf	3,5	;RP0=0, select bank0
  2002  1972  1303               	bcf	3,6	;RP1=0, select bank0
  2003  1973  0185               	clrf	5	;volatile
  2004  1974                     l3791:
  2005                           
  2006                           ;pseudocodigo_lab3.c: 185:     PORTB = 0;
  2007  1974  0186               	clrf	6	;volatile
  2008  1975                     l3793:
  2009                           
  2010                           ;pseudocodigo_lab3.c: 186:     PORTC = 0;
  2011  1975  0187               	clrf	7	;volatile
  2012  1976                     l3795:
  2013                           
  2014                           ;pseudocodigo_lab3.c: 187:     PORTD = 0;
  2015  1976  0188               	clrf	8	;volatile
  2016  1977                     l3797:
  2017                           
  2018                           ;pseudocodigo_lab3.c: 188:     PORTE = 0;
  2019  1977  0189               	clrf	9	;volatile
  2020  1978                     l91:
  2021  1978  0008               	return
  2022  1979                     __end_of_setup:
  2023                           
  2024                           	psect	text6
  2025  1C40                     __ptext6:	
  2026 ;; *************** function _initOsc *****************
  2027 ;; Defined at:
  2028 ;;		line 3 in file "Oscilador.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;  IRCF            1    wreg     unsigned char 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  IRCF            1    2[COMMON] unsigned char 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2042 ;;      Params:         0       0       0       0       0
  2043 ;;      Locals:         1       0       0       0       0
  2044 ;;      Temps:          2       0       0       0       0
  2045 ;;      Totals:         3       0       0       0       0
  2046 ;;Total ram usage:        3 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_setup
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           
  2056                           ;psect for function _initOsc
  2057  1C40                     _initOsc:
  2058                           
  2059                           ;incstack = 0
  2060                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  2061                           ;initOsc@IRCF stored from wreg
  2062  1C40  00F2               	movwf	initOsc@IRCF
  2063  1C41                     l3621:
  2064                           
  2065                           ;Oscilador.c: 5:     switch(IRCF){
  2066  1C41  2C78               	goto	l3625
  2067  1C42                     l97:	
  2068                           ;Oscilador.c: 6:         case 0:
  2069                           
  2070                           
  2071                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  2072  1C42  1683               	bsf	3,5	;RP0=1, select bank1
  2073  1C43  1303               	bcf	3,6	;RP1=0, select bank1
  2074  1C44  130F               	bcf	15,6	;volatile
  2075                           
  2076                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  2077  1C45  128F               	bcf	15,5	;volatile
  2078                           
  2079                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  2080  1C46  120F               	bcf	15,4	;volatile
  2081                           
  2082                           ;Oscilador.c: 10:             break;
  2083  1C47  2C9A               	goto	l98
  2084  1C48                     l99:	
  2085                           ;Oscilador.c: 11:          case 1:
  2086                           
  2087                           
  2088                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  2089  1C48  1683               	bsf	3,5	;RP0=1, select bank1
  2090  1C49  1303               	bcf	3,6	;RP1=0, select bank1
  2091  1C4A  130F               	bcf	15,6	;volatile
  2092                           
  2093                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  2094  1C4B  128F               	bcf	15,5	;volatile
  2095                           
  2096                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  2097  1C4C  160F               	bsf	15,4	;volatile
  2098                           
  2099                           ;Oscilador.c: 15:             break;
  2100  1C4D  2C9A               	goto	l98
  2101  1C4E                     l100:	
  2102                           ;Oscilador.c: 16:         case 2:
  2103                           
  2104                           
  2105                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  2106  1C4E  1683               	bsf	3,5	;RP0=1, select bank1
  2107  1C4F  1303               	bcf	3,6	;RP1=0, select bank1
  2108  1C50  130F               	bcf	15,6	;volatile
  2109                           
  2110                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  2111  1C51  168F               	bsf	15,5	;volatile
  2112                           
  2113                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  2114  1C52  120F               	bcf	15,4	;volatile
  2115                           
  2116                           ;Oscilador.c: 20:             break;
  2117  1C53  2C9A               	goto	l98
  2118  1C54                     l101:	
  2119                           ;Oscilador.c: 21:         case 3:
  2120                           
  2121                           
  2122                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  2123  1C54  1683               	bsf	3,5	;RP0=1, select bank1
  2124  1C55  1303               	bcf	3,6	;RP1=0, select bank1
  2125  1C56  130F               	bcf	15,6	;volatile
  2126                           
  2127                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  2128  1C57  168F               	bsf	15,5	;volatile
  2129                           
  2130                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  2131  1C58  160F               	bsf	15,4	;volatile
  2132                           
  2133                           ;Oscilador.c: 25:             break;
  2134  1C59  2C9A               	goto	l98
  2135  1C5A                     l102:	
  2136                           ;Oscilador.c: 26:         case 4:
  2137                           
  2138                           
  2139                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  2140  1C5A  1683               	bsf	3,5	;RP0=1, select bank1
  2141  1C5B  1303               	bcf	3,6	;RP1=0, select bank1
  2142  1C5C  170F               	bsf	15,6	;volatile
  2143                           
  2144                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  2145  1C5D  128F               	bcf	15,5	;volatile
  2146                           
  2147                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  2148  1C5E  120F               	bcf	15,4	;volatile
  2149                           
  2150                           ;Oscilador.c: 30:             break;
  2151  1C5F  2C9A               	goto	l98
  2152  1C60                     l103:	
  2153                           ;Oscilador.c: 31:         case 5:
  2154                           
  2155                           
  2156                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  2157  1C60  1683               	bsf	3,5	;RP0=1, select bank1
  2158  1C61  1303               	bcf	3,6	;RP1=0, select bank1
  2159  1C62  170F               	bsf	15,6	;volatile
  2160                           
  2161                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  2162  1C63  128F               	bcf	15,5	;volatile
  2163                           
  2164                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  2165  1C64  160F               	bsf	15,4	;volatile
  2166                           
  2167                           ;Oscilador.c: 35:             break;
  2168  1C65  2C9A               	goto	l98
  2169  1C66                     l104:	
  2170                           ;Oscilador.c: 36:         case 6:
  2171                           
  2172                           
  2173                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  2174  1C66  1683               	bsf	3,5	;RP0=1, select bank1
  2175  1C67  1303               	bcf	3,6	;RP1=0, select bank1
  2176  1C68  170F               	bsf	15,6	;volatile
  2177                           
  2178                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  2179  1C69  168F               	bsf	15,5	;volatile
  2180                           
  2181                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  2182  1C6A  120F               	bcf	15,4	;volatile
  2183                           
  2184                           ;Oscilador.c: 40:             break;
  2185  1C6B  2C9A               	goto	l98
  2186  1C6C                     l105:	
  2187                           ;Oscilador.c: 41:         case 7:
  2188                           
  2189                           
  2190                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  2191  1C6C  1683               	bsf	3,5	;RP0=1, select bank1
  2192  1C6D  1303               	bcf	3,6	;RP1=0, select bank1
  2193  1C6E  170F               	bsf	15,6	;volatile
  2194                           
  2195                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  2196  1C6F  168F               	bsf	15,5	;volatile
  2197                           
  2198                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  2199  1C70  160F               	bsf	15,4	;volatile
  2200                           
  2201                           ;Oscilador.c: 45:             break;
  2202  1C71  2C9A               	goto	l98
  2203  1C72                     l106:	
  2204                           ;Oscilador.c: 46:         default:
  2205                           
  2206                           
  2207                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  2208  1C72  1683               	bsf	3,5	;RP0=1, select bank1
  2209  1C73  1303               	bcf	3,6	;RP1=0, select bank1
  2210  1C74  170F               	bsf	15,6	;volatile
  2211                           
  2212                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  2213  1C75  168F               	bsf	15,5	;volatile
  2214                           
  2215                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  2216  1C76  120F               	bcf	15,4	;volatile
  2217                           
  2218                           ;Oscilador.c: 50:             break;
  2219  1C77  2C9A               	goto	l98
  2220  1C78                     l3625:
  2221  1C78  0872               	movf	initOsc@IRCF,w
  2222  1C79  00F0               	movwf	??_initOsc
  2223  1C7A  01F1               	clrf	??_initOsc+1
  2224                           
  2225                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2226                           ; Switch size 1, requested type "simple"
  2227                           ; Number of cases is 1, Range of values is 0 to 0
  2228                           ; switch strategies available:
  2229                           ; Name         Instructions Cycles
  2230                           ; simple_byte            4     3 (average)
  2231                           ; direct_byte           11     8 (fixed)
  2232                           ; jumptable            260     6 (fixed)
  2233                           ;	Chosen strategy is simple_byte
  2234  1C7B  0871               	movf	??_initOsc+1,w
  2235  1C7C  3A00               	xorlw	0	; case 0
  2236  1C7D  1903               	skipnz
  2237  1C7E  2C80               	goto	l3961
  2238  1C7F  2C72               	goto	l106
  2239  1C80                     l3961:
  2240                           
  2241                           ; Switch size 1, requested type "simple"
  2242                           ; Number of cases is 8, Range of values is 0 to 7
  2243                           ; switch strategies available:
  2244                           ; Name         Instructions Cycles
  2245                           ; simple_byte           25    13 (average)
  2246                           ; direct_byte           32     8 (fixed)
  2247                           ; jumptable            260     6 (fixed)
  2248                           ;	Chosen strategy is simple_byte
  2249  1C80  0870               	movf	??_initOsc,w
  2250  1C81  3A00               	xorlw	0	; case 0
  2251  1C82  1903               	skipnz
  2252  1C83  2C42               	goto	l97
  2253  1C84  3A01               	xorlw	1	; case 1
  2254  1C85  1903               	skipnz
  2255  1C86  2C48               	goto	l99
  2256  1C87  3A03               	xorlw	3	; case 2
  2257  1C88  1903               	skipnz
  2258  1C89  2C4E               	goto	l100
  2259  1C8A  3A01               	xorlw	1	; case 3
  2260  1C8B  1903               	skipnz
  2261  1C8C  2C54               	goto	l101
  2262  1C8D  3A07               	xorlw	7	; case 4
  2263  1C8E  1903               	skipnz
  2264  1C8F  2C5A               	goto	l102
  2265  1C90  3A01               	xorlw	1	; case 5
  2266  1C91  1903               	skipnz
  2267  1C92  2C60               	goto	l103
  2268  1C93  3A03               	xorlw	3	; case 6
  2269  1C94  1903               	skipnz
  2270  1C95  2C66               	goto	l104
  2271  1C96  3A01               	xorlw	1	; case 7
  2272  1C97  1903               	skipnz
  2273  1C98  2C6C               	goto	l105
  2274  1C99  2C72               	goto	l106
  2275  1C9A                     l98:
  2276                           
  2277                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  2278  1C9A  140F               	bsf	15,0	;volatile
  2279  1C9B                     l107:
  2280  1C9B  0008               	return
  2281  1C9C                     __end_of_initOsc:
  2282                           
  2283                           	psect	text7
  2284  1A0D                     __ptext7:	
  2285 ;; *************** function _float_to_string *****************
  2286 ;; Defined at:
  2287 ;;		line 160 in file "pseudocodigo_lab3.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;		None
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2301 ;;      Params:         0       0       0       0       0
  2302 ;;      Locals:         0       0       0       0       0
  2303 ;;      Temps:          0       1       0       0       0
  2304 ;;      Totals:         0       1       0       0       0
  2305 ;;Total ram usage:        1 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    4
  2308 ;; This function calls:
  2309 ;;		_sprintf
  2310 ;; This function is called by:
  2311 ;;		_main
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           
  2316                           ;psect for function _float_to_string
  2317  1A0D                     _float_to_string:
  2318  1A0D                     l3843:	
  2319                           ;incstack = 0
  2320                           ; Regs used in _float_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2321                           
  2322                           
  2323                           ;pseudocodigo_lab3.c: 161:     sprintf(data2, "%1.2f ",S1_val);
  2324  1A0D  3091               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2325  1A0E  1283               	bcf	3,5	;RP0=0, select bank0
  2326  1A0F  1303               	bcf	3,6	;RP1=0, select bank0
  2327  1A10  00EE               	movwf	??_float_to_string
  2328  1A11  086E               	movf	??_float_to_string,w
  2329  1A12  1683               	bsf	3,5	;RP0=1, select bank1
  2330  1A13  1303               	bcf	3,6	;RP1=0, select bank1
  2331  1A14  00A0               	movwf	sprintf@f^(0+128)
  2332  1A15  084E               	movf	(_S1_val+3)^(0+128),w
  2333  1A16  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2334  1A17  084D               	movf	(_S1_val+2)^(0+128),w
  2335  1A18  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2336  1A19  084C               	movf	(_S1_val+1)^(0+128),w
  2337  1A1A  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2338  1A1B  084B               	movf	_S1_val^(0+128),w
  2339  1A1C  00A1               	movwf	(?_sprintf^(0+128)+1)
  2340  1A1D  30D7               	movlw	(low (_data2| 0))& (0+255)
  2341  1A1E  120A  118A  2075  160A  158A  	fcall	_sprintf
  2342                           
  2343                           ;pseudocodigo_lab3.c: 162:     sprintf(data1, "%1.2f", S2_val);
  2344  1A23  3098               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2345  1A24  1283               	bcf	3,5	;RP0=0, select bank0
  2346  1A25  1303               	bcf	3,6	;RP1=0, select bank0
  2347  1A26  00EE               	movwf	??_float_to_string
  2348  1A27  086E               	movf	??_float_to_string,w
  2349  1A28  1683               	bsf	3,5	;RP0=1, select bank1
  2350  1A29  1303               	bcf	3,6	;RP1=0, select bank1
  2351  1A2A  00A0               	movwf	sprintf@f^(0+128)
  2352  1A2B  084A               	movf	(_S2_val+3)^(0+128),w
  2353  1A2C  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2354  1A2D  0849               	movf	(_S2_val+2)^(0+128),w
  2355  1A2E  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2356  1A2F  0848               	movf	(_S2_val+1)^(0+128),w
  2357  1A30  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2358  1A31  0847               	movf	_S2_val^(0+128),w
  2359  1A32  00A1               	movwf	(?_sprintf^(0+128)+1)
  2360  1A33  30DF               	movlw	(low (_data1| 0))& (0+255)
  2361  1A34  120A  118A  2075  160A  158A  	fcall	_sprintf
  2362  1A39                     l88:
  2363  1A39  0008               	return
  2364  1A3A                     __end_of_float_to_string:
  2365                           
  2366                           	psect	text8
  2367  0075                     __ptext8:	
  2368 ;; *************** function _sprintf *****************
  2369 ;; Defined at:
  2370 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  sp              1    wreg     PTR unsigned char 
  2373 ;;		 -> data2(8), data1(8), 
  2374 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2375 ;;		 -> STR_7(6), STR_6(7), 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  2378 ;;		 -> data2(8), data1(8), 
  2379 ;;  fval            4   29[BANK1 ] PTR unsigned char 
  2380 ;;  tmpval          4   23[BANK1 ] struct .
  2381 ;;  val             4   15[BANK1 ] unsigned long 
  2382 ;;  prec            2   34[BANK1 ] int 
  2383 ;;  eexp            2   27[BANK1 ] int 
  2384 ;;  width           2   21[BANK1 ] int 
  2385 ;;  flag            2   19[BANK1 ] unsigned short 
  2386 ;;  cp              2    0        PTR const unsigned char 
  2387 ;;  len             2    0        unsigned int 
  2388 ;;  c               1   36[BANK1 ] unsigned char 
  2389 ;;  ap              1   14[BANK1 ] PTR void [1]
  2390 ;;		 -> ?_sprintf(2), 
  2391 ;;  d               1    0        unsigned char 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  2    0[BANK1 ] int 
  2394 ;; Registers used:
  2395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2401 ;;      Params:         0       0       5       0       0
  2402 ;;      Locals:         0       0      27       0       0
  2403 ;;      Temps:          0       0       5       0       0
  2404 ;;      Totals:         0       0      37       0       0
  2405 ;;Total ram usage:       37 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    3
  2408 ;; This function calls:
  2409 ;;		___awdiv
  2410 ;;		___fladd
  2411 ;;		___fleq
  2412 ;;		___flge
  2413 ;;		___flmul
  2414 ;;		___flneg
  2415 ;;		___flsub
  2416 ;;		___fltol
  2417 ;;		___lldiv
  2418 ;;		___llmod
  2419 ;;		___wmul
  2420 ;;		___xxtofl
  2421 ;;		__div_to_l_
  2422 ;;		__tdiv_to_l_
  2423 ;;		_fround
  2424 ;;		_isdigit
  2425 ;;		_scale
  2426 ;; This function is called by:
  2427 ;;		_float_to_string
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           
  2432                           ;psect for function _sprintf
  2433  0075                     _sprintf:
  2434                           
  2435                           ;incstack = 0
  2436                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2437                           ;sprintf@sp stored from wreg
  2438  0075  1683               	bsf	3,5	;RP0=1, select bank1
  2439  0076  1303               	bcf	3,6	;RP1=0, select bank1
  2440  0077  00C1               	movwf	sprintf@sp^(0+128)
  2441  0078                     l3359:
  2442                           
  2443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2444  0078  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2445  0079  00A5               	movwf	??_sprintf^(0+128)
  2446  007A  0825               	movf	??_sprintf^(0+128),w
  2447  007B  00AE               	movwf	sprintf@ap^(0+128)
  2448                           
  2449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2450  007C  2FD9               	goto	l3609
  2451  007D                     l3361:
  2452                           
  2453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2454  007D  3025               	movlw	37
  2455  007E  0644               	xorwf	sprintf@c^(0+128),w
  2456  007F  1903               	btfsc	3,2
  2457  0080  2882               	goto	u5361
  2458  0081  2883               	goto	u5360
  2459  0082                     u5361:
  2460  0082  288F               	goto	l3367
  2461  0083                     u5360:
  2462  0083                     l3363:
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2465  0083  0844               	movf	sprintf@c^(0+128),w
  2466  0084  00A5               	movwf	??_sprintf^(0+128)
  2467  0085  0841               	movf	sprintf@sp^(0+128),w
  2468  0086  0084               	movwf	4
  2469  0087  0825               	movf	??_sprintf^(0+128),w
  2470  0088  1383               	bcf	3,7	;select IRP bank0
  2471  0089  0080               	movwf	0
  2472  008A                     l3365:
  2473  008A  3001               	movlw	1
  2474  008B  00A5               	movwf	??_sprintf^(0+128)
  2475  008C  0825               	movf	??_sprintf^(0+128),w
  2476  008D  07C1               	addwf	sprintf@sp^(0+128),f
  2477                           
  2478                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2479  008E  2FD9               	goto	l3609
  2480  008F                     l3367:
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2483  008F  01B5               	clrf	sprintf@width^(0+128)
  2484  0090  01B6               	clrf	(sprintf@width+1)^(0+128)
  2485                           
  2486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2487  0091  01B3               	clrf	sprintf@flag^(0+128)
  2488  0092  01B4               	clrf	(sprintf@flag+1)^(0+128)
  2489  0093                     l3369:
  2490                           
  2491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2492  0093  0820               	movf	sprintf@f^(0+128),w
  2493  0094  0084               	movwf	4
  2494  0095  160A  158A  200A  120A  118A  	fcall	stringdir
  2495  009A  160A  158A  2132  120A  118A  	fcall	_isdigit
  2496  009F  1C03               	btfss	3,0
  2497  00A0  28A2               	goto	u5371
  2498  00A1  28A3               	goto	u5370
  2499  00A2                     u5371:
  2500  00A2  28E3               	goto	l3381
  2501  00A3                     u5370:
  2502  00A3                     l3371:
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2505  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  2506  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  2507  00A5  01B5               	clrf	sprintf@width^(0+128)
  2508  00A6  01B6               	clrf	(sprintf@width+1)^(0+128)
  2509  00A7                     l3373:
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2512  00A7  300A               	movlw	10
  2513  00A8  00F0               	movwf	___wmul@multiplier
  2514  00A9  3000               	movlw	0
  2515  00AA  00F1               	movwf	___wmul@multiplier+1
  2516  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  2517  00AC  1303               	bcf	3,6	;RP1=0, select bank1
  2518  00AD  0836               	movf	(sprintf@width+1)^(0+128),w
  2519  00AE  00F3               	movwf	___wmul@multiplicand+1
  2520  00AF  0835               	movf	sprintf@width^(0+128),w
  2521  00B0  00F2               	movwf	___wmul@multiplicand
  2522  00B1  160A  158A  21C1  120A  118A  	fcall	___wmul
  2523  00B6  0871               	movf	?___wmul+1,w
  2524  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  2525  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  2526  00B9  00B6               	movwf	(sprintf@width+1)^(0+128)
  2527  00BA  0870               	movf	?___wmul,w
  2528  00BB  00B5               	movwf	sprintf@width^(0+128)
  2529  00BC                     l3375:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2532  00BC  0820               	movf	sprintf@f^(0+128),w
  2533  00BD  0084               	movwf	4
  2534  00BE  160A  158A  200A  120A  118A  	fcall	stringdir
  2535  00C3  3ED0               	addlw	208
  2536  00C4  00A5               	movwf	??_sprintf^(0+128)
  2537  00C5  30FF               	movlw	255
  2538  00C6  1803               	skipnc
  2539  00C7  3000               	movlw	0
  2540  00C8  00A6               	movwf	(??_sprintf^(0+128)+1)
  2541  00C9  0825               	movf	??_sprintf^(0+128),w
  2542  00CA  07B5               	addwf	sprintf@width^(0+128),f
  2543  00CB  1803               	skipnc
  2544  00CC  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2545  00CD  0826               	movf	(??_sprintf+1)^(0+128),w
  2546  00CE  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2547  00CF                     l3377:
  2548  00CF  3001               	movlw	1
  2549  00D0  00A5               	movwf	??_sprintf^(0+128)
  2550  00D1  0825               	movf	??_sprintf^(0+128),w
  2551  00D2  07A0               	addwf	sprintf@f^(0+128),f
  2552  00D3                     l3379:
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2555  00D3  0820               	movf	sprintf@f^(0+128),w
  2556  00D4  0084               	movwf	4
  2557  00D5  160A  158A  200A  120A  118A  	fcall	stringdir
  2558  00DA  160A  158A  2132  120A  118A  	fcall	_isdigit
  2559  00DF  1803               	btfsc	3,0
  2560  00E0  28E2               	goto	u5381
  2561  00E1  28E3               	goto	u5380
  2562  00E2                     u5381:
  2563  00E2  28A7               	goto	l3373
  2564  00E3                     u5380:
  2565  00E3                     l3381:
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2568  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  2569  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  2570  00E5  0820               	movf	sprintf@f^(0+128),w
  2571  00E6  0084               	movwf	4
  2572  00E7  160A  158A  200A  120A  118A  	fcall	stringdir
  2573  00EC  3A2E               	xorlw	46
  2574  00ED  1D03               	skipz
  2575  00EE  28F0               	goto	u5391
  2576  00EF  28F1               	goto	u5390
  2577  00F0                     u5391:
  2578  00F0  2936               	goto	l3397
  2579  00F1                     u5390:
  2580  00F1                     l3383:
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2583  00F1  1734               	bsf	(sprintf@flag^(0+128)+1),6
  2584  00F2                     l3385:
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2587  00F2  3001               	movlw	1
  2588  00F3  00A5               	movwf	??_sprintf^(0+128)
  2589  00F4  0825               	movf	??_sprintf^(0+128),w
  2590  00F5  07A0               	addwf	sprintf@f^(0+128),f
  2591  00F6                     l3387:
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2594  00F6  01C2               	clrf	sprintf@prec^(0+128)
  2595  00F7  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2598  00F8  2925               	goto	l3395
  2599  00F9                     l3389:
  2600                           
  2601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2602  00F9  300A               	movlw	10
  2603  00FA  00F0               	movwf	___wmul@multiplier
  2604  00FB  3000               	movlw	0
  2605  00FC  00F1               	movwf	___wmul@multiplier+1
  2606  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  2607  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  2608  00FF  0843               	movf	(sprintf@prec+1)^(0+128),w
  2609  0100  00F3               	movwf	___wmul@multiplicand+1
  2610  0101  0842               	movf	sprintf@prec^(0+128),w
  2611  0102  00F2               	movwf	___wmul@multiplicand
  2612  0103  160A  158A  21C1  120A  118A  	fcall	___wmul
  2613  0108  0871               	movf	?___wmul+1,w
  2614  0109  1683               	bsf	3,5	;RP0=1, select bank1
  2615  010A  1303               	bcf	3,6	;RP1=0, select bank1
  2616  010B  00C3               	movwf	(sprintf@prec+1)^(0+128)
  2617  010C  0870               	movf	?___wmul,w
  2618  010D  00C2               	movwf	sprintf@prec^(0+128)
  2619  010E                     l3391:
  2620                           
  2621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2622  010E  0820               	movf	sprintf@f^(0+128),w
  2623  010F  0084               	movwf	4
  2624  0110  160A  158A  200A  120A  118A  	fcall	stringdir
  2625  0115  3ED0               	addlw	208
  2626  0116  00A5               	movwf	??_sprintf^(0+128)
  2627  0117  30FF               	movlw	255
  2628  0118  1803               	skipnc
  2629  0119  3000               	movlw	0
  2630  011A  00A6               	movwf	(??_sprintf^(0+128)+1)
  2631  011B  0825               	movf	??_sprintf^(0+128),w
  2632  011C  07C2               	addwf	sprintf@prec^(0+128),f
  2633  011D  1803               	skipnc
  2634  011E  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  2635  011F  0826               	movf	(??_sprintf+1)^(0+128),w
  2636  0120  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  2637  0121                     l3393:
  2638  0121  3001               	movlw	1
  2639  0122  00A5               	movwf	??_sprintf^(0+128)
  2640  0123  0825               	movf	??_sprintf^(0+128),w
  2641  0124  07A0               	addwf	sprintf@f^(0+128),f
  2642  0125                     l3395:
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2645  0125  0820               	movf	sprintf@f^(0+128),w
  2646  0126  0084               	movwf	4
  2647  0127  160A  158A  200A  120A  118A  	fcall	stringdir
  2648  012C  160A  158A  2132  120A  118A  	fcall	_isdigit
  2649  0131  1803               	btfsc	3,0
  2650  0132  2934               	goto	u5401
  2651  0133  2935               	goto	u5400
  2652  0134                     u5401:
  2653  0134  28F9               	goto	l3389
  2654  0135                     u5400:
  2655  0135  293C               	goto	l3403
  2656  0136                     l3397:
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2659  0136  01C2               	clrf	sprintf@prec^(0+128)
  2660  0137  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2661  0138                     l3399:
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2664  0138  1634               	bsf	(sprintf@flag^(0+128)+1),4
  2665  0139  293C               	goto	l3403
  2666  013A                     l331:	
  2667                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2668                           
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2671  013A  1534               	bsf	(sprintf@flag^(0+128)+1),2
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2674  013B  2958               	goto	l3405
  2675  013C                     l3403:
  2676  013C  3001               	movlw	1
  2677  013D  1683               	bsf	3,5	;RP0=1, select bank1
  2678  013E  1303               	bcf	3,6	;RP1=0, select bank1
  2679  013F  07A0               	addwf	sprintf@f^(0+128),f
  2680  0140  30FF               	movlw	-1
  2681  0141  0720               	addwf	sprintf@f^(0+128),w
  2682  0142  0084               	movwf	4
  2683  0143  160A  158A  200A  120A  118A  	fcall	stringdir
  2684  0148  00C4               	movwf	sprintf@c^(0+128)
  2685  0149  00A5               	movwf	??_sprintf^(0+128)
  2686  014A  01A6               	clrf	(??_sprintf^(0+128)+1)
  2687                           
  2688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2689                           ; Switch size 1, requested type "simple"
  2690                           ; Number of cases is 1, Range of values is 0 to 0
  2691                           ; switch strategies available:
  2692                           ; Name         Instructions Cycles
  2693                           ; simple_byte            4     3 (average)
  2694                           ; direct_byte           11     8 (fixed)
  2695                           ; jumptable            260     6 (fixed)
  2696                           ;	Chosen strategy is simple_byte
  2697  014B  0826               	movf	(??_sprintf+1)^(0+128),w
  2698  014C  3A00               	xorlw	0	; case 0
  2699  014D  1903               	skipnz
  2700  014E  2950               	goto	l3963
  2701  014F  2FD9               	goto	l3609
  2702  0150                     l3963:
  2703                           
  2704                           ; Switch size 1, requested type "simple"
  2705                           ; Number of cases is 2, Range of values is 0 to 102
  2706                           ; switch strategies available:
  2707                           ; Name         Instructions Cycles
  2708                           ; simple_byte            7     4 (average)
  2709                           ; jumptable            260     6 (fixed)
  2710                           ;	Chosen strategy is simple_byte
  2711  0150  0825               	movf	??_sprintf^(0+128),w
  2712  0151  3A00               	xorlw	0	; case 0
  2713  0152  1903               	skipnz
  2714  0153  2FEB               	goto	l3611
  2715  0154  3A66               	xorlw	102	; case 102
  2716  0155  1903               	skipnz
  2717  0156  293A               	goto	l331
  2718  0157  2FD9               	goto	l3609
  2719  0158                     l3405:
  2720                           
  2721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2722  0158  3000               	movlw	0
  2723  0159  0533               	andwf	sprintf@flag^(0+128),w
  2724  015A  00A5               	movwf	??_sprintf^(0+128)
  2725  015B  3007               	movlw	7
  2726  015C  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2727  015D  00A6               	movwf	(??_sprintf+1)^(0+128)
  2728  015E  0825               	movf	??_sprintf^(0+128),w
  2729  015F  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2730  0160  1903               	btfsc	3,2
  2731  0161  2963               	goto	u5411
  2732  0162  2964               	goto	u5410
  2733  0163                     u5411:
  2734  0163  2F16               	goto	l3563
  2735  0164                     u5410:
  2736  0164                     l3407:
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2739  0164  1E34               	btfss	(sprintf@flag+1)^(0+128),4
  2740  0165  2967               	goto	u5421
  2741  0166  2968               	goto	u5420
  2742  0167                     u5421:
  2743  0167  296C               	goto	l3411
  2744  0168                     u5420:
  2745  0168                     l3409:
  2746                           
  2747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2748  0168  3006               	movlw	6
  2749  0169  00C2               	movwf	sprintf@prec^(0+128)
  2750  016A  3000               	movlw	0
  2751  016B  00C3               	movwf	(sprintf@prec^(0+128)+1)
  2752  016C                     l3411:
  2753                           
  2754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2755  016C  082E               	movf	sprintf@ap^(0+128),w
  2756  016D  0084               	movwf	4
  2757  016E  1383               	bcf	3,7	;select IRP bank0
  2758  016F  0800               	movf	0,w
  2759  0170  00BD               	movwf	sprintf@fval^(0+128)
  2760  0171  0A84               	incf	4,f
  2761  0172  0800               	movf	0,w
  2762  0173  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2763  0174  0A84               	incf	4,f
  2764  0175  0800               	movf	0,w
  2765  0176  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2766  0177  0A84               	incf	4,f
  2767  0178  0800               	movf	0,w
  2768  0179  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2769  017A                     l3413:
  2770  017A  3004               	movlw	4
  2771  017B  00A5               	movwf	??_sprintf^(0+128)
  2772  017C  0825               	movf	??_sprintf^(0+128),w
  2773  017D  07AE               	addwf	sprintf@ap^(0+128),f
  2774  017E                     l3415:
  2775                           
  2776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2777  017E  0840               	movf	(sprintf@fval+3)^(0+128),w
  2778  017F  00F3               	movwf	___flge@ff1+3
  2779  0180  083F               	movf	(sprintf@fval+2)^(0+128),w
  2780  0181  00F2               	movwf	___flge@ff1+2
  2781  0182  083E               	movf	(sprintf@fval+1)^(0+128),w
  2782  0183  00F1               	movwf	___flge@ff1+1
  2783  0184  083D               	movf	sprintf@fval^(0+128),w
  2784  0185  00F0               	movwf	___flge@ff1
  2785  0186  3000               	movlw	0
  2786  0187  00F7               	movwf	___flge@ff2+3
  2787  0188  3000               	movlw	0
  2788  0189  00F6               	movwf	___flge@ff2+2
  2789  018A  3000               	movlw	0
  2790  018B  00F5               	movwf	___flge@ff2+1
  2791  018C  3000               	movlw	0
  2792  018D  00F4               	movwf	___flge@ff2
  2793  018E  160A  158A  26A4  120A  118A  	fcall	___flge
  2794  0193  1803               	btfsc	3,0
  2795  0194  2996               	goto	u5431
  2796  0195  2997               	goto	u5430
  2797  0196                     u5431:
  2798  0196  29B4               	goto	l3421
  2799  0197                     u5430:
  2800  0197                     l3417:
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2803  0197  1683               	bsf	3,5	;RP0=1, select bank1
  2804  0198  1303               	bcf	3,6	;RP1=0, select bank1
  2805  0199  0840               	movf	(sprintf@fval+3)^(0+128),w
  2806  019A  00F3               	movwf	___flneg@f1+3
  2807  019B  083F               	movf	(sprintf@fval+2)^(0+128),w
  2808  019C  00F2               	movwf	___flneg@f1+2
  2809  019D  083E               	movf	(sprintf@fval+1)^(0+128),w
  2810  019E  00F1               	movwf	___flneg@f1+1
  2811  019F  083D               	movf	sprintf@fval^(0+128),w
  2812  01A0  00F0               	movwf	___flneg@f1
  2813  01A1  160A  158A  2127  120A  118A  	fcall	___flneg
  2814  01A6  0873               	movf	?___flneg+3,w
  2815  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  2816  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  2817  01A9  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2818  01AA  0872               	movf	?___flneg+2,w
  2819  01AB  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2820  01AC  0871               	movf	?___flneg+1,w
  2821  01AD  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2822  01AE  0870               	movf	?___flneg,w
  2823  01AF  00BD               	movwf	sprintf@fval^(0+128)
  2824  01B0                     l3419:
  2825                           
  2826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2827  01B0  3003               	movlw	3
  2828  01B1  04B3               	iorwf	sprintf@flag^(0+128),f
  2829  01B2  3000               	movlw	0
  2830  01B3  04B4               	iorwf	(sprintf@flag+1)^(0+128),f
  2831  01B4                     l3421:
  2832                           
  2833                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2834  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  2835  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  2836  01B6  01BB               	clrf	sprintf@eexp^(0+128)
  2837  01B7  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  2838  01B8                     l3423:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2841  01B8  0840               	movf	(sprintf@fval+3)^(0+128),w
  2842  01B9  00F3               	movwf	___fleq@ff1+3
  2843  01BA  083F               	movf	(sprintf@fval+2)^(0+128),w
  2844  01BB  00F2               	movwf	___fleq@ff1+2
  2845  01BC  083E               	movf	(sprintf@fval+1)^(0+128),w
  2846  01BD  00F1               	movwf	___fleq@ff1+1
  2847  01BE  083D               	movf	sprintf@fval^(0+128),w
  2848  01BF  00F0               	movwf	___fleq@ff1
  2849  01C0  3000               	movlw	0
  2850  01C1  00F7               	movwf	___fleq@ff2+3
  2851  01C2  3000               	movlw	0
  2852  01C3  00F6               	movwf	___fleq@ff2+2
  2853  01C4  3000               	movlw	0
  2854  01C5  00F5               	movwf	___fleq@ff2+1
  2855  01C6  3000               	movlw	0
  2856  01C7  00F4               	movwf	___fleq@ff2
  2857  01C8  160A  158A  2345  120A  118A  	fcall	___fleq
  2858  01CD  1803               	btfsc	3,0
  2859  01CE  29D0               	goto	u5441
  2860  01CF  29D1               	goto	u5440
  2861  01D0                     u5441:
  2862  01D0  2AC1               	goto	l3449
  2863  01D1                     u5440:
  2864  01D1                     l3425:
  2865                           
  2866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2867  01D1  1003               	clrc
  2868  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2869  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2870  01D4  0D3F               	rlf	(sprintf@fval+2)^(0+128),w
  2871  01D5  0D40               	rlf	(sprintf@fval+3)^(0+128),w
  2872  01D6  3E82               	addlw	130
  2873  01D7  00BB               	movwf	sprintf@eexp^(0+128)
  2874  01D8  30FF               	movlw	255
  2875  01D9  1803               	skipnc
  2876  01DA  3000               	movlw	0
  2877  01DB  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  2878  01DC                     l3427:
  2879                           
  2880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2881  01DC  30FF               	movlw	255
  2882  01DD  07BB               	addwf	sprintf@eexp^(0+128),f
  2883  01DE  1803               	skipnc
  2884  01DF  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2885  01E0  30FF               	movlw	255
  2886  01E1  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2887  01E2                     l3429:
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2890  01E2  3003               	movlw	3
  2891  01E3  00F0               	movwf	___wmul@multiplier
  2892  01E4  3000               	movlw	0
  2893  01E5  00F1               	movwf	___wmul@multiplier+1
  2894  01E6  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2895  01E7  00F3               	movwf	___wmul@multiplicand+1
  2896  01E8  083B               	movf	sprintf@eexp^(0+128),w
  2897  01E9  00F2               	movwf	___wmul@multiplicand
  2898  01EA  160A  158A  21C1  120A  118A  	fcall	___wmul
  2899  01EF  0871               	movf	?___wmul+1,w
  2900  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  2901  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  2902  01F2  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2903  01F3  0870               	movf	?___wmul,w
  2904  01F4  00BB               	movwf	sprintf@eexp^(0+128)
  2905  01F5                     l3431:
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2908  01F5  300A               	movlw	10
  2909  01F6  00F7               	movwf	___awdiv@divisor
  2910  01F7  3000               	movlw	0
  2911  01F8  00F8               	movwf	___awdiv@divisor+1
  2912  01F9  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2913  01FA  00FA               	movwf	___awdiv@dividend+1
  2914  01FB  083B               	movf	sprintf@eexp^(0+128),w
  2915  01FC  00F9               	movwf	___awdiv@dividend
  2916  01FD  120A  118A  200C  120A  118A  	fcall	___awdiv
  2917  0202  0878               	movf	?___awdiv+1,w
  2918  0203  1683               	bsf	3,5	;RP0=1, select bank1
  2919  0204  1303               	bcf	3,6	;RP1=0, select bank1
  2920  0205  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2921  0206  0877               	movf	?___awdiv,w
  2922  0207  00BB               	movwf	sprintf@eexp^(0+128)
  2923  0208                     l3433:
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2926  0208  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  2927  0209  2A0B               	goto	u5451
  2928  020A  2A0C               	goto	u5450
  2929  020B                     u5451:
  2930  020B  2A12               	goto	l3437
  2931  020C                     u5450:
  2932  020C                     l3435:
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2935  020C  30FF               	movlw	255
  2936  020D  07BB               	addwf	sprintf@eexp^(0+128),f
  2937  020E  1803               	skipnc
  2938  020F  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2939  0210  30FF               	movlw	255
  2940  0211  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2941  0212                     l3437:
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2944  0212  033B               	decf	sprintf@eexp^(0+128),w
  2945  0213  3AFF               	xorlw	255
  2946  0214  120A  158A  2140  120A  118A  	fcall	_scale
  2947  0219  1283               	bcf	3,5	;RP0=0, select bank0
  2948  021A  1303               	bcf	3,6	;RP1=0, select bank0
  2949  021B  0841               	movf	?_scale+3,w
  2950  021C  1683               	bsf	3,5	;RP0=1, select bank1
  2951  021D  1303               	bcf	3,6	;RP1=0, select bank1
  2952  021E  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2953  021F  1283               	bcf	3,5	;RP0=0, select bank0
  2954  0220  1303               	bcf	3,6	;RP1=0, select bank0
  2955  0221  0840               	movf	?_scale+2,w
  2956  0222  1683               	bsf	3,5	;RP0=1, select bank1
  2957  0223  1303               	bcf	3,6	;RP1=0, select bank1
  2958  0224  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2959  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0226  1303               	bcf	3,6	;RP1=0, select bank0
  2961  0227  083F               	movf	?_scale+1,w
  2962  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2963  0229  1303               	bcf	3,6	;RP1=0, select bank1
  2964  022A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2965  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2966  022C  1303               	bcf	3,6	;RP1=0, select bank0
  2967  022D  083E               	movf	?_scale,w
  2968  022E  1683               	bsf	3,5	;RP0=1, select bank1
  2969  022F  1303               	bcf	3,6	;RP1=0, select bank1
  2970  0230  00B7               	movwf	sprintf@tmpval^(0+128)
  2971  0231                     l3439:
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2974  0231  0840               	movf	(sprintf@fval+3)^(0+128),w
  2975  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2977  0234  00A7               	movwf	___flmul@b+3
  2978  0235  1683               	bsf	3,5	;RP0=1, select bank1
  2979  0236  1303               	bcf	3,6	;RP1=0, select bank1
  2980  0237  083F               	movf	(sprintf@fval+2)^(0+128),w
  2981  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2982  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2983  023A  00A6               	movwf	___flmul@b+2
  2984  023B  1683               	bsf	3,5	;RP0=1, select bank1
  2985  023C  1303               	bcf	3,6	;RP1=0, select bank1
  2986  023D  083E               	movf	(sprintf@fval+1)^(0+128),w
  2987  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2988  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2989  0240  00A5               	movwf	___flmul@b+1
  2990  0241  1683               	bsf	3,5	;RP0=1, select bank1
  2991  0242  1303               	bcf	3,6	;RP1=0, select bank1
  2992  0243  083D               	movf	sprintf@fval^(0+128),w
  2993  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2994  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2995  0246  00A4               	movwf	___flmul@b
  2996  0247  1683               	bsf	3,5	;RP0=1, select bank1
  2997  0248  1303               	bcf	3,6	;RP1=0, select bank1
  2998  0249  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2999  024A  1283               	bcf	3,5	;RP0=0, select bank0
  3000  024B  1303               	bcf	3,6	;RP1=0, select bank0
  3001  024C  00AB               	movwf	___flmul@a+3
  3002  024D  1683               	bsf	3,5	;RP0=1, select bank1
  3003  024E  1303               	bcf	3,6	;RP1=0, select bank1
  3004  024F  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3005  0250  1283               	bcf	3,5	;RP0=0, select bank0
  3006  0251  1303               	bcf	3,6	;RP1=0, select bank0
  3007  0252  00AA               	movwf	___flmul@a+2
  3008  0253  1683               	bsf	3,5	;RP0=1, select bank1
  3009  0254  1303               	bcf	3,6	;RP1=0, select bank1
  3010  0255  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3011  0256  1283               	bcf	3,5	;RP0=0, select bank0
  3012  0257  1303               	bcf	3,6	;RP1=0, select bank0
  3013  0258  00A9               	movwf	___flmul@a+1
  3014  0259  1683               	bsf	3,5	;RP0=1, select bank1
  3015  025A  1303               	bcf	3,6	;RP1=0, select bank1
  3016  025B  0837               	movf	sprintf@tmpval^(0+128),w
  3017  025C  1283               	bcf	3,5	;RP0=0, select bank0
  3018  025D  1303               	bcf	3,6	;RP1=0, select bank0
  3019  025E  00A8               	movwf	___flmul@a
  3020  025F  120A  158A  249F  120A  118A  	fcall	___flmul
  3021  0264  1283               	bcf	3,5	;RP0=0, select bank0
  3022  0265  1303               	bcf	3,6	;RP1=0, select bank0
  3023  0266  0827               	movf	?___flmul+3,w
  3024  0267  1683               	bsf	3,5	;RP0=1, select bank1
  3025  0268  1303               	bcf	3,6	;RP1=0, select bank1
  3026  0269  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3027  026A  1283               	bcf	3,5	;RP0=0, select bank0
  3028  026B  1303               	bcf	3,6	;RP1=0, select bank0
  3029  026C  0826               	movf	?___flmul+2,w
  3030  026D  1683               	bsf	3,5	;RP0=1, select bank1
  3031  026E  1303               	bcf	3,6	;RP1=0, select bank1
  3032  026F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3033  0270  1283               	bcf	3,5	;RP0=0, select bank0
  3034  0271  1303               	bcf	3,6	;RP1=0, select bank0
  3035  0272  0825               	movf	?___flmul+1,w
  3036  0273  1683               	bsf	3,5	;RP0=1, select bank1
  3037  0274  1303               	bcf	3,6	;RP1=0, select bank1
  3038  0275  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3039  0276  1283               	bcf	3,5	;RP0=0, select bank0
  3040  0277  1303               	bcf	3,6	;RP1=0, select bank0
  3041  0278  0824               	movf	?___flmul,w
  3042  0279  1683               	bsf	3,5	;RP0=1, select bank1
  3043  027A  1303               	bcf	3,6	;RP1=0, select bank1
  3044  027B  00B7               	movwf	sprintf@tmpval^(0+128)
  3045  027C                     l3441:
  3046                           
  3047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  3048  027C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3049  027D  00F3               	movwf	___flge@ff1+3
  3050  027E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3051  027F  00F2               	movwf	___flge@ff1+2
  3052  0280  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3053  0281  00F1               	movwf	___flge@ff1+1
  3054  0282  0837               	movf	sprintf@tmpval^(0+128),w
  3055  0283  00F0               	movwf	___flge@ff1
  3056  0284  303F               	movlw	63
  3057  0285  00F7               	movwf	___flge@ff2+3
  3058  0286  3080               	movlw	128
  3059  0287  00F6               	movwf	___flge@ff2+2
  3060  0288  3000               	movlw	0
  3061  0289  00F5               	movwf	___flge@ff2+1
  3062  028A  3000               	movlw	0
  3063  028B  00F4               	movwf	___flge@ff2
  3064  028C  160A  158A  26A4  120A  118A  	fcall	___flge
  3065  0291  1803               	btfsc	3,0
  3066  0292  2A94               	goto	u5461
  3067  0293  2A95               	goto	u5460
  3068  0294                     u5461:
  3069  0294  2A9E               	goto	l3445
  3070  0295                     u5460:
  3071  0295                     l3443:
  3072                           
  3073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3074  0295  30FF               	movlw	255
  3075  0296  1683               	bsf	3,5	;RP0=1, select bank1
  3076  0297  1303               	bcf	3,6	;RP1=0, select bank1
  3077  0298  07BB               	addwf	sprintf@eexp^(0+128),f
  3078  0299  1803               	skipnc
  3079  029A  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3080  029B  30FF               	movlw	255
  3081  029C  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3082  029D  2AC1               	goto	l3449
  3083  029E                     l3445:
  3084  029E  1683               	bsf	3,5	;RP0=1, select bank1
  3085  029F  1303               	bcf	3,6	;RP1=0, select bank1
  3086  02A0  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3087  02A1  00F3               	movwf	___flge@ff1+3
  3088  02A2  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3089  02A3  00F2               	movwf	___flge@ff1+2
  3090  02A4  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3091  02A5  00F1               	movwf	___flge@ff1+1
  3092  02A6  0837               	movf	sprintf@tmpval^(0+128),w
  3093  02A7  00F0               	movwf	___flge@ff1
  3094  02A8  3041               	movlw	65
  3095  02A9  00F7               	movwf	___flge@ff2+3
  3096  02AA  3020               	movlw	32
  3097  02AB  00F6               	movwf	___flge@ff2+2
  3098  02AC  3000               	movlw	0
  3099  02AD  00F5               	movwf	___flge@ff2+1
  3100  02AE  3000               	movlw	0
  3101  02AF  00F4               	movwf	___flge@ff2
  3102  02B0  160A  158A  26A4  120A  118A  	fcall	___flge
  3103  02B5  1C03               	btfss	3,0
  3104  02B6  2AB8               	goto	u5471
  3105  02B7  2AB9               	goto	u5470
  3106  02B8                     u5471:
  3107  02B8  2AC1               	goto	l3449
  3108  02B9                     u5470:
  3109  02B9                     l3447:
  3110                           
  3111                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3112  02B9  3001               	movlw	1
  3113  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  3114  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  3115  02BC  07BB               	addwf	sprintf@eexp^(0+128),f
  3116  02BD  1803               	skipnc
  3117  02BE  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3118  02BF  3000               	movlw	0
  3119  02C0  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3120  02C1                     l3449:
  3121                           
  3122                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3123  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  3124  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  3125  02C3  0843               	movf	(sprintf@prec+1)^(0+128),w
  3126  02C4  3A80               	xorlw	128
  3127  02C5  00FF               	movwf	btemp+1
  3128  02C6  3080               	movlw	128
  3129  02C7  027F               	subwf	btemp+1,w
  3130  02C8  1D03               	skipz
  3131  02C9  2ACC               	goto	u5485
  3132  02CA  300D               	movlw	13
  3133  02CB  0242               	subwf	sprintf@prec^(0+128),w
  3134  02CC                     u5485:
  3135  02CC  1803               	skipnc
  3136  02CD  2ACF               	goto	u5481
  3137  02CE  2AD0               	goto	u5480
  3138  02CF                     u5481:
  3139  02CF  2B17               	goto	l3453
  3140  02D0                     u5480:
  3141  02D0                     l3451:
  3142                           
  3143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3144  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  3145  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  3146  02D2  0842               	movf	sprintf@prec^(0+128),w
  3147  02D3  160A  118A  236D  120A  118A  	fcall	_fround
  3148  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  3149  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  3150  02DA  0841               	movf	?_fround+3,w
  3151  02DB  00D5               	movwf	___fladd@b+3
  3152  02DC  0840               	movf	?_fround+2,w
  3153  02DD  00D4               	movwf	___fladd@b+2
  3154  02DE  083F               	movf	?_fround+1,w
  3155  02DF  00D3               	movwf	___fladd@b+1
  3156  02E0  083E               	movf	?_fround,w
  3157  02E1  00D2               	movwf	___fladd@b
  3158  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  3159  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  3160  02E4  0840               	movf	(sprintf@fval+3)^(0+128),w
  3161  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  3162  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  3163  02E7  00D9               	movwf	___fladd@a+3
  3164  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  3165  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  3166  02EA  083F               	movf	(sprintf@fval+2)^(0+128),w
  3167  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  3168  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  3169  02ED  00D8               	movwf	___fladd@a+2
  3170  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  3171  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  3172  02F0  083E               	movf	(sprintf@fval+1)^(0+128),w
  3173  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  3174  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  3175  02F3  00D7               	movwf	___fladd@a+1
  3176  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  3177  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  3178  02F6  083D               	movf	sprintf@fval^(0+128),w
  3179  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  3180  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  3181  02F9  00D6               	movwf	___fladd@a
  3182  02FA  160A  118A  2578  120A  118A  	fcall	___fladd
  3183  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  3184  0300  1303               	bcf	3,6	;RP1=0, select bank0
  3185  0301  0855               	movf	?___fladd+3,w
  3186  0302  1683               	bsf	3,5	;RP0=1, select bank1
  3187  0303  1303               	bcf	3,6	;RP1=0, select bank1
  3188  0304  00C0               	movwf	(sprintf@fval+3)^(0+128)
  3189  0305  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0306  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0307  0854               	movf	?___fladd+2,w
  3192  0308  1683               	bsf	3,5	;RP0=1, select bank1
  3193  0309  1303               	bcf	3,6	;RP1=0, select bank1
  3194  030A  00BF               	movwf	(sprintf@fval+2)^(0+128)
  3195  030B  1283               	bcf	3,5	;RP0=0, select bank0
  3196  030C  1303               	bcf	3,6	;RP1=0, select bank0
  3197  030D  0853               	movf	?___fladd+1,w
  3198  030E  1683               	bsf	3,5	;RP0=1, select bank1
  3199  030F  1303               	bcf	3,6	;RP1=0, select bank1
  3200  0310  00BE               	movwf	(sprintf@fval+1)^(0+128)
  3201  0311  1283               	bcf	3,5	;RP0=0, select bank0
  3202  0312  1303               	bcf	3,6	;RP1=0, select bank0
  3203  0313  0852               	movf	?___fladd,w
  3204  0314  1683               	bsf	3,5	;RP0=1, select bank1
  3205  0315  1303               	bcf	3,6	;RP1=0, select bank1
  3206  0316  00BD               	movwf	sprintf@fval^(0+128)
  3207  0317                     l3453:
  3208                           
  3209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3210  0317  1683               	bsf	3,5	;RP0=1, select bank1
  3211  0318  1303               	bcf	3,6	;RP1=0, select bank1
  3212  0319  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3213  031A  3A80               	xorlw	128
  3214  031B  00FF               	movwf	btemp+1
  3215  031C  3080               	movlw	128
  3216  031D  027F               	subwf	btemp+1,w
  3217  031E  1D03               	skipz
  3218  031F  2B22               	goto	u5495
  3219  0320  300A               	movlw	10
  3220  0321  023B               	subwf	sprintf@eexp^(0+128),w
  3221  0322                     u5495:
  3222  0322  1803               	skipnc
  3223  0323  2B25               	goto	u5491
  3224  0324  2B26               	goto	u5490
  3225  0325                     u5491:
  3226  0325  2B77               	goto	l3461
  3227  0326                     u5490:
  3228  0326                     l3455:
  3229  0326  1683               	bsf	3,5	;RP0=1, select bank1
  3230  0327  1303               	bcf	3,6	;RP1=0, select bank1
  3231  0328  0840               	movf	(sprintf@fval+3)^(0+128),w
  3232  0329  00F3               	movwf	___fleq@ff1+3
  3233  032A  083F               	movf	(sprintf@fval+2)^(0+128),w
  3234  032B  00F2               	movwf	___fleq@ff1+2
  3235  032C  083E               	movf	(sprintf@fval+1)^(0+128),w
  3236  032D  00F1               	movwf	___fleq@ff1+1
  3237  032E  083D               	movf	sprintf@fval^(0+128),w
  3238  032F  00F0               	movwf	___fleq@ff1
  3239  0330  3000               	movlw	0
  3240  0331  00F7               	movwf	___fleq@ff2+3
  3241  0332  3000               	movlw	0
  3242  0333  00F6               	movwf	___fleq@ff2+2
  3243  0334  3000               	movlw	0
  3244  0335  00F5               	movwf	___fleq@ff2+1
  3245  0336  3000               	movlw	0
  3246  0337  00F4               	movwf	___fleq@ff2
  3247  0338  160A  158A  2345  120A  118A  	fcall	___fleq
  3248  033D  1803               	btfsc	3,0
  3249  033E  2B40               	goto	u5501
  3250  033F  2B41               	goto	u5500
  3251  0340                     u5501:
  3252  0340  2BE9               	goto	l3475
  3253  0341                     u5500:
  3254  0341                     l3457:
  3255  0341  1683               	bsf	3,5	;RP0=1, select bank1
  3256  0342  1303               	bcf	3,6	;RP1=0, select bank1
  3257  0343  0840               	movf	(sprintf@fval+3)^(0+128),w
  3258  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3259  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3260  0346  00D4               	movwf	___fltol@f1+3
  3261  0347  1683               	bsf	3,5	;RP0=1, select bank1
  3262  0348  1303               	bcf	3,6	;RP1=0, select bank1
  3263  0349  083F               	movf	(sprintf@fval+2)^(0+128),w
  3264  034A  1283               	bcf	3,5	;RP0=0, select bank0
  3265  034B  1303               	bcf	3,6	;RP1=0, select bank0
  3266  034C  00D3               	movwf	___fltol@f1+2
  3267  034D  1683               	bsf	3,5	;RP0=1, select bank1
  3268  034E  1303               	bcf	3,6	;RP1=0, select bank1
  3269  034F  083E               	movf	(sprintf@fval+1)^(0+128),w
  3270  0350  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0351  1303               	bcf	3,6	;RP1=0, select bank0
  3272  0352  00D2               	movwf	___fltol@f1+1
  3273  0353  1683               	bsf	3,5	;RP0=1, select bank1
  3274  0354  1303               	bcf	3,6	;RP1=0, select bank1
  3275  0355  083D               	movf	sprintf@fval^(0+128),w
  3276  0356  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0357  1303               	bcf	3,6	;RP1=0, select bank0
  3278  0358  00D1               	movwf	___fltol@f1
  3279  0359  120A  158A  2006  120A  118A  	fcall	___fltol
  3280  035E  1283               	bcf	3,5	;RP0=0, select bank0
  3281  035F  1303               	bcf	3,6	;RP1=0, select bank0
  3282  0360  0854               	movf	?___fltol+3,w
  3283  0361  0453               	iorwf	?___fltol+2,w
  3284  0362  0452               	iorwf	?___fltol+1,w
  3285  0363  0451               	iorwf	?___fltol,w
  3286  0364  1D03               	skipz
  3287  0365  2B67               	goto	u5511
  3288  0366  2B68               	goto	u5510
  3289  0367                     u5511:
  3290  0367  2BE9               	goto	l3475
  3291  0368                     u5510:
  3292  0368                     l3459:
  3293  0368  1683               	bsf	3,5	;RP0=1, select bank1
  3294  0369  1303               	bcf	3,6	;RP1=0, select bank1
  3295  036A  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3296  036B  3A80               	xorlw	128
  3297  036C  00FF               	movwf	btemp+1
  3298  036D  3080               	movlw	128
  3299  036E  027F               	subwf	btemp+1,w
  3300  036F  1D03               	skipz
  3301  0370  2B73               	goto	u5525
  3302  0371  3002               	movlw	2
  3303  0372  023B               	subwf	sprintf@eexp^(0+128),w
  3304  0373                     u5525:
  3305  0373  1C03               	skipc
  3306  0374  2B76               	goto	u5521
  3307  0375  2B77               	goto	u5520
  3308  0376                     u5521:
  3309  0376  2BE9               	goto	l3475
  3310  0377                     u5520:
  3311  0377                     l3461:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3314  0377  1683               	bsf	3,5	;RP0=1, select bank1
  3315  0378  1303               	bcf	3,6	;RP1=0, select bank1
  3316  0379  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3317  037A  00F3               	movwf	___flge@ff1+3
  3318  037B  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3319  037C  00F2               	movwf	___flge@ff1+2
  3320  037D  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3321  037E  00F1               	movwf	___flge@ff1+1
  3322  037F  0837               	movf	sprintf@tmpval^(0+128),w
  3323  0380  00F0               	movwf	___flge@ff1
  3324  0381  3040               	movlw	64
  3325  0382  00F7               	movwf	___flge@ff2+3
  3326  0383  3089               	movlw	137
  3327  0384  00F6               	movwf	___flge@ff2+2
  3328  0385  3070               	movlw	112
  3329  0386  00F5               	movwf	___flge@ff2+1
  3330  0387  305F               	movlw	95
  3331  0388  00F4               	movwf	___flge@ff2
  3332  0389  160A  158A  26A4  120A  118A  	fcall	___flge
  3333  038E  1803               	btfsc	3,0
  3334  038F  2B91               	goto	u5531
  3335  0390  2B92               	goto	u5530
  3336  0391                     u5531:
  3337  0391  2B9B               	goto	l3465
  3338  0392                     u5530:
  3339  0392                     l3463:
  3340                           
  3341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3342  0392  30F7               	movlw	247
  3343  0393  1683               	bsf	3,5	;RP0=1, select bank1
  3344  0394  1303               	bcf	3,6	;RP1=0, select bank1
  3345  0395  07BB               	addwf	sprintf@eexp^(0+128),f
  3346  0396  1803               	skipnc
  3347  0397  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3348  0398  30FF               	movlw	255
  3349  0399  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3350                           
  3351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3352  039A  2BA3               	goto	l3467
  3353  039B                     l3465:
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3356  039B  30F8               	movlw	248
  3357  039C  1683               	bsf	3,5	;RP0=1, select bank1
  3358  039D  1303               	bcf	3,6	;RP1=0, select bank1
  3359  039E  07BB               	addwf	sprintf@eexp^(0+128),f
  3360  039F  1803               	skipnc
  3361  03A0  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3362  03A1  30FF               	movlw	255
  3363  03A2  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3364  03A3                     l3467:
  3365                           
  3366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3367  03A3  083B               	movf	sprintf@eexp^(0+128),w
  3368  03A4  120A  158A  2140  120A  118A  	fcall	_scale
  3369  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  3370  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  3371  03AB  0841               	movf	?_scale+3,w
  3372  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  3373  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  3374  03AE  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3375  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  3376  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  3377  03B1  0840               	movf	?_scale+2,w
  3378  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  3379  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  3380  03B4  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3381  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  3382  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  3383  03B7  083F               	movf	?_scale+1,w
  3384  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  3385  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  3386  03BA  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3387  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  3388  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  3389  03BD  083E               	movf	?_scale,w
  3390  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  3391  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  3392  03C0  00B7               	movwf	sprintf@tmpval^(0+128)
  3393  03C1                     l3469:
  3394  03C1  0840               	movf	(sprintf@fval+3)^(0+128),w
  3395  03C2  00F3               	movwf	__div_to_l_@f1+3
  3396  03C3  083F               	movf	(sprintf@fval+2)^(0+128),w
  3397  03C4  00F2               	movwf	__div_to_l_@f1+2
  3398  03C5  083E               	movf	(sprintf@fval+1)^(0+128),w
  3399  03C6  00F1               	movwf	__div_to_l_@f1+1
  3400  03C7  083D               	movf	sprintf@fval^(0+128),w
  3401  03C8  00F0               	movwf	__div_to_l_@f1
  3402  03C9  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3403  03CA  00F7               	movwf	__div_to_l_@f2+3
  3404  03CB  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3405  03CC  00F6               	movwf	__div_to_l_@f2+2
  3406  03CD  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3407  03CE  00F5               	movwf	__div_to_l_@f2+1
  3408  03CF  0837               	movf	sprintf@tmpval^(0+128),w
  3409  03D0  00F4               	movwf	__div_to_l_@f2
  3410  03D1  120A  158A  2082  120A  118A  	fcall	__div_to_l_
  3411  03D6  0873               	movf	?__div_to_l_+3,w
  3412  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  3413  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  3414  03D9  00B2               	movwf	(sprintf@val+3)^(0+128)
  3415  03DA  0872               	movf	?__div_to_l_+2,w
  3416  03DB  00B1               	movwf	(sprintf@val+2)^(0+128)
  3417  03DC  0871               	movf	?__div_to_l_+1,w
  3418  03DD  00B0               	movwf	(sprintf@val+1)^(0+128)
  3419  03DE  0870               	movf	?__div_to_l_,w
  3420  03DF  00AF               	movwf	sprintf@val^(0+128)
  3421  03E0                     l3473:
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3424  03E0  3000               	movlw	0
  3425  03E1  00C0               	movwf	(sprintf@fval+3)^(0+128)
  3426  03E2  3000               	movlw	0
  3427  03E3  00BF               	movwf	(sprintf@fval+2)^(0+128)
  3428  03E4  3000               	movlw	0
  3429  03E5  00BE               	movwf	(sprintf@fval+1)^(0+128)
  3430  03E6  3000               	movlw	0
  3431  03E7  00BD               	movwf	sprintf@fval^(0+128)
  3432                           
  3433                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3434  03E8  2C6D               	goto	l3481
  3435  03E9                     l3475:
  3436                           
  3437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3438  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  3439  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  3440  03EB  0840               	movf	(sprintf@fval+3)^(0+128),w
  3441  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  3442  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  3443  03EE  00D4               	movwf	___fltol@f1+3
  3444  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  3445  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  3446  03F1  083F               	movf	(sprintf@fval+2)^(0+128),w
  3447  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  3448  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  3449  03F4  00D3               	movwf	___fltol@f1+2
  3450  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  3451  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  3452  03F7  083E               	movf	(sprintf@fval+1)^(0+128),w
  3453  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  3454  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  3455  03FA  00D2               	movwf	___fltol@f1+1
  3456  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  3457  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  3458  03FD  083D               	movf	sprintf@fval^(0+128),w
  3459  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3460  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3461  0400  00D1               	movwf	___fltol@f1
  3462  0401  120A  158A  2006  120A  118A  	fcall	___fltol
  3463  0406  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0407  1303               	bcf	3,6	;RP1=0, select bank0
  3465  0408  0854               	movf	?___fltol+3,w
  3466  0409  1683               	bsf	3,5	;RP0=1, select bank1
  3467  040A  1303               	bcf	3,6	;RP1=0, select bank1
  3468  040B  00B2               	movwf	(sprintf@val+3)^(0+128)
  3469  040C  1283               	bcf	3,5	;RP0=0, select bank0
  3470  040D  1303               	bcf	3,6	;RP1=0, select bank0
  3471  040E  0853               	movf	?___fltol+2,w
  3472  040F  1683               	bsf	3,5	;RP0=1, select bank1
  3473  0410  1303               	bcf	3,6	;RP1=0, select bank1
  3474  0411  00B1               	movwf	(sprintf@val+2)^(0+128)
  3475  0412  1283               	bcf	3,5	;RP0=0, select bank0
  3476  0413  1303               	bcf	3,6	;RP1=0, select bank0
  3477  0414  0852               	movf	?___fltol+1,w
  3478  0415  1683               	bsf	3,5	;RP0=1, select bank1
  3479  0416  1303               	bcf	3,6	;RP1=0, select bank1
  3480  0417  00B0               	movwf	(sprintf@val+1)^(0+128)
  3481  0418  1283               	bcf	3,5	;RP0=0, select bank0
  3482  0419  1303               	bcf	3,6	;RP1=0, select bank0
  3483  041A  0851               	movf	?___fltol,w
  3484  041B  1683               	bsf	3,5	;RP0=1, select bank1
  3485  041C  1303               	bcf	3,6	;RP1=0, select bank1
  3486  041D  00AF               	movwf	sprintf@val^(0+128)
  3487  041E                     l3477:
  3488                           
  3489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3490  041E  0832               	movf	(sprintf@val+3)^(0+128),w
  3491  041F  00F3               	movwf	___xxtofl@val+3
  3492  0420  0831               	movf	(sprintf@val+2)^(0+128),w
  3493  0421  00F2               	movwf	___xxtofl@val+2
  3494  0422  0830               	movf	(sprintf@val+1)^(0+128),w
  3495  0423  00F1               	movwf	___xxtofl@val+1
  3496  0424  082F               	movf	sprintf@val^(0+128),w
  3497  0425  00F0               	movwf	___xxtofl@val
  3498  0426  3000               	movlw	0
  3499  0427  160A  158A  2746  120A  118A  	fcall	___xxtofl
  3500  042C  0873               	movf	?___xxtofl+3,w
  3501  042D  1283               	bcf	3,5	;RP0=0, select bank0
  3502  042E  1303               	bcf	3,6	;RP1=0, select bank0
  3503  042F  00E9               	movwf	___flsub@a+3
  3504  0430  0872               	movf	?___xxtofl+2,w
  3505  0431  00E8               	movwf	___flsub@a+2
  3506  0432  0871               	movf	?___xxtofl+1,w
  3507  0433  00E7               	movwf	___flsub@a+1
  3508  0434  0870               	movf	?___xxtofl,w
  3509  0435  00E6               	movwf	___flsub@a
  3510  0436  1683               	bsf	3,5	;RP0=1, select bank1
  3511  0437  1303               	bcf	3,6	;RP1=0, select bank1
  3512  0438  0840               	movf	(sprintf@fval+3)^(0+128),w
  3513  0439  1283               	bcf	3,5	;RP0=0, select bank0
  3514  043A  1303               	bcf	3,6	;RP1=0, select bank0
  3515  043B  00ED               	movwf	___flsub@b+3
  3516  043C  1683               	bsf	3,5	;RP0=1, select bank1
  3517  043D  1303               	bcf	3,6	;RP1=0, select bank1
  3518  043E  083F               	movf	(sprintf@fval+2)^(0+128),w
  3519  043F  1283               	bcf	3,5	;RP0=0, select bank0
  3520  0440  1303               	bcf	3,6	;RP1=0, select bank0
  3521  0441  00EC               	movwf	___flsub@b+2
  3522  0442  1683               	bsf	3,5	;RP0=1, select bank1
  3523  0443  1303               	bcf	3,6	;RP1=0, select bank1
  3524  0444  083E               	movf	(sprintf@fval+1)^(0+128),w
  3525  0445  1283               	bcf	3,5	;RP0=0, select bank0
  3526  0446  1303               	bcf	3,6	;RP1=0, select bank0
  3527  0447  00EB               	movwf	___flsub@b+1
  3528  0448  1683               	bsf	3,5	;RP0=1, select bank1
  3529  0449  1303               	bcf	3,6	;RP1=0, select bank1
  3530  044A  083D               	movf	sprintf@fval^(0+128),w
  3531  044B  1283               	bcf	3,5	;RP0=0, select bank0
  3532  044C  1303               	bcf	3,6	;RP1=0, select bank0
  3533  044D  00EA               	movwf	___flsub@b
  3534  044E  160A  158A  2179  120A  118A  	fcall	___flsub
  3535  0453  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0454  1303               	bcf	3,6	;RP1=0, select bank0
  3537  0455  0869               	movf	?___flsub+3,w
  3538  0456  1683               	bsf	3,5	;RP0=1, select bank1
  3539  0457  1303               	bcf	3,6	;RP1=0, select bank1
  3540  0458  00C0               	movwf	(sprintf@fval+3)^(0+128)
  3541  0459  1283               	bcf	3,5	;RP0=0, select bank0
  3542  045A  1303               	bcf	3,6	;RP1=0, select bank0
  3543  045B  0868               	movf	?___flsub+2,w
  3544  045C  1683               	bsf	3,5	;RP0=1, select bank1
  3545  045D  1303               	bcf	3,6	;RP1=0, select bank1
  3546  045E  00BF               	movwf	(sprintf@fval+2)^(0+128)
  3547  045F  1283               	bcf	3,5	;RP0=0, select bank0
  3548  0460  1303               	bcf	3,6	;RP1=0, select bank0
  3549  0461  0867               	movf	?___flsub+1,w
  3550  0462  1683               	bsf	3,5	;RP0=1, select bank1
  3551  0463  1303               	bcf	3,6	;RP1=0, select bank1
  3552  0464  00BE               	movwf	(sprintf@fval+1)^(0+128)
  3553  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3554  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3555  0467  0866               	movf	?___flsub,w
  3556  0468  1683               	bsf	3,5	;RP0=1, select bank1
  3557  0469  1303               	bcf	3,6	;RP1=0, select bank1
  3558  046A  00BD               	movwf	sprintf@fval^(0+128)
  3559  046B                     l3479:
  3560                           
  3561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3562  046B  01BB               	clrf	sprintf@eexp^(0+128)
  3563  046C  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  3564  046D                     l3481:
  3565                           
  3566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3567  046D  01C4               	clrf	sprintf@c^(0+128)
  3568  046E  0AC4               	incf	sprintf@c^(0+128),f
  3569  046F                     l3487:
  3570                           
  3571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3572  046F  0844               	movf	sprintf@c^(0+128),w
  3573  0470  00A5               	movwf	??_sprintf^(0+128)
  3574  0471  3001               	movlw	1
  3575  0472                     u5545:
  3576  0472  1003               	clrc
  3577  0473  0DA5               	rlf	??_sprintf^(0+128),f
  3578  0474  3EFF               	addlw	-1
  3579  0475  1D03               	skipz
  3580  0476  2C72               	goto	u5545
  3581  0477  1003               	clrc
  3582  0478  0D25               	rlf	??_sprintf^(0+128),w
  3583  0479  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3584  047A  0084               	movwf	4
  3585  047B  160A  158A  200A  120A  118A  	fcall	stringdir
  3586  0480  00A6               	movwf	(??_sprintf+1)^(0+128)
  3587  0481  160A  158A  200A  120A  118A  	fcall	stringdir
  3588  0486  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3589  0487  160A  158A  200A  120A  118A  	fcall	stringdir
  3590  048C  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3591  048D  160A  158A  200A  120A  118A  	fcall	stringdir
  3592  0492  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3593  0493  0829               	movf	(??_sprintf+4)^(0+128),w
  3594  0494  0232               	subwf	(sprintf@val+3)^(0+128),w
  3595  0495  1D03               	skipz
  3596  0496  2CA1               	goto	u5555
  3597  0497  0828               	movf	(??_sprintf+3)^(0+128),w
  3598  0498  0231               	subwf	(sprintf@val+2)^(0+128),w
  3599  0499  1D03               	skipz
  3600  049A  2CA1               	goto	u5555
  3601  049B  0827               	movf	(??_sprintf+2)^(0+128),w
  3602  049C  0230               	subwf	(sprintf@val+1)^(0+128),w
  3603  049D  1D03               	skipz
  3604  049E  2CA1               	goto	u5555
  3605  049F  0826               	movf	(??_sprintf+1)^(0+128),w
  3606  04A0  022F               	subwf	sprintf@val^(0+128),w
  3607  04A1                     u5555:
  3608  04A1  1803               	skipnc
  3609  04A2  2CA4               	goto	u5551
  3610  04A3  2CA5               	goto	u5550
  3611  04A4                     u5551:
  3612  04A4  2CA6               	goto	l3491
  3613  04A5                     u5550:
  3614  04A5  2CB0               	goto	l3493
  3615  04A6                     l3491:
  3616  04A6  3001               	movlw	1
  3617  04A7  00A5               	movwf	??_sprintf^(0+128)
  3618  04A8  0825               	movf	??_sprintf^(0+128),w
  3619  04A9  07C4               	addwf	sprintf@c^(0+128),f
  3620  04AA  300A               	movlw	10
  3621  04AB  0644               	xorwf	sprintf@c^(0+128),w
  3622  04AC  1D03               	btfss	3,2
  3623  04AD  2CAF               	goto	u5561
  3624  04AE  2CB0               	goto	u5560
  3625  04AF                     u5561:
  3626  04AF  2C6F               	goto	l3487
  3627  04B0                     u5560:
  3628  04B0                     l3493:
  3629                           
  3630                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  3631  04B0  0844               	movf	sprintf@c^(0+128),w
  3632  04B1  0742               	addwf	sprintf@prec^(0+128),w
  3633  04B2  00A5               	movwf	??_sprintf^(0+128)
  3634  04B3  0843               	movf	(sprintf@prec+1)^(0+128),w
  3635  04B4  1803               	skipnc
  3636  04B5  0A43               	incf	(sprintf@prec+1)^(0+128),w
  3637  04B6  00A6               	movwf	(??_sprintf^(0+128)+1)
  3638  04B7  083B               	movf	sprintf@eexp^(0+128),w
  3639  04B8  0725               	addwf	??_sprintf^(0+128),w
  3640  04B9  00A7               	movwf	(??_sprintf+2)^(0+128)
  3641  04BA  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3642  04BB  1803               	skipnc
  3643  04BC  0A3C               	incf	(sprintf@eexp+1)^(0+128),w
  3644  04BD  0726               	addwf	(??_sprintf+1)^(0+128),w
  3645  04BE  00A8               	movwf	(??_sprintf+3)^(0+128)
  3646  04BF  0827               	movf	(??_sprintf+2)^(0+128),w
  3647  04C0  02B5               	subwf	sprintf@width^(0+128),f
  3648  04C1  0828               	movf	(??_sprintf+3)^(0+128),w
  3649  04C2  1C03               	skipc
  3650  04C3  03B6               	decf	(sprintf@width+1)^(0+128),f
  3651  04C4  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3652                           
  3653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  3654  04C5  0842               	movf	sprintf@prec^(0+128),w
  3655  04C6  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3656  04C7  1903               	btfsc	3,2
  3657  04C8  2CCA               	goto	u5571
  3658  04C9  2CCB               	goto	u5570
  3659  04CA                     u5571:
  3660  04CA  2CD1               	goto	l3497
  3661  04CB                     u5570:
  3662  04CB                     l3495:
  3663                           
  3664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  3665  04CB  30FF               	movlw	255
  3666  04CC  07B5               	addwf	sprintf@width^(0+128),f
  3667  04CD  1803               	skipnc
  3668  04CE  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3669  04CF  30FF               	movlw	255
  3670  04D0  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3671  04D1                     l3497:
  3672                           
  3673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  3674  04D1  3003               	movlw	3
  3675  04D2  0533               	andwf	sprintf@flag^(0+128),w
  3676  04D3  00A5               	movwf	??_sprintf^(0+128)
  3677  04D4  3000               	movlw	0
  3678  04D5  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3679  04D6  00A6               	movwf	(??_sprintf+1)^(0+128)
  3680  04D7  0825               	movf	??_sprintf^(0+128),w
  3681  04D8  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3682  04D9  1903               	btfsc	3,2
  3683  04DA  2CDC               	goto	u5581
  3684  04DB  2CDD               	goto	u5580
  3685  04DC                     u5581:
  3686  04DC  2CF2               	goto	l3507
  3687  04DD                     u5580:
  3688  04DD                     l3499:
  3689                           
  3690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  3691  04DD  30FF               	movlw	255
  3692  04DE  07B5               	addwf	sprintf@width^(0+128),f
  3693  04DF  1803               	skipnc
  3694  04E0  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3695  04E1  30FF               	movlw	255
  3696  04E2  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3697  04E3  2CF2               	goto	l3507
  3698  04E4                     l3501:
  3699                           
  3700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  3701  04E4  3020               	movlw	32
  3702  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  3703  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  3704  04E7  00A5               	movwf	??_sprintf^(0+128)
  3705  04E8  0841               	movf	sprintf@sp^(0+128),w
  3706  04E9  0084               	movwf	4
  3707  04EA  0825               	movf	??_sprintf^(0+128),w
  3708  04EB  1383               	bcf	3,7	;select IRP bank0
  3709  04EC  0080               	movwf	0
  3710  04ED                     l3503:
  3711  04ED  3001               	movlw	1
  3712  04EE  00A5               	movwf	??_sprintf^(0+128)
  3713  04EF  0825               	movf	??_sprintf^(0+128),w
  3714  04F0  07C1               	addwf	sprintf@sp^(0+128),f
  3715  04F1  2CDD               	goto	l3499
  3716  04F2                     l3507:
  3717                           
  3718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  3719  04F2  0836               	movf	(sprintf@width+1)^(0+128),w
  3720  04F3  3A80               	xorlw	128
  3721  04F4  00FF               	movwf	btemp+1
  3722  04F5  3080               	movlw	128
  3723  04F6  027F               	subwf	btemp+1,w
  3724  04F7  1D03               	skipz
  3725  04F8  2CFB               	goto	u5595
  3726  04F9  3001               	movlw	1
  3727  04FA  0235               	subwf	sprintf@width^(0+128),w
  3728  04FB                     u5595:
  3729  04FB  1803               	skipnc
  3730  04FC  2CFE               	goto	u5591
  3731  04FD  2CFF               	goto	u5590
  3732  04FE                     u5591:
  3733  04FE  2CE4               	goto	l3501
  3734  04FF                     u5590:
  3735  04FF                     l3509:
  3736                           
  3737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  3738  04FF  3003               	movlw	3
  3739  0500  1683               	bsf	3,5	;RP0=1, select bank1
  3740  0501  1303               	bcf	3,6	;RP1=0, select bank1
  3741  0502  0533               	andwf	sprintf@flag^(0+128),w
  3742  0503  00A5               	movwf	??_sprintf^(0+128)
  3743  0504  3000               	movlw	0
  3744  0505  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3745  0506  00A6               	movwf	(??_sprintf+1)^(0+128)
  3746  0507  0825               	movf	??_sprintf^(0+128),w
  3747  0508  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3748  0509  1903               	btfsc	3,2
  3749  050A  2D0C               	goto	u5601
  3750  050B  2D0D               	goto	u5600
  3751  050C                     u5601:
  3752  050C  2D7F               	goto	l362
  3753  050D                     u5600:
  3754  050D                     l3511:
  3755                           
  3756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3757  050D  302D               	movlw	45
  3758  050E  00A5               	movwf	??_sprintf^(0+128)
  3759  050F  0841               	movf	sprintf@sp^(0+128),w
  3760  0510  0084               	movwf	4
  3761  0511  0825               	movf	??_sprintf^(0+128),w
  3762  0512  1383               	bcf	3,7	;select IRP bank0
  3763  0513  0080               	movwf	0
  3764  0514                     l3513:
  3765  0514  3001               	movlw	1
  3766  0515  00A5               	movwf	??_sprintf^(0+128)
  3767  0516  0825               	movf	??_sprintf^(0+128),w
  3768  0517  07C1               	addwf	sprintf@sp^(0+128),f
  3769  0518  2D7F               	goto	l362
  3770  0519                     l3515:
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3773  0519  0844               	movf	sprintf@c^(0+128),w
  3774  051A  00A5               	movwf	??_sprintf^(0+128)
  3775  051B  3001               	movlw	1
  3776  051C                     u5615:
  3777  051C  1003               	clrc
  3778  051D  0DA5               	rlf	??_sprintf^(0+128),f
  3779  051E  3EFF               	addlw	-1
  3780  051F  1D03               	skipz
  3781  0520  2D1C               	goto	u5615
  3782  0521  1003               	clrc
  3783  0522  0D25               	rlf	??_sprintf^(0+128),w
  3784  0523  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3785  0524  0084               	movwf	4
  3786  0525  160A  158A  200A  120A  118A  	fcall	stringdir
  3787  052A  00F0               	movwf	___lldiv@divisor
  3788  052B  160A  158A  200A  120A  118A  	fcall	stringdir
  3789  0530  00F1               	movwf	___lldiv@divisor+1
  3790  0531  160A  158A  200A  120A  118A  	fcall	stringdir
  3791  0536  00F2               	movwf	___lldiv@divisor+2
  3792  0537  160A  158A  200A  120A  118A  	fcall	stringdir
  3793  053C  00F3               	movwf	___lldiv@divisor+3
  3794  053D  0832               	movf	(sprintf@val+3)^(0+128),w
  3795  053E  00F7               	movwf	___lldiv@dividend+3
  3796  053F  0831               	movf	(sprintf@val+2)^(0+128),w
  3797  0540  00F6               	movwf	___lldiv@dividend+2
  3798  0541  0830               	movf	(sprintf@val+1)^(0+128),w
  3799  0542  00F5               	movwf	___lldiv@dividend+1
  3800  0543  082F               	movf	sprintf@val^(0+128),w
  3801  0544  00F4               	movwf	___lldiv@dividend
  3802  0545  160A  158A  2558  120A  118A  	fcall	___lldiv
  3803  054A  0873               	movf	?___lldiv+3,w
  3804  054B  1683               	bsf	3,5	;RP0=1, select bank1
  3805  054C  1303               	bcf	3,6	;RP1=0, select bank1
  3806  054D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3807  054E  0872               	movf	?___lldiv+2,w
  3808  054F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3809  0550  0871               	movf	?___lldiv+1,w
  3810  0551  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3811  0552  0870               	movf	?___lldiv,w
  3812  0553  00B7               	movwf	sprintf@tmpval^(0+128)
  3813  0554                     l3517:
  3814                           
  3815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3816  0554  3000               	movlw	0
  3817  0555  00F3               	movwf	___llmod@divisor+3
  3818  0556  3000               	movlw	0
  3819  0557  00F2               	movwf	___llmod@divisor+2
  3820  0558  3000               	movlw	0
  3821  0559  00F1               	movwf	___llmod@divisor+1
  3822  055A  300A               	movlw	10
  3823  055B  00F0               	movwf	___llmod@divisor
  3824  055C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3825  055D  00F7               	movwf	___llmod@dividend+3
  3826  055E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3827  055F  00F6               	movwf	___llmod@dividend+2
  3828  0560  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3829  0561  00F5               	movwf	___llmod@dividend+1
  3830  0562  0837               	movf	sprintf@tmpval^(0+128),w
  3831  0563  00F4               	movwf	___llmod@dividend
  3832  0564  160A  158A  2393  120A  118A  	fcall	___llmod
  3833  0569  0873               	movf	?___llmod+3,w
  3834  056A  1683               	bsf	3,5	;RP0=1, select bank1
  3835  056B  1303               	bcf	3,6	;RP1=0, select bank1
  3836  056C  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3837  056D  0872               	movf	?___llmod+2,w
  3838  056E  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3839  056F  0871               	movf	?___llmod+1,w
  3840  0570  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3841  0571  0870               	movf	?___llmod,w
  3842  0572  00B7               	movwf	sprintf@tmpval^(0+128)
  3843  0573                     l3519:
  3844                           
  3845                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3846  0573  0837               	movf	sprintf@tmpval^(0+128),w
  3847  0574  3E30               	addlw	48
  3848  0575  00A5               	movwf	??_sprintf^(0+128)
  3849  0576  0841               	movf	sprintf@sp^(0+128),w
  3850  0577  0084               	movwf	4
  3851  0578  0825               	movf	??_sprintf^(0+128),w
  3852  0579  1383               	bcf	3,7	;select IRP bank0
  3853  057A  0080               	movwf	0
  3854  057B  3001               	movlw	1
  3855  057C  00A5               	movwf	??_sprintf^(0+128)
  3856  057D  0825               	movf	??_sprintf^(0+128),w
  3857  057E  07C1               	addwf	sprintf@sp^(0+128),f
  3858  057F                     l362:	
  3859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3860                           
  3861                           
  3862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3863  057F  3001               	movlw	1
  3864  0580  02C4               	subwf	sprintf@c^(0+128),f
  3865  0581  0A44               	incf	sprintf@c^(0+128),w
  3866  0582  1D03               	btfss	3,2
  3867  0583  2D85               	goto	u5621
  3868  0584  2D86               	goto	u5620
  3869  0585                     u5621:
  3870  0585  2D19               	goto	l3515
  3871  0586                     u5620:
  3872  0586  2D9A               	goto	l3527
  3873  0587                     l3521:
  3874                           
  3875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3876  0587  3030               	movlw	48
  3877  0588  1683               	bsf	3,5	;RP0=1, select bank1
  3878  0589  1303               	bcf	3,6	;RP1=0, select bank1
  3879  058A  00A5               	movwf	??_sprintf^(0+128)
  3880  058B  0841               	movf	sprintf@sp^(0+128),w
  3881  058C  0084               	movwf	4
  3882  058D  0825               	movf	??_sprintf^(0+128),w
  3883  058E  1383               	bcf	3,7	;select IRP bank0
  3884  058F  0080               	movwf	0
  3885  0590                     l3523:
  3886  0590  3001               	movlw	1
  3887  0591  00A5               	movwf	??_sprintf^(0+128)
  3888  0592  0825               	movf	??_sprintf^(0+128),w
  3889  0593  07C1               	addwf	sprintf@sp^(0+128),f
  3890  0594                     l3525:
  3891                           
  3892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3893  0594  30FF               	movlw	255
  3894  0595  07BB               	addwf	sprintf@eexp^(0+128),f
  3895  0596  1803               	skipnc
  3896  0597  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3897  0598  30FF               	movlw	255
  3898  0599  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3899  059A                     l3527:
  3900                           
  3901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3902  059A  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3903  059B  3A80               	xorlw	128
  3904  059C  00FF               	movwf	btemp+1
  3905  059D  3080               	movlw	128
  3906  059E  027F               	subwf	btemp+1,w
  3907  059F  1D03               	skipz
  3908  05A0  2DA3               	goto	u5635
  3909  05A1  3001               	movlw	1
  3910  05A2  023B               	subwf	sprintf@eexp^(0+128),w
  3911  05A3                     u5635:
  3912  05A3  1803               	skipnc
  3913  05A4  2DA6               	goto	u5631
  3914  05A5  2DA7               	goto	u5630
  3915  05A6                     u5631:
  3916  05A6  2D87               	goto	l3521
  3917  05A7                     u5630:
  3918  05A7                     l3529:
  3919                           
  3920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3921  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  3922  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  3923  05A9  0843               	movf	(sprintf@prec+1)^(0+128),w
  3924  05AA  3A80               	xorlw	128
  3925  05AB  00FF               	movwf	btemp+1
  3926  05AC  3080               	movlw	128
  3927  05AD  027F               	subwf	btemp+1,w
  3928  05AE  1D03               	skipz
  3929  05AF  2DB2               	goto	u5645
  3930  05B0  3009               	movlw	9
  3931  05B1  0242               	subwf	sprintf@prec^(0+128),w
  3932  05B2                     u5645:
  3933  05B2  1C03               	skipc
  3934  05B3  2DB5               	goto	u5641
  3935  05B4  2DB6               	goto	u5640
  3936  05B5                     u5641:
  3937  05B5  2DBD               	goto	l3533
  3938  05B6                     u5640:
  3939  05B6                     l3531:
  3940                           
  3941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3942  05B6  3008               	movlw	8
  3943  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  3944  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  3945  05B9  00A5               	movwf	??_sprintf^(0+128)
  3946  05BA  0825               	movf	??_sprintf^(0+128),w
  3947  05BB  00C4               	movwf	sprintf@c^(0+128)
  3948  05BC  2DC3               	goto	l369
  3949  05BD                     l3533:
  3950                           
  3951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3952  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  3953  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  3954  05BF  0842               	movf	sprintf@prec^(0+128),w
  3955  05C0  00A5               	movwf	??_sprintf^(0+128)
  3956  05C1  0825               	movf	??_sprintf^(0+128),w
  3957  05C2  00C4               	movwf	sprintf@c^(0+128)
  3958  05C3                     l369:
  3959                           
  3960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3961  05C3  0844               	movf	sprintf@c^(0+128),w
  3962  05C4  00A5               	movwf	??_sprintf^(0+128)
  3963  05C5  01A6               	clrf	(??_sprintf^(0+128)+1)
  3964  05C6  0825               	movf	??_sprintf^(0+128),w
  3965  05C7  02C2               	subwf	sprintf@prec^(0+128),f
  3966  05C8  0826               	movf	(??_sprintf+1)^(0+128),w
  3967  05C9  1C03               	skipc
  3968  05CA  03C3               	decf	(sprintf@prec+1)^(0+128),f
  3969  05CB  02C3               	subwf	(sprintf@prec+1)^(0+128),f
  3970  05CC                     l3535:
  3971                           
  3972                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3973  05CC  0844               	movf	sprintf@c^(0+128),w
  3974  05CD  1903               	btfsc	3,2
  3975  05CE  2DD0               	goto	u5651
  3976  05CF  2DD1               	goto	u5650
  3977  05D0                     u5651:
  3978  05D0  2DDC               	goto	l3541
  3979  05D1                     u5650:
  3980  05D1                     l3537:
  3981                           
  3982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3983  05D1  302E               	movlw	46
  3984  05D2  00A5               	movwf	??_sprintf^(0+128)
  3985  05D3  0841               	movf	sprintf@sp^(0+128),w
  3986  05D4  0084               	movwf	4
  3987  05D5  0825               	movf	??_sprintf^(0+128),w
  3988  05D6  1383               	bcf	3,7	;select IRP bank0
  3989  05D7  0080               	movwf	0
  3990  05D8                     l3539:
  3991  05D8  3001               	movlw	1
  3992  05D9  00A5               	movwf	??_sprintf^(0+128)
  3993  05DA  0825               	movf	??_sprintf^(0+128),w
  3994  05DB  07C1               	addwf	sprintf@sp^(0+128),f
  3995  05DC                     l3541:
  3996                           
  3997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3998  05DC  0844               	movf	sprintf@c^(0+128),w
  3999  05DD  120A  158A  2140  120A  118A  	fcall	_scale
  4000  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  4001  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  4002  05E4  0841               	movf	?_scale+3,w
  4003  05E5  1683               	bsf	3,5	;RP0=1, select bank1
  4004  05E6  1303               	bcf	3,6	;RP1=0, select bank1
  4005  05E7  00AD               	movwf	(_sprintf$1003+3)^(0+128)
  4006  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  4007  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  4008  05EA  0840               	movf	?_scale+2,w
  4009  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  4010  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  4011  05ED  00AC               	movwf	(_sprintf$1003+2)^(0+128)
  4012  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  4013  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  4014  05F0  083F               	movf	?_scale+1,w
  4015  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  4016  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  4017  05F3  00AB               	movwf	(_sprintf$1003+1)^(0+128)
  4018  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  4019  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  4020  05F6  083E               	movf	?_scale,w
  4021  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  4022  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  4023  05F9  00AA               	movwf	_sprintf$1003^(0+128)
  4024  05FA                     l3543:
  4025                           
  4026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  4027  05FA  082D               	movf	(_sprintf$1003+3)^(0+128),w
  4028  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  4029  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  4030  05FD  00AB               	movwf	___flmul@a+3
  4031  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  4032  05FF  1303               	bcf	3,6	;RP1=0, select bank1
  4033  0600  082C               	movf	(_sprintf$1003+2)^(0+128),w
  4034  0601  1283               	bcf	3,5	;RP0=0, select bank0
  4035  0602  1303               	bcf	3,6	;RP1=0, select bank0
  4036  0603  00AA               	movwf	___flmul@a+2
  4037  0604  1683               	bsf	3,5	;RP0=1, select bank1
  4038  0605  1303               	bcf	3,6	;RP1=0, select bank1
  4039  0606  082B               	movf	(_sprintf$1003+1)^(0+128),w
  4040  0607  1283               	bcf	3,5	;RP0=0, select bank0
  4041  0608  1303               	bcf	3,6	;RP1=0, select bank0
  4042  0609  00A9               	movwf	___flmul@a+1
  4043  060A  1683               	bsf	3,5	;RP0=1, select bank1
  4044  060B  1303               	bcf	3,6	;RP1=0, select bank1
  4045  060C  082A               	movf	_sprintf$1003^(0+128),w
  4046  060D  1283               	bcf	3,5	;RP0=0, select bank0
  4047  060E  1303               	bcf	3,6	;RP1=0, select bank0
  4048  060F  00A8               	movwf	___flmul@a
  4049  0610  1683               	bsf	3,5	;RP0=1, select bank1
  4050  0611  1303               	bcf	3,6	;RP1=0, select bank1
  4051  0612  0840               	movf	(sprintf@fval+3)^(0+128),w
  4052  0613  1283               	bcf	3,5	;RP0=0, select bank0
  4053  0614  1303               	bcf	3,6	;RP1=0, select bank0
  4054  0615  00A7               	movwf	___flmul@b+3
  4055  0616  1683               	bsf	3,5	;RP0=1, select bank1
  4056  0617  1303               	bcf	3,6	;RP1=0, select bank1
  4057  0618  083F               	movf	(sprintf@fval+2)^(0+128),w
  4058  0619  1283               	bcf	3,5	;RP0=0, select bank0
  4059  061A  1303               	bcf	3,6	;RP1=0, select bank0
  4060  061B  00A6               	movwf	___flmul@b+2
  4061  061C  1683               	bsf	3,5	;RP0=1, select bank1
  4062  061D  1303               	bcf	3,6	;RP1=0, select bank1
  4063  061E  083E               	movf	(sprintf@fval+1)^(0+128),w
  4064  061F  1283               	bcf	3,5	;RP0=0, select bank0
  4065  0620  1303               	bcf	3,6	;RP1=0, select bank0
  4066  0621  00A5               	movwf	___flmul@b+1
  4067  0622  1683               	bsf	3,5	;RP0=1, select bank1
  4068  0623  1303               	bcf	3,6	;RP1=0, select bank1
  4069  0624  083D               	movf	sprintf@fval^(0+128),w
  4070  0625  1283               	bcf	3,5	;RP0=0, select bank0
  4071  0626  1303               	bcf	3,6	;RP1=0, select bank0
  4072  0627  00A4               	movwf	___flmul@b
  4073  0628  120A  158A  249F  120A  118A  	fcall	___flmul
  4074  062D  1283               	bcf	3,5	;RP0=0, select bank0
  4075  062E  1303               	bcf	3,6	;RP1=0, select bank0
  4076  062F  0827               	movf	?___flmul+3,w
  4077  0630  00D4               	movwf	___fltol@f1+3
  4078  0631  0826               	movf	?___flmul+2,w
  4079  0632  00D3               	movwf	___fltol@f1+2
  4080  0633  0825               	movf	?___flmul+1,w
  4081  0634  00D2               	movwf	___fltol@f1+1
  4082  0635  0824               	movf	?___flmul,w
  4083  0636  00D1               	movwf	___fltol@f1
  4084  0637  120A  158A  2006  120A  118A  	fcall	___fltol
  4085  063C  1283               	bcf	3,5	;RP0=0, select bank0
  4086  063D  1303               	bcf	3,6	;RP1=0, select bank0
  4087  063E  0854               	movf	?___fltol+3,w
  4088  063F  1683               	bsf	3,5	;RP0=1, select bank1
  4089  0640  1303               	bcf	3,6	;RP1=0, select bank1
  4090  0641  00B2               	movwf	(sprintf@val+3)^(0+128)
  4091  0642  1283               	bcf	3,5	;RP0=0, select bank0
  4092  0643  1303               	bcf	3,6	;RP1=0, select bank0
  4093  0644  0853               	movf	?___fltol+2,w
  4094  0645  1683               	bsf	3,5	;RP0=1, select bank1
  4095  0646  1303               	bcf	3,6	;RP1=0, select bank1
  4096  0647  00B1               	movwf	(sprintf@val+2)^(0+128)
  4097  0648  1283               	bcf	3,5	;RP0=0, select bank0
  4098  0649  1303               	bcf	3,6	;RP1=0, select bank0
  4099  064A  0852               	movf	?___fltol+1,w
  4100  064B  1683               	bsf	3,5	;RP0=1, select bank1
  4101  064C  1303               	bcf	3,6	;RP1=0, select bank1
  4102  064D  00B0               	movwf	(sprintf@val+1)^(0+128)
  4103  064E  1283               	bcf	3,5	;RP0=0, select bank0
  4104  064F  1303               	bcf	3,6	;RP1=0, select bank0
  4105  0650  0851               	movf	?___fltol,w
  4106  0651  1683               	bsf	3,5	;RP0=1, select bank1
  4107  0652  1303               	bcf	3,6	;RP1=0, select bank1
  4108  0653  00AF               	movwf	sprintf@val^(0+128)
  4109                           
  4110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4111  0654  2EF6               	goto	l3553
  4112  0655                     l3545:
  4113                           
  4114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  4115  0655  0844               	movf	sprintf@c^(0+128),w
  4116  0656  00A5               	movwf	??_sprintf^(0+128)
  4117  0657  3001               	movlw	1
  4118  0658                     u5665:
  4119  0658  1003               	clrc
  4120  0659  0DA5               	rlf	??_sprintf^(0+128),f
  4121  065A  3EFF               	addlw	-1
  4122  065B  1D03               	skipz
  4123  065C  2E58               	goto	u5665
  4124  065D  1003               	clrc
  4125  065E  0D25               	rlf	??_sprintf^(0+128),w
  4126  065F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4127  0660  0084               	movwf	4
  4128  0661  160A  158A  200A  120A  118A  	fcall	stringdir
  4129  0666  00F0               	movwf	___lldiv@divisor
  4130  0667  160A  158A  200A  120A  118A  	fcall	stringdir
  4131  066C  00F1               	movwf	___lldiv@divisor+1
  4132  066D  160A  158A  200A  120A  118A  	fcall	stringdir
  4133  0672  00F2               	movwf	___lldiv@divisor+2
  4134  0673  160A  158A  200A  120A  118A  	fcall	stringdir
  4135  0678  00F3               	movwf	___lldiv@divisor+3
  4136  0679  0832               	movf	(sprintf@val+3)^(0+128),w
  4137  067A  00F7               	movwf	___lldiv@dividend+3
  4138  067B  0831               	movf	(sprintf@val+2)^(0+128),w
  4139  067C  00F6               	movwf	___lldiv@dividend+2
  4140  067D  0830               	movf	(sprintf@val+1)^(0+128),w
  4141  067E  00F5               	movwf	___lldiv@dividend+1
  4142  067F  082F               	movf	sprintf@val^(0+128),w
  4143  0680  00F4               	movwf	___lldiv@dividend
  4144  0681  160A  158A  2558  120A  118A  	fcall	___lldiv
  4145  0686  0873               	movf	?___lldiv+3,w
  4146  0687  1683               	bsf	3,5	;RP0=1, select bank1
  4147  0688  1303               	bcf	3,6	;RP1=0, select bank1
  4148  0689  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4149  068A  0872               	movf	?___lldiv+2,w
  4150  068B  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4151  068C  0871               	movf	?___lldiv+1,w
  4152  068D  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4153  068E  0870               	movf	?___lldiv,w
  4154  068F  00B7               	movwf	sprintf@tmpval^(0+128)
  4155  0690                     l3547:
  4156                           
  4157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  4158  0690  3000               	movlw	0
  4159  0691  00F3               	movwf	___llmod@divisor+3
  4160  0692  3000               	movlw	0
  4161  0693  00F2               	movwf	___llmod@divisor+2
  4162  0694  3000               	movlw	0
  4163  0695  00F1               	movwf	___llmod@divisor+1
  4164  0696  300A               	movlw	10
  4165  0697  00F0               	movwf	___llmod@divisor
  4166  0698  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  4167  0699  00F7               	movwf	___llmod@dividend+3
  4168  069A  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  4169  069B  00F6               	movwf	___llmod@dividend+2
  4170  069C  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  4171  069D  00F5               	movwf	___llmod@dividend+1
  4172  069E  0837               	movf	sprintf@tmpval^(0+128),w
  4173  069F  00F4               	movwf	___llmod@dividend
  4174  06A0  160A  158A  2393  120A  118A  	fcall	___llmod
  4175  06A5  0873               	movf	?___llmod+3,w
  4176  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  4177  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  4178  06A8  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4179  06A9  0872               	movf	?___llmod+2,w
  4180  06AA  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4181  06AB  0871               	movf	?___llmod+1,w
  4182  06AC  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4183  06AD  0870               	movf	?___llmod,w
  4184  06AE  00B7               	movwf	sprintf@tmpval^(0+128)
  4185  06AF                     l3549:
  4186                           
  4187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  4188  06AF  0837               	movf	sprintf@tmpval^(0+128),w
  4189  06B0  3E30               	addlw	48
  4190  06B1  00A5               	movwf	??_sprintf^(0+128)
  4191  06B2  0841               	movf	sprintf@sp^(0+128),w
  4192  06B3  0084               	movwf	4
  4193  06B4  0825               	movf	??_sprintf^(0+128),w
  4194  06B5  1383               	bcf	3,7	;select IRP bank0
  4195  06B6  0080               	movwf	0
  4196  06B7  3001               	movlw	1
  4197  06B8  00A5               	movwf	??_sprintf^(0+128)
  4198  06B9  0825               	movf	??_sprintf^(0+128),w
  4199  06BA  07C1               	addwf	sprintf@sp^(0+128),f
  4200  06BB                     l3551:
  4201                           
  4202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  4203  06BB  0844               	movf	sprintf@c^(0+128),w
  4204  06BC  00A5               	movwf	??_sprintf^(0+128)
  4205  06BD  3001               	movlw	1
  4206  06BE                     u5675:
  4207  06BE  1003               	clrc
  4208  06BF  0DA5               	rlf	??_sprintf^(0+128),f
  4209  06C0  3EFF               	addlw	-1
  4210  06C1  1D03               	skipz
  4211  06C2  2EBE               	goto	u5675
  4212  06C3  1003               	clrc
  4213  06C4  0D25               	rlf	??_sprintf^(0+128),w
  4214  06C5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4215  06C6  0084               	movwf	4
  4216  06C7  160A  158A  200A  120A  118A  	fcall	stringdir
  4217  06CC  00F0               	movwf	___llmod@divisor
  4218  06CD  160A  158A  200A  120A  118A  	fcall	stringdir
  4219  06D2  00F1               	movwf	___llmod@divisor+1
  4220  06D3  160A  158A  200A  120A  118A  	fcall	stringdir
  4221  06D8  00F2               	movwf	___llmod@divisor+2
  4222  06D9  160A  158A  200A  120A  118A  	fcall	stringdir
  4223  06DE  00F3               	movwf	___llmod@divisor+3
  4224  06DF  0832               	movf	(sprintf@val+3)^(0+128),w
  4225  06E0  00F7               	movwf	___llmod@dividend+3
  4226  06E1  0831               	movf	(sprintf@val+2)^(0+128),w
  4227  06E2  00F6               	movwf	___llmod@dividend+2
  4228  06E3  0830               	movf	(sprintf@val+1)^(0+128),w
  4229  06E4  00F5               	movwf	___llmod@dividend+1
  4230  06E5  082F               	movf	sprintf@val^(0+128),w
  4231  06E6  00F4               	movwf	___llmod@dividend
  4232  06E7  160A  158A  2393  120A  118A  	fcall	___llmod
  4233  06EC  0873               	movf	?___llmod+3,w
  4234  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  4235  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  4236  06EF  00B2               	movwf	(sprintf@val+3)^(0+128)
  4237  06F0  0872               	movf	?___llmod+2,w
  4238  06F1  00B1               	movwf	(sprintf@val+2)^(0+128)
  4239  06F2  0871               	movf	?___llmod+1,w
  4240  06F3  00B0               	movwf	(sprintf@val+1)^(0+128)
  4241  06F4  0870               	movf	?___llmod,w
  4242  06F5  00AF               	movwf	sprintf@val^(0+128)
  4243  06F6                     l3553:
  4244                           
  4245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4246  06F6  3001               	movlw	1
  4247  06F7  02C4               	subwf	sprintf@c^(0+128),f
  4248  06F8  0A44               	incf	sprintf@c^(0+128),w
  4249  06F9  1D03               	btfss	3,2
  4250  06FA  2EFC               	goto	u5681
  4251  06FB  2EFD               	goto	u5680
  4252  06FC                     u5681:
  4253  06FC  2E55               	goto	l3545
  4254  06FD                     u5680:
  4255  06FD  2F0F               	goto	l3561
  4256  06FE                     l3555:
  4257                           
  4258                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  4259  06FE  3030               	movlw	48
  4260  06FF  00A5               	movwf	??_sprintf^(0+128)
  4261  0700  0841               	movf	sprintf@sp^(0+128),w
  4262  0701  0084               	movwf	4
  4263  0702  0825               	movf	??_sprintf^(0+128),w
  4264  0703  1383               	bcf	3,7	;select IRP bank0
  4265  0704  0080               	movwf	0
  4266  0705                     l3557:
  4267  0705  3001               	movlw	1
  4268  0706  00A5               	movwf	??_sprintf^(0+128)
  4269  0707  0825               	movf	??_sprintf^(0+128),w
  4270  0708  07C1               	addwf	sprintf@sp^(0+128),f
  4271  0709                     l3559:
  4272                           
  4273                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  4274  0709  30FF               	movlw	255
  4275  070A  07C2               	addwf	sprintf@prec^(0+128),f
  4276  070B  1803               	skipnc
  4277  070C  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  4278  070D  30FF               	movlw	255
  4279  070E  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  4280  070F                     l3561:
  4281                           
  4282                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  4283  070F  0842               	movf	sprintf@prec^(0+128),w
  4284  0710  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  4285  0711  1D03               	btfss	3,2
  4286  0712  2F14               	goto	u5691
  4287  0713  2F15               	goto	u5690
  4288  0714                     u5691:
  4289  0714  2EFE               	goto	l3555
  4290  0715                     u5690:
  4291  0715  2FD9               	goto	l3609
  4292  0716                     l3563:
  4293                           
  4294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  4295  0716  0842               	movf	sprintf@prec^(0+128),w
  4296  0717  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  4297  0718  1D03               	btfss	3,2
  4298  0719  2F1B               	goto	u5701
  4299  071A  2F1C               	goto	u5700
  4300  071B                     u5701:
  4301  071B  2F2A               	goto	l377
  4302  071C                     u5700:
  4303  071C                     l3565:
  4304  071C  0832               	movf	(sprintf@val+3)^(0+128),w
  4305  071D  0431               	iorwf	(sprintf@val+2)^(0+128),w
  4306  071E  0430               	iorwf	(sprintf@val+1)^(0+128),w
  4307  071F  042F               	iorwf	sprintf@val^(0+128),w
  4308  0720  1D03               	skipz
  4309  0721  2F23               	goto	u5711
  4310  0722  2F24               	goto	u5710
  4311  0723                     u5711:
  4312  0723  2F2A               	goto	l377
  4313  0724                     u5710:
  4314  0724                     l3567:
  4315                           
  4316                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4317  0724  3001               	movlw	1
  4318  0725  07C2               	addwf	sprintf@prec^(0+128),f
  4319  0726  1803               	skipnc
  4320  0727  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  4321  0728  3000               	movlw	0
  4322  0729  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  4323  072A                     l377:
  4324                           
  4325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4326  072A  0843               	movf	(sprintf@prec+1)^(0+128),w
  4327  072B  3A80               	xorlw	128
  4328  072C  3C80               	sublw	128
  4329  072D  1D03               	skipz
  4330  072E  2F31               	goto	u5725
  4331  072F  0842               	movf	sprintf@prec^(0+128),w
  4332  0730  0244               	subwf	sprintf@c^(0+128),w
  4333  0731                     u5725:
  4334  0731  1803               	skipnc
  4335  0732  2F34               	goto	u5721
  4336  0733  2F35               	goto	u5720
  4337  0734                     u5721:
  4338  0734  2F3C               	goto	l3571
  4339  0735                     u5720:
  4340  0735                     l3569:
  4341                           
  4342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  4343  0735  1683               	bsf	3,5	;RP0=1, select bank1
  4344  0736  1303               	bcf	3,6	;RP1=0, select bank1
  4345  0737  0842               	movf	sprintf@prec^(0+128),w
  4346  0738  00A5               	movwf	??_sprintf^(0+128)
  4347  0739  0825               	movf	??_sprintf^(0+128),w
  4348  073A  00C4               	movwf	sprintf@c^(0+128)
  4349  073B  2F54               	goto	l3575
  4350  073C                     l3571:
  4351  073C  1683               	bsf	3,5	;RP0=1, select bank1
  4352  073D  1303               	bcf	3,6	;RP1=0, select bank1
  4353  073E  0843               	movf	(sprintf@prec+1)^(0+128),w
  4354  073F  3A80               	xorlw	128
  4355  0740  00A5               	movwf	??_sprintf^(0+128)
  4356  0741  3080               	movlw	128
  4357  0742  0225               	subwf	??_sprintf^(0+128),w
  4358  0743  1D03               	skipz
  4359  0744  2F47               	goto	u5735
  4360  0745  0844               	movf	sprintf@c^(0+128),w
  4361  0746  0242               	subwf	sprintf@prec^(0+128),w
  4362  0747                     u5735:
  4363  0747  1803               	skipnc
  4364  0748  2F4A               	goto	u5731
  4365  0749  2F4B               	goto	u5730
  4366  074A                     u5731:
  4367  074A  2F54               	goto	l3575
  4368  074B                     u5730:
  4369  074B                     l3573:
  4370                           
  4371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  4372  074B  1683               	bsf	3,5	;RP0=1, select bank1
  4373  074C  1303               	bcf	3,6	;RP1=0, select bank1
  4374  074D  0844               	movf	sprintf@c^(0+128),w
  4375  074E  00A5               	movwf	??_sprintf^(0+128)
  4376  074F  01A6               	clrf	(??_sprintf^(0+128)+1)
  4377  0750  0825               	movf	??_sprintf^(0+128),w
  4378  0751  00C2               	movwf	sprintf@prec^(0+128)
  4379  0752  0826               	movf	(??_sprintf+1)^(0+128),w
  4380  0753  00C3               	movwf	(sprintf@prec+1)^(0+128)
  4381  0754                     l3575:
  4382                           
  4383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  4384  0754  1683               	bsf	3,5	;RP0=1, select bank1
  4385  0755  1303               	bcf	3,6	;RP1=0, select bank1
  4386  0756  0835               	movf	sprintf@width^(0+128),w
  4387  0757  0436               	iorwf	(sprintf@width+1)^(0+128),w
  4388  0758  1903               	btfsc	3,2
  4389  0759  2F5B               	goto	u5741
  4390  075A  2F5C               	goto	u5740
  4391  075B                     u5741:
  4392  075B  2F6E               	goto	l3581
  4393  075C                     u5740:
  4394  075C                     l3577:
  4395  075C  3003               	movlw	3
  4396  075D  0533               	andwf	sprintf@flag^(0+128),w
  4397  075E  00A5               	movwf	??_sprintf^(0+128)
  4398  075F  3000               	movlw	0
  4399  0760  0534               	andwf	(sprintf@flag+1)^(0+128),w
  4400  0761  00A6               	movwf	(??_sprintf+1)^(0+128)
  4401  0762  0825               	movf	??_sprintf^(0+128),w
  4402  0763  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4403  0764  1903               	btfsc	3,2
  4404  0765  2F67               	goto	u5751
  4405  0766  2F68               	goto	u5750
  4406  0767                     u5751:
  4407  0767  2F6E               	goto	l3581
  4408  0768                     u5750:
  4409  0768                     l3579:
  4410                           
  4411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  4412  0768  30FF               	movlw	255
  4413  0769  07B5               	addwf	sprintf@width^(0+128),f
  4414  076A  1803               	skipnc
  4415  076B  0AB6               	incf	(sprintf@width+1)^(0+128),f
  4416  076C  30FF               	movlw	255
  4417  076D  07B6               	addwf	(sprintf@width+1)^(0+128),f
  4418  076E                     l3581:
  4419                           
  4420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  4421  076E  1F34               	btfss	(sprintf@flag+1)^(0+128),6
  4422  076F  2F71               	goto	u5761
  4423  0770  2F72               	goto	u5760
  4424  0771                     u5761:
  4425  0771  2F8D               	goto	l3589
  4426  0772                     u5760:
  4427  0772                     l3583:
  4428                           
  4429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  4430  0772  0843               	movf	(sprintf@prec+1)^(0+128),w
  4431  0773  3A80               	xorlw	128
  4432  0774  00A5               	movwf	??_sprintf^(0+128)
  4433  0775  0836               	movf	(sprintf@width+1)^(0+128),w
  4434  0776  3A80               	xorlw	128
  4435  0777  0225               	subwf	??_sprintf^(0+128),w
  4436  0778  1D03               	skipz
  4437  0779  2F7C               	goto	u5775
  4438  077A  0835               	movf	sprintf@width^(0+128),w
  4439  077B  0242               	subwf	sprintf@prec^(0+128),w
  4440  077C                     u5775:
  4441  077C  1803               	skipnc
  4442  077D  2F7F               	goto	u5771
  4443  077E  2F80               	goto	u5770
  4444  077F                     u5771:
  4445  077F  2F89               	goto	l3587
  4446  0780                     u5770:
  4447  0780                     l3585:
  4448                           
  4449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  4450  0780  1683               	bsf	3,5	;RP0=1, select bank1
  4451  0781  1303               	bcf	3,6	;RP1=0, select bank1
  4452  0782  0842               	movf	sprintf@prec^(0+128),w
  4453  0783  02B5               	subwf	sprintf@width^(0+128),f
  4454  0784  0843               	movf	(sprintf@prec+1)^(0+128),w
  4455  0785  1C03               	skipc
  4456  0786  03B6               	decf	(sprintf@width+1)^(0+128),f
  4457  0787  02B6               	subwf	(sprintf@width+1)^(0+128),f
  4458  0788  2F8D               	goto	l3589
  4459  0789                     l3587:
  4460                           
  4461                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  4462  0789  1683               	bsf	3,5	;RP0=1, select bank1
  4463  078A  1303               	bcf	3,6	;RP1=0, select bank1
  4464  078B  01B5               	clrf	sprintf@width^(0+128)
  4465  078C  01B6               	clrf	(sprintf@width+1)^(0+128)
  4466  078D                     l3589:
  4467                           
  4468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  4469  078D  0836               	movf	(sprintf@width+1)^(0+128),w
  4470  078E  3A80               	xorlw	128
  4471  078F  3C80               	sublw	128
  4472  0790  1D03               	skipz
  4473  0791  2F94               	goto	u5785
  4474  0792  0835               	movf	sprintf@width^(0+128),w
  4475  0793  0244               	subwf	sprintf@c^(0+128),w
  4476  0794                     u5785:
  4477  0794  1803               	skipnc
  4478  0795  2F97               	goto	u5781
  4479  0796  2F98               	goto	u5780
  4480  0797                     u5781:
  4481  0797  2FA4               	goto	l3593
  4482  0798                     u5780:
  4483  0798                     l3591:
  4484                           
  4485                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  4486  0798  1683               	bsf	3,5	;RP0=1, select bank1
  4487  0799  1303               	bcf	3,6	;RP1=0, select bank1
  4488  079A  0844               	movf	sprintf@c^(0+128),w
  4489  079B  00A5               	movwf	??_sprintf^(0+128)
  4490  079C  01A6               	clrf	(??_sprintf^(0+128)+1)
  4491  079D  0825               	movf	??_sprintf^(0+128),w
  4492  079E  02B5               	subwf	sprintf@width^(0+128),f
  4493  079F  0826               	movf	(??_sprintf+1)^(0+128),w
  4494  07A0  1C03               	skipc
  4495  07A1  03B6               	decf	(sprintf@width+1)^(0+128),f
  4496  07A2  02B6               	subwf	(sprintf@width+1)^(0+128),f
  4497  07A3  2FA8               	goto	l3595
  4498  07A4                     l3593:
  4499                           
  4500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  4501  07A4  1683               	bsf	3,5	;RP0=1, select bank1
  4502  07A5  1303               	bcf	3,6	;RP1=0, select bank1
  4503  07A6  01B5               	clrf	sprintf@width^(0+128)
  4504  07A7  01B6               	clrf	(sprintf@width+1)^(0+128)
  4505  07A8                     l3595:
  4506                           
  4507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  4508  07A8  0835               	movf	sprintf@width^(0+128),w
  4509  07A9  0436               	iorwf	(sprintf@width+1)^(0+128),w
  4510  07AA  1903               	btfsc	3,2
  4511  07AB  2FAD               	goto	u5791
  4512  07AC  2FAE               	goto	u5790
  4513  07AD                     u5791:
  4514  07AD  2FC5               	goto	l3603
  4515  07AE                     u5790:
  4516  07AE                     l3597:
  4517                           
  4518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  4519  07AE  3020               	movlw	32
  4520  07AF  00A5               	movwf	??_sprintf^(0+128)
  4521  07B0  0841               	movf	sprintf@sp^(0+128),w
  4522  07B1  0084               	movwf	4
  4523  07B2  0825               	movf	??_sprintf^(0+128),w
  4524  07B3  1383               	bcf	3,7	;select IRP bank0
  4525  07B4  0080               	movwf	0
  4526  07B5                     l3599:
  4527  07B5  3001               	movlw	1
  4528  07B6  00A5               	movwf	??_sprintf^(0+128)
  4529  07B7  0825               	movf	??_sprintf^(0+128),w
  4530  07B8  07C1               	addwf	sprintf@sp^(0+128),f
  4531  07B9                     l3601:
  4532  07B9  30FF               	movlw	255
  4533  07BA  07B5               	addwf	sprintf@width^(0+128),f
  4534  07BB  1803               	skipnc
  4535  07BC  0AB6               	incf	(sprintf@width+1)^(0+128),f
  4536  07BD  30FF               	movlw	255
  4537  07BE  07B6               	addwf	(sprintf@width+1)^(0+128),f
  4538  07BF  0835               	movf	sprintf@width^(0+128),w
  4539  07C0  0436               	iorwf	(sprintf@width+1)^(0+128),w
  4540  07C1  1D03               	btfss	3,2
  4541  07C2  2FC4               	goto	u5801
  4542  07C3  2FC5               	goto	u5800
  4543  07C4                     u5801:
  4544  07C4  2FAE               	goto	l3597
  4545  07C5                     u5800:
  4546  07C5                     l3603:
  4547                           
  4548                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  4549  07C5  3003               	movlw	3
  4550  07C6  0533               	andwf	sprintf@flag^(0+128),w
  4551  07C7  00A5               	movwf	??_sprintf^(0+128)
  4552  07C8  3000               	movlw	0
  4553  07C9  0534               	andwf	(sprintf@flag+1)^(0+128),w
  4554  07CA  00A6               	movwf	(??_sprintf+1)^(0+128)
  4555  07CB  0825               	movf	??_sprintf^(0+128),w
  4556  07CC  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4557  07CD  1903               	btfsc	3,2
  4558  07CE  2FD0               	goto	u5811
  4559  07CF  2FD1               	goto	u5810
  4560  07D0                     u5811:
  4561  07D0  2FD9               	goto	l3609
  4562  07D1                     u5810:
  4563  07D1                     l3605:
  4564                           
  4565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4566  07D1  302D               	movlw	45
  4567  07D2  00A5               	movwf	??_sprintf^(0+128)
  4568  07D3  0841               	movf	sprintf@sp^(0+128),w
  4569  07D4  0084               	movwf	4
  4570  07D5  0825               	movf	??_sprintf^(0+128),w
  4571  07D6  1383               	bcf	3,7	;select IRP bank0
  4572  07D7  0080               	movwf	0
  4573  07D8  288A               	goto	l3365
  4574  07D9                     l3609:
  4575                           
  4576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4577  07D9  3001               	movlw	1
  4578  07DA  07A0               	addwf	sprintf@f^(0+128),f
  4579  07DB  30FF               	movlw	-1
  4580  07DC  0720               	addwf	sprintf@f^(0+128),w
  4581  07DD  0084               	movwf	4
  4582  07DE  160A  158A  200A  120A  118A  	fcall	stringdir
  4583  07E3  00A5               	movwf	??_sprintf^(0+128)
  4584  07E4  0825               	movf	??_sprintf^(0+128),w
  4585  07E5  00C4               	movwf	sprintf@c^(0+128)
  4586  07E6  0844               	movf	sprintf@c^(0+128),w
  4587  07E7  1D03               	btfss	3,2
  4588  07E8  2FEA               	goto	u5821
  4589  07E9  2FEB               	goto	u5820
  4590  07EA                     u5821:
  4591  07EA  287D               	goto	l3361
  4592  07EB                     u5820:
  4593  07EB                     l3611:
  4594                           
  4595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4596  07EB  0841               	movf	sprintf@sp^(0+128),w
  4597  07EC  0084               	movwf	4
  4598  07ED  1383               	bcf	3,7	;select IRP bank0
  4599  07EE  0180               	clrf	0
  4600  07EF                     l392:
  4601  07EF  0008               	return
  4602  07F0                     __end_of_sprintf:
  4603                           
  4604                           	psect	text9
  4605  0940                     __ptext9:	
  4606 ;; *************** function _scale *****************
  4607 ;; Defined at:
  4608 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  scl             1    wreg     char 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;  scl             1   48[BANK0 ] char 
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  4   30[BANK0 ] char 
  4615 ;; Registers used:
  4616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4622 ;;      Params:         0       4       0       0       0
  4623 ;;      Locals:         0       5       0       0       0
  4624 ;;      Temps:          0      10       0       0       0
  4625 ;;      Totals:         0      19       0       0       0
  4626 ;;Total ram usage:       19 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; Hardware stack levels required when called:    2
  4629 ;; This function calls:
  4630 ;;		___awdiv
  4631 ;;		___awmod
  4632 ;;		___flmul
  4633 ;; This function is called by:
  4634 ;;		_sprintf
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           
  4639                           ;psect for function _scale
  4640  0940                     _scale:
  4641                           
  4642                           ;incstack = 0
  4643                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4644                           ;scale@scl stored from wreg
  4645  0940  1283               	bcf	3,5	;RP0=0, select bank0
  4646  0941  1303               	bcf	3,6	;RP1=0, select bank0
  4647  0942  00D0               	movwf	scale@scl
  4648  0943                     l2981:
  4649                           
  4650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4651  0943  1FD0               	btfss	scale@scl,7
  4652  0944  2946               	goto	u4341
  4653  0945  2947               	goto	u4340
  4654  0946                     u4341:
  4655  0946  2AF4               	goto	l3003
  4656  0947                     u4340:
  4657  0947                     l2983:
  4658                           
  4659                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4660  0947  09D0               	comf	scale@scl,f
  4661  0948  0AD0               	incf	scale@scl,f
  4662  0949                     l2985:
  4663                           
  4664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4665  0949  0850               	movf	scale@scl,w
  4666  094A  3A80               	xorlw	128
  4667  094B  3E12               	addlw	-238
  4668  094C  1C03               	skipc
  4669  094D  294F               	goto	u4351
  4670  094E  2950               	goto	u4350
  4671  094F                     u4351:
  4672  094F  2A38               	goto	l2993
  4673  0950                     u4350:
  4674  0950                     l2987:
  4675                           
  4676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4677  0950  300A               	movlw	10
  4678  0951  00F7               	movwf	___awdiv@divisor
  4679  0952  3000               	movlw	0
  4680  0953  00F8               	movwf	___awdiv@divisor+1
  4681  0954  0850               	movf	scale@scl,w
  4682  0955  00F2               	movwf	___awmod@dividend
  4683  0956  01F3               	clrf	___awmod@dividend+1
  4684  0957  1BF2               	btfsc	___awmod@dividend,7
  4685  0958  03F3               	decf	___awmod@dividend+1,f
  4686  0959  3064               	movlw	100
  4687  095A  00F0               	movwf	___awmod@divisor
  4688  095B  3000               	movlw	0
  4689  095C  00F1               	movwf	___awmod@divisor+1
  4690  095D  160A  158A  23E7  120A  158A  	fcall	___awmod
  4691  0962  0871               	movf	?___awmod+1,w
  4692  0963  00FA               	movwf	___awdiv@dividend+1
  4693  0964  0870               	movf	?___awmod,w
  4694  0965  00F9               	movwf	___awdiv@dividend
  4695  0966  120A  118A  200C  120A  158A  	fcall	___awdiv
  4696  096B  0877               	movf	?___awdiv,w
  4697  096C  1283               	bcf	3,5	;RP0=0, select bank0
  4698  096D  1303               	bcf	3,6	;RP1=0, select bank0
  4699  096E  00C2               	movwf	??_scale
  4700  096F  3001               	movlw	1
  4701  0970                     u4365:
  4702  0970  1003               	clrc
  4703  0971  0DC2               	rlf	??_scale,f
  4704  0972  3EFF               	addlw	-1
  4705  0973  1D03               	skipz
  4706  0974  2970               	goto	u4365
  4707  0975  1003               	clrc
  4708  0976  0D42               	rlf	??_scale,w
  4709  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4710  0978  0084               	movwf	4
  4711  0979  160A  158A  200A  120A  158A  	fcall	stringdir
  4712  097E  00C3               	movwf	??_scale+1
  4713  097F  160A  158A  200A  120A  158A  	fcall	stringdir
  4714  0984  00C4               	movwf	??_scale+2
  4715  0985  160A  158A  200A  120A  158A  	fcall	stringdir
  4716  098A  00C5               	movwf	??_scale+3
  4717  098B  160A  158A  200A  120A  158A  	fcall	stringdir
  4718  0990  00C6               	movwf	??_scale+4
  4719  0991  0846               	movf	??_scale+4,w
  4720  0992  00A7               	movwf	___flmul@b+3
  4721  0993  0845               	movf	??_scale+3,w
  4722  0994  00A6               	movwf	___flmul@b+2
  4723  0995  0844               	movf	??_scale+2,w
  4724  0996  00A5               	movwf	___flmul@b+1
  4725  0997  0843               	movf	??_scale+1,w
  4726  0998  00A4               	movwf	___flmul@b
  4727  0999  3064               	movlw	100
  4728  099A  00F7               	movwf	___awdiv@divisor
  4729  099B  3000               	movlw	0
  4730  099C  00F8               	movwf	___awdiv@divisor+1
  4731  099D  0850               	movf	scale@scl,w
  4732  099E  00F9               	movwf	___awdiv@dividend
  4733  099F  01FA               	clrf	___awdiv@dividend+1
  4734  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4735  09A1  03FA               	decf	___awdiv@dividend+1,f
  4736  09A2  120A  118A  200C  120A  158A  	fcall	___awdiv
  4737  09A7  0877               	movf	?___awdiv,w
  4738  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4739  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4740  09AA  00C7               	movwf	??_scale+5
  4741  09AB  3001               	movlw	1
  4742  09AC                     u4375:
  4743  09AC  1003               	clrc
  4744  09AD  0DC7               	rlf	??_scale+5,f
  4745  09AE  3EFF               	addlw	-1
  4746  09AF  1D03               	skipz
  4747  09B0  29AC               	goto	u4375
  4748  09B1  1003               	clrc
  4749  09B2  0D47               	rlf	??_scale+5,w
  4750  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4751  09B4  0084               	movwf	4
  4752  09B5  160A  158A  200A  120A  158A  	fcall	stringdir
  4753  09BA  00C8               	movwf	??_scale+6
  4754  09BB  160A  158A  200A  120A  158A  	fcall	stringdir
  4755  09C0  00C9               	movwf	??_scale+7
  4756  09C1  160A  158A  200A  120A  158A  	fcall	stringdir
  4757  09C6  00CA               	movwf	??_scale+8
  4758  09C7  160A  158A  200A  120A  158A  	fcall	stringdir
  4759  09CC  00CB               	movwf	??_scale+9
  4760  09CD  084B               	movf	??_scale+9,w
  4761  09CE  00AB               	movwf	___flmul@a+3
  4762  09CF  084A               	movf	??_scale+8,w
  4763  09D0  00AA               	movwf	___flmul@a+2
  4764  09D1  0849               	movf	??_scale+7,w
  4765  09D2  00A9               	movwf	___flmul@a+1
  4766  09D3  0848               	movf	??_scale+6,w
  4767  09D4  00A8               	movwf	___flmul@a
  4768  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4769  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4770  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4771  09DC  0827               	movf	?___flmul+3,w
  4772  09DD  00CF               	movwf	_scale$1002+3
  4773  09DE  0826               	movf	?___flmul+2,w
  4774  09DF  00CE               	movwf	_scale$1002+2
  4775  09E0  0825               	movf	?___flmul+1,w
  4776  09E1  00CD               	movwf	_scale$1002+1
  4777  09E2  0824               	movf	?___flmul,w
  4778  09E3  00CC               	movwf	_scale$1002
  4779                           
  4780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4781  09E4  300A               	movlw	10
  4782  09E5  00F0               	movwf	___awmod@divisor
  4783  09E6  3000               	movlw	0
  4784  09E7  00F1               	movwf	___awmod@divisor+1
  4785  09E8  0850               	movf	scale@scl,w
  4786  09E9  00F2               	movwf	___awmod@dividend
  4787  09EA  01F3               	clrf	___awmod@dividend+1
  4788  09EB  1BF2               	btfsc	___awmod@dividend,7
  4789  09EC  03F3               	decf	___awmod@dividend+1,f
  4790  09ED  160A  158A  23E7  120A  158A  	fcall	___awmod
  4791  09F2  0870               	movf	?___awmod,w
  4792  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4793  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4794  09F5  00C2               	movwf	??_scale
  4795  09F6  3001               	movlw	1
  4796  09F7                     u4385:
  4797  09F7  1003               	clrc
  4798  09F8  0DC2               	rlf	??_scale,f
  4799  09F9  3EFF               	addlw	-1
  4800  09FA  1D03               	skipz
  4801  09FB  29F7               	goto	u4385
  4802  09FC  1003               	clrc
  4803  09FD  0D42               	rlf	??_scale,w
  4804  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4805  09FF  0084               	movwf	4
  4806  0A00  160A  158A  200A  120A  158A  	fcall	stringdir
  4807  0A05  00C3               	movwf	??_scale+1
  4808  0A06  160A  158A  200A  120A  158A  	fcall	stringdir
  4809  0A0B  00C4               	movwf	??_scale+2
  4810  0A0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4811  0A11  00C5               	movwf	??_scale+3
  4812  0A12  160A  158A  200A  120A  158A  	fcall	stringdir
  4813  0A17  00C6               	movwf	??_scale+4
  4814  0A18  0846               	movf	??_scale+4,w
  4815  0A19  00A7               	movwf	___flmul@b+3
  4816  0A1A  0845               	movf	??_scale+3,w
  4817  0A1B  00A6               	movwf	___flmul@b+2
  4818  0A1C  0844               	movf	??_scale+2,w
  4819  0A1D  00A5               	movwf	___flmul@b+1
  4820  0A1E  0843               	movf	??_scale+1,w
  4821  0A1F  00A4               	movwf	___flmul@b
  4822  0A20  084F               	movf	_scale$1002+3,w
  4823  0A21  00AB               	movwf	___flmul@a+3
  4824  0A22  084E               	movf	_scale$1002+2,w
  4825  0A23  00AA               	movwf	___flmul@a+2
  4826  0A24  084D               	movf	_scale$1002+1,w
  4827  0A25  00A9               	movwf	___flmul@a+1
  4828  0A26  084C               	movf	_scale$1002,w
  4829  0A27  00A8               	movwf	___flmul@a
  4830  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4831  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4832  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4833  0A2F  0827               	movf	?___flmul+3,w
  4834  0A30  00C1               	movwf	?_scale+3
  4835  0A31  0826               	movf	?___flmul+2,w
  4836  0A32  00C0               	movwf	?_scale+2
  4837  0A33  0825               	movf	?___flmul+1,w
  4838  0A34  00BF               	movwf	?_scale+1
  4839  0A35  0824               	movf	?___flmul,w
  4840  0A36  00BE               	movwf	?_scale
  4841  0A37  2C9E               	goto	l309
  4842  0A38                     l2993:
  4843  0A38  0850               	movf	scale@scl,w
  4844  0A39  3A80               	xorlw	128
  4845  0A3A  3E75               	addlw	-139
  4846  0A3B  1C03               	skipc
  4847  0A3C  2A3E               	goto	u4391
  4848  0A3D  2A3F               	goto	u4390
  4849  0A3E                     u4391:
  4850  0A3E  2AC7               	goto	l2999
  4851  0A3F                     u4390:
  4852  0A3F                     l2995:
  4853                           
  4854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4855  0A3F  300A               	movlw	10
  4856  0A40  00F0               	movwf	___awmod@divisor
  4857  0A41  3000               	movlw	0
  4858  0A42  00F1               	movwf	___awmod@divisor+1
  4859  0A43  0850               	movf	scale@scl,w
  4860  0A44  00F2               	movwf	___awmod@dividend
  4861  0A45  01F3               	clrf	___awmod@dividend+1
  4862  0A46  1BF2               	btfsc	___awmod@dividend,7
  4863  0A47  03F3               	decf	___awmod@dividend+1,f
  4864  0A48  160A  158A  23E7  120A  158A  	fcall	___awmod
  4865  0A4D  0870               	movf	?___awmod,w
  4866  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4867  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4868  0A50  00C2               	movwf	??_scale
  4869  0A51  3001               	movlw	1
  4870  0A52                     u4405:
  4871  0A52  1003               	clrc
  4872  0A53  0DC2               	rlf	??_scale,f
  4873  0A54  3EFF               	addlw	-1
  4874  0A55  1D03               	skipz
  4875  0A56  2A52               	goto	u4405
  4876  0A57  1003               	clrc
  4877  0A58  0D42               	rlf	??_scale,w
  4878  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4879  0A5A  0084               	movwf	4
  4880  0A5B  160A  158A  200A  120A  158A  	fcall	stringdir
  4881  0A60  00C3               	movwf	??_scale+1
  4882  0A61  160A  158A  200A  120A  158A  	fcall	stringdir
  4883  0A66  00C4               	movwf	??_scale+2
  4884  0A67  160A  158A  200A  120A  158A  	fcall	stringdir
  4885  0A6C  00C5               	movwf	??_scale+3
  4886  0A6D  160A  158A  200A  120A  158A  	fcall	stringdir
  4887  0A72  00C6               	movwf	??_scale+4
  4888  0A73  0846               	movf	??_scale+4,w
  4889  0A74  00A7               	movwf	___flmul@b+3
  4890  0A75  0845               	movf	??_scale+3,w
  4891  0A76  00A6               	movwf	___flmul@b+2
  4892  0A77  0844               	movf	??_scale+2,w
  4893  0A78  00A5               	movwf	___flmul@b+1
  4894  0A79  0843               	movf	??_scale+1,w
  4895  0A7A  00A4               	movwf	___flmul@b
  4896  0A7B  300A               	movlw	10
  4897  0A7C  00F7               	movwf	___awdiv@divisor
  4898  0A7D  3000               	movlw	0
  4899  0A7E  00F8               	movwf	___awdiv@divisor+1
  4900  0A7F  0850               	movf	scale@scl,w
  4901  0A80  00F9               	movwf	___awdiv@dividend
  4902  0A81  01FA               	clrf	___awdiv@dividend+1
  4903  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4904  0A83  03FA               	decf	___awdiv@dividend+1,f
  4905  0A84  120A  118A  200C  120A  158A  	fcall	___awdiv
  4906  0A89  0877               	movf	?___awdiv,w
  4907  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4908  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4909  0A8C  00C7               	movwf	??_scale+5
  4910  0A8D  3001               	movlw	1
  4911  0A8E                     u4415:
  4912  0A8E  1003               	clrc
  4913  0A8F  0DC7               	rlf	??_scale+5,f
  4914  0A90  3EFF               	addlw	-1
  4915  0A91  1D03               	skipz
  4916  0A92  2A8E               	goto	u4415
  4917  0A93  1003               	clrc
  4918  0A94  0D47               	rlf	??_scale+5,w
  4919  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4920  0A96  0084               	movwf	4
  4921  0A97  160A  158A  200A  120A  158A  	fcall	stringdir
  4922  0A9C  00C8               	movwf	??_scale+6
  4923  0A9D  160A  158A  200A  120A  158A  	fcall	stringdir
  4924  0AA2  00C9               	movwf	??_scale+7
  4925  0AA3  160A  158A  200A  120A  158A  	fcall	stringdir
  4926  0AA8  00CA               	movwf	??_scale+8
  4927  0AA9  160A  158A  200A  120A  158A  	fcall	stringdir
  4928  0AAE  00CB               	movwf	??_scale+9
  4929  0AAF  084B               	movf	??_scale+9,w
  4930  0AB0  00AB               	movwf	___flmul@a+3
  4931  0AB1  084A               	movf	??_scale+8,w
  4932  0AB2  00AA               	movwf	___flmul@a+2
  4933  0AB3  0849               	movf	??_scale+7,w
  4934  0AB4  00A9               	movwf	___flmul@a+1
  4935  0AB5  0848               	movf	??_scale+6,w
  4936  0AB6  00A8               	movwf	___flmul@a
  4937  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4938  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4939  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4940  0ABE  0827               	movf	?___flmul+3,w
  4941  0ABF  00C1               	movwf	?_scale+3
  4942  0AC0  0826               	movf	?___flmul+2,w
  4943  0AC1  00C0               	movwf	?_scale+2
  4944  0AC2  0825               	movf	?___flmul+1,w
  4945  0AC3  00BF               	movwf	?_scale+1
  4946  0AC4  0824               	movf	?___flmul,w
  4947  0AC5  00BE               	movwf	?_scale
  4948  0AC6  2C9E               	goto	l309
  4949  0AC7                     l2999:
  4950                           
  4951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4952  0AC7  0850               	movf	scale@scl,w
  4953  0AC8  00C2               	movwf	??_scale
  4954  0AC9  3001               	movlw	1
  4955  0ACA                     u4425:
  4956  0ACA  1003               	clrc
  4957  0ACB  0DC2               	rlf	??_scale,f
  4958  0ACC  3EFF               	addlw	-1
  4959  0ACD  1D03               	skipz
  4960  0ACE  2ACA               	goto	u4425
  4961  0ACF  1003               	clrc
  4962  0AD0  0D42               	rlf	??_scale,w
  4963  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4964  0AD2  0084               	movwf	4
  4965  0AD3  160A  158A  200A  120A  158A  	fcall	stringdir
  4966  0AD8  00C3               	movwf	??_scale+1
  4967  0AD9  160A  158A  200A  120A  158A  	fcall	stringdir
  4968  0ADE  00C4               	movwf	??_scale+2
  4969  0ADF  160A  158A  200A  120A  158A  	fcall	stringdir
  4970  0AE4  00C5               	movwf	??_scale+3
  4971  0AE5  160A  158A  200A  120A  158A  	fcall	stringdir
  4972  0AEA  00C6               	movwf	??_scale+4
  4973  0AEB  0846               	movf	??_scale+4,w
  4974  0AEC  00C1               	movwf	?_scale+3
  4975  0AED  0845               	movf	??_scale+3,w
  4976  0AEE  00C0               	movwf	?_scale+2
  4977  0AEF  0844               	movf	??_scale+2,w
  4978  0AF0  00BF               	movwf	?_scale+1
  4979  0AF1  0843               	movf	??_scale+1,w
  4980  0AF2  00BE               	movwf	?_scale
  4981  0AF3  2C9E               	goto	l309
  4982  0AF4                     l3003:
  4983                           
  4984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4985  0AF4  0850               	movf	scale@scl,w
  4986  0AF5  3A80               	xorlw	128
  4987  0AF6  3E12               	addlw	-238
  4988  0AF7  1C03               	skipc
  4989  0AF8  2AFA               	goto	u4431
  4990  0AF9  2AFB               	goto	u4430
  4991  0AFA                     u4431:
  4992  0AFA  2BE3               	goto	l3011
  4993  0AFB                     u4430:
  4994  0AFB                     l3005:
  4995                           
  4996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4997  0AFB  300A               	movlw	10
  4998  0AFC  00F7               	movwf	___awdiv@divisor
  4999  0AFD  3000               	movlw	0
  5000  0AFE  00F8               	movwf	___awdiv@divisor+1
  5001  0AFF  0850               	movf	scale@scl,w
  5002  0B00  00F2               	movwf	___awmod@dividend
  5003  0B01  01F3               	clrf	___awmod@dividend+1
  5004  0B02  1BF2               	btfsc	___awmod@dividend,7
  5005  0B03  03F3               	decf	___awmod@dividend+1,f
  5006  0B04  3064               	movlw	100
  5007  0B05  00F0               	movwf	___awmod@divisor
  5008  0B06  3000               	movlw	0
  5009  0B07  00F1               	movwf	___awmod@divisor+1
  5010  0B08  160A  158A  23E7  120A  158A  	fcall	___awmod
  5011  0B0D  0871               	movf	?___awmod+1,w
  5012  0B0E  00FA               	movwf	___awdiv@dividend+1
  5013  0B0F  0870               	movf	?___awmod,w
  5014  0B10  00F9               	movwf	___awdiv@dividend
  5015  0B11  120A  118A  200C  120A  158A  	fcall	___awdiv
  5016  0B16  0877               	movf	?___awdiv,w
  5017  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  5018  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  5019  0B19  00C2               	movwf	??_scale
  5020  0B1A  3001               	movlw	1
  5021  0B1B                     u4445:
  5022  0B1B  1003               	clrc
  5023  0B1C  0DC2               	rlf	??_scale,f
  5024  0B1D  3EFF               	addlw	-1
  5025  0B1E  1D03               	skipz
  5026  0B1F  2B1B               	goto	u4445
  5027  0B20  1003               	clrc
  5028  0B21  0D42               	rlf	??_scale,w
  5029  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5030  0B23  0084               	movwf	4
  5031  0B24  160A  158A  200A  120A  158A  	fcall	stringdir
  5032  0B29  00C3               	movwf	??_scale+1
  5033  0B2A  160A  158A  200A  120A  158A  	fcall	stringdir
  5034  0B2F  00C4               	movwf	??_scale+2
  5035  0B30  160A  158A  200A  120A  158A  	fcall	stringdir
  5036  0B35  00C5               	movwf	??_scale+3
  5037  0B36  160A  158A  200A  120A  158A  	fcall	stringdir
  5038  0B3B  00C6               	movwf	??_scale+4
  5039  0B3C  0846               	movf	??_scale+4,w
  5040  0B3D  00A7               	movwf	___flmul@b+3
  5041  0B3E  0845               	movf	??_scale+3,w
  5042  0B3F  00A6               	movwf	___flmul@b+2
  5043  0B40  0844               	movf	??_scale+2,w
  5044  0B41  00A5               	movwf	___flmul@b+1
  5045  0B42  0843               	movf	??_scale+1,w
  5046  0B43  00A4               	movwf	___flmul@b
  5047  0B44  3064               	movlw	100
  5048  0B45  00F7               	movwf	___awdiv@divisor
  5049  0B46  3000               	movlw	0
  5050  0B47  00F8               	movwf	___awdiv@divisor+1
  5051  0B48  0850               	movf	scale@scl,w
  5052  0B49  00F9               	movwf	___awdiv@dividend
  5053  0B4A  01FA               	clrf	___awdiv@dividend+1
  5054  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  5055  0B4C  03FA               	decf	___awdiv@dividend+1,f
  5056  0B4D  120A  118A  200C  120A  158A  	fcall	___awdiv
  5057  0B52  0877               	movf	?___awdiv,w
  5058  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  5059  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  5060  0B55  00C7               	movwf	??_scale+5
  5061  0B56  3001               	movlw	1
  5062  0B57                     u4455:
  5063  0B57  1003               	clrc
  5064  0B58  0DC7               	rlf	??_scale+5,f
  5065  0B59  3EFF               	addlw	-1
  5066  0B5A  1D03               	skipz
  5067  0B5B  2B57               	goto	u4455
  5068  0B5C  1003               	clrc
  5069  0B5D  0D47               	rlf	??_scale+5,w
  5070  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  5071  0B5F  0084               	movwf	4
  5072  0B60  160A  158A  200A  120A  158A  	fcall	stringdir
  5073  0B65  00C8               	movwf	??_scale+6
  5074  0B66  160A  158A  200A  120A  158A  	fcall	stringdir
  5075  0B6B  00C9               	movwf	??_scale+7
  5076  0B6C  160A  158A  200A  120A  158A  	fcall	stringdir
  5077  0B71  00CA               	movwf	??_scale+8
  5078  0B72  160A  158A  200A  120A  158A  	fcall	stringdir
  5079  0B77  00CB               	movwf	??_scale+9
  5080  0B78  084B               	movf	??_scale+9,w
  5081  0B79  00AB               	movwf	___flmul@a+3
  5082  0B7A  084A               	movf	??_scale+8,w
  5083  0B7B  00AA               	movwf	___flmul@a+2
  5084  0B7C  0849               	movf	??_scale+7,w
  5085  0B7D  00A9               	movwf	___flmul@a+1
  5086  0B7E  0848               	movf	??_scale+6,w
  5087  0B7F  00A8               	movwf	___flmul@a
  5088  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  5089  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  5090  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  5091  0B87  0827               	movf	?___flmul+3,w
  5092  0B88  00CF               	movwf	_scale$1002+3
  5093  0B89  0826               	movf	?___flmul+2,w
  5094  0B8A  00CE               	movwf	_scale$1002+2
  5095  0B8B  0825               	movf	?___flmul+1,w
  5096  0B8C  00CD               	movwf	_scale$1002+1
  5097  0B8D  0824               	movf	?___flmul,w
  5098  0B8E  00CC               	movwf	_scale$1002
  5099                           
  5100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  5101  0B8F  300A               	movlw	10
  5102  0B90  00F0               	movwf	___awmod@divisor
  5103  0B91  3000               	movlw	0
  5104  0B92  00F1               	movwf	___awmod@divisor+1
  5105  0B93  0850               	movf	scale@scl,w
  5106  0B94  00F2               	movwf	___awmod@dividend
  5107  0B95  01F3               	clrf	___awmod@dividend+1
  5108  0B96  1BF2               	btfsc	___awmod@dividend,7
  5109  0B97  03F3               	decf	___awmod@dividend+1,f
  5110  0B98  160A  158A  23E7  120A  158A  	fcall	___awmod
  5111  0B9D  0870               	movf	?___awmod,w
  5112  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  5113  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  5114  0BA0  00C2               	movwf	??_scale
  5115  0BA1  3001               	movlw	1
  5116  0BA2                     u4465:
  5117  0BA2  1003               	clrc
  5118  0BA3  0DC2               	rlf	??_scale,f
  5119  0BA4  3EFF               	addlw	-1
  5120  0BA5  1D03               	skipz
  5121  0BA6  2BA2               	goto	u4465
  5122  0BA7  1003               	clrc
  5123  0BA8  0D42               	rlf	??_scale,w
  5124  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5125  0BAA  0084               	movwf	4
  5126  0BAB  160A  158A  200A  120A  158A  	fcall	stringdir
  5127  0BB0  00C3               	movwf	??_scale+1
  5128  0BB1  160A  158A  200A  120A  158A  	fcall	stringdir
  5129  0BB6  00C4               	movwf	??_scale+2
  5130  0BB7  160A  158A  200A  120A  158A  	fcall	stringdir
  5131  0BBC  00C5               	movwf	??_scale+3
  5132  0BBD  160A  158A  200A  120A  158A  	fcall	stringdir
  5133  0BC2  00C6               	movwf	??_scale+4
  5134  0BC3  0846               	movf	??_scale+4,w
  5135  0BC4  00A7               	movwf	___flmul@b+3
  5136  0BC5  0845               	movf	??_scale+3,w
  5137  0BC6  00A6               	movwf	___flmul@b+2
  5138  0BC7  0844               	movf	??_scale+2,w
  5139  0BC8  00A5               	movwf	___flmul@b+1
  5140  0BC9  0843               	movf	??_scale+1,w
  5141  0BCA  00A4               	movwf	___flmul@b
  5142  0BCB  084F               	movf	_scale$1002+3,w
  5143  0BCC  00AB               	movwf	___flmul@a+3
  5144  0BCD  084E               	movf	_scale$1002+2,w
  5145  0BCE  00AA               	movwf	___flmul@a+2
  5146  0BCF  084D               	movf	_scale$1002+1,w
  5147  0BD0  00A9               	movwf	___flmul@a+1
  5148  0BD1  084C               	movf	_scale$1002,w
  5149  0BD2  00A8               	movwf	___flmul@a
  5150  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  5151  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  5152  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  5153  0BDA  0827               	movf	?___flmul+3,w
  5154  0BDB  00C1               	movwf	?_scale+3
  5155  0BDC  0826               	movf	?___flmul+2,w
  5156  0BDD  00C0               	movwf	?_scale+2
  5157  0BDE  0825               	movf	?___flmul+1,w
  5158  0BDF  00BF               	movwf	?_scale+1
  5159  0BE0  0824               	movf	?___flmul,w
  5160  0BE1  00BE               	movwf	?_scale
  5161  0BE2  2C9E               	goto	l309
  5162  0BE3                     l3011:
  5163  0BE3  0850               	movf	scale@scl,w
  5164  0BE4  3A80               	xorlw	128
  5165  0BE5  3E75               	addlw	-139
  5166  0BE6  1C03               	skipc
  5167  0BE7  2BE9               	goto	u4471
  5168  0BE8  2BEA               	goto	u4470
  5169  0BE9                     u4471:
  5170  0BE9  2C72               	goto	l3017
  5171  0BEA                     u4470:
  5172  0BEA                     l3013:
  5173                           
  5174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  5175  0BEA  300A               	movlw	10
  5176  0BEB  00F0               	movwf	___awmod@divisor
  5177  0BEC  3000               	movlw	0
  5178  0BED  00F1               	movwf	___awmod@divisor+1
  5179  0BEE  0850               	movf	scale@scl,w
  5180  0BEF  00F2               	movwf	___awmod@dividend
  5181  0BF0  01F3               	clrf	___awmod@dividend+1
  5182  0BF1  1BF2               	btfsc	___awmod@dividend,7
  5183  0BF2  03F3               	decf	___awmod@dividend+1,f
  5184  0BF3  160A  158A  23E7  120A  158A  	fcall	___awmod
  5185  0BF8  0870               	movf	?___awmod,w
  5186  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  5187  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  5188  0BFB  00C2               	movwf	??_scale
  5189  0BFC  3001               	movlw	1
  5190  0BFD                     u4485:
  5191  0BFD  1003               	clrc
  5192  0BFE  0DC2               	rlf	??_scale,f
  5193  0BFF  3EFF               	addlw	-1
  5194  0C00  1D03               	skipz
  5195  0C01  2BFD               	goto	u4485
  5196  0C02  1003               	clrc
  5197  0C03  0D42               	rlf	??_scale,w
  5198  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5199  0C05  0084               	movwf	4
  5200  0C06  160A  158A  200A  120A  158A  	fcall	stringdir
  5201  0C0B  00C3               	movwf	??_scale+1
  5202  0C0C  160A  158A  200A  120A  158A  	fcall	stringdir
  5203  0C11  00C4               	movwf	??_scale+2
  5204  0C12  160A  158A  200A  120A  158A  	fcall	stringdir
  5205  0C17  00C5               	movwf	??_scale+3
  5206  0C18  160A  158A  200A  120A  158A  	fcall	stringdir
  5207  0C1D  00C6               	movwf	??_scale+4
  5208  0C1E  0846               	movf	??_scale+4,w
  5209  0C1F  00A7               	movwf	___flmul@b+3
  5210  0C20  0845               	movf	??_scale+3,w
  5211  0C21  00A6               	movwf	___flmul@b+2
  5212  0C22  0844               	movf	??_scale+2,w
  5213  0C23  00A5               	movwf	___flmul@b+1
  5214  0C24  0843               	movf	??_scale+1,w
  5215  0C25  00A4               	movwf	___flmul@b
  5216  0C26  300A               	movlw	10
  5217  0C27  00F7               	movwf	___awdiv@divisor
  5218  0C28  3000               	movlw	0
  5219  0C29  00F8               	movwf	___awdiv@divisor+1
  5220  0C2A  0850               	movf	scale@scl,w
  5221  0C2B  00F9               	movwf	___awdiv@dividend
  5222  0C2C  01FA               	clrf	___awdiv@dividend+1
  5223  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  5224  0C2E  03FA               	decf	___awdiv@dividend+1,f
  5225  0C2F  120A  118A  200C  120A  158A  	fcall	___awdiv
  5226  0C34  0877               	movf	?___awdiv,w
  5227  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  5228  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  5229  0C37  00C7               	movwf	??_scale+5
  5230  0C38  3001               	movlw	1
  5231  0C39                     u4495:
  5232  0C39  1003               	clrc
  5233  0C3A  0DC7               	rlf	??_scale+5,f
  5234  0C3B  3EFF               	addlw	-1
  5235  0C3C  1D03               	skipz
  5236  0C3D  2C39               	goto	u4495
  5237  0C3E  1003               	clrc
  5238  0C3F  0D47               	rlf	??_scale+5,w
  5239  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5240  0C41  0084               	movwf	4
  5241  0C42  160A  158A  200A  120A  158A  	fcall	stringdir
  5242  0C47  00C8               	movwf	??_scale+6
  5243  0C48  160A  158A  200A  120A  158A  	fcall	stringdir
  5244  0C4D  00C9               	movwf	??_scale+7
  5245  0C4E  160A  158A  200A  120A  158A  	fcall	stringdir
  5246  0C53  00CA               	movwf	??_scale+8
  5247  0C54  160A  158A  200A  120A  158A  	fcall	stringdir
  5248  0C59  00CB               	movwf	??_scale+9
  5249  0C5A  084B               	movf	??_scale+9,w
  5250  0C5B  00AB               	movwf	___flmul@a+3
  5251  0C5C  084A               	movf	??_scale+8,w
  5252  0C5D  00AA               	movwf	___flmul@a+2
  5253  0C5E  0849               	movf	??_scale+7,w
  5254  0C5F  00A9               	movwf	___flmul@a+1
  5255  0C60  0848               	movf	??_scale+6,w
  5256  0C61  00A8               	movwf	___flmul@a
  5257  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  5258  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  5259  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  5260  0C69  0827               	movf	?___flmul+3,w
  5261  0C6A  00C1               	movwf	?_scale+3
  5262  0C6B  0826               	movf	?___flmul+2,w
  5263  0C6C  00C0               	movwf	?_scale+2
  5264  0C6D  0825               	movf	?___flmul+1,w
  5265  0C6E  00BF               	movwf	?_scale+1
  5266  0C6F  0824               	movf	?___flmul,w
  5267  0C70  00BE               	movwf	?_scale
  5268  0C71  2C9E               	goto	l309
  5269  0C72                     l3017:
  5270                           
  5271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  5272  0C72  0850               	movf	scale@scl,w
  5273  0C73  00C2               	movwf	??_scale
  5274  0C74  3001               	movlw	1
  5275  0C75                     u4505:
  5276  0C75  1003               	clrc
  5277  0C76  0DC2               	rlf	??_scale,f
  5278  0C77  3EFF               	addlw	-1
  5279  0C78  1D03               	skipz
  5280  0C79  2C75               	goto	u4505
  5281  0C7A  1003               	clrc
  5282  0C7B  0D42               	rlf	??_scale,w
  5283  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5284  0C7D  0084               	movwf	4
  5285  0C7E  160A  158A  200A  120A  158A  	fcall	stringdir
  5286  0C83  00C3               	movwf	??_scale+1
  5287  0C84  160A  158A  200A  120A  158A  	fcall	stringdir
  5288  0C89  00C4               	movwf	??_scale+2
  5289  0C8A  160A  158A  200A  120A  158A  	fcall	stringdir
  5290  0C8F  00C5               	movwf	??_scale+3
  5291  0C90  160A  158A  200A  120A  158A  	fcall	stringdir
  5292  0C95  00C6               	movwf	??_scale+4
  5293  0C96  0846               	movf	??_scale+4,w
  5294  0C97  00C1               	movwf	?_scale+3
  5295  0C98  0845               	movf	??_scale+3,w
  5296  0C99  00C0               	movwf	?_scale+2
  5297  0C9A  0844               	movf	??_scale+2,w
  5298  0C9B  00BF               	movwf	?_scale+1
  5299  0C9C  0843               	movf	??_scale+1,w
  5300  0C9D  00BE               	movwf	?_scale
  5301  0C9E                     l309:
  5302  0C9E  0008               	return
  5303  0C9F                     __end_of_scale:
  5304                           
  5305                           	psect	text10
  5306  1BE7                     __ptext10:	
  5307 ;; *************** function ___awmod *****************
  5308 ;; Defined at:
  5309 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;  divisor         2    0[COMMON] int 
  5312 ;;  dividend        2    2[COMMON] int 
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;  sign            1    6[COMMON] unsigned char 
  5315 ;;  counter         1    5[COMMON] unsigned char 
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  2    0[COMMON] int 
  5318 ;; Registers used:
  5319 ;;		wreg, status,2, status,0
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5325 ;;      Params:         4       0       0       0       0
  5326 ;;      Locals:         2       0       0       0       0
  5327 ;;      Temps:          1       0       0       0       0
  5328 ;;      Totals:         7       0       0       0       0
  5329 ;;Total ram usage:        7 bytes
  5330 ;; Hardware stack levels used:    1
  5331 ;; This function calls:
  5332 ;;		Nothing
  5333 ;; This function is called by:
  5334 ;;		_scale
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           
  5339                           ;psect for function ___awmod
  5340  1BE7                     ___awmod:
  5341  1BE7                     l2523:	
  5342                           ;incstack = 0
  5343                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5344                           
  5345  1BE7  01F6               	clrf	___awmod@sign
  5346  1BE8                     l2525:
  5347  1BE8  1FF3               	btfss	___awmod@dividend+1,7
  5348  1BE9  2BEB               	goto	u3211
  5349  1BEA  2BEC               	goto	u3210
  5350  1BEB                     u3211:
  5351  1BEB  2BF3               	goto	l2531
  5352  1BEC                     u3210:
  5353  1BEC                     l2527:
  5354  1BEC  09F2               	comf	___awmod@dividend,f
  5355  1BED  09F3               	comf	___awmod@dividend+1,f
  5356  1BEE  0AF2               	incf	___awmod@dividend,f
  5357  1BEF  1903               	skipnz
  5358  1BF0  0AF3               	incf	___awmod@dividend+1,f
  5359  1BF1                     l2529:
  5360  1BF1  01F6               	clrf	___awmod@sign
  5361  1BF2  0AF6               	incf	___awmod@sign,f
  5362  1BF3                     l2531:
  5363  1BF3  1FF1               	btfss	___awmod@divisor+1,7
  5364  1BF4  2BF6               	goto	u3221
  5365  1BF5  2BF7               	goto	u3220
  5366  1BF6                     u3221:
  5367  1BF6  2BFC               	goto	l2535
  5368  1BF7                     u3220:
  5369  1BF7                     l2533:
  5370  1BF7  09F0               	comf	___awmod@divisor,f
  5371  1BF8  09F1               	comf	___awmod@divisor+1,f
  5372  1BF9  0AF0               	incf	___awmod@divisor,f
  5373  1BFA  1903               	skipnz
  5374  1BFB  0AF1               	incf	___awmod@divisor+1,f
  5375  1BFC                     l2535:
  5376  1BFC  0870               	movf	___awmod@divisor,w
  5377  1BFD  0471               	iorwf	___awmod@divisor+1,w
  5378  1BFE  1903               	btfsc	3,2
  5379  1BFF  2C01               	goto	u3231
  5380  1C00  2C02               	goto	u3230
  5381  1C01                     u3231:
  5382  1C01  2C31               	goto	l2553
  5383  1C02                     u3230:
  5384  1C02                     l2537:
  5385  1C02  01F5               	clrf	___awmod@counter
  5386  1C03  0AF5               	incf	___awmod@counter,f
  5387  1C04  2C10               	goto	l2543
  5388  1C05                     l2539:
  5389  1C05  3001               	movlw	1
  5390  1C06                     u3245:
  5391  1C06  1003               	clrc
  5392  1C07  0DF0               	rlf	___awmod@divisor,f
  5393  1C08  0DF1               	rlf	___awmod@divisor+1,f
  5394  1C09  3EFF               	addlw	-1
  5395  1C0A  1D03               	skipz
  5396  1C0B  2C06               	goto	u3245
  5397  1C0C                     l2541:
  5398  1C0C  3001               	movlw	1
  5399  1C0D  00F4               	movwf	??___awmod
  5400  1C0E  0874               	movf	??___awmod,w
  5401  1C0F  07F5               	addwf	___awmod@counter,f
  5402  1C10                     l2543:
  5403  1C10  1FF1               	btfss	___awmod@divisor+1,7
  5404  1C11  2C13               	goto	u3251
  5405  1C12  2C14               	goto	u3250
  5406  1C13                     u3251:
  5407  1C13  2C05               	goto	l2539
  5408  1C14                     u3250:
  5409  1C14                     l2545:
  5410  1C14  0871               	movf	___awmod@divisor+1,w
  5411  1C15  0273               	subwf	___awmod@dividend+1,w
  5412  1C16  1D03               	skipz
  5413  1C17  2C1A               	goto	u3265
  5414  1C18  0870               	movf	___awmod@divisor,w
  5415  1C19  0272               	subwf	___awmod@dividend,w
  5416  1C1A                     u3265:
  5417  1C1A  1C03               	skipc
  5418  1C1B  2C1D               	goto	u3261
  5419  1C1C  2C1E               	goto	u3260
  5420  1C1D                     u3261:
  5421  1C1D  2C24               	goto	l2549
  5422  1C1E                     u3260:
  5423  1C1E                     l2547:
  5424  1C1E  0870               	movf	___awmod@divisor,w
  5425  1C1F  02F2               	subwf	___awmod@dividend,f
  5426  1C20  0871               	movf	___awmod@divisor+1,w
  5427  1C21  1C03               	skipc
  5428  1C22  03F3               	decf	___awmod@dividend+1,f
  5429  1C23  02F3               	subwf	___awmod@dividend+1,f
  5430  1C24                     l2549:
  5431  1C24  3001               	movlw	1
  5432  1C25                     u3275:
  5433  1C25  1003               	clrc
  5434  1C26  0CF1               	rrf	___awmod@divisor+1,f
  5435  1C27  0CF0               	rrf	___awmod@divisor,f
  5436  1C28  3EFF               	addlw	-1
  5437  1C29  1D03               	skipz
  5438  1C2A  2C25               	goto	u3275
  5439  1C2B                     l2551:
  5440  1C2B  3001               	movlw	1
  5441  1C2C  02F5               	subwf	___awmod@counter,f
  5442  1C2D  1D03               	btfss	3,2
  5443  1C2E  2C30               	goto	u3281
  5444  1C2F  2C31               	goto	u3280
  5445  1C30                     u3281:
  5446  1C30  2C14               	goto	l2545
  5447  1C31                     u3280:
  5448  1C31                     l2553:
  5449  1C31  0876               	movf	___awmod@sign,w
  5450  1C32  1903               	btfsc	3,2
  5451  1C33  2C35               	goto	u3291
  5452  1C34  2C36               	goto	u3290
  5453  1C35                     u3291:
  5454  1C35  2C3B               	goto	l2557
  5455  1C36                     u3290:
  5456  1C36                     l2555:
  5457  1C36  09F2               	comf	___awmod@dividend,f
  5458  1C37  09F3               	comf	___awmod@dividend+1,f
  5459  1C38  0AF2               	incf	___awmod@dividend,f
  5460  1C39  1903               	skipnz
  5461  1C3A  0AF3               	incf	___awmod@dividend+1,f
  5462  1C3B                     l2557:
  5463  1C3B  0873               	movf	___awmod@dividend+1,w
  5464  1C3C  00F1               	movwf	?___awmod+1
  5465  1C3D  0872               	movf	___awmod@dividend,w
  5466  1C3E  00F0               	movwf	?___awmod
  5467  1C3F                     l562:
  5468  1C3F  0008               	return
  5469  1C40                     __end_of___awmod:
  5470                           
  5471                           	psect	text11
  5472  000C                     __ptext11:	
  5473 ;; *************** function ___awdiv *****************
  5474 ;; Defined at:
  5475 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;  divisor         2    7[COMMON] int 
  5478 ;;  dividend        2    9[COMMON] int 
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;  quotient        2    2[BANK0 ] int 
  5481 ;;  sign            1    1[BANK0 ] unsigned char 
  5482 ;;  counter         1    0[BANK0 ] unsigned char 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  2    7[COMMON] int 
  5485 ;; Registers used:
  5486 ;;		wreg, status,2, status,0
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5492 ;;      Params:         4       0       0       0       0
  5493 ;;      Locals:         0       4       0       0       0
  5494 ;;      Temps:          1       0       0       0       0
  5495 ;;      Totals:         5       4       0       0       0
  5496 ;;Total ram usage:        9 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_scale
  5502 ;;		_sprintf
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           
  5507                           ;psect for function ___awdiv
  5508  000C                     ___awdiv:
  5509  000C                     l2479:	
  5510                           ;incstack = 0
  5511                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5512                           
  5513  000C  1283               	bcf	3,5	;RP0=0, select bank0
  5514  000D  1303               	bcf	3,6	;RP1=0, select bank0
  5515  000E  01A1               	clrf	___awdiv@sign
  5516  000F                     l2481:
  5517  000F  1FF8               	btfss	___awdiv@divisor+1,7
  5518  0010  2812               	goto	u3111
  5519  0011  2813               	goto	u3110
  5520  0012                     u3111:
  5521  0012  281A               	goto	l2487
  5522  0013                     u3110:
  5523  0013                     l2483:
  5524  0013  09F7               	comf	___awdiv@divisor,f
  5525  0014  09F8               	comf	___awdiv@divisor+1,f
  5526  0015  0AF7               	incf	___awdiv@divisor,f
  5527  0016  1903               	skipnz
  5528  0017  0AF8               	incf	___awdiv@divisor+1,f
  5529  0018                     l2485:
  5530  0018  01A1               	clrf	___awdiv@sign
  5531  0019  0AA1               	incf	___awdiv@sign,f
  5532  001A                     l2487:
  5533  001A  1FFA               	btfss	___awdiv@dividend+1,7
  5534  001B  281D               	goto	u3121
  5535  001C  281E               	goto	u3120
  5536  001D                     u3121:
  5537  001D  2827               	goto	l2493
  5538  001E                     u3120:
  5539  001E                     l2489:
  5540  001E  09F9               	comf	___awdiv@dividend,f
  5541  001F  09FA               	comf	___awdiv@dividend+1,f
  5542  0020  0AF9               	incf	___awdiv@dividend,f
  5543  0021  1903               	skipnz
  5544  0022  0AFA               	incf	___awdiv@dividend+1,f
  5545  0023                     l2491:
  5546  0023  3001               	movlw	1
  5547  0024  00FB               	movwf	??___awdiv
  5548  0025  087B               	movf	??___awdiv,w
  5549  0026  06A1               	xorwf	___awdiv@sign,f
  5550  0027                     l2493:
  5551  0027  01A2               	clrf	___awdiv@quotient
  5552  0028  01A3               	clrf	___awdiv@quotient+1
  5553  0029                     l2495:
  5554  0029  0877               	movf	___awdiv@divisor,w
  5555  002A  0478               	iorwf	___awdiv@divisor+1,w
  5556  002B  1903               	btfsc	3,2
  5557  002C  282E               	goto	u3131
  5558  002D  282F               	goto	u3130
  5559  002E                     u3131:
  5560  002E  2866               	goto	l2515
  5561  002F                     u3130:
  5562  002F                     l2497:
  5563  002F  01A0               	clrf	___awdiv@counter
  5564  0030  0AA0               	incf	___awdiv@counter,f
  5565  0031  283D               	goto	l2503
  5566  0032                     l2499:
  5567  0032  3001               	movlw	1
  5568  0033                     u3145:
  5569  0033  1003               	clrc
  5570  0034  0DF7               	rlf	___awdiv@divisor,f
  5571  0035  0DF8               	rlf	___awdiv@divisor+1,f
  5572  0036  3EFF               	addlw	-1
  5573  0037  1D03               	skipz
  5574  0038  2833               	goto	u3145
  5575  0039                     l2501:
  5576  0039  3001               	movlw	1
  5577  003A  00FB               	movwf	??___awdiv
  5578  003B  087B               	movf	??___awdiv,w
  5579  003C  07A0               	addwf	___awdiv@counter,f
  5580  003D                     l2503:
  5581  003D  1FF8               	btfss	___awdiv@divisor+1,7
  5582  003E  2840               	goto	u3151
  5583  003F  2841               	goto	u3150
  5584  0040                     u3151:
  5585  0040  2832               	goto	l2499
  5586  0041                     u3150:
  5587  0041                     l2505:
  5588  0041  3001               	movlw	1
  5589  0042                     u3165:
  5590  0042  1003               	clrc
  5591  0043  0DA2               	rlf	___awdiv@quotient,f
  5592  0044  0DA3               	rlf	___awdiv@quotient+1,f
  5593  0045  3EFF               	addlw	-1
  5594  0046  1D03               	skipz
  5595  0047  2842               	goto	u3165
  5596  0048  0878               	movf	___awdiv@divisor+1,w
  5597  0049  027A               	subwf	___awdiv@dividend+1,w
  5598  004A  1D03               	skipz
  5599  004B  284E               	goto	u3175
  5600  004C  0877               	movf	___awdiv@divisor,w
  5601  004D  0279               	subwf	___awdiv@dividend,w
  5602  004E                     u3175:
  5603  004E  1C03               	skipc
  5604  004F  2851               	goto	u3171
  5605  0050  2852               	goto	u3170
  5606  0051                     u3171:
  5607  0051  2859               	goto	l2511
  5608  0052                     u3170:
  5609  0052                     l2507:
  5610  0052  0877               	movf	___awdiv@divisor,w
  5611  0053  02F9               	subwf	___awdiv@dividend,f
  5612  0054  0878               	movf	___awdiv@divisor+1,w
  5613  0055  1C03               	skipc
  5614  0056  03FA               	decf	___awdiv@dividend+1,f
  5615  0057  02FA               	subwf	___awdiv@dividend+1,f
  5616  0058                     l2509:
  5617  0058  1422               	bsf	___awdiv@quotient,0
  5618  0059                     l2511:
  5619  0059  3001               	movlw	1
  5620  005A                     u3185:
  5621  005A  1003               	clrc
  5622  005B  0CF8               	rrf	___awdiv@divisor+1,f
  5623  005C  0CF7               	rrf	___awdiv@divisor,f
  5624  005D  3EFF               	addlw	-1
  5625  005E  1D03               	skipz
  5626  005F  285A               	goto	u3185
  5627  0060                     l2513:
  5628  0060  3001               	movlw	1
  5629  0061  02A0               	subwf	___awdiv@counter,f
  5630  0062  1D03               	btfss	3,2
  5631  0063  2865               	goto	u3191
  5632  0064  2866               	goto	u3190
  5633  0065                     u3191:
  5634  0065  2841               	goto	l2505
  5635  0066                     u3190:
  5636  0066                     l2515:
  5637  0066  0821               	movf	___awdiv@sign,w
  5638  0067  1903               	btfsc	3,2
  5639  0068  286A               	goto	u3201
  5640  0069  286B               	goto	u3200
  5641  006A                     u3201:
  5642  006A  2870               	goto	l2519
  5643  006B                     u3200:
  5644  006B                     l2517:
  5645  006B  09A2               	comf	___awdiv@quotient,f
  5646  006C  09A3               	comf	___awdiv@quotient+1,f
  5647  006D  0AA2               	incf	___awdiv@quotient,f
  5648  006E  1903               	skipnz
  5649  006F  0AA3               	incf	___awdiv@quotient+1,f
  5650  0070                     l2519:
  5651  0070  0823               	movf	___awdiv@quotient+1,w
  5652  0071  00F8               	movwf	?___awdiv+1
  5653  0072  0822               	movf	___awdiv@quotient,w
  5654  0073  00F7               	movwf	?___awdiv
  5655  0074                     l549:
  5656  0074  0008               	return
  5657  0075                     __end_of___awdiv:
  5658                           
  5659                           	psect	text12
  5660  1932                     __ptext12:	
  5661 ;; *************** function _isdigit *****************
  5662 ;; Defined at:
  5663 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  c               1    wreg     unsigned char 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  c               1    1[COMMON] unsigned char 
  5668 ;; Return value:  Size  Location     Type
  5669 ;;		None               void
  5670 ;; Registers used:
  5671 ;;		wreg, status,2, status,0
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5677 ;;      Params:         0       0       0       0       0
  5678 ;;      Locals:         2       0       0       0       0
  5679 ;;      Temps:          0       0       0       0       0
  5680 ;;      Totals:         2       0       0       0       0
  5681 ;;Total ram usage:        2 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; This function calls:
  5684 ;;		Nothing
  5685 ;; This function is called by:
  5686 ;;		_sprintf
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           
  5691                           ;psect for function _isdigit
  5692  1932                     _isdigit:
  5693                           
  5694                           ;incstack = 0
  5695                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5696                           ;isdigit@c stored from wreg
  5697  1932  00F1               	movwf	isdigit@c
  5698  1933                     l3021:
  5699  1933  01F0               	clrf	_isdigit$811
  5700  1934                     l3023:
  5701  1934  303A               	movlw	58
  5702  1935  0271               	subwf	isdigit@c,w
  5703  1936  1803               	skipnc
  5704  1937  2939               	goto	u4511
  5705  1938  293A               	goto	u4510
  5706  1939                     u4511:
  5707  1939  2942               	goto	l3029
  5708  193A                     u4510:
  5709  193A                     l3025:
  5710  193A  3030               	movlw	48
  5711  193B  0271               	subwf	isdigit@c,w
  5712  193C  1C03               	skipc
  5713  193D  293F               	goto	u4521
  5714  193E  2940               	goto	u4520
  5715  193F                     u4521:
  5716  193F  2942               	goto	l3029
  5717  1940                     u4520:
  5718  1940                     l3027:
  5719  1940  01F0               	clrf	_isdigit$811
  5720  1941  0AF0               	incf	_isdigit$811,f
  5721  1942                     l3029:
  5722  1942  0C70               	rrf	_isdigit$811,w
  5723  1943                     l883:
  5724  1943  0008               	return
  5725  1944                     __end_of_isdigit:
  5726                           
  5727                           	psect	text13
  5728  136D                     __ptext13:	
  5729 ;; *************** function _fround *****************
  5730 ;; Defined at:
  5731 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  prec            1    wreg     unsigned char 
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;  prec            1   49[BANK0 ] unsigned char 
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  4   30[BANK0 ] unsigned char 
  5738 ;; Registers used:
  5739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5745 ;;      Params:         0       4       0       0       0
  5746 ;;      Locals:         0       9       0       0       0
  5747 ;;      Temps:          0       7       0       0       0
  5748 ;;      Totals:         0      20       0       0       0
  5749 ;;Total ram usage:       20 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:    2
  5752 ;; This function calls:
  5753 ;;		___flmul
  5754 ;;		___lwdiv
  5755 ;;		___lwmod
  5756 ;; This function is called by:
  5757 ;;		_sprintf
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           
  5762                           ;psect for function _fround
  5763  136D                     _fround:
  5764                           
  5765                           ;incstack = 0
  5766                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5767                           ;fround@prec stored from wreg
  5768  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5769  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5770  136F  00D1               	movwf	fround@prec
  5771  1370                     l2963:
  5772                           
  5773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5774  1370  306E               	movlw	110
  5775  1371  0251               	subwf	fround@prec,w
  5776  1372  1C03               	skipc
  5777  1373  2B75               	goto	u4261
  5778  1374  2B76               	goto	u4260
  5779  1375                     u4261:
  5780  1375  2C83               	goto	l2971
  5781  1376                     u4260:
  5782  1376                     l2965:
  5783                           
  5784                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5785  1376  303F               	movlw	63
  5786  1377  00A7               	movwf	___flmul@b+3
  5787  1378  3000               	movlw	0
  5788  1379  00A6               	movwf	___flmul@b+2
  5789  137A  3000               	movlw	0
  5790  137B  00A5               	movwf	___flmul@b+1
  5791  137C  3000               	movlw	0
  5792  137D  00A4               	movwf	___flmul@b
  5793  137E  3064               	movlw	100
  5794  137F  00F6               	movwf	___lwdiv@divisor
  5795  1380  3000               	movlw	0
  5796  1381  00F7               	movwf	___lwdiv@divisor+1
  5797  1382  0851               	movf	fround@prec,w
  5798  1383  00C2               	movwf	??_fround
  5799  1384  01C3               	clrf	??_fround+1
  5800  1385  0842               	movf	??_fround,w
  5801  1386  00F8               	movwf	___lwdiv@dividend
  5802  1387  0843               	movf	??_fround+1,w
  5803  1388  00F9               	movwf	___lwdiv@dividend+1
  5804  1389  160A  158A  22B6  160A  118A  	fcall	___lwdiv
  5805  138E  0876               	movf	?___lwdiv,w
  5806  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5807  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5808  1391  00C4               	movwf	??_fround+2
  5809  1392  3001               	movlw	1
  5810  1393                     u4275:
  5811  1393  1003               	clrc
  5812  1394  0DC4               	rlf	??_fround+2,f
  5813  1395  3EFF               	addlw	-1
  5814  1396  1D03               	skipz
  5815  1397  2B93               	goto	u4275
  5816  1398  1003               	clrc
  5817  1399  0D44               	rlf	??_fround+2,w
  5818  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5819  139B  0084               	movwf	4
  5820  139C  160A  158A  200A  160A  118A  	fcall	stringdir
  5821  13A1  00C5               	movwf	??_fround+3
  5822  13A2  160A  158A  200A  160A  118A  	fcall	stringdir
  5823  13A7  00C6               	movwf	??_fround+4
  5824  13A8  160A  158A  200A  160A  118A  	fcall	stringdir
  5825  13AD  00C7               	movwf	??_fround+5
  5826  13AE  160A  158A  200A  160A  118A  	fcall	stringdir
  5827  13B3  00C8               	movwf	??_fround+6
  5828  13B4  0848               	movf	??_fround+6,w
  5829  13B5  00AB               	movwf	___flmul@a+3
  5830  13B6  0847               	movf	??_fround+5,w
  5831  13B7  00AA               	movwf	___flmul@a+2
  5832  13B8  0846               	movf	??_fround+4,w
  5833  13B9  00A9               	movwf	___flmul@a+1
  5834  13BA  0845               	movf	??_fround+3,w
  5835  13BB  00A8               	movwf	___flmul@a
  5836  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5837  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5838  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5839  13C3  0827               	movf	?___flmul+3,w
  5840  13C4  00D0               	movwf	_fround$1000+3
  5841  13C5  0826               	movf	?___flmul+2,w
  5842  13C6  00CF               	movwf	_fround$1000+2
  5843  13C7  0825               	movf	?___flmul+1,w
  5844  13C8  00CE               	movwf	_fround$1000+1
  5845  13C9  0824               	movf	?___flmul,w
  5846  13CA  00CD               	movwf	_fround$1000
  5847                           
  5848                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5849  13CB  300A               	movlw	10
  5850  13CC  00F6               	movwf	___lwdiv@divisor
  5851  13CD  3000               	movlw	0
  5852  13CE  00F7               	movwf	___lwdiv@divisor+1
  5853  13CF  0851               	movf	fround@prec,w
  5854  13D0  00C2               	movwf	??_fround
  5855  13D1  01C3               	clrf	??_fround+1
  5856  13D2  0842               	movf	??_fround,w
  5857  13D3  00F2               	movwf	___lwmod@dividend
  5858  13D4  0843               	movf	??_fround+1,w
  5859  13D5  00F3               	movwf	___lwmod@dividend+1
  5860  13D6  3064               	movlw	100
  5861  13D7  00F0               	movwf	___lwmod@divisor
  5862  13D8  3000               	movlw	0
  5863  13D9  00F1               	movwf	___lwmod@divisor+1
  5864  13DA  160A  158A  223A  160A  118A  	fcall	___lwmod
  5865  13DF  0871               	movf	?___lwmod+1,w
  5866  13E0  00F9               	movwf	___lwdiv@dividend+1
  5867  13E1  0870               	movf	?___lwmod,w
  5868  13E2  00F8               	movwf	___lwdiv@dividend
  5869  13E3  160A  158A  22B6  160A  118A  	fcall	___lwdiv
  5870  13E8  0876               	movf	?___lwdiv,w
  5871  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5872  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5873  13EB  00C4               	movwf	??_fround+2
  5874  13EC  3001               	movlw	1
  5875  13ED                     u4285:
  5876  13ED  1003               	clrc
  5877  13EE  0DC4               	rlf	??_fround+2,f
  5878  13EF  3EFF               	addlw	-1
  5879  13F0  1D03               	skipz
  5880  13F1  2BED               	goto	u4285
  5881  13F2  1003               	clrc
  5882  13F3  0D44               	rlf	??_fround+2,w
  5883  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5884  13F5  0084               	movwf	4
  5885  13F6  160A  158A  200A  160A  118A  	fcall	stringdir
  5886  13FB  00C5               	movwf	??_fround+3
  5887  13FC  160A  158A  200A  160A  118A  	fcall	stringdir
  5888  1401  00C6               	movwf	??_fround+4
  5889  1402  160A  158A  200A  160A  118A  	fcall	stringdir
  5890  1407  00C7               	movwf	??_fround+5
  5891  1408  160A  158A  200A  160A  118A  	fcall	stringdir
  5892  140D  00C8               	movwf	??_fround+6
  5893  140E  0848               	movf	??_fround+6,w
  5894  140F  00A7               	movwf	___flmul@b+3
  5895  1410  0847               	movf	??_fround+5,w
  5896  1411  00A6               	movwf	___flmul@b+2
  5897  1412  0846               	movf	??_fround+4,w
  5898  1413  00A5               	movwf	___flmul@b+1
  5899  1414  0845               	movf	??_fround+3,w
  5900  1415  00A4               	movwf	___flmul@b
  5901  1416  0850               	movf	_fround$1000+3,w
  5902  1417  00AB               	movwf	___flmul@a+3
  5903  1418  084F               	movf	_fround$1000+2,w
  5904  1419  00AA               	movwf	___flmul@a+2
  5905  141A  084E               	movf	_fround$1000+1,w
  5906  141B  00A9               	movwf	___flmul@a+1
  5907  141C  084D               	movf	_fround$1000,w
  5908  141D  00A8               	movwf	___flmul@a
  5909  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5910  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5911  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5912  1425  0827               	movf	?___flmul+3,w
  5913  1426  00CC               	movwf	_fround$1001+3
  5914  1427  0826               	movf	?___flmul+2,w
  5915  1428  00CB               	movwf	_fround$1001+2
  5916  1429  0825               	movf	?___flmul+1,w
  5917  142A  00CA               	movwf	_fround$1001+1
  5918  142B  0824               	movf	?___flmul,w
  5919  142C  00C9               	movwf	_fround$1001
  5920                           
  5921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5922  142D  300A               	movlw	10
  5923  142E  00F0               	movwf	___lwmod@divisor
  5924  142F  3000               	movlw	0
  5925  1430  00F1               	movwf	___lwmod@divisor+1
  5926  1431  0851               	movf	fround@prec,w
  5927  1432  00C2               	movwf	??_fround
  5928  1433  01C3               	clrf	??_fround+1
  5929  1434  0842               	movf	??_fround,w
  5930  1435  00F2               	movwf	___lwmod@dividend
  5931  1436  0843               	movf	??_fround+1,w
  5932  1437  00F3               	movwf	___lwmod@dividend+1
  5933  1438  160A  158A  223A  160A  118A  	fcall	___lwmod
  5934  143D  0870               	movf	?___lwmod,w
  5935  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5936  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5937  1440  00C4               	movwf	??_fround+2
  5938  1441  3001               	movlw	1
  5939  1442                     u4295:
  5940  1442  1003               	clrc
  5941  1443  0DC4               	rlf	??_fround+2,f
  5942  1444  3EFF               	addlw	-1
  5943  1445  1D03               	skipz
  5944  1446  2C42               	goto	u4295
  5945  1447  1003               	clrc
  5946  1448  0D44               	rlf	??_fround+2,w
  5947  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5948  144A  0084               	movwf	4
  5949  144B  160A  158A  200A  160A  118A  	fcall	stringdir
  5950  1450  00C5               	movwf	??_fround+3
  5951  1451  160A  158A  200A  160A  118A  	fcall	stringdir
  5952  1456  00C6               	movwf	??_fround+4
  5953  1457  160A  158A  200A  160A  118A  	fcall	stringdir
  5954  145C  00C7               	movwf	??_fround+5
  5955  145D  160A  158A  200A  160A  118A  	fcall	stringdir
  5956  1462  00C8               	movwf	??_fround+6
  5957  1463  0848               	movf	??_fround+6,w
  5958  1464  00A7               	movwf	___flmul@b+3
  5959  1465  0847               	movf	??_fround+5,w
  5960  1466  00A6               	movwf	___flmul@b+2
  5961  1467  0846               	movf	??_fround+4,w
  5962  1468  00A5               	movwf	___flmul@b+1
  5963  1469  0845               	movf	??_fround+3,w
  5964  146A  00A4               	movwf	___flmul@b
  5965  146B  084C               	movf	_fround$1001+3,w
  5966  146C  00AB               	movwf	___flmul@a+3
  5967  146D  084B               	movf	_fround$1001+2,w
  5968  146E  00AA               	movwf	___flmul@a+2
  5969  146F  084A               	movf	_fround$1001+1,w
  5970  1470  00A9               	movwf	___flmul@a+1
  5971  1471  0849               	movf	_fround$1001,w
  5972  1472  00A8               	movwf	___flmul@a
  5973  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5974  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5975  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5976  147A  0827               	movf	?___flmul+3,w
  5977  147B  00C1               	movwf	?_fround+3
  5978  147C  0826               	movf	?___flmul+2,w
  5979  147D  00C0               	movwf	?_fround+2
  5980  147E  0825               	movf	?___flmul+1,w
  5981  147F  00BF               	movwf	?_fround+1
  5982  1480  0824               	movf	?___flmul,w
  5983  1481  00BE               	movwf	?_fround
  5984  1482  2D77               	goto	l302
  5985  1483                     l2971:
  5986  1483  300B               	movlw	11
  5987  1484  0251               	subwf	fround@prec,w
  5988  1485  1C03               	skipc
  5989  1486  2C88               	goto	u4301
  5990  1487  2C89               	goto	u4300
  5991  1488                     u4301:
  5992  1488  2D34               	goto	l2977
  5993  1489                     u4300:
  5994  1489                     l2973:
  5995                           
  5996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5997  1489  303F               	movlw	63
  5998  148A  00A7               	movwf	___flmul@b+3
  5999  148B  3000               	movlw	0
  6000  148C  00A6               	movwf	___flmul@b+2
  6001  148D  3000               	movlw	0
  6002  148E  00A5               	movwf	___flmul@b+1
  6003  148F  3000               	movlw	0
  6004  1490  00A4               	movwf	___flmul@b
  6005  1491  300A               	movlw	10
  6006  1492  00F6               	movwf	___lwdiv@divisor
  6007  1493  3000               	movlw	0
  6008  1494  00F7               	movwf	___lwdiv@divisor+1
  6009  1495  0851               	movf	fround@prec,w
  6010  1496  00C2               	movwf	??_fround
  6011  1497  01C3               	clrf	??_fround+1
  6012  1498  0842               	movf	??_fround,w
  6013  1499  00F8               	movwf	___lwdiv@dividend
  6014  149A  0843               	movf	??_fround+1,w
  6015  149B  00F9               	movwf	___lwdiv@dividend+1
  6016  149C  160A  158A  22B6  160A  118A  	fcall	___lwdiv
  6017  14A1  0876               	movf	?___lwdiv,w
  6018  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  6019  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  6020  14A4  00C4               	movwf	??_fround+2
  6021  14A5  3001               	movlw	1
  6022  14A6                     u4315:
  6023  14A6  1003               	clrc
  6024  14A7  0DC4               	rlf	??_fround+2,f
  6025  14A8  3EFF               	addlw	-1
  6026  14A9  1D03               	skipz
  6027  14AA  2CA6               	goto	u4315
  6028  14AB  1003               	clrc
  6029  14AC  0D44               	rlf	??_fround+2,w
  6030  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  6031  14AE  0084               	movwf	4
  6032  14AF  160A  158A  200A  160A  118A  	fcall	stringdir
  6033  14B4  00C5               	movwf	??_fround+3
  6034  14B5  160A  158A  200A  160A  118A  	fcall	stringdir
  6035  14BA  00C6               	movwf	??_fround+4
  6036  14BB  160A  158A  200A  160A  118A  	fcall	stringdir
  6037  14C0  00C7               	movwf	??_fround+5
  6038  14C1  160A  158A  200A  160A  118A  	fcall	stringdir
  6039  14C6  00C8               	movwf	??_fround+6
  6040  14C7  0848               	movf	??_fround+6,w
  6041  14C8  00AB               	movwf	___flmul@a+3
  6042  14C9  0847               	movf	??_fround+5,w
  6043  14CA  00AA               	movwf	___flmul@a+2
  6044  14CB  0846               	movf	??_fround+4,w
  6045  14CC  00A9               	movwf	___flmul@a+1
  6046  14CD  0845               	movf	??_fround+3,w
  6047  14CE  00A8               	movwf	___flmul@a
  6048  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  6049  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  6050  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  6051  14D6  0827               	movf	?___flmul+3,w
  6052  14D7  00D0               	movwf	_fround$1000+3
  6053  14D8  0826               	movf	?___flmul+2,w
  6054  14D9  00CF               	movwf	_fround$1000+2
  6055  14DA  0825               	movf	?___flmul+1,w
  6056  14DB  00CE               	movwf	_fround$1000+1
  6057  14DC  0824               	movf	?___flmul,w
  6058  14DD  00CD               	movwf	_fround$1000
  6059                           
  6060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6061  14DE  300A               	movlw	10
  6062  14DF  00F0               	movwf	___lwmod@divisor
  6063  14E0  3000               	movlw	0
  6064  14E1  00F1               	movwf	___lwmod@divisor+1
  6065  14E2  0851               	movf	fround@prec,w
  6066  14E3  00C2               	movwf	??_fround
  6067  14E4  01C3               	clrf	??_fround+1
  6068  14E5  0842               	movf	??_fround,w
  6069  14E6  00F2               	movwf	___lwmod@dividend
  6070  14E7  0843               	movf	??_fround+1,w
  6071  14E8  00F3               	movwf	___lwmod@dividend+1
  6072  14E9  160A  158A  223A  160A  118A  	fcall	___lwmod
  6073  14EE  0870               	movf	?___lwmod,w
  6074  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  6075  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  6076  14F1  00C4               	movwf	??_fround+2
  6077  14F2  3001               	movlw	1
  6078  14F3                     u4325:
  6079  14F3  1003               	clrc
  6080  14F4  0DC4               	rlf	??_fround+2,f
  6081  14F5  3EFF               	addlw	-1
  6082  14F6  1D03               	skipz
  6083  14F7  2CF3               	goto	u4325
  6084  14F8  1003               	clrc
  6085  14F9  0D44               	rlf	??_fround+2,w
  6086  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6087  14FB  0084               	movwf	4
  6088  14FC  160A  158A  200A  160A  118A  	fcall	stringdir
  6089  1501  00C5               	movwf	??_fround+3
  6090  1502  160A  158A  200A  160A  118A  	fcall	stringdir
  6091  1507  00C6               	movwf	??_fround+4
  6092  1508  160A  158A  200A  160A  118A  	fcall	stringdir
  6093  150D  00C7               	movwf	??_fround+5
  6094  150E  160A  158A  200A  160A  118A  	fcall	stringdir
  6095  1513  00C8               	movwf	??_fround+6
  6096  1514  0848               	movf	??_fround+6,w
  6097  1515  00A7               	movwf	___flmul@b+3
  6098  1516  0847               	movf	??_fround+5,w
  6099  1517  00A6               	movwf	___flmul@b+2
  6100  1518  0846               	movf	??_fround+4,w
  6101  1519  00A5               	movwf	___flmul@b+1
  6102  151A  0845               	movf	??_fround+3,w
  6103  151B  00A4               	movwf	___flmul@b
  6104  151C  0850               	movf	_fround$1000+3,w
  6105  151D  00AB               	movwf	___flmul@a+3
  6106  151E  084F               	movf	_fround$1000+2,w
  6107  151F  00AA               	movwf	___flmul@a+2
  6108  1520  084E               	movf	_fround$1000+1,w
  6109  1521  00A9               	movwf	___flmul@a+1
  6110  1522  084D               	movf	_fround$1000,w
  6111  1523  00A8               	movwf	___flmul@a
  6112  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  6113  1529  1283               	bcf	3,5	;RP0=0, select bank0
  6114  152A  1303               	bcf	3,6	;RP1=0, select bank0
  6115  152B  0827               	movf	?___flmul+3,w
  6116  152C  00C1               	movwf	?_fround+3
  6117  152D  0826               	movf	?___flmul+2,w
  6118  152E  00C0               	movwf	?_fround+2
  6119  152F  0825               	movf	?___flmul+1,w
  6120  1530  00BF               	movwf	?_fround+1
  6121  1531  0824               	movf	?___flmul,w
  6122  1532  00BE               	movwf	?_fround
  6123  1533  2D77               	goto	l302
  6124  1534                     l2977:
  6125                           
  6126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  6127  1534  303F               	movlw	63
  6128  1535  00A7               	movwf	___flmul@b+3
  6129  1536  3000               	movlw	0
  6130  1537  00A6               	movwf	___flmul@b+2
  6131  1538  3000               	movlw	0
  6132  1539  00A5               	movwf	___flmul@b+1
  6133  153A  3000               	movlw	0
  6134  153B  00A4               	movwf	___flmul@b
  6135  153C  0851               	movf	fround@prec,w
  6136  153D  00C2               	movwf	??_fround
  6137  153E  3001               	movlw	1
  6138  153F                     u4335:
  6139  153F  1003               	clrc
  6140  1540  0DC2               	rlf	??_fround,f
  6141  1541  3EFF               	addlw	-1
  6142  1542  1D03               	skipz
  6143  1543  2D3F               	goto	u4335
  6144  1544  1003               	clrc
  6145  1545  0D42               	rlf	??_fround,w
  6146  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6147  1547  0084               	movwf	4
  6148  1548  160A  158A  200A  160A  118A  	fcall	stringdir
  6149  154D  00C3               	movwf	??_fround+1
  6150  154E  160A  158A  200A  160A  118A  	fcall	stringdir
  6151  1553  00C4               	movwf	??_fround+2
  6152  1554  160A  158A  200A  160A  118A  	fcall	stringdir
  6153  1559  00C5               	movwf	??_fround+3
  6154  155A  160A  158A  200A  160A  118A  	fcall	stringdir
  6155  155F  00C6               	movwf	??_fround+4
  6156  1560  0846               	movf	??_fround+4,w
  6157  1561  00AB               	movwf	___flmul@a+3
  6158  1562  0845               	movf	??_fround+3,w
  6159  1563  00AA               	movwf	___flmul@a+2
  6160  1564  0844               	movf	??_fround+2,w
  6161  1565  00A9               	movwf	___flmul@a+1
  6162  1566  0843               	movf	??_fround+1,w
  6163  1567  00A8               	movwf	___flmul@a
  6164  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  6165  156D  1283               	bcf	3,5	;RP0=0, select bank0
  6166  156E  1303               	bcf	3,6	;RP1=0, select bank0
  6167  156F  0827               	movf	?___flmul+3,w
  6168  1570  00C1               	movwf	?_fround+3
  6169  1571  0826               	movf	?___flmul+2,w
  6170  1572  00C0               	movwf	?_fround+2
  6171  1573  0825               	movf	?___flmul+1,w
  6172  1574  00BF               	movwf	?_fround+1
  6173  1575  0824               	movf	?___flmul,w
  6174  1576  00BE               	movwf	?_fround
  6175  1577                     l302:
  6176  1577  0008               	return
  6177  1578                     __end_of_fround:
  6178                           
  6179                           	psect	text14
  6180  1A3A                     __ptext14:	
  6181 ;; *************** function ___lwmod *****************
  6182 ;; Defined at:
  6183 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  divisor         2    0[COMMON] unsigned int 
  6186 ;;  dividend        2    2[COMMON] unsigned int 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  counter         1    5[COMMON] unsigned char 
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  2    0[COMMON] unsigned int 
  6191 ;; Registers used:
  6192 ;;		wreg, status,2, status,0
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6198 ;;      Params:         4       0       0       0       0
  6199 ;;      Locals:         1       0       0       0       0
  6200 ;;      Temps:          1       0       0       0       0
  6201 ;;      Totals:         6       0       0       0       0
  6202 ;;Total ram usage:        6 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; This function calls:
  6205 ;;		Nothing
  6206 ;; This function is called by:
  6207 ;;		_fround
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           
  6212                           ;psect for function ___lwmod
  6213  1A3A                     ___lwmod:
  6214  1A3A                     l2587:	
  6215                           ;incstack = 0
  6216                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6217                           
  6218  1A3A  0870               	movf	___lwmod@divisor,w
  6219  1A3B  0471               	iorwf	___lwmod@divisor+1,w
  6220  1A3C  1903               	btfsc	3,2
  6221  1A3D  2A3F               	goto	u3371
  6222  1A3E  2A40               	goto	u3370
  6223  1A3F                     u3371:
  6224  1A3F  2A6F               	goto	l2605
  6225  1A40                     u3370:
  6226  1A40                     l2589:
  6227  1A40  01F5               	clrf	___lwmod@counter
  6228  1A41  0AF5               	incf	___lwmod@counter,f
  6229  1A42  2A4E               	goto	l2595
  6230  1A43                     l2591:
  6231  1A43  3001               	movlw	1
  6232  1A44                     u3385:
  6233  1A44  1003               	clrc
  6234  1A45  0DF0               	rlf	___lwmod@divisor,f
  6235  1A46  0DF1               	rlf	___lwmod@divisor+1,f
  6236  1A47  3EFF               	addlw	-1
  6237  1A48  1D03               	skipz
  6238  1A49  2A44               	goto	u3385
  6239  1A4A                     l2593:
  6240  1A4A  3001               	movlw	1
  6241  1A4B  00F4               	movwf	??___lwmod
  6242  1A4C  0874               	movf	??___lwmod,w
  6243  1A4D  07F5               	addwf	___lwmod@counter,f
  6244  1A4E                     l2595:
  6245  1A4E  1FF1               	btfss	___lwmod@divisor+1,7
  6246  1A4F  2A51               	goto	u3391
  6247  1A50  2A52               	goto	u3390
  6248  1A51                     u3391:
  6249  1A51  2A43               	goto	l2591
  6250  1A52                     u3390:
  6251  1A52                     l2597:
  6252  1A52  0871               	movf	___lwmod@divisor+1,w
  6253  1A53  0273               	subwf	___lwmod@dividend+1,w
  6254  1A54  1D03               	skipz
  6255  1A55  2A58               	goto	u3405
  6256  1A56  0870               	movf	___lwmod@divisor,w
  6257  1A57  0272               	subwf	___lwmod@dividend,w
  6258  1A58                     u3405:
  6259  1A58  1C03               	skipc
  6260  1A59  2A5B               	goto	u3401
  6261  1A5A  2A5C               	goto	u3400
  6262  1A5B                     u3401:
  6263  1A5B  2A62               	goto	l2601
  6264  1A5C                     u3400:
  6265  1A5C                     l2599:
  6266  1A5C  0870               	movf	___lwmod@divisor,w
  6267  1A5D  02F2               	subwf	___lwmod@dividend,f
  6268  1A5E  0871               	movf	___lwmod@divisor+1,w
  6269  1A5F  1C03               	skipc
  6270  1A60  03F3               	decf	___lwmod@dividend+1,f
  6271  1A61  02F3               	subwf	___lwmod@dividend+1,f
  6272  1A62                     l2601:
  6273  1A62  3001               	movlw	1
  6274  1A63                     u3415:
  6275  1A63  1003               	clrc
  6276  1A64  0CF1               	rrf	___lwmod@divisor+1,f
  6277  1A65  0CF0               	rrf	___lwmod@divisor,f
  6278  1A66  3EFF               	addlw	-1
  6279  1A67  1D03               	skipz
  6280  1A68  2A63               	goto	u3415
  6281  1A69                     l2603:
  6282  1A69  3001               	movlw	1
  6283  1A6A  02F5               	subwf	___lwmod@counter,f
  6284  1A6B  1D03               	btfss	3,2
  6285  1A6C  2A6E               	goto	u3421
  6286  1A6D  2A6F               	goto	u3420
  6287  1A6E                     u3421:
  6288  1A6E  2A52               	goto	l2597
  6289  1A6F                     u3420:
  6290  1A6F                     l2605:
  6291  1A6F  0873               	movf	___lwmod@dividend+1,w
  6292  1A70  00F1               	movwf	?___lwmod+1
  6293  1A71  0872               	movf	___lwmod@dividend,w
  6294  1A72  00F0               	movwf	?___lwmod
  6295  1A73                     l712:
  6296  1A73  0008               	return
  6297  1A74                     __end_of___lwmod:
  6298                           
  6299                           	psect	text15
  6300  1AB6                     __ptext15:	
  6301 ;; *************** function ___lwdiv *****************
  6302 ;; Defined at:
  6303 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;  divisor         2    6[COMMON] unsigned int 
  6306 ;;  dividend        2    8[COMMON] unsigned int 
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;  quotient        2   11[COMMON] unsigned int 
  6309 ;;  counter         1   13[COMMON] unsigned char 
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  2    6[COMMON] unsigned int 
  6312 ;; Registers used:
  6313 ;;		wreg, status,2, status,0
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6319 ;;      Params:         4       0       0       0       0
  6320 ;;      Locals:         3       0       0       0       0
  6321 ;;      Temps:          1       0       0       0       0
  6322 ;;      Totals:         8       0       0       0       0
  6323 ;;Total ram usage:        8 bytes
  6324 ;; Hardware stack levels used:    1
  6325 ;; This function calls:
  6326 ;;		Nothing
  6327 ;; This function is called by:
  6328 ;;		_fround
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           
  6332                           
  6333                           ;psect for function ___lwdiv
  6334  1AB6                     ___lwdiv:
  6335  1AB6                     l2561:	
  6336                           ;incstack = 0
  6337                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6338                           
  6339  1AB6  01FB               	clrf	___lwdiv@quotient
  6340  1AB7  01FC               	clrf	___lwdiv@quotient+1
  6341  1AB8                     l2563:
  6342  1AB8  0876               	movf	___lwdiv@divisor,w
  6343  1AB9  0477               	iorwf	___lwdiv@divisor+1,w
  6344  1ABA  1903               	btfsc	3,2
  6345  1ABB  2ABD               	goto	u3301
  6346  1ABC  2ABE               	goto	u3300
  6347  1ABD                     u3301:
  6348  1ABD  2AF5               	goto	l2583
  6349  1ABE                     u3300:
  6350  1ABE                     l2565:
  6351  1ABE  01FD               	clrf	___lwdiv@counter
  6352  1ABF  0AFD               	incf	___lwdiv@counter,f
  6353  1AC0  2ACC               	goto	l2571
  6354  1AC1                     l2567:
  6355  1AC1  3001               	movlw	1
  6356  1AC2                     u3315:
  6357  1AC2  1003               	clrc
  6358  1AC3  0DF6               	rlf	___lwdiv@divisor,f
  6359  1AC4  0DF7               	rlf	___lwdiv@divisor+1,f
  6360  1AC5  3EFF               	addlw	-1
  6361  1AC6  1D03               	skipz
  6362  1AC7  2AC2               	goto	u3315
  6363  1AC8                     l2569:
  6364  1AC8  3001               	movlw	1
  6365  1AC9  00FA               	movwf	??___lwdiv
  6366  1ACA  087A               	movf	??___lwdiv,w
  6367  1ACB  07FD               	addwf	___lwdiv@counter,f
  6368  1ACC                     l2571:
  6369  1ACC  1FF7               	btfss	___lwdiv@divisor+1,7
  6370  1ACD  2ACF               	goto	u3321
  6371  1ACE  2AD0               	goto	u3320
  6372  1ACF                     u3321:
  6373  1ACF  2AC1               	goto	l2567
  6374  1AD0                     u3320:
  6375  1AD0                     l2573:
  6376  1AD0  3001               	movlw	1
  6377  1AD1                     u3335:
  6378  1AD1  1003               	clrc
  6379  1AD2  0DFB               	rlf	___lwdiv@quotient,f
  6380  1AD3  0DFC               	rlf	___lwdiv@quotient+1,f
  6381  1AD4  3EFF               	addlw	-1
  6382  1AD5  1D03               	skipz
  6383  1AD6  2AD1               	goto	u3335
  6384  1AD7  0877               	movf	___lwdiv@divisor+1,w
  6385  1AD8  0279               	subwf	___lwdiv@dividend+1,w
  6386  1AD9  1D03               	skipz
  6387  1ADA  2ADD               	goto	u3345
  6388  1ADB  0876               	movf	___lwdiv@divisor,w
  6389  1ADC  0278               	subwf	___lwdiv@dividend,w
  6390  1ADD                     u3345:
  6391  1ADD  1C03               	skipc
  6392  1ADE  2AE0               	goto	u3341
  6393  1ADF  2AE1               	goto	u3340
  6394  1AE0                     u3341:
  6395  1AE0  2AE8               	goto	l2579
  6396  1AE1                     u3340:
  6397  1AE1                     l2575:
  6398  1AE1  0876               	movf	___lwdiv@divisor,w
  6399  1AE2  02F8               	subwf	___lwdiv@dividend,f
  6400  1AE3  0877               	movf	___lwdiv@divisor+1,w
  6401  1AE4  1C03               	skipc
  6402  1AE5  03F9               	decf	___lwdiv@dividend+1,f
  6403  1AE6  02F9               	subwf	___lwdiv@dividend+1,f
  6404  1AE7                     l2577:
  6405  1AE7  147B               	bsf	___lwdiv@quotient,0
  6406  1AE8                     l2579:
  6407  1AE8  3001               	movlw	1
  6408  1AE9                     u3355:
  6409  1AE9  1003               	clrc
  6410  1AEA  0CF7               	rrf	___lwdiv@divisor+1,f
  6411  1AEB  0CF6               	rrf	___lwdiv@divisor,f
  6412  1AEC  3EFF               	addlw	-1
  6413  1AED  1D03               	skipz
  6414  1AEE  2AE9               	goto	u3355
  6415  1AEF                     l2581:
  6416  1AEF  3001               	movlw	1
  6417  1AF0  02FD               	subwf	___lwdiv@counter,f
  6418  1AF1  1D03               	btfss	3,2
  6419  1AF2  2AF4               	goto	u3361
  6420  1AF3  2AF5               	goto	u3360
  6421  1AF4                     u3361:
  6422  1AF4  2AD0               	goto	l2573
  6423  1AF5                     u3360:
  6424  1AF5                     l2583:
  6425  1AF5  087C               	movf	___lwdiv@quotient+1,w
  6426  1AF6  00F7               	movwf	?___lwdiv+1
  6427  1AF7  087B               	movf	___lwdiv@quotient,w
  6428  1AF8  00F6               	movwf	?___lwdiv
  6429  1AF9                     l702:
  6430  1AF9  0008               	return
  6431  1AFA                     __end_of___lwdiv:
  6432                           
  6433                           	psect	text16
  6434  10D3                     __ptext16:	
  6435 ;; *************** function __tdiv_to_l_ *****************
  6436 ;; Defined at:
  6437 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;  f1              4    0[COMMON] float 
  6440 ;;  f2              4    4[COMMON] float 
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;  quot            4    0[BANK0 ] unsigned long 
  6443 ;;  exp1            1    5[BANK0 ] unsigned char 
  6444 ;;  cntr            1    4[BANK0 ] unsigned char 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  4    0[COMMON] unsigned long 
  6447 ;; Registers used:
  6448 ;;		wreg, status,2, status,0
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6454 ;;      Params:         8       0       0       0       0
  6455 ;;      Locals:         0       6       0       0       0
  6456 ;;      Temps:          4       0       0       0       0
  6457 ;;      Totals:        12       6       0       0       0
  6458 ;;Total ram usage:       18 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; This function calls:
  6461 ;;		Nothing
  6462 ;; This function is called by:
  6463 ;;		_sprintf
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           
  6468                           ;psect for function __tdiv_to_l_
  6469  10D3                     __tdiv_to_l_:
  6470  10D3                     l3033:	
  6471                           ;incstack = 0
  6472                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6473                           
  6474  10D3  0870               	movf	__tdiv_to_l_@f1,w
  6475  10D4  00F8               	movwf	??__tdiv_to_l_
  6476  10D5  0871               	movf	__tdiv_to_l_@f1+1,w
  6477  10D6  00F9               	movwf	??__tdiv_to_l_+1
  6478  10D7  0872               	movf	__tdiv_to_l_@f1+2,w
  6479  10D8  00FA               	movwf	??__tdiv_to_l_+2
  6480  10D9  1003               	clrc
  6481  10DA  0D79               	rlf	??__tdiv_to_l_+1,w
  6482  10DB  0D7A               	rlf	??__tdiv_to_l_+2,w
  6483  10DC  00FB               	movwf	??__tdiv_to_l_+3
  6484  10DD  087B               	movf	??__tdiv_to_l_+3,w
  6485  10DE  1283               	bcf	3,5	;RP0=0, select bank0
  6486  10DF  1303               	bcf	3,6	;RP1=0, select bank0
  6487  10E0  00A5               	movwf	__tdiv_to_l_@exp1
  6488  10E1  0825               	movf	__tdiv_to_l_@exp1,w
  6489  10E2  1D03               	btfss	3,2
  6490  10E3  28E5               	goto	u4531
  6491  10E4  28E6               	goto	u4530
  6492  10E5                     u4531:
  6493  10E5  28EF               	goto	l3039
  6494  10E6                     u4530:
  6495  10E6                     l3035:
  6496  10E6  3000               	movlw	0
  6497  10E7  00F3               	movwf	?__tdiv_to_l_+3
  6498  10E8  3000               	movlw	0
  6499  10E9  00F2               	movwf	?__tdiv_to_l_+2
  6500  10EA  3000               	movlw	0
  6501  10EB  00F1               	movwf	?__tdiv_to_l_+1
  6502  10EC  3000               	movlw	0
  6503  10ED  00F0               	movwf	?__tdiv_to_l_
  6504  10EE  298F               	goto	l613
  6505  10EF                     l3039:
  6506  10EF  0874               	movf	__tdiv_to_l_@f2,w
  6507  10F0  00F8               	movwf	??__tdiv_to_l_
  6508  10F1  0875               	movf	__tdiv_to_l_@f2+1,w
  6509  10F2  00F9               	movwf	??__tdiv_to_l_+1
  6510  10F3  0876               	movf	__tdiv_to_l_@f2+2,w
  6511  10F4  00FA               	movwf	??__tdiv_to_l_+2
  6512  10F5  1003               	clrc
  6513  10F6  0D79               	rlf	??__tdiv_to_l_+1,w
  6514  10F7  0D7A               	rlf	??__tdiv_to_l_+2,w
  6515  10F8  00FB               	movwf	??__tdiv_to_l_+3
  6516  10F9  087B               	movf	??__tdiv_to_l_+3,w
  6517  10FA  00A4               	movwf	__tdiv_to_l_@cntr
  6518  10FB  0824               	movf	__tdiv_to_l_@cntr,w
  6519  10FC  1D03               	btfss	3,2
  6520  10FD  28FF               	goto	u4541
  6521  10FE  2900               	goto	u4540
  6522  10FF                     u4541:
  6523  10FF  2901               	goto	l614
  6524  1100                     u4540:
  6525  1100  28E6               	goto	l3035
  6526  1101                     l614:
  6527  1101  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6528  1102                     l3045:
  6529  1102  30FF               	movlw	255
  6530  1103  05F0               	andwf	__tdiv_to_l_@f1,f
  6531  1104  30FF               	movlw	255
  6532  1105  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6533  1106  3000               	movlw	0
  6534  1107  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6535  1108                     l3047:
  6536  1108  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6537  1109  30FF               	movlw	255
  6538  110A  05F4               	andwf	__tdiv_to_l_@f2,f
  6539  110B  30FF               	movlw	255
  6540  110C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6541  110D  3000               	movlw	0
  6542  110E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6543  110F  3000               	movlw	0
  6544  1110  00A3               	movwf	__tdiv_to_l_@quot+3
  6545  1111  3000               	movlw	0
  6546  1112  00A2               	movwf	__tdiv_to_l_@quot+2
  6547  1113  3000               	movlw	0
  6548  1114  00A1               	movwf	__tdiv_to_l_@quot+1
  6549  1115  3000               	movlw	0
  6550  1116  00A0               	movwf	__tdiv_to_l_@quot
  6551  1117                     l3049:
  6552  1117  307F               	movlw	127
  6553  1118  02A5               	subwf	__tdiv_to_l_@exp1,f
  6554  1119                     l3051:
  6555  1119  3098               	movlw	152
  6556  111A  0724               	addwf	__tdiv_to_l_@cntr,w
  6557  111B  00F8               	movwf	??__tdiv_to_l_
  6558  111C  0878               	movf	??__tdiv_to_l_,w
  6559  111D  02A5               	subwf	__tdiv_to_l_@exp1,f
  6560  111E  3018               	movlw	24
  6561  111F  00F8               	movwf	??__tdiv_to_l_
  6562  1120  0878               	movf	??__tdiv_to_l_,w
  6563  1121  00A4               	movwf	__tdiv_to_l_@cntr
  6564  1122                     l3053:
  6565  1122  3001               	movlw	1
  6566  1123  00F8               	movwf	??__tdiv_to_l_
  6567  1124                     u4555:
  6568  1124  1003               	clrc
  6569  1125  0DA0               	rlf	__tdiv_to_l_@quot,f
  6570  1126  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6571  1127  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6572  1128  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6573  1129  0BF8               	decfsz	??__tdiv_to_l_,f
  6574  112A  2924               	goto	u4555
  6575  112B                     l3055:
  6576  112B  0876               	movf	__tdiv_to_l_@f2+2,w
  6577  112C  0272               	subwf	__tdiv_to_l_@f1+2,w
  6578  112D  1D03               	skipz
  6579  112E  2935               	goto	u4565
  6580  112F  0875               	movf	__tdiv_to_l_@f2+1,w
  6581  1130  0271               	subwf	__tdiv_to_l_@f1+1,w
  6582  1131  1D03               	skipz
  6583  1132  2935               	goto	u4565
  6584  1133  0874               	movf	__tdiv_to_l_@f2,w
  6585  1134  0270               	subwf	__tdiv_to_l_@f1,w
  6586  1135                     u4565:
  6587  1135  1C03               	skipc
  6588  1136  2938               	goto	u4561
  6589  1137  2939               	goto	u4560
  6590  1138                     u4561:
  6591  1138  2944               	goto	l3061
  6592  1139                     u4560:
  6593  1139                     l3057:
  6594  1139  0874               	movf	__tdiv_to_l_@f2,w
  6595  113A  02F0               	subwf	__tdiv_to_l_@f1,f
  6596  113B  0875               	movf	__tdiv_to_l_@f2+1,w
  6597  113C  1C03               	skipc
  6598  113D  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6599  113E  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6600  113F  0876               	movf	__tdiv_to_l_@f2+2,w
  6601  1140  1C03               	skipc
  6602  1141  0A76               	incf	__tdiv_to_l_@f2+2,w
  6603  1142  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6604  1143                     l3059:
  6605  1143  1420               	bsf	__tdiv_to_l_@quot,0
  6606  1144                     l3061:
  6607  1144  3001               	movlw	1
  6608  1145                     u4575:
  6609  1145  1003               	clrc
  6610  1146  0DF0               	rlf	__tdiv_to_l_@f1,f
  6611  1147  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6612  1148  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6613  1149  3EFF               	addlw	-1
  6614  114A  1D03               	skipz
  6615  114B  2945               	goto	u4575
  6616  114C                     l3063:
  6617  114C  3001               	movlw	1
  6618  114D  02A4               	subwf	__tdiv_to_l_@cntr,f
  6619  114E  1D03               	btfss	3,2
  6620  114F  2951               	goto	u4581
  6621  1150  2952               	goto	u4580
  6622  1151                     u4581:
  6623  1151  2922               	goto	l3053
  6624  1152                     u4580:
  6625  1152                     l617:
  6626  1152  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6627  1153  2955               	goto	u4591
  6628  1154  2956               	goto	u4590
  6629  1155                     u4591:
  6630  1155  2970               	goto	l3073
  6631  1156                     u4590:
  6632  1156                     l3065:
  6633  1156  0825               	movf	__tdiv_to_l_@exp1,w
  6634  1157  3A80               	xorlw	128
  6635  1158  3E97               	addlw	151
  6636  1159  1803               	skipnc
  6637  115A  295C               	goto	u4601
  6638  115B  295D               	goto	u4600
  6639  115C                     u4601:
  6640  115C  295E               	goto	l3071
  6641  115D                     u4600:
  6642  115D  28E6               	goto	l3035
  6643  115E                     l3071:
  6644  115E  3001               	movlw	1
  6645  115F                     u4615:
  6646  115F  1003               	clrc
  6647  1160  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6648  1161  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6649  1162  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6650  1163  0CA0               	rrf	__tdiv_to_l_@quot,f
  6651  1164  3EFF               	addlw	-1
  6652  1165  1D03               	skipz
  6653  1166  295F               	goto	u4615
  6654  1167  3001               	movlw	1
  6655  1168  00F8               	movwf	??__tdiv_to_l_
  6656  1169  0878               	movf	??__tdiv_to_l_,w
  6657  116A  07A5               	addwf	__tdiv_to_l_@exp1,f
  6658  116B  1D03               	btfss	3,2
  6659  116C  296E               	goto	u4621
  6660  116D  296F               	goto	u4620
  6661  116E                     u4621:
  6662  116E  295E               	goto	l3071
  6663  116F                     u4620:
  6664  116F  2987               	goto	l3081
  6665  1170                     l3073:
  6666  1170  3018               	movlw	24
  6667  1171  0225               	subwf	__tdiv_to_l_@exp1,w
  6668  1172  1C03               	skipc
  6669  1173  2975               	goto	u4631
  6670  1174  2976               	goto	u4630
  6671  1175                     u4631:
  6672  1175  2982               	goto	l624
  6673  1176                     u4630:
  6674  1176  28E6               	goto	l3035
  6675  1177                     l3079:
  6676  1177  3001               	movlw	1
  6677  1178  00F8               	movwf	??__tdiv_to_l_
  6678  1179                     u4645:
  6679  1179  1003               	clrc
  6680  117A  0DA0               	rlf	__tdiv_to_l_@quot,f
  6681  117B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6682  117C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6683  117D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6684  117E  0BF8               	decfsz	??__tdiv_to_l_,f
  6685  117F  2979               	goto	u4645
  6686  1180  3001               	movlw	1
  6687  1181  02A5               	subwf	__tdiv_to_l_@exp1,f
  6688  1182                     l624:
  6689  1182  0825               	movf	__tdiv_to_l_@exp1,w
  6690  1183  1D03               	btfss	3,2
  6691  1184  2986               	goto	u4651
  6692  1185  2987               	goto	u4650
  6693  1186                     u4651:
  6694  1186  2977               	goto	l3079
  6695  1187                     u4650:
  6696  1187                     l3081:
  6697  1187  0823               	movf	__tdiv_to_l_@quot+3,w
  6698  1188  00F3               	movwf	?__tdiv_to_l_+3
  6699  1189  0822               	movf	__tdiv_to_l_@quot+2,w
  6700  118A  00F2               	movwf	?__tdiv_to_l_+2
  6701  118B  0821               	movf	__tdiv_to_l_@quot+1,w
  6702  118C  00F1               	movwf	?__tdiv_to_l_+1
  6703  118D  0820               	movf	__tdiv_to_l_@quot,w
  6704  118E  00F0               	movwf	?__tdiv_to_l_
  6705  118F                     l613:
  6706  118F  0008               	return
  6707  1190                     __end_of__tdiv_to_l_:
  6708                           
  6709                           	psect	text17
  6710  0882                     __ptext17:	
  6711 ;; *************** function __div_to_l_ *****************
  6712 ;; Defined at:
  6713 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  f1              4    0[COMMON] unsigned long 
  6716 ;;  f2              4    4[COMMON] unsigned long 
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;  quot            4    0[BANK0 ] unsigned long 
  6719 ;;  exp1            1    5[BANK0 ] unsigned char 
  6720 ;;  cntr            1    4[BANK0 ] unsigned char 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  4    0[COMMON] unsigned long 
  6723 ;; Registers used:
  6724 ;;		wreg, status,2, status,0
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6730 ;;      Params:         8       0       0       0       0
  6731 ;;      Locals:         0       6       0       0       0
  6732 ;;      Temps:          1       0       0       0       0
  6733 ;;      Totals:         9       6       0       0       0
  6734 ;;Total ram usage:       15 bytes
  6735 ;; Hardware stack levels used:    1
  6736 ;; This function calls:
  6737 ;;		Nothing
  6738 ;; This function is called by:
  6739 ;;		_sprintf
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           
  6744                           ;psect for function __div_to_l_
  6745  0882                     __div_to_l_:
  6746  0882                     l3085:	
  6747                           ;incstack = 0
  6748                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6749                           
  6750  0882  1003               	clrc
  6751  0883  0D72               	rlf	__div_to_l_@f1+2,w
  6752  0884  0D73               	rlf	__div_to_l_@f1+3,w
  6753  0885  00F8               	movwf	??__div_to_l_
  6754  0886  0878               	movf	??__div_to_l_,w
  6755  0887  1283               	bcf	3,5	;RP0=0, select bank0
  6756  0888  1303               	bcf	3,6	;RP1=0, select bank0
  6757  0889  00A5               	movwf	__div_to_l_@exp1
  6758  088A  0825               	movf	__div_to_l_@exp1,w
  6759  088B  1D03               	btfss	3,2
  6760  088C  288E               	goto	u4661
  6761  088D  288F               	goto	u4660
  6762  088E                     u4661:
  6763  088E  2898               	goto	l3091
  6764  088F                     u4660:
  6765  088F                     l3087:
  6766  088F  3000               	movlw	0
  6767  0890  00F3               	movwf	?__div_to_l_+3
  6768  0891  3000               	movlw	0
  6769  0892  00F2               	movwf	?__div_to_l_+2
  6770  0893  3000               	movlw	0
  6771  0894  00F1               	movwf	?__div_to_l_+1
  6772  0895  3000               	movlw	0
  6773  0896  00F0               	movwf	?__div_to_l_
  6774  0897  293F               	goto	l566
  6775  0898                     l3091:
  6776  0898  1003               	clrc
  6777  0899  0D76               	rlf	__div_to_l_@f2+2,w
  6778  089A  0D77               	rlf	__div_to_l_@f2+3,w
  6779  089B  00F8               	movwf	??__div_to_l_
  6780  089C  0878               	movf	??__div_to_l_,w
  6781  089D  00A4               	movwf	__div_to_l_@cntr
  6782  089E  0824               	movf	__div_to_l_@cntr,w
  6783  089F  1D03               	btfss	3,2
  6784  08A0  28A2               	goto	u4671
  6785  08A1  28A3               	goto	u4670
  6786  08A2                     u4671:
  6787  08A2  28A4               	goto	l567
  6788  08A3                     u4670:
  6789  08A3  288F               	goto	l3087
  6790  08A4                     l567:
  6791  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  6792  08A5                     l3097:
  6793  08A5  30FF               	movlw	255
  6794  08A6  05F0               	andwf	__div_to_l_@f1,f
  6795  08A7  30FF               	movlw	255
  6796  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  6797  08A9  30FF               	movlw	255
  6798  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  6799  08AB  3000               	movlw	0
  6800  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  6801  08AD                     l3099:
  6802  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  6803  08AE  30FF               	movlw	255
  6804  08AF  05F4               	andwf	__div_to_l_@f2,f
  6805  08B0  30FF               	movlw	255
  6806  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  6807  08B2  30FF               	movlw	255
  6808  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  6809  08B4  3000               	movlw	0
  6810  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  6811  08B6  3000               	movlw	0
  6812  08B7  00A3               	movwf	__div_to_l_@quot+3
  6813  08B8  3000               	movlw	0
  6814  08B9  00A2               	movwf	__div_to_l_@quot+2
  6815  08BA  3000               	movlw	0
  6816  08BB  00A1               	movwf	__div_to_l_@quot+1
  6817  08BC  3000               	movlw	0
  6818  08BD  00A0               	movwf	__div_to_l_@quot
  6819  08BE                     l3101:
  6820  08BE  307F               	movlw	127
  6821  08BF  02A5               	subwf	__div_to_l_@exp1,f
  6822  08C0                     l3103:
  6823  08C0  30A0               	movlw	160
  6824  08C1  0724               	addwf	__div_to_l_@cntr,w
  6825  08C2  00F8               	movwf	??__div_to_l_
  6826  08C3  0878               	movf	??__div_to_l_,w
  6827  08C4  02A5               	subwf	__div_to_l_@exp1,f
  6828  08C5  3020               	movlw	32
  6829  08C6  00F8               	movwf	??__div_to_l_
  6830  08C7  0878               	movf	??__div_to_l_,w
  6831  08C8  00A4               	movwf	__div_to_l_@cntr
  6832  08C9                     l3105:
  6833  08C9  3001               	movlw	1
  6834  08CA  00F8               	movwf	??__div_to_l_
  6835  08CB                     u4685:
  6836  08CB  1003               	clrc
  6837  08CC  0DA0               	rlf	__div_to_l_@quot,f
  6838  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  6839  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  6840  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  6841  08D0  0BF8               	decfsz	??__div_to_l_,f
  6842  08D1  28CB               	goto	u4685
  6843  08D2                     l3107:
  6844  08D2  0877               	movf	__div_to_l_@f2+3,w
  6845  08D3  0273               	subwf	__div_to_l_@f1+3,w
  6846  08D4  1D03               	skipz
  6847  08D5  28E0               	goto	u4695
  6848  08D6  0876               	movf	__div_to_l_@f2+2,w
  6849  08D7  0272               	subwf	__div_to_l_@f1+2,w
  6850  08D8  1D03               	skipz
  6851  08D9  28E0               	goto	u4695
  6852  08DA  0875               	movf	__div_to_l_@f2+1,w
  6853  08DB  0271               	subwf	__div_to_l_@f1+1,w
  6854  08DC  1D03               	skipz
  6855  08DD  28E0               	goto	u4695
  6856  08DE  0874               	movf	__div_to_l_@f2,w
  6857  08DF  0270               	subwf	__div_to_l_@f1,w
  6858  08E0                     u4695:
  6859  08E0  1C03               	skipc
  6860  08E1  28E3               	goto	u4691
  6861  08E2  28E4               	goto	u4690
  6862  08E3                     u4691:
  6863  08E3  28F3               	goto	l3113
  6864  08E4                     u4690:
  6865  08E4                     l3109:
  6866  08E4  0874               	movf	__div_to_l_@f2,w
  6867  08E5  02F0               	subwf	__div_to_l_@f1,f
  6868  08E6  0875               	movf	__div_to_l_@f2+1,w
  6869  08E7  1C03               	skipc
  6870  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  6871  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  6872  08EA  0876               	movf	__div_to_l_@f2+2,w
  6873  08EB  1C03               	skipc
  6874  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  6875  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  6876  08EE  0877               	movf	__div_to_l_@f2+3,w
  6877  08EF  1C03               	skipc
  6878  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  6879  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  6880  08F2                     l3111:
  6881  08F2  1420               	bsf	__div_to_l_@quot,0
  6882  08F3                     l3113:
  6883  08F3  3001               	movlw	1
  6884  08F4  00F8               	movwf	??__div_to_l_
  6885  08F5                     u4705:
  6886  08F5  1003               	clrc
  6887  08F6  0DF0               	rlf	__div_to_l_@f1,f
  6888  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  6889  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  6890  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  6891  08FA  0BF8               	decfsz	??__div_to_l_,f
  6892  08FB  28F5               	goto	u4705
  6893  08FC                     l3115:
  6894  08FC  3001               	movlw	1
  6895  08FD  02A4               	subwf	__div_to_l_@cntr,f
  6896  08FE  1D03               	btfss	3,2
  6897  08FF  2901               	goto	u4711
  6898  0900  2902               	goto	u4710
  6899  0901                     u4711:
  6900  0901  28C9               	goto	l3105
  6901  0902                     u4710:
  6902  0902                     l570:
  6903  0902  1FA5               	btfss	__div_to_l_@exp1,7
  6904  0903  2905               	goto	u4721
  6905  0904  2906               	goto	u4720
  6906  0905                     u4721:
  6907  0905  2920               	goto	l3125
  6908  0906                     u4720:
  6909  0906                     l3117:
  6910  0906  0825               	movf	__div_to_l_@exp1,w
  6911  0907  3A80               	xorlw	128
  6912  0908  3E9F               	addlw	159
  6913  0909  1803               	skipnc
  6914  090A  290C               	goto	u4731
  6915  090B  290D               	goto	u4730
  6916  090C                     u4731:
  6917  090C  290E               	goto	l3123
  6918  090D                     u4730:
  6919  090D  288F               	goto	l3087
  6920  090E                     l3123:
  6921  090E  3001               	movlw	1
  6922  090F                     u4745:
  6923  090F  1003               	clrc
  6924  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  6925  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  6926  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  6927  0913  0CA0               	rrf	__div_to_l_@quot,f
  6928  0914  3EFF               	addlw	-1
  6929  0915  1D03               	skipz
  6930  0916  290F               	goto	u4745
  6931  0917  3001               	movlw	1
  6932  0918  00F8               	movwf	??__div_to_l_
  6933  0919  0878               	movf	??__div_to_l_,w
  6934  091A  07A5               	addwf	__div_to_l_@exp1,f
  6935  091B  1D03               	btfss	3,2
  6936  091C  291E               	goto	u4751
  6937  091D  291F               	goto	u4750
  6938  091E                     u4751:
  6939  091E  290E               	goto	l3123
  6940  091F                     u4750:
  6941  091F  2937               	goto	l3133
  6942  0920                     l3125:
  6943  0920  3020               	movlw	32
  6944  0921  0225               	subwf	__div_to_l_@exp1,w
  6945  0922  1C03               	skipc
  6946  0923  2925               	goto	u4761
  6947  0924  2926               	goto	u4760
  6948  0925                     u4761:
  6949  0925  2932               	goto	l577
  6950  0926                     u4760:
  6951  0926  288F               	goto	l3087
  6952  0927                     l3131:
  6953  0927  3001               	movlw	1
  6954  0928  00F8               	movwf	??__div_to_l_
  6955  0929                     u4775:
  6956  0929  1003               	clrc
  6957  092A  0DA0               	rlf	__div_to_l_@quot,f
  6958  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  6959  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  6960  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  6961  092E  0BF8               	decfsz	??__div_to_l_,f
  6962  092F  2929               	goto	u4775
  6963  0930  3001               	movlw	1
  6964  0931  02A5               	subwf	__div_to_l_@exp1,f
  6965  0932                     l577:
  6966  0932  0825               	movf	__div_to_l_@exp1,w
  6967  0933  1D03               	btfss	3,2
  6968  0934  2936               	goto	u4781
  6969  0935  2937               	goto	u4780
  6970  0936                     u4781:
  6971  0936  2927               	goto	l3131
  6972  0937                     u4780:
  6973  0937                     l3133:
  6974  0937  0823               	movf	__div_to_l_@quot+3,w
  6975  0938  00F3               	movwf	?__div_to_l_+3
  6976  0939  0822               	movf	__div_to_l_@quot+2,w
  6977  093A  00F2               	movwf	?__div_to_l_+2
  6978  093B  0821               	movf	__div_to_l_@quot+1,w
  6979  093C  00F1               	movwf	?__div_to_l_+1
  6980  093D  0820               	movf	__div_to_l_@quot,w
  6981  093E  00F0               	movwf	?__div_to_l_
  6982  093F                     l566:
  6983  093F  0008               	return
  6984  0940                     __end_of__div_to_l_:
  6985                           
  6986                           	psect	text18
  6987  19C1                     __ptext18:	
  6988 ;; *************** function ___wmul *****************
  6989 ;; Defined at:
  6990 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6991 ;; Parameters:    Size  Location     Type
  6992 ;;  multiplier      2    0[COMMON] unsigned int 
  6993 ;;  multiplicand    2    2[COMMON] unsigned int 
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;  product         2    4[COMMON] unsigned int 
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  2    0[COMMON] unsigned int 
  6998 ;; Registers used:
  6999 ;;		wreg, status,2, status,0
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7005 ;;      Params:         4       0       0       0       0
  7006 ;;      Locals:         2       0       0       0       0
  7007 ;;      Temps:          0       0       0       0       0
  7008 ;;      Totals:         6       0       0       0       0
  7009 ;;Total ram usage:        6 bytes
  7010 ;; Hardware stack levels used:    1
  7011 ;; This function calls:
  7012 ;;		Nothing
  7013 ;; This function is called by:
  7014 ;;		_sprintf
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           
  7019                           ;psect for function ___wmul
  7020  19C1                     ___wmul:
  7021  19C1                     l3137:	
  7022                           ;incstack = 0
  7023                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7024                           
  7025  19C1  01F4               	clrf	___wmul@product
  7026  19C2  01F5               	clrf	___wmul@product+1
  7027  19C3                     l3139:
  7028  19C3  1C70               	btfss	___wmul@multiplier,0
  7029  19C4  29C6               	goto	u4791
  7030  19C5  29C7               	goto	u4790
  7031  19C6                     u4791:
  7032  19C6  29CD               	goto	l396
  7033  19C7                     u4790:
  7034  19C7                     l3141:
  7035  19C7  0872               	movf	___wmul@multiplicand,w
  7036  19C8  07F4               	addwf	___wmul@product,f
  7037  19C9  1803               	skipnc
  7038  19CA  0AF5               	incf	___wmul@product+1,f
  7039  19CB  0873               	movf	___wmul@multiplicand+1,w
  7040  19CC  07F5               	addwf	___wmul@product+1,f
  7041  19CD                     l396:
  7042  19CD  3001               	movlw	1
  7043  19CE                     u4805:
  7044  19CE  1003               	clrc
  7045  19CF  0DF2               	rlf	___wmul@multiplicand,f
  7046  19D0  0DF3               	rlf	___wmul@multiplicand+1,f
  7047  19D1  3EFF               	addlw	-1
  7048  19D2  1D03               	skipz
  7049  19D3  29CE               	goto	u4805
  7050  19D4                     l3143:
  7051  19D4  3001               	movlw	1
  7052  19D5                     u4815:
  7053  19D5  1003               	clrc
  7054  19D6  0CF1               	rrf	___wmul@multiplier+1,f
  7055  19D7  0CF0               	rrf	___wmul@multiplier,f
  7056  19D8  3EFF               	addlw	-1
  7057  19D9  1D03               	skipz
  7058  19DA  29D5               	goto	u4815
  7059  19DB                     l3145:
  7060  19DB  0870               	movf	___wmul@multiplier,w
  7061  19DC  0471               	iorwf	___wmul@multiplier+1,w
  7062  19DD  1D03               	btfss	3,2
  7063  19DE  29E0               	goto	u4821
  7064  19DF  29E1               	goto	u4820
  7065  19E0                     u4821:
  7066  19E0  29C3               	goto	l3139
  7067  19E1                     u4820:
  7068  19E1                     l3147:
  7069  19E1  0875               	movf	___wmul@product+1,w
  7070  19E2  00F1               	movwf	?___wmul+1
  7071  19E3  0874               	movf	___wmul@product,w
  7072  19E4  00F0               	movwf	?___wmul
  7073  19E5                     l398:
  7074  19E5  0008               	return
  7075  19E6                     __end_of___wmul:
  7076                           
  7077                           	psect	text19
  7078  1B93                     __ptext19:	
  7079 ;; *************** function ___llmod *****************
  7080 ;; Defined at:
  7081 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;  divisor         4    0[COMMON] unsigned long 
  7084 ;;  dividend        4    4[COMMON] unsigned long 
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;  counter         1    9[COMMON] unsigned char 
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  4    0[COMMON] unsigned long 
  7089 ;; Registers used:
  7090 ;;		wreg, status,2, status,0
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7096 ;;      Params:         8       0       0       0       0
  7097 ;;      Locals:         1       0       0       0       0
  7098 ;;      Temps:          1       0       0       0       0
  7099 ;;      Totals:        10       0       0       0       0
  7100 ;;Total ram usage:       10 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; This function calls:
  7103 ;;		Nothing
  7104 ;; This function is called by:
  7105 ;;		_sprintf
  7106 ;; This function uses a non-reentrant model
  7107 ;;
  7108                           
  7109                           
  7110                           ;psect for function ___llmod
  7111  1B93                     ___llmod:
  7112  1B93                     l3251:	
  7113                           ;incstack = 0
  7114                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7115                           
  7116  1B93  0873               	movf	___llmod@divisor+3,w
  7117  1B94  0472               	iorwf	___llmod@divisor+2,w
  7118  1B95  0471               	iorwf	___llmod@divisor+1,w
  7119  1B96  0470               	iorwf	___llmod@divisor,w
  7120  1B97  1903               	skipnz
  7121  1B98  2B9A               	goto	u5111
  7122  1B99  2B9B               	goto	u5110
  7123  1B9A                     u5111:
  7124  1B9A  2BDE               	goto	l3267
  7125  1B9B                     u5110:
  7126  1B9B                     l3253:
  7127  1B9B  01F9               	clrf	___llmod@counter
  7128  1B9C  0AF9               	incf	___llmod@counter,f
  7129  1B9D  2BAB               	goto	l3257
  7130  1B9E                     l3255:
  7131  1B9E  3001               	movlw	1
  7132  1B9F  00F8               	movwf	??___llmod
  7133  1BA0                     u5125:
  7134  1BA0  1003               	clrc
  7135  1BA1  0DF0               	rlf	___llmod@divisor,f
  7136  1BA2  0DF1               	rlf	___llmod@divisor+1,f
  7137  1BA3  0DF2               	rlf	___llmod@divisor+2,f
  7138  1BA4  0DF3               	rlf	___llmod@divisor+3,f
  7139  1BA5  0BF8               	decfsz	??___llmod,f
  7140  1BA6  2BA0               	goto	u5125
  7141  1BA7  3001               	movlw	1
  7142  1BA8  00F8               	movwf	??___llmod
  7143  1BA9  0878               	movf	??___llmod,w
  7144  1BAA  07F9               	addwf	___llmod@counter,f
  7145  1BAB                     l3257:
  7146  1BAB  1FF3               	btfss	___llmod@divisor+3,7
  7147  1BAC  2BAE               	goto	u5131
  7148  1BAD  2BAF               	goto	u5130
  7149  1BAE                     u5131:
  7150  1BAE  2B9E               	goto	l3255
  7151  1BAF                     u5130:
  7152  1BAF                     l3259:
  7153  1BAF  0873               	movf	___llmod@divisor+3,w
  7154  1BB0  0277               	subwf	___llmod@dividend+3,w
  7155  1BB1  1D03               	skipz
  7156  1BB2  2BBD               	goto	u5145
  7157  1BB3  0872               	movf	___llmod@divisor+2,w
  7158  1BB4  0276               	subwf	___llmod@dividend+2,w
  7159  1BB5  1D03               	skipz
  7160  1BB6  2BBD               	goto	u5145
  7161  1BB7  0871               	movf	___llmod@divisor+1,w
  7162  1BB8  0275               	subwf	___llmod@dividend+1,w
  7163  1BB9  1D03               	skipz
  7164  1BBA  2BBD               	goto	u5145
  7165  1BBB  0870               	movf	___llmod@divisor,w
  7166  1BBC  0274               	subwf	___llmod@dividend,w
  7167  1BBD                     u5145:
  7168  1BBD  1C03               	skipc
  7169  1BBE  2BC0               	goto	u5141
  7170  1BBF  2BC1               	goto	u5140
  7171  1BC0                     u5141:
  7172  1BC0  2BCF               	goto	l3263
  7173  1BC1                     u5140:
  7174  1BC1                     l3261:
  7175  1BC1  0870               	movf	___llmod@divisor,w
  7176  1BC2  02F4               	subwf	___llmod@dividend,f
  7177  1BC3  0871               	movf	___llmod@divisor+1,w
  7178  1BC4  1C03               	skipc
  7179  1BC5  0F71               	incfsz	___llmod@divisor+1,w
  7180  1BC6  02F5               	subwf	___llmod@dividend+1,f
  7181  1BC7  0872               	movf	___llmod@divisor+2,w
  7182  1BC8  1C03               	skipc
  7183  1BC9  0F72               	incfsz	___llmod@divisor+2,w
  7184  1BCA  02F6               	subwf	___llmod@dividend+2,f
  7185  1BCB  0873               	movf	___llmod@divisor+3,w
  7186  1BCC  1C03               	skipc
  7187  1BCD  0F73               	incfsz	___llmod@divisor+3,w
  7188  1BCE  02F7               	subwf	___llmod@dividend+3,f
  7189  1BCF                     l3263:
  7190  1BCF  3001               	movlw	1
  7191  1BD0                     u5155:
  7192  1BD0  1003               	clrc
  7193  1BD1  0CF3               	rrf	___llmod@divisor+3,f
  7194  1BD2  0CF2               	rrf	___llmod@divisor+2,f
  7195  1BD3  0CF1               	rrf	___llmod@divisor+1,f
  7196  1BD4  0CF0               	rrf	___llmod@divisor,f
  7197  1BD5  3EFF               	addlw	-1
  7198  1BD6  1D03               	skipz
  7199  1BD7  2BD0               	goto	u5155
  7200  1BD8                     l3265:
  7201  1BD8  3001               	movlw	1
  7202  1BD9  02F9               	subwf	___llmod@counter,f
  7203  1BDA  1D03               	btfss	3,2
  7204  1BDB  2BDD               	goto	u5161
  7205  1BDC  2BDE               	goto	u5160
  7206  1BDD                     u5161:
  7207  1BDD  2BAF               	goto	l3259
  7208  1BDE                     u5160:
  7209  1BDE                     l3267:
  7210  1BDE  0877               	movf	___llmod@dividend+3,w
  7211  1BDF  00F3               	movwf	?___llmod+3
  7212  1BE0  0876               	movf	___llmod@dividend+2,w
  7213  1BE1  00F2               	movwf	?___llmod+2
  7214  1BE2  0875               	movf	___llmod@dividend+1,w
  7215  1BE3  00F1               	movwf	?___llmod+1
  7216  1BE4  0874               	movf	___llmod@dividend,w
  7217  1BE5  00F0               	movwf	?___llmod
  7218  1BE6                     l652:
  7219  1BE6  0008               	return
  7220  1BE7                     __end_of___llmod:
  7221                           
  7222                           	psect	text20
  7223  1D58                     __ptext20:	
  7224 ;; *************** function ___lldiv *****************
  7225 ;; Defined at:
  7226 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;  divisor         4    0[COMMON] unsigned long 
  7229 ;;  dividend        4    4[COMMON] unsigned long 
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;  quotient        4    9[COMMON] unsigned long 
  7232 ;;  counter         1   13[COMMON] unsigned char 
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  4    0[COMMON] unsigned long 
  7235 ;; Registers used:
  7236 ;;		wreg, status,2, status,0
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7242 ;;      Params:         8       0       0       0       0
  7243 ;;      Locals:         5       0       0       0       0
  7244 ;;      Temps:          1       0       0       0       0
  7245 ;;      Totals:        14       0       0       0       0
  7246 ;;Total ram usage:       14 bytes
  7247 ;; Hardware stack levels used:    1
  7248 ;; This function calls:
  7249 ;;		Nothing
  7250 ;; This function is called by:
  7251 ;;		_sprintf
  7252 ;; This function uses a non-reentrant model
  7253 ;;
  7254                           
  7255                           
  7256                           ;psect for function ___lldiv
  7257  1D58                     ___lldiv:
  7258  1D58                     l3151:	
  7259                           ;incstack = 0
  7260                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7261                           
  7262  1D58  3000               	movlw	0
  7263  1D59  00FC               	movwf	___lldiv@quotient+3
  7264  1D5A  3000               	movlw	0
  7265  1D5B  00FB               	movwf	___lldiv@quotient+2
  7266  1D5C  3000               	movlw	0
  7267  1D5D  00FA               	movwf	___lldiv@quotient+1
  7268  1D5E  3000               	movlw	0
  7269  1D5F  00F9               	movwf	___lldiv@quotient
  7270  1D60  0873               	movf	___lldiv@divisor+3,w
  7271  1D61  0472               	iorwf	___lldiv@divisor+2,w
  7272  1D62  0471               	iorwf	___lldiv@divisor+1,w
  7273  1D63  0470               	iorwf	___lldiv@divisor,w
  7274  1D64  1903               	skipnz
  7275  1D65  2D67               	goto	u4831
  7276  1D66  2D68               	goto	u4830
  7277  1D67                     u4831:
  7278  1D67  2DB5               	goto	l3171
  7279  1D68                     u4830:
  7280  1D68                     l3153:
  7281  1D68  01FD               	clrf	___lldiv@counter
  7282  1D69  0AFD               	incf	___lldiv@counter,f
  7283  1D6A  2D78               	goto	l3157
  7284  1D6B                     l3155:
  7285  1D6B  3001               	movlw	1
  7286  1D6C  00F8               	movwf	??___lldiv
  7287  1D6D                     u4845:
  7288  1D6D  1003               	clrc
  7289  1D6E  0DF0               	rlf	___lldiv@divisor,f
  7290  1D6F  0DF1               	rlf	___lldiv@divisor+1,f
  7291  1D70  0DF2               	rlf	___lldiv@divisor+2,f
  7292  1D71  0DF3               	rlf	___lldiv@divisor+3,f
  7293  1D72  0BF8               	decfsz	??___lldiv,f
  7294  1D73  2D6D               	goto	u4845
  7295  1D74  3001               	movlw	1
  7296  1D75  00F8               	movwf	??___lldiv
  7297  1D76  0878               	movf	??___lldiv,w
  7298  1D77  07FD               	addwf	___lldiv@counter,f
  7299  1D78                     l3157:
  7300  1D78  1FF3               	btfss	___lldiv@divisor+3,7
  7301  1D79  2D7B               	goto	u4851
  7302  1D7A  2D7C               	goto	u4850
  7303  1D7B                     u4851:
  7304  1D7B  2D6B               	goto	l3155
  7305  1D7C                     u4850:
  7306  1D7C                     l3159:
  7307  1D7C  3001               	movlw	1
  7308  1D7D  00F8               	movwf	??___lldiv
  7309  1D7E                     u4865:
  7310  1D7E  1003               	clrc
  7311  1D7F  0DF9               	rlf	___lldiv@quotient,f
  7312  1D80  0DFA               	rlf	___lldiv@quotient+1,f
  7313  1D81  0DFB               	rlf	___lldiv@quotient+2,f
  7314  1D82  0DFC               	rlf	___lldiv@quotient+3,f
  7315  1D83  0BF8               	decfsz	??___lldiv,f
  7316  1D84  2D7E               	goto	u4865
  7317  1D85                     l3161:
  7318  1D85  0873               	movf	___lldiv@divisor+3,w
  7319  1D86  0277               	subwf	___lldiv@dividend+3,w
  7320  1D87  1D03               	skipz
  7321  1D88  2D93               	goto	u4875
  7322  1D89  0872               	movf	___lldiv@divisor+2,w
  7323  1D8A  0276               	subwf	___lldiv@dividend+2,w
  7324  1D8B  1D03               	skipz
  7325  1D8C  2D93               	goto	u4875
  7326  1D8D  0871               	movf	___lldiv@divisor+1,w
  7327  1D8E  0275               	subwf	___lldiv@dividend+1,w
  7328  1D8F  1D03               	skipz
  7329  1D90  2D93               	goto	u4875
  7330  1D91  0870               	movf	___lldiv@divisor,w
  7331  1D92  0274               	subwf	___lldiv@dividend,w
  7332  1D93                     u4875:
  7333  1D93  1C03               	skipc
  7334  1D94  2D96               	goto	u4871
  7335  1D95  2D97               	goto	u4870
  7336  1D96                     u4871:
  7337  1D96  2DA6               	goto	l3167
  7338  1D97                     u4870:
  7339  1D97                     l3163:
  7340  1D97  0870               	movf	___lldiv@divisor,w
  7341  1D98  02F4               	subwf	___lldiv@dividend,f
  7342  1D99  0871               	movf	___lldiv@divisor+1,w
  7343  1D9A  1C03               	skipc
  7344  1D9B  0F71               	incfsz	___lldiv@divisor+1,w
  7345  1D9C  02F5               	subwf	___lldiv@dividend+1,f
  7346  1D9D  0872               	movf	___lldiv@divisor+2,w
  7347  1D9E  1C03               	skipc
  7348  1D9F  0F72               	incfsz	___lldiv@divisor+2,w
  7349  1DA0  02F6               	subwf	___lldiv@dividend+2,f
  7350  1DA1  0873               	movf	___lldiv@divisor+3,w
  7351  1DA2  1C03               	skipc
  7352  1DA3  0F73               	incfsz	___lldiv@divisor+3,w
  7353  1DA4  02F7               	subwf	___lldiv@dividend+3,f
  7354  1DA5                     l3165:
  7355  1DA5  1479               	bsf	___lldiv@quotient,0
  7356  1DA6                     l3167:
  7357  1DA6  3001               	movlw	1
  7358  1DA7                     u4885:
  7359  1DA7  1003               	clrc
  7360  1DA8  0CF3               	rrf	___lldiv@divisor+3,f
  7361  1DA9  0CF2               	rrf	___lldiv@divisor+2,f
  7362  1DAA  0CF1               	rrf	___lldiv@divisor+1,f
  7363  1DAB  0CF0               	rrf	___lldiv@divisor,f
  7364  1DAC  3EFF               	addlw	-1
  7365  1DAD  1D03               	skipz
  7366  1DAE  2DA7               	goto	u4885
  7367  1DAF                     l3169:
  7368  1DAF  3001               	movlw	1
  7369  1DB0  02FD               	subwf	___lldiv@counter,f
  7370  1DB1  1D03               	btfss	3,2
  7371  1DB2  2DB4               	goto	u4891
  7372  1DB3  2DB5               	goto	u4890
  7373  1DB4                     u4891:
  7374  1DB4  2D7C               	goto	l3159
  7375  1DB5                     u4890:
  7376  1DB5                     l3171:
  7377  1DB5  087C               	movf	___lldiv@quotient+3,w
  7378  1DB6  00F3               	movwf	?___lldiv+3
  7379  1DB7  087B               	movf	___lldiv@quotient+2,w
  7380  1DB8  00F2               	movwf	?___lldiv+2
  7381  1DB9  087A               	movf	___lldiv@quotient+1,w
  7382  1DBA  00F1               	movwf	?___lldiv+1
  7383  1DBB  0879               	movf	___lldiv@quotient,w
  7384  1DBC  00F0               	movwf	?___lldiv
  7385  1DBD                     l432:
  7386  1DBD  0008               	return
  7387  1DBE                     __end_of___lldiv:
  7388                           
  7389                           	psect	text21
  7390  0806                     __ptext21:	
  7391 ;; *************** function ___fltol *****************
  7392 ;; Defined at:
  7393 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  f1              4   49[BANK0 ] unsigned long 
  7396 ;; Auto vars:     Size  Location     Type
  7397 ;;  exp1            1   59[BANK0 ] unsigned char 
  7398 ;;  sign1           1   58[BANK0 ] unsigned char 
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  4   49[BANK0 ] long 
  7401 ;; Registers used:
  7402 ;;		wreg, status,2, status,0
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7408 ;;      Params:         0       4       0       0       0
  7409 ;;      Locals:         0       2       0       0       0
  7410 ;;      Temps:          0       5       0       0       0
  7411 ;;      Totals:         0      11       0       0       0
  7412 ;;Total ram usage:       11 bytes
  7413 ;; Hardware stack levels used:    1
  7414 ;; This function calls:
  7415 ;;		Nothing
  7416 ;; This function is called by:
  7417 ;;		_sprintf
  7418 ;; This function uses a non-reentrant model
  7419 ;;
  7420                           
  7421                           
  7422                           ;psect for function ___fltol
  7423  0806                     ___fltol:
  7424  0806                     l3215:	
  7425                           ;incstack = 0
  7426                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7427                           
  7428  0806  1003               	clrc
  7429  0807  1283               	bcf	3,5	;RP0=0, select bank0
  7430  0808  1303               	bcf	3,6	;RP1=0, select bank0
  7431  0809  0D53               	rlf	___fltol@f1+2,w
  7432  080A  0D54               	rlf	___fltol@f1+3,w
  7433  080B  00D5               	movwf	??___fltol
  7434  080C  0855               	movf	??___fltol,w
  7435  080D  00DB               	movwf	___fltol@exp1
  7436  080E  085B               	movf	___fltol@exp1,w
  7437  080F  1D03               	btfss	3,2
  7438  0810  2812               	goto	u5011
  7439  0811  2813               	goto	u5010
  7440  0812                     u5011:
  7441  0812  281C               	goto	l3221
  7442  0813                     u5010:
  7443  0813                     l3217:
  7444  0813  3000               	movlw	0
  7445  0814  00D4               	movwf	?___fltol+3
  7446  0815  3000               	movlw	0
  7447  0816  00D3               	movwf	?___fltol+2
  7448  0817  3000               	movlw	0
  7449  0818  00D2               	movwf	?___fltol+1
  7450  0819  3000               	movlw	0
  7451  081A  00D1               	movwf	?___fltol
  7452  081B  2881               	goto	l599
  7453  081C                     l3221:
  7454  081C  0851               	movf	___fltol@f1,w
  7455  081D  00D5               	movwf	??___fltol
  7456  081E  0852               	movf	___fltol@f1+1,w
  7457  081F  00D6               	movwf	??___fltol+1
  7458  0820  0853               	movf	___fltol@f1+2,w
  7459  0821  00D7               	movwf	??___fltol+2
  7460  0822  0854               	movf	___fltol@f1+3,w
  7461  0823  00D8               	movwf	??___fltol+3
  7462  0824  301F               	movlw	31
  7463  0825                     u5025:
  7464  0825  1003               	clrc
  7465  0826  0CD8               	rrf	??___fltol+3,f
  7466  0827  0CD7               	rrf	??___fltol+2,f
  7467  0828  0CD6               	rrf	??___fltol+1,f
  7468  0829  0CD5               	rrf	??___fltol,f
  7469  082A                     u5020:
  7470  082A  3EFF               	addlw	-1
  7471  082B  1D03               	skipz
  7472  082C  2825               	goto	u5025
  7473  082D  0855               	movf	??___fltol,w
  7474  082E  00D9               	movwf	??___fltol+4
  7475  082F  0859               	movf	??___fltol+4,w
  7476  0830  00DA               	movwf	___fltol@sign1
  7477  0831                     l3223:
  7478  0831  17D3               	bsf	___fltol@f1+2,7
  7479  0832                     l3225:
  7480  0832  30FF               	movlw	255
  7481  0833  05D1               	andwf	___fltol@f1,f
  7482  0834  30FF               	movlw	255
  7483  0835  05D2               	andwf	___fltol@f1+1,f
  7484  0836  30FF               	movlw	255
  7485  0837  05D3               	andwf	___fltol@f1+2,f
  7486  0838  3000               	movlw	0
  7487  0839  05D4               	andwf	___fltol@f1+3,f
  7488  083A                     l3227:
  7489  083A  3096               	movlw	150
  7490  083B  02DB               	subwf	___fltol@exp1,f
  7491  083C                     l3229:
  7492  083C  1FDB               	btfss	___fltol@exp1,7
  7493  083D  283F               	goto	u5031
  7494  083E  2840               	goto	u5030
  7495  083F                     u5031:
  7496  083F  285A               	goto	l3239
  7497  0840                     u5030:
  7498  0840                     l3231:
  7499  0840  085B               	movf	___fltol@exp1,w
  7500  0841  3A80               	xorlw	128
  7501  0842  3E97               	addlw	151
  7502  0843  1803               	skipnc
  7503  0844  2846               	goto	u5041
  7504  0845  2847               	goto	u5040
  7505  0846                     u5041:
  7506  0846  2848               	goto	l3237
  7507  0847                     u5040:
  7508  0847  2813               	goto	l3217
  7509  0848                     l3237:
  7510  0848  3001               	movlw	1
  7511  0849                     u5055:
  7512  0849  1003               	clrc
  7513  084A  0CD4               	rrf	___fltol@f1+3,f
  7514  084B  0CD3               	rrf	___fltol@f1+2,f
  7515  084C  0CD2               	rrf	___fltol@f1+1,f
  7516  084D  0CD1               	rrf	___fltol@f1,f
  7517  084E  3EFF               	addlw	-1
  7518  084F  1D03               	skipz
  7519  0850  2849               	goto	u5055
  7520  0851  3001               	movlw	1
  7521  0852  00D5               	movwf	??___fltol
  7522  0853  0855               	movf	??___fltol,w
  7523  0854  07DB               	addwf	___fltol@exp1,f
  7524  0855  1D03               	btfss	3,2
  7525  0856  2858               	goto	u5061
  7526  0857  2859               	goto	u5060
  7527  0858                     u5061:
  7528  0858  2848               	goto	l3237
  7529  0859                     u5060:
  7530  0859  2871               	goto	l3247
  7531  085A                     l3239:
  7532  085A  3020               	movlw	32
  7533  085B  025B               	subwf	___fltol@exp1,w
  7534  085C  1C03               	skipc
  7535  085D  285F               	goto	u5071
  7536  085E  2860               	goto	u5070
  7537  085F                     u5071:
  7538  085F  286C               	goto	l606
  7539  0860                     u5070:
  7540  0860  2813               	goto	l3217
  7541  0861                     l3245:
  7542  0861  3001               	movlw	1
  7543  0862  00D5               	movwf	??___fltol
  7544  0863                     u5085:
  7545  0863  1003               	clrc
  7546  0864  0DD1               	rlf	___fltol@f1,f
  7547  0865  0DD2               	rlf	___fltol@f1+1,f
  7548  0866  0DD3               	rlf	___fltol@f1+2,f
  7549  0867  0DD4               	rlf	___fltol@f1+3,f
  7550  0868  0BD5               	decfsz	??___fltol,f
  7551  0869  2863               	goto	u5085
  7552  086A  3001               	movlw	1
  7553  086B  02DB               	subwf	___fltol@exp1,f
  7554  086C                     l606:
  7555  086C  085B               	movf	___fltol@exp1,w
  7556  086D  1D03               	btfss	3,2
  7557  086E  2870               	goto	u5091
  7558  086F  2871               	goto	u5090
  7559  0870                     u5091:
  7560  0870  2861               	goto	l3245
  7561  0871                     u5090:
  7562  0871                     l3247:
  7563  0871  085A               	movf	___fltol@sign1,w
  7564  0872  1903               	btfsc	3,2
  7565  0873  2875               	goto	u5101
  7566  0874  2876               	goto	u5100
  7567  0875                     u5101:
  7568  0875  2881               	goto	l609
  7569  0876                     u5100:
  7570  0876                     l3249:
  7571  0876  09D1               	comf	___fltol@f1,f
  7572  0877  09D2               	comf	___fltol@f1+1,f
  7573  0878  09D3               	comf	___fltol@f1+2,f
  7574  0879  09D4               	comf	___fltol@f1+3,f
  7575  087A  0AD1               	incf	___fltol@f1,f
  7576  087B  1903               	skipnz
  7577  087C  0AD2               	incf	___fltol@f1+1,f
  7578  087D  1903               	skipnz
  7579  087E  0AD3               	incf	___fltol@f1+2,f
  7580  087F  1903               	skipnz
  7581  0880  0AD4               	incf	___fltol@f1+3,f
  7582  0881                     l609:
  7583  0881                     l599:
  7584  0881  0008               	return
  7585  0882                     __end_of___fltol:
  7586                           
  7587                           	psect	text22
  7588  1979                     __ptext22:	
  7589 ;; *************** function ___flsub *****************
  7590 ;; Defined at:
  7591 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;  a               4   70[BANK0 ] long 
  7594 ;;  b               4   74[BANK0 ] long 
  7595 ;; Auto vars:     Size  Location     Type
  7596 ;;		None
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  4   70[BANK0 ] long 
  7599 ;; Registers used:
  7600 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7606 ;;      Params:         0       8       0       0       0
  7607 ;;      Locals:         0       0       0       0       0
  7608 ;;      Temps:          0       0       0       0       0
  7609 ;;      Totals:         0       8       0       0       0
  7610 ;;Total ram usage:        8 bytes
  7611 ;; Hardware stack levels used:    1
  7612 ;; Hardware stack levels required when called:    1
  7613 ;; This function calls:
  7614 ;;		___fladd
  7615 ;; This function is called by:
  7616 ;;		_sprintf
  7617 ;; This function uses a non-reentrant model
  7618 ;;
  7619                           
  7620                           
  7621                           ;psect for function ___flsub
  7622  1979                     ___flsub:
  7623  1979                     l3271:	
  7624                           ;incstack = 0
  7625                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7626                           
  7627  1979  3080               	movlw	128
  7628  197A  1283               	bcf	3,5	;RP0=0, select bank0
  7629  197B  1303               	bcf	3,6	;RP1=0, select bank0
  7630  197C  06E9               	xorwf	___flsub@a+3,f
  7631  197D                     l3273:
  7632  197D  086D               	movf	___flsub@b+3,w
  7633  197E  00D5               	movwf	___fladd@b+3
  7634  197F  086C               	movf	___flsub@b+2,w
  7635  1980  00D4               	movwf	___fladd@b+2
  7636  1981  086B               	movf	___flsub@b+1,w
  7637  1982  00D3               	movwf	___fladd@b+1
  7638  1983  086A               	movf	___flsub@b,w
  7639  1984  00D2               	movwf	___fladd@b
  7640  1985  0869               	movf	___flsub@a+3,w
  7641  1986  00D9               	movwf	___fladd@a+3
  7642  1987  0868               	movf	___flsub@a+2,w
  7643  1988  00D8               	movwf	___fladd@a+2
  7644  1989  0867               	movf	___flsub@a+1,w
  7645  198A  00D7               	movwf	___fladd@a+1
  7646  198B  0866               	movf	___flsub@a,w
  7647  198C  00D6               	movwf	___fladd@a
  7648  198D  160A  118A  2578  160A  158A  	fcall	___fladd
  7649  1992  1283               	bcf	3,5	;RP0=0, select bank0
  7650  1993  1303               	bcf	3,6	;RP1=0, select bank0
  7651  1994  0855               	movf	?___fladd+3,w
  7652  1995  00E9               	movwf	?___flsub+3
  7653  1996  0854               	movf	?___fladd+2,w
  7654  1997  00E8               	movwf	?___flsub+2
  7655  1998  0853               	movf	?___fladd+1,w
  7656  1999  00E7               	movwf	?___flsub+1
  7657  199A  0852               	movf	?___fladd,w
  7658  199B  00E6               	movwf	?___flsub
  7659  199C                     l769:
  7660  199C  0008               	return
  7661  199D                     __end_of___flsub:
  7662                           
  7663                           	psect	text23
  7664  1578                     __ptext23:	
  7665 ;; *************** function ___fladd *****************
  7666 ;; Defined at:
  7667 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  b               4   50[BANK0 ] long 
  7670 ;;  a               4   54[BANK0 ] long 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;  grs             1   69[BANK0 ] unsigned char 
  7673 ;;  bexp            1   68[BANK0 ] unsigned char 
  7674 ;;  aexp            1   67[BANK0 ] unsigned char 
  7675 ;;  signs           1   66[BANK0 ] unsigned char 
  7676 ;; Return value:  Size  Location     Type
  7677 ;;                  4   50[BANK0 ] unsigned char 
  7678 ;; Registers used:
  7679 ;;		wreg, status,2, status,0, btemp+1
  7680 ;; Tracked objects:
  7681 ;;		On entry : 0/0
  7682 ;;		On exit  : 0/0
  7683 ;;		Unchanged: 0/0
  7684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7685 ;;      Params:         0       8       0       0       0
  7686 ;;      Locals:         0       4       0       0       0
  7687 ;;      Temps:          0       8       0       0       0
  7688 ;;      Totals:         0      20       0       0       0
  7689 ;;Total ram usage:       20 bytes
  7690 ;; Hardware stack levels used:    1
  7691 ;; This function calls:
  7692 ;;		Nothing
  7693 ;; This function is called by:
  7694 ;;		_sprintf
  7695 ;;		___flsub
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           
  7700                           ;psect for function ___fladd
  7701  1578                     ___fladd:
  7702  1578                     l2609:	
  7703                           ;incstack = 0
  7704                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7705                           
  7706  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7707  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7708  157A  0855               	movf	___fladd@b+3,w
  7709  157B  3980               	andlw	128
  7710  157C  00DA               	movwf	??___fladd
  7711  157D  085A               	movf	??___fladd,w
  7712  157E  00E2               	movwf	___fladd@signs
  7713  157F                     l2611:
  7714  157F  0855               	movf	___fladd@b+3,w
  7715  1580  00DA               	movwf	??___fladd
  7716  1581  075A               	addwf	??___fladd,w
  7717  1582  00DB               	movwf	??___fladd+1
  7718  1583  085B               	movf	??___fladd+1,w
  7719  1584  00E4               	movwf	___fladd@bexp
  7720  1585                     l2613:
  7721  1585  1FD4               	btfss	___fladd@b+2,7
  7722  1586  2D88               	goto	u3431
  7723  1587  2D89               	goto	u3430
  7724  1588                     u3431:
  7725  1588  2D8A               	goto	l2617
  7726  1589                     u3430:
  7727  1589                     l2615:
  7728  1589  1464               	bsf	___fladd@bexp,0
  7729  158A                     l2617:
  7730  158A  0864               	movf	___fladd@bexp,w
  7731  158B  1903               	btfsc	3,2
  7732  158C  2D8E               	goto	u3441
  7733  158D  2D8F               	goto	u3440
  7734  158E                     u3441:
  7735  158E  2D9F               	goto	l2627
  7736  158F                     u3440:
  7737  158F                     l2619:
  7738  158F  0A64               	incf	___fladd@bexp,w
  7739  1590  1D03               	btfss	3,2
  7740  1591  2D93               	goto	u3451
  7741  1592  2D94               	goto	u3450
  7742  1593                     u3451:
  7743  1593  2D9C               	goto	l2623
  7744  1594                     u3450:
  7745  1594                     l2621:
  7746  1594  3000               	movlw	0
  7747  1595  00D5               	movwf	___fladd@b+3
  7748  1596  3000               	movlw	0
  7749  1597  00D4               	movwf	___fladd@b+2
  7750  1598  3000               	movlw	0
  7751  1599  00D3               	movwf	___fladd@b+1
  7752  159A  3000               	movlw	0
  7753  159B  00D2               	movwf	___fladd@b
  7754  159C                     l2623:
  7755  159C  17D4               	bsf	___fladd@b+2,7
  7756  159D                     l2625:
  7757  159D  01D5               	clrf	___fladd@b+3
  7758  159E  2DA7               	goto	l2629
  7759  159F                     l2627:
  7760  159F  3000               	movlw	0
  7761  15A0  00D5               	movwf	___fladd@b+3
  7762  15A1  3000               	movlw	0
  7763  15A2  00D4               	movwf	___fladd@b+2
  7764  15A3  3000               	movlw	0
  7765  15A4  00D3               	movwf	___fladd@b+1
  7766  15A5  3000               	movlw	0
  7767  15A6  00D2               	movwf	___fladd@b
  7768  15A7                     l2629:
  7769  15A7  0859               	movf	___fladd@a+3,w
  7770  15A8  3980               	andlw	128
  7771  15A9  00DA               	movwf	??___fladd
  7772  15AA  085A               	movf	??___fladd,w
  7773  15AB  00E3               	movwf	___fladd@aexp
  7774  15AC                     l2631:
  7775  15AC  0863               	movf	___fladd@aexp,w
  7776  15AD  0662               	xorwf	___fladd@signs,w
  7777  15AE  1903               	skipnz
  7778  15AF  2DB1               	goto	u3461
  7779  15B0  2DB2               	goto	u3460
  7780  15B1                     u3461:
  7781  15B1  2DB3               	goto	l2635
  7782  15B2                     u3460:
  7783  15B2                     l2633:
  7784  15B2  1762               	bsf	___fladd@signs,6
  7785  15B3                     l2635:
  7786  15B3  0859               	movf	___fladd@a+3,w
  7787  15B4  00DA               	movwf	??___fladd
  7788  15B5  075A               	addwf	??___fladd,w
  7789  15B6  00DB               	movwf	??___fladd+1
  7790  15B7  085B               	movf	??___fladd+1,w
  7791  15B8  00E3               	movwf	___fladd@aexp
  7792  15B9                     l2637:
  7793  15B9  1FD8               	btfss	___fladd@a+2,7
  7794  15BA  2DBC               	goto	u3471
  7795  15BB  2DBD               	goto	u3470
  7796  15BC                     u3471:
  7797  15BC  2DBE               	goto	l2641
  7798  15BD                     u3470:
  7799  15BD                     l2639:
  7800  15BD  1463               	bsf	___fladd@aexp,0
  7801  15BE                     l2641:
  7802  15BE  0863               	movf	___fladd@aexp,w
  7803  15BF  1903               	btfsc	3,2
  7804  15C0  2DC2               	goto	u3481
  7805  15C1  2DC3               	goto	u3480
  7806  15C2                     u3481:
  7807  15C2  2DD3               	goto	l2651
  7808  15C3                     u3480:
  7809  15C3                     l2643:
  7810  15C3  0A63               	incf	___fladd@aexp,w
  7811  15C4  1D03               	btfss	3,2
  7812  15C5  2DC7               	goto	u3491
  7813  15C6  2DC8               	goto	u3490
  7814  15C7                     u3491:
  7815  15C7  2DD0               	goto	l2647
  7816  15C8                     u3490:
  7817  15C8                     l2645:
  7818  15C8  3000               	movlw	0
  7819  15C9  00D9               	movwf	___fladd@a+3
  7820  15CA  3000               	movlw	0
  7821  15CB  00D8               	movwf	___fladd@a+2
  7822  15CC  3000               	movlw	0
  7823  15CD  00D7               	movwf	___fladd@a+1
  7824  15CE  3000               	movlw	0
  7825  15CF  00D6               	movwf	___fladd@a
  7826  15D0                     l2647:
  7827  15D0  17D8               	bsf	___fladd@a+2,7
  7828  15D1                     l2649:
  7829  15D1  01D9               	clrf	___fladd@a+3
  7830  15D2  2DDB               	goto	l723
  7831  15D3                     l2651:
  7832  15D3  3000               	movlw	0
  7833  15D4  00D9               	movwf	___fladd@a+3
  7834  15D5  3000               	movlw	0
  7835  15D6  00D8               	movwf	___fladd@a+2
  7836  15D7  3000               	movlw	0
  7837  15D8  00D7               	movwf	___fladd@a+1
  7838  15D9  3000               	movlw	0
  7839  15DA  00D6               	movwf	___fladd@a
  7840  15DB                     l723:
  7841  15DB  0864               	movf	___fladd@bexp,w
  7842  15DC  0263               	subwf	___fladd@aexp,w
  7843  15DD  1803               	skipnc
  7844  15DE  2DE0               	goto	u3501
  7845  15DF  2DE1               	goto	u3500
  7846  15E0                     u3501:
  7847  15E0  2E25               	goto	l2687
  7848  15E1                     u3500:
  7849  15E1                     l2653:
  7850  15E1  1F62               	btfss	___fladd@signs,6
  7851  15E2  2DE4               	goto	u3511
  7852  15E3  2DE5               	goto	u3510
  7853  15E4                     u3511:
  7854  15E4  2DE9               	goto	l2657
  7855  15E5                     u3510:
  7856  15E5                     l2655:
  7857  15E5  3080               	movlw	128
  7858  15E6  00DA               	movwf	??___fladd
  7859  15E7  085A               	movf	??___fladd,w
  7860  15E8  06E2               	xorwf	___fladd@signs,f
  7861  15E9                     l2657:
  7862  15E9  0864               	movf	___fladd@bexp,w
  7863  15EA  00DA               	movwf	??___fladd
  7864  15EB  085A               	movf	??___fladd,w
  7865  15EC  00E5               	movwf	___fladd@grs
  7866  15ED                     l2659:
  7867  15ED  0863               	movf	___fladd@aexp,w
  7868  15EE  00DA               	movwf	??___fladd
  7869  15EF  085A               	movf	??___fladd,w
  7870  15F0  00E4               	movwf	___fladd@bexp
  7871  15F1                     l2661:
  7872  15F1  0865               	movf	___fladd@grs,w
  7873  15F2  00DA               	movwf	??___fladd
  7874  15F3  085A               	movf	??___fladd,w
  7875  15F4  00E3               	movwf	___fladd@aexp
  7876  15F5                     l2663:
  7877  15F5  0852               	movf	___fladd@b,w
  7878  15F6  00DA               	movwf	??___fladd
  7879  15F7  085A               	movf	??___fladd,w
  7880  15F8  00E5               	movwf	___fladd@grs
  7881  15F9                     l2665:
  7882  15F9  0856               	movf	___fladd@a,w
  7883  15FA  00DA               	movwf	??___fladd
  7884  15FB  085A               	movf	??___fladd,w
  7885  15FC  00D2               	movwf	___fladd@b
  7886  15FD                     l2667:
  7887  15FD  0865               	movf	___fladd@grs,w
  7888  15FE  00DA               	movwf	??___fladd
  7889  15FF  085A               	movf	??___fladd,w
  7890  1600  00D6               	movwf	___fladd@a
  7891  1601                     l2669:
  7892  1601  0853               	movf	___fladd@b+1,w
  7893  1602  00DA               	movwf	??___fladd
  7894  1603  085A               	movf	??___fladd,w
  7895  1604  00E5               	movwf	___fladd@grs
  7896  1605                     l2671:
  7897  1605  0857               	movf	___fladd@a+1,w
  7898  1606  00DA               	movwf	??___fladd
  7899  1607  085A               	movf	??___fladd,w
  7900  1608  00D3               	movwf	___fladd@b+1
  7901  1609                     l2673:
  7902  1609  0865               	movf	___fladd@grs,w
  7903  160A  00DA               	movwf	??___fladd
  7904  160B  085A               	movf	??___fladd,w
  7905  160C  00D7               	movwf	___fladd@a+1
  7906  160D                     l2675:
  7907  160D  0854               	movf	___fladd@b+2,w
  7908  160E  00DA               	movwf	??___fladd
  7909  160F  085A               	movf	??___fladd,w
  7910  1610  00E5               	movwf	___fladd@grs
  7911  1611                     l2677:
  7912  1611  0858               	movf	___fladd@a+2,w
  7913  1612  00DA               	movwf	??___fladd
  7914  1613  085A               	movf	??___fladd,w
  7915  1614  00D4               	movwf	___fladd@b+2
  7916  1615                     l2679:
  7917  1615  0865               	movf	___fladd@grs,w
  7918  1616  00DA               	movwf	??___fladd
  7919  1617  085A               	movf	??___fladd,w
  7920  1618  00D8               	movwf	___fladd@a+2
  7921  1619                     l2681:
  7922  1619  0855               	movf	___fladd@b+3,w
  7923  161A  00DA               	movwf	??___fladd
  7924  161B  085A               	movf	??___fladd,w
  7925  161C  00E5               	movwf	___fladd@grs
  7926  161D                     l2683:
  7927  161D  0859               	movf	___fladd@a+3,w
  7928  161E  00DA               	movwf	??___fladd
  7929  161F  085A               	movf	??___fladd,w
  7930  1620  00D5               	movwf	___fladd@b+3
  7931  1621                     l2685:
  7932  1621  0865               	movf	___fladd@grs,w
  7933  1622  00DA               	movwf	??___fladd
  7934  1623  085A               	movf	??___fladd,w
  7935  1624  00D9               	movwf	___fladd@a+3
  7936  1625                     l2687:
  7937  1625  01E5               	clrf	___fladd@grs
  7938  1626                     l2689:
  7939  1626  0863               	movf	___fladd@aexp,w
  7940  1627  00DA               	movwf	??___fladd
  7941  1628  01DB               	clrf	??___fladd+1
  7942  1629  085B               	movf	??___fladd+1,w
  7943  162A  00DD               	movwf	??___fladd+3
  7944  162B  0864               	movf	___fladd@bexp,w
  7945  162C  025A               	subwf	??___fladd,w
  7946  162D  00DC               	movwf	??___fladd+2
  7947  162E  1C03               	skipc
  7948  162F  03DD               	decf	??___fladd+3,f
  7949  1630  085D               	movf	??___fladd+3,w
  7950  1631  3A80               	xorlw	128
  7951  1632  00FF               	movwf	btemp+1
  7952  1633  3080               	movlw	128
  7953  1634  027F               	subwf	btemp+1,w
  7954  1635  1D03               	skipz
  7955  1636  2E39               	goto	u3525
  7956  1637  301A               	movlw	26
  7957  1638  025C               	subwf	??___fladd+2,w
  7958  1639                     u3525:
  7959  1639  1C03               	skipc
  7960  163A  2E3C               	goto	u3521
  7961  163B  2E3D               	goto	u3520
  7962  163C                     u3521:
  7963  163C  2E7A               	goto	l2705
  7964  163D                     u3520:
  7965  163D                     l2691:
  7966  163D  1283               	bcf	3,5	;RP0=0, select bank0
  7967  163E  1303               	bcf	3,6	;RP1=0, select bank0
  7968  163F  0855               	movf	___fladd@b+3,w
  7969  1640  0454               	iorwf	___fladd@b+2,w
  7970  1641  0453               	iorwf	___fladd@b+1,w
  7971  1642  0452               	iorwf	___fladd@b,w
  7972  1643  1D03               	skipz
  7973  1644  2E46               	goto	u3531
  7974  1645  2E48               	goto	u3530
  7975  1646                     u3531:
  7976  1646  3001               	movlw	1
  7977  1647  2E49               	goto	u3540
  7978  1648                     u3530:
  7979  1648  3000               	movlw	0
  7980  1649                     u3540:
  7981  1649  00DA               	movwf	??___fladd
  7982  164A  085A               	movf	??___fladd,w
  7983  164B  00E5               	movwf	___fladd@grs
  7984  164C  3000               	movlw	0
  7985  164D  00D5               	movwf	___fladd@b+3
  7986  164E  3000               	movlw	0
  7987  164F  00D4               	movwf	___fladd@b+2
  7988  1650  3000               	movlw	0
  7989  1651  00D3               	movwf	___fladd@b+1
  7990  1652  3000               	movlw	0
  7991  1653  00D2               	movwf	___fladd@b
  7992  1654  0863               	movf	___fladd@aexp,w
  7993  1655  00DA               	movwf	??___fladd
  7994  1656  085A               	movf	??___fladd,w
  7995  1657  00E4               	movwf	___fladd@bexp
  7996  1658  2E82               	goto	l727
  7997  1659                     l729:
  7998  1659  1C65               	btfss	___fladd@grs,0
  7999  165A  2E5C               	goto	u3551
  8000  165B  2E5D               	goto	u3550
  8001  165C                     u3551:
  8002  165C  2E66               	goto	l2695
  8003  165D                     u3550:
  8004  165D                     l2693:
  8005  165D  0865               	movf	___fladd@grs,w
  8006  165E  00DA               	movwf	??___fladd
  8007  165F  1003               	clrc
  8008  1660  0C5A               	rrf	??___fladd,w
  8009  1661  3801               	iorlw	1
  8010  1662  00DB               	movwf	??___fladd+1
  8011  1663  085B               	movf	??___fladd+1,w
  8012  1664  00E5               	movwf	___fladd@grs
  8013  1665  2E68               	goto	l2697
  8014  1666                     l2695:
  8015  1666  1003               	clrc
  8016  1667  0CE5               	rrf	___fladd@grs,f
  8017  1668                     l2697:
  8018  1668  1C52               	btfss	___fladd@b,0
  8019  1669  2E6B               	goto	u3561
  8020  166A  2E6C               	goto	u3560
  8021  166B                     u3561:
  8022  166B  2E6D               	goto	l2701
  8023  166C                     u3560:
  8024  166C                     l2699:
  8025  166C  17E5               	bsf	___fladd@grs,7
  8026  166D                     l2701:
  8027  166D  3001               	movlw	1
  8028  166E  00DA               	movwf	??___fladd
  8029  166F                     u3575:
  8030  166F  0D55               	rlf	___fladd@b+3,w
  8031  1670  0CD5               	rrf	___fladd@b+3,f
  8032  1671  0CD4               	rrf	___fladd@b+2,f
  8033  1672  0CD3               	rrf	___fladd@b+1,f
  8034  1673  0CD2               	rrf	___fladd@b,f
  8035  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8036  1675  2E6F               	goto	u3575
  8037  1676                     l2703:
  8038  1676  3001               	movlw	1
  8039  1677  00DA               	movwf	??___fladd
  8040  1678  085A               	movf	??___fladd,w
  8041  1679  07E4               	addwf	___fladd@bexp,f
  8042  167A                     l2705:
  8043  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8044  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8045  167C  0863               	movf	___fladd@aexp,w
  8046  167D  0264               	subwf	___fladd@bexp,w
  8047  167E  1C03               	skipc
  8048  167F  2E81               	goto	u3581
  8049  1680  2E82               	goto	u3580
  8050  1681                     u3581:
  8051  1681  2E59               	goto	l729
  8052  1682                     u3580:
  8053  1682                     l727:
  8054  1682  1B62               	btfsc	___fladd@signs,6
  8055  1683  2E85               	goto	u3591
  8056  1684  2E86               	goto	u3590
  8057  1685                     u3591:
  8058  1685  2ED1               	goto	l2731
  8059  1686                     u3590:
  8060  1686                     l2707:
  8061  1686  0864               	movf	___fladd@bexp,w
  8062  1687  1D03               	btfss	3,2
  8063  1688  2E8A               	goto	u3601
  8064  1689  2E8B               	goto	u3600
  8065  168A                     u3601:
  8066  168A  2E94               	goto	l2713
  8067  168B                     u3600:
  8068  168B                     l2709:
  8069  168B  3000               	movlw	0
  8070  168C  00D5               	movwf	?___fladd+3
  8071  168D  3000               	movlw	0
  8072  168E  00D4               	movwf	?___fladd+2
  8073  168F  3000               	movlw	0
  8074  1690  00D3               	movwf	?___fladd+1
  8075  1691  3000               	movlw	0
  8076  1692  00D2               	movwf	?___fladd
  8077  1693  2FFF               	goto	l736
  8078  1694                     l2713:
  8079  1694  0856               	movf	___fladd@a,w
  8080  1695  07D2               	addwf	___fladd@b,f
  8081  1696  0857               	movf	___fladd@a+1,w
  8082  1697  1103               	clrz
  8083  1698  1803               	skipnc
  8084  1699  3E01               	addlw	1
  8085  169A  1903               	skipnz
  8086  169B  2E9D               	goto	u3611
  8087  169C  07D3               	addwf	___fladd@b+1,f
  8088  169D                     u3611:
  8089  169D  0858               	movf	___fladd@a+2,w
  8090  169E  1103               	clrz
  8091  169F  1803               	skipnc
  8092  16A0  3E01               	addlw	1
  8093  16A1  1903               	skipnz
  8094  16A2  2EA4               	goto	u3612
  8095  16A3  07D4               	addwf	___fladd@b+2,f
  8096  16A4                     u3612:
  8097  16A4  0859               	movf	___fladd@a+3,w
  8098  16A5  1103               	clrz
  8099  16A6  1803               	skipnc
  8100  16A7  3E01               	addlw	1
  8101  16A8  1903               	skipnz
  8102  16A9  2EAB               	goto	u3613
  8103  16AA  07D5               	addwf	___fladd@b+3,f
  8104  16AB                     u3613:
  8105  16AB                     l2715:
  8106  16AB  1C55               	btfss	___fladd@b+3,0
  8107  16AC  2EAE               	goto	u3621
  8108  16AD  2EAF               	goto	u3620
  8109  16AE                     u3621:
  8110  16AE  2F85               	goto	l2765
  8111  16AF                     u3620:
  8112  16AF                     l2717:
  8113  16AF  1C65               	btfss	___fladd@grs,0
  8114  16B0  2EB2               	goto	u3631
  8115  16B1  2EB3               	goto	u3630
  8116  16B2                     u3631:
  8117  16B2  2EBC               	goto	l2721
  8118  16B3                     u3630:
  8119  16B3                     l2719:
  8120  16B3  0865               	movf	___fladd@grs,w
  8121  16B4  00DA               	movwf	??___fladd
  8122  16B5  1003               	clrc
  8123  16B6  0C5A               	rrf	??___fladd,w
  8124  16B7  3801               	iorlw	1
  8125  16B8  00DB               	movwf	??___fladd+1
  8126  16B9  085B               	movf	??___fladd+1,w
  8127  16BA  00E5               	movwf	___fladd@grs
  8128  16BB  2EBE               	goto	l2723
  8129  16BC                     l2721:
  8130  16BC  1003               	clrc
  8131  16BD  0CE5               	rrf	___fladd@grs,f
  8132  16BE                     l2723:
  8133  16BE  1C52               	btfss	___fladd@b,0
  8134  16BF  2EC1               	goto	u3641
  8135  16C0  2EC2               	goto	u3640
  8136  16C1                     u3641:
  8137  16C1  2EC3               	goto	l2727
  8138  16C2                     u3640:
  8139  16C2                     l2725:
  8140  16C2  17E5               	bsf	___fladd@grs,7
  8141  16C3                     l2727:
  8142  16C3  3001               	movlw	1
  8143  16C4  00DA               	movwf	??___fladd
  8144  16C5                     u3655:
  8145  16C5  0D55               	rlf	___fladd@b+3,w
  8146  16C6  0CD5               	rrf	___fladd@b+3,f
  8147  16C7  0CD4               	rrf	___fladd@b+2,f
  8148  16C8  0CD3               	rrf	___fladd@b+1,f
  8149  16C9  0CD2               	rrf	___fladd@b,f
  8150  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  8151  16CB  2EC5               	goto	u3655
  8152  16CC                     l2729:
  8153  16CC  3001               	movlw	1
  8154  16CD  00DA               	movwf	??___fladd
  8155  16CE  085A               	movf	??___fladd,w
  8156  16CF  07E4               	addwf	___fladd@bexp,f
  8157  16D0  2F85               	goto	l2765
  8158  16D1                     l2731:
  8159  16D1  0855               	movf	___fladd@b+3,w
  8160  16D2  3A80               	xorlw	128
  8161  16D3  00FF               	movwf	btemp+1
  8162  16D4  0859               	movf	___fladd@a+3,w
  8163  16D5  3A80               	xorlw	128
  8164  16D6  027F               	subwf	btemp+1,w
  8165  16D7  1D03               	skipz
  8166  16D8  2EE3               	goto	u3663
  8167  16D9  0858               	movf	___fladd@a+2,w
  8168  16DA  0254               	subwf	___fladd@b+2,w
  8169  16DB  1D03               	skipz
  8170  16DC  2EE3               	goto	u3663
  8171  16DD  0857               	movf	___fladd@a+1,w
  8172  16DE  0253               	subwf	___fladd@b+1,w
  8173  16DF  1D03               	skipz
  8174  16E0  2EE3               	goto	u3663
  8175  16E1  0856               	movf	___fladd@a,w
  8176  16E2  0252               	subwf	___fladd@b,w
  8177  16E3                     u3663:
  8178  16E3  1803               	skipnc
  8179  16E4  2EE6               	goto	u3661
  8180  16E5  2EE7               	goto	u3660
  8181  16E6                     u3661:
  8182  16E6  2F3F               	goto	l2741
  8183  16E7                     u3660:
  8184  16E7                     l2733:
  8185  16E7  30FF               	movlw	255
  8186  16E8  00DA               	movwf	??___fladd
  8187  16E9  30FF               	movlw	255
  8188  16EA  00DB               	movwf	??___fladd+1
  8189  16EB  30FF               	movlw	255
  8190  16EC  00DC               	movwf	??___fladd+2
  8191  16ED  30FF               	movlw	255
  8192  16EE  00DD               	movwf	??___fladd+3
  8193  16EF  0856               	movf	___fladd@a,w
  8194  16F0  00DE               	movwf	??___fladd+4
  8195  16F1  0857               	movf	___fladd@a+1,w
  8196  16F2  00DF               	movwf	??___fladd+5
  8197  16F3  0858               	movf	___fladd@a+2,w
  8198  16F4  00E0               	movwf	??___fladd+6
  8199  16F5  0859               	movf	___fladd@a+3,w
  8200  16F6  00E1               	movwf	??___fladd+7
  8201  16F7  0852               	movf	___fladd@b,w
  8202  16F8  02DE               	subwf	??___fladd+4,f
  8203  16F9  0853               	movf	___fladd@b+1,w
  8204  16FA  1C03               	skipc
  8205  16FB  0F53               	incfsz	___fladd@b+1,w
  8206  16FC  2EFE               	goto	u3671
  8207  16FD  2EFF               	goto	u3672
  8208  16FE                     u3671:
  8209  16FE  02DF               	subwf	??___fladd+5,f
  8210  16FF                     u3672:
  8211  16FF  0854               	movf	___fladd@b+2,w
  8212  1700  1C03               	skipc
  8213  1701  0F54               	incfsz	___fladd@b+2,w
  8214  1702  2F04               	goto	u3673
  8215  1703  2F05               	goto	u3674
  8216  1704                     u3673:
  8217  1704  02E0               	subwf	??___fladd+6,f
  8218  1705                     u3674:
  8219  1705  0855               	movf	___fladd@b+3,w
  8220  1706  1C03               	skipc
  8221  1707  0F55               	incfsz	___fladd@b+3,w
  8222  1708  2F0A               	goto	u3675
  8223  1709  2F0B               	goto	u3676
  8224  170A                     u3675:
  8225  170A  02E1               	subwf	??___fladd+7,f
  8226  170B                     u3676:
  8227  170B  085E               	movf	??___fladd+4,w
  8228  170C  07DA               	addwf	??___fladd,f
  8229  170D  085F               	movf	??___fladd+5,w
  8230  170E  1803               	skipnc
  8231  170F  0F5F               	incfsz	??___fladd+5,w
  8232  1710  2F12               	goto	u3680
  8233  1711  2F13               	goto	u3681
  8234  1712                     u3680:
  8235  1712  07DB               	addwf	??___fladd+1,f
  8236  1713                     u3681:
  8237  1713  0860               	movf	??___fladd+6,w
  8238  1714  1803               	skipnc
  8239  1715  0F60               	incfsz	??___fladd+6,w
  8240  1716  2F18               	goto	u3682
  8241  1717  2F19               	goto	u3683
  8242  1718                     u3682:
  8243  1718  07DC               	addwf	??___fladd+2,f
  8244  1719                     u3683:
  8245  1719  0861               	movf	??___fladd+7,w
  8246  171A  1803               	skipnc
  8247  171B  0A61               	incf	??___fladd+7,w
  8248  171C  07DD               	addwf	??___fladd+3,f
  8249  171D  085D               	movf	??___fladd+3,w
  8250  171E  00D5               	movwf	___fladd@b+3
  8251  171F  085C               	movf	??___fladd+2,w
  8252  1720  00D4               	movwf	___fladd@b+2
  8253  1721  085B               	movf	??___fladd+1,w
  8254  1722  00D3               	movwf	___fladd@b+1
  8255  1723  085A               	movf	??___fladd,w
  8256  1724  00D2               	movwf	___fladd@b
  8257  1725                     l2735:
  8258  1725  3080               	movlw	128
  8259  1726  00DA               	movwf	??___fladd
  8260  1727  085A               	movf	??___fladd,w
  8261  1728  06E2               	xorwf	___fladd@signs,f
  8262  1729  09E5               	comf	___fladd@grs,f
  8263  172A  0AE5               	incf	___fladd@grs,f
  8264  172B                     l2737:
  8265  172B  0865               	movf	___fladd@grs,w
  8266  172C  1D03               	btfss	3,2
  8267  172D  2F2F               	goto	u3691
  8268  172E  2F30               	goto	u3690
  8269  172F                     u3691:
  8270  172F  2F4D               	goto	l744
  8271  1730                     u3690:
  8272  1730                     l2739:
  8273  1730  3001               	movlw	1
  8274  1731  07D2               	addwf	___fladd@b,f
  8275  1732  3000               	movlw	0
  8276  1733  1803               	skipnc
  8277  1734  3001               	movlw	1
  8278  1735  07D3               	addwf	___fladd@b+1,f
  8279  1736  3000               	movlw	0
  8280  1737  1803               	skipnc
  8281  1738  3001               	movlw	1
  8282  1739  07D4               	addwf	___fladd@b+2,f
  8283  173A  3000               	movlw	0
  8284  173B  1803               	skipnc
  8285  173C  3001               	movlw	1
  8286  173D  07D5               	addwf	___fladd@b+3,f
  8287  173E  2F4D               	goto	l744
  8288  173F                     l2741:
  8289  173F  0856               	movf	___fladd@a,w
  8290  1740  02D2               	subwf	___fladd@b,f
  8291  1741  0857               	movf	___fladd@a+1,w
  8292  1742  1C03               	skipc
  8293  1743  0F57               	incfsz	___fladd@a+1,w
  8294  1744  02D3               	subwf	___fladd@b+1,f
  8295  1745  0858               	movf	___fladd@a+2,w
  8296  1746  1C03               	skipc
  8297  1747  0F58               	incfsz	___fladd@a+2,w
  8298  1748  02D4               	subwf	___fladd@b+2,f
  8299  1749  0859               	movf	___fladd@a+3,w
  8300  174A  1C03               	skipc
  8301  174B  0F59               	incfsz	___fladd@a+3,w
  8302  174C  02D5               	subwf	___fladd@b+3,f
  8303  174D                     l744:
  8304  174D  0855               	movf	___fladd@b+3,w
  8305  174E  0454               	iorwf	___fladd@b+2,w
  8306  174F  0453               	iorwf	___fladd@b+1,w
  8307  1750  0452               	iorwf	___fladd@b,w
  8308  1751  1D03               	skipz
  8309  1752  2F54               	goto	u3701
  8310  1753  2F55               	goto	u3700
  8311  1754                     u3701:
  8312  1754  2F81               	goto	l2763
  8313  1755                     u3700:
  8314  1755                     l2743:
  8315  1755  0865               	movf	___fladd@grs,w
  8316  1756  1D03               	btfss	3,2
  8317  1757  2F59               	goto	u3711
  8318  1758  2F5A               	goto	u3710
  8319  1759                     u3711:
  8320  1759  2F81               	goto	l2763
  8321  175A                     u3710:
  8322  175A                     l2745:
  8323  175A  3000               	movlw	0
  8324  175B  00D5               	movwf	?___fladd+3
  8325  175C  3000               	movlw	0
  8326  175D  00D4               	movwf	?___fladd+2
  8327  175E  3000               	movlw	0
  8328  175F  00D3               	movwf	?___fladd+1
  8329  1760  3000               	movlw	0
  8330  1761  00D2               	movwf	?___fladd
  8331  1762  2FFF               	goto	l736
  8332  1763                     l2749:
  8333  1763  3001               	movlw	1
  8334  1764  00DA               	movwf	??___fladd
  8335  1765                     u3725:
  8336  1765  1003               	clrc
  8337  1766  0DD2               	rlf	___fladd@b,f
  8338  1767  0DD3               	rlf	___fladd@b+1,f
  8339  1768  0DD4               	rlf	___fladd@b+2,f
  8340  1769  0DD5               	rlf	___fladd@b+3,f
  8341  176A  0BDA               	decfsz	??___fladd,f
  8342  176B  2F65               	goto	u3725
  8343  176C                     l2751:
  8344  176C  1FE5               	btfss	___fladd@grs,7
  8345  176D  2F6F               	goto	u3731
  8346  176E  2F70               	goto	u3730
  8347  176F                     u3731:
  8348  176F  2F71               	goto	l748
  8349  1770                     u3730:
  8350  1770                     l2753:
  8351  1770  1452               	bsf	___fladd@b,0
  8352  1771                     l748:
  8353  1771  1C65               	btfss	___fladd@grs,0
  8354  1772  2F74               	goto	u3741
  8355  1773  2F75               	goto	u3740
  8356  1774                     u3741:
  8357  1774  2F78               	goto	l2757
  8358  1775                     u3740:
  8359  1775                     l2755:
  8360  1775  1403               	setc
  8361  1776  0DE5               	rlf	___fladd@grs,f
  8362  1777  2F7A               	goto	l2759
  8363  1778                     l2757:
  8364  1778  1003               	clrc
  8365  1779  0DE5               	rlf	___fladd@grs,f
  8366  177A                     l2759:
  8367  177A  0864               	movf	___fladd@bexp,w
  8368  177B  1903               	btfsc	3,2
  8369  177C  2F7E               	goto	u3751
  8370  177D  2F7F               	goto	u3750
  8371  177E                     u3751:
  8372  177E  2F81               	goto	l2763
  8373  177F                     u3750:
  8374  177F                     l2761:
  8375  177F  3001               	movlw	1
  8376  1780  02E4               	subwf	___fladd@bexp,f
  8377  1781                     l2763:
  8378  1781  1FD4               	btfss	___fladd@b+2,7
  8379  1782  2F84               	goto	u3761
  8380  1783  2F85               	goto	u3760
  8381  1784                     u3761:
  8382  1784  2F63               	goto	l2749
  8383  1785                     u3760:
  8384  1785                     l2765:
  8385  1785  01E3               	clrf	___fladd@aexp
  8386  1786                     l2767:
  8387  1786  1FE5               	btfss	___fladd@grs,7
  8388  1787  2F89               	goto	u3771
  8389  1788  2F8A               	goto	u3770
  8390  1789                     u3771:
  8391  1789  2F98               	goto	l2775
  8392  178A                     u3770:
  8393  178A                     l2769:
  8394  178A  0865               	movf	___fladd@grs,w
  8395  178B  397F               	andlw	127
  8396  178C  1903               	btfsc	3,2
  8397  178D  2F8F               	goto	u3781
  8398  178E  2F90               	goto	u3780
  8399  178F                     u3781:
  8400  178F  2F93               	goto	l754
  8401  1790                     u3780:
  8402  1790                     l2771:
  8403  1790  01E3               	clrf	___fladd@aexp
  8404  1791  0AE3               	incf	___fladd@aexp,f
  8405  1792  2F98               	goto	l2775
  8406  1793                     l754:
  8407  1793  1C52               	btfss	___fladd@b,0
  8408  1794  2F96               	goto	u3791
  8409  1795  2F97               	goto	u3790
  8410  1796                     u3791:
  8411  1796  2F98               	goto	l2775
  8412  1797                     u3790:
  8413  1797  2F90               	goto	l2771
  8414  1798                     l2775:
  8415  1798  0863               	movf	___fladd@aexp,w
  8416  1799  1903               	btfsc	3,2
  8417  179A  2F9C               	goto	u3801
  8418  179B  2F9D               	goto	u3800
  8419  179C                     u3801:
  8420  179C  2FD1               	goto	l757
  8421  179D                     u3800:
  8422  179D                     l2777:
  8423  179D  3001               	movlw	1
  8424  179E  07D2               	addwf	___fladd@b,f
  8425  179F  3000               	movlw	0
  8426  17A0  1803               	skipnc
  8427  17A1  3001               	movlw	1
  8428  17A2  07D3               	addwf	___fladd@b+1,f
  8429  17A3  3000               	movlw	0
  8430  17A4  1803               	skipnc
  8431  17A5  3001               	movlw	1
  8432  17A6  07D4               	addwf	___fladd@b+2,f
  8433  17A7  3000               	movlw	0
  8434  17A8  1803               	skipnc
  8435  17A9  3001               	movlw	1
  8436  17AA  07D5               	addwf	___fladd@b+3,f
  8437  17AB                     l2779:
  8438  17AB  1C55               	btfss	___fladd@b+3,0
  8439  17AC  2FAE               	goto	u3811
  8440  17AD  2FAF               	goto	u3810
  8441  17AE                     u3811:
  8442  17AE  2FD1               	goto	l757
  8443  17AF                     u3810:
  8444  17AF                     l2781:
  8445  17AF  0852               	movf	___fladd@b,w
  8446  17B0  00DA               	movwf	??___fladd
  8447  17B1  0853               	movf	___fladd@b+1,w
  8448  17B2  00DB               	movwf	??___fladd+1
  8449  17B3  0854               	movf	___fladd@b+2,w
  8450  17B4  00DC               	movwf	??___fladd+2
  8451  17B5  0855               	movf	___fladd@b+3,w
  8452  17B6  00DD               	movwf	??___fladd+3
  8453  17B7  3001               	movlw	1
  8454  17B8  00DE               	movwf	??___fladd+4
  8455  17B9                     u3825:
  8456  17B9  0D5D               	rlf	??___fladd+3,w
  8457  17BA  0CDD               	rrf	??___fladd+3,f
  8458  17BB  0CDC               	rrf	??___fladd+2,f
  8459  17BC  0CDB               	rrf	??___fladd+1,f
  8460  17BD  0CDA               	rrf	??___fladd,f
  8461  17BE                     u3820:
  8462  17BE  0BDE               	decfsz	??___fladd+4,f
  8463  17BF  2FB9               	goto	u3825
  8464  17C0  085D               	movf	??___fladd+3,w
  8465  17C1  00D5               	movwf	___fladd@b+3
  8466  17C2  085C               	movf	??___fladd+2,w
  8467  17C3  00D4               	movwf	___fladd@b+2
  8468  17C4  085B               	movf	??___fladd+1,w
  8469  17C5  00D3               	movwf	___fladd@b+1
  8470  17C6  085A               	movf	??___fladd,w
  8471  17C7  00D2               	movwf	___fladd@b
  8472  17C8  0A64               	incf	___fladd@bexp,w
  8473  17C9  1903               	btfsc	3,2
  8474  17CA  2FCC               	goto	u3831
  8475  17CB  2FCD               	goto	u3830
  8476  17CC                     u3831:
  8477  17CC  2FD1               	goto	l757
  8478  17CD                     u3830:
  8479  17CD                     l2783:
  8480  17CD  3001               	movlw	1
  8481  17CE  00DA               	movwf	??___fladd
  8482  17CF  085A               	movf	??___fladd,w
  8483  17D0  07E4               	addwf	___fladd@bexp,f
  8484  17D1                     l757:
  8485  17D1  0A64               	incf	___fladd@bexp,w
  8486  17D2  1903               	btfsc	3,2
  8487  17D3  2FD5               	goto	u3841
  8488  17D4  2FD6               	goto	u3840
  8489  17D5                     u3841:
  8490  17D5  2FDB               	goto	l2787
  8491  17D6                     u3840:
  8492  17D6                     l2785:
  8493  17D6  0864               	movf	___fladd@bexp,w
  8494  17D7  1D03               	btfss	3,2
  8495  17D8  2FDA               	goto	u3851
  8496  17D9  2FDB               	goto	u3850
  8497  17DA                     u3851:
  8498  17DA  2FE9               	goto	l2793
  8499  17DB                     u3850:
  8500  17DB                     l2787:
  8501  17DB  3000               	movlw	0
  8502  17DC  00D5               	movwf	___fladd@b+3
  8503  17DD  3000               	movlw	0
  8504  17DE  00D4               	movwf	___fladd@b+2
  8505  17DF  3000               	movlw	0
  8506  17E0  00D3               	movwf	___fladd@b+1
  8507  17E1  3000               	movlw	0
  8508  17E2  00D2               	movwf	___fladd@b
  8509  17E3                     l2789:
  8510  17E3  0864               	movf	___fladd@bexp,w
  8511  17E4  1D03               	btfss	3,2
  8512  17E5  2FE7               	goto	u3861
  8513  17E6  2FE8               	goto	u3860
  8514  17E7                     u3861:
  8515  17E7  2FE9               	goto	l2793
  8516  17E8                     u3860:
  8517  17E8                     l2791:
  8518  17E8  01E2               	clrf	___fladd@signs
  8519  17E9                     l2793:
  8520  17E9  1C64               	btfss	___fladd@bexp,0
  8521  17EA  2FEC               	goto	u3871
  8522  17EB  2FED               	goto	u3870
  8523  17EC                     u3871:
  8524  17EC  2FEF               	goto	l2797
  8525  17ED                     u3870:
  8526  17ED                     l2795:
  8527  17ED  17D4               	bsf	___fladd@b+2,7
  8528  17EE  2FF3               	goto	l765
  8529  17EF                     l2797:
  8530  17EF  307F               	movlw	127
  8531  17F0  00DA               	movwf	??___fladd
  8532  17F1  085A               	movf	??___fladd,w
  8533  17F2  05D4               	andwf	___fladd@b+2,f
  8534  17F3                     l765:
  8535  17F3  0864               	movf	___fladd@bexp,w
  8536  17F4  00DA               	movwf	??___fladd
  8537  17F5  1003               	clrc
  8538  17F6  0C5A               	rrf	??___fladd,w
  8539  17F7  00DB               	movwf	??___fladd+1
  8540  17F8  085B               	movf	??___fladd+1,w
  8541  17F9  00D5               	movwf	___fladd@b+3
  8542  17FA                     l2799:
  8543  17FA  1FE2               	btfss	___fladd@signs,7
  8544  17FB  2FFD               	goto	u3881
  8545  17FC  2FFE               	goto	u3880
  8546  17FD                     u3881:
  8547  17FD  2FFF               	goto	l766
  8548  17FE                     u3880:
  8549  17FE                     l2801:
  8550  17FE  17D5               	bsf	___fladd@b+3,7
  8551  17FF                     l766:
  8552  17FF                     l736:
  8553  17FF  0008               	return
  8554  1800                     __end_of___fladd:
  8555                           
  8556                           	psect	text24
  8557  1927                     __ptext24:	
  8558 ;; *************** function ___flneg *****************
  8559 ;; Defined at:
  8560 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8561 ;; Parameters:    Size  Location     Type
  8562 ;;  f1              4    0[COMMON] unsigned char 
  8563 ;; Auto vars:     Size  Location     Type
  8564 ;;		None
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  4    0[COMMON] unsigned char 
  8567 ;; Registers used:
  8568 ;;		wreg
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8574 ;;      Params:         4       0       0       0       0
  8575 ;;      Locals:         0       0       0       0       0
  8576 ;;      Temps:          0       0       0       0       0
  8577 ;;      Totals:         4       0       0       0       0
  8578 ;;Total ram usage:        4 bytes
  8579 ;; Hardware stack levels used:    1
  8580 ;; This function calls:
  8581 ;;		Nothing
  8582 ;; This function is called by:
  8583 ;;		_sprintf
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           
  8587                           
  8588                           ;psect for function ___flneg
  8589  1927                     ___flneg:
  8590  1927                     l3207:	
  8591                           ;incstack = 0
  8592                           ; Regs used in ___flneg: [wreg]
  8593                           
  8594  1927  0873               	movf	___flneg@f1+3,w
  8595  1928  0472               	iorwf	___flneg@f1+2,w
  8596  1929  0471               	iorwf	___flneg@f1+1,w
  8597  192A  0470               	iorwf	___flneg@f1,w
  8598  192B  1903               	skipnz
  8599  192C  292E               	goto	u5001
  8600  192D  292F               	goto	u5000
  8601  192E                     u5001:
  8602  192E  2931               	goto	l3211
  8603  192F                     u5000:
  8604  192F                     l3209:
  8605  192F  3080               	movlw	128
  8606  1930  06F3               	xorwf	___flneg@f1+3,f
  8607  1931                     l3211:
  8608  1931                     l595:
  8609  1931  0008               	return
  8610  1932                     __end_of___flneg:
  8611                           
  8612                           	psect	text25
  8613  1EA4                     __ptext25:	
  8614 ;; *************** function ___flge *****************
  8615 ;; Defined at:
  8616 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  ff1             4    0[COMMON] unsigned char 
  8619 ;;  ff2             4    4[COMMON] unsigned char 
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;		None
  8622 ;; Return value:  Size  Location     Type
  8623 ;;		None               void
  8624 ;; Registers used:
  8625 ;;		wreg, status,2, status,0
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8631 ;;      Params:         8       0       0       0       0
  8632 ;;      Locals:         0       0       0       0       0
  8633 ;;      Temps:          4       0       0       0       0
  8634 ;;      Totals:        12       0       0       0       0
  8635 ;;Total ram usage:       12 bytes
  8636 ;; Hardware stack levels used:    1
  8637 ;; This function calls:
  8638 ;;		Nothing
  8639 ;; This function is called by:
  8640 ;;		_sprintf
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           
  8645                           ;psect for function ___flge
  8646  1EA4                     ___flge:
  8647  1EA4                     l3187:	
  8648                           ;incstack = 0
  8649                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8650                           
  8651  1EA4  3000               	movlw	0
  8652  1EA5  0570               	andwf	___flge@ff1,w
  8653  1EA6  00F8               	movwf	??___flge
  8654  1EA7  3000               	movlw	0
  8655  1EA8  0571               	andwf	___flge@ff1+1,w
  8656  1EA9  00F9               	movwf	??___flge+1
  8657  1EAA  3080               	movlw	128
  8658  1EAB  0572               	andwf	___flge@ff1+2,w
  8659  1EAC  00FA               	movwf	??___flge+2
  8660  1EAD  307F               	movlw	127
  8661  1EAE  0573               	andwf	___flge@ff1+3,w
  8662  1EAF  00FB               	movwf	??___flge+3
  8663  1EB0  087B               	movf	??___flge+3,w
  8664  1EB1  047A               	iorwf	??___flge+2,w
  8665  1EB2  0479               	iorwf	??___flge+1,w
  8666  1EB3  0478               	iorwf	??___flge,w
  8667  1EB4  1D03               	skipz
  8668  1EB5  2EB7               	goto	u4931
  8669  1EB6  2EB8               	goto	u4930
  8670  1EB7                     u4931:
  8671  1EB7  2EC0               	goto	l587
  8672  1EB8                     u4930:
  8673  1EB8                     l3189:
  8674  1EB8  3000               	movlw	0
  8675  1EB9  00F3               	movwf	___flge@ff1+3
  8676  1EBA  3000               	movlw	0
  8677  1EBB  00F2               	movwf	___flge@ff1+2
  8678  1EBC  3000               	movlw	0
  8679  1EBD  00F1               	movwf	___flge@ff1+1
  8680  1EBE  3000               	movlw	0
  8681  1EBF  00F0               	movwf	___flge@ff1
  8682  1EC0                     l587:
  8683  1EC0  3000               	movlw	0
  8684  1EC1  0574               	andwf	___flge@ff2,w
  8685  1EC2  00F8               	movwf	??___flge
  8686  1EC3  3000               	movlw	0
  8687  1EC4  0575               	andwf	___flge@ff2+1,w
  8688  1EC5  00F9               	movwf	??___flge+1
  8689  1EC6  3080               	movlw	128
  8690  1EC7  0576               	andwf	___flge@ff2+2,w
  8691  1EC8  00FA               	movwf	??___flge+2
  8692  1EC9  307F               	movlw	127
  8693  1ECA  0577               	andwf	___flge@ff2+3,w
  8694  1ECB  00FB               	movwf	??___flge+3
  8695  1ECC  087B               	movf	??___flge+3,w
  8696  1ECD  047A               	iorwf	??___flge+2,w
  8697  1ECE  0479               	iorwf	??___flge+1,w
  8698  1ECF  0478               	iorwf	??___flge,w
  8699  1ED0  1D03               	skipz
  8700  1ED1  2ED3               	goto	u4941
  8701  1ED2  2ED4               	goto	u4940
  8702  1ED3                     u4941:
  8703  1ED3  2EDC               	goto	l3193
  8704  1ED4                     u4940:
  8705  1ED4                     l3191:
  8706  1ED4  3000               	movlw	0
  8707  1ED5  00F7               	movwf	___flge@ff2+3
  8708  1ED6  3000               	movlw	0
  8709  1ED7  00F6               	movwf	___flge@ff2+2
  8710  1ED8  3000               	movlw	0
  8711  1ED9  00F5               	movwf	___flge@ff2+1
  8712  1EDA  3000               	movlw	0
  8713  1EDB  00F4               	movwf	___flge@ff2
  8714  1EDC                     l3193:
  8715  1EDC  1FF3               	btfss	___flge@ff1+3,7
  8716  1EDD  2EDF               	goto	u4951
  8717  1EDE  2EE0               	goto	u4950
  8718  1EDF                     u4951:
  8719  1EDF  2F04               	goto	l3197
  8720  1EE0                     u4950:
  8721  1EE0                     l3195:
  8722  1EE0  3000               	movlw	0
  8723  1EE1  00F8               	movwf	??___flge
  8724  1EE2  3000               	movlw	0
  8725  1EE3  00F9               	movwf	??___flge+1
  8726  1EE4  3000               	movlw	0
  8727  1EE5  00FA               	movwf	??___flge+2
  8728  1EE6  3080               	movlw	128
  8729  1EE7  00FB               	movwf	??___flge+3
  8730  1EE8  0870               	movf	___flge@ff1,w
  8731  1EE9  02F8               	subwf	??___flge,f
  8732  1EEA  0871               	movf	___flge@ff1+1,w
  8733  1EEB  1C03               	skipc
  8734  1EEC  0F71               	incfsz	___flge@ff1+1,w
  8735  1EED  2EEF               	goto	u4961
  8736  1EEE  2EF0               	goto	u4962
  8737  1EEF                     u4961:
  8738  1EEF  02F9               	subwf	??___flge+1,f
  8739  1EF0                     u4962:
  8740  1EF0  0872               	movf	___flge@ff1+2,w
  8741  1EF1  1C03               	skipc
  8742  1EF2  0F72               	incfsz	___flge@ff1+2,w
  8743  1EF3  2EF5               	goto	u4963
  8744  1EF4  2EF6               	goto	u4964
  8745  1EF5                     u4963:
  8746  1EF5  02FA               	subwf	??___flge+2,f
  8747  1EF6                     u4964:
  8748  1EF6  0873               	movf	___flge@ff1+3,w
  8749  1EF7  1C03               	skipc
  8750  1EF8  0F73               	incfsz	___flge@ff1+3,w
  8751  1EF9  2EFB               	goto	u4965
  8752  1EFA  2EFC               	goto	u4966
  8753  1EFB                     u4965:
  8754  1EFB  02FB               	subwf	??___flge+3,f
  8755  1EFC                     u4966:
  8756  1EFC  087B               	movf	??___flge+3,w
  8757  1EFD  00F3               	movwf	___flge@ff1+3
  8758  1EFE  087A               	movf	??___flge+2,w
  8759  1EFF  00F2               	movwf	___flge@ff1+2
  8760  1F00  0879               	movf	??___flge+1,w
  8761  1F01  00F1               	movwf	___flge@ff1+1
  8762  1F02  0878               	movf	??___flge,w
  8763  1F03  00F0               	movwf	___flge@ff1
  8764  1F04                     l3197:
  8765  1F04  1FF7               	btfss	___flge@ff2+3,7
  8766  1F05  2F07               	goto	u4971
  8767  1F06  2F08               	goto	u4970
  8768  1F07                     u4971:
  8769  1F07  2F2C               	goto	l590
  8770  1F08                     u4970:
  8771  1F08                     l3199:
  8772  1F08  3000               	movlw	0
  8773  1F09  00F8               	movwf	??___flge
  8774  1F0A  3000               	movlw	0
  8775  1F0B  00F9               	movwf	??___flge+1
  8776  1F0C  3000               	movlw	0
  8777  1F0D  00FA               	movwf	??___flge+2
  8778  1F0E  3080               	movlw	128
  8779  1F0F  00FB               	movwf	??___flge+3
  8780  1F10  0874               	movf	___flge@ff2,w
  8781  1F11  02F8               	subwf	??___flge,f
  8782  1F12  0875               	movf	___flge@ff2+1,w
  8783  1F13  1C03               	skipc
  8784  1F14  0F75               	incfsz	___flge@ff2+1,w
  8785  1F15  2F17               	goto	u4981
  8786  1F16  2F18               	goto	u4982
  8787  1F17                     u4981:
  8788  1F17  02F9               	subwf	??___flge+1,f
  8789  1F18                     u4982:
  8790  1F18  0876               	movf	___flge@ff2+2,w
  8791  1F19  1C03               	skipc
  8792  1F1A  0F76               	incfsz	___flge@ff2+2,w
  8793  1F1B  2F1D               	goto	u4983
  8794  1F1C  2F1E               	goto	u4984
  8795  1F1D                     u4983:
  8796  1F1D  02FA               	subwf	??___flge+2,f
  8797  1F1E                     u4984:
  8798  1F1E  0877               	movf	___flge@ff2+3,w
  8799  1F1F  1C03               	skipc
  8800  1F20  0F77               	incfsz	___flge@ff2+3,w
  8801  1F21  2F23               	goto	u4985
  8802  1F22  2F24               	goto	u4986
  8803  1F23                     u4985:
  8804  1F23  02FB               	subwf	??___flge+3,f
  8805  1F24                     u4986:
  8806  1F24  087B               	movf	??___flge+3,w
  8807  1F25  00F7               	movwf	___flge@ff2+3
  8808  1F26  087A               	movf	??___flge+2,w
  8809  1F27  00F6               	movwf	___flge@ff2+2
  8810  1F28  0879               	movf	??___flge+1,w
  8811  1F29  00F5               	movwf	___flge@ff2+1
  8812  1F2A  0878               	movf	??___flge,w
  8813  1F2B  00F4               	movwf	___flge@ff2
  8814  1F2C                     l590:
  8815  1F2C  3080               	movlw	128
  8816  1F2D  06F3               	xorwf	___flge@ff1+3,f
  8817  1F2E  3080               	movlw	128
  8818  1F2F  06F7               	xorwf	___flge@ff2+3,f
  8819  1F30  0877               	movf	___flge@ff2+3,w
  8820  1F31  0273               	subwf	___flge@ff1+3,w
  8821  1F32  1D03               	skipz
  8822  1F33  2F3E               	goto	u4995
  8823  1F34  0876               	movf	___flge@ff2+2,w
  8824  1F35  0272               	subwf	___flge@ff1+2,w
  8825  1F36  1D03               	skipz
  8826  1F37  2F3E               	goto	u4995
  8827  1F38  0875               	movf	___flge@ff2+1,w
  8828  1F39  0271               	subwf	___flge@ff1+1,w
  8829  1F3A  1D03               	skipz
  8830  1F3B  2F3E               	goto	u4995
  8831  1F3C  0874               	movf	___flge@ff2,w
  8832  1F3D  0270               	subwf	___flge@ff1,w
  8833  1F3E                     u4995:
  8834  1F3E  1803               	skipnc
  8835  1F3F  2F41               	goto	u4991
  8836  1F40  2F42               	goto	u4990
  8837  1F41                     u4991:
  8838  1F41  2F44               	goto	l3203
  8839  1F42                     u4990:
  8840  1F42                     l3201:
  8841  1F42  1003               	clrc
  8842  1F43  2F45               	goto	l591
  8843  1F44                     l3203:
  8844  1F44  1403               	setc
  8845  1F45                     l591:
  8846  1F45  0008               	return
  8847  1F46                     __end_of___flge:
  8848                           
  8849                           	psect	text26
  8850  1B45                     __ptext26:	
  8851 ;; *************** function ___fleq *****************
  8852 ;; Defined at:
  8853 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8854 ;; Parameters:    Size  Location     Type
  8855 ;;  ff1             4    0[COMMON] unsigned char 
  8856 ;;  ff2             4    4[COMMON] unsigned char 
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;		None
  8859 ;; Return value:  Size  Location     Type
  8860 ;;		None               void
  8861 ;; Registers used:
  8862 ;;		wreg, status,2, status,0
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8868 ;;      Params:         8       0       0       0       0
  8869 ;;      Locals:         0       0       0       0       0
  8870 ;;      Temps:          4       0       0       0       0
  8871 ;;      Totals:        12       0       0       0       0
  8872 ;;Total ram usage:       12 bytes
  8873 ;; Hardware stack levels used:    1
  8874 ;; This function calls:
  8875 ;;		Nothing
  8876 ;; This function is called by:
  8877 ;;		_sprintf
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881                           
  8882                           ;psect for function ___fleq
  8883  1B45                     ___fleq:
  8884  1B45                     l3175:	
  8885                           ;incstack = 0
  8886                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8887                           
  8888  1B45  3000               	movlw	0
  8889  1B46  0570               	andwf	___fleq@ff1,w
  8890  1B47  00F8               	movwf	??___fleq
  8891  1B48  3000               	movlw	0
  8892  1B49  0571               	andwf	___fleq@ff1+1,w
  8893  1B4A  00F9               	movwf	??___fleq+1
  8894  1B4B  3080               	movlw	128
  8895  1B4C  0572               	andwf	___fleq@ff1+2,w
  8896  1B4D  00FA               	movwf	??___fleq+2
  8897  1B4E  307F               	movlw	127
  8898  1B4F  0573               	andwf	___fleq@ff1+3,w
  8899  1B50  00FB               	movwf	??___fleq+3
  8900  1B51  087B               	movf	??___fleq+3,w
  8901  1B52  047A               	iorwf	??___fleq+2,w
  8902  1B53  0479               	iorwf	??___fleq+1,w
  8903  1B54  0478               	iorwf	??___fleq,w
  8904  1B55  1D03               	skipz
  8905  1B56  2B58               	goto	u4901
  8906  1B57  2B59               	goto	u4900
  8907  1B58                     u4901:
  8908  1B58  2B61               	goto	l582
  8909  1B59                     u4900:
  8910  1B59                     l3177:
  8911  1B59  3000               	movlw	0
  8912  1B5A  00F3               	movwf	___fleq@ff1+3
  8913  1B5B  3000               	movlw	0
  8914  1B5C  00F2               	movwf	___fleq@ff1+2
  8915  1B5D  3000               	movlw	0
  8916  1B5E  00F1               	movwf	___fleq@ff1+1
  8917  1B5F  3000               	movlw	0
  8918  1B60  00F0               	movwf	___fleq@ff1
  8919  1B61                     l582:
  8920  1B61  3000               	movlw	0
  8921  1B62  0574               	andwf	___fleq@ff2,w
  8922  1B63  00F8               	movwf	??___fleq
  8923  1B64  3000               	movlw	0
  8924  1B65  0575               	andwf	___fleq@ff2+1,w
  8925  1B66  00F9               	movwf	??___fleq+1
  8926  1B67  3080               	movlw	128
  8927  1B68  0576               	andwf	___fleq@ff2+2,w
  8928  1B69  00FA               	movwf	??___fleq+2
  8929  1B6A  307F               	movlw	127
  8930  1B6B  0577               	andwf	___fleq@ff2+3,w
  8931  1B6C  00FB               	movwf	??___fleq+3
  8932  1B6D  087B               	movf	??___fleq+3,w
  8933  1B6E  047A               	iorwf	??___fleq+2,w
  8934  1B6F  0479               	iorwf	??___fleq+1,w
  8935  1B70  0478               	iorwf	??___fleq,w
  8936  1B71  1D03               	skipz
  8937  1B72  2B74               	goto	u4911
  8938  1B73  2B75               	goto	u4910
  8939  1B74                     u4911:
  8940  1B74  2B7D               	goto	l583
  8941  1B75                     u4910:
  8942  1B75                     l3179:
  8943  1B75  3000               	movlw	0
  8944  1B76  00F7               	movwf	___fleq@ff2+3
  8945  1B77  3000               	movlw	0
  8946  1B78  00F6               	movwf	___fleq@ff2+2
  8947  1B79  3000               	movlw	0
  8948  1B7A  00F5               	movwf	___fleq@ff2+1
  8949  1B7B  3000               	movlw	0
  8950  1B7C  00F4               	movwf	___fleq@ff2
  8951  1B7D                     l583:
  8952  1B7D  0877               	movf	___fleq@ff2+3,w
  8953  1B7E  0673               	xorwf	___fleq@ff1+3,w
  8954  1B7F  1D03               	skipz
  8955  1B80  2B8B               	goto	u4925
  8956  1B81  0876               	movf	___fleq@ff2+2,w
  8957  1B82  0672               	xorwf	___fleq@ff1+2,w
  8958  1B83  1D03               	skipz
  8959  1B84  2B8B               	goto	u4925
  8960  1B85  0875               	movf	___fleq@ff2+1,w
  8961  1B86  0671               	xorwf	___fleq@ff1+1,w
  8962  1B87  1D03               	skipz
  8963  1B88  2B8B               	goto	u4925
  8964  1B89  0874               	movf	___fleq@ff2,w
  8965  1B8A  0670               	xorwf	___fleq@ff1,w
  8966  1B8B                     u4925:
  8967  1B8B  1903               	skipnz
  8968  1B8C  2B8E               	goto	u4921
  8969  1B8D  2B8F               	goto	u4920
  8970  1B8E                     u4921:
  8971  1B8E  2B91               	goto	l3183
  8972  1B8F                     u4920:
  8973  1B8F                     l3181:
  8974  1B8F  1003               	clrc
  8975  1B90  2B92               	goto	l584
  8976  1B91                     l3183:
  8977  1B91  1403               	setc
  8978  1B92                     l584:
  8979  1B92  0008               	return
  8980  1B93                     __end_of___fleq:
  8981                           
  8982                           	psect	text27
  8983  1AFA                     __ptext27:	
  8984 ;; *************** function _Lcd_Init *****************
  8985 ;; Defined at:
  8986 ;;		line 14 in file "LCD.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;		None
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;		None
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  1    wreg      void 
  8993 ;; Registers used:
  8994 ;;		wreg, status,2, status,0, pclath, cstack
  8995 ;; Tracked objects:
  8996 ;;		On entry : 0/0
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9000 ;;      Params:         0       0       0       0       0
  9001 ;;      Locals:         0       0       0       0       0
  9002 ;;      Temps:          2       0       0       0       0
  9003 ;;      Totals:         2       0       0       0       0
  9004 ;;Total ram usage:        2 bytes
  9005 ;; Hardware stack levels used:    1
  9006 ;; Hardware stack levels required when called:    2
  9007 ;; This function calls:
  9008 ;;		_Lcd_Cmd
  9009 ;;		_Lcd_Port
  9010 ;; This function is called by:
  9011 ;;		_main
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           
  9016                           ;psect for function _Lcd_Init
  9017  1AFA                     _Lcd_Init:
  9018  1AFA                     l3799:	
  9019                           ;incstack = 0
  9020                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9021                           
  9022                           
  9023                           ;LCD.c: 15:   Lcd_Port(0x00);
  9024  1AFA  3000               	movlw	0
  9025  1AFB  120A  158A  2000  160A  158A  	fcall	_Lcd_Port
  9026  1B00                     l3801:
  9027                           
  9028                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  9029  1B00  3034               	movlw	52
  9030  1B01  00F5               	movwf	??_Lcd_Init+1
  9031  1B02  30F1               	movlw	241
  9032  1B03  00F4               	movwf	??_Lcd_Init
  9033  1B04                     u6187:
  9034  1B04  0BF4               	decfsz	??_Lcd_Init,f
  9035  1B05  2B04               	goto	u6187
  9036  1B06  0BF5               	decfsz	??_Lcd_Init+1,f
  9037  1B07  2B04               	goto	u6187
  9038  1B08  2B09               	nop2
  9039  1B09                     l3803:
  9040                           
  9041                           ;LCD.c: 17:   Lcd_Cmd(0x030);
  9042  1B09  3030               	movlw	48
  9043  1B0A  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  9044                           
  9045                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9046  1B0F  300D               	movlw	13
  9047  1B10  00F5               	movwf	??_Lcd_Init+1
  9048  1B11  30FB               	movlw	251
  9049  1B12  00F4               	movwf	??_Lcd_Init
  9050  1B13                     u6197:
  9051  1B13  0BF4               	decfsz	??_Lcd_Init,f
  9052  1B14  2B13               	goto	u6197
  9053  1B15  0BF5               	decfsz	??_Lcd_Init+1,f
  9054  1B16  2B13               	goto	u6197
  9055  1B17  2B18               	nop2
  9056  1B18                     l3805:
  9057                           
  9058                           ;LCD.c: 19:   Lcd_Cmd(0x030);
  9059  1B18  3030               	movlw	48
  9060  1B19  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  9061  1B1E                     l3807:
  9062                           
  9063                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  9064  1B1E  301D               	movlw	29
  9065  1B1F  00F5               	movwf	??_Lcd_Init+1
  9066  1B20  3091               	movlw	145
  9067  1B21  00F4               	movwf	??_Lcd_Init
  9068  1B22                     u6207:
  9069  1B22  0BF4               	decfsz	??_Lcd_Init,f
  9070  1B23  2B22               	goto	u6207
  9071  1B24  0BF5               	decfsz	??_Lcd_Init+1,f
  9072  1B25  2B22               	goto	u6207
  9073                           
  9074                           ;LCD.c: 21:   Lcd_Cmd(0x030);
  9075  1B26  3030               	movlw	48
  9076  1B27  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  9077                           
  9078                           ;LCD.c: 22:   Lcd_Cmd(0x038);
  9079  1B2C  3038               	movlw	56
  9080  1B2D  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  9081                           
  9082                           ;LCD.c: 23:   Lcd_Cmd(0x00C);
  9083  1B32  300C               	movlw	12
  9084  1B33  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  9085                           
  9086                           ;LCD.c: 24:   Lcd_Cmd(0x001);
  9087  1B38  3001               	movlw	1
  9088  1B39  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  9089                           
  9090                           ;LCD.c: 25:   Lcd_Cmd(0x006);
  9091  1B3E  3006               	movlw	6
  9092  1B3F  160A  158A  2144  160A  158A  	fcall	_Lcd_Cmd
  9093  1B44                     l120:
  9094  1B44  0008               	return
  9095  1B45                     __end_of_Lcd_Init:
  9096                           
  9097                           	psect	text28
  9098  1944                     __ptext28:	
  9099 ;; *************** function _Lcd_Cmd *****************
  9100 ;; Defined at:
  9101 ;;		line 33 in file "LCD.c"
  9102 ;; Parameters:    Size  Location     Type
  9103 ;;  a               1    wreg     unsigned char 
  9104 ;; Auto vars:     Size  Location     Type
  9105 ;;  a               1    3[COMMON] unsigned char 
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  1    wreg      void 
  9108 ;; Registers used:
  9109 ;;		wreg, status,2, status,0, pclath, cstack
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9115 ;;      Params:         0       0       0       0       0
  9116 ;;      Locals:         1       0       0       0       0
  9117 ;;      Temps:          2       0       0       0       0
  9118 ;;      Totals:         3       0       0       0       0
  9119 ;;Total ram usage:        3 bytes
  9120 ;; Hardware stack levels used:    1
  9121 ;; Hardware stack levels required when called:    1
  9122 ;; This function calls:
  9123 ;;		_Lcd_Port
  9124 ;; This function is called by:
  9125 ;;		_Lcd_Init
  9126 ;;		_Lcd_Set_Cursor
  9127 ;;		_Lcd_Clear
  9128 ;;		_Lcd_Shift_Right
  9129 ;;		_Lcd_Shift_Left
  9130 ;; This function uses a non-reentrant model
  9131 ;;
  9132                           
  9133                           
  9134                           ;psect for function _Lcd_Cmd
  9135  1944                     _Lcd_Cmd:
  9136                           
  9137                           ;incstack = 0
  9138                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9139                           ;Lcd_Cmd@a stored from wreg
  9140  1944  00F3               	movwf	Lcd_Cmd@a
  9141  1945                     l2943:
  9142                           
  9143                           ;LCD.c: 34:  PORTEbits.RE0 = 0;
  9144  1945  1283               	bcf	3,5	;RP0=0, select bank0
  9145  1946  1303               	bcf	3,6	;RP1=0, select bank0
  9146  1947  1009               	bcf	9,0	;volatile
  9147  1948                     l2945:
  9148                           
  9149                           ;LCD.c: 35:  Lcd_Port(a);
  9150  1948  0873               	movf	Lcd_Cmd@a,w
  9151  1949  120A  158A  2000  160A  158A  	fcall	_Lcd_Port
  9152  194E                     l2947:
  9153                           
  9154                           ;LCD.c: 36:  PORTEbits.RE2 = 1;
  9155  194E  1283               	bcf	3,5	;RP0=0, select bank0
  9156  194F  1303               	bcf	3,6	;RP1=0, select bank0
  9157  1950  1509               	bsf	9,2	;volatile
  9158  1951                     l2949:
  9159                           
  9160                           ;LCD.c: 37:         _delay((unsigned long)((4)*(8000000/4000.0)));
  9161  1951  300B               	movlw	11
  9162  1952  00F2               	movwf	??_Lcd_Cmd+1
  9163  1953  3062               	movlw	98
  9164  1954  00F1               	movwf	??_Lcd_Cmd
  9165  1955                     u6217:
  9166  1955  0BF1               	decfsz	??_Lcd_Cmd,f
  9167  1956  2955               	goto	u6217
  9168  1957  0BF2               	decfsz	??_Lcd_Cmd+1,f
  9169  1958  2955               	goto	u6217
  9170  1959  0000               	nop
  9171  195A                     l2951:
  9172                           
  9173                           ;LCD.c: 38:         PORTEbits.RE2 = 0;
  9174  195A  1283               	bcf	3,5	;RP0=0, select bank0
  9175  195B  1303               	bcf	3,6	;RP1=0, select bank0
  9176  195C  1109               	bcf	9,2	;volatile
  9177  195D                     l126:
  9178  195D  0008               	return
  9179  195E                     __end_of_Lcd_Cmd:
  9180                           
  9181                           	psect	text29
  9182  0800                     __ptext29:	
  9183 ;; *************** function _Lcd_Port *****************
  9184 ;; Defined at:
  9185 ;;		line 29 in file "LCD.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;  a               1    wreg     unsigned char 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;  a               1    0[COMMON] unsigned char 
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  1    wreg      void 
  9192 ;; Registers used:
  9193 ;;		wreg
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9199 ;;      Params:         0       0       0       0       0
  9200 ;;      Locals:         1       0       0       0       0
  9201 ;;      Temps:          0       0       0       0       0
  9202 ;;      Totals:         1       0       0       0       0
  9203 ;;Total ram usage:        1 bytes
  9204 ;; Hardware stack levels used:    1
  9205 ;; This function calls:
  9206 ;;		Nothing
  9207 ;; This function is called by:
  9208 ;;		_Lcd_Init
  9209 ;;		_Lcd_Cmd
  9210 ;;		_Lcd_Write_Char
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           
  9215                           ;psect for function _Lcd_Port
  9216  0800                     _Lcd_Port:
  9217                           
  9218                           ;incstack = 0
  9219                           ; Regs used in _Lcd_Port: [wreg]
  9220                           ;Lcd_Port@a stored from wreg
  9221  0800  00F0               	movwf	Lcd_Port@a
  9222  0801                     l2477:
  9223                           
  9224                           ;LCD.c: 30:     PORTD = a;
  9225  0801  0870               	movf	Lcd_Port@a,w
  9226  0802  1283               	bcf	3,5	;RP0=0, select bank0
  9227  0803  1303               	bcf	3,6	;RP1=0, select bank0
  9228  0804  0088               	movwf	8	;volatile
  9229  0805                     l123:
  9230  0805  0008               	return
  9231  0806                     __end_of_Lcd_Port:
  9232                           
  9233                           	psect	text30
  9234  1E31                     __ptext30:	
  9235 ;; *************** function _ADC_channel2 *****************
  9236 ;; Defined at:
  9237 ;;		line 151 in file "pseudocodigo_lab3.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;		None
  9240 ;; Auto vars:     Size  Location     Type
  9241 ;;		None
  9242 ;; Return value:  Size  Location     Type
  9243 ;;                  1    wreg      void 
  9244 ;; Registers used:
  9245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9246 ;; Tracked objects:
  9247 ;;		On entry : 0/0
  9248 ;;		On exit  : 0/0
  9249 ;;		Unchanged: 0/0
  9250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9251 ;;      Params:         0       0       0       0       0
  9252 ;;      Locals:         0       0       0       0       0
  9253 ;;      Temps:          0       4       0       0       0
  9254 ;;      Totals:         0       4       0       0       0
  9255 ;;Total ram usage:        4 bytes
  9256 ;; Hardware stack levels used:    1
  9257 ;; Hardware stack levels required when called:    2
  9258 ;; This function calls:
  9259 ;;		_ADC_Config
  9260 ;;		___fldiv
  9261 ;;		___flmul
  9262 ;;		___xxtofl
  9263 ;; This function is called by:
  9264 ;;		_main
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           
  9269                           ;psect for function _ADC_channel2
  9270  1E31                     _ADC_channel2:
  9271  1E31                     l3833:	
  9272                           ;incstack = 0
  9273                           ; Regs used in _ADC_channel2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9274                           
  9275                           
  9276                           ;pseudocodigo_lab3.c: 152:     ADC_Config (1);
  9277  1E31  3001               	movlw	1
  9278  1E32  160A  118A  2017  160A  158A  	fcall	_ADC_Config
  9279  1E37                     l3835:
  9280                           
  9281                           ;pseudocodigo_lab3.c: 153:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9282  1E37  3003               	movlw	3
  9283  1E38  1283               	bcf	3,5	;RP0=0, select bank0
  9284  1E39  1303               	bcf	3,6	;RP1=0, select bank0
  9285  1E3A  00D9               	movwf	??_ADC_channel2+1
  9286  1E3B  3097               	movlw	151
  9287  1E3C  00D8               	movwf	??_ADC_channel2
  9288  1E3D                     u6227:
  9289  1E3D  0BD8               	decfsz	??_ADC_channel2,f
  9290  1E3E  2E3D               	goto	u6227
  9291  1E3F  0BD9               	decfsz	??_ADC_channel2+1,f
  9292  1E40  2E3D               	goto	u6227
  9293  1E41                     l3837:
  9294                           
  9295                           ;pseudocodigo_lab3.c: 154:     ADCON0bits.GO = 1;
  9296  1E41  1283               	bcf	3,5	;RP0=0, select bank0
  9297  1E42  1303               	bcf	3,6	;RP1=0, select bank0
  9298  1E43  149F               	bsf	31,1	;volatile
  9299                           
  9300                           ;pseudocodigo_lab3.c: 155:     while (ADCON0bits.GO != 0) {
  9301  1E44  2E9E               	goto	l3841
  9302  1E45                     l3839:
  9303                           
  9304                           ;pseudocodigo_lab3.c: 156:         S2_val = ((ADRESH * 5.0) / 255);
  9305  1E45  3043               	movlw	67
  9306  1E46  00C1               	movwf	___fldiv@a+3
  9307  1E47  307F               	movlw	127
  9308  1E48  00C0               	movwf	___fldiv@a+2
  9309  1E49  3000               	movlw	0
  9310  1E4A  00BF               	movwf	___fldiv@a+1
  9311  1E4B  3000               	movlw	0
  9312  1E4C  00BE               	movwf	___fldiv@a
  9313  1E4D  3040               	movlw	64
  9314  1E4E  00A7               	movwf	___flmul@b+3
  9315  1E4F  30A0               	movlw	160
  9316  1E50  00A6               	movwf	___flmul@b+2
  9317  1E51  3000               	movlw	0
  9318  1E52  00A5               	movwf	___flmul@b+1
  9319  1E53  3000               	movlw	0
  9320  1E54  00A4               	movwf	___flmul@b
  9321  1E55  081E               	movf	30,w	;volatile
  9322  1E56  00D8               	movwf	??_ADC_channel2
  9323  1E57  01D9               	clrf	??_ADC_channel2+1
  9324  1E58  01DA               	clrf	??_ADC_channel2+2
  9325  1E59  01DB               	clrf	??_ADC_channel2+3
  9326  1E5A  085B               	movf	??_ADC_channel2+3,w
  9327  1E5B  00F3               	movwf	___xxtofl@val+3
  9328  1E5C  085A               	movf	??_ADC_channel2+2,w
  9329  1E5D  00F2               	movwf	___xxtofl@val+2
  9330  1E5E  0859               	movf	??_ADC_channel2+1,w
  9331  1E5F  00F1               	movwf	___xxtofl@val+1
  9332  1E60  0858               	movf	??_ADC_channel2,w
  9333  1E61  00F0               	movwf	___xxtofl@val
  9334  1E62  3001               	movlw	1
  9335  1E63  160A  158A  2746  160A  158A  	fcall	___xxtofl
  9336  1E68  0873               	movf	?___xxtofl+3,w
  9337  1E69  1283               	bcf	3,5	;RP0=0, select bank0
  9338  1E6A  1303               	bcf	3,6	;RP1=0, select bank0
  9339  1E6B  00AB               	movwf	___flmul@a+3
  9340  1E6C  0872               	movf	?___xxtofl+2,w
  9341  1E6D  00AA               	movwf	___flmul@a+2
  9342  1E6E  0871               	movf	?___xxtofl+1,w
  9343  1E6F  00A9               	movwf	___flmul@a+1
  9344  1E70  0870               	movf	?___xxtofl,w
  9345  1E71  00A8               	movwf	___flmul@a
  9346  1E72  120A  158A  249F  160A  158A  	fcall	___flmul
  9347  1E77  1283               	bcf	3,5	;RP0=0, select bank0
  9348  1E78  1303               	bcf	3,6	;RP1=0, select bank0
  9349  1E79  0827               	movf	?___flmul+3,w
  9350  1E7A  00C5               	movwf	___fldiv@b+3
  9351  1E7B  0826               	movf	?___flmul+2,w
  9352  1E7C  00C4               	movwf	___fldiv@b+2
  9353  1E7D  0825               	movf	?___flmul+1,w
  9354  1E7E  00C3               	movwf	___fldiv@b+1
  9355  1E7F  0824               	movf	?___flmul,w
  9356  1E80  00C2               	movwf	___fldiv@b
  9357  1E81  160A  118A  2190  160A  158A  	fcall	___fldiv
  9358  1E86  1283               	bcf	3,5	;RP0=0, select bank0
  9359  1E87  1303               	bcf	3,6	;RP1=0, select bank0
  9360  1E88  0841               	movf	?___fldiv+3,w
  9361  1E89  1683               	bsf	3,5	;RP0=1, select bank1
  9362  1E8A  1303               	bcf	3,6	;RP1=0, select bank1
  9363  1E8B  00CA               	movwf	(_S2_val+3)^(0+128)
  9364  1E8C  1283               	bcf	3,5	;RP0=0, select bank0
  9365  1E8D  1303               	bcf	3,6	;RP1=0, select bank0
  9366  1E8E  0840               	movf	?___fldiv+2,w
  9367  1E8F  1683               	bsf	3,5	;RP0=1, select bank1
  9368  1E90  1303               	bcf	3,6	;RP1=0, select bank1
  9369  1E91  00C9               	movwf	(_S2_val+2)^(0+128)
  9370  1E92  1283               	bcf	3,5	;RP0=0, select bank0
  9371  1E93  1303               	bcf	3,6	;RP1=0, select bank0
  9372  1E94  083F               	movf	?___fldiv+1,w
  9373  1E95  1683               	bsf	3,5	;RP0=1, select bank1
  9374  1E96  1303               	bcf	3,6	;RP1=0, select bank1
  9375  1E97  00C8               	movwf	(_S2_val+1)^(0+128)
  9376  1E98  1283               	bcf	3,5	;RP0=0, select bank0
  9377  1E99  1303               	bcf	3,6	;RP1=0, select bank0
  9378  1E9A  083E               	movf	?___fldiv,w
  9379  1E9B  1683               	bsf	3,5	;RP0=1, select bank1
  9380  1E9C  1303               	bcf	3,6	;RP1=0, select bank1
  9381  1E9D  00C7               	movwf	_S2_val^(0+128)
  9382  1E9E                     l3841:
  9383                           
  9384                           ;pseudocodigo_lab3.c: 155:     while (ADCON0bits.GO != 0) {
  9385  1E9E  1283               	bcf	3,5	;RP0=0, select bank0
  9386  1E9F  189F               	btfsc	31,1	;volatile
  9387  1EA0  2EA2               	goto	u6131
  9388  1EA1  2EA3               	goto	u6130
  9389  1EA2                     u6131:
  9390  1EA2  2E45               	goto	l3839
  9391  1EA3                     u6130:
  9392  1EA3                     l85:
  9393  1EA3  0008               	return
  9394  1EA4                     __end_of_ADC_channel2:
  9395                           
  9396                           	psect	text31
  9397  1DBE                     __ptext31:	
  9398 ;; *************** function _ADC_channel1 *****************
  9399 ;; Defined at:
  9400 ;;		line 142 in file "pseudocodigo_lab3.c"
  9401 ;; Parameters:    Size  Location     Type
  9402 ;;		None
  9403 ;; Auto vars:     Size  Location     Type
  9404 ;;		None
  9405 ;; Return value:  Size  Location     Type
  9406 ;;                  1    wreg      void 
  9407 ;; Registers used:
  9408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9409 ;; Tracked objects:
  9410 ;;		On entry : 0/0
  9411 ;;		On exit  : 0/0
  9412 ;;		Unchanged: 0/0
  9413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9414 ;;      Params:         0       0       0       0       0
  9415 ;;      Locals:         0       0       0       0       0
  9416 ;;      Temps:          0       4       0       0       0
  9417 ;;      Totals:         0       4       0       0       0
  9418 ;;Total ram usage:        4 bytes
  9419 ;; Hardware stack levels used:    1
  9420 ;; Hardware stack levels required when called:    2
  9421 ;; This function calls:
  9422 ;;		_ADC_Config
  9423 ;;		___fldiv
  9424 ;;		___flmul
  9425 ;;		___xxtofl
  9426 ;; This function is called by:
  9427 ;;		_main
  9428 ;; This function uses a non-reentrant model
  9429 ;;
  9430                           
  9431                           
  9432                           ;psect for function _ADC_channel1
  9433  1DBE                     _ADC_channel1:
  9434  1DBE                     l3823:	
  9435                           ;incstack = 0
  9436                           ; Regs used in _ADC_channel1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9437                           
  9438                           
  9439                           ;pseudocodigo_lab3.c: 143:     ADC_Config (0);
  9440  1DBE  3000               	movlw	0
  9441  1DBF  160A  118A  2017  160A  158A  	fcall	_ADC_Config
  9442  1DC4                     l3825:
  9443                           
  9444                           ;pseudocodigo_lab3.c: 144:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9445  1DC4  3003               	movlw	3
  9446  1DC5  1283               	bcf	3,5	;RP0=0, select bank0
  9447  1DC6  1303               	bcf	3,6	;RP1=0, select bank0
  9448  1DC7  00D9               	movwf	??_ADC_channel1+1
  9449  1DC8  3097               	movlw	151
  9450  1DC9  00D8               	movwf	??_ADC_channel1
  9451  1DCA                     u6237:
  9452  1DCA  0BD8               	decfsz	??_ADC_channel1,f
  9453  1DCB  2DCA               	goto	u6237
  9454  1DCC  0BD9               	decfsz	??_ADC_channel1+1,f
  9455  1DCD  2DCA               	goto	u6237
  9456  1DCE                     l3827:
  9457                           
  9458                           ;pseudocodigo_lab3.c: 145:     ADCON0bits.GO = 1;
  9459  1DCE  1283               	bcf	3,5	;RP0=0, select bank0
  9460  1DCF  1303               	bcf	3,6	;RP1=0, select bank0
  9461  1DD0  149F               	bsf	31,1	;volatile
  9462                           
  9463                           ;pseudocodigo_lab3.c: 146:     while (ADCON0bits.GO != 0) {
  9464  1DD1  2E2B               	goto	l3831
  9465  1DD2                     l3829:
  9466                           
  9467                           ;pseudocodigo_lab3.c: 147:         S1_val = ((ADRESH * 5.0) / 255);
  9468  1DD2  3043               	movlw	67
  9469  1DD3  00C1               	movwf	___fldiv@a+3
  9470  1DD4  307F               	movlw	127
  9471  1DD5  00C0               	movwf	___fldiv@a+2
  9472  1DD6  3000               	movlw	0
  9473  1DD7  00BF               	movwf	___fldiv@a+1
  9474  1DD8  3000               	movlw	0
  9475  1DD9  00BE               	movwf	___fldiv@a
  9476  1DDA  3040               	movlw	64
  9477  1DDB  00A7               	movwf	___flmul@b+3
  9478  1DDC  30A0               	movlw	160
  9479  1DDD  00A6               	movwf	___flmul@b+2
  9480  1DDE  3000               	movlw	0
  9481  1DDF  00A5               	movwf	___flmul@b+1
  9482  1DE0  3000               	movlw	0
  9483  1DE1  00A4               	movwf	___flmul@b
  9484  1DE2  081E               	movf	30,w	;volatile
  9485  1DE3  00D8               	movwf	??_ADC_channel1
  9486  1DE4  01D9               	clrf	??_ADC_channel1+1
  9487  1DE5  01DA               	clrf	??_ADC_channel1+2
  9488  1DE6  01DB               	clrf	??_ADC_channel1+3
  9489  1DE7  085B               	movf	??_ADC_channel1+3,w
  9490  1DE8  00F3               	movwf	___xxtofl@val+3
  9491  1DE9  085A               	movf	??_ADC_channel1+2,w
  9492  1DEA  00F2               	movwf	___xxtofl@val+2
  9493  1DEB  0859               	movf	??_ADC_channel1+1,w
  9494  1DEC  00F1               	movwf	___xxtofl@val+1
  9495  1DED  0858               	movf	??_ADC_channel1,w
  9496  1DEE  00F0               	movwf	___xxtofl@val
  9497  1DEF  3001               	movlw	1
  9498  1DF0  160A  158A  2746  160A  158A  	fcall	___xxtofl
  9499  1DF5  0873               	movf	?___xxtofl+3,w
  9500  1DF6  1283               	bcf	3,5	;RP0=0, select bank0
  9501  1DF7  1303               	bcf	3,6	;RP1=0, select bank0
  9502  1DF8  00AB               	movwf	___flmul@a+3
  9503  1DF9  0872               	movf	?___xxtofl+2,w
  9504  1DFA  00AA               	movwf	___flmul@a+2
  9505  1DFB  0871               	movf	?___xxtofl+1,w
  9506  1DFC  00A9               	movwf	___flmul@a+1
  9507  1DFD  0870               	movf	?___xxtofl,w
  9508  1DFE  00A8               	movwf	___flmul@a
  9509  1DFF  120A  158A  249F  160A  158A  	fcall	___flmul
  9510  1E04  1283               	bcf	3,5	;RP0=0, select bank0
  9511  1E05  1303               	bcf	3,6	;RP1=0, select bank0
  9512  1E06  0827               	movf	?___flmul+3,w
  9513  1E07  00C5               	movwf	___fldiv@b+3
  9514  1E08  0826               	movf	?___flmul+2,w
  9515  1E09  00C4               	movwf	___fldiv@b+2
  9516  1E0A  0825               	movf	?___flmul+1,w
  9517  1E0B  00C3               	movwf	___fldiv@b+1
  9518  1E0C  0824               	movf	?___flmul,w
  9519  1E0D  00C2               	movwf	___fldiv@b
  9520  1E0E  160A  118A  2190  160A  158A  	fcall	___fldiv
  9521  1E13  1283               	bcf	3,5	;RP0=0, select bank0
  9522  1E14  1303               	bcf	3,6	;RP1=0, select bank0
  9523  1E15  0841               	movf	?___fldiv+3,w
  9524  1E16  1683               	bsf	3,5	;RP0=1, select bank1
  9525  1E17  1303               	bcf	3,6	;RP1=0, select bank1
  9526  1E18  00CE               	movwf	(_S1_val+3)^(0+128)
  9527  1E19  1283               	bcf	3,5	;RP0=0, select bank0
  9528  1E1A  1303               	bcf	3,6	;RP1=0, select bank0
  9529  1E1B  0840               	movf	?___fldiv+2,w
  9530  1E1C  1683               	bsf	3,5	;RP0=1, select bank1
  9531  1E1D  1303               	bcf	3,6	;RP1=0, select bank1
  9532  1E1E  00CD               	movwf	(_S1_val+2)^(0+128)
  9533  1E1F  1283               	bcf	3,5	;RP0=0, select bank0
  9534  1E20  1303               	bcf	3,6	;RP1=0, select bank0
  9535  1E21  083F               	movf	?___fldiv+1,w
  9536  1E22  1683               	bsf	3,5	;RP0=1, select bank1
  9537  1E23  1303               	bcf	3,6	;RP1=0, select bank1
  9538  1E24  00CC               	movwf	(_S1_val+1)^(0+128)
  9539  1E25  1283               	bcf	3,5	;RP0=0, select bank0
  9540  1E26  1303               	bcf	3,6	;RP1=0, select bank0
  9541  1E27  083E               	movf	?___fldiv,w
  9542  1E28  1683               	bsf	3,5	;RP0=1, select bank1
  9543  1E29  1303               	bcf	3,6	;RP1=0, select bank1
  9544  1E2A  00CB               	movwf	_S1_val^(0+128)
  9545  1E2B                     l3831:
  9546                           
  9547                           ;pseudocodigo_lab3.c: 146:     while (ADCON0bits.GO != 0) {
  9548  1E2B  1283               	bcf	3,5	;RP0=0, select bank0
  9549  1E2C  189F               	btfsc	31,1	;volatile
  9550  1E2D  2E2F               	goto	u6121
  9551  1E2E  2E30               	goto	u6120
  9552  1E2F                     u6121:
  9553  1E2F  2DD2               	goto	l3829
  9554  1E30                     u6120:
  9555  1E30                     l79:
  9556  1E30  0008               	return
  9557  1E31                     __end_of_ADC_channel1:
  9558                           
  9559                           	psect	text32
  9560  1F46                     __ptext32:	
  9561 ;; *************** function ___xxtofl *****************
  9562 ;; Defined at:
  9563 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  9564 ;; Parameters:    Size  Location     Type
  9565 ;;  sign            1    wreg     unsigned char 
  9566 ;;  val             4    0[COMMON] long 
  9567 ;; Auto vars:     Size  Location     Type
  9568 ;;  sign            1    8[COMMON] unsigned char 
  9569 ;;  arg             4   10[COMMON] unsigned long 
  9570 ;;  exp             1    9[COMMON] unsigned char 
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  4    0[COMMON] unsigned char 
  9573 ;; Registers used:
  9574 ;;		wreg, status,2, status,0
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 0/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9580 ;;      Params:         4       0       0       0       0
  9581 ;;      Locals:         6       0       0       0       0
  9582 ;;      Temps:          4       0       0       0       0
  9583 ;;      Totals:        14       0       0       0       0
  9584 ;;Total ram usage:       14 bytes
  9585 ;; Hardware stack levels used:    1
  9586 ;; This function calls:
  9587 ;;		Nothing
  9588 ;; This function is called by:
  9589 ;;		_ADC_channel1
  9590 ;;		_ADC_channel2
  9591 ;;		_sprintf
  9592 ;; This function uses a non-reentrant model
  9593 ;;
  9594                           
  9595                           
  9596                           ;psect for function ___xxtofl
  9597  1F46                     ___xxtofl:
  9598                           
  9599                           ;incstack = 0
  9600                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9601                           ;___xxtofl@sign stored from wreg
  9602  1F46  00F8               	movwf	___xxtofl@sign
  9603  1F47                     l3277:
  9604  1F47  0878               	movf	___xxtofl@sign,w
  9605  1F48  1903               	btfsc	3,2
  9606  1F49  2F4B               	goto	u5171
  9607  1F4A  2F4C               	goto	u5170
  9608  1F4B                     u5171:
  9609  1F4B  2F60               	goto	l3283
  9610  1F4C                     u5170:
  9611  1F4C                     l3279:
  9612  1F4C  1FF3               	btfss	___xxtofl@val+3,7
  9613  1F4D  2F4F               	goto	u5181
  9614  1F4E  2F50               	goto	u5180
  9615  1F4F                     u5181:
  9616  1F4F  2F60               	goto	l3283
  9617  1F50                     u5180:
  9618  1F50                     l3281:
  9619  1F50  0970               	comf	___xxtofl@val,w
  9620  1F51  00FA               	movwf	___xxtofl@arg
  9621  1F52  0971               	comf	___xxtofl@val+1,w
  9622  1F53  00FB               	movwf	___xxtofl@arg+1
  9623  1F54  0972               	comf	___xxtofl@val+2,w
  9624  1F55  00FC               	movwf	___xxtofl@arg+2
  9625  1F56  0973               	comf	___xxtofl@val+3,w
  9626  1F57  00FD               	movwf	___xxtofl@arg+3
  9627  1F58  0AFA               	incf	___xxtofl@arg,f
  9628  1F59  1903               	skipnz
  9629  1F5A  0AFB               	incf	___xxtofl@arg+1,f
  9630  1F5B  1903               	skipnz
  9631  1F5C  0AFC               	incf	___xxtofl@arg+2,f
  9632  1F5D  1903               	skipnz
  9633  1F5E  0AFD               	incf	___xxtofl@arg+3,f
  9634  1F5F  2F68               	goto	l863
  9635  1F60                     l3283:
  9636  1F60  0873               	movf	___xxtofl@val+3,w
  9637  1F61  00FD               	movwf	___xxtofl@arg+3
  9638  1F62  0872               	movf	___xxtofl@val+2,w
  9639  1F63  00FC               	movwf	___xxtofl@arg+2
  9640  1F64  0871               	movf	___xxtofl@val+1,w
  9641  1F65  00FB               	movwf	___xxtofl@arg+1
  9642  1F66  0870               	movf	___xxtofl@val,w
  9643  1F67  00FA               	movwf	___xxtofl@arg
  9644  1F68                     l863:
  9645  1F68  0873               	movf	___xxtofl@val+3,w
  9646  1F69  0472               	iorwf	___xxtofl@val+2,w
  9647  1F6A  0471               	iorwf	___xxtofl@val+1,w
  9648  1F6B  0470               	iorwf	___xxtofl@val,w
  9649  1F6C  1D03               	skipz
  9650  1F6D  2F6F               	goto	u5191
  9651  1F6E  2F70               	goto	u5190
  9652  1F6F                     u5191:
  9653  1F6F  2F79               	goto	l3289
  9654  1F70                     u5190:
  9655  1F70                     l3285:
  9656  1F70  3000               	movlw	0
  9657  1F71  00F3               	movwf	?___xxtofl+3
  9658  1F72  3000               	movlw	0
  9659  1F73  00F2               	movwf	?___xxtofl+2
  9660  1F74  3000               	movlw	0
  9661  1F75  00F1               	movwf	?___xxtofl+1
  9662  1F76  3000               	movlw	0
  9663  1F77  00F0               	movwf	?___xxtofl
  9664  1F78  2FFF               	goto	l865
  9665  1F79                     l3289:
  9666  1F79  3096               	movlw	150
  9667  1F7A  00F4               	movwf	??___xxtofl
  9668  1F7B  0874               	movf	??___xxtofl,w
  9669  1F7C  00F9               	movwf	___xxtofl@exp
  9670  1F7D  2F8B               	goto	l3293
  9671  1F7E                     l3291:
  9672  1F7E  3001               	movlw	1
  9673  1F7F  00F4               	movwf	??___xxtofl
  9674  1F80  0874               	movf	??___xxtofl,w
  9675  1F81  07F9               	addwf	___xxtofl@exp,f
  9676  1F82  3001               	movlw	1
  9677  1F83                     u5205:
  9678  1F83  1003               	clrc
  9679  1F84  0CFD               	rrf	___xxtofl@arg+3,f
  9680  1F85  0CFC               	rrf	___xxtofl@arg+2,f
  9681  1F86  0CFB               	rrf	___xxtofl@arg+1,f
  9682  1F87  0CFA               	rrf	___xxtofl@arg,f
  9683  1F88  3EFF               	addlw	-1
  9684  1F89  1D03               	skipz
  9685  1F8A  2F83               	goto	u5205
  9686  1F8B                     l3293:
  9687  1F8B  30FE               	movlw	254
  9688  1F8C  057D               	andwf	___xxtofl@arg+3,w
  9689  1F8D  1D03               	btfss	3,2
  9690  1F8E  2F90               	goto	u5211
  9691  1F8F  2F91               	goto	u5210
  9692  1F90                     u5211:
  9693  1F90  2F7E               	goto	l3291
  9694  1F91                     u5210:
  9695  1F91  2FAD               	goto	l869
  9696  1F92                     l3295:
  9697  1F92  3001               	movlw	1
  9698  1F93  00F4               	movwf	??___xxtofl
  9699  1F94  0874               	movf	??___xxtofl,w
  9700  1F95  07F9               	addwf	___xxtofl@exp,f
  9701  1F96                     l3297:
  9702  1F96  3001               	movlw	1
  9703  1F97  07FA               	addwf	___xxtofl@arg,f
  9704  1F98  3000               	movlw	0
  9705  1F99  1803               	skipnc
  9706  1F9A  3001               	movlw	1
  9707  1F9B  07FB               	addwf	___xxtofl@arg+1,f
  9708  1F9C  3000               	movlw	0
  9709  1F9D  1803               	skipnc
  9710  1F9E  3001               	movlw	1
  9711  1F9F  07FC               	addwf	___xxtofl@arg+2,f
  9712  1FA0  3000               	movlw	0
  9713  1FA1  1803               	skipnc
  9714  1FA2  3001               	movlw	1
  9715  1FA3  07FD               	addwf	___xxtofl@arg+3,f
  9716  1FA4                     l3299:
  9717  1FA4  3001               	movlw	1
  9718  1FA5                     u5225:
  9719  1FA5  1003               	clrc
  9720  1FA6  0CFD               	rrf	___xxtofl@arg+3,f
  9721  1FA7  0CFC               	rrf	___xxtofl@arg+2,f
  9722  1FA8  0CFB               	rrf	___xxtofl@arg+1,f
  9723  1FA9  0CFA               	rrf	___xxtofl@arg,f
  9724  1FAA  3EFF               	addlw	-1
  9725  1FAB  1D03               	skipz
  9726  1FAC  2FA5               	goto	u5225
  9727  1FAD                     l869:
  9728  1FAD  30FF               	movlw	255
  9729  1FAE  057D               	andwf	___xxtofl@arg+3,w
  9730  1FAF  1D03               	btfss	3,2
  9731  1FB0  2FB2               	goto	u5231
  9732  1FB1  2FB3               	goto	u5230
  9733  1FB2                     u5231:
  9734  1FB2  2F92               	goto	l3295
  9735  1FB3                     u5230:
  9736  1FB3  2FBF               	goto	l3303
  9737  1FB4                     l3301:
  9738  1FB4  3001               	movlw	1
  9739  1FB5  02F9               	subwf	___xxtofl@exp,f
  9740  1FB6  3001               	movlw	1
  9741  1FB7  00F4               	movwf	??___xxtofl
  9742  1FB8                     u5245:
  9743  1FB8  1003               	clrc
  9744  1FB9  0DFA               	rlf	___xxtofl@arg,f
  9745  1FBA  0DFB               	rlf	___xxtofl@arg+1,f
  9746  1FBB  0DFC               	rlf	___xxtofl@arg+2,f
  9747  1FBC  0DFD               	rlf	___xxtofl@arg+3,f
  9748  1FBD  0BF4               	decfsz	??___xxtofl,f
  9749  1FBE  2FB8               	goto	u5245
  9750  1FBF                     l3303:
  9751  1FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  9752  1FC0  2FC2               	goto	u5251
  9753  1FC1  2FC3               	goto	u5250
  9754  1FC2                     u5251:
  9755  1FC2  2FC9               	goto	l876
  9756  1FC3                     u5250:
  9757  1FC3                     l3305:
  9758  1FC3  3002               	movlw	2
  9759  1FC4  0279               	subwf	___xxtofl@exp,w
  9760  1FC5  1803               	skipnc
  9761  1FC6  2FC8               	goto	u5261
  9762  1FC7  2FC9               	goto	u5260
  9763  1FC8                     u5261:
  9764  1FC8  2FB4               	goto	l3301
  9765  1FC9                     u5260:
  9766  1FC9                     l876:
  9767  1FC9  1879               	btfsc	___xxtofl@exp,0
  9768  1FCA  2FCC               	goto	u5271
  9769  1FCB  2FCD               	goto	u5270
  9770  1FCC                     u5271:
  9771  1FCC  2FD5               	goto	l877
  9772  1FCD                     u5270:
  9773  1FCD                     l3307:
  9774  1FCD  30FF               	movlw	255
  9775  1FCE  05FA               	andwf	___xxtofl@arg,f
  9776  1FCF  30FF               	movlw	255
  9777  1FD0  05FB               	andwf	___xxtofl@arg+1,f
  9778  1FD1  307F               	movlw	127
  9779  1FD2  05FC               	andwf	___xxtofl@arg+2,f
  9780  1FD3  30FF               	movlw	255
  9781  1FD4  05FD               	andwf	___xxtofl@arg+3,f
  9782  1FD5                     l877:
  9783  1FD5  1003               	clrc
  9784  1FD6  0CF9               	rrf	___xxtofl@exp,f
  9785  1FD7                     l3309:
  9786  1FD7  0879               	movf	___xxtofl@exp,w
  9787  1FD8  00F4               	movwf	??___xxtofl
  9788  1FD9  01F5               	clrf	??___xxtofl+1
  9789  1FDA  01F6               	clrf	??___xxtofl+2
  9790  1FDB  01F7               	clrf	??___xxtofl+3
  9791  1FDC  3018               	movlw	24
  9792  1FDD                     u5285:
  9793  1FDD  1003               	clrc
  9794  1FDE  0DF4               	rlf	??___xxtofl,f
  9795  1FDF  0DF5               	rlf	??___xxtofl+1,f
  9796  1FE0  0DF6               	rlf	??___xxtofl+2,f
  9797  1FE1  0DF7               	rlf	??___xxtofl+3,f
  9798  1FE2                     u5280:
  9799  1FE2  3EFF               	addlw	-1
  9800  1FE3  1D03               	skipz
  9801  1FE4  2FDD               	goto	u5285
  9802  1FE5  0874               	movf	??___xxtofl,w
  9803  1FE6  04FA               	iorwf	___xxtofl@arg,f
  9804  1FE7  0875               	movf	??___xxtofl+1,w
  9805  1FE8  04FB               	iorwf	___xxtofl@arg+1,f
  9806  1FE9  0876               	movf	??___xxtofl+2,w
  9807  1FEA  04FC               	iorwf	___xxtofl@arg+2,f
  9808  1FEB  0877               	movf	??___xxtofl+3,w
  9809  1FEC  04FD               	iorwf	___xxtofl@arg+3,f
  9810  1FED                     l3311:
  9811  1FED  0878               	movf	___xxtofl@sign,w
  9812  1FEE  1903               	btfsc	3,2
  9813  1FEF  2FF1               	goto	u5291
  9814  1FF0  2FF2               	goto	u5290
  9815  1FF1                     u5291:
  9816  1FF1  2FF7               	goto	l3317
  9817  1FF2                     u5290:
  9818  1FF2                     l3313:
  9819  1FF2  1FF3               	btfss	___xxtofl@val+3,7
  9820  1FF3  2FF5               	goto	u5301
  9821  1FF4  2FF6               	goto	u5300
  9822  1FF5                     u5301:
  9823  1FF5  2FF7               	goto	l3317
  9824  1FF6                     u5300:
  9825  1FF6                     l3315:
  9826  1FF6  17FD               	bsf	___xxtofl@arg+3,7
  9827  1FF7                     l3317:
  9828  1FF7  087D               	movf	___xxtofl@arg+3,w
  9829  1FF8  00F3               	movwf	?___xxtofl+3
  9830  1FF9  087C               	movf	___xxtofl@arg+2,w
  9831  1FFA  00F2               	movwf	?___xxtofl+2
  9832  1FFB  087B               	movf	___xxtofl@arg+1,w
  9833  1FFC  00F1               	movwf	?___xxtofl+1
  9834  1FFD  087A               	movf	___xxtofl@arg,w
  9835  1FFE  00F0               	movwf	?___xxtofl
  9836  1FFF                     l865:
  9837  1FFF  0008               	return
  9838  2000                     __end_of___xxtofl:
  9839                           
  9840                           	psect	text33
  9841  0C9F                     __ptext33:	
  9842 ;; *************** function ___flmul *****************
  9843 ;; Defined at:
  9844 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;  b               4    4[BANK0 ] unsigned char 
  9847 ;;  a               4    8[BANK0 ] unsigned char 
  9848 ;; Auto vars:     Size  Location     Type
  9849 ;;  prod            4   24[BANK0 ] struct .
  9850 ;;  grs             4   18[BANK0 ] unsigned long 
  9851 ;;  temp            2   28[BANK0 ] struct .
  9852 ;;  bexp            1   23[BANK0 ] unsigned char 
  9853 ;;  aexp            1   22[BANK0 ] unsigned char 
  9854 ;;  sign            1   17[BANK0 ] unsigned char 
  9855 ;; Return value:  Size  Location     Type
  9856 ;;                  4    4[BANK0 ] unsigned char 
  9857 ;; Registers used:
  9858 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9859 ;; Tracked objects:
  9860 ;;		On entry : 0/0
  9861 ;;		On exit  : 0/0
  9862 ;;		Unchanged: 0/0
  9863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9864 ;;      Params:         0       8       0       0       0
  9865 ;;      Locals:         0      13       0       0       0
  9866 ;;      Temps:          0       5       0       0       0
  9867 ;;      Totals:         0      26       0       0       0
  9868 ;;Total ram usage:       26 bytes
  9869 ;; Hardware stack levels used:    1
  9870 ;; Hardware stack levels required when called:    1
  9871 ;; This function calls:
  9872 ;;		__Umul8_16
  9873 ;; This function is called by:
  9874 ;;		_ADC_channel1
  9875 ;;		_ADC_channel2
  9876 ;;		_fround
  9877 ;;		_scale
  9878 ;;		_sprintf
  9879 ;; This function uses a non-reentrant model
  9880 ;;
  9881                           
  9882                           
  9883                           ;psect for function ___flmul
  9884  0C9F                     ___flmul:
  9885  0C9F                     l2803:	
  9886                           ;incstack = 0
  9887                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9888                           
  9889  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  9890  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  9891  0CA1  0827               	movf	___flmul@b+3,w
  9892  0CA2  3980               	andlw	128
  9893  0CA3  00AC               	movwf	??___flmul
  9894  0CA4  082C               	movf	??___flmul,w
  9895  0CA5  00B1               	movwf	___flmul@sign
  9896  0CA6                     l2805:
  9897  0CA6  0827               	movf	___flmul@b+3,w
  9898  0CA7  00AC               	movwf	??___flmul
  9899  0CA8  072C               	addwf	??___flmul,w
  9900  0CA9  00AD               	movwf	??___flmul+1
  9901  0CAA  082D               	movf	??___flmul+1,w
  9902  0CAB  00B7               	movwf	___flmul@bexp
  9903  0CAC                     l2807:
  9904  0CAC  1FA6               	btfss	___flmul@b+2,7
  9905  0CAD  2CAF               	goto	u3891
  9906  0CAE  2CB0               	goto	u3890
  9907  0CAF                     u3891:
  9908  0CAF  2CB1               	goto	l2811
  9909  0CB0                     u3890:
  9910  0CB0                     l2809:
  9911  0CB0  1437               	bsf	___flmul@bexp,0
  9912  0CB1                     l2811:
  9913  0CB1  0837               	movf	___flmul@bexp,w
  9914  0CB2  1903               	btfsc	3,2
  9915  0CB3  2CB5               	goto	u3901
  9916  0CB4  2CB6               	goto	u3900
  9917  0CB5                     u3901:
  9918  0CB5  2CC5               	goto	l2819
  9919  0CB6                     u3900:
  9920  0CB6                     l2813:
  9921  0CB6  0A37               	incf	___flmul@bexp,w
  9922  0CB7  1D03               	btfss	3,2
  9923  0CB8  2CBA               	goto	u3911
  9924  0CB9  2CBB               	goto	u3910
  9925  0CBA                     u3911:
  9926  0CBA  2CC3               	goto	l2817
  9927  0CBB                     u3910:
  9928  0CBB                     l2815:
  9929  0CBB  3000               	movlw	0
  9930  0CBC  00A7               	movwf	___flmul@b+3
  9931  0CBD  3000               	movlw	0
  9932  0CBE  00A6               	movwf	___flmul@b+2
  9933  0CBF  3000               	movlw	0
  9934  0CC0  00A5               	movwf	___flmul@b+1
  9935  0CC1  3000               	movlw	0
  9936  0CC2  00A4               	movwf	___flmul@b
  9937  0CC3                     l2817:
  9938  0CC3  17A6               	bsf	___flmul@b+2,7
  9939  0CC4  2CCD               	goto	l2821
  9940  0CC5                     l2819:
  9941  0CC5  3000               	movlw	0
  9942  0CC6  00A7               	movwf	___flmul@b+3
  9943  0CC7  3000               	movlw	0
  9944  0CC8  00A6               	movwf	___flmul@b+2
  9945  0CC9  3000               	movlw	0
  9946  0CCA  00A5               	movwf	___flmul@b+1
  9947  0CCB  3000               	movlw	0
  9948  0CCC  00A4               	movwf	___flmul@b
  9949  0CCD                     l2821:
  9950  0CCD  082B               	movf	___flmul@a+3,w
  9951  0CCE  3980               	andlw	128
  9952  0CCF  00AC               	movwf	??___flmul
  9953  0CD0  082C               	movf	??___flmul,w
  9954  0CD1  06B1               	xorwf	___flmul@sign,f
  9955  0CD2                     l2823:
  9956  0CD2  082B               	movf	___flmul@a+3,w
  9957  0CD3  00AC               	movwf	??___flmul
  9958  0CD4  072C               	addwf	??___flmul,w
  9959  0CD5  00AD               	movwf	??___flmul+1
  9960  0CD6  082D               	movf	??___flmul+1,w
  9961  0CD7  00B6               	movwf	___flmul@aexp
  9962  0CD8                     l2825:
  9963  0CD8  1FAA               	btfss	___flmul@a+2,7
  9964  0CD9  2CDB               	goto	u3921
  9965  0CDA  2CDC               	goto	u3920
  9966  0CDB                     u3921:
  9967  0CDB  2CDD               	goto	l2829
  9968  0CDC                     u3920:
  9969  0CDC                     l2827:
  9970  0CDC  1436               	bsf	___flmul@aexp,0
  9971  0CDD                     l2829:
  9972  0CDD  0836               	movf	___flmul@aexp,w
  9973  0CDE  1903               	btfsc	3,2
  9974  0CDF  2CE1               	goto	u3931
  9975  0CE0  2CE2               	goto	u3930
  9976  0CE1                     u3931:
  9977  0CE1  2CF1               	goto	l2837
  9978  0CE2                     u3930:
  9979  0CE2                     l2831:
  9980  0CE2  0A36               	incf	___flmul@aexp,w
  9981  0CE3  1D03               	btfss	3,2
  9982  0CE4  2CE6               	goto	u3941
  9983  0CE5  2CE7               	goto	u3940
  9984  0CE6                     u3941:
  9985  0CE6  2CEF               	goto	l2835
  9986  0CE7                     u3940:
  9987  0CE7                     l2833:
  9988  0CE7  3000               	movlw	0
  9989  0CE8  00AB               	movwf	___flmul@a+3
  9990  0CE9  3000               	movlw	0
  9991  0CEA  00AA               	movwf	___flmul@a+2
  9992  0CEB  3000               	movlw	0
  9993  0CEC  00A9               	movwf	___flmul@a+1
  9994  0CED  3000               	movlw	0
  9995  0CEE  00A8               	movwf	___flmul@a
  9996  0CEF                     l2835:
  9997  0CEF  17AA               	bsf	___flmul@a+2,7
  9998  0CF0  2CF9               	goto	l2839
  9999  0CF1                     l2837:
 10000  0CF1  3000               	movlw	0
 10001  0CF2  00AB               	movwf	___flmul@a+3
 10002  0CF3  3000               	movlw	0
 10003  0CF4  00AA               	movwf	___flmul@a+2
 10004  0CF5  3000               	movlw	0
 10005  0CF6  00A9               	movwf	___flmul@a+1
 10006  0CF7  3000               	movlw	0
 10007  0CF8  00A8               	movwf	___flmul@a
 10008  0CF9                     l2839:
 10009  0CF9  0836               	movf	___flmul@aexp,w
 10010  0CFA  1903               	btfsc	3,2
 10011  0CFB  2CFD               	goto	u3951
 10012  0CFC  2CFE               	goto	u3950
 10013  0CFD                     u3951:
 10014  0CFD  2D03               	goto	l2843
 10015  0CFE                     u3950:
 10016  0CFE                     l2841:
 10017  0CFE  0837               	movf	___flmul@bexp,w
 10018  0CFF  1D03               	btfss	3,2
 10019  0D00  2D02               	goto	u3961
 10020  0D01  2D03               	goto	u3960
 10021  0D02                     u3961:
 10022  0D02  2D0C               	goto	l2847
 10023  0D03                     u3960:
 10024  0D03                     l2843:
 10025  0D03  3000               	movlw	0
 10026  0D04  00A7               	movwf	?___flmul+3
 10027  0D05  3000               	movlw	0
 10028  0D06  00A6               	movwf	?___flmul+2
 10029  0D07  3000               	movlw	0
 10030  0D08  00A5               	movwf	?___flmul+1
 10031  0D09  3000               	movlw	0
 10032  0D0A  00A4               	movwf	?___flmul
 10033  0D0B  2FFF               	goto	l819
 10034  0D0C                     l2847:
 10035  0D0C  0824               	movf	___flmul@b,w
 10036  0D0D  00AC               	movwf	??___flmul
 10037  0D0E  082C               	movf	??___flmul,w
 10038  0D0F  00F0               	movwf	__Umul8_16@multiplicand
 10039  0D10  082A               	movf	___flmul@a+2,w
 10040  0D11  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10041  0D16  0871               	movf	?__Umul8_16+1,w
 10042  0D17  1283               	bcf	3,5	;RP0=0, select bank0
 10043  0D18  1303               	bcf	3,6	;RP1=0, select bank0
 10044  0D19  00BD               	movwf	___flmul@temp+1
 10045  0D1A  0870               	movf	?__Umul8_16,w
 10046  0D1B  00BC               	movwf	___flmul@temp
 10047  0D1C                     l2849:
 10048  0D1C  083C               	movf	___flmul@temp,w
 10049  0D1D  00AC               	movwf	??___flmul
 10050  0D1E  01AD               	clrf	??___flmul+1
 10051  0D1F  01AE               	clrf	??___flmul+2
 10052  0D20  01AF               	clrf	??___flmul+3
 10053  0D21  082F               	movf	??___flmul+3,w
 10054  0D22  00B5               	movwf	___flmul@grs+3
 10055  0D23  082E               	movf	??___flmul+2,w
 10056  0D24  00B4               	movwf	___flmul@grs+2
 10057  0D25  082D               	movf	??___flmul+1,w
 10058  0D26  00B3               	movwf	___flmul@grs+1
 10059  0D27  082C               	movf	??___flmul,w
 10060  0D28  00B2               	movwf	___flmul@grs
 10061  0D29                     l2851:
 10062  0D29  083D               	movf	___flmul@temp+1,w
 10063  0D2A  00AC               	movwf	??___flmul
 10064  0D2B  01AD               	clrf	??___flmul+1
 10065  0D2C  01AE               	clrf	??___flmul+2
 10066  0D2D  01AF               	clrf	??___flmul+3
 10067  0D2E  082F               	movf	??___flmul+3,w
 10068  0D2F  00BB               	movwf	___flmul@prod+3
 10069  0D30  082E               	movf	??___flmul+2,w
 10070  0D31  00BA               	movwf	___flmul@prod+2
 10071  0D32  082D               	movf	??___flmul+1,w
 10072  0D33  00B9               	movwf	___flmul@prod+1
 10073  0D34  082C               	movf	??___flmul,w
 10074  0D35  00B8               	movwf	___flmul@prod
 10075  0D36  0825               	movf	___flmul@b+1,w
 10076  0D37  00AC               	movwf	??___flmul
 10077  0D38  082C               	movf	??___flmul,w
 10078  0D39  00F0               	movwf	__Umul8_16@multiplicand
 10079  0D3A  0829               	movf	___flmul@a+1,w
 10080  0D3B  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10081  0D40  0871               	movf	?__Umul8_16+1,w
 10082  0D41  1283               	bcf	3,5	;RP0=0, select bank0
 10083  0D42  1303               	bcf	3,6	;RP1=0, select bank0
 10084  0D43  00BD               	movwf	___flmul@temp+1
 10085  0D44  0870               	movf	?__Umul8_16,w
 10086  0D45  00BC               	movwf	___flmul@temp
 10087  0D46                     l2853:
 10088  0D46  083C               	movf	___flmul@temp,w
 10089  0D47  00AC               	movwf	??___flmul
 10090  0D48  01AD               	clrf	??___flmul+1
 10091  0D49  01AE               	clrf	??___flmul+2
 10092  0D4A  01AF               	clrf	??___flmul+3
 10093  0D4B  082C               	movf	??___flmul,w
 10094  0D4C  07B2               	addwf	___flmul@grs,f
 10095  0D4D  082D               	movf	??___flmul+1,w
 10096  0D4E  1103               	clrz
 10097  0D4F  1803               	skipnc
 10098  0D50  3E01               	addlw	1
 10099  0D51  1903               	skipnz
 10100  0D52  2D54               	goto	u3971
 10101  0D53  07B3               	addwf	___flmul@grs+1,f
 10102  0D54                     u3971:
 10103  0D54  082E               	movf	??___flmul+2,w
 10104  0D55  1103               	clrz
 10105  0D56  1803               	skipnc
 10106  0D57  3E01               	addlw	1
 10107  0D58  1903               	skipnz
 10108  0D59  2D5B               	goto	u3972
 10109  0D5A  07B4               	addwf	___flmul@grs+2,f
 10110  0D5B                     u3972:
 10111  0D5B  082F               	movf	??___flmul+3,w
 10112  0D5C  1103               	clrz
 10113  0D5D  1803               	skipnc
 10114  0D5E  3E01               	addlw	1
 10115  0D5F  1903               	skipnz
 10116  0D60  2D62               	goto	u3973
 10117  0D61  07B5               	addwf	___flmul@grs+3,f
 10118  0D62                     u3973:
 10119  0D62                     l2855:
 10120  0D62  083D               	movf	___flmul@temp+1,w
 10121  0D63  00AC               	movwf	??___flmul
 10122  0D64  01AD               	clrf	??___flmul+1
 10123  0D65  01AE               	clrf	??___flmul+2
 10124  0D66  01AF               	clrf	??___flmul+3
 10125  0D67  082C               	movf	??___flmul,w
 10126  0D68  07B8               	addwf	___flmul@prod,f
 10127  0D69  082D               	movf	??___flmul+1,w
 10128  0D6A  1103               	clrz
 10129  0D6B  1803               	skipnc
 10130  0D6C  3E01               	addlw	1
 10131  0D6D  1903               	skipnz
 10132  0D6E  2D70               	goto	u3981
 10133  0D6F  07B9               	addwf	___flmul@prod+1,f
 10134  0D70                     u3981:
 10135  0D70  082E               	movf	??___flmul+2,w
 10136  0D71  1103               	clrz
 10137  0D72  1803               	skipnc
 10138  0D73  3E01               	addlw	1
 10139  0D74  1903               	skipnz
 10140  0D75  2D77               	goto	u3982
 10141  0D76  07BA               	addwf	___flmul@prod+2,f
 10142  0D77                     u3982:
 10143  0D77  082F               	movf	??___flmul+3,w
 10144  0D78  1103               	clrz
 10145  0D79  1803               	skipnc
 10146  0D7A  3E01               	addlw	1
 10147  0D7B  1903               	skipnz
 10148  0D7C  2D7E               	goto	u3983
 10149  0D7D  07BB               	addwf	___flmul@prod+3,f
 10150  0D7E                     u3983:
 10151  0D7E  0826               	movf	___flmul@b+2,w
 10152  0D7F  00AC               	movwf	??___flmul
 10153  0D80  082C               	movf	??___flmul,w
 10154  0D81  00F0               	movwf	__Umul8_16@multiplicand
 10155  0D82  0828               	movf	___flmul@a,w
 10156  0D83  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10157  0D88  0871               	movf	?__Umul8_16+1,w
 10158  0D89  1283               	bcf	3,5	;RP0=0, select bank0
 10159  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
 10160  0D8B  00BD               	movwf	___flmul@temp+1
 10161  0D8C  0870               	movf	?__Umul8_16,w
 10162  0D8D  00BC               	movwf	___flmul@temp
 10163  0D8E                     l2857:
 10164  0D8E  083C               	movf	___flmul@temp,w
 10165  0D8F  00AC               	movwf	??___flmul
 10166  0D90  01AD               	clrf	??___flmul+1
 10167  0D91  01AE               	clrf	??___flmul+2
 10168  0D92  01AF               	clrf	??___flmul+3
 10169  0D93  082C               	movf	??___flmul,w
 10170  0D94  07B2               	addwf	___flmul@grs,f
 10171  0D95  082D               	movf	??___flmul+1,w
 10172  0D96  1103               	clrz
 10173  0D97  1803               	skipnc
 10174  0D98  3E01               	addlw	1
 10175  0D99  1903               	skipnz
 10176  0D9A  2D9C               	goto	u3991
 10177  0D9B  07B3               	addwf	___flmul@grs+1,f
 10178  0D9C                     u3991:
 10179  0D9C  082E               	movf	??___flmul+2,w
 10180  0D9D  1103               	clrz
 10181  0D9E  1803               	skipnc
 10182  0D9F  3E01               	addlw	1
 10183  0DA0  1903               	skipnz
 10184  0DA1  2DA3               	goto	u3992
 10185  0DA2  07B4               	addwf	___flmul@grs+2,f
 10186  0DA3                     u3992:
 10187  0DA3  082F               	movf	??___flmul+3,w
 10188  0DA4  1103               	clrz
 10189  0DA5  1803               	skipnc
 10190  0DA6  3E01               	addlw	1
 10191  0DA7  1903               	skipnz
 10192  0DA8  2DAA               	goto	u3993
 10193  0DA9  07B5               	addwf	___flmul@grs+3,f
 10194  0DAA                     u3993:
 10195  0DAA                     l2859:
 10196  0DAA  083D               	movf	___flmul@temp+1,w
 10197  0DAB  00AC               	movwf	??___flmul
 10198  0DAC  01AD               	clrf	??___flmul+1
 10199  0DAD  01AE               	clrf	??___flmul+2
 10200  0DAE  01AF               	clrf	??___flmul+3
 10201  0DAF  082C               	movf	??___flmul,w
 10202  0DB0  07B8               	addwf	___flmul@prod,f
 10203  0DB1  082D               	movf	??___flmul+1,w
 10204  0DB2  1103               	clrz
 10205  0DB3  1803               	skipnc
 10206  0DB4  3E01               	addlw	1
 10207  0DB5  1903               	skipnz
 10208  0DB6  2DB8               	goto	u4001
 10209  0DB7  07B9               	addwf	___flmul@prod+1,f
 10210  0DB8                     u4001:
 10211  0DB8  082E               	movf	??___flmul+2,w
 10212  0DB9  1103               	clrz
 10213  0DBA  1803               	skipnc
 10214  0DBB  3E01               	addlw	1
 10215  0DBC  1903               	skipnz
 10216  0DBD  2DBF               	goto	u4002
 10217  0DBE  07BA               	addwf	___flmul@prod+2,f
 10218  0DBF                     u4002:
 10219  0DBF  082F               	movf	??___flmul+3,w
 10220  0DC0  1103               	clrz
 10221  0DC1  1803               	skipnc
 10222  0DC2  3E01               	addlw	1
 10223  0DC3  1903               	skipnz
 10224  0DC4  2DC6               	goto	u4003
 10225  0DC5  07BB               	addwf	___flmul@prod+3,f
 10226  0DC6                     u4003:
 10227  0DC6                     l2861:
 10228  0DC6  3008               	movlw	8
 10229  0DC7  00AC               	movwf	??___flmul
 10230  0DC8                     u4015:
 10231  0DC8  1003               	clrc
 10232  0DC9  0DB2               	rlf	___flmul@grs,f
 10233  0DCA  0DB3               	rlf	___flmul@grs+1,f
 10234  0DCB  0DB4               	rlf	___flmul@grs+2,f
 10235  0DCC  0DB5               	rlf	___flmul@grs+3,f
 10236  0DCD  0BAC               	decfsz	??___flmul,f
 10237  0DCE  2DC8               	goto	u4015
 10238  0DCF                     l2863:
 10239  0DCF  0825               	movf	___flmul@b+1,w
 10240  0DD0  00AC               	movwf	??___flmul
 10241  0DD1  082C               	movf	??___flmul,w
 10242  0DD2  00F0               	movwf	__Umul8_16@multiplicand
 10243  0DD3  0828               	movf	___flmul@a,w
 10244  0DD4  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10245  0DD9  0871               	movf	?__Umul8_16+1,w
 10246  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
 10247  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
 10248  0DDC  00BD               	movwf	___flmul@temp+1
 10249  0DDD  0870               	movf	?__Umul8_16,w
 10250  0DDE  00BC               	movwf	___flmul@temp
 10251  0DDF                     l2865:
 10252  0DDF  083C               	movf	___flmul@temp,w
 10253  0DE0  00AC               	movwf	??___flmul
 10254  0DE1  083D               	movf	___flmul@temp+1,w
 10255  0DE2  00AD               	movwf	??___flmul+1
 10256  0DE3  01AE               	clrf	??___flmul+2
 10257  0DE4  01AF               	clrf	??___flmul+3
 10258  0DE5  082C               	movf	??___flmul,w
 10259  0DE6  07B2               	addwf	___flmul@grs,f
 10260  0DE7  082D               	movf	??___flmul+1,w
 10261  0DE8  1103               	clrz
 10262  0DE9  1803               	skipnc
 10263  0DEA  3E01               	addlw	1
 10264  0DEB  1903               	skipnz
 10265  0DEC  2DEE               	goto	u4021
 10266  0DED  07B3               	addwf	___flmul@grs+1,f
 10267  0DEE                     u4021:
 10268  0DEE  082E               	movf	??___flmul+2,w
 10269  0DEF  1103               	clrz
 10270  0DF0  1803               	skipnc
 10271  0DF1  3E01               	addlw	1
 10272  0DF2  1903               	skipnz
 10273  0DF3  2DF5               	goto	u4022
 10274  0DF4  07B4               	addwf	___flmul@grs+2,f
 10275  0DF5                     u4022:
 10276  0DF5  082F               	movf	??___flmul+3,w
 10277  0DF6  1103               	clrz
 10278  0DF7  1803               	skipnc
 10279  0DF8  3E01               	addlw	1
 10280  0DF9  1903               	skipnz
 10281  0DFA  2DFC               	goto	u4023
 10282  0DFB  07B5               	addwf	___flmul@grs+3,f
 10283  0DFC                     u4023:
 10284  0DFC                     l2867:
 10285  0DFC  0824               	movf	___flmul@b,w
 10286  0DFD  00AC               	movwf	??___flmul
 10287  0DFE  082C               	movf	??___flmul,w
 10288  0DFF  00F0               	movwf	__Umul8_16@multiplicand
 10289  0E00  0829               	movf	___flmul@a+1,w
 10290  0E01  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10291  0E06  0871               	movf	?__Umul8_16+1,w
 10292  0E07  1283               	bcf	3,5	;RP0=0, select bank0
 10293  0E08  1303               	bcf	3,6	;RP1=0, select bank0
 10294  0E09  00BD               	movwf	___flmul@temp+1
 10295  0E0A  0870               	movf	?__Umul8_16,w
 10296  0E0B  00BC               	movwf	___flmul@temp
 10297  0E0C                     l2869:
 10298  0E0C  083C               	movf	___flmul@temp,w
 10299  0E0D  00AC               	movwf	??___flmul
 10300  0E0E  083D               	movf	___flmul@temp+1,w
 10301  0E0F  00AD               	movwf	??___flmul+1
 10302  0E10  01AE               	clrf	??___flmul+2
 10303  0E11  01AF               	clrf	??___flmul+3
 10304  0E12  082C               	movf	??___flmul,w
 10305  0E13  07B2               	addwf	___flmul@grs,f
 10306  0E14  082D               	movf	??___flmul+1,w
 10307  0E15  1103               	clrz
 10308  0E16  1803               	skipnc
 10309  0E17  3E01               	addlw	1
 10310  0E18  1903               	skipnz
 10311  0E19  2E1B               	goto	u4031
 10312  0E1A  07B3               	addwf	___flmul@grs+1,f
 10313  0E1B                     u4031:
 10314  0E1B  082E               	movf	??___flmul+2,w
 10315  0E1C  1103               	clrz
 10316  0E1D  1803               	skipnc
 10317  0E1E  3E01               	addlw	1
 10318  0E1F  1903               	skipnz
 10319  0E20  2E22               	goto	u4032
 10320  0E21  07B4               	addwf	___flmul@grs+2,f
 10321  0E22                     u4032:
 10322  0E22  082F               	movf	??___flmul+3,w
 10323  0E23  1103               	clrz
 10324  0E24  1803               	skipnc
 10325  0E25  3E01               	addlw	1
 10326  0E26  1903               	skipnz
 10327  0E27  2E29               	goto	u4033
 10328  0E28  07B5               	addwf	___flmul@grs+3,f
 10329  0E29                     u4033:
 10330  0E29                     l2871:
 10331  0E29  3008               	movlw	8
 10332  0E2A  00AC               	movwf	??___flmul
 10333  0E2B                     u4045:
 10334  0E2B  1003               	clrc
 10335  0E2C  0DB2               	rlf	___flmul@grs,f
 10336  0E2D  0DB3               	rlf	___flmul@grs+1,f
 10337  0E2E  0DB4               	rlf	___flmul@grs+2,f
 10338  0E2F  0DB5               	rlf	___flmul@grs+3,f
 10339  0E30  0BAC               	decfsz	??___flmul,f
 10340  0E31  2E2B               	goto	u4045
 10341  0E32  0824               	movf	___flmul@b,w
 10342  0E33  00AC               	movwf	??___flmul
 10343  0E34  082C               	movf	??___flmul,w
 10344  0E35  00F0               	movwf	__Umul8_16@multiplicand
 10345  0E36  0828               	movf	___flmul@a,w
 10346  0E37  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10347  0E3C  0871               	movf	?__Umul8_16+1,w
 10348  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
 10349  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
 10350  0E3F  00BD               	movwf	___flmul@temp+1
 10351  0E40  0870               	movf	?__Umul8_16,w
 10352  0E41  00BC               	movwf	___flmul@temp
 10353  0E42                     l2873:
 10354  0E42  083C               	movf	___flmul@temp,w
 10355  0E43  00AC               	movwf	??___flmul
 10356  0E44  083D               	movf	___flmul@temp+1,w
 10357  0E45  00AD               	movwf	??___flmul+1
 10358  0E46  01AE               	clrf	??___flmul+2
 10359  0E47  01AF               	clrf	??___flmul+3
 10360  0E48  082C               	movf	??___flmul,w
 10361  0E49  07B2               	addwf	___flmul@grs,f
 10362  0E4A  082D               	movf	??___flmul+1,w
 10363  0E4B  1103               	clrz
 10364  0E4C  1803               	skipnc
 10365  0E4D  3E01               	addlw	1
 10366  0E4E  1903               	skipnz
 10367  0E4F  2E51               	goto	u4051
 10368  0E50  07B3               	addwf	___flmul@grs+1,f
 10369  0E51                     u4051:
 10370  0E51  082E               	movf	??___flmul+2,w
 10371  0E52  1103               	clrz
 10372  0E53  1803               	skipnc
 10373  0E54  3E01               	addlw	1
 10374  0E55  1903               	skipnz
 10375  0E56  2E58               	goto	u4052
 10376  0E57  07B4               	addwf	___flmul@grs+2,f
 10377  0E58                     u4052:
 10378  0E58  082F               	movf	??___flmul+3,w
 10379  0E59  1103               	clrz
 10380  0E5A  1803               	skipnc
 10381  0E5B  3E01               	addlw	1
 10382  0E5C  1903               	skipnz
 10383  0E5D  2E5F               	goto	u4053
 10384  0E5E  07B5               	addwf	___flmul@grs+3,f
 10385  0E5F                     u4053:
 10386  0E5F                     l2875:
 10387  0E5F  0825               	movf	___flmul@b+1,w
 10388  0E60  00AC               	movwf	??___flmul
 10389  0E61  082C               	movf	??___flmul,w
 10390  0E62  00F0               	movwf	__Umul8_16@multiplicand
 10391  0E63  082A               	movf	___flmul@a+2,w
 10392  0E64  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10393  0E69  0871               	movf	?__Umul8_16+1,w
 10394  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
 10395  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
 10396  0E6C  00BD               	movwf	___flmul@temp+1
 10397  0E6D  0870               	movf	?__Umul8_16,w
 10398  0E6E  00BC               	movwf	___flmul@temp
 10399  0E6F  083C               	movf	___flmul@temp,w
 10400  0E70  00AC               	movwf	??___flmul
 10401  0E71  083D               	movf	___flmul@temp+1,w
 10402  0E72  00AD               	movwf	??___flmul+1
 10403  0E73  01AE               	clrf	??___flmul+2
 10404  0E74  01AF               	clrf	??___flmul+3
 10405  0E75  082C               	movf	??___flmul,w
 10406  0E76  07B8               	addwf	___flmul@prod,f
 10407  0E77  082D               	movf	??___flmul+1,w
 10408  0E78  1103               	clrz
 10409  0E79  1803               	skipnc
 10410  0E7A  3E01               	addlw	1
 10411  0E7B  1903               	skipnz
 10412  0E7C  2E7E               	goto	u4061
 10413  0E7D  07B9               	addwf	___flmul@prod+1,f
 10414  0E7E                     u4061:
 10415  0E7E  082E               	movf	??___flmul+2,w
 10416  0E7F  1103               	clrz
 10417  0E80  1803               	skipnc
 10418  0E81  3E01               	addlw	1
 10419  0E82  1903               	skipnz
 10420  0E83  2E85               	goto	u4062
 10421  0E84  07BA               	addwf	___flmul@prod+2,f
 10422  0E85                     u4062:
 10423  0E85  082F               	movf	??___flmul+3,w
 10424  0E86  1103               	clrz
 10425  0E87  1803               	skipnc
 10426  0E88  3E01               	addlw	1
 10427  0E89  1903               	skipnz
 10428  0E8A  2E8C               	goto	u4063
 10429  0E8B  07BB               	addwf	___flmul@prod+3,f
 10430  0E8C                     u4063:
 10431  0E8C                     l2877:
 10432  0E8C  0826               	movf	___flmul@b+2,w
 10433  0E8D  00AC               	movwf	??___flmul
 10434  0E8E  082C               	movf	??___flmul,w
 10435  0E8F  00F0               	movwf	__Umul8_16@multiplicand
 10436  0E90  0829               	movf	___flmul@a+1,w
 10437  0E91  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10438  0E96  0871               	movf	?__Umul8_16+1,w
 10439  0E97  1283               	bcf	3,5	;RP0=0, select bank0
 10440  0E98  1303               	bcf	3,6	;RP1=0, select bank0
 10441  0E99  00BD               	movwf	___flmul@temp+1
 10442  0E9A  0870               	movf	?__Umul8_16,w
 10443  0E9B  00BC               	movwf	___flmul@temp
 10444  0E9C                     l2879:
 10445  0E9C  083C               	movf	___flmul@temp,w
 10446  0E9D  00AC               	movwf	??___flmul
 10447  0E9E  083D               	movf	___flmul@temp+1,w
 10448  0E9F  00AD               	movwf	??___flmul+1
 10449  0EA0  01AE               	clrf	??___flmul+2
 10450  0EA1  01AF               	clrf	??___flmul+3
 10451  0EA2  082C               	movf	??___flmul,w
 10452  0EA3  07B8               	addwf	___flmul@prod,f
 10453  0EA4  082D               	movf	??___flmul+1,w
 10454  0EA5  1103               	clrz
 10455  0EA6  1803               	skipnc
 10456  0EA7  3E01               	addlw	1
 10457  0EA8  1903               	skipnz
 10458  0EA9  2EAB               	goto	u4071
 10459  0EAA  07B9               	addwf	___flmul@prod+1,f
 10460  0EAB                     u4071:
 10461  0EAB  082E               	movf	??___flmul+2,w
 10462  0EAC  1103               	clrz
 10463  0EAD  1803               	skipnc
 10464  0EAE  3E01               	addlw	1
 10465  0EAF  1903               	skipnz
 10466  0EB0  2EB2               	goto	u4072
 10467  0EB1  07BA               	addwf	___flmul@prod+2,f
 10468  0EB2                     u4072:
 10469  0EB2  082F               	movf	??___flmul+3,w
 10470  0EB3  1103               	clrz
 10471  0EB4  1803               	skipnc
 10472  0EB5  3E01               	addlw	1
 10473  0EB6  1903               	skipnz
 10474  0EB7  2EB9               	goto	u4073
 10475  0EB8  07BB               	addwf	___flmul@prod+3,f
 10476  0EB9                     u4073:
 10477  0EB9  0826               	movf	___flmul@b+2,w
 10478  0EBA  00AC               	movwf	??___flmul
 10479  0EBB  082C               	movf	??___flmul,w
 10480  0EBC  00F0               	movwf	__Umul8_16@multiplicand
 10481  0EBD  082A               	movf	___flmul@a+2,w
 10482  0EBE  160A  158A  21E6  120A  158A  	fcall	__Umul8_16
 10483  0EC3  0871               	movf	?__Umul8_16+1,w
 10484  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
 10485  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
 10486  0EC6  00BD               	movwf	___flmul@temp+1
 10487  0EC7  0870               	movf	?__Umul8_16,w
 10488  0EC8  00BC               	movwf	___flmul@temp
 10489  0EC9                     l2881:
 10490  0EC9  083C               	movf	___flmul@temp,w
 10491  0ECA  00AC               	movwf	??___flmul
 10492  0ECB  083D               	movf	___flmul@temp+1,w
 10493  0ECC  00AD               	movwf	??___flmul+1
 10494  0ECD  01AE               	clrf	??___flmul+2
 10495  0ECE  01AF               	clrf	??___flmul+3
 10496  0ECF  3008               	movlw	8
 10497  0ED0                     u4085:
 10498  0ED0  1003               	clrc
 10499  0ED1  0DAC               	rlf	??___flmul,f
 10500  0ED2  0DAD               	rlf	??___flmul+1,f
 10501  0ED3  0DAE               	rlf	??___flmul+2,f
 10502  0ED4  0DAF               	rlf	??___flmul+3,f
 10503  0ED5                     u4080:
 10504  0ED5  3EFF               	addlw	-1
 10505  0ED6  1D03               	skipz
 10506  0ED7  2ED0               	goto	u4085
 10507  0ED8  082C               	movf	??___flmul,w
 10508  0ED9  07B8               	addwf	___flmul@prod,f
 10509  0EDA  082D               	movf	??___flmul+1,w
 10510  0EDB  1103               	clrz
 10511  0EDC  1803               	skipnc
 10512  0EDD  3E01               	addlw	1
 10513  0EDE  1903               	skipnz
 10514  0EDF  2EE1               	goto	u4091
 10515  0EE0  07B9               	addwf	___flmul@prod+1,f
 10516  0EE1                     u4091:
 10517  0EE1  082E               	movf	??___flmul+2,w
 10518  0EE2  1103               	clrz
 10519  0EE3  1803               	skipnc
 10520  0EE4  3E01               	addlw	1
 10521  0EE5  1903               	skipnz
 10522  0EE6  2EE8               	goto	u4092
 10523  0EE7  07BA               	addwf	___flmul@prod+2,f
 10524  0EE8                     u4092:
 10525  0EE8  082F               	movf	??___flmul+3,w
 10526  0EE9  1103               	clrz
 10527  0EEA  1803               	skipnc
 10528  0EEB  3E01               	addlw	1
 10529  0EEC  1903               	skipnz
 10530  0EED  2EEF               	goto	u4093
 10531  0EEE  07BB               	addwf	___flmul@prod+3,f
 10532  0EEF                     u4093:
 10533  0EEF                     l2883:
 10534  0EEF  0832               	movf	___flmul@grs,w
 10535  0EF0  00AC               	movwf	??___flmul
 10536  0EF1  0833               	movf	___flmul@grs+1,w
 10537  0EF2  00AD               	movwf	??___flmul+1
 10538  0EF3  0834               	movf	___flmul@grs+2,w
 10539  0EF4  00AE               	movwf	??___flmul+2
 10540  0EF5  0835               	movf	___flmul@grs+3,w
 10541  0EF6  00AF               	movwf	??___flmul+3
 10542  0EF7  3018               	movlw	24
 10543  0EF8                     u4105:
 10544  0EF8  1003               	clrc
 10545  0EF9  0CAF               	rrf	??___flmul+3,f
 10546  0EFA  0CAE               	rrf	??___flmul+2,f
 10547  0EFB  0CAD               	rrf	??___flmul+1,f
 10548  0EFC  0CAC               	rrf	??___flmul,f
 10549  0EFD                     u4100:
 10550  0EFD  3EFF               	addlw	-1
 10551  0EFE  1D03               	skipz
 10552  0EFF  2EF8               	goto	u4105
 10553  0F00  082C               	movf	??___flmul,w
 10554  0F01  07B8               	addwf	___flmul@prod,f
 10555  0F02  082D               	movf	??___flmul+1,w
 10556  0F03  1103               	clrz
 10557  0F04  1803               	skipnc
 10558  0F05  3E01               	addlw	1
 10559  0F06  1903               	skipnz
 10560  0F07  2F09               	goto	u4111
 10561  0F08  07B9               	addwf	___flmul@prod+1,f
 10562  0F09                     u4111:
 10563  0F09  082E               	movf	??___flmul+2,w
 10564  0F0A  1103               	clrz
 10565  0F0B  1803               	skipnc
 10566  0F0C  3E01               	addlw	1
 10567  0F0D  1903               	skipnz
 10568  0F0E  2F10               	goto	u4112
 10569  0F0F  07BA               	addwf	___flmul@prod+2,f
 10570  0F10                     u4112:
 10571  0F10  082F               	movf	??___flmul+3,w
 10572  0F11  1103               	clrz
 10573  0F12  1803               	skipnc
 10574  0F13  3E01               	addlw	1
 10575  0F14  1903               	skipnz
 10576  0F15  2F17               	goto	u4113
 10577  0F16  07BB               	addwf	___flmul@prod+3,f
 10578  0F17                     u4113:
 10579  0F17                     l2885:
 10580  0F17  3008               	movlw	8
 10581  0F18  00AC               	movwf	??___flmul
 10582  0F19                     u4125:
 10583  0F19  1003               	clrc
 10584  0F1A  0DB2               	rlf	___flmul@grs,f
 10585  0F1B  0DB3               	rlf	___flmul@grs+1,f
 10586  0F1C  0DB4               	rlf	___flmul@grs+2,f
 10587  0F1D  0DB5               	rlf	___flmul@grs+3,f
 10588  0F1E  0BAC               	decfsz	??___flmul,f
 10589  0F1F  2F19               	goto	u4125
 10590  0F20                     l2887:
 10591  0F20  0837               	movf	___flmul@bexp,w
 10592  0F21  0736               	addwf	___flmul@aexp,w
 10593  0F22  00AC               	movwf	??___flmul
 10594  0F23  01AD               	clrf	??___flmul+1
 10595  0F24  0DAD               	rlf	??___flmul+1,f
 10596  0F25  082C               	movf	??___flmul,w
 10597  0F26  3E82               	addlw	130
 10598  0F27  00BC               	movwf	___flmul@temp
 10599  0F28  082D               	movf	??___flmul+1,w
 10600  0F29  1803               	skipnc
 10601  0F2A  3E01               	addlw	1
 10602  0F2B  3EFF               	addlw	255
 10603  0F2C  00BD               	movwf	___flmul@temp+1
 10604  0F2D  2F4B               	goto	l2899
 10605  0F2E                     l2889:
 10606  0F2E  3001               	movlw	1
 10607  0F2F  00AC               	movwf	??___flmul
 10608  0F30                     u4135:
 10609  0F30  1003               	clrc
 10610  0F31  0DB8               	rlf	___flmul@prod,f
 10611  0F32  0DB9               	rlf	___flmul@prod+1,f
 10612  0F33  0DBA               	rlf	___flmul@prod+2,f
 10613  0F34  0DBB               	rlf	___flmul@prod+3,f
 10614  0F35  0BAC               	decfsz	??___flmul,f
 10615  0F36  2F30               	goto	u4135
 10616  0F37                     l2891:
 10617  0F37  1FB5               	btfss	___flmul@grs+3,7
 10618  0F38  2F3A               	goto	u4141
 10619  0F39  2F3B               	goto	u4140
 10620  0F3A                     u4141:
 10621  0F3A  2F3C               	goto	l2895
 10622  0F3B                     u4140:
 10623  0F3B                     l2893:
 10624  0F3B  1438               	bsf	___flmul@prod,0
 10625  0F3C                     l2895:
 10626  0F3C  3001               	movlw	1
 10627  0F3D  00AC               	movwf	??___flmul
 10628  0F3E                     u4155:
 10629  0F3E  1003               	clrc
 10630  0F3F  0DB2               	rlf	___flmul@grs,f
 10631  0F40  0DB3               	rlf	___flmul@grs+1,f
 10632  0F41  0DB4               	rlf	___flmul@grs+2,f
 10633  0F42  0DB5               	rlf	___flmul@grs+3,f
 10634  0F43  0BAC               	decfsz	??___flmul,f
 10635  0F44  2F3E               	goto	u4155
 10636  0F45                     l2897:
 10637  0F45  30FF               	movlw	255
 10638  0F46  07BC               	addwf	___flmul@temp,f
 10639  0F47  1803               	skipnc
 10640  0F48  0ABD               	incf	___flmul@temp+1,f
 10641  0F49  30FF               	movlw	255
 10642  0F4A  07BD               	addwf	___flmul@temp+1,f
 10643  0F4B                     l2899:
 10644  0F4B  1FBA               	btfss	___flmul@prod+2,7
 10645  0F4C  2F4E               	goto	u4161
 10646  0F4D  2F4F               	goto	u4160
 10647  0F4E                     u4161:
 10648  0F4E  2F2E               	goto	l2889
 10649  0F4F                     u4160:
 10650  0F4F                     l2901:
 10651  0F4F  01B6               	clrf	___flmul@aexp
 10652  0F50                     l2903:
 10653  0F50  1FB5               	btfss	___flmul@grs+3,7
 10654  0F51  2F53               	goto	u4171
 10655  0F52  2F54               	goto	u4170
 10656  0F53                     u4171:
 10657  0F53  2F70               	goto	l2911
 10658  0F54                     u4170:
 10659  0F54                     l2905:
 10660  0F54  30FF               	movlw	255
 10661  0F55  0532               	andwf	___flmul@grs,w
 10662  0F56  00AC               	movwf	??___flmul
 10663  0F57  30FF               	movlw	255
 10664  0F58  0533               	andwf	___flmul@grs+1,w
 10665  0F59  00AD               	movwf	??___flmul+1
 10666  0F5A  30FF               	movlw	255
 10667  0F5B  0534               	andwf	___flmul@grs+2,w
 10668  0F5C  00AE               	movwf	??___flmul+2
 10669  0F5D  307F               	movlw	127
 10670  0F5E  0535               	andwf	___flmul@grs+3,w
 10671  0F5F  00AF               	movwf	??___flmul+3
 10672  0F60  082F               	movf	??___flmul+3,w
 10673  0F61  042E               	iorwf	??___flmul+2,w
 10674  0F62  042D               	iorwf	??___flmul+1,w
 10675  0F63  042C               	iorwf	??___flmul,w
 10676  0F64  1903               	skipnz
 10677  0F65  2F67               	goto	u4181
 10678  0F66  2F68               	goto	u4180
 10679  0F67                     u4181:
 10680  0F67  2F6B               	goto	l825
 10681  0F68                     u4180:
 10682  0F68                     l2907:
 10683  0F68  01B6               	clrf	___flmul@aexp
 10684  0F69  0AB6               	incf	___flmul@aexp,f
 10685  0F6A  2F70               	goto	l2911
 10686  0F6B                     l825:
 10687  0F6B  1C38               	btfss	___flmul@prod,0
 10688  0F6C  2F6E               	goto	u4191
 10689  0F6D  2F6F               	goto	u4190
 10690  0F6E                     u4191:
 10691  0F6E  2F70               	goto	l2911
 10692  0F6F                     u4190:
 10693  0F6F  2F68               	goto	l2907
 10694  0F70                     l2911:
 10695  0F70  0836               	movf	___flmul@aexp,w
 10696  0F71  1903               	btfsc	3,2
 10697  0F72  2F74               	goto	u4201
 10698  0F73  2F75               	goto	u4200
 10699  0F74                     u4201:
 10700  0F74  2FA6               	goto	l2921
 10701  0F75                     u4200:
 10702  0F75                     l2913:
 10703  0F75  3001               	movlw	1
 10704  0F76  07B8               	addwf	___flmul@prod,f
 10705  0F77  3000               	movlw	0
 10706  0F78  1803               	skipnc
 10707  0F79  3001               	movlw	1
 10708  0F7A  07B9               	addwf	___flmul@prod+1,f
 10709  0F7B  3000               	movlw	0
 10710  0F7C  1803               	skipnc
 10711  0F7D  3001               	movlw	1
 10712  0F7E  07BA               	addwf	___flmul@prod+2,f
 10713  0F7F  3000               	movlw	0
 10714  0F80  1803               	skipnc
 10715  0F81  3001               	movlw	1
 10716  0F82  07BB               	addwf	___flmul@prod+3,f
 10717  0F83                     l2915:
 10718  0F83  1C3B               	btfss	___flmul@prod+3,0
 10719  0F84  2F86               	goto	u4211
 10720  0F85  2F87               	goto	u4210
 10721  0F86                     u4211:
 10722  0F86  2FA6               	goto	l2921
 10723  0F87                     u4210:
 10724  0F87                     l2917:
 10725  0F87  0838               	movf	___flmul@prod,w
 10726  0F88  00AC               	movwf	??___flmul
 10727  0F89  0839               	movf	___flmul@prod+1,w
 10728  0F8A  00AD               	movwf	??___flmul+1
 10729  0F8B  083A               	movf	___flmul@prod+2,w
 10730  0F8C  00AE               	movwf	??___flmul+2
 10731  0F8D  083B               	movf	___flmul@prod+3,w
 10732  0F8E  00AF               	movwf	??___flmul+3
 10733  0F8F  3001               	movlw	1
 10734  0F90  00B0               	movwf	??___flmul+4
 10735  0F91                     u4225:
 10736  0F91  0D2F               	rlf	??___flmul+3,w
 10737  0F92  0CAF               	rrf	??___flmul+3,f
 10738  0F93  0CAE               	rrf	??___flmul+2,f
 10739  0F94  0CAD               	rrf	??___flmul+1,f
 10740  0F95  0CAC               	rrf	??___flmul,f
 10741  0F96                     u4220:
 10742  0F96  0BB0               	decfsz	??___flmul+4,f
 10743  0F97  2F91               	goto	u4225
 10744  0F98  082F               	movf	??___flmul+3,w
 10745  0F99  00BB               	movwf	___flmul@prod+3
 10746  0F9A  082E               	movf	??___flmul+2,w
 10747  0F9B  00BA               	movwf	___flmul@prod+2
 10748  0F9C  082D               	movf	??___flmul+1,w
 10749  0F9D  00B9               	movwf	___flmul@prod+1
 10750  0F9E  082C               	movf	??___flmul,w
 10751  0F9F  00B8               	movwf	___flmul@prod
 10752  0FA0                     l2919:
 10753  0FA0  3001               	movlw	1
 10754  0FA1  07BC               	addwf	___flmul@temp,f
 10755  0FA2  1803               	skipnc
 10756  0FA3  0ABD               	incf	___flmul@temp+1,f
 10757  0FA4  3000               	movlw	0
 10758  0FA5  07BD               	addwf	___flmul@temp+1,f
 10759  0FA6                     l2921:
 10760  0FA6  083D               	movf	___flmul@temp+1,w
 10761  0FA7  3A80               	xorlw	128
 10762  0FA8  00FF               	movwf	btemp+1
 10763  0FA9  3080               	movlw	128
 10764  0FAA  027F               	subwf	btemp+1,w
 10765  0FAB  1D03               	skipz
 10766  0FAC  2FAF               	goto	u4235
 10767  0FAD  30FF               	movlw	255
 10768  0FAE  023C               	subwf	___flmul@temp,w
 10769  0FAF                     u4235:
 10770  0FAF  1C03               	skipc
 10771  0FB0  2FB2               	goto	u4231
 10772  0FB1  2FB3               	goto	u4230
 10773  0FB2                     u4231:
 10774  0FB2  2FBE               	goto	l2925
 10775  0FB3                     u4230:
 10776  0FB3                     l2923:
 10777  0FB3  307F               	movlw	127
 10778  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
 10779  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
 10780  0FB6  00BB               	movwf	___flmul@prod+3
 10781  0FB7  3080               	movlw	128
 10782  0FB8  00BA               	movwf	___flmul@prod+2
 10783  0FB9  3000               	movlw	0
 10784  0FBA  00B9               	movwf	___flmul@prod+1
 10785  0FBB  3000               	movlw	0
 10786  0FBC  00B8               	movwf	___flmul@prod
 10787  0FBD  2FF3               	goto	l831
 10788  0FBE                     l2925:
 10789  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
 10790  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
 10791  0FC0  083D               	movf	___flmul@temp+1,w
 10792  0FC1  3A80               	xorlw	128
 10793  0FC2  00FF               	movwf	btemp+1
 10794  0FC3  3080               	movlw	128
 10795  0FC4  027F               	subwf	btemp+1,w
 10796  0FC5  1D03               	skipz
 10797  0FC6  2FC9               	goto	u4245
 10798  0FC7  3001               	movlw	1
 10799  0FC8  023C               	subwf	___flmul@temp,w
 10800  0FC9                     u4245:
 10801  0FC9  1803               	skipnc
 10802  0FCA  2FCC               	goto	u4241
 10803  0FCB  2FCD               	goto	u4240
 10804  0FCC                     u4241:
 10805  0FCC  2FD9               	goto	l2931
 10806  0FCD                     u4240:
 10807  0FCD                     l2927:
 10808  0FCD  3000               	movlw	0
 10809  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
 10810  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
 10811  0FD0  00BB               	movwf	___flmul@prod+3
 10812  0FD1  3000               	movlw	0
 10813  0FD2  00BA               	movwf	___flmul@prod+2
 10814  0FD3  3000               	movlw	0
 10815  0FD4  00B9               	movwf	___flmul@prod+1
 10816  0FD5  3000               	movlw	0
 10817  0FD6  00B8               	movwf	___flmul@prod
 10818  0FD7                     l2929:
 10819  0FD7  01B1               	clrf	___flmul@sign
 10820  0FD8  2FF3               	goto	l831
 10821  0FD9                     l2931:
 10822  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
 10823  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
 10824  0FDB  083C               	movf	___flmul@temp,w
 10825  0FDC  00AC               	movwf	??___flmul
 10826  0FDD  082C               	movf	??___flmul,w
 10827  0FDE  00B7               	movwf	___flmul@bexp
 10828  0FDF  30FF               	movlw	255
 10829  0FE0  05B8               	andwf	___flmul@prod,f
 10830  0FE1  30FF               	movlw	255
 10831  0FE2  05B9               	andwf	___flmul@prod+1,f
 10832  0FE3  307F               	movlw	127
 10833  0FE4  05BA               	andwf	___flmul@prod+2,f
 10834  0FE5  3000               	movlw	0
 10835  0FE6  05BB               	andwf	___flmul@prod+3,f
 10836  0FE7                     l2933:
 10837  0FE7  1C37               	btfss	___flmul@bexp,0
 10838  0FE8  2FEA               	goto	u4251
 10839  0FE9  2FEB               	goto	u4250
 10840  0FEA                     u4251:
 10841  0FEA  2FEC               	goto	l2937
 10842  0FEB                     u4250:
 10843  0FEB                     l2935:
 10844  0FEB  17BA               	bsf	___flmul@prod+2,7
 10845  0FEC                     l2937:
 10846  0FEC  0837               	movf	___flmul@bexp,w
 10847  0FED  00AC               	movwf	??___flmul
 10848  0FEE  1003               	clrc
 10849  0FEF  0C2C               	rrf	??___flmul,w
 10850  0FF0  00AD               	movwf	??___flmul+1
 10851  0FF1  082D               	movf	??___flmul+1,w
 10852  0FF2  00BB               	movwf	___flmul@prod+3
 10853  0FF3                     l831:
 10854  0FF3  0831               	movf	___flmul@sign,w
 10855  0FF4  00AC               	movwf	??___flmul
 10856  0FF5  082C               	movf	??___flmul,w
 10857  0FF6  04BB               	iorwf	___flmul@prod+3,f
 10858  0FF7                     l2939:
 10859  0FF7  083B               	movf	___flmul@prod+3,w
 10860  0FF8  00A7               	movwf	?___flmul+3
 10861  0FF9  083A               	movf	___flmul@prod+2,w
 10862  0FFA  00A6               	movwf	?___flmul+2
 10863  0FFB  0839               	movf	___flmul@prod+1,w
 10864  0FFC  00A5               	movwf	?___flmul+1
 10865  0FFD  0838               	movf	___flmul@prod,w
 10866  0FFE  00A4               	movwf	?___flmul
 10867  0FFF                     l819:
 10868  0FFF  0008               	return
 10869  1000                     __end_of___flmul:
 10870                           
 10871                           	psect	text34
 10872  19E6                     __ptext34:	
 10873 ;; *************** function __Umul8_16 *****************
 10874 ;; Defined at:
 10875 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
 10876 ;; Parameters:    Size  Location     Type
 10877 ;;  multiplier      1    wreg     unsigned char 
 10878 ;;  multiplicand    1    0[COMMON] unsigned char 
 10879 ;; Auto vars:     Size  Location     Type
 10880 ;;  multiplier      1    8[COMMON] unsigned char 
 10881 ;;  word_mpld       2    6[COMMON] unsigned int 
 10882 ;;  product         2    4[COMMON] unsigned int 
 10883 ;; Return value:  Size  Location     Type
 10884 ;;                  2    0[COMMON] unsigned int 
 10885 ;; Registers used:
 10886 ;;		wreg, status,2, status,0
 10887 ;; Tracked objects:
 10888 ;;		On entry : 0/0
 10889 ;;		On exit  : 0/0
 10890 ;;		Unchanged: 0/0
 10891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10892 ;;      Params:         2       0       0       0       0
 10893 ;;      Locals:         5       0       0       0       0
 10894 ;;      Temps:          2       0       0       0       0
 10895 ;;      Totals:         9       0       0       0       0
 10896 ;;Total ram usage:        9 bytes
 10897 ;; Hardware stack levels used:    1
 10898 ;; This function calls:
 10899 ;;		Nothing
 10900 ;; This function is called by:
 10901 ;;		___flmul
 10902 ;; This function uses a non-reentrant model
 10903 ;;
 10904                           
 10905                           
 10906                           ;psect for function __Umul8_16
 10907  19E6                     __Umul8_16:
 10908                           
 10909                           ;incstack = 0
 10910                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10911                           ;__Umul8_16@multiplier stored from wreg
 10912  19E6  00F8               	movwf	__Umul8_16@multiplier
 10913  19E7                     l2463:
 10914  19E7  01F4               	clrf	__Umul8_16@product
 10915  19E8  01F5               	clrf	__Umul8_16@product+1
 10916  19E9                     l2465:
 10917  19E9  0870               	movf	__Umul8_16@multiplicand,w
 10918  19EA  00F2               	movwf	??__Umul8_16
 10919  19EB  01F3               	clrf	??__Umul8_16+1
 10920  19EC  0872               	movf	??__Umul8_16,w
 10921  19ED  00F6               	movwf	__Umul8_16@word_mpld
 10922  19EE  0873               	movf	??__Umul8_16+1,w
 10923  19EF  00F7               	movwf	__Umul8_16@word_mpld+1
 10924  19F0                     l2467:
 10925  19F0  1C78               	btfss	__Umul8_16@multiplier,0
 10926  19F1  29F3               	goto	u3081
 10927  19F2  29F4               	goto	u3080
 10928  19F3                     u3081:
 10929  19F3  29FA               	goto	l838
 10930  19F4                     u3080:
 10931  19F4                     l2469:
 10932  19F4  0876               	movf	__Umul8_16@word_mpld,w
 10933  19F5  07F4               	addwf	__Umul8_16@product,f
 10934  19F6  1803               	skipnc
 10935  19F7  0AF5               	incf	__Umul8_16@product+1,f
 10936  19F8  0877               	movf	__Umul8_16@word_mpld+1,w
 10937  19F9  07F5               	addwf	__Umul8_16@product+1,f
 10938  19FA                     l838:
 10939  19FA  3001               	movlw	1
 10940  19FB                     u3095:
 10941  19FB  1003               	clrc
 10942  19FC  0DF6               	rlf	__Umul8_16@word_mpld,f
 10943  19FD  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10944  19FE  3EFF               	addlw	-1
 10945  19FF  1D03               	skipz
 10946  1A00  29FB               	goto	u3095
 10947  1A01  1003               	clrc
 10948  1A02  0CF8               	rrf	__Umul8_16@multiplier,f
 10949  1A03                     l2471:
 10950  1A03  0878               	movf	__Umul8_16@multiplier,w
 10951  1A04  1D03               	btfss	3,2
 10952  1A05  2A07               	goto	u3101
 10953  1A06  2A08               	goto	u3100
 10954  1A07                     u3101:
 10955  1A07  29F0               	goto	l2467
 10956  1A08                     u3100:
 10957  1A08                     l2473:
 10958  1A08  0875               	movf	__Umul8_16@product+1,w
 10959  1A09  00F1               	movwf	?__Umul8_16+1
 10960  1A0A  0874               	movf	__Umul8_16@product,w
 10961  1A0B  00F0               	movwf	?__Umul8_16
 10962  1A0C                     l840:
 10963  1A0C  0008               	return
 10964  1A0D                     __end_of__Umul8_16:
 10965                           
 10966                           	psect	text35
 10967  1190                     __ptext35:	
 10968 ;; *************** function ___fldiv *****************
 10969 ;; Defined at:
 10970 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 10971 ;; Parameters:    Size  Location     Type
 10972 ;;  a               4   30[BANK0 ] unsigned int 
 10973 ;;  b               4   34[BANK0 ] unsigned int 
 10974 ;; Auto vars:     Size  Location     Type
 10975 ;;  grs             4   50[BANK0 ] unsigned long 
 10976 ;;  rem             4   43[BANK0 ] unsigned long 
 10977 ;;  new_exp         2   48[BANK0 ] int 
 10978 ;;  aexp            1   55[BANK0 ] unsigned char 
 10979 ;;  bexp            1   54[BANK0 ] unsigned char 
 10980 ;;  sign            1   47[BANK0 ] unsigned char 
 10981 ;; Return value:  Size  Location     Type
 10982 ;;                  4   30[BANK0 ] unsigned char 
 10983 ;; Registers used:
 10984 ;;		wreg, status,2, status,0, btemp+1
 10985 ;; Tracked objects:
 10986 ;;		On entry : 0/0
 10987 ;;		On exit  : 0/0
 10988 ;;		Unchanged: 0/0
 10989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10990 ;;      Params:         0       8       0       0       0
 10991 ;;      Locals:         0      13       0       0       0
 10992 ;;      Temps:          0       5       0       0       0
 10993 ;;      Totals:         0      26       0       0       0
 10994 ;;Total ram usage:       26 bytes
 10995 ;; Hardware stack levels used:    1
 10996 ;; This function calls:
 10997 ;;		Nothing
 10998 ;; This function is called by:
 10999 ;;		_ADC_channel1
 11000 ;;		_ADC_channel2
 11001 ;; This function uses a non-reentrant model
 11002 ;;
 11003                           
 11004                           
 11005                           ;psect for function ___fldiv
 11006  1190                     ___fldiv:
 11007  1190                     l3631:	
 11008                           ;incstack = 0
 11009                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 11010                           
 11011  1190  1283               	bcf	3,5	;RP0=0, select bank0
 11012  1191  1303               	bcf	3,6	;RP1=0, select bank0
 11013  1192  0845               	movf	___fldiv@b+3,w
 11014  1193  3980               	andlw	128
 11015  1194  00C6               	movwf	??___fldiv
 11016  1195  0846               	movf	??___fldiv,w
 11017  1196  00CF               	movwf	___fldiv@sign
 11018  1197                     l3633:
 11019  1197  0845               	movf	___fldiv@b+3,w
 11020  1198  00C6               	movwf	??___fldiv
 11021  1199  0746               	addwf	??___fldiv,w
 11022  119A  00C7               	movwf	??___fldiv+1
 11023  119B  0847               	movf	??___fldiv+1,w
 11024  119C  00D6               	movwf	___fldiv@bexp
 11025  119D                     l3635:
 11026  119D  1FC4               	btfss	___fldiv@b+2,7
 11027  119E  29A0               	goto	u5831
 11028  119F  29A1               	goto	u5830
 11029  11A0                     u5831:
 11030  11A0  29A2               	goto	l3639
 11031  11A1                     u5830:
 11032  11A1                     l3637:
 11033  11A1  1456               	bsf	___fldiv@bexp,0
 11034  11A2                     l3639:
 11035  11A2  0856               	movf	___fldiv@bexp,w
 11036  11A3  1903               	btfsc	3,2
 11037  11A4  29A6               	goto	u5841
 11038  11A5  29A7               	goto	u5840
 11039  11A6                     u5841:
 11040  11A6  29B7               	goto	l3649
 11041  11A7                     u5840:
 11042  11A7                     l3641:
 11043  11A7  0A56               	incf	___fldiv@bexp,w
 11044  11A8  1D03               	btfss	3,2
 11045  11A9  29AB               	goto	u5851
 11046  11AA  29AC               	goto	u5850
 11047  11AB                     u5851:
 11048  11AB  29B4               	goto	l3645
 11049  11AC                     u5850:
 11050  11AC                     l3643:
 11051  11AC  3000               	movlw	0
 11052  11AD  00C5               	movwf	___fldiv@b+3
 11053  11AE  3000               	movlw	0
 11054  11AF  00C4               	movwf	___fldiv@b+2
 11055  11B0  3000               	movlw	0
 11056  11B1  00C3               	movwf	___fldiv@b+1
 11057  11B2  3000               	movlw	0
 11058  11B3  00C2               	movwf	___fldiv@b
 11059  11B4                     l3645:
 11060  11B4  17C4               	bsf	___fldiv@b+2,7
 11061  11B5                     l3647:
 11062  11B5  01C5               	clrf	___fldiv@b+3
 11063  11B6  29BF               	goto	l3651
 11064  11B7                     l3649:
 11065  11B7  3000               	movlw	0
 11066  11B8  00C5               	movwf	___fldiv@b+3
 11067  11B9  3000               	movlw	0
 11068  11BA  00C4               	movwf	___fldiv@b+2
 11069  11BB  3000               	movlw	0
 11070  11BC  00C3               	movwf	___fldiv@b+1
 11071  11BD  3000               	movlw	0
 11072  11BE  00C2               	movwf	___fldiv@b
 11073  11BF                     l3651:
 11074  11BF  0841               	movf	___fldiv@a+3,w
 11075  11C0  3980               	andlw	128
 11076  11C1  00C6               	movwf	??___fldiv
 11077  11C2  0846               	movf	??___fldiv,w
 11078  11C3  06CF               	xorwf	___fldiv@sign,f
 11079  11C4                     l3653:
 11080  11C4  0841               	movf	___fldiv@a+3,w
 11081  11C5  00C6               	movwf	??___fldiv
 11082  11C6  0746               	addwf	??___fldiv,w
 11083  11C7  00C7               	movwf	??___fldiv+1
 11084  11C8  0847               	movf	??___fldiv+1,w
 11085  11C9  00D7               	movwf	___fldiv@aexp
 11086  11CA                     l3655:
 11087  11CA  1FC0               	btfss	___fldiv@a+2,7
 11088  11CB  29CD               	goto	u5861
 11089  11CC  29CE               	goto	u5860
 11090  11CD                     u5861:
 11091  11CD  29CF               	goto	l3659
 11092  11CE                     u5860:
 11093  11CE                     l3657:
 11094  11CE  1457               	bsf	___fldiv@aexp,0
 11095  11CF                     l3659:
 11096  11CF  0857               	movf	___fldiv@aexp,w
 11097  11D0  1903               	btfsc	3,2
 11098  11D1  29D3               	goto	u5871
 11099  11D2  29D4               	goto	u5870
 11100  11D3                     u5871:
 11101  11D3  29E4               	goto	l3669
 11102  11D4                     u5870:
 11103  11D4                     l3661:
 11104  11D4  0A57               	incf	___fldiv@aexp,w
 11105  11D5  1D03               	btfss	3,2
 11106  11D6  29D8               	goto	u5881
 11107  11D7  29D9               	goto	u5880
 11108  11D8                     u5881:
 11109  11D8  29E1               	goto	l3665
 11110  11D9                     u5880:
 11111  11D9                     l3663:
 11112  11D9  3000               	movlw	0
 11113  11DA  00C1               	movwf	___fldiv@a+3
 11114  11DB  3000               	movlw	0
 11115  11DC  00C0               	movwf	___fldiv@a+2
 11116  11DD  3000               	movlw	0
 11117  11DE  00BF               	movwf	___fldiv@a+1
 11118  11DF  3000               	movlw	0
 11119  11E0  00BE               	movwf	___fldiv@a
 11120  11E1                     l3665:
 11121  11E1  17C0               	bsf	___fldiv@a+2,7
 11122  11E2                     l3667:
 11123  11E2  01C1               	clrf	___fldiv@a+3
 11124  11E3  29EC               	goto	l779
 11125  11E4                     l3669:
 11126  11E4  3000               	movlw	0
 11127  11E5  00C1               	movwf	___fldiv@a+3
 11128  11E6  3000               	movlw	0
 11129  11E7  00C0               	movwf	___fldiv@a+2
 11130  11E8  3000               	movlw	0
 11131  11E9  00BF               	movwf	___fldiv@a+1
 11132  11EA  3000               	movlw	0
 11133  11EB  00BE               	movwf	___fldiv@a
 11134  11EC                     l779:
 11135  11EC  0841               	movf	___fldiv@a+3,w
 11136  11ED  0440               	iorwf	___fldiv@a+2,w
 11137  11EE  043F               	iorwf	___fldiv@a+1,w
 11138  11EF  043E               	iorwf	___fldiv@a,w
 11139  11F0  1D03               	skipz
 11140  11F1  29F3               	goto	u5891
 11141  11F2  29F4               	goto	u5890
 11142  11F3                     u5891:
 11143  11F3  2A0D               	goto	l3679
 11144  11F4                     u5890:
 11145  11F4                     l3671:
 11146  11F4  3000               	movlw	0
 11147  11F5  00C5               	movwf	___fldiv@b+3
 11148  11F6  3000               	movlw	0
 11149  11F7  00C4               	movwf	___fldiv@b+2
 11150  11F8  3000               	movlw	0
 11151  11F9  00C3               	movwf	___fldiv@b+1
 11152  11FA  3000               	movlw	0
 11153  11FB  00C2               	movwf	___fldiv@b
 11154  11FC  3080               	movlw	128
 11155  11FD  04C4               	iorwf	___fldiv@b+2,f
 11156  11FE  307F               	movlw	127
 11157  11FF  04C5               	iorwf	___fldiv@b+3,f
 11158  1200                     l3673:
 11159  1200  084F               	movf	___fldiv@sign,w
 11160  1201  00C6               	movwf	??___fldiv
 11161  1202  0846               	movf	??___fldiv,w
 11162  1203  04C5               	iorwf	___fldiv@b+3,f
 11163  1204                     l3675:
 11164  1204  0845               	movf	___fldiv@b+3,w
 11165  1205  00C1               	movwf	?___fldiv+3
 11166  1206  0844               	movf	___fldiv@b+2,w
 11167  1207  00C0               	movwf	?___fldiv+2
 11168  1208  0843               	movf	___fldiv@b+1,w
 11169  1209  00BF               	movwf	?___fldiv+1
 11170  120A  0842               	movf	___fldiv@b,w
 11171  120B  00BE               	movwf	?___fldiv
 11172  120C  2B6C               	goto	l781
 11173  120D                     l3679:
 11174  120D  0856               	movf	___fldiv@bexp,w
 11175  120E  1D03               	btfss	3,2
 11176  120F  2A11               	goto	u5901
 11177  1210  2A12               	goto	u5900
 11178  1211                     u5901:
 11179  1211  2A1B               	goto	l3685
 11180  1212                     u5900:
 11181  1212                     l3681:
 11182  1212  3000               	movlw	0
 11183  1213  00C1               	movwf	?___fldiv+3
 11184  1214  3000               	movlw	0
 11185  1215  00C0               	movwf	?___fldiv+2
 11186  1216  3000               	movlw	0
 11187  1217  00BF               	movwf	?___fldiv+1
 11188  1218  3000               	movlw	0
 11189  1219  00BE               	movwf	?___fldiv
 11190  121A  2B6C               	goto	l781
 11191  121B                     l3685:
 11192  121B  0856               	movf	___fldiv@bexp,w
 11193  121C  00C6               	movwf	??___fldiv
 11194  121D  01C7               	clrf	??___fldiv+1
 11195  121E  0847               	movf	??___fldiv+1,w
 11196  121F  00C9               	movwf	??___fldiv+3
 11197  1220  0857               	movf	___fldiv@aexp,w
 11198  1221  0246               	subwf	??___fldiv,w
 11199  1222  00C8               	movwf	??___fldiv+2
 11200  1223  1C03               	skipc
 11201  1224  03C9               	decf	??___fldiv+3,f
 11202  1225  0848               	movf	??___fldiv+2,w
 11203  1226  3E7F               	addlw	127
 11204  1227  00D0               	movwf	___fldiv@new_exp
 11205  1228  0849               	movf	??___fldiv+3,w
 11206  1229  1803               	skipnc
 11207  122A  3E01               	addlw	1
 11208  122B  3E00               	addlw	0
 11209  122C  00D1               	movwf	___fldiv@new_exp+1
 11210  122D                     l3687:
 11211  122D  0845               	movf	___fldiv@b+3,w
 11212  122E  00CE               	movwf	___fldiv@rem+3
 11213  122F  0844               	movf	___fldiv@b+2,w
 11214  1230  00CD               	movwf	___fldiv@rem+2
 11215  1231  0843               	movf	___fldiv@b+1,w
 11216  1232  00CC               	movwf	___fldiv@rem+1
 11217  1233  0842               	movf	___fldiv@b,w
 11218  1234  00CB               	movwf	___fldiv@rem
 11219  1235                     l3689:
 11220  1235  3000               	movlw	0
 11221  1236  00C5               	movwf	___fldiv@b+3
 11222  1237  3000               	movlw	0
 11223  1238  00C4               	movwf	___fldiv@b+2
 11224  1239  3000               	movlw	0
 11225  123A  00C3               	movwf	___fldiv@b+1
 11226  123B  3000               	movlw	0
 11227  123C  00C2               	movwf	___fldiv@b
 11228  123D                     l3691:
 11229  123D  3000               	movlw	0
 11230  123E  00D5               	movwf	___fldiv@grs+3
 11231  123F  3000               	movlw	0
 11232  1240  00D4               	movwf	___fldiv@grs+2
 11233  1241  3000               	movlw	0
 11234  1242  00D3               	movwf	___fldiv@grs+1
 11235  1243  3000               	movlw	0
 11236  1244  00D2               	movwf	___fldiv@grs
 11237  1245                     l3693:
 11238  1245  01D7               	clrf	___fldiv@aexp
 11239  1246  2A91               	goto	l3713
 11240  1247                     l3695:
 11241  1247  0857               	movf	___fldiv@aexp,w
 11242  1248  1903               	btfsc	3,2
 11243  1249  2A4B               	goto	u5911
 11244  124A  2A4C               	goto	u5910
 11245  124B                     u5911:
 11246  124B  2A6C               	goto	l3705
 11247  124C                     u5910:
 11248  124C                     l3697:
 11249  124C  3001               	movlw	1
 11250  124D  00C6               	movwf	??___fldiv
 11251  124E                     u5925:
 11252  124E  1003               	clrc
 11253  124F  0DCB               	rlf	___fldiv@rem,f
 11254  1250  0DCC               	rlf	___fldiv@rem+1,f
 11255  1251  0DCD               	rlf	___fldiv@rem+2,f
 11256  1252  0DCE               	rlf	___fldiv@rem+3,f
 11257  1253  0BC6               	decfsz	??___fldiv,f
 11258  1254  2A4E               	goto	u5925
 11259  1255  3001               	movlw	1
 11260  1256  00C6               	movwf	??___fldiv
 11261  1257                     u5935:
 11262  1257  1003               	clrc
 11263  1258  0DC2               	rlf	___fldiv@b,f
 11264  1259  0DC3               	rlf	___fldiv@b+1,f
 11265  125A  0DC4               	rlf	___fldiv@b+2,f
 11266  125B  0DC5               	rlf	___fldiv@b+3,f
 11267  125C  0BC6               	decfsz	??___fldiv,f
 11268  125D  2A57               	goto	u5935
 11269  125E                     l3699:
 11270  125E  1FD5               	btfss	___fldiv@grs+3,7
 11271  125F  2A61               	goto	u5941
 11272  1260  2A62               	goto	u5940
 11273  1261                     u5941:
 11274  1261  2A63               	goto	l3703
 11275  1262                     u5940:
 11276  1262                     l3701:
 11277  1262  1442               	bsf	___fldiv@b,0
 11278  1263                     l3703:
 11279  1263  3001               	movlw	1
 11280  1264  00C6               	movwf	??___fldiv
 11281  1265                     u5955:
 11282  1265  1003               	clrc
 11283  1266  0DD2               	rlf	___fldiv@grs,f
 11284  1267  0DD3               	rlf	___fldiv@grs+1,f
 11285  1268  0DD4               	rlf	___fldiv@grs+2,f
 11286  1269  0DD5               	rlf	___fldiv@grs+3,f
 11287  126A  0BC6               	decfsz	??___fldiv,f
 11288  126B  2A65               	goto	u5955
 11289  126C                     l3705:
 11290  126C  0841               	movf	___fldiv@a+3,w
 11291  126D  024E               	subwf	___fldiv@rem+3,w
 11292  126E  1D03               	skipz
 11293  126F  2A7A               	goto	u5965
 11294  1270  0840               	movf	___fldiv@a+2,w
 11295  1271  024D               	subwf	___fldiv@rem+2,w
 11296  1272  1D03               	skipz
 11297  1273  2A7A               	goto	u5965
 11298  1274  083F               	movf	___fldiv@a+1,w
 11299  1275  024C               	subwf	___fldiv@rem+1,w
 11300  1276  1D03               	skipz
 11301  1277  2A7A               	goto	u5965
 11302  1278  083E               	movf	___fldiv@a,w
 11303  1279  024B               	subwf	___fldiv@rem,w
 11304  127A                     u5965:
 11305  127A  1C03               	skipc
 11306  127B  2A7D               	goto	u5961
 11307  127C  2A7E               	goto	u5960
 11308  127D                     u5961:
 11309  127D  2A8D               	goto	l3711
 11310  127E                     u5960:
 11311  127E                     l3707:
 11312  127E  1755               	bsf	___fldiv@grs+3,6
 11313  127F                     l3709:
 11314  127F  083E               	movf	___fldiv@a,w
 11315  1280  02CB               	subwf	___fldiv@rem,f
 11316  1281  083F               	movf	___fldiv@a+1,w
 11317  1282  1C03               	skipc
 11318  1283  0F3F               	incfsz	___fldiv@a+1,w
 11319  1284  02CC               	subwf	___fldiv@rem+1,f
 11320  1285  0840               	movf	___fldiv@a+2,w
 11321  1286  1C03               	skipc
 11322  1287  0F40               	incfsz	___fldiv@a+2,w
 11323  1288  02CD               	subwf	___fldiv@rem+2,f
 11324  1289  0841               	movf	___fldiv@a+3,w
 11325  128A  1C03               	skipc
 11326  128B  0F41               	incfsz	___fldiv@a+3,w
 11327  128C  02CE               	subwf	___fldiv@rem+3,f
 11328  128D                     l3711:
 11329  128D  3001               	movlw	1
 11330  128E  00C6               	movwf	??___fldiv
 11331  128F  0846               	movf	??___fldiv,w
 11332  1290  07D7               	addwf	___fldiv@aexp,f
 11333  1291                     l3713:
 11334  1291  301A               	movlw	26
 11335  1292  0257               	subwf	___fldiv@aexp,w
 11336  1293  1C03               	skipc
 11337  1294  2A96               	goto	u5971
 11338  1295  2A97               	goto	u5970
 11339  1296                     u5971:
 11340  1296  2A47               	goto	l3695
 11341  1297                     u5970:
 11342  1297                     l3715:
 11343  1297  084E               	movf	___fldiv@rem+3,w
 11344  1298  044D               	iorwf	___fldiv@rem+2,w
 11345  1299  044C               	iorwf	___fldiv@rem+1,w
 11346  129A  044B               	iorwf	___fldiv@rem,w
 11347  129B  1903               	skipnz
 11348  129C  2A9E               	goto	u5981
 11349  129D  2A9F               	goto	u5980
 11350  129E                     u5981:
 11351  129E  2ABE               	goto	l3729
 11352  129F                     u5980:
 11353  129F                     l3717:
 11354  129F  1452               	bsf	___fldiv@grs,0
 11355  12A0  2ABE               	goto	l3729
 11356  12A1                     l3719:
 11357  12A1  3001               	movlw	1
 11358  12A2  00C6               	movwf	??___fldiv
 11359  12A3                     u5995:
 11360  12A3  1003               	clrc
 11361  12A4  0DC2               	rlf	___fldiv@b,f
 11362  12A5  0DC3               	rlf	___fldiv@b+1,f
 11363  12A6  0DC4               	rlf	___fldiv@b+2,f
 11364  12A7  0DC5               	rlf	___fldiv@b+3,f
 11365  12A8  0BC6               	decfsz	??___fldiv,f
 11366  12A9  2AA3               	goto	u5995
 11367  12AA                     l3721:
 11368  12AA  1FD5               	btfss	___fldiv@grs+3,7
 11369  12AB  2AAD               	goto	u6001
 11370  12AC  2AAE               	goto	u6000
 11371  12AD                     u6001:
 11372  12AD  2AAF               	goto	l3725
 11373  12AE                     u6000:
 11374  12AE                     l3723:
 11375  12AE  1442               	bsf	___fldiv@b,0
 11376  12AF                     l3725:
 11377  12AF  3001               	movlw	1
 11378  12B0  00C6               	movwf	??___fldiv
 11379  12B1                     u6015:
 11380  12B1  1003               	clrc
 11381  12B2  0DD2               	rlf	___fldiv@grs,f
 11382  12B3  0DD3               	rlf	___fldiv@grs+1,f
 11383  12B4  0DD4               	rlf	___fldiv@grs+2,f
 11384  12B5  0DD5               	rlf	___fldiv@grs+3,f
 11385  12B6  0BC6               	decfsz	??___fldiv,f
 11386  12B7  2AB1               	goto	u6015
 11387  12B8                     l3727:
 11388  12B8  30FF               	movlw	255
 11389  12B9  07D0               	addwf	___fldiv@new_exp,f
 11390  12BA  1803               	skipnc
 11391  12BB  0AD1               	incf	___fldiv@new_exp+1,f
 11392  12BC  30FF               	movlw	255
 11393  12BD  07D1               	addwf	___fldiv@new_exp+1,f
 11394  12BE                     l3729:
 11395  12BE  1FC4               	btfss	___fldiv@b+2,7
 11396  12BF  2AC1               	goto	u6021
 11397  12C0  2AC2               	goto	u6020
 11398  12C1                     u6021:
 11399  12C1  2AA1               	goto	l3719
 11400  12C2                     u6020:
 11401  12C2                     l3731:
 11402  12C2  01D7               	clrf	___fldiv@aexp
 11403  12C3                     l3733:
 11404  12C3  1FD5               	btfss	___fldiv@grs+3,7
 11405  12C4  2AC6               	goto	u6031
 11406  12C5  2AC7               	goto	u6030
 11407  12C6                     u6031:
 11408  12C6  2AE3               	goto	l3741
 11409  12C7                     u6030:
 11410  12C7                     l3735:
 11411  12C7  30FF               	movlw	255
 11412  12C8  0552               	andwf	___fldiv@grs,w
 11413  12C9  00C6               	movwf	??___fldiv
 11414  12CA  30FF               	movlw	255
 11415  12CB  0553               	andwf	___fldiv@grs+1,w
 11416  12CC  00C7               	movwf	??___fldiv+1
 11417  12CD  30FF               	movlw	255
 11418  12CE  0554               	andwf	___fldiv@grs+2,w
 11419  12CF  00C8               	movwf	??___fldiv+2
 11420  12D0  307F               	movlw	127
 11421  12D1  0555               	andwf	___fldiv@grs+3,w
 11422  12D2  00C9               	movwf	??___fldiv+3
 11423  12D3  0849               	movf	??___fldiv+3,w
 11424  12D4  0448               	iorwf	??___fldiv+2,w
 11425  12D5  0447               	iorwf	??___fldiv+1,w
 11426  12D6  0446               	iorwf	??___fldiv,w
 11427  12D7  1903               	skipnz
 11428  12D8  2ADA               	goto	u6041
 11429  12D9  2ADB               	goto	u6040
 11430  12DA                     u6041:
 11431  12DA  2ADE               	goto	l795
 11432  12DB                     u6040:
 11433  12DB                     l3737:
 11434  12DB  01D7               	clrf	___fldiv@aexp
 11435  12DC  0AD7               	incf	___fldiv@aexp,f
 11436  12DD  2AE3               	goto	l3741
 11437  12DE                     l795:
 11438  12DE  1C42               	btfss	___fldiv@b,0
 11439  12DF  2AE1               	goto	u6051
 11440  12E0  2AE2               	goto	u6050
 11441  12E1                     u6051:
 11442  12E1  2AE3               	goto	l3741
 11443  12E2                     u6050:
 11444  12E2  2ADB               	goto	l3737
 11445  12E3                     l3741:
 11446  12E3  0857               	movf	___fldiv@aexp,w
 11447  12E4  1903               	btfsc	3,2
 11448  12E5  2AE7               	goto	u6061
 11449  12E6  2AE8               	goto	u6060
 11450  12E7                     u6061:
 11451  12E7  2B19               	goto	l3751
 11452  12E8                     u6060:
 11453  12E8                     l3743:
 11454  12E8  3001               	movlw	1
 11455  12E9  07C2               	addwf	___fldiv@b,f
 11456  12EA  3000               	movlw	0
 11457  12EB  1803               	skipnc
 11458  12EC  3001               	movlw	1
 11459  12ED  07C3               	addwf	___fldiv@b+1,f
 11460  12EE  3000               	movlw	0
 11461  12EF  1803               	skipnc
 11462  12F0  3001               	movlw	1
 11463  12F1  07C4               	addwf	___fldiv@b+2,f
 11464  12F2  3000               	movlw	0
 11465  12F3  1803               	skipnc
 11466  12F4  3001               	movlw	1
 11467  12F5  07C5               	addwf	___fldiv@b+3,f
 11468  12F6                     l3745:
 11469  12F6  1C45               	btfss	___fldiv@b+3,0
 11470  12F7  2AF9               	goto	u6071
 11471  12F8  2AFA               	goto	u6070
 11472  12F9                     u6071:
 11473  12F9  2B19               	goto	l3751
 11474  12FA                     u6070:
 11475  12FA                     l3747:
 11476  12FA  0842               	movf	___fldiv@b,w
 11477  12FB  00C6               	movwf	??___fldiv
 11478  12FC  0843               	movf	___fldiv@b+1,w
 11479  12FD  00C7               	movwf	??___fldiv+1
 11480  12FE  0844               	movf	___fldiv@b+2,w
 11481  12FF  00C8               	movwf	??___fldiv+2
 11482  1300  0845               	movf	___fldiv@b+3,w
 11483  1301  00C9               	movwf	??___fldiv+3
 11484  1302  3001               	movlw	1
 11485  1303  00CA               	movwf	??___fldiv+4
 11486  1304                     u6085:
 11487  1304  0D49               	rlf	??___fldiv+3,w
 11488  1305  0CC9               	rrf	??___fldiv+3,f
 11489  1306  0CC8               	rrf	??___fldiv+2,f
 11490  1307  0CC7               	rrf	??___fldiv+1,f
 11491  1308  0CC6               	rrf	??___fldiv,f
 11492  1309                     u6080:
 11493  1309  0BCA               	decfsz	??___fldiv+4,f
 11494  130A  2B04               	goto	u6085
 11495  130B  0849               	movf	??___fldiv+3,w
 11496  130C  00C5               	movwf	___fldiv@b+3
 11497  130D  0848               	movf	??___fldiv+2,w
 11498  130E  00C4               	movwf	___fldiv@b+2
 11499  130F  0847               	movf	??___fldiv+1,w
 11500  1310  00C3               	movwf	___fldiv@b+1
 11501  1311  0846               	movf	??___fldiv,w
 11502  1312  00C2               	movwf	___fldiv@b
 11503  1313                     l3749:
 11504  1313  3001               	movlw	1
 11505  1314  07D0               	addwf	___fldiv@new_exp,f
 11506  1315  1803               	skipnc
 11507  1316  0AD1               	incf	___fldiv@new_exp+1,f
 11508  1317  3000               	movlw	0
 11509  1318  07D1               	addwf	___fldiv@new_exp+1,f
 11510  1319                     l3751:
 11511  1319  0851               	movf	___fldiv@new_exp+1,w
 11512  131A  3A80               	xorlw	128
 11513  131B  00FF               	movwf	btemp+1
 11514  131C  3080               	movlw	128
 11515  131D  027F               	subwf	btemp+1,w
 11516  131E  1D03               	skipz
 11517  131F  2B22               	goto	u6095
 11518  1320  30FF               	movlw	255
 11519  1321  0250               	subwf	___fldiv@new_exp,w
 11520  1322                     u6095:
 11521  1322  1C03               	skipc
 11522  1323  2B25               	goto	u6091
 11523  1324  2B26               	goto	u6090
 11524  1325                     u6091:
 11525  1325  2B34               	goto	l3755
 11526  1326                     u6090:
 11527  1326                     l3753:
 11528  1326  30FF               	movlw	255
 11529  1327  1283               	bcf	3,5	;RP0=0, select bank0
 11530  1328  1303               	bcf	3,6	;RP1=0, select bank0
 11531  1329  00D0               	movwf	___fldiv@new_exp
 11532  132A  3000               	movlw	0
 11533  132B  00D1               	movwf	___fldiv@new_exp+1
 11534  132C  3000               	movlw	0
 11535  132D  00C5               	movwf	___fldiv@b+3
 11536  132E  3000               	movlw	0
 11537  132F  00C4               	movwf	___fldiv@b+2
 11538  1330  3000               	movlw	0
 11539  1331  00C3               	movwf	___fldiv@b+1
 11540  1332  3000               	movlw	0
 11541  1333  00C2               	movwf	___fldiv@b
 11542  1334                     l3755:
 11543  1334  1283               	bcf	3,5	;RP0=0, select bank0
 11544  1335  1303               	bcf	3,6	;RP1=0, select bank0
 11545  1336  0851               	movf	___fldiv@new_exp+1,w
 11546  1337  3A80               	xorlw	128
 11547  1338  00FF               	movwf	btemp+1
 11548  1339  3080               	movlw	128
 11549  133A  027F               	subwf	btemp+1,w
 11550  133B  1D03               	skipz
 11551  133C  2B3F               	goto	u6105
 11552  133D  3001               	movlw	1
 11553  133E  0250               	subwf	___fldiv@new_exp,w
 11554  133F                     u6105:
 11555  133F  1803               	skipnc
 11556  1340  2B42               	goto	u6101
 11557  1341  2B43               	goto	u6100
 11558  1342                     u6101:
 11559  1342  2B50               	goto	l801
 11560  1343                     u6100:
 11561  1343                     l3757:
 11562  1343  1283               	bcf	3,5	;RP0=0, select bank0
 11563  1344  1303               	bcf	3,6	;RP1=0, select bank0
 11564  1345  01D0               	clrf	___fldiv@new_exp
 11565  1346  01D1               	clrf	___fldiv@new_exp+1
 11566  1347                     l3759:
 11567  1347  3000               	movlw	0
 11568  1348  00C5               	movwf	___fldiv@b+3
 11569  1349  3000               	movlw	0
 11570  134A  00C4               	movwf	___fldiv@b+2
 11571  134B  3000               	movlw	0
 11572  134C  00C3               	movwf	___fldiv@b+1
 11573  134D  3000               	movlw	0
 11574  134E  00C2               	movwf	___fldiv@b
 11575  134F                     l3761:
 11576  134F  01CF               	clrf	___fldiv@sign
 11577  1350                     l801:
 11578  1350  1283               	bcf	3,5	;RP0=0, select bank0
 11579  1351  1303               	bcf	3,6	;RP1=0, select bank0
 11580  1352  0850               	movf	___fldiv@new_exp,w
 11581  1353  00C6               	movwf	??___fldiv
 11582  1354  0846               	movf	??___fldiv,w
 11583  1355  00D6               	movwf	___fldiv@bexp
 11584  1356                     l3763:
 11585  1356  1C56               	btfss	___fldiv@bexp,0
 11586  1357  2B59               	goto	u6111
 11587  1358  2B5A               	goto	u6110
 11588  1359                     u6111:
 11589  1359  2B5C               	goto	l3767
 11590  135A                     u6110:
 11591  135A                     l3765:
 11592  135A  17C4               	bsf	___fldiv@b+2,7
 11593  135B  2B60               	goto	l803
 11594  135C                     l3767:
 11595  135C  307F               	movlw	127
 11596  135D  00C6               	movwf	??___fldiv
 11597  135E  0846               	movf	??___fldiv,w
 11598  135F  05C4               	andwf	___fldiv@b+2,f
 11599  1360                     l803:
 11600  1360  0856               	movf	___fldiv@bexp,w
 11601  1361  00C6               	movwf	??___fldiv
 11602  1362  1003               	clrc
 11603  1363  0C46               	rrf	??___fldiv,w
 11604  1364  00C7               	movwf	??___fldiv+1
 11605  1365  0847               	movf	??___fldiv+1,w
 11606  1366  00C5               	movwf	___fldiv@b+3
 11607  1367  084F               	movf	___fldiv@sign,w
 11608  1368  00C6               	movwf	??___fldiv
 11609  1369  0846               	movf	??___fldiv,w
 11610  136A  04C5               	iorwf	___fldiv@b+3,f
 11611  136B  2A04               	goto	l3675
 11612  136C                     l781:
 11613  136C  0008               	return
 11614  136D                     __end_of___fldiv:
 11615                           
 11616                           	psect	text36
 11617  1017                     __ptext36:	
 11618 ;; *************** function _ADC_Config *****************
 11619 ;; Defined at:
 11620 ;;		line 31 in file "Config_ADC.c"
 11621 ;; Parameters:    Size  Location     Type
 11622 ;;  AN_num          1    wreg     unsigned char 
 11623 ;; Auto vars:     Size  Location     Type
 11624 ;;  AN_num          1    2[COMMON] unsigned char 
 11625 ;; Return value:  Size  Location     Type
 11626 ;;                  1    wreg      void 
 11627 ;; Registers used:
 11628 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11629 ;; Tracked objects:
 11630 ;;		On entry : 0/0
 11631 ;;		On exit  : 0/0
 11632 ;;		Unchanged: 0/0
 11633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11634 ;;      Params:         0       0       0       0       0
 11635 ;;      Locals:         1       0       0       0       0
 11636 ;;      Temps:          2       0       0       0       0
 11637 ;;      Totals:         3       0       0       0       0
 11638 ;;Total ram usage:        3 bytes
 11639 ;; Hardware stack levels used:    1
 11640 ;; This function calls:
 11641 ;;		Nothing
 11642 ;; This function is called by:
 11643 ;;		_ADC_channel1
 11644 ;;		_ADC_channel2
 11645 ;; This function uses a non-reentrant model
 11646 ;;
 11647                           
 11648                           
 11649                           ;psect for function _ADC_Config
 11650  1017                     _ADC_Config:
 11651                           
 11652                           ;incstack = 0
 11653                           ; Regs used in _ADC_Config: [wreg-fsr0h+status,2+status,0]
 11654                           ;ADC_Config@AN_num stored from wreg
 11655  1017  00F2               	movwf	ADC_Config@AN_num
 11656  1018                     l3341:
 11657                           
 11658                           ;Config_ADC.c: 33:     switch(AN_num){
 11659  1018  2890               	goto	l3345
 11660  1019                     l182:	
 11661                           ;Config_ADC.c: 34:         case 0:
 11662                           
 11663                           
 11664                           ;Config_ADC.c: 35:             ADCON0bits.CHS3 = 0;
 11665  1019  1283               	bcf	3,5	;RP0=0, select bank0
 11666  101A  1303               	bcf	3,6	;RP1=0, select bank0
 11667  101B  129F               	bcf	31,5	;volatile
 11668                           
 11669                           ;Config_ADC.c: 36:             ADCON0bits.CHS2 = 0;
 11670  101C  121F               	bcf	31,4	;volatile
 11671                           
 11672                           ;Config_ADC.c: 37:             ADCON0bits.CHS1 = 0;
 11673  101D  119F               	bcf	31,3	;volatile
 11674                           
 11675                           ;Config_ADC.c: 38:             ADCON0bits.CHS0 = 0;
 11676  101E  111F               	bcf	31,2	;volatile
 11677                           
 11678                           ;Config_ADC.c: 39:             break;
 11679  101F  28CA               	goto	l3347
 11680  1020                     l184:	
 11681                           ;Config_ADC.c: 40:         case 1:
 11682                           
 11683                           
 11684                           ;Config_ADC.c: 41:             ADCON0bits.CHS3 = 0;
 11685  1020  1283               	bcf	3,5	;RP0=0, select bank0
 11686  1021  1303               	bcf	3,6	;RP1=0, select bank0
 11687  1022  129F               	bcf	31,5	;volatile
 11688                           
 11689                           ;Config_ADC.c: 42:             ADCON0bits.CHS2 = 0;
 11690  1023  121F               	bcf	31,4	;volatile
 11691                           
 11692                           ;Config_ADC.c: 43:             ADCON0bits.CHS1 = 0;
 11693  1024  119F               	bcf	31,3	;volatile
 11694                           
 11695                           ;Config_ADC.c: 44:             ADCON0bits.CHS0 = 1;
 11696  1025  151F               	bsf	31,2	;volatile
 11697                           
 11698                           ;Config_ADC.c: 45:             break;
 11699  1026  28CA               	goto	l3347
 11700  1027                     l185:	
 11701                           ;Config_ADC.c: 46:         case 2:
 11702                           
 11703                           
 11704                           ;Config_ADC.c: 47:             ADCON0bits.CHS3 = 0;
 11705  1027  1283               	bcf	3,5	;RP0=0, select bank0
 11706  1028  1303               	bcf	3,6	;RP1=0, select bank0
 11707  1029  129F               	bcf	31,5	;volatile
 11708                           
 11709                           ;Config_ADC.c: 48:             ADCON0bits.CHS2 = 0;
 11710  102A  121F               	bcf	31,4	;volatile
 11711                           
 11712                           ;Config_ADC.c: 49:             ADCON0bits.CHS1 = 1;
 11713  102B  159F               	bsf	31,3	;volatile
 11714                           
 11715                           ;Config_ADC.c: 50:             ADCON0bits.CHS0 = 0;
 11716  102C  111F               	bcf	31,2	;volatile
 11717                           
 11718                           ;Config_ADC.c: 51:             break;
 11719  102D  28CA               	goto	l3347
 11720  102E                     l186:	
 11721                           ;Config_ADC.c: 52:         case 3:
 11722                           
 11723                           
 11724                           ;Config_ADC.c: 53:             ADCON0bits.CHS3 = 0;
 11725  102E  1283               	bcf	3,5	;RP0=0, select bank0
 11726  102F  1303               	bcf	3,6	;RP1=0, select bank0
 11727  1030  129F               	bcf	31,5	;volatile
 11728                           
 11729                           ;Config_ADC.c: 54:             ADCON0bits.CHS2 = 0;
 11730  1031  121F               	bcf	31,4	;volatile
 11731                           
 11732                           ;Config_ADC.c: 55:             ADCON0bits.CHS1 = 1;
 11733  1032  159F               	bsf	31,3	;volatile
 11734                           
 11735                           ;Config_ADC.c: 56:             ADCON0bits.CHS0 = 1;
 11736  1033  151F               	bsf	31,2	;volatile
 11737                           
 11738                           ;Config_ADC.c: 57:             break;
 11739  1034  28CA               	goto	l3347
 11740  1035                     l187:	
 11741                           ;Config_ADC.c: 58:         case 4:
 11742                           
 11743                           
 11744                           ;Config_ADC.c: 59:             ADCON0bits.CHS3 = 0;
 11745  1035  1283               	bcf	3,5	;RP0=0, select bank0
 11746  1036  1303               	bcf	3,6	;RP1=0, select bank0
 11747  1037  129F               	bcf	31,5	;volatile
 11748                           
 11749                           ;Config_ADC.c: 60:             ADCON0bits.CHS2 = 1;
 11750  1038  161F               	bsf	31,4	;volatile
 11751                           
 11752                           ;Config_ADC.c: 61:             ADCON0bits.CHS1 = 0;
 11753  1039  119F               	bcf	31,3	;volatile
 11754                           
 11755                           ;Config_ADC.c: 62:             ADCON0bits.CHS0 = 0;
 11756  103A  111F               	bcf	31,2	;volatile
 11757                           
 11758                           ;Config_ADC.c: 63:             break;
 11759  103B  28CA               	goto	l3347
 11760  103C                     l188:	
 11761                           ;Config_ADC.c: 64:         case 5:
 11762                           
 11763                           
 11764                           ;Config_ADC.c: 65:             ADCON0bits.CHS3 = 0;
 11765  103C  1283               	bcf	3,5	;RP0=0, select bank0
 11766  103D  1303               	bcf	3,6	;RP1=0, select bank0
 11767  103E  129F               	bcf	31,5	;volatile
 11768                           
 11769                           ;Config_ADC.c: 66:             ADCON0bits.CHS2 = 1;
 11770  103F  161F               	bsf	31,4	;volatile
 11771                           
 11772                           ;Config_ADC.c: 67:             ADCON0bits.CHS1 = 0;
 11773  1040  119F               	bcf	31,3	;volatile
 11774                           
 11775                           ;Config_ADC.c: 68:             ADCON0bits.CHS0 = 1;
 11776  1041  151F               	bsf	31,2	;volatile
 11777                           
 11778                           ;Config_ADC.c: 69:             break;
 11779  1042  28CA               	goto	l3347
 11780  1043                     l189:	
 11781                           ;Config_ADC.c: 70:         case 6:
 11782                           
 11783                           
 11784                           ;Config_ADC.c: 71:             ADCON0bits.CHS3 = 0;
 11785  1043  1283               	bcf	3,5	;RP0=0, select bank0
 11786  1044  1303               	bcf	3,6	;RP1=0, select bank0
 11787  1045  129F               	bcf	31,5	;volatile
 11788                           
 11789                           ;Config_ADC.c: 72:             ADCON0bits.CHS2 = 1;
 11790  1046  161F               	bsf	31,4	;volatile
 11791                           
 11792                           ;Config_ADC.c: 73:             ADCON0bits.CHS1 = 1;
 11793  1047  159F               	bsf	31,3	;volatile
 11794                           
 11795                           ;Config_ADC.c: 74:             ADCON0bits.CHS0 = 0;
 11796  1048  111F               	bcf	31,2	;volatile
 11797                           
 11798                           ;Config_ADC.c: 75:             break;
 11799  1049  28CA               	goto	l3347
 11800  104A                     l190:	
 11801                           ;Config_ADC.c: 76:         case 7:
 11802                           
 11803                           
 11804                           ;Config_ADC.c: 77:             ADCON0bits.CHS3 = 0;
 11805  104A  1283               	bcf	3,5	;RP0=0, select bank0
 11806  104B  1303               	bcf	3,6	;RP1=0, select bank0
 11807  104C  129F               	bcf	31,5	;volatile
 11808                           
 11809                           ;Config_ADC.c: 78:             ADCON0bits.CHS2 = 1;
 11810  104D  161F               	bsf	31,4	;volatile
 11811                           
 11812                           ;Config_ADC.c: 79:             ADCON0bits.CHS1 = 1;
 11813  104E  159F               	bsf	31,3	;volatile
 11814                           
 11815                           ;Config_ADC.c: 80:             ADCON0bits.CHS0 = 1;
 11816  104F  151F               	bsf	31,2	;volatile
 11817                           
 11818                           ;Config_ADC.c: 81:             break;
 11819  1050  28CA               	goto	l3347
 11820  1051                     l191:	
 11821                           ;Config_ADC.c: 82:         case 8:
 11822                           
 11823                           
 11824                           ;Config_ADC.c: 83:             ADCON0bits.CHS3 = 1;
 11825  1051  1283               	bcf	3,5	;RP0=0, select bank0
 11826  1052  1303               	bcf	3,6	;RP1=0, select bank0
 11827  1053  169F               	bsf	31,5	;volatile
 11828                           
 11829                           ;Config_ADC.c: 84:             ADCON0bits.CHS2 = 0;
 11830  1054  121F               	bcf	31,4	;volatile
 11831                           
 11832                           ;Config_ADC.c: 85:             ADCON0bits.CHS1 = 0;
 11833  1055  119F               	bcf	31,3	;volatile
 11834                           
 11835                           ;Config_ADC.c: 86:             ADCON0bits.CHS0 = 0;
 11836  1056  111F               	bcf	31,2	;volatile
 11837                           
 11838                           ;Config_ADC.c: 87:             break;
 11839  1057  28CA               	goto	l3347
 11840  1058                     l192:	
 11841                           ;Config_ADC.c: 88:         case 9:
 11842                           
 11843                           
 11844                           ;Config_ADC.c: 89:             ADCON0bits.CHS3 = 1;
 11845  1058  1283               	bcf	3,5	;RP0=0, select bank0
 11846  1059  1303               	bcf	3,6	;RP1=0, select bank0
 11847  105A  169F               	bsf	31,5	;volatile
 11848                           
 11849                           ;Config_ADC.c: 90:             ADCON0bits.CHS2 = 0;
 11850  105B  121F               	bcf	31,4	;volatile
 11851                           
 11852                           ;Config_ADC.c: 91:             ADCON0bits.CHS1 = 0;
 11853  105C  119F               	bcf	31,3	;volatile
 11854                           
 11855                           ;Config_ADC.c: 92:             ADCON0bits.CHS0 = 1;
 11856  105D  151F               	bsf	31,2	;volatile
 11857                           
 11858                           ;Config_ADC.c: 93:             break;
 11859  105E  28CA               	goto	l3347
 11860  105F                     l193:	
 11861                           ;Config_ADC.c: 94:         case 10:
 11862                           
 11863                           
 11864                           ;Config_ADC.c: 95:             ADCON0bits.CHS3 = 1;
 11865  105F  1283               	bcf	3,5	;RP0=0, select bank0
 11866  1060  1303               	bcf	3,6	;RP1=0, select bank0
 11867  1061  169F               	bsf	31,5	;volatile
 11868                           
 11869                           ;Config_ADC.c: 96:             ADCON0bits.CHS2 = 0;
 11870  1062  121F               	bcf	31,4	;volatile
 11871                           
 11872                           ;Config_ADC.c: 97:             ADCON0bits.CHS1 = 1;
 11873  1063  159F               	bsf	31,3	;volatile
 11874                           
 11875                           ;Config_ADC.c: 98:             ADCON0bits.CHS0 = 0;
 11876  1064  111F               	bcf	31,2	;volatile
 11877                           
 11878                           ;Config_ADC.c: 99:             break;
 11879  1065  28CA               	goto	l3347
 11880  1066                     l194:	
 11881                           ;Config_ADC.c: 100:         case 11:
 11882                           
 11883                           
 11884                           ;Config_ADC.c: 101:             ADCON0bits.CHS3 = 1;
 11885  1066  1283               	bcf	3,5	;RP0=0, select bank0
 11886  1067  1303               	bcf	3,6	;RP1=0, select bank0
 11887  1068  169F               	bsf	31,5	;volatile
 11888                           
 11889                           ;Config_ADC.c: 102:             ADCON0bits.CHS2 = 0;
 11890  1069  121F               	bcf	31,4	;volatile
 11891                           
 11892                           ;Config_ADC.c: 103:             ADCON0bits.CHS1 = 1;
 11893  106A  159F               	bsf	31,3	;volatile
 11894                           
 11895                           ;Config_ADC.c: 104:             ADCON0bits.CHS0 = 1;
 11896  106B  151F               	bsf	31,2	;volatile
 11897                           
 11898                           ;Config_ADC.c: 105:             break;
 11899  106C  28CA               	goto	l3347
 11900  106D                     l195:	
 11901                           ;Config_ADC.c: 106:         case 12:
 11902                           
 11903                           
 11904                           ;Config_ADC.c: 107:             ADCON0bits.CHS3 = 1;
 11905  106D  1283               	bcf	3,5	;RP0=0, select bank0
 11906  106E  1303               	bcf	3,6	;RP1=0, select bank0
 11907  106F  169F               	bsf	31,5	;volatile
 11908                           
 11909                           ;Config_ADC.c: 108:             ADCON0bits.CHS2 = 1;
 11910  1070  161F               	bsf	31,4	;volatile
 11911                           
 11912                           ;Config_ADC.c: 109:             ADCON0bits.CHS1 = 0;
 11913  1071  119F               	bcf	31,3	;volatile
 11914                           
 11915                           ;Config_ADC.c: 110:             ADCON0bits.CHS0 = 0;
 11916  1072  111F               	bcf	31,2	;volatile
 11917                           
 11918                           ;Config_ADC.c: 111:             break;
 11919  1073  28CA               	goto	l3347
 11920  1074                     l196:	
 11921                           ;Config_ADC.c: 112:         case 13:
 11922                           
 11923                           
 11924                           ;Config_ADC.c: 113:             ADCON0bits.CHS3 = 1;
 11925  1074  1283               	bcf	3,5	;RP0=0, select bank0
 11926  1075  1303               	bcf	3,6	;RP1=0, select bank0
 11927  1076  169F               	bsf	31,5	;volatile
 11928                           
 11929                           ;Config_ADC.c: 114:             ADCON0bits.CHS2 = 1;
 11930  1077  161F               	bsf	31,4	;volatile
 11931                           
 11932                           ;Config_ADC.c: 115:             ADCON0bits.CHS1 = 0;
 11933  1078  119F               	bcf	31,3	;volatile
 11934                           
 11935                           ;Config_ADC.c: 116:             ADCON0bits.CHS0 = 1;
 11936  1079  151F               	bsf	31,2	;volatile
 11937                           
 11938                           ;Config_ADC.c: 117:             break;
 11939  107A  28CA               	goto	l3347
 11940  107B                     l197:	
 11941                           ;Config_ADC.c: 118:         case 14:
 11942                           
 11943                           
 11944                           ;Config_ADC.c: 119:             ADCON0bits.CHS3 = 1;
 11945  107B  1283               	bcf	3,5	;RP0=0, select bank0
 11946  107C  1303               	bcf	3,6	;RP1=0, select bank0
 11947  107D  169F               	bsf	31,5	;volatile
 11948                           
 11949                           ;Config_ADC.c: 120:             ADCON0bits.CHS2 = 1;
 11950  107E  161F               	bsf	31,4	;volatile
 11951                           
 11952                           ;Config_ADC.c: 121:             ADCON0bits.CHS1 = 1;
 11953  107F  159F               	bsf	31,3	;volatile
 11954                           
 11955                           ;Config_ADC.c: 122:             ADCON0bits.CHS0 = 0;
 11956  1080  111F               	bcf	31,2	;volatile
 11957                           
 11958                           ;Config_ADC.c: 123:             break;
 11959  1081  28CA               	goto	l3347
 11960  1082                     l198:	
 11961                           ;Config_ADC.c: 124:         case 15:
 11962                           
 11963                           
 11964                           ;Config_ADC.c: 125:             ADCON0bits.CHS3 = 1;
 11965  1082  1283               	bcf	3,5	;RP0=0, select bank0
 11966  1083  1303               	bcf	3,6	;RP1=0, select bank0
 11967  1084  169F               	bsf	31,5	;volatile
 11968                           
 11969                           ;Config_ADC.c: 126:             ADCON0bits.CHS2 = 1;
 11970  1085  161F               	bsf	31,4	;volatile
 11971                           
 11972                           ;Config_ADC.c: 127:             ADCON0bits.CHS1 = 1;
 11973  1086  159F               	bsf	31,3	;volatile
 11974                           
 11975                           ;Config_ADC.c: 128:             ADCON0bits.CHS0 = 1;
 11976  1087  151F               	bsf	31,2	;volatile
 11977                           
 11978                           ;Config_ADC.c: 129:             break;
 11979  1088  28CA               	goto	l3347
 11980  1089                     l199:	
 11981                           ;Config_ADC.c: 130:         default:
 11982                           
 11983                           
 11984                           ;Config_ADC.c: 131:             ADCON0bits.CHS3 = 0;
 11985  1089  1283               	bcf	3,5	;RP0=0, select bank0
 11986  108A  1303               	bcf	3,6	;RP1=0, select bank0
 11987  108B  129F               	bcf	31,5	;volatile
 11988                           
 11989                           ;Config_ADC.c: 132:             ADCON0bits.CHS2 = 0;
 11990  108C  121F               	bcf	31,4	;volatile
 11991                           
 11992                           ;Config_ADC.c: 133:             ADCON0bits.CHS1 = 0;
 11993  108D  119F               	bcf	31,3	;volatile
 11994                           
 11995                           ;Config_ADC.c: 134:             ADCON0bits.CHS0 = 0;
 11996  108E  111F               	bcf	31,2	;volatile
 11997                           
 11998                           ;Config_ADC.c: 135:             break;
 11999  108F  28CA               	goto	l3347
 12000  1090                     l3345:
 12001  1090  0872               	movf	ADC_Config@AN_num,w
 12002  1091  00F0               	movwf	??_ADC_Config
 12003  1092  01F1               	clrf	??_ADC_Config+1
 12004                           
 12005                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12006                           ; Switch size 1, requested type "simple"
 12007                           ; Number of cases is 1, Range of values is 0 to 0
 12008                           ; switch strategies available:
 12009                           ; Name         Instructions Cycles
 12010                           ; simple_byte            4     3 (average)
 12011                           ; direct_byte           11     8 (fixed)
 12012                           ; jumptable            260     6 (fixed)
 12013                           ;	Chosen strategy is simple_byte
 12014  1093  0871               	movf	??_ADC_Config+1,w
 12015  1094  3A00               	xorlw	0	; case 0
 12016  1095  1903               	skipnz
 12017  1096  2898               	goto	l3965
 12018  1097  2889               	goto	l199
 12019  1098                     l3965:
 12020                           
 12021                           ; Switch size 1, requested type "simple"
 12022                           ; Number of cases is 16, Range of values is 0 to 15
 12023                           ; switch strategies available:
 12024                           ; Name         Instructions Cycles
 12025                           ; simple_byte           49    25 (average)
 12026                           ; direct_byte           56     8 (fixed)
 12027                           ; jumptable            260     6 (fixed)
 12028                           ;	Chosen strategy is simple_byte
 12029  1098  0870               	movf	??_ADC_Config,w
 12030  1099  3A00               	xorlw	0	; case 0
 12031  109A  1903               	skipnz
 12032  109B  2819               	goto	l182
 12033  109C  3A01               	xorlw	1	; case 1
 12034  109D  1903               	skipnz
 12035  109E  2820               	goto	l184
 12036  109F  3A03               	xorlw	3	; case 2
 12037  10A0  1903               	skipnz
 12038  10A1  2827               	goto	l185
 12039  10A2  3A01               	xorlw	1	; case 3
 12040  10A3  1903               	skipnz
 12041  10A4  282E               	goto	l186
 12042  10A5  3A07               	xorlw	7	; case 4
 12043  10A6  1903               	skipnz
 12044  10A7  2835               	goto	l187
 12045  10A8  3A01               	xorlw	1	; case 5
 12046  10A9  1903               	skipnz
 12047  10AA  283C               	goto	l188
 12048  10AB  3A03               	xorlw	3	; case 6
 12049  10AC  1903               	skipnz
 12050  10AD  2843               	goto	l189
 12051  10AE  3A01               	xorlw	1	; case 7
 12052  10AF  1903               	skipnz
 12053  10B0  284A               	goto	l190
 12054  10B1  3A0F               	xorlw	15	; case 8
 12055  10B2  1903               	skipnz
 12056  10B3  2851               	goto	l191
 12057  10B4  3A01               	xorlw	1	; case 9
 12058  10B5  1903               	skipnz
 12059  10B6  2858               	goto	l192
 12060  10B7  3A03               	xorlw	3	; case 10
 12061  10B8  1903               	skipnz
 12062  10B9  285F               	goto	l193
 12063  10BA  3A01               	xorlw	1	; case 11
 12064  10BB  1903               	skipnz
 12065  10BC  2866               	goto	l194
 12066  10BD  3A07               	xorlw	7	; case 12
 12067  10BE  1903               	skipnz
 12068  10BF  286D               	goto	l195
 12069  10C0  3A01               	xorlw	1	; case 13
 12070  10C1  1903               	skipnz
 12071  10C2  2874               	goto	l196
 12072  10C3  3A03               	xorlw	3	; case 14
 12073  10C4  1903               	skipnz
 12074  10C5  287B               	goto	l197
 12075  10C6  3A01               	xorlw	1	; case 15
 12076  10C7  1903               	skipnz
 12077  10C8  2882               	goto	l198
 12078  10C9  2889               	goto	l199
 12079  10CA                     l3347:
 12080                           
 12081                           ;Config_ADC.c: 137:     ADCON1 = 0b00000000;
 12082  10CA  1683               	bsf	3,5	;RP0=1, select bank1
 12083  10CB  1303               	bcf	3,6	;RP1=0, select bank1
 12084  10CC  019F               	clrf	31	;volatile
 12085  10CD                     l3349:
 12086                           
 12087                           ;Config_ADC.c: 138:     ADCON0bits.ADCS1 = 1;
 12088  10CD  1283               	bcf	3,5	;RP0=0, select bank0
 12089  10CE  1303               	bcf	3,6	;RP1=0, select bank0
 12090  10CF  179F               	bsf	31,7	;volatile
 12091  10D0                     l3351:
 12092                           
 12093                           ;Config_ADC.c: 139:     ADCON0bits.ADCS0 = 0;
 12094  10D0  131F               	bcf	31,6	;volatile
 12095  10D1                     l3353:
 12096                           
 12097                           ;Config_ADC.c: 140:     ADCON0bits.ADON = 1;
 12098  10D1  141F               	bsf	31,0	;volatile
 12099  10D2                     l200:
 12100  10D2  0008               	return
 12101  10D3                     __end_of_ADC_Config:
 12102  007E                     btemp	set	126	;btemp
 12103  007E                     wtemp0	set	126
 12104                           
 12105                           	psect	config
 12106                           
 12107                           ;Config register CONFIG1 @ 0x2007
 12108                           ;	Oscillator Selection bits
 12109                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 12110                           ;	Watchdog Timer Enable bit
 12111                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 12112                           ;	Power-up Timer Enable bit
 12113                           ;	PWRTE = OFF, PWRT disabled
 12114                           ;	RE3/MCLR pin function select bit
 12115                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 12116                           ;	Code Protection bit
 12117                           ;	CP = OFF, Program memory code protection is disabled
 12118                           ;	Data Code Protection bit
 12119                           ;	CPD = OFF, Data memory code protection is disabled
 12120                           ;	Brown Out Reset Selection bits
 12121                           ;	BOREN = ON, BOR enabled
 12122                           ;	Internal External Switchover bit
 12123                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 12124                           ;	Fail-Safe Clock Monitor Enabled bit
 12125                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 12126                           ;	Low Voltage Programming Enable bit
 12127                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 12128                           ;	In-Circuit Debugger Mode bit
 12129                           ;	DEBUG = 0x1, unprogrammed default
 12130  2007                     	org	8199
 12131  2007  23D2               	dw	9170
 12132                           
 12133                           ;Config register CONFIG2 @ 0x2008
 12134                           ;	Brown-out Reset Selection bit
 12135                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 12136                           ;	Flash Program Memory Self Write Enable bits
 12137                           ;	WRT = OFF, Write protection off
 12138  2008                     	org	8200
 12139  2008  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    144
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     39      71
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_7(CODE[6]), STR_6(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> data2(BANK1[8]), data1(BANK1[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 8
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), data2(BANK1[8]), data1(BANK1[8]), 


Critical Paths under _main in COMMON

    _titulos_LCD->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _setup->_initOsc
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flsub->___xxtofl
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _ADC_channel2->___xxtofl
    _ADC_channel1->___xxtofl
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_float_to_string
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _ADC_channel2->___fldiv
    _ADC_channel1->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _float_to_string->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   48497
                                             37 BANK1      2     2      0
                       _ADC_channel1
                       _ADC_channel2
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _float_to_string
                              _setup
                        _titulos_LCD
 ---------------------------------------------------------------------------------
 (1) _titulos_LCD                                          1     1      0    1376
                                             10 COMMON     1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     666
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     710
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _float_to_string                                      1     1      0   32269
                                             78 BANK0      1     1      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   32269
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_channel2                                         4     4      0    6694
                                             56 BANK0      4     4      0
                         _ADC_Config
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _ADC_channel1                                         4     4      0    6694
                                             56 BANK0      4     4      0
                         _ADC_Config
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Config                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_channel1
     _ADC_Config
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _ADC_channel2
     _ADC_Config
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _float_to_string
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
   _setup
     _initOsc
   _titulos_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      47       7       88.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A5      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 11 14:19:23 2021

             ___fldiv@aexp 0057               ___fldiv@bexp 0056                          pc 0002  
             ___fldiv@sign 004F                         l73 1D57                         l91 1978  
                       l85 1EA3                         l79 1E30                         l88 1A39  
                       l97 1C42                         l98 1C9A                         l99 1C48  
             ___awdiv@sign 0021                         fsr 0004        ___wmul@multiplicand 0072  
      __size_of_ADC_Config 00BC        __Umul8_16@word_mpld 0076                        l100 1C4E  
                      l101 1C54                        l102 1C5A                        l103 1C60  
                      l200 10D2                        l120 1B44                        l104 1C66  
                      l105 1C6C                        l106 1C72                        l123 0805  
                      l107 1C9B                        l126 195D                        l302 1577  
                      l135 19C0                        l144 1AB5                        l138 1016  
                      l331 013A                        l309 0C9E                        l190 104A  
                      l182 1019                        l191 1051                        l192 1058  
                      l184 1020                        l432 1DBD                        l193 105F  
                      l185 1027                        l194 1066                        l186 102E  
                      l362 057F                        l195 106D                        l187 1035  
                      l196 1074                        l188 103C                        l197 107B  
                      l189 1043                        l613 118F                        l198 1082  
                      l606 086C                        l614 1101                        l702 1AF9  
                      l199 1089                        l624 1182                        l712 1A73  
                      l392 07EF                        l801 1350                        l609 0881  
                      l617 1152                        l377 072A                        l369 05C3  
                      l570 0902                        l562 1C3F                        l803 1360  
                      l723 15DB                        l652 1BE6                        l396 19CD  
                      l549 0074                        l582 1B61                        l590 1F2C  
                      l398 19E5                        l566 093F                        l831 0FF3  
                      l583 1B7D                        l591 1F45                        l727 1682  
                      l567 08A4                        l840 1A0C                        l584 1B92  
                      l744 174D                        l736 17FF                        l825 0F6B  
                      l729 1659                        l577 0932                        l754 1793  
                      l819 0FFF                        l587 1EC0                        l595 1931  
                      l748 1771                        l781 136C                        l765 17F3  
                      l757 17D1                        l838 19FA                        l766 17FF  
                      l863 1F68                        l599 0881                        l865 1FFF  
                      l769 199C                        l795 12DE                        l779 11EC  
                      l883 1943                        l876 1FC9                        l877 1FD5  
                      l869 1FAD                        _VAL 00D5                        fsr0 0004  
                      indf 0000               ___awmod@sign 0076               ___flmul@aexp 0036  
             ___flmul@bexp 0037                _titulos_LCD 1CF8               ___flmul@sign 0031  
             ___flmul@temp 003C               ___flmul@prod 0038               ___fltol@exp1 005B  
                     l3011 0BE3                       l3003 0AF4                       l3101 08BE  
                     l3021 1933                       l3013 0BEA                       l3005 0AFB  
                     l3111 08F2                       l3103 08C0                       l3023 1934  
                     l3201 1F42                       l3113 08F3                       l3105 08C9  
                     l3033 10D3                       l3025 193A                       l3017 0C72  
                     l3203 1F44                       l3211 1931                       l3131 0927  
                     l3123 090E                       l3115 08FC                       l3107 08D2  
                     l3051 1119                       l3035 10E6                       l3027 1940  
                     l3301 1FB4                       l3221 081C                       l3141 19C7  
                     l3133 0937                       l3117 0906                       l3125 0920  
                     l3109 08E4                       l3061 1144                       l3053 1122  
                     l3045 1102                       l3029 1942                       l2501 0039  
                     l3311 1FED                       l3303 1FBF                       l3207 1927  
                     l3231 0840                       l3223 0831                       l3215 0806  
                     l3151 1D58                       l3143 19D4                       l3071 115E  
                     l3063 114C                       l3055 112B                       l3047 1108  
                     l3039 10EF                       l2511 0059                       l2503 003D  
                     l3313 1FF2                       l3305 1FC3                       l3209 192F  
                     l3225 0832                       l3217 0813                       l3161 1D85  
                     l3153 1D68                       l3145 19DB                       l3137 19C1  
                     l3081 1187                       l3065 1156                       l3073 1170  
                     l3057 1139                       l3049 1117                       l2601 1A62  
                     l2513 0060                       l2505 0041                       l3321 199E  
                     l3315 1FF6                       l3307 1FCD                       l2611 157F  
                     l3227 083A                       l3163 1D97                       l3155 1D6B  
                     l3171 1DB5                       l3251 1B93                       l3147 19E1  
                     l3139 19C3                       l3091 0898                       l3059 1143  
                     l2603 1A69                       l2507 0052                       l2515 0066  
                     l2531 1BF3                       l2523 1BE7                       l3411 016C  
                     l3403 013C                       l3331 19BA                       l3323 19A3  
                     l3341 1018                       l3317 1FF7                       l3309 1FD7  
                     l3181 1B8F                       l2701 166D                       l2621 1594  
                     l2613 1585                       l3245 0861                       l3237 0848  
                     l3229 083C                       l3165 1DA5                       l3157 1D78  
                     l3261 1BC1                       l3253 1B9B                       l3085 0882  
                     l2605 1A6F                       l2517 006B                       l2509 0058  
                     l2541 1C0C                       l2533 1BF7                       l2525 1BE8  
                     l3501 04E4                       l3421 01B4                       l3413 017A  
                     l3405 0158                       l3325 19A8                       l3333 1A74  
                     l3351 10D0                       l2471 1A03                       l2463 19E7  
                     l3183 1B91                       l3175 1B45                       l3191 1ED4  
                     l2703 1676                       l2631 15AC                       l2623 159C  
                     l2615 1589                       l3271 1979                       l3247 0871  
                     l3239 085A                       l3167 1DA6                       l3159 1D7C  
                     l3263 1BCF                       l3255 1B9E                       l3087 088F  
                     l3079 1177                       l2519 0070                       l2551 1C2B  
                     l2543 1C10                       l2535 1BFC                       l2527 1BEC  
                     l3511 050D                       l3503 04ED                       l3431 01F5  
                     l3423 01B8                       l3415 017E                       l3407 0164  
                     l3327 19AF                       l3335 1A77                       l3353 10D1  
                     l3345 1090                       l2473 1A08                       l2465 19E9  
                     l3281 1F50                       l3177 1B59                       l3193 1EDC  
                     l2801 17FE                       l2721 16BC                       l2713 1694  
                     l2705 167A                       l2641 15BE                       l2633 15B2  
                     l2625 159D                       l2617 158A                       l2609 1578  
                     l3273 197D                       l3249 0876                       l3169 1DAF  
                     l3265 1BD8                       l3257 1BAB                       l3097 08A5  
                     l2561 1AB6                       l2481 000F                       l2545 1C14  
                     l2537 1C02                       l2553 1C31                       l2529 1BF1  
                     l3601 07B9                       l3521 0587                       l3513 0514  
                     l3441 027C                       l3433 0208                       l3425 01D1  
                     l3417 0197                       l3409 0168                       l3361 007D  
                     l3329 19B5                       l3337 1A93                       l3347 10CA  
                     l2467 19F0                       l2811 0CB1                       l2803 0C9F  
                     l3291 1F7E                       l3283 1F60                       l3179 1B75  
                     l3195 1EE0                       l3187 1EA4                       l2723 16BE  
                     l2715 16AB                       l2707 1686                       l2731 16D1  
                     l2643 15C3                       l2651 15D3                       l2635 15B3  
                     l2619 158F                       l2627 159F                       l3259 1BAF  
                     l3267 1BDE                       l3099 08AD                       l2571 1ACC  
                     l2563 1AB8                       l2491 0023                       l2483 0013  
                     l2555 1C36                       l2547 1C1E                       l2539 1C05  
                     l3603 07C5                       l3531 05B6                       l3523 0590  
                     l3515 0519                       l3507 04F2                       l3451 02D0  
                     l3443 0295                       l3435 020C                       l3427 01DC  
                     l3419 01B0                       l3611 07EB                       l3371 00A3  
                     l3363 0083                       l3339 1A99                       l3349 10CD  
                     l3701 1262                       l2469 19F4                       l2901 0F4F  
                     l2821 0CCD                       l2813 0CB6                       l2805 0CA6  
                     l3293 1F8B                       l3285 1F70                       l3277 1F47  
                     l2477 0801                       l3197 1F04                       l3189 1EB8  
                     l2733 16E7                       l2741 173F                       l2725 16C2  
                     l2717 16AF                       l2709 168B                       l2661 15F1  
                     l2653 15E1                       l2645 15C8                       l2637 15B9  
                     l2629 15A7                       l2581 1AEF                       l2573 1AD0  
                     l2565 1ABE                       l2493 0027                       l2485 0018  
                     l2557 1C3B                       l2549 1C24                       l3605 07D1  
                     l3541 05DC                       l3533 05BD                       l3525 0594  
                     l3517 0554                       l3509 04FF                       l3461 0377  
                     l3453 0317                       l3445 029E                       l3437 0212  
                     l3429 01E2                       l3373 00A7                       l3381 00E3  
                     l3365 008A                       l3621 1C41                       l3711 128D  
                     l3703 1263                       l3631 1190                       l2911 0F70  
                     l2903 0F50                       l2831 0CE2                       l2823 0CD2  
                     l2815 0CBB                       l2807 0CAC                       l3295 1F92  
                     l3279 1F4C                       l3199 1F08                       l2751 176C  
                     l2743 1755                       l2735 1725                       l2727 16C3  
                     l2719 16B3                       l2671 1605                       l2663 15F5  
                     l2655 15E5                       l2647 15D0                       l2639 15BD  
                     l2575 1AE1                       l2567 1AC1                       l2583 1AF5  
                     l2591 1A43                       l2495 0029                       l2487 001A  
                     l2479 000C                       l3551 06BB                       l3543 05FA  
                     l3535 05CC                       l3527 059A                       l3519 0573  
                     l3463 0392                       l3455 0326                       l3447 02B9  
                     l3439 0231                       l3391 010E                       l3383 00F1  
                     l3375 00BC                       l3367 008F                       l3359 0078  
                     l3721 12AA                       l3705 126C                       l3713 1291  
                     l3641 11A7                       l3633 1197                       l2913 0F75  
                     l2921 0FA6                       l2905 0F54                       l2841 0CFE  
                     l2833 0CE7                       l2825 0CD8                       l2817 0CC3  
                     l2809 0CB0                       l3297 1F96                       l3289 1F79  
                     l3801 1B00                       l2761 177F                       l2753 1770  
                     l2745 175A                       l2737 172B                       l2729 16CC  
                     l2681 1619                       l2673 1609                       l2665 15F9  
                     l2657 15E9                       l2649 15D1                       l2577 1AE7  
                     l2569 1AC8                       l2593 1A4A                       l2497 002F  
                     l2489 001E                       l3561 070F                       l3545 0655  
                     l3553 06F6                       l3537 05D1                       l3529 05A7  
                     l3481 046D                       l3473 03E0                       l3465 039B  
                     l3457 0341                       l3449 02C1                       l3393 0121  
                     l3385 00F2                       l3377 00CF                       l3369 0093  
                     l3609 07D9                       l3625 1C78                       l3731 12C2  
                     l3723 12AE                       l3715 1297                       l3707 127E  
                     l3651 11BF                       l3643 11AC                       l3635 119D  
                     l2931 0FD9                       l2923 0FB3                       l2915 0F83  
                     l2907 0F68                       l2851 0D29                       l2843 0D03  
                     l2835 0CEF                       l2827 0CDC                       l2819 0CC5  
                     l3299 1FA4                       l3803 1B09                       l2771 1790  
                     l2755 1775                       l2763 1781                       l2739 1730  
                     l2691 163D                       l2683 161D                       l2675 160D  
                     l2667 15FD                       l2659 15ED                       l2579 1AE8  
                     l2595 1A4E                       l2587 1A3A                       l2499 0032  
                     l3571 073C                       l3555 06FE                       l3547 0690  
                     l3539 05D8                       l3491 04A6                       l3467 03A3  
                     l3459 0368                       l3475 03E9                       l3563 0716  
                     l3395 0125                       l3387 00F6                       l3379 00D3  
                     l3811 1D02                       l3741 12E3                       l3733 12C3  
                     l3725 12AF                       l3717 129F                       l3709 127F  
                     l3661 11D4                       l3653 11C4                       l3645 11B4  
                     l3637 11A1                       l2933 0FE7                       l2925 0FBE  
                     l2917 0F87                       l2861 0DC6                       l2853 0D46  
                     l2837 0CF1                       l2829 0CDD                       l3805 1B18  
                     l2781 17AF                       l2757 1778                       l2749 1763  
                     l2765 1785                       l2693 165D                       l2685 1621  
                     l2677 1611                       l2669 1601                       l2597 1A52  
                     l2589 1A40                       l3581 076E                       l3573 074B  
                     l3565 071C                       l3557 0705                       l3549 06AF  
                     l3493 04B0                       l3477 041E                       l3469 03C1  
                     l3389 00F9                       l3397 0136                       l3821 1D44  
                     l3813 1D0B                       l3743 12E8                       l3751 1319  
                     l3735 12C7                       l3727 12B8                       l3719 12A1  
                     l3671 11F4                       l3663 11D9                       l3655 11CA  
                     l3647 11B5                       l3639 11A2                       l2935 0FEB  
                     l2927 0FCD                       l2919 0FA0                       l2871 0E29  
                     l2863 0DCF                       l2855 0D62                       l2847 0D0C  
                     l2839 0CF9                       l3831 1E2B                       l3823 1DBE  
                     l2951 195A                       l2943 1945                       l3807 1B1E  
                     l2791 17E8                       l2783 17CD                       l2775 1798  
                     l2767 1786                       l2759 177A                       l2695 1666  
                     l2679 1615                       l2687 1625                       l2599 1A5C  
                     l3591 0798                       l3583 0772                       l3575 0754  
                     l3567 0724                       l3559 0709                       l3495 04CB  
                     l3487 046F                       l3479 046B                       l3399 0138  
                     l3815 1D1E                       l3761 134F                       l3753 1326  
                     l3745 12F6                       l3737 12DB                       l3729 12BE  
                     l3681 1212                       l3673 1200                       l3665 11E1  
                     l3657 11CE                       l3649 11B7                       l2937 0FEC  
                     l2929 0FD7                       l2881 0EC9                       l2873 0E42  
                     l2865 0DDF                       l2857 0D8E                       l2849 0D1C  
                     l3825 1DC4                       l3841 1E9E                       l3833 1E31  
                     l2945 1948                       l2793 17E9                       l2785 17D6  
                     l2777 179D                       l2769 178A                       l2697 1668  
                     l2689 1626                       l3593 07A4                       l3585 0780  
                     l3577 075C                       l3569 0735                       l3497 04D1  
                     l2961 1013                       l2953 1002                       l3817 1D28  
                     l3809 1CF8                       l3763 1356                       l3755 1334  
                     l3747 12FA                       l3691 123D                       l3675 1204  
                     l3667 11E2                       l3659 11CF                       l2939 0FF7  
                     l2891 0F37                       l2883 0EEF                       l2875 0E5F  
                     l2867 0DFC                       l2859 0DAA                       l3827 1DCE  
                     l3835 1E37                       l2947 194E                       l2795 17ED  
                     l2787 17DB                       l2779 17AB                       l2699 166C  
                     l2971 1483                       l2963 1370                       l3595 07A8  
                     l3587 0789                       l3579 0768                       l3499 04DD  
                     l3843 1A0D                       l2955 1005                       l3819 1D3B  
                     l3851 1CAB                       l3765 135A                       l3757 1343  
                     l3749 1313                       l3693 1245                       l3685 121B  
                     l3669 11E4                       l2893 0F3B                       l2885 0F17  
                     l2877 0E8C                       l2869 0E0C                       l3829 1DD2  
                     l3837 1E41                       l2949 1951                       l2797 17EF  
                     l2789 17E3                       l2973 1489                       l2965 1376  
                     l2981 0943                       l3597 07AE                       l3589 078D  
                     l3781 196D                       l3773 195E                       l2957 100B  
                     l3861 1CCE                       l3853 1CB0                       l3845 1C9C  
                     l3767 135C                       l3759 1347                       l3695 1247  
                     l3687 122D                       l3679 120D                       l2895 0F3C  
                     l2887 0F20                       l2879 0E9C                       l3839 1E45  
                     l2799 17FA                       l2983 0947                       l3599 07B5  
                     l3791 1974                       l3783 196E                       l3775 1964  
                     l2959 100E                       l3863 1CD6                       l3855 1CBA  
                     l3847 1CA1                       l3697 124C                       l3689 1235  
                     l2897 0F45                       l2889 0F2E                       l2977 1534  
                     l2993 0A38                       l2985 0949                       l3961 1C80  
                     l3793 1975                       l3785 196F                       l3777 1968  
                     l3865 1CDF                       l3857 1CBF                       l3849 1CA6  
                     l3699 125E                       l2899 0F4B                       l2995 0A3F  
                     l2987 0950                       l3963 0150                       l3795 1976  
                     l3787 1970                       l3779 1969                       l3867 1CEB  
                     l3859 1CC9                       l3965 1098                       l3797 1977  
                     l3789 1971                       l3799 1AFA                       l2999 0AC7  
                     STR_1 18AD                       STR_2 18B1                       STR_3 18B5  
                     STR_4 18B9                       STR_5 18B9                       STR_6 18A0  
                     STR_7 18A7                       u3100 1A08                       u3101 1A07  
                     u3110 0013                       u3111 0012                       u3200 006B  
                     u3120 001E                       u4001 0DB8                       u3201 006A  
                     u3121 001D                       u4002 0DBF                       u3130 002F  
                     u3210 1BEC                       u4003 0DC6                       u3131 002E  
                     u3211 1BEB                       u4100 0EFD                       u3300 1ABE  
                     u3220 1BF7                       u4021 0DEE                       u3301 1ABD  
                     u3221 1BF6                       u4022 0DF5                       u3150 0041  
                     u3230 1C02                       u4111 0F09                       u4031 0E1B  
                     u4023 0DFC                       u4015 0DC8                       u3151 0040  
                     u3231 1C01                       u3080 19F4                       u4200 0F75  
                     u4112 0F10                       u4032 0E22                       u5000 192F  
                     u3320 1AD0                       u3400 1A5C                       u3081 19F3  
                     u4201 0F74                       u4113 0F17                       u4105 0EF8  
                     u4033 0E29                       u5001 192E                       u3321 1ACF  
                     u3401 1A5B                       u3145 0033                       u4210 0F87  
                     u5010 0813                       u3170 0052                       u3250 1C14  
                     u4211 0F86                       u4051 0E51                       u5011 0812  
                     u3315 1AC2                       u3171 0051                       u3251 1C13  
                     u4220 0F96                       u4140 0F3B                       u4052 0E58  
                     u3500 15E1                       u5100 0876                       u5020 082A  
                     u3340 1AE1                       u3420 1A6F                       u4300 1489  
                     u3260 1C1E                       u4141 0F3A                       u4125 0F19  
                     u4061 0E7E                       u4053 0E5F                       u4045 0E2B  
                     u3501 15E0                       u5101 0875                       u3341 1AE0  
                     u3421 1A6E                       u3405 1A58                       u4301 1488  
                     u3165 0042                       u3261 1C1D                       u3245 1C06  
                     u4230 0FB3                       u4062 0E85                       u3510 15E5  
                     u3430 1589                       u5030 0840                       u5110 1B9B  
                     u3190 0066                       u3095 19FB                       u4231 0FB2  
                     u4135 0F30                       u4071 0EAB                       u4063 0E8C  
                     u3511 15E4                       u3431 1588                       u5031 083F  
                     u5111 1B9A                       u3335 1AD1                       u3415 1A63  
                     u3191 0065                       u3175 004E                       u6000 12AE  
                     u4240 0FCD                       u4160 0F4F                       u4080 0ED5  
                     u4072 0EB2                       u3600 168B                       u3520 163D  
                     u3440 158F                       u5040 0847                       u3360 1AF5  
                     u3280 1C31                       u6001 12AD                       u4241 0FCC  
                     u4225 0F91                       u4161 0F4E                       u4073 0EB9  
                     u3601 168A                       u3521 163C                       u3441 158E  
                     u5041 0846                       u5025 0825                       u3361 1AF4  
                     u3345 1ADD                       u3185 005A                       u3281 1C30  
                     u3265 1C1A                       u4250 0FEB                       u4170 0F54  
                     u5210 1F91                       u3530 1648                       u3450 1594  
                     u5130 1BAF                       u3370 1A40                       u3290 1C36  
                     u4251 0FEA                       u4235 0FAF                       u4171 0F53  
                     u4155 0F3E                       u4091 0EE1                       u5211 1F90  
                     u3611 169D                       u3531 1646                       u3451 1593  
                     u5131 1BAE                       u3355 1AE9                       u3371 1A3F  
                     u4315 14A6                       u3291 1C35                       u3275 1C25  
                     u6100 1343                       u6020 12C2                       u4180 0F68  
                     u4092 0EE8                       u5300 1FF6                       u3700 1755  
                     u3620 16AF                       u3612 16A4                       u3540 1649  
                     u3460 15B2                       u5060 0859                       u5140 1BC1  
                     u4260 1376                       u4340 0947                       u6101 1342  
                     u6021 12C1                       u4245 0FC9                       u4181 0F67  
                     u4093 0EEF                       u4085 0ED0                       u5301 1FF5  
                     u5205 1F83                       u3701 1754                       u3621 16AE  
                     u3613 16AB                       u3525 1639                       u3461 15B1  
                     u5061 0858                       u5141 1BC0                       u5125 1BA0  
                     u4325 14F3                       u4261 1375                       u4405 0A52  
                     u4341 0946                       u6110 135A                       u6030 12C7  
                     u4190 0F6F                       u5230 1FB3                       u3710 175A  
                     u3630 16B3                       u3550 165D                       u3470 15BD  
                     u5070 0860                       u3390 1A52                       u4510 193A  
                     u4430 0AFB                       u4350 0950                       u5310 19A3  
                     u6111 1359                       u6031 12C6                       u6015 12B1  
                     u4191 0F6E                       u5231 1FB2                       u3711 1759  
                     u3631 16B2                       u3551 165C                       u3471 15BC  
                     u5071 085F                       u5055 0849                       u3391 1A51  
                     u4335 153F                       u4511 1939                       u4431 0AFA  
                     u4415 0A8E                       u4351 094F                       u5311 19A2  
                     u6040 12DB                       u6120 1E30                       u3800 179D  
                     u3640 16C2                       u3560 166C                       u3480 15C3  
                     u5160 1BDE                       u4600 115D                       u4520 1940  
                     u5400 0135                       u5320 19B5                       u6105 133F  
                     u6041 12DA                       u5225 1FA5                       u6121 1E2F  
                     u3801 179C                       u3641 16C1                       u3561 166B  
                     u3481 15C2                       u5161 1BDD                       u5145 1BBD  
                     u4601 115C                       u3385 1A44                       u4521 193F  
                     u4505 0C75                       u4425 0ACA                       u5401 0134  
                     u5321 19B4                       u6050 12E2                       u5250 1FC3  
                     u5170 1F4C                       u6130 1EA3                       u3810 17AF  
                     u3730 1770                       u3490 15C8                       u5090 0871  
                     u4530 10E6                       u5410 0164                       u5330 1A81  
                     u6051 12E1                       u5251 1FC2                       u5171 1F4B  
                     u6131 1EA2                       u3811 17AE                       u3731 176F  
                     u3491 15C7                       u5091 0870                       u5155 1BD0  
                     u4531 10E5                       u4275 1393                       u5411 0163  
                     u6060 12E8                       u3900 0CB6                       u5260 1FC9  
                     u5180 1F50                       u3820 17BE                       u3740 1775  
                     u3660 16E7                       u3580 1682                       u4620 116F  
                     u4540 1100                       u5500 0341                       u5420 0168  
                     u5340 1AA3                       u6061 12E7                       u3901 0CB5  
                     u5261 1FC8                       u5245 1FB8                       u5181 1F4F  
                     u3741 1774                       u3725 1765                       u3661 16E6  
                     u3581 1681                       u5085 0863                       u4621 116E  
                     u4541 10FF                       u4285 13ED                       u4445 0B1B  
                     u4365 0970                       u5501 0340                       u5421 0167  
                     u6070 12FA                       u3910 0CBB                       u5270 1FCD  
                     u5190 1F70                       u3830 17CD                       u3750 177F  
                     u3590 1686                       u4710 0902                       u4630 1176  
                     u4470 0BEA                       u4390 0A3F                       u5510 0368  
                     u5430 0197                       u5350 1AB5                       u6071 12F9  
                     u3911 0CBA                       u5271 1FCC                       u5191 1F6F  
                     u6207 1B22                       u3831 17CC                       u3751 177E  
                     u3671 16FE                       u3663 16E3                       u3655 16C5  
                     u3591 1685                       u3575 166F                       u4711 0901  
                     u4631 1175                       u4615 115F                       u4295 1442  
                     u4471 0BE9                       u4455 0B57                       u4391 0A3E  
                     u4375 09AC                       u5511 0367                       u5431 0196  
                     u5351 1AB4                       u6080 1309                       u3920 0CDC  
                     u5280 1FE2                       u3840 17D6                       u3760 1785  
                     u3680 1712                       u3672 16FF                       u4720 0906  
                     u4560 1139                       u5600 050D                       u5520 0377  
                     u5440 01D1                       u5360 0083                       u3921 0CDB  
                     u6217 1955                       u3841 17D5                       u3825 17B9  
                     u3761 1784                       u3681 1713                       u3673 1704  
                     u4721 0905                       u4705 08F5                       u4561 1138  
                     u4465 0BA2                       u4385 09F7                       u5601 050C  
                     u5521 0376                       u5441 01D0                       u5361 0082  
                     u6090 1326                       u3930 0CE2                       u5290 1FF2  
                     u3850 17DB                       u3770 178A                       u3690 1730  
                     u3682 1718                       u3674 1705                       u4730 090D  
                     u4650 1187                       u5530 0392                       u5450 020C  
                     u5370 00A3                       u6091 1325                       u3931 0CE1  
                     u5291 1FF1                       u6227 1E3D                       u3851 17DA  
                     u3771 1789                       u3691 172F                       u3683 1719  
                     u3675 170A                       u4731 090C                       u4651 1186  
                     u4555 1124                       u5531 0391                       u5451 020B  
                     u5371 00A2                       u3940 0CE7                       u4900 1B59  
                     u3860 17E8                       u3780 1790                       u3676 170B  
                     u4820 19E1                       u4660 088F                       u4580 1152  
                     u5700 071C                       u5620 0586                       u5460 0295  
                     u5380 00E3                       u6085 1304                       u3941 0CE6  
                     u5285 1FDD                       u6237 1DCA                       u4901 1B58  
                     u3861 17E7                       u3781 178F                       u4821 19E0  
                     u4805 19CE                       u4661 088E                       u4645 1179  
                     u4581 1151                       u4565 1135                       u4485 0BFD  
                     u5701 071B                       u5621 0585                       u5525 0373  
                     u5461 0294                       u5381 00E2                       u6157 1CB6  
                     u3950 0CFE                       u4910 1B75                       u3870 17ED  
                     u3790 1797                       u4830 1D68                       u4750 091F  
                     u4670 08A3                       u4590 1156                       u5710 0724  
                     u5630 05A7                       u5550 04A5                       u5470 02B9  
                     u5390 00F1                       u6095 1322                       u3951 0CFD  
                     u4911 1B74                       u3871 17EC                       u3791 1796  
                     u4831 1D67                       u4815 19D5                       u4751 091E  
                     u4671 08A2                       u4591 1155                       u4575 1145  
                     u4495 0C39                       u5711 0723                       u5631 05A6  
                     u5615 051C                       u5551 04A4                       u5471 02B8  
                     u5391 00F0                       u6167 1CC5                       u3960 0D03  
                     u4920 1B8F                       u3880 17FE                       u4760 0926  
                     u5800 07C5                       u5720 0735                       u5640 05B6  
                     u5560 04B0                       u5480 02D0                       u3961 0D02  
                     u4921 1B8E                       u3881 17FD                       u4761 0925  
                     u4745 090F                       u5801 07C4                       u5721 0734  
                     u5641 05B5                       u5561 04AF                       u5545 0472  
                     u5481 02CF                       u6177 1010                       u3890 0CB0  
                     u4930 1EB8                       u4850 1D7C                       u4690 08E4  
                     u5810 07D1                       u5730 074B                       u5650 05D1  
                     u5570 04CB                       u5490 0326                       u3971 0D54  
                     u3891 0CAF                       u6187 1B04                       u4931 1EB7  
                     u4851 1D7B                       u4691 08E3                       u5811 07D0  
                     u5731 074A                       u5651 05D0                       u5635 05A3  
                     u5571 04CA                       u5555 04A1                       u5491 0325  
                     u5900 1212                       u3972 0D5B                       u4940 1ED4  
                     u4780 0937                       u5820 07EB                       u5740 075C  
                     u5580 04DD                       u5901 1211                       u3981 0D70  
                     u3973 0D62                       u6197 1B13                       u4925 1B8B  
                     u4941 1ED3                       u4845 1D6D                       u4781 0936  
                     u4685 08CB                       u5821 07EA                       u5741 075B  
                     u5725 0731                       u5645 05B2                       u5581 04DC  
                     u5485 02CC                       u5910 124C                       u5830 11A1  
                     u3982 0D77                       u4950 1EE0                       u4870 1D97  
                     u4790 19C7                       u5750 0768                       u5590 04FF  
                     u5911 124B                       u5831 11A0                       u3991 0D9C  
                     u3983 0D7E                       u4951 1EDF                       u4871 1D96  
                     u4791 19C6                       u4775 0929                       u4695 08E0  
                     u5751 0767                       u5735 0747                       u5591 04FE  
                     u5495 0322                       u5840 11A7                       u3992 0DA3  
                     u5760 0772                       u5680 06FD                       u5841 11A6  
                     u3993 0DAA                       u4961 1EEF                       u4865 1D7E  
                     u5761 0771                       u5681 06FC                       u5665 0658  
                     u5850 11AC                       u4970 1F08                       u4962 1EF0  
                     u4890 1DB5                       u5770 0780                       u5690 0715  
                     u5851 11AB                       u4971 1F07                       u4963 1EF5  
                     u4891 1DB4                       u4875 1D93                       u5771 077F  
                     u5691 0714                       u5675 06BE                       u5595 04FB  
                     u5940 1262                       u5860 11CE                       u4964 1EF6  
                     u5780 0798                       u5941 1261                       u5925 124E  
                     u5861 11CD                       u4981 1F17                       u4965 1EFB  
                     u4885 1DA7                       u5781 0797                       u5870 11D4  
                     u4990 1F42                       u4982 1F18                       u4966 1EFC  
                     u5790 07AE                       u5935 1257                       u5871 11D3  
                     u4991 1F41                       u4983 1F1D                       u5791 07AD  
                     u5775 077C                       u5960 127E                       u5880 11D9  
                     u4984 1F1E                       u5961 127D                       u5881 11D8  
                     u4985 1F23                       u5785 0794                       u5970 1297  
                     u5890 11F4                       u4986 1F24                       u5971 1296  
                     u5955 1265                       u5891 11F3                       u4995 1F3E  
                     u5980 129F                       u5981 129E                       u5965 127A  
                     u5995 12A3          ?_Lcd_Write_String 0073                       _main 1C9C  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0075  
          ___fldiv@new_exp 0050               _sprintf$1003 00AA            __end_of_Lcd_Cmd 195E  
            ___fltol@sign1 005A            __end_of___fladd 1800                      ?_main 0070  
          __end_of___fldiv 136D            __end_of___awdiv 0075            __end_of___flneg 1932  
          __end_of___awmod 1C40            __end_of___flmul 1000            __end_of___flsub 199D  
          __end_of___fltol 0882                      _ANSEL 0188            __end_of___lldiv 1DBE  
          ___awdiv@divisor 0077            __end_of___llmod 1BE7            __end_of___lwdiv 1AFA  
          __end_of___lwmod 1A74            ___awdiv@counter 0020                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089           ADC_Config@AN_num 0072                      _data1 00DF  
                    _data2 00D7            __end_of_dpowers 18A0            __end_of_initOsc 1C9C  
                    _scale 0940            __end_of_isdigit 1944                      _setup 195E  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 07F0           __end_of_Lcd_Init 1B45      __size_of_ADC_channel1 0073  
    __size_of_ADC_channel2 0073           __end_of_Lcd_Port 0806            __initialization 07F0  
             __end_of_main 1CF8                     ??_main 00C5       __size_of__tdiv_to_l_ 00BD  
                   _ADCON1 009F           ___llmod@dividend 0074                     ?_scale 003E  
                   _ADRESH 001E                     _ADRESL 009E                initOsc@IRCF 0072  
         ___awdiv@dividend 0079                     ?_setup 0070                     _ANSELH 0189  
             ??_ADC_Config 0070               _ADC_channel1 1DBE               _ADC_channel2 1E31  
                ??_Lcd_Cmd 0071                     _S1_val 00CB                     _S2_val 00C7  
  __size_of_Lcd_Write_Char 0016           __end_of___xxtofl 2000           __end_of__powers_ 1844  
                   ___flge 1EA4                     ___fleq 1B45                  ??___fladd 005A  
                   ___wmul 19C1                  ??___fldiv 0046                  ??___awdiv 007B  
                ??___flneg 0074                  ??___awmod 0074                  ??___flmul 002C  
                ??___flsub 007E                  ??___fltol 0055                  ??___lldiv 0078  
                ??___llmod 0078                  ??___lwdiv 007A                  ??___lwmod 0074  
                   _fround 136D           ___awdiv@quotient 0022            ___awmod@divisor 0070  
          ___awmod@counter 0075         __end_of_ADC_Config 10D3            _float_to_string 1A0D  
                ??_initOsc 0070                  ??_isdigit 0070         __size_of__Umul8_16 0027  
                ??_sprintf 00A5            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074  
               ___flge@ff1 0070                 ___flge@ff2 0074               ___xxtofl@arg 007A  
             ___xxtofl@exp 0079               ___xxtofl@val 0070                 ___fleq@ff1 0070  
               ___fleq@ff2 0074    __end_of__initialization 07FC                 ___flneg@f1 0070  
               ___fltol@f1 0051             __pcstackCOMMON 0070              __end_of_scale 0C9F  
            __end_of_setup 1979             _Lcd_Set_Cursor 199D                 __div_to_l_ 0882  
             ?_titulos_LCD 0070                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 0025            __div_to_l_@cntr 0024                    ??_scale 0042  
          __div_to_l_@quot 0020               sprintf@width 00B5                    ??_setup 0073  
               __pbssBANK0 006F                 __pbssBANK1 00C7              __div_to_l_@f1 0070  
            __div_to_l_@f2 0074          __end_of__Umul8_16 1A0D                 __pmaintext 1C9C  
                  ?___flge 0070                    ?___fleq 0070                    ?___wmul 0070  
  __end_of_float_to_string 1A3A                    ?_fround 003E  __size_of_Lcd_Write_String 0042  
   __end_of_Lcd_Set_Cursor 19C1                  ?___xxtofl 0070                    _S3_cont 006F  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 1800  
           _Lcd_Write_Char 1001                    _Lcd_Cmd 1944          __end_of__npowers_ 1878  
               _scale$1002 004C            __size_of___flge 00A2            __size_of___fleq 004E  
                  ___fladd 1578                    ___fldiv 1190                    ___awdiv 000C  
                  ___flneg 1927                    ___awmod 1BE7                    ___flmul 0C9F  
                  ___flsub 1979                    ___fltol 0806                    ___lldiv 1D58  
          __size_of___wmul 0025                    ___llmod 1B93                    ___lwdiv 1AB6  
                  ___lwmod 1A3A            __size_of_fround 020B            ?_Lcd_Set_Cursor 0074  
                  __ptext1 1CF8                    __ptext2 1A74                    __ptext3 1001  
                  __ptext4 199D                    __ptext5 195E                    __ptext6 1C40  
                  __ptext7 1A0D                    __ptext8 0075                    __ptext9 0940  
              ?__div_to_l_ 0070                    _dpowers 1878                    _initOsc 1C40  
                  _isdigit 1932                 ??___xxtofl 0074           ___awmod@dividend 0072  
                  _sprintf 0075                    clrloop0 0005     __end_of_Lcd_Write_Char 1017  
     end_of_initialization 07FC            ___lldiv@divisor 0070            ___lldiv@counter 007D  
                Lcd_Port@a 0070             __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074  
         ?_float_to_string 0070              ??__tdiv_to_l_ 0078                  _PORTEbits 0009  
              ___fladd@grs 0065              ___xxtofl@sign 0078                ___fldiv@grs 0052  
              ___fldiv@rem 004B       __size_of_titulos_LCD 0060            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0073          Lcd_Write_String@i 0078                ___flmul@grs 0032  
      __size_of__div_to_l_ 00BE             __end_of___flge 1F46             __end_of___fleq 1B93  
           __end_of___wmul 19E6           _Lcd_Write_String 1A74             __end_of_fround 1578  
      start_initialization 07F0        __end_of__tdiv_to_l_ 1190          __size_of_Lcd_Init 004B  
        __size_of_Lcd_Port 0006            ___llmod@divisor 0070            ___llmod@counter 0079  
                 ??___flge 0078                   ??___fleq 0078                   ??___wmul 0074  
                __Umul8_16 19E6            Lcd_Write_Char@a 0072                   ??_fround 0042  
            sprintf@tmpval 00B7                  ___fladd@a 0056                  ___fladd@b 0052  
               fround@prec 0051                  ___fldiv@a 003E                  ___fldiv@b 0042  
                ___flmul@a 0028                  ___flmul@b 0024                  ___flsub@a 0066  
                ___flsub@b 006A                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of___xxtofl 00BA                   ?_Lcd_Cmd 0070  
              sprintf@flag 00B3                sprintf@eexp 00BB                sprintf@fval 00BD  
              sprintf@prec 00C2           ___lwdiv@dividend 0078           ??_Lcd_Set_Cursor 0075  
                 ?___fladd 0052                   ?___fldiv 003E                   ?___awdiv 0077  
                 ?___flneg 0070                   ?___awmod 0070                   ?___flmul 0024  
                 ?___flsub 0066                   ?___fltol 0051                   ?___lldiv 0070  
                 ?___llmod 0070                  __npowers_ 1844                 ?__Umul8_16 0070  
                 ?___lwdiv 0076                   ?___lwmod 0070                  __pstrings 1800  
              __tdiv_to_l_ 10D3               ??__div_to_l_ 0078                   ?_initOsc 0070  
                 ?_isdigit 0070           ___lwdiv@quotient 007B                   ?_sprintf 00A0  
           __size_of_scale 035F             __size_of_setup 001B              ?_ADC_channel1 0070  
            ?_ADC_channel2 0070             ___wmul@product 0074                  clear_ram0 0004  
                 Lcd_Cmd@a 0073         __end_of__div_to_l_ 0940                   _VAL_SWAP 00D3  
               _ADCON0bits 001F                __stringbase 180F          ___wmul@multiplier 0070  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 1AFA                   _Lcd_Port 0800  
           ??_ADC_channel1 0058             ??_ADC_channel2 0058                 _ADC_Config 1017  
 __end_of_Lcd_Write_String 1AB6           __size_of_Lcd_Cmd 001A                ??__Umul8_16 0072  
         __size_of___fladd 0288           __size_of___fldiv 01DD           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 0059           __size_of___flmul 0361  
         __size_of___flsub 0024           __size_of___fltol 007C           __size_of___lldiv 0066  
         __size_of___llmod 0054           __size_of___lwdiv 0044           __size_of___lwmod 003A  
              _fround$1000 004D                _fround$1001 0049         __end_of__stringtab 1810  
              _isdigit$811 0070                 sprintf@val 00AF                   ___xxtofl 1F46  
            ??_titulos_LCD 007A           __size_of_initOsc 005C   __size_of_float_to_string 002D  
         __size_of_isdigit 0012            ___lwdiv@divisor 0076            ___lwdiv@counter 007D  
                 __ptext10 1BE7                   __ptext11 000C                   __ptext20 1D58  
                 __ptext12 1932                   __ptext21 0806                   __ptext13 136D  
                 __ptext30 1E31                   __ptext22 1979                   __ptext14 1A3A  
                 __ptext31 1DBE                   __ptext23 1578                   __ptext15 1AB6  
                 __ptext32 1F46                   __ptext24 1927                   __ptext16 10D3  
                 __ptext33 0C9F                   __ptext25 1EA4                   __ptext17 0882  
                 __ptext34 19E6                   __ptext26 1B45                   __ptext18 19C1  
                 __ptext35 1190                   __ptext27 1AFA                   __ptext19 1B93  
                 __ptext36 1017                   __ptext28 1944                   __ptext29 0800  
                 __powers_ 1810           __size_of_sprintf 077B              __size_of_main 005C  
              _VAL_NIBBLE1 00D1                _VAL_NIBBLE2 00CF                   isdigit@c 0071  
                 scale@scl 0050                  sprintf@ap 00AE           __tdiv_to_l_@exp1 0025  
         __tdiv_to_l_@cntr 0024                  sprintf@sp 00C1                ?_ADC_Config 0070  
      __end_of_titulos_LCD 1D58           __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072  
         ___lldiv@dividend 0074                  stringcode 180A                 _OSCCONbits 008F  
     __end_of_ADC_channel1 1E31       __end_of_ADC_channel2 1EA4         Lcd_Set_Cursor@temp 0077  
             ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070                   sprintf@c 00C4  
                 sprintf@f 00A0           ___lldiv@quotient 0079            ___lwmod@divisor 0070  
          ___lwmod@counter 0075                   stringdir 180A                   stringtab 1800  
            ___fladd@signs 0062          ??_float_to_string 006E               ___fladd@aexp 0063  
             ___fladd@bexp 0064       __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
