

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 11:23:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008F                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  0105                     	;# 
   134  0107                     	;# 
   135  0108                     	;# 
   136  0109                     	;# 
   137  010C                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0187                     	;# 
   144  0188                     	;# 
   145  0189                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  0105                     	;# 
   290  0107                     	;# 
   291  0108                     	;# 
   292  0109                     	;# 
   293  010C                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  0185                     	;# 
   299  0187                     	;# 
   300  0188                     	;# 
   301  0189                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  0105                     	;# 
   368  0107                     	;# 
   369  0108                     	;# 
   370  0109                     	;# 
   371  010C                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  0185                     	;# 
   377  0187                     	;# 
   378  0188                     	;# 
   379  0189                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  000E                     	;# 
   397  000E                     	;# 
   398  000F                     	;# 
   399  0010                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001B                     	;# 
   413  001C                     	;# 
   414  001D                     	;# 
   415  001E                     	;# 
   416  001F                     	;# 
   417  0081                     	;# 
   418  0085                     	;# 
   419  0086                     	;# 
   420  0087                     	;# 
   421  0088                     	;# 
   422  0089                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  008F                     	;# 
   427  0090                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  0105                     	;# 
   446  0107                     	;# 
   447  0108                     	;# 
   448  0109                     	;# 
   449  010C                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  010F                     	;# 
   454  0185                     	;# 
   455  0187                     	;# 
   456  0188                     	;# 
   457  0189                     	;# 
   458  018C                     	;# 
   459  018D                     	;# 
   460  0000                     	;# 
   461  0001                     	;# 
   462  0002                     	;# 
   463  0003                     	;# 
   464  0004                     	;# 
   465  0005                     	;# 
   466  0006                     	;# 
   467  0007                     	;# 
   468  0008                     	;# 
   469  0009                     	;# 
   470  000A                     	;# 
   471  000B                     	;# 
   472  000C                     	;# 
   473  000D                     	;# 
   474  000E                     	;# 
   475  000E                     	;# 
   476  000F                     	;# 
   477  0010                     	;# 
   478  0011                     	;# 
   479  0012                     	;# 
   480  0013                     	;# 
   481  0014                     	;# 
   482  0015                     	;# 
   483  0015                     	;# 
   484  0016                     	;# 
   485  0017                     	;# 
   486  0018                     	;# 
   487  0019                     	;# 
   488  001A                     	;# 
   489  001B                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  001D                     	;# 
   493  001E                     	;# 
   494  001F                     	;# 
   495  0081                     	;# 
   496  0085                     	;# 
   497  0086                     	;# 
   498  0087                     	;# 
   499  0088                     	;# 
   500  0089                     	;# 
   501  008C                     	;# 
   502  008D                     	;# 
   503  008E                     	;# 
   504  008F                     	;# 
   505  0090                     	;# 
   506  0091                     	;# 
   507  0092                     	;# 
   508  0093                     	;# 
   509  0093                     	;# 
   510  0093                     	;# 
   511  0094                     	;# 
   512  0095                     	;# 
   513  0096                     	;# 
   514  0097                     	;# 
   515  0098                     	;# 
   516  0099                     	;# 
   517  009A                     	;# 
   518  009B                     	;# 
   519  009C                     	;# 
   520  009D                     	;# 
   521  009E                     	;# 
   522  009F                     	;# 
   523  0105                     	;# 
   524  0107                     	;# 
   525  0108                     	;# 
   526  0109                     	;# 
   527  010C                     	;# 
   528  010C                     	;# 
   529  010D                     	;# 
   530  010E                     	;# 
   531  010F                     	;# 
   532  0185                     	;# 
   533  0187                     	;# 
   534  0188                     	;# 
   535  0189                     	;# 
   536  018C                     	;# 
   537  018D                     	;# 
   538                           
   539                           	psect	strings
   540  0003                     __pstrings:
   541  0003                     stringtab:
   542  0003                     __stringtab:
   543  0003                     stringcode:	
   544                           ;	String table - string pointers are 1 byte each
   545                           
   546  0003                     stringdir:
   547  0003  3000               	movlw	high stringdir
   548  0004  008A               	movwf	10
   549  0005  0804               	movf	4,w
   550  0006  0A84               	incf	4,f
   551  0007  0782               	addwf	2,f
   552  0008                     __stringbase:
   553  0008  3400               	retlw	0
   554  0009                     __end_of__stringtab:
   555  0009                     _dpowers:
   556  0009  3401               	retlw	1
   557  000A  3400               	retlw	0
   558  000B  340A               	retlw	10
   559  000C  3400               	retlw	0
   560  000D  3464               	retlw	100
   561  000E  3400               	retlw	0
   562  000F  34E8               	retlw	232
   563  0010  3403               	retlw	3
   564  0011  3410               	retlw	16
   565  0012  3427               	retlw	39
   566  0013                     __end_of_dpowers:
   567  000B                     _INTCONbits	set	11
   568  001A                     _RCREG	set	26
   569  0018                     _RCSTAbits	set	24
   570  0009                     _PORTEbits	set	9
   571  0009                     _PORTE	set	9
   572  0008                     _PORTD	set	8
   573  0007                     _PORTC	set	7
   574  0005                     _PORTA	set	5
   575  0019                     _TXREG	set	25
   576  000C                     _PIR1bits	set	12
   577  001E                     _ADRESH	set	30
   578  001F                     _ADCON0bits	set	31
   579  0006                     _PORTB	set	6
   580  008C                     _PIE1bits	set	140
   581  0099                     _SPBRG	set	153
   582  009A                     _SPBRGH	set	154
   583  0098                     _TXSTAbits	set	152
   584  009F                     _ADCON1	set	159
   585  009E                     _ADRESL	set	158
   586  008F                     _OSCCONbits	set	143
   587  0089                     _TRISE	set	137
   588  0088                     _TRISD	set	136
   589  0087                     _TRISCbits	set	135
   590  0086                     _TRISB	set	134
   591  0085                     _TRISA	set	133
   592  0189                     _ANSELH	set	393
   593  0188                     _ANSEL	set	392
   594  0013                     STR_1:
   595  0013  3453               	retlw	83	;'S'
   596  0014  3431               	retlw	49	;'1'
   597  0015  343A               	retlw	58	;':'
   598  0016  3420               	retlw	32	;' '
   599  0017  3420               	retlw	32	;' '
   600  0018  3420               	retlw	32	;' '
   601  0019  3453               	retlw	83	;'S'
   602  001A  3432               	retlw	50	;'2'
   603  001B  343A               	retlw	58	;':'
   604  001C  3420               	retlw	32	;' '
   605  001D  3420               	retlw	32	;' '
   606  001E  3453               	retlw	83	;'S'
   607  001F  3433               	retlw	51	;'3'
   608  0020  343A               	retlw	58	;':'
   609  0021  3400               	retlw	0
   610  0022                     STR_2:
   611  0022  3425               	retlw	37	;'%'
   612  0023  342E               	retlw	46	;'.'
   613  0024  3433               	retlw	51	;'3'
   614  0025  3469               	retlw	105	;'i'
   615  0026  3456               	retlw	86	;'V'
   616  0027  3400               	retlw	0
   617  0022                     
   618                           	psect	cinit
   619  07F3                     start_initialization:	
   620                           ; #config settings
   621                           
   622  07F3                     __initialization:
   623                           
   624                           ; Clear objects allocated to BANK0
   625  07F3  1383               	bcf	3,7	;select IRP bank0
   626  07F4  3020               	movlw	low __pbssBANK0
   627  07F5  0084               	movwf	4
   628  07F6  3040               	movlw	low (__pbssBANK0+32)
   629  07F7  120A  118A  227F  120A  118A  	fcall	clear_ram0
   630  07FC                     end_of_initialization:	
   631                           ;End of C runtime variable initialization code
   632                           
   633  07FC                     __end_of__initialization:
   634  07FC  0183               	clrf	3
   635  07FD  120A  118A  2CAD   	ljmp	_main	;jump to C main() function
   636                           
   637                           	psect	bssBANK0
   638  0020                     __pbssBANK0:
   639  0020                     _VAL_NIBBLE2:
   640  0020                     	ds	2
   641  0022                     _VAL_NIBBLE1:
   642  0022                     	ds	2
   643  0024                     _VAL_SWAP:
   644  0024                     	ds	2
   645  0026                     _VAL:
   646  0026                     	ds	2
   647  0028                     _data_recive:
   648  0028                     	ds	1
   649  0029                     _cont:
   650  0029                     	ds	1
   651  002A                     _cont_usart:
   652  002A                     	ds	1
   653  002B                     _ADC_toggle:
   654  002B                     	ds	1
   655  002C                     _eusart_toggle:
   656  002C                     	ds	1
   657  002D                     _S3_cont:
   658  002D                     	ds	1
   659  002E                     _S2_val:
   660  002E                     	ds	1
   661  002F                     _S1_val:
   662  002F                     	ds	1
   663  0030                     _data2:
   664  0030                     	ds	8
   665  0038                     _data1:
   666  0038                     	ds	8
   667                           
   668                           	psect	clrtext
   669  027F                     clear_ram0:	
   670                           ;	Called with FSR containing the base address, and
   671                           ;	W with the last address+1
   672                           
   673  027F  0064               	clrwdt	;clear the watchdog before getting into this loop
   674  0280                     clrloop0:
   675  0280  0180               	clrf	0	;clear RAM location pointed to by FSR
   676  0281  0A84               	incf	4,f	;increment pointer
   677  0282  0604               	xorwf	4,w	;XOR with final address
   678  0283  1903               	btfsc	3,2	;have we reached the end yet?
   679  0284  3400               	retlw	0	;all done for this memory range, return
   680  0285  0604               	xorwf	4,w	;XOR again to restore value
   681  0286  2A80               	goto	clrloop0	;do the next byte
   682                           
   683                           	psect	cstackCOMMON
   684  0070                     __pcstackCOMMON:
   685  0070                     ?_isdigit:
   686  0070                     ?_setup:	
   687                           ; 1 bit 
   688                           
   689  0070                     ?_USART_Init:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ??_USART_Init:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_USART_Init_BaudRate:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ??_USART_Init_BaudRate:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_Lcd_Init:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_titulos_LCD:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_ADC_channel1:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_ADC_channel2:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_ADC_to_string:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_Show_val_LCD:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_Trasmission:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ??_Trasmission:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_Lcd_Write_String:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_ADC_Config:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ??_ADC_Config:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_Lcd_Write_Char:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_initOsc:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ??_initOsc:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_Lcd_Port:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ??_Lcd_Port:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_Lcd_Cmd:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ??_isdigit:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_main:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?___bmul:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?___lwdiv:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     Lcd_Port@a:	
   765                           ; 2 bytes @ 0x0
   766                           
   767  0070                     ___bmul@multiplicand:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     _isdigit$1000:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ___lwdiv@divisor:	
   774                           ; 1 bytes @ 0x0
   775                           
   776                           
   777                           ; 2 bytes @ 0x0
   778  0070                     	ds	1
   779  0071                     ??_Lcd_Write_Char:
   780  0071                     ??_Lcd_Cmd:	
   781                           ; 1 bytes @ 0x1
   782                           
   783  0071                     ??___bmul:	
   784                           ; 1 bytes @ 0x1
   785                           
   786  0071                     isdigit@c:	
   787                           ; 1 bytes @ 0x1
   788                           
   789                           
   790                           ; 1 bytes @ 0x1
   791  0071                     	ds	1
   792  0072                     initOsc@IRCF:
   793  0072                     Lcd_Write_Char@a:	
   794                           ; 1 bytes @ 0x2
   795                           
   796  0072                     ADC_Config@AN_num:	
   797                           ; 1 bytes @ 0x2
   798                           
   799  0072                     ___bmul@product:	
   800                           ; 1 bytes @ 0x2
   801                           
   802  0072                     ___lwdiv@dividend:	
   803                           ; 1 bytes @ 0x2
   804                           
   805                           
   806                           ; 2 bytes @ 0x2
   807  0072                     	ds	1
   808  0073                     ??_setup:
   809  0073                     ??_ADC_channel1:	
   810                           ; 1 bytes @ 0x3
   811                           
   812  0073                     ??_ADC_channel2:	
   813                           ; 1 bytes @ 0x3
   814                           
   815  0073                     ??_Lcd_Write_String:	
   816                           ; 1 bytes @ 0x3
   817                           
   818  0073                     Lcd_Cmd@a:	
   819                           ; 1 bytes @ 0x3
   820                           
   821  0073                     ___bmul@multiplier:	
   822                           ; 1 bytes @ 0x3
   823                           
   824  0073                     Lcd_Write_String@i:	
   825                           ; 1 bytes @ 0x3
   826                           
   827                           
   828                           ; 2 bytes @ 0x3
   829  0073                     	ds	1
   830  0074                     ??_Lcd_Init:
   831  0074                     ?_Lcd_Set_Cursor:	
   832                           ; 1 bytes @ 0x4
   833                           
   834  0074                     ??___lwdiv:	
   835                           ; 1 bytes @ 0x4
   836                           
   837  0074                     Lcd_Set_Cursor@b:	
   838                           ; 1 bytes @ 0x4
   839                           
   840                           
   841                           ; 1 bytes @ 0x4
   842  0074                     	ds	1
   843  0075                     ??_Lcd_Set_Cursor:
   844  0075                     Lcd_Write_String@a:	
   845                           ; 1 bytes @ 0x5
   846                           
   847  0075                     ___lwdiv@quotient:	
   848                           ; 1 bytes @ 0x5
   849                           
   850                           
   851                           ; 2 bytes @ 0x5
   852  0075                     	ds	1
   853  0076                     Lcd_Set_Cursor@a:
   854                           
   855                           ; 1 bytes @ 0x6
   856  0076                     	ds	1
   857  0077                     Lcd_Set_Cursor@temp:
   858  0077                     ___lwdiv@counter:	
   859                           ; 1 bytes @ 0x7
   860                           
   861                           
   862                           ; 1 bytes @ 0x7
   863  0077                     	ds	1
   864  0078                     ??_titulos_LCD:
   865  0078                     ??_Show_val_LCD:	
   866                           ; 1 bytes @ 0x8
   867                           
   868  0078                     ?___lwmod:	
   869                           ; 1 bytes @ 0x8
   870                           
   871  0078                     ___lwmod@divisor:	
   872                           ; 2 bytes @ 0x8
   873                           
   874                           
   875                           ; 2 bytes @ 0x8
   876  0078                     	ds	2
   877  007A                     ___lwmod@dividend:
   878                           
   879                           ; 2 bytes @ 0xA
   880  007A                     	ds	2
   881  007C                     ??___lwmod:
   882                           
   883                           ; 1 bytes @ 0xC
   884  007C                     	ds	1
   885  007D                     ___lwmod@counter:
   886                           
   887                           ; 1 bytes @ 0xD
   888  007D                     	ds	1
   889                           
   890                           	psect	cstackBANK0
   891  0040                     __pcstackBANK0:
   892  0040                     ?_sprintf:
   893  0040                     sprintf@f:	
   894                           ; 2 bytes @ 0x0
   895                           
   896                           
   897                           ; 1 bytes @ 0x0
   898  0040                     	ds	3
   899  0043                     ??_sprintf:
   900                           
   901                           ; 1 bytes @ 0x3
   902  0043                     	ds	3
   903  0046                     sprintf@ap:
   904                           
   905                           ; 1 bytes @ 0x6
   906  0046                     	ds	1
   907  0047                     sprintf@flag:
   908                           
   909                           ; 1 bytes @ 0x7
   910  0047                     	ds	1
   911  0048                     sprintf@val:
   912                           
   913                           ; 2 bytes @ 0x8
   914  0048                     	ds	2
   915  004A                     sprintf@sp:
   916                           
   917                           ; 1 bytes @ 0xA
   918  004A                     	ds	1
   919  004B                     sprintf@prec:
   920                           
   921                           ; 1 bytes @ 0xB
   922  004B                     	ds	1
   923  004C                     sprintf@c:
   924                           
   925                           ; 1 bytes @ 0xC
   926  004C                     	ds	1
   927  004D                     ??_ADC_to_string:
   928                           
   929                           ; 1 bytes @ 0xD
   930  004D                     	ds	3
   931  0050                     ??_main:
   932                           
   933                           ; 1 bytes @ 0x10
   934  0050                     	ds	2
   935                           
   936                           	psect	maintext
   937  04AD                     __pmaintext:	
   938 ;;
   939 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   940 ;;
   941 ;; *************** function _main *****************
   942 ;; Defined at:
   943 ;;		line 121 in file "pseudocodigo_lab3.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : B00/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   957 ;;      Params:         0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0
   959 ;;      Temps:          0       2       0       0       0
   960 ;;      Totals:         0       2       0       0       0
   961 ;;Total ram usage:        2 bytes
   962 ;; Hardware stack levels required when called:    4
   963 ;; This function calls:
   964 ;;		_ADC_channel1
   965 ;;		_ADC_channel2
   966 ;;		_ADC_to_string
   967 ;;		_Lcd_Init
   968 ;;		_Show_val_LCD
   969 ;;		_Trasmission
   970 ;;		_USART_Init
   971 ;;		_USART_Init_BaudRate
   972 ;;		_setup
   973 ;;		_titulos_LCD
   974 ;; This function is called by:
   975 ;;		Startup code after reset
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           
   980                           ;psect for function _main
   981  04AD                     _main:
   982  04AD                     l1705:	
   983                           ;incstack = 0
   984                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   985                           
   986                           
   987                           ;pseudocodigo_lab3.c: 122:     setup();
   988  04AD  120A  118A  2337  120A  118A  	fcall	_setup
   989  04B2                     l1707:
   990                           
   991                           ;pseudocodigo_lab3.c: 123:     USART_Init();
   992  04B2  120A  118A  2287  120A  118A  	fcall	_USART_Init
   993  04B7                     l1709:
   994                           
   995                           ;pseudocodigo_lab3.c: 124:     USART_Init_BaudRate();
   996  04B7  120A  118A  2279  120A  118A  	fcall	_USART_Init_BaudRate
   997  04BC                     l1711:
   998                           
   999                           ;pseudocodigo_lab3.c: 126:     Lcd_Init();
  1000  04BC  120A  118A  2462  120A  118A  	fcall	_Lcd_Init
  1001  04C1                     l1713:
  1002                           
  1003                           ;pseudocodigo_lab3.c: 127:     titulos_LCD();
  1004  04C1  120A  118A  2297  120A  118A  	fcall	_titulos_LCD
  1005  04C6                     l1715:
  1006                           
  1007                           ;pseudocodigo_lab3.c: 133:         ADC_channel1();
  1008  04C6  120A  118A  22FF  120A  118A  	fcall	_ADC_channel1
  1009  04CB                     l1717:
  1010                           
  1011                           ;pseudocodigo_lab3.c: 134:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1012  04CB  3003               	movlw	3
  1013  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1014  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1015  04CE  00D1               	movwf	??_main+1
  1016  04CF  3097               	movlw	151
  1017  04D0  00D0               	movwf	??_main
  1018  04D1                     u837:
  1019  04D1  0BD0               	decfsz	??_main,f
  1020  04D2  2CD1               	goto	u837
  1021  04D3  0BD1               	decfsz	??_main+1,f
  1022  04D4  2CD1               	goto	u837
  1023  04D5                     l1719:
  1024                           
  1025                           ;pseudocodigo_lab3.c: 135:         ADC_channel2();
  1026  04D5  120A  118A  231B  120A  118A  	fcall	_ADC_channel2
  1027  04DA                     l1721:
  1028                           
  1029                           ;pseudocodigo_lab3.c: 137:         ADC_to_string();
  1030  04DA  120A  118A  23BB  120A  118A  	fcall	_ADC_to_string
  1031  04DF                     l1723:
  1032                           
  1033                           ;pseudocodigo_lab3.c: 138:         Show_val_LCD();
  1034  04DF  120A  118A  2560  120A  118A  	fcall	_Show_val_LCD
  1035  04E4                     l1725:
  1036                           
  1037                           ;pseudocodigo_lab3.c: 139:         Trasmission();
  1038  04E4  120A  118A  2353  120A  118A  	fcall	_Trasmission
  1039  04E9                     l1727:
  1040                           
  1041                           ;pseudocodigo_lab3.c: 141:         PORTB = cont;
  1042  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  1043  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  1044  04EB  0829               	movf	_cont,w
  1045  04EC  0086               	movwf	6	;volatile
  1046  04ED                     l1729:
  1047                           
  1048                           ;pseudocodigo_lab3.c: 142:         if (data_recive == '+'){
  1049  04ED  302B               	movlw	43
  1050  04EE  0628               	xorwf	_data_recive,w
  1051  04EF  1D03               	btfss	3,2
  1052  04F0  2CF2               	goto	u801
  1053  04F1  2CF3               	goto	u800
  1054  04F2                     u801:
  1055  04F2  2CF7               	goto	l92
  1056  04F3                     u800:
  1057  04F3                     l1731:
  1058                           
  1059                           ;pseudocodigo_lab3.c: 143:             cont++;
  1060  04F3  3001               	movlw	1
  1061  04F4  00D0               	movwf	??_main
  1062  04F5  0850               	movf	??_main,w
  1063  04F6  07A9               	addwf	_cont,f
  1064  04F7                     l92:	
  1065                           ;pseudocodigo_lab3.c: 144:         }
  1066                           
  1067                           
  1068                           ;pseudocodigo_lab3.c: 145:         if(data_recive == '-'){
  1069  04F7  302D               	movlw	45
  1070  04F8  0628               	xorwf	_data_recive,w
  1071  04F9  1D03               	btfss	3,2
  1072  04FA  2CFC               	goto	u811
  1073  04FB  2CFD               	goto	u810
  1074  04FC                     u811:
  1075  04FC  2CFF               	goto	l1735
  1076  04FD                     u810:
  1077  04FD                     l1733:
  1078                           
  1079                           ;pseudocodigo_lab3.c: 146:             cont--;
  1080  04FD  3001               	movlw	1
  1081  04FE  02A9               	subwf	_cont,f
  1082  04FF                     l1735:
  1083                           
  1084                           ;pseudocodigo_lab3.c: 148:        data_recive = 0;
  1085  04FF  01A8               	clrf	_data_recive
  1086  0500  2CC6               	goto	l1715
  1087  0501  120A  118A  2800   	ljmp	start
  1088  0504                     __end_of_main:
  1089                           
  1090                           	psect	text1
  1091  0297                     __ptext1:	
  1092 ;; *************** function _titulos_LCD *****************
  1093 ;; Defined at:
  1094 ;;		line 156 in file "pseudocodigo_lab3.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1108 ;;      Params:         0       0       0       0       0
  1109 ;;      Locals:         0       0       0       0       0
  1110 ;;      Temps:          1       0       0       0       0
  1111 ;;      Totals:         1       0       0       0       0
  1112 ;;Total ram usage:        1 bytes
  1113 ;; Hardware stack levels used:    1
  1114 ;; Hardware stack levels required when called:    3
  1115 ;; This function calls:
  1116 ;;		_Lcd_Set_Cursor
  1117 ;;		_Lcd_Write_String
  1118 ;; This function is called by:
  1119 ;;		_main
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           
  1124                           ;psect for function _titulos_LCD
  1125  0297                     _titulos_LCD:
  1126  0297                     l1643:	
  1127                           ;incstack = 0
  1128                           ; Regs used in _titulos_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1129                           
  1130                           
  1131                           ;pseudocodigo_lab3.c: 157:         Lcd_Set_Cursor(1,2);
  1132  0297  3002               	movlw	2
  1133  0298  00F8               	movwf	??_titulos_LCD
  1134  0299  0878               	movf	??_titulos_LCD,w
  1135  029A  00F4               	movwf	Lcd_Set_Cursor@b
  1136  029B  3001               	movlw	1
  1137  029C  120A  118A  2372  120A  118A  	fcall	_Lcd_Set_Cursor
  1138  02A1                     l1645:
  1139                           
  1140                           ;pseudocodigo_lab3.c: 158:         Lcd_Write_String("S1:   S2:  S3:");
  1141  02A1  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1142  02A2  120A  118A  2396  120A  118A  	fcall	_Lcd_Write_String
  1143  02A7                     l99:
  1144  02A7  0008               	return
  1145  02A8                     __end_of_titulos_LCD:
  1146                           
  1147                           	psect	text2
  1148  0396                     __ptext2:	
  1149 ;; *************** function _Lcd_Write_String *****************
  1150 ;; Defined at:
  1151 ;;		line 70 in file "LCD.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  a               1    wreg     PTR unsigned char 
  1154 ;;		 -> STR_1(15), 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  a               1    5[COMMON] PTR unsigned char 
  1157 ;;		 -> STR_1(15), 
  1158 ;;  i               2    3[COMMON] int 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1168 ;;      Params:         0       0       0       0       0
  1169 ;;      Locals:         3       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0
  1171 ;;      Totals:         3       0       0       0       0
  1172 ;;Total ram usage:        3 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    2
  1175 ;; This function calls:
  1176 ;;		_Lcd_Write_Char
  1177 ;; This function is called by:
  1178 ;;		_titulos_LCD
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           
  1183                           ;psect for function _Lcd_Write_String
  1184  0396                     _Lcd_Write_String:
  1185                           
  1186                           ;incstack = 0
  1187                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1188                           ;Lcd_Write_String@a stored from wreg
  1189  0396  00F5               	movwf	Lcd_Write_String@a
  1190  0397                     l1471:
  1191                           
  1192                           ;LCD.c: 71:  int i;;LCD.c: 72:  for(i=0;a[i]!='\0';i++)
  1193  0397  01F3               	clrf	Lcd_Write_String@i
  1194  0398  01F4               	clrf	Lcd_Write_String@i+1
  1195  0399  2BAD               	goto	l1477
  1196  039A                     l1473:
  1197                           
  1198                           ;LCD.c: 73:     Lcd_Write_Char(a[i]);
  1199  039A  0873               	movf	Lcd_Write_String@i,w
  1200  039B  0775               	addwf	Lcd_Write_String@a,w
  1201  039C  0084               	movwf	4
  1202  039D  120A  118A  2003  120A  118A  	fcall	stringdir
  1203  03A2  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1204  03A7                     l1475:
  1205  03A7  3001               	movlw	1
  1206  03A8  07F3               	addwf	Lcd_Write_String@i,f
  1207  03A9  1803               	skipnc
  1208  03AA  0AF4               	incf	Lcd_Write_String@i+1,f
  1209  03AB  3000               	movlw	0
  1210  03AC  07F4               	addwf	Lcd_Write_String@i+1,f
  1211  03AD                     l1477:
  1212  03AD  0873               	movf	Lcd_Write_String@i,w
  1213  03AE  0775               	addwf	Lcd_Write_String@a,w
  1214  03AF  0084               	movwf	4
  1215  03B0  120A  118A  2003  120A  118A  	fcall	stringdir
  1216  03B5  3A00               	xorlw	0
  1217  03B6  1D03               	skipz
  1218  03B7  2BB9               	goto	u611
  1219  03B8  2BBA               	goto	u610
  1220  03B9                     u611:
  1221  03B9  2B9A               	goto	l1473
  1222  03BA                     u610:
  1223  03BA                     l180:
  1224  03BA  0008               	return
  1225  03BB                     __end_of_Lcd_Write_String:
  1226                           
  1227                           	psect	text3
  1228  0337                     __ptext3:	
  1229 ;; *************** function _setup *****************
  1230 ;; Defined at:
  1231 ;;		line 238 in file "pseudocodigo_lab3.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1245 ;;      Params:         0       0       0       0       0
  1246 ;;      Locals:         0       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0
  1248 ;;      Totals:         0       0       0       0       0
  1249 ;;Total ram usage:        0 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    1
  1252 ;; This function calls:
  1253 ;;		_initOsc
  1254 ;; This function is called by:
  1255 ;;		_main
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           
  1260                           ;psect for function _setup
  1261  0337                     _setup:
  1262  0337                     l1597:	
  1263                           ;incstack = 0
  1264                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1265                           
  1266                           
  1267                           ;pseudocodigo_lab3.c: 239:     initOsc(0b00000110);
  1268  0337  3006               	movlw	6
  1269  0338  120A  118A  2504  120A  118A  	fcall	_initOsc
  1270  033D                     l1599:
  1271                           
  1272                           ;pseudocodigo_lab3.c: 240:     ANSEL = 0b00000011;
  1273  033D  3003               	movlw	3
  1274  033E  1683               	bsf	3,5	;RP0=1, select bank3
  1275  033F  1703               	bsf	3,6	;RP1=1, select bank3
  1276  0340  0088               	movwf	8	;volatile
  1277  0341                     l1601:
  1278                           
  1279                           ;pseudocodigo_lab3.c: 241:     ANSELH = 0;
  1280  0341  0189               	clrf	9	;volatile
  1281  0342                     l1603:
  1282                           
  1283                           ;pseudocodigo_lab3.c: 242:     TRISA = 0b00000011;
  1284  0342  3003               	movlw	3
  1285  0343  1683               	bsf	3,5	;RP0=1, select bank1
  1286  0344  1303               	bcf	3,6	;RP1=0, select bank1
  1287  0345  0085               	movwf	5	;volatile
  1288  0346                     l1605:
  1289                           
  1290                           ;pseudocodigo_lab3.c: 243:     TRISB = 0;
  1291  0346  0186               	clrf	6	;volatile
  1292  0347                     l1607:
  1293                           
  1294                           ;pseudocodigo_lab3.c: 244:     TRISCbits.TRISC6 = 0;
  1295  0347  1307               	bcf	7,6	;volatile
  1296  0348                     l1609:
  1297                           
  1298                           ;pseudocodigo_lab3.c: 245:     TRISCbits.TRISC7 = 1;
  1299  0348  1787               	bsf	7,7	;volatile
  1300  0349                     l1611:
  1301                           
  1302                           ;pseudocodigo_lab3.c: 246:     TRISD = 0;
  1303  0349  0188               	clrf	8	;volatile
  1304  034A                     l1613:
  1305                           
  1306                           ;pseudocodigo_lab3.c: 247:     TRISE = 0;
  1307  034A  0189               	clrf	9	;volatile
  1308  034B                     l1615:
  1309                           
  1310                           ;pseudocodigo_lab3.c: 248:     PORTA = 0;
  1311  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1312  034C  1303               	bcf	3,6	;RP1=0, select bank0
  1313  034D  0185               	clrf	5	;volatile
  1314  034E                     l1617:
  1315                           
  1316                           ;pseudocodigo_lab3.c: 249:     PORTB = 0;
  1317  034E  0186               	clrf	6	;volatile
  1318  034F                     l1619:
  1319                           
  1320                           ;pseudocodigo_lab3.c: 250:     PORTC = 0;
  1321  034F  0187               	clrf	7	;volatile
  1322  0350                     l1621:
  1323                           
  1324                           ;pseudocodigo_lab3.c: 251:     PORTD = 0;
  1325  0350  0188               	clrf	8	;volatile
  1326  0351                     l1623:
  1327                           
  1328                           ;pseudocodigo_lab3.c: 252:     PORTE = 0;
  1329  0351  0189               	clrf	9	;volatile
  1330  0352                     l127:
  1331  0352  0008               	return
  1332  0353                     __end_of_setup:
  1333                           
  1334                           	psect	text4
  1335  0504                     __ptext4:	
  1336 ;; *************** function _initOsc *****************
  1337 ;; Defined at:
  1338 ;;		line 3 in file "Oscilador.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  IRCF            1    wreg     unsigned char 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;  IRCF            1    2[COMMON] unsigned char 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         0       0       0       0       0
  1353 ;;      Locals:         1       0       0       0       0
  1354 ;;      Temps:          2       0       0       0       0
  1355 ;;      Totals:         3       0       0       0       0
  1356 ;;Total ram usage:        3 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_setup
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           
  1366                           ;psect for function _initOsc
  1367  0504                     _initOsc:
  1368                           
  1369                           ;incstack = 0
  1370                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1371                           ;initOsc@IRCF stored from wreg
  1372  0504  00F2               	movwf	initOsc@IRCF
  1373  0505                     l1587:
  1374                           
  1375                           ;Oscilador.c: 5:     switch(IRCF){
  1376  0505  2D3C               	goto	l1591
  1377  0506                     l133:	
  1378                           ;Oscilador.c: 6:         case 0:
  1379                           
  1380                           
  1381                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  1382  0506  1683               	bsf	3,5	;RP0=1, select bank1
  1383  0507  1303               	bcf	3,6	;RP1=0, select bank1
  1384  0508  130F               	bcf	15,6	;volatile
  1385                           
  1386                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  1387  0509  128F               	bcf	15,5	;volatile
  1388                           
  1389                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  1390  050A  120F               	bcf	15,4	;volatile
  1391                           
  1392                           ;Oscilador.c: 10:             break;
  1393  050B  2D5E               	goto	l134
  1394  050C                     l135:	
  1395                           ;Oscilador.c: 11:          case 1:
  1396                           
  1397                           
  1398                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  1399  050C  1683               	bsf	3,5	;RP0=1, select bank1
  1400  050D  1303               	bcf	3,6	;RP1=0, select bank1
  1401  050E  130F               	bcf	15,6	;volatile
  1402                           
  1403                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  1404  050F  128F               	bcf	15,5	;volatile
  1405                           
  1406                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  1407  0510  160F               	bsf	15,4	;volatile
  1408                           
  1409                           ;Oscilador.c: 15:             break;
  1410  0511  2D5E               	goto	l134
  1411  0512                     l136:	
  1412                           ;Oscilador.c: 16:         case 2:
  1413                           
  1414                           
  1415                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  1416  0512  1683               	bsf	3,5	;RP0=1, select bank1
  1417  0513  1303               	bcf	3,6	;RP1=0, select bank1
  1418  0514  130F               	bcf	15,6	;volatile
  1419                           
  1420                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  1421  0515  168F               	bsf	15,5	;volatile
  1422                           
  1423                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  1424  0516  120F               	bcf	15,4	;volatile
  1425                           
  1426                           ;Oscilador.c: 20:             break;
  1427  0517  2D5E               	goto	l134
  1428  0518                     l137:	
  1429                           ;Oscilador.c: 21:         case 3:
  1430                           
  1431                           
  1432                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  1433  0518  1683               	bsf	3,5	;RP0=1, select bank1
  1434  0519  1303               	bcf	3,6	;RP1=0, select bank1
  1435  051A  130F               	bcf	15,6	;volatile
  1436                           
  1437                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  1438  051B  168F               	bsf	15,5	;volatile
  1439                           
  1440                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  1441  051C  160F               	bsf	15,4	;volatile
  1442                           
  1443                           ;Oscilador.c: 25:             break;
  1444  051D  2D5E               	goto	l134
  1445  051E                     l138:	
  1446                           ;Oscilador.c: 26:         case 4:
  1447                           
  1448                           
  1449                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  1450  051E  1683               	bsf	3,5	;RP0=1, select bank1
  1451  051F  1303               	bcf	3,6	;RP1=0, select bank1
  1452  0520  170F               	bsf	15,6	;volatile
  1453                           
  1454                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  1455  0521  128F               	bcf	15,5	;volatile
  1456                           
  1457                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  1458  0522  120F               	bcf	15,4	;volatile
  1459                           
  1460                           ;Oscilador.c: 30:             break;
  1461  0523  2D5E               	goto	l134
  1462  0524                     l139:	
  1463                           ;Oscilador.c: 31:         case 5:
  1464                           
  1465                           
  1466                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1467  0524  1683               	bsf	3,5	;RP0=1, select bank1
  1468  0525  1303               	bcf	3,6	;RP1=0, select bank1
  1469  0526  170F               	bsf	15,6	;volatile
  1470                           
  1471                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1472  0527  128F               	bcf	15,5	;volatile
  1473                           
  1474                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1475  0528  160F               	bsf	15,4	;volatile
  1476                           
  1477                           ;Oscilador.c: 35:             break;
  1478  0529  2D5E               	goto	l134
  1479  052A                     l140:	
  1480                           ;Oscilador.c: 36:         case 6:
  1481                           
  1482                           
  1483                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1484  052A  1683               	bsf	3,5	;RP0=1, select bank1
  1485  052B  1303               	bcf	3,6	;RP1=0, select bank1
  1486  052C  170F               	bsf	15,6	;volatile
  1487                           
  1488                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1489  052D  168F               	bsf	15,5	;volatile
  1490                           
  1491                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1492  052E  120F               	bcf	15,4	;volatile
  1493                           
  1494                           ;Oscilador.c: 40:             break;
  1495  052F  2D5E               	goto	l134
  1496  0530                     l141:	
  1497                           ;Oscilador.c: 41:         case 7:
  1498                           
  1499                           
  1500                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1501  0530  1683               	bsf	3,5	;RP0=1, select bank1
  1502  0531  1303               	bcf	3,6	;RP1=0, select bank1
  1503  0532  170F               	bsf	15,6	;volatile
  1504                           
  1505                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1506  0533  168F               	bsf	15,5	;volatile
  1507                           
  1508                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1509  0534  160F               	bsf	15,4	;volatile
  1510                           
  1511                           ;Oscilador.c: 45:             break;
  1512  0535  2D5E               	goto	l134
  1513  0536                     l142:	
  1514                           ;Oscilador.c: 46:         default:
  1515                           
  1516                           
  1517                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1518  0536  1683               	bsf	3,5	;RP0=1, select bank1
  1519  0537  1303               	bcf	3,6	;RP1=0, select bank1
  1520  0538  170F               	bsf	15,6	;volatile
  1521                           
  1522                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1523  0539  168F               	bsf	15,5	;volatile
  1524                           
  1525                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1526  053A  120F               	bcf	15,4	;volatile
  1527                           
  1528                           ;Oscilador.c: 50:             break;
  1529  053B  2D5E               	goto	l134
  1530  053C                     l1591:
  1531  053C  0872               	movf	initOsc@IRCF,w
  1532  053D  00F0               	movwf	??_initOsc
  1533  053E  01F1               	clrf	??_initOsc+1
  1534                           
  1535                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1536                           ; Switch size 1, requested type "simple"
  1537                           ; Number of cases is 1, Range of values is 0 to 0
  1538                           ; switch strategies available:
  1539                           ; Name         Instructions Cycles
  1540                           ; simple_byte            4     3 (average)
  1541                           ; direct_byte           11     8 (fixed)
  1542                           ; jumptable            260     6 (fixed)
  1543                           ;	Chosen strategy is simple_byte
  1544  053F  0871               	movf	??_initOsc+1,w
  1545  0540  3A00               	xorlw	0	; case 0
  1546  0541  1903               	skipnz
  1547  0542  2D44               	goto	l1829
  1548  0543  2D36               	goto	l142
  1549  0544                     l1829:
  1550                           
  1551                           ; Switch size 1, requested type "simple"
  1552                           ; Number of cases is 8, Range of values is 0 to 7
  1553                           ; switch strategies available:
  1554                           ; Name         Instructions Cycles
  1555                           ; simple_byte           25    13 (average)
  1556                           ; direct_byte           32     8 (fixed)
  1557                           ; jumptable            260     6 (fixed)
  1558                           ;	Chosen strategy is simple_byte
  1559  0544  0870               	movf	??_initOsc,w
  1560  0545  3A00               	xorlw	0	; case 0
  1561  0546  1903               	skipnz
  1562  0547  2D06               	goto	l133
  1563  0548  3A01               	xorlw	1	; case 1
  1564  0549  1903               	skipnz
  1565  054A  2D0C               	goto	l135
  1566  054B  3A03               	xorlw	3	; case 2
  1567  054C  1903               	skipnz
  1568  054D  2D12               	goto	l136
  1569  054E  3A01               	xorlw	1	; case 3
  1570  054F  1903               	skipnz
  1571  0550  2D18               	goto	l137
  1572  0551  3A07               	xorlw	7	; case 4
  1573  0552  1903               	skipnz
  1574  0553  2D1E               	goto	l138
  1575  0554  3A01               	xorlw	1	; case 5
  1576  0555  1903               	skipnz
  1577  0556  2D24               	goto	l139
  1578  0557  3A03               	xorlw	3	; case 6
  1579  0558  1903               	skipnz
  1580  0559  2D2A               	goto	l140
  1581  055A  3A01               	xorlw	1	; case 7
  1582  055B  1903               	skipnz
  1583  055C  2D30               	goto	l141
  1584  055D  2D36               	goto	l142
  1585  055E                     l134:
  1586                           
  1587                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1588  055E  140F               	bsf	15,0	;volatile
  1589  055F                     l143:
  1590  055F  0008               	return
  1591  0560                     __end_of_initOsc:
  1592                           
  1593                           	psect	text5
  1594  0279                     __ptext5:	
  1595 ;; *************** function _USART_Init_BaudRate *****************
  1596 ;; Defined at:
  1597 ;;		line 20 in file "USART.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1611 ;;      Params:         0       0       0       0       0
  1612 ;;      Locals:         0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0
  1614 ;;      Totals:         0       0       0       0       0
  1615 ;;Total ram usage:        0 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           
  1625                           ;psect for function _USART_Init_BaudRate
  1626  0279                     _USART_Init_BaudRate:
  1627  0279                     l1629:	
  1628                           ;incstack = 0
  1629                           ; Regs used in _USART_Init_BaudRate: [wreg+status,2]
  1630                           
  1631                           
  1632                           ;USART.c: 21:     SPBRGH = 0;
  1633  0279  1683               	bsf	3,5	;RP0=1, select bank1
  1634  027A  1303               	bcf	3,6	;RP1=0, select bank1
  1635  027B  019A               	clrf	26	;volatile
  1636  027C                     l1631:
  1637                           
  1638                           ;USART.c: 22:     SPBRG = 12;
  1639  027C  300C               	movlw	12
  1640  027D  0099               	movwf	25	;volatile
  1641  027E                     l256:
  1642  027E  0008               	return
  1643  027F                     __end_of_USART_Init_BaudRate:
  1644                           
  1645                           	psect	text6
  1646  0287                     __ptext6:	
  1647 ;; *************** function _USART_Init *****************
  1648 ;; Defined at:
  1649 ;;		line 5 in file "USART.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;		None
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		status,2
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1663 ;;      Params:         0       0       0       0       0
  1664 ;;      Locals:         0       0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0
  1666 ;;      Totals:         0       0       0       0       0
  1667 ;;Total ram usage:        0 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           
  1677                           ;psect for function _USART_Init
  1678  0287                     _USART_Init:
  1679  0287                     l1625:	
  1680                           ;incstack = 0
  1681                           ; Regs used in _USART_Init: [status,2]
  1682                           
  1683                           
  1684                           ;USART.c: 7:     RCSTAbits.SPEN = 1;
  1685  0287  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0288  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0289  1798               	bsf	24,7	;volatile
  1688                           
  1689                           ;USART.c: 8:     TXSTAbits.SYNC = 0;
  1690  028A  1683               	bsf	3,5	;RP0=1, select bank1
  1691  028B  1303               	bcf	3,6	;RP1=0, select bank1
  1692  028C  1218               	bcf	24,4	;volatile
  1693                           
  1694                           ;USART.c: 10:     TXSTAbits.TXEN = 1;
  1695  028D  1698               	bsf	24,5	;volatile
  1696                           
  1697                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  1698  028E  1318               	bcf	24,6	;volatile
  1699                           
  1700                           ;USART.c: 12:     TXSTAbits.BRGH = 1;
  1701  028F  1518               	bsf	24,2	;volatile
  1702                           
  1703                           ;USART.c: 13:     TXSTAbits.TRMT = 0;
  1704  0290  1098               	bcf	24,1	;volatile
  1705                           
  1706                           ;USART.c: 15:     RCSTAbits.RX9 = 0;
  1707  0291  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0292  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0293  1318               	bcf	24,6	;volatile
  1710                           
  1711                           ;USART.c: 16:     RCSTAbits.CREN = 1;
  1712  0294  1618               	bsf	24,4	;volatile
  1713  0295                     l1627:
  1714                           
  1715                           ;USART.c: 17:     RCREG = 0;
  1716  0295  019A               	clrf	26	;volatile
  1717  0296                     l253:
  1718  0296  0008               	return
  1719  0297                     __end_of_USART_Init:
  1720                           
  1721                           	psect	text7
  1722  0353                     __ptext7:	
  1723 ;; *************** function _Trasmission *****************
  1724 ;; Defined at:
  1725 ;;		line 211 in file "pseudocodigo_lab3.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         0       0       0       0       0
  1740 ;;      Locals:         0       0       0       0       0
  1741 ;;      Temps:          1       0       0       0       0
  1742 ;;      Totals:         1       0       0       0       0
  1743 ;;Total ram usage:        1 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		_main
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           
  1753                           ;psect for function _Trasmission
  1754  0353                     _Trasmission:
  1755  0353                     l1687:	
  1756                           ;incstack = 0
  1757                           ; Regs used in _Trasmission: [wreg+status,2+status,0]
  1758                           
  1759                           
  1760                           ;pseudocodigo_lab3.c: 212:     if (PIR1bits.TXIF ){
  1761  0353  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0354  1303               	bcf	3,6	;RP1=0, select bank0
  1763  0355  1E0C               	btfss	12,4	;volatile
  1764  0356  2B58               	goto	u771
  1765  0357  2B59               	goto	u770
  1766  0358                     u771:
  1767  0358  2B71               	goto	l124
  1768  0359                     u770:
  1769  0359                     l1689:
  1770                           
  1771                           ;pseudocodigo_lab3.c: 213:             if (eusart_toggle){
  1772  0359  082C               	movf	_eusart_toggle,w
  1773  035A  1903               	btfsc	3,2
  1774  035B  2B5D               	goto	u781
  1775  035C  2B5E               	goto	u780
  1776  035D                     u781:
  1777  035D  2B62               	goto	l1695
  1778  035E                     u780:
  1779  035E                     l1691:
  1780                           
  1781                           ;pseudocodigo_lab3.c: 214:                 TXREG = data2;
  1782  035E  3030               	movlw	(low _data2)& (0+255)
  1783  035F  0099               	movwf	25	;volatile
  1784  0360                     l1693:
  1785                           
  1786                           ;pseudocodigo_lab3.c: 215:                 eusart_toggle = 0;
  1787  0360  01AC               	clrf	_eusart_toggle
  1788                           
  1789                           ;pseudocodigo_lab3.c: 216:             }
  1790  0361  2B66               	goto	l1699
  1791  0362                     l1695:
  1792                           
  1793                           ;pseudocodigo_lab3.c: 218:                 TXREG = data1;
  1794  0362  3038               	movlw	(low _data1)& (0+255)
  1795  0363  0099               	movwf	25	;volatile
  1796  0364                     l1697:
  1797                           
  1798                           ;pseudocodigo_lab3.c: 219:                 eusart_toggle = 1;
  1799  0364  01AC               	clrf	_eusart_toggle
  1800  0365  0AAC               	incf	_eusart_toggle,f
  1801  0366                     l1699:
  1802                           
  1803                           ;pseudocodigo_lab3.c: 221:             cont_usart++;
  1804  0366  3001               	movlw	1
  1805  0367  00F0               	movwf	??_Trasmission
  1806  0368  0870               	movf	??_Trasmission,w
  1807  0369  07AA               	addwf	_cont_usart,f
  1808  036A                     l1701:
  1809                           
  1810                           ;pseudocodigo_lab3.c: 223:             if (cont_usart == 4){
  1811  036A  3004               	movlw	4
  1812  036B  062A               	xorwf	_cont_usart,w
  1813  036C  1D03               	btfss	3,2
  1814  036D  2B6F               	goto	u791
  1815  036E  2B70               	goto	u790
  1816  036F                     u791:
  1817  036F  2B71               	goto	l124
  1818  0370                     u790:
  1819  0370                     l1703:
  1820                           
  1821                           ;pseudocodigo_lab3.c: 225:                 cont_usart = 0;
  1822  0370  01AA               	clrf	_cont_usart
  1823  0371                     l124:
  1824  0371  0008               	return
  1825  0372                     __end_of_Trasmission:
  1826                           
  1827                           	psect	text8
  1828  0560                     __ptext8:	
  1829 ;; *************** function _Show_val_LCD *****************
  1830 ;; Defined at:
  1831 ;;		line 188 in file "pseudocodigo_lab3.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;		None
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;		None
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      void 
  1838 ;; Registers used:
  1839 ;;		wreg, status,2, status,0, pclath, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1845 ;;      Params:         0       0       0       0       0
  1846 ;;      Locals:         0       0       0       0       0
  1847 ;;      Temps:          2       0       0       0       0
  1848 ;;      Totals:         2       0       0       0       0
  1849 ;;Total ram usage:        2 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; Hardware stack levels required when called:    3
  1852 ;; This function calls:
  1853 ;;		_Lcd_Set_Cursor
  1854 ;;		_Lcd_Write_Char
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function _Show_val_LCD
  1862  0560                     _Show_val_LCD:
  1863  0560                     l1669:	
  1864                           ;incstack = 0
  1865                           ; Regs used in _Show_val_LCD: [wreg+status,2+status,0+pclath+cstack]
  1866                           
  1867                           
  1868                           ;pseudocodigo_lab3.c: 190:         Lcd_Set_Cursor(2,1);
  1869  0560  01F4               	clrf	Lcd_Set_Cursor@b
  1870  0561  0AF4               	incf	Lcd_Set_Cursor@b,f
  1871  0562  3002               	movlw	2
  1872  0563  120A  118A  2372  120A  118A  	fcall	_Lcd_Set_Cursor
  1873                           
  1874                           ;pseudocodigo_lab3.c: 191:         Lcd_Write_Char(data2[0]);
  1875  0568  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0569  1303               	bcf	3,6	;RP1=0, select bank0
  1877  056A  0830               	movf	_data2,w
  1878  056B  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1879                           
  1880                           ;pseudocodigo_lab3.c: 192:         Lcd_Write_Char('.');
  1881  0570  302E               	movlw	46
  1882  0571  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1883                           
  1884                           ;pseudocodigo_lab3.c: 193:         Lcd_Write_Char(data2[1]);
  1885  0576  1283               	bcf	3,5	;RP0=0, select bank0
  1886  0577  1303               	bcf	3,6	;RP1=0, select bank0
  1887  0578  0831               	movf	_data2+1,w
  1888  0579  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1889                           
  1890                           ;pseudocodigo_lab3.c: 194:         Lcd_Write_Char(data2[2]);
  1891  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1892  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0580  0832               	movf	_data2+2,w
  1894  0581  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1895                           
  1896                           ;pseudocodigo_lab3.c: 195:         Lcd_Write_Char(data2[3]);
  1897  0586  1283               	bcf	3,5	;RP0=0, select bank0
  1898  0587  1303               	bcf	3,6	;RP1=0, select bank0
  1899  0588  0833               	movf	_data2+3,w
  1900  0589  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1901                           
  1902                           ;pseudocodigo_lab3.c: 196:         Lcd_Write_Char(' ');
  1903  058E  3020               	movlw	32
  1904  058F  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1905  0594                     l1671:
  1906                           
  1907                           ;pseudocodigo_lab3.c: 198:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1908  0594  3003               	movlw	3
  1909  0595  00F9               	movwf	??_Show_val_LCD+1
  1910  0596  3097               	movlw	151
  1911  0597  00F8               	movwf	??_Show_val_LCD
  1912  0598                     u847:
  1913  0598  0BF8               	decfsz	??_Show_val_LCD,f
  1914  0599  2D98               	goto	u847
  1915  059A  0BF9               	decfsz	??_Show_val_LCD+1,f
  1916  059B  2D98               	goto	u847
  1917  059C  2D9D               	nop2
  1918  059D                     l1673:
  1919                           
  1920                           ;pseudocodigo_lab3.c: 200:         Lcd_Set_Cursor(2,7);
  1921  059D  3007               	movlw	7
  1922  059E  00F8               	movwf	??_Show_val_LCD
  1923  059F  0878               	movf	??_Show_val_LCD,w
  1924  05A0  00F4               	movwf	Lcd_Set_Cursor@b
  1925  05A1  3002               	movlw	2
  1926  05A2  120A  118A  2372  120A  118A  	fcall	_Lcd_Set_Cursor
  1927  05A7                     l1675:
  1928                           
  1929                           ;pseudocodigo_lab3.c: 201:         Lcd_Write_Char(data1[0]);
  1930  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  1931  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  1932  05A9  0838               	movf	_data1,w
  1933  05AA  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1934  05AF                     l1677:
  1935                           
  1936                           ;pseudocodigo_lab3.c: 202:         Lcd_Write_Char('.');
  1937  05AF  302E               	movlw	46
  1938  05B0  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1939  05B5                     l1679:
  1940                           
  1941                           ;pseudocodigo_lab3.c: 203:         Lcd_Write_Char(data1[1]);
  1942  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1943  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  1944  05B7  0839               	movf	_data1+1,w
  1945  05B8  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1946  05BD                     l1681:
  1947                           
  1948                           ;pseudocodigo_lab3.c: 204:         Lcd_Write_Char(data1[2]);
  1949  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  1950  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  1951  05BF  083A               	movf	_data1+2,w
  1952  05C0  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1953  05C5                     l1683:
  1954                           
  1955                           ;pseudocodigo_lab3.c: 205:         Lcd_Write_Char(data1[3]);
  1956  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1957  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1958  05C7  083B               	movf	_data1+3,w
  1959  05C8  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1960  05CD                     l1685:
  1961                           
  1962                           ;pseudocodigo_lab3.c: 206:         Lcd_Write_Char(' ');
  1963  05CD  3020               	movlw	32
  1964  05CE  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1965  05D3                     l117:
  1966  05D3  0008               	return
  1967  05D4                     __end_of_Show_val_LCD:
  1968                           
  1969                           	psect	text9
  1970  02CF                     __ptext9:	
  1971 ;; *************** function _Lcd_Write_Char *****************
  1972 ;; Defined at:
  1973 ;;		line 61 in file "LCD.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  a               1    wreg     unsigned char 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  a               1    2[COMMON] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0, pclath, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1987 ;;      Params:         0       0       0       0       0
  1988 ;;      Locals:         1       0       0       0       0
  1989 ;;      Temps:          1       0       0       0       0
  1990 ;;      Totals:         2       0       0       0       0
  1991 ;;Total ram usage:        2 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    1
  1994 ;; This function calls:
  1995 ;;		_Lcd_Port
  1996 ;; This function is called by:
  1997 ;;		_Show_val_LCD
  1998 ;;		_Lcd_Write_String
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           
  2003                           ;psect for function _Lcd_Write_Char
  2004  02CF                     _Lcd_Write_Char:
  2005                           
  2006                           ;incstack = 0
  2007                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2008                           ;Lcd_Write_Char@a stored from wreg
  2009  02CF  00F2               	movwf	Lcd_Write_Char@a
  2010  02D0                     l1365:
  2011                           
  2012                           ;LCD.c: 62:    PORTEbits.RE0 = 1;
  2013  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  2014  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  2015  02D2  1409               	bsf	9,0	;volatile
  2016  02D3                     l1367:
  2017                           
  2018                           ;LCD.c: 63:    Lcd_Port(a);
  2019  02D3  0872               	movf	Lcd_Write_Char@a,w
  2020  02D4  120A  118A  2273  120A  118A  	fcall	_Lcd_Port
  2021  02D9                     l1369:
  2022                           
  2023                           ;LCD.c: 64:    PORTEbits.RE2 = 1;
  2024  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2025  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2026  02DB  1509               	bsf	9,2	;volatile
  2027  02DC                     l1371:
  2028                           
  2029                           ;LCD.c: 65:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2030  02DC  301A               	movlw	26
  2031  02DD  00F1               	movwf	??_Lcd_Write_Char
  2032  02DE                     u857:
  2033  02DE  0BF1               	decfsz	??_Lcd_Write_Char,f
  2034  02DF  2ADE               	goto	u857
  2035  02E0  0000               	nop
  2036  02E1                     l1373:
  2037                           
  2038                           ;LCD.c: 66:    PORTEbits.RE2 = 0;
  2039  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2040  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2041  02E3  1109               	bcf	9,2	;volatile
  2042  02E4                     l174:
  2043  02E4  0008               	return
  2044  02E5                     __end_of_Lcd_Write_Char:
  2045                           
  2046                           	psect	text10
  2047  0372                     __ptext10:	
  2048 ;; *************** function _Lcd_Set_Cursor *****************
  2049 ;; Defined at:
  2050 ;;		line 48 in file "LCD.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  a               1    wreg     unsigned char 
  2053 ;;  b               1    4[COMMON] unsigned char 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  a               1    6[COMMON] unsigned char 
  2056 ;;  temp            1    7[COMMON] unsigned char 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0, pclath, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2066 ;;      Params:         1       0       0       0       0
  2067 ;;      Locals:         2       0       0       0       0
  2068 ;;      Temps:          1       0       0       0       0
  2069 ;;      Totals:         4       0       0       0       0
  2070 ;;Total ram usage:        4 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; Hardware stack levels required when called:    2
  2073 ;; This function calls:
  2074 ;;		_Lcd_Cmd
  2075 ;; This function is called by:
  2076 ;;		_titulos_LCD
  2077 ;;		_Show_val_LCD
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           
  2082                           ;psect for function _Lcd_Set_Cursor
  2083  0372                     _Lcd_Set_Cursor:
  2084                           
  2085                           ;incstack = 0
  2086                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2087                           ;Lcd_Set_Cursor@a stored from wreg
  2088  0372  00F6               	movwf	Lcd_Set_Cursor@a
  2089  0373                     l1459:
  2090                           
  2091                           ;LCD.c: 49:  char temp;;LCD.c: 50:  if(a == 1){
  2092  0373  0376               	decf	Lcd_Set_Cursor@a,w
  2093  0374  1D03               	btfss	3,2
  2094  0375  2B77               	goto	u591
  2095  0376  2B78               	goto	u590
  2096  0377                     u591:
  2097  0377  2B84               	goto	l1465
  2098  0378                     u590:
  2099  0378                     l1461:
  2100                           
  2101                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2102  0378  0874               	movf	Lcd_Set_Cursor@b,w
  2103  0379  3E7F               	addlw	127
  2104  037A  00F5               	movwf	??_Lcd_Set_Cursor
  2105  037B  0875               	movf	??_Lcd_Set_Cursor,w
  2106  037C  00F7               	movwf	Lcd_Set_Cursor@temp
  2107  037D                     l1463:
  2108                           
  2109                           ;LCD.c: 52:         Lcd_Cmd(temp);
  2110  037D  0877               	movf	Lcd_Set_Cursor@temp,w
  2111  037E  120A  118A  22E5  120A  118A  	fcall	_Lcd_Cmd
  2112                           
  2113                           ;LCD.c: 53:  }
  2114  0383  2B95               	goto	l171
  2115  0384                     l1465:
  2116  0384  3002               	movlw	2
  2117  0385  0676               	xorwf	Lcd_Set_Cursor@a,w
  2118  0386  1D03               	btfss	3,2
  2119  0387  2B89               	goto	u601
  2120  0388  2B8A               	goto	u600
  2121  0389                     u601:
  2122  0389  2B95               	goto	l171
  2123  038A                     u600:
  2124  038A                     l1467:
  2125                           
  2126                           ;LCD.c: 55:   temp = 0xC0 + b - 1;
  2127  038A  0874               	movf	Lcd_Set_Cursor@b,w
  2128  038B  3EBF               	addlw	191
  2129  038C  00F5               	movwf	??_Lcd_Set_Cursor
  2130  038D  0875               	movf	??_Lcd_Set_Cursor,w
  2131  038E  00F7               	movwf	Lcd_Set_Cursor@temp
  2132  038F                     l1469:
  2133                           
  2134                           ;LCD.c: 56:   Lcd_Cmd(temp);
  2135  038F  0877               	movf	Lcd_Set_Cursor@temp,w
  2136  0390  120A  118A  22E5  120A  118A  	fcall	_Lcd_Cmd
  2137  0395                     l171:
  2138  0395  0008               	return
  2139  0396                     __end_of_Lcd_Set_Cursor:
  2140                           
  2141                           	psect	text11
  2142  0462                     __ptext11:	
  2143 ;; *************** function _Lcd_Init *****************
  2144 ;; Defined at:
  2145 ;;		line 14 in file "LCD.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0, pclath, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2159 ;;      Params:         0       0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0
  2161 ;;      Temps:          2       0       0       0       0
  2162 ;;      Totals:         2       0       0       0       0
  2163 ;;Total ram usage:        2 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    2
  2166 ;; This function calls:
  2167 ;;		_Lcd_Cmd
  2168 ;;		_Lcd_Port
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           
  2175                           ;psect for function _Lcd_Init
  2176  0462                     _Lcd_Init:
  2177  0462                     l1633:	
  2178                           ;incstack = 0
  2179                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2180                           
  2181                           
  2182                           ;LCD.c: 15:   Lcd_Port(0x00);
  2183  0462  3000               	movlw	0
  2184  0463  120A  118A  2273  120A  118A  	fcall	_Lcd_Port
  2185  0468                     l1635:
  2186                           
  2187                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2188  0468  3034               	movlw	52
  2189  0469  00F5               	movwf	??_Lcd_Init+1
  2190  046A  30F1               	movlw	241
  2191  046B  00F4               	movwf	??_Lcd_Init
  2192  046C                     u867:
  2193  046C  0BF4               	decfsz	??_Lcd_Init,f
  2194  046D  2C6C               	goto	u867
  2195  046E  0BF5               	decfsz	??_Lcd_Init+1,f
  2196  046F  2C6C               	goto	u867
  2197  0470  2C71               	nop2
  2198  0471                     l1637:
  2199                           
  2200                           ;LCD.c: 17:   Lcd_Cmd(0x30);
  2201  0471  3030               	movlw	48
  2202  0472  120A  118A  22E5  120A  118A  	fcall	_Lcd_Cmd
  2203                           
  2204                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2205  0477  300D               	movlw	13
  2206  0478  00F5               	movwf	??_Lcd_Init+1
  2207  0479  30FB               	movlw	251
  2208  047A  00F4               	movwf	??_Lcd_Init
  2209  047B                     u877:
  2210  047B  0BF4               	decfsz	??_Lcd_Init,f
  2211  047C  2C7B               	goto	u877
  2212  047D  0BF5               	decfsz	??_Lcd_Init+1,f
  2213  047E  2C7B               	goto	u877
  2214  047F  2C80               	nop2
  2215  0480                     l1639:
  2216                           
  2217                           ;LCD.c: 19:   Lcd_Cmd(0x30);
  2218  0480  3030               	movlw	48
  2219  0481  120A  118A  22E5  120A  118A  	fcall	_Lcd_Cmd
  2220  0486                     l1641:
  2221                           
  2222                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2223  0486  301D               	movlw	29
  2224  0487  00F5               	movwf	??_Lcd_Init+1
  2225  0488  3091               	movlw	145
  2226  0489  00F4               	movwf	??_Lcd_Init
  2227  048A                     u887:
  2228  048A  0BF4               	decfsz	??_Lcd_Init,f
  2229  048B  2C8A               	goto	u887
  2230  048C  0BF5               	decfsz	??_Lcd_Init+1,f
  2231  048D  2C8A               	goto	u887
  2232                           
  2233                           ;LCD.c: 21:   Lcd_Cmd(0x30);
  2234  048E  3030               	movlw	48
  2235  048F  120A  118A  22E5  120A  118A  	fcall	_Lcd_Cmd
  2236                           
  2237                           ;LCD.c: 22:   Lcd_Cmd(0x38);
  2238  0494  3038               	movlw	56
  2239  0495  120A  118A  22E5  120A  118A  	fcall	_Lcd_Cmd
  2240                           
  2241                           ;LCD.c: 23:   Lcd_Cmd(0x0C);
  2242  049A  300C               	movlw	12
  2243  049B  120A  118A  22E5  120A  118A  	fcall	_Lcd_Cmd
  2244                           
  2245                           ;LCD.c: 24:   Lcd_Cmd(0x01);
  2246  04A0  3001               	movlw	1
  2247  04A1  120A  118A  22E5  120A  118A  	fcall	_Lcd_Cmd
  2248                           
  2249                           ;LCD.c: 25:   Lcd_Cmd(0x06);
  2250  04A6  3006               	movlw	6
  2251  04A7  120A  118A  22E5  120A  118A  	fcall	_Lcd_Cmd
  2252  04AC                     l156:
  2253  04AC  0008               	return
  2254  04AD                     __end_of_Lcd_Init:
  2255                           
  2256                           	psect	text12
  2257  02E5                     __ptext12:	
  2258 ;; *************** function _Lcd_Cmd *****************
  2259 ;; Defined at:
  2260 ;;		line 33 in file "LCD.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  a               1    wreg     unsigned char 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  a               1    3[COMMON] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0, pclath, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2274 ;;      Params:         0       0       0       0       0
  2275 ;;      Locals:         1       0       0       0       0
  2276 ;;      Temps:          2       0       0       0       0
  2277 ;;      Totals:         3       0       0       0       0
  2278 ;;Total ram usage:        3 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    1
  2281 ;; This function calls:
  2282 ;;		_Lcd_Port
  2283 ;; This function is called by:
  2284 ;;		_Lcd_Init
  2285 ;;		_Lcd_Set_Cursor
  2286 ;;		_Lcd_Clear
  2287 ;;		_Lcd_Shift_Right
  2288 ;;		_Lcd_Shift_Left
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           
  2293                           ;psect for function _Lcd_Cmd
  2294  02E5                     _Lcd_Cmd:
  2295                           
  2296                           ;incstack = 0
  2297                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2298                           ;Lcd_Cmd@a stored from wreg
  2299  02E5  00F3               	movwf	Lcd_Cmd@a
  2300  02E6                     l1375:
  2301                           
  2302                           ;LCD.c: 34:  PORTEbits.RE0 = 0;
  2303  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2304  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2305  02E8  1009               	bcf	9,0	;volatile
  2306  02E9                     l1377:
  2307                           
  2308                           ;LCD.c: 35:  Lcd_Port(a);
  2309  02E9  0873               	movf	Lcd_Cmd@a,w
  2310  02EA  120A  118A  2273  120A  118A  	fcall	_Lcd_Port
  2311  02EF                     l1379:
  2312                           
  2313                           ;LCD.c: 36:  PORTEbits.RE2 = 1;
  2314  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2315  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2316  02F1  1509               	bsf	9,2	;volatile
  2317  02F2                     l1381:
  2318                           
  2319                           ;LCD.c: 37:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2320  02F2  300B               	movlw	11
  2321  02F3  00F2               	movwf	??_Lcd_Cmd+1
  2322  02F4  3062               	movlw	98
  2323  02F5  00F1               	movwf	??_Lcd_Cmd
  2324  02F6                     u897:
  2325  02F6  0BF1               	decfsz	??_Lcd_Cmd,f
  2326  02F7  2AF6               	goto	u897
  2327  02F8  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2328  02F9  2AF6               	goto	u897
  2329  02FA  0000               	nop
  2330  02FB                     l1383:
  2331                           
  2332                           ;LCD.c: 38:         PORTEbits.RE2 = 0;
  2333  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2334  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2335  02FD  1109               	bcf	9,2	;volatile
  2336  02FE                     l162:
  2337  02FE  0008               	return
  2338  02FF                     __end_of_Lcd_Cmd:
  2339                           
  2340                           	psect	text13
  2341  0273                     __ptext13:	
  2342 ;; *************** function _Lcd_Port *****************
  2343 ;; Defined at:
  2344 ;;		line 29 in file "LCD.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  a               1    wreg     unsigned char 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  a               1    0[COMMON] unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2358 ;;      Params:         0       0       0       0       0
  2359 ;;      Locals:         1       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0
  2361 ;;      Totals:         1       0       0       0       0
  2362 ;;Total ram usage:        1 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_Lcd_Init
  2368 ;;		_Lcd_Cmd
  2369 ;;		_Lcd_Write_Char
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function _Lcd_Port
  2375  0273                     _Lcd_Port:
  2376                           
  2377                           ;incstack = 0
  2378                           ; Regs used in _Lcd_Port: [wreg]
  2379                           ;Lcd_Port@a stored from wreg
  2380  0273  00F0               	movwf	Lcd_Port@a
  2381  0274                     l1363:
  2382                           
  2383                           ;LCD.c: 30:     PORTD = a;
  2384  0274  0870               	movf	Lcd_Port@a,w
  2385  0275  1283               	bcf	3,5	;RP0=0, select bank0
  2386  0276  1303               	bcf	3,6	;RP1=0, select bank0
  2387  0277  0088               	movwf	8	;volatile
  2388  0278                     l159:
  2389  0278  0008               	return
  2390  0279                     __end_of_Lcd_Port:
  2391                           
  2392                           	psect	text14
  2393  03BB                     __ptext14:	
  2394 ;; *************** function _ADC_to_string *****************
  2395 ;; Defined at:
  2396 ;;		line 181 in file "pseudocodigo_lab3.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2410 ;;      Params:         0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0
  2412 ;;      Temps:          0       3       0       0       0
  2413 ;;      Totals:         0       3       0       0       0
  2414 ;;Total ram usage:        3 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    2
  2417 ;; This function calls:
  2418 ;;		_sprintf
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function _ADC_to_string
  2426  03BB                     _ADC_to_string:
  2427  03BB                     l1667:	
  2428                           ;incstack = 0
  2429                           ; Regs used in _ADC_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2430                           
  2431                           
  2432                           ;pseudocodigo_lab3.c: 182:     sprintf(data2, "%.3iV", S1_val<<1);
  2433  03BB  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2434  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2435  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2436  03BE  00CD               	movwf	??_ADC_to_string
  2437  03BF  084D               	movf	??_ADC_to_string,w
  2438  03C0  00C0               	movwf	sprintf@f
  2439  03C1  082F               	movf	_S1_val,w
  2440  03C2  00CE               	movwf	??_ADC_to_string+1
  2441  03C3  01CF               	clrf	??_ADC_to_string+2
  2442  03C4  1003               	clrc
  2443  03C5  0D4E               	rlf	??_ADC_to_string+1,w
  2444  03C6  00C1               	movwf	?_sprintf+1
  2445  03C7  0D4F               	rlf	??_ADC_to_string+2,w
  2446  03C8  00C2               	movwf	?_sprintf+2
  2447  03C9  3030               	movlw	(low (_data2| 0))& (0+255)
  2448  03CA  120A  118A  2690  120A  118A  	fcall	_sprintf
  2449                           
  2450                           ;pseudocodigo_lab3.c: 183:     sprintf(data1, "%.3iV", S2_val<<1);
  2451  03CF  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2452  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2453  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2454  03D2  00CD               	movwf	??_ADC_to_string
  2455  03D3  084D               	movf	??_ADC_to_string,w
  2456  03D4  00C0               	movwf	sprintf@f
  2457  03D5  082E               	movf	_S2_val,w
  2458  03D6  00CE               	movwf	??_ADC_to_string+1
  2459  03D7  01CF               	clrf	??_ADC_to_string+2
  2460  03D8  1003               	clrc
  2461  03D9  0D4E               	rlf	??_ADC_to_string+1,w
  2462  03DA  00C1               	movwf	?_sprintf+1
  2463  03DB  0D4F               	rlf	??_ADC_to_string+2,w
  2464  03DC  00C2               	movwf	?_sprintf+2
  2465  03DD  3038               	movlw	(low (_data1| 0))& (0+255)
  2466  03DE  120A  118A  2690  120A  118A  	fcall	_sprintf
  2467  03E3                     l114:
  2468  03E3  0008               	return
  2469  03E4                     __end_of_ADC_to_string:
  2470                           
  2471                           	psect	text15
  2472  0690                     __ptext15:	
  2473 ;; *************** function _sprintf *****************
  2474 ;; Defined at:
  2475 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  sp              1    wreg     PTR unsigned char 
  2478 ;;		 -> data1(8), data2(8), 
  2479 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2480 ;;		 -> STR_3(6), STR_2(6), 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  sp              1   10[BANK0 ] PTR unsigned char 
  2483 ;;		 -> data1(8), data2(8), 
  2484 ;;  tmpval          4    0        struct .
  2485 ;;  val             2    8[BANK0 ] unsigned int 
  2486 ;;  cp              2    0        PTR const unsigned char 
  2487 ;;  len             2    0        unsigned int 
  2488 ;;  c               1   12[BANK0 ] unsigned char 
  2489 ;;  prec            1   11[BANK0 ] char 
  2490 ;;  flag            1    7[BANK0 ] unsigned char 
  2491 ;;  ap              1    6[BANK0 ] PTR void [1]
  2492 ;;		 -> ?_sprintf(2), 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  2    0[BANK0 ] int 
  2495 ;; Registers used:
  2496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2502 ;;      Params:         0       3       0       0       0
  2503 ;;      Locals:         0       7       0       0       0
  2504 ;;      Temps:          0       3       0       0       0
  2505 ;;      Totals:         0      13       0       0       0
  2506 ;;Total ram usage:       13 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    1
  2509 ;; This function calls:
  2510 ;;		___bmul
  2511 ;;		___lwdiv
  2512 ;;		___lwmod
  2513 ;;		_isdigit
  2514 ;; This function is called by:
  2515 ;;		_ADC_to_string
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           
  2520                           ;psect for function _sprintf
  2521  0690                     _sprintf:
  2522                           
  2523                           ;incstack = 0
  2524                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2525                           ;sprintf@sp stored from wreg
  2526  0690  1283               	bcf	3,5	;RP0=0, select bank0
  2527  0691  1303               	bcf	3,6	;RP1=0, select bank0
  2528  0692  00CA               	movwf	sprintf@sp
  2529  0693                     l1497:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2532  0693  3041               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2533  0694  00C3               	movwf	??_sprintf
  2534  0695  0843               	movf	??_sprintf,w
  2535  0696  00C6               	movwf	sprintf@ap
  2536                           
  2537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2538  0697  2FDC               	goto	l1575
  2539  0698                     l1499:
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2542  0698  3025               	movlw	37
  2543  0699  064C               	xorwf	sprintf@c,w
  2544  069A  1903               	btfsc	3,2
  2545  069B  2E9D               	goto	u621
  2546  069C  2E9E               	goto	u620
  2547  069D                     u621:
  2548  069D  2EAA               	goto	l1505
  2549  069E                     u620:
  2550  069E                     l1501:
  2551                           
  2552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2553  069E  084C               	movf	sprintf@c,w
  2554  069F  00C3               	movwf	??_sprintf
  2555  06A0  084A               	movf	sprintf@sp,w
  2556  06A1  0084               	movwf	4
  2557  06A2  0843               	movf	??_sprintf,w
  2558  06A3  1383               	bcf	3,7	;select IRP bank0
  2559  06A4  0080               	movwf	0
  2560  06A5                     l1503:
  2561  06A5  3001               	movlw	1
  2562  06A6  00C3               	movwf	??_sprintf
  2563  06A7  0843               	movf	??_sprintf,w
  2564  06A8  07CA               	addwf	sprintf@sp,f
  2565                           
  2566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2567  06A9  2FDC               	goto	l1575
  2568  06AA                     l1505:
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2571  06AA  01C7               	clrf	sprintf@flag
  2572  06AB                     l1507:
  2573                           
  2574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2575  06AB  0840               	movf	sprintf@f,w
  2576  06AC  0084               	movwf	4
  2577  06AD  120A  118A  2003  120A  118A  	fcall	stringdir
  2578  06B2  3A2E               	xorlw	46
  2579  06B3  1D03               	skipz
  2580  06B4  2EB6               	goto	u631
  2581  06B5  2EB7               	goto	u630
  2582  06B6                     u631:
  2583  06B6  2EEE               	goto	l1521
  2584  06B7                     u630:
  2585  06B7                     l1509:
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2588  06B7  3001               	movlw	1
  2589  06B8  00C3               	movwf	??_sprintf
  2590  06B9  0843               	movf	??_sprintf,w
  2591  06BA  07C0               	addwf	sprintf@f,f
  2592  06BB                     l1511:
  2593                           
  2594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2595  06BB  01CB               	clrf	sprintf@prec
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2598  06BC  2EDD               	goto	l1519
  2599  06BD                     l1513:
  2600                           
  2601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2602  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  2603  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  2604  06BF  084B               	movf	sprintf@prec,w
  2605  06C0  00C3               	movwf	??_sprintf
  2606  06C1  0843               	movf	??_sprintf,w
  2607  06C2  00F0               	movwf	___bmul@multiplicand
  2608  06C3  300A               	movlw	10
  2609  06C4  120A  118A  22BA  120A  118A  	fcall	___bmul
  2610  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  2611  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  2612  06CB  00C4               	movwf	??_sprintf+1
  2613  06CC  0844               	movf	??_sprintf+1,w
  2614  06CD  00CB               	movwf	sprintf@prec
  2615  06CE                     l1515:
  2616                           
  2617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2618  06CE  0840               	movf	sprintf@f,w
  2619  06CF  0084               	movwf	4
  2620  06D0  120A  118A  2003  120A  118A  	fcall	stringdir
  2621  06D5  3ED0               	addlw	-48
  2622  06D6  00C3               	movwf	??_sprintf
  2623  06D7  0843               	movf	??_sprintf,w
  2624  06D8  07CB               	addwf	sprintf@prec,f
  2625  06D9                     l1517:
  2626  06D9  3001               	movlw	1
  2627  06DA  00C3               	movwf	??_sprintf
  2628  06DB  0843               	movf	??_sprintf,w
  2629  06DC  07C0               	addwf	sprintf@f,f
  2630  06DD                     l1519:
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2633  06DD  0840               	movf	sprintf@f,w
  2634  06DE  0084               	movwf	4
  2635  06DF  120A  118A  2003  120A  118A  	fcall	stringdir
  2636  06E4  120A  118A  22A8  120A  118A  	fcall	_isdigit
  2637  06E9  1803               	btfsc	3,0
  2638  06EA  2EEC               	goto	u641
  2639  06EB  2EED               	goto	u640
  2640  06EC                     u641:
  2641  06EC  2EBD               	goto	l1513
  2642  06ED                     u640:
  2643  06ED  2EEF               	goto	l1525
  2644  06EE                     l1521:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2647  06EE  01CB               	clrf	sprintf@prec
  2648  06EF                     l1525:
  2649  06EF  3001               	movlw	1
  2650  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  2651  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  2652  06F2  07C0               	addwf	sprintf@f,f
  2653  06F3  30FF               	movlw	-1
  2654  06F4  0740               	addwf	sprintf@f,w
  2655  06F5  0084               	movwf	4
  2656  06F6  120A  118A  2003  120A  118A  	fcall	stringdir
  2657  06FB  00CC               	movwf	sprintf@c
  2658  06FC  00C3               	movwf	??_sprintf
  2659  06FD  01C4               	clrf	??_sprintf+1
  2660                           
  2661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2662                           ; Switch size 1, requested type "simple"
  2663                           ; Number of cases is 1, Range of values is 0 to 0
  2664                           ; switch strategies available:
  2665                           ; Name         Instructions Cycles
  2666                           ; simple_byte            4     3 (average)
  2667                           ; direct_byte           11     8 (fixed)
  2668                           ; jumptable            260     6 (fixed)
  2669                           ;	Chosen strategy is simple_byte
  2670  06FE  0844               	movf	??_sprintf+1,w
  2671  06FF  3A00               	xorlw	0	; case 0
  2672  0700  1903               	skipnz
  2673  0701  2F03               	goto	l1831
  2674  0702  2FDC               	goto	l1575
  2675  0703                     l1831:
  2676                           
  2677                           ; Switch size 1, requested type "simple"
  2678                           ; Number of cases is 3, Range of values is 0 to 105
  2679                           ; switch strategies available:
  2680                           ; Name         Instructions Cycles
  2681                           ; simple_byte           10     6 (average)
  2682                           ; jumptable            260     6 (fixed)
  2683                           ;	Chosen strategy is simple_byte
  2684  0703  0843               	movf	??_sprintf,w
  2685  0704  3A00               	xorlw	0	; case 0
  2686  0705  1903               	skipnz
  2687  0706  2FEE               	goto	l1577
  2688  0707  3A64               	xorlw	100	; case 100
  2689  0708  1903               	skipnz
  2690  0709  2F0E               	goto	l1527
  2691  070A  3A0D               	xorlw	13	; case 105
  2692  070B  1903               	skipnz
  2693  070C  2F0E               	goto	l1527
  2694  070D  2FDC               	goto	l1575
  2695  070E                     l1527:
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2698  070E  0846               	movf	sprintf@ap,w
  2699  070F  0084               	movwf	4
  2700  0710  1383               	bcf	3,7	;select IRP bank0
  2701  0711  0800               	movf	0,w
  2702  0712  00C8               	movwf	sprintf@val
  2703  0713  0A84               	incf	4,f
  2704  0714  0800               	movf	0,w
  2705  0715  00C9               	movwf	sprintf@val+1
  2706  0716                     l1529:
  2707  0716  3002               	movlw	2
  2708  0717  00C3               	movwf	??_sprintf
  2709  0718  0843               	movf	??_sprintf,w
  2710  0719  07C6               	addwf	sprintf@ap,f
  2711  071A                     l1531:
  2712                           
  2713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2714  071A  1FC9               	btfss	sprintf@val+1,7
  2715  071B  2F1D               	goto	u651
  2716  071C  2F1E               	goto	u650
  2717  071D                     u651:
  2718  071D  2F27               	goto	l1537
  2719  071E                     u650:
  2720  071E                     l1533:
  2721                           
  2722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2723  071E  3003               	movlw	3
  2724  071F  00C3               	movwf	??_sprintf
  2725  0720  0843               	movf	??_sprintf,w
  2726  0721  04C7               	iorwf	sprintf@flag,f
  2727  0722                     l1535:
  2728                           
  2729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2730  0722  09C8               	comf	sprintf@val,f
  2731  0723  09C9               	comf	sprintf@val+1,f
  2732  0724  0AC8               	incf	sprintf@val,f
  2733  0725  1903               	skipnz
  2734  0726  0AC9               	incf	sprintf@val+1,f
  2735  0727                     l1537:
  2736                           
  2737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  2738  0727  084B               	movf	sprintf@prec,w
  2739  0728  1D03               	btfss	3,2
  2740  0729  2F2B               	goto	u661
  2741  072A  2F2C               	goto	u660
  2742  072B                     u661:
  2743  072B  2F36               	goto	l1543
  2744  072C                     u660:
  2745  072C                     l1539:
  2746  072C  0848               	movf	sprintf@val,w
  2747  072D  0449               	iorwf	sprintf@val+1,w
  2748  072E  1D03               	btfss	3,2
  2749  072F  2F31               	goto	u671
  2750  0730  2F32               	goto	u670
  2751  0731                     u671:
  2752  0731  2F36               	goto	l1543
  2753  0732                     u670:
  2754  0732                     l1541:
  2755                           
  2756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  2757  0732  3001               	movlw	1
  2758  0733  00C3               	movwf	??_sprintf
  2759  0734  0843               	movf	??_sprintf,w
  2760  0735  07CB               	addwf	sprintf@prec,f
  2761  0736                     l1543:
  2762                           
  2763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2764  0736  01CC               	clrf	sprintf@c
  2765  0737  0ACC               	incf	sprintf@c,f
  2766  0738                     l1547:
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2769  0738  084C               	movf	sprintf@c,w
  2770  0739  00C3               	movwf	??_sprintf
  2771  073A  0743               	addwf	??_sprintf,w
  2772  073B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2773  073C  0084               	movwf	4
  2774  073D  120A  118A  2003  120A  118A  	fcall	stringdir
  2775  0742  00C4               	movwf	??_sprintf+1
  2776  0743  120A  118A  2003  120A  118A  	fcall	stringdir
  2777  0748  00C5               	movwf	??_sprintf+2
  2778  0749  0845               	movf	??_sprintf+2,w
  2779  074A  0249               	subwf	sprintf@val+1,w
  2780  074B  1D03               	skipz
  2781  074C  2F4F               	goto	u685
  2782  074D  0844               	movf	??_sprintf+1,w
  2783  074E  0248               	subwf	sprintf@val,w
  2784  074F                     u685:
  2785  074F  1803               	skipnc
  2786  0750  2F52               	goto	u681
  2787  0751  2F53               	goto	u680
  2788  0752                     u681:
  2789  0752  2F54               	goto	l1551
  2790  0753                     u680:
  2791  0753  2F5E               	goto	l1553
  2792  0754                     l1551:
  2793  0754  3001               	movlw	1
  2794  0755  00C3               	movwf	??_sprintf
  2795  0756  0843               	movf	??_sprintf,w
  2796  0757  07CC               	addwf	sprintf@c,f
  2797  0758  3005               	movlw	5
  2798  0759  064C               	xorwf	sprintf@c,w
  2799  075A  1D03               	btfss	3,2
  2800  075B  2F5D               	goto	u691
  2801  075C  2F5E               	goto	u690
  2802  075D                     u691:
  2803  075D  2F38               	goto	l1547
  2804  075E                     u690:
  2805  075E                     l1553:
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  2808  075E  084B               	movf	sprintf@prec,w
  2809  075F  00C3               	movwf	??_sprintf
  2810  0760  01C4               	clrf	??_sprintf+1
  2811  0761  1BC3               	btfsc	??_sprintf,7
  2812  0762  03C4               	decf	??_sprintf+1,f
  2813  0763  0844               	movf	??_sprintf+1,w
  2814  0764  3A80               	xorlw	128
  2815  0765  3C80               	sublw	128
  2816  0766  1D03               	skipz
  2817  0767  2F6A               	goto	u705
  2818  0768  0843               	movf	??_sprintf,w
  2819  0769  024C               	subwf	sprintf@c,w
  2820  076A                     u705:
  2821  076A  1803               	skipnc
  2822  076B  2F6D               	goto	u701
  2823  076C  2F6E               	goto	u700
  2824  076D                     u701:
  2825  076D  2F6F               	goto	l1557
  2826  076E                     u700:
  2827  076E                     l1555:
  2828  076E  2F89               	goto	l1561
  2829  076F                     l1557:
  2830  076F  1283               	bcf	3,5	;RP0=0, select bank0
  2831  0770  1303               	bcf	3,6	;RP1=0, select bank0
  2832  0771  084B               	movf	sprintf@prec,w
  2833  0772  00C3               	movwf	??_sprintf
  2834  0773  01C4               	clrf	??_sprintf+1
  2835  0774  1BC3               	btfsc	??_sprintf,7
  2836  0775  03C4               	decf	??_sprintf+1,f
  2837  0776  0844               	movf	??_sprintf+1,w
  2838  0777  3A80               	xorlw	128
  2839  0778  00C5               	movwf	??_sprintf+2
  2840  0779  3080               	movlw	128
  2841  077A  0245               	subwf	??_sprintf+2,w
  2842  077B  1D03               	skipz
  2843  077C  2F7F               	goto	u715
  2844  077D  084C               	movf	sprintf@c,w
  2845  077E  0243               	subwf	??_sprintf,w
  2846  077F                     u715:
  2847  077F  1803               	skipnc
  2848  0780  2F82               	goto	u711
  2849  0781  2F83               	goto	u710
  2850  0782                     u711:
  2851  0782  2F89               	goto	l1561
  2852  0783                     u710:
  2853  0783                     l1559:
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  2856  0783  1283               	bcf	3,5	;RP0=0, select bank0
  2857  0784  1303               	bcf	3,6	;RP1=0, select bank0
  2858  0785  084C               	movf	sprintf@c,w
  2859  0786  00C3               	movwf	??_sprintf
  2860  0787  0843               	movf	??_sprintf,w
  2861  0788  00CB               	movwf	sprintf@prec
  2862  0789                     l1561:
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2865  0789  1283               	bcf	3,5	;RP0=0, select bank0
  2866  078A  1303               	bcf	3,6	;RP1=0, select bank0
  2867  078B  0847               	movf	sprintf@flag,w
  2868  078C  3903               	andlw	3
  2869  078D  1903               	btfsc	3,2
  2870  078E  2F90               	goto	u721
  2871  078F  2F91               	goto	u720
  2872  0790                     u721:
  2873  0790  2FD3               	goto	l1573
  2874  0791                     u720:
  2875  0791                     l1563:
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2878  0791  302D               	movlw	45
  2879  0792  00C3               	movwf	??_sprintf
  2880  0793  084A               	movf	sprintf@sp,w
  2881  0794  0084               	movwf	4
  2882  0795  0843               	movf	??_sprintf,w
  2883  0796  1383               	bcf	3,7	;select IRP bank0
  2884  0797  0080               	movwf	0
  2885  0798                     l1565:
  2886  0798  3001               	movlw	1
  2887  0799  00C3               	movwf	??_sprintf
  2888  079A  0843               	movf	??_sprintf,w
  2889  079B  07CA               	addwf	sprintf@sp,f
  2890  079C  2FD3               	goto	l1573
  2891  079D                     l1567:
  2892                           
  2893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2894  079D  300A               	movlw	10
  2895  079E  00F8               	movwf	___lwmod@divisor
  2896  079F  3000               	movlw	0
  2897  07A0  00F9               	movwf	___lwmod@divisor+1
  2898  07A1  084B               	movf	sprintf@prec,w
  2899  07A2  00C3               	movwf	??_sprintf
  2900  07A3  0743               	addwf	??_sprintf,w
  2901  07A4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2902  07A5  0084               	movwf	4
  2903  07A6  120A  118A  2003  120A  118A  	fcall	stringdir
  2904  07AB  00F0               	movwf	___lwdiv@divisor
  2905  07AC  120A  118A  2003  120A  118A  	fcall	stringdir
  2906  07B1  00F1               	movwf	___lwdiv@divisor+1
  2907  07B2  0849               	movf	sprintf@val+1,w
  2908  07B3  00F3               	movwf	___lwdiv@dividend+1
  2909  07B4  0848               	movf	sprintf@val,w
  2910  07B5  00F2               	movwf	___lwdiv@dividend
  2911  07B6  120A  118A  241E  120A  118A  	fcall	___lwdiv
  2912  07BB  0871               	movf	?___lwdiv+1,w
  2913  07BC  00FB               	movwf	___lwmod@dividend+1
  2914  07BD  0870               	movf	?___lwdiv,w
  2915  07BE  00FA               	movwf	___lwmod@dividend
  2916  07BF  120A  118A  23E4  120A  118A  	fcall	___lwmod
  2917  07C4  0878               	movf	?___lwmod,w
  2918  07C5  3E30               	addlw	48
  2919  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  2920  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  2921  07C8  00C4               	movwf	??_sprintf+1
  2922  07C9  0844               	movf	??_sprintf+1,w
  2923  07CA  00CC               	movwf	sprintf@c
  2924  07CB                     l1569:
  2925                           
  2926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2927  07CB  084C               	movf	sprintf@c,w
  2928  07CC  00C3               	movwf	??_sprintf
  2929  07CD  084A               	movf	sprintf@sp,w
  2930  07CE  0084               	movwf	4
  2931  07CF  0843               	movf	??_sprintf,w
  2932  07D0  1383               	bcf	3,7	;select IRP bank0
  2933  07D1  0080               	movwf	0
  2934  07D2  2F98               	goto	l1565
  2935  07D3                     l1573:
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2938  07D3  30FF               	movlw	255
  2939  07D4  00C3               	movwf	??_sprintf
  2940  07D5  0843               	movf	??_sprintf,w
  2941  07D6  07CB               	addwf	sprintf@prec,f
  2942  07D7  0A4B               	incf	sprintf@prec,w
  2943  07D8  1D03               	btfss	3,2
  2944  07D9  2FDB               	goto	u731
  2945  07DA  2FDC               	goto	u730
  2946  07DB                     u731:
  2947  07DB  2F9D               	goto	l1567
  2948  07DC                     u730:
  2949  07DC                     l1575:
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2952  07DC  3001               	movlw	1
  2953  07DD  07C0               	addwf	sprintf@f,f
  2954  07DE  30FF               	movlw	-1
  2955  07DF  0740               	addwf	sprintf@f,w
  2956  07E0  0084               	movwf	4
  2957  07E1  120A  118A  2003  120A  118A  	fcall	stringdir
  2958  07E6  00C3               	movwf	??_sprintf
  2959  07E7  0843               	movf	??_sprintf,w
  2960  07E8  00CC               	movwf	sprintf@c
  2961  07E9  084C               	movf	sprintf@c,w
  2962  07EA  1D03               	btfss	3,2
  2963  07EB  2FED               	goto	u741
  2964  07EC  2FEE               	goto	u740
  2965  07ED                     u741:
  2966  07ED  2E98               	goto	l1499
  2967  07EE                     u740:
  2968  07EE                     l1577:
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2971  07EE  084A               	movf	sprintf@sp,w
  2972  07EF  0084               	movwf	4
  2973  07F0  1383               	bcf	3,7	;select IRP bank0
  2974  07F1  0180               	clrf	0
  2975  07F2                     l380:
  2976  07F2  0008               	return
  2977  07F3                     __end_of_sprintf:
  2978                           
  2979                           	psect	text16
  2980  02A8                     __ptext16:	
  2981 ;; *************** function _isdigit *****************
  2982 ;; Defined at:
  2983 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  c               1    wreg     unsigned char 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  c               1    1[COMMON] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;		None               void
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2997 ;;      Params:         0       0       0       0       0
  2998 ;;      Locals:         2       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0
  3000 ;;      Totals:         2       0       0       0       0
  3001 ;;Total ram usage:        2 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_sprintf
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           
  3011                           ;psect for function _isdigit
  3012  02A8                     _isdigit:
  3013                           
  3014                           ;incstack = 0
  3015                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3016                           ;isdigit@c stored from wreg
  3017  02A8  00F1               	movwf	isdigit@c
  3018  02A9                     l1385:
  3019  02A9  01F0               	clrf	_isdigit$1000
  3020  02AA                     l1387:
  3021  02AA  303A               	movlw	58
  3022  02AB  0271               	subwf	isdigit@c,w
  3023  02AC  1803               	skipnc
  3024  02AD  2AAF               	goto	u421
  3025  02AE  2AB0               	goto	u420
  3026  02AF                     u421:
  3027  02AF  2AB8               	goto	l1393
  3028  02B0                     u420:
  3029  02B0                     l1389:
  3030  02B0  3030               	movlw	48
  3031  02B1  0271               	subwf	isdigit@c,w
  3032  02B2  1C03               	skipc
  3033  02B3  2AB5               	goto	u431
  3034  02B4  2AB6               	goto	u430
  3035  02B5                     u431:
  3036  02B5  2AB8               	goto	l1393
  3037  02B6                     u430:
  3038  02B6                     l1391:
  3039  02B6  01F0               	clrf	_isdigit$1000
  3040  02B7  0AF0               	incf	_isdigit$1000,f
  3041  02B8                     l1393:
  3042  02B8  0C70               	rrf	_isdigit$1000,w
  3043  02B9                     l837:
  3044  02B9  0008               	return
  3045  02BA                     __end_of_isdigit:
  3046                           
  3047                           	psect	text17
  3048  03E4                     __ptext17:	
  3049 ;; *************** function ___lwmod *****************
  3050 ;; Defined at:
  3051 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  divisor         2    8[COMMON] unsigned int 
  3054 ;;  dividend        2   10[COMMON] unsigned int 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  counter         1   13[COMMON] unsigned char 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  2    8[COMMON] unsigned int 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3066 ;;      Params:         4       0       0       0       0
  3067 ;;      Locals:         1       0       0       0       0
  3068 ;;      Temps:          1       0       0       0       0
  3069 ;;      Totals:         6       0       0       0       0
  3070 ;;Total ram usage:        6 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; This function calls:
  3073 ;;		Nothing
  3074 ;; This function is called by:
  3075 ;;		_sprintf
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           
  3080                           ;psect for function ___lwmod
  3081  03E4                     ___lwmod:
  3082  03E4                     l1437:	
  3083                           ;incstack = 0
  3084                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3085                           
  3086  03E4  0878               	movf	___lwmod@divisor,w
  3087  03E5  0479               	iorwf	___lwmod@divisor+1,w
  3088  03E6  1903               	btfsc	3,2
  3089  03E7  2BE9               	goto	u531
  3090  03E8  2BEA               	goto	u530
  3091  03E9                     u531:
  3092  03E9  2C19               	goto	l1455
  3093  03EA                     u530:
  3094  03EA                     l1439:
  3095  03EA  01FD               	clrf	___lwmod@counter
  3096  03EB  0AFD               	incf	___lwmod@counter,f
  3097  03EC  2BF8               	goto	l1445
  3098  03ED                     l1441:
  3099  03ED  3001               	movlw	1
  3100  03EE                     u545:
  3101  03EE  1003               	clrc
  3102  03EF  0DF8               	rlf	___lwmod@divisor,f
  3103  03F0  0DF9               	rlf	___lwmod@divisor+1,f
  3104  03F1  3EFF               	addlw	-1
  3105  03F2  1D03               	skipz
  3106  03F3  2BEE               	goto	u545
  3107  03F4                     l1443:
  3108  03F4  3001               	movlw	1
  3109  03F5  00FC               	movwf	??___lwmod
  3110  03F6  087C               	movf	??___lwmod,w
  3111  03F7  07FD               	addwf	___lwmod@counter,f
  3112  03F8                     l1445:
  3113  03F8  1FF9               	btfss	___lwmod@divisor+1,7
  3114  03F9  2BFB               	goto	u551
  3115  03FA  2BFC               	goto	u550
  3116  03FB                     u551:
  3117  03FB  2BED               	goto	l1441
  3118  03FC                     u550:
  3119  03FC                     l1447:
  3120  03FC  0879               	movf	___lwmod@divisor+1,w
  3121  03FD  027B               	subwf	___lwmod@dividend+1,w
  3122  03FE  1D03               	skipz
  3123  03FF  2C02               	goto	u565
  3124  0400  0878               	movf	___lwmod@divisor,w
  3125  0401  027A               	subwf	___lwmod@dividend,w
  3126  0402                     u565:
  3127  0402  1C03               	skipc
  3128  0403  2C05               	goto	u561
  3129  0404  2C06               	goto	u560
  3130  0405                     u561:
  3131  0405  2C0C               	goto	l1451
  3132  0406                     u560:
  3133  0406                     l1449:
  3134  0406  0878               	movf	___lwmod@divisor,w
  3135  0407  02FA               	subwf	___lwmod@dividend,f
  3136  0408  0879               	movf	___lwmod@divisor+1,w
  3137  0409  1C03               	skipc
  3138  040A  03FB               	decf	___lwmod@dividend+1,f
  3139  040B  02FB               	subwf	___lwmod@dividend+1,f
  3140  040C                     l1451:
  3141  040C  3001               	movlw	1
  3142  040D                     u575:
  3143  040D  1003               	clrc
  3144  040E  0CF9               	rrf	___lwmod@divisor+1,f
  3145  040F  0CF8               	rrf	___lwmod@divisor,f
  3146  0410  3EFF               	addlw	-1
  3147  0411  1D03               	skipz
  3148  0412  2C0D               	goto	u575
  3149  0413                     l1453:
  3150  0413  3001               	movlw	1
  3151  0414  02FD               	subwf	___lwmod@counter,f
  3152  0415  1D03               	btfss	3,2
  3153  0416  2C18               	goto	u581
  3154  0417  2C19               	goto	u580
  3155  0418                     u581:
  3156  0418  2BFC               	goto	l1447
  3157  0419                     u580:
  3158  0419                     l1455:
  3159  0419  087B               	movf	___lwmod@dividend+1,w
  3160  041A  00F9               	movwf	?___lwmod+1
  3161  041B  087A               	movf	___lwmod@dividend,w
  3162  041C  00F8               	movwf	?___lwmod
  3163  041D                     l666:
  3164  041D  0008               	return
  3165  041E                     __end_of___lwmod:
  3166                           
  3167                           	psect	text18
  3168  041E                     __ptext18:	
  3169 ;; *************** function ___lwdiv *****************
  3170 ;; Defined at:
  3171 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  divisor         2    0[COMMON] unsigned int 
  3174 ;;  dividend        2    2[COMMON] unsigned int 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  quotient        2    5[COMMON] unsigned int 
  3177 ;;  counter         1    7[COMMON] unsigned char 
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  2    0[COMMON] unsigned int 
  3180 ;; Registers used:
  3181 ;;		wreg, status,2, status,0
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3187 ;;      Params:         4       0       0       0       0
  3188 ;;      Locals:         3       0       0       0       0
  3189 ;;      Temps:          1       0       0       0       0
  3190 ;;      Totals:         8       0       0       0       0
  3191 ;;Total ram usage:        8 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_sprintf
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           
  3201                           ;psect for function ___lwdiv
  3202  041E                     ___lwdiv:
  3203  041E                     l1411:	
  3204                           ;incstack = 0
  3205                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3206                           
  3207  041E  01F5               	clrf	___lwdiv@quotient
  3208  041F  01F6               	clrf	___lwdiv@quotient+1
  3209  0420                     l1413:
  3210  0420  0870               	movf	___lwdiv@divisor,w
  3211  0421  0471               	iorwf	___lwdiv@divisor+1,w
  3212  0422  1903               	btfsc	3,2
  3213  0423  2C25               	goto	u461
  3214  0424  2C26               	goto	u460
  3215  0425                     u461:
  3216  0425  2C5D               	goto	l1433
  3217  0426                     u460:
  3218  0426                     l1415:
  3219  0426  01F7               	clrf	___lwdiv@counter
  3220  0427  0AF7               	incf	___lwdiv@counter,f
  3221  0428  2C34               	goto	l1421
  3222  0429                     l1417:
  3223  0429  3001               	movlw	1
  3224  042A                     u475:
  3225  042A  1003               	clrc
  3226  042B  0DF0               	rlf	___lwdiv@divisor,f
  3227  042C  0DF1               	rlf	___lwdiv@divisor+1,f
  3228  042D  3EFF               	addlw	-1
  3229  042E  1D03               	skipz
  3230  042F  2C2A               	goto	u475
  3231  0430                     l1419:
  3232  0430  3001               	movlw	1
  3233  0431  00F4               	movwf	??___lwdiv
  3234  0432  0874               	movf	??___lwdiv,w
  3235  0433  07F7               	addwf	___lwdiv@counter,f
  3236  0434                     l1421:
  3237  0434  1FF1               	btfss	___lwdiv@divisor+1,7
  3238  0435  2C37               	goto	u481
  3239  0436  2C38               	goto	u480
  3240  0437                     u481:
  3241  0437  2C29               	goto	l1417
  3242  0438                     u480:
  3243  0438                     l1423:
  3244  0438  3001               	movlw	1
  3245  0439                     u495:
  3246  0439  1003               	clrc
  3247  043A  0DF5               	rlf	___lwdiv@quotient,f
  3248  043B  0DF6               	rlf	___lwdiv@quotient+1,f
  3249  043C  3EFF               	addlw	-1
  3250  043D  1D03               	skipz
  3251  043E  2C39               	goto	u495
  3252  043F  0871               	movf	___lwdiv@divisor+1,w
  3253  0440  0273               	subwf	___lwdiv@dividend+1,w
  3254  0441  1D03               	skipz
  3255  0442  2C45               	goto	u505
  3256  0443  0870               	movf	___lwdiv@divisor,w
  3257  0444  0272               	subwf	___lwdiv@dividend,w
  3258  0445                     u505:
  3259  0445  1C03               	skipc
  3260  0446  2C48               	goto	u501
  3261  0447  2C49               	goto	u500
  3262  0448                     u501:
  3263  0448  2C50               	goto	l1429
  3264  0449                     u500:
  3265  0449                     l1425:
  3266  0449  0870               	movf	___lwdiv@divisor,w
  3267  044A  02F2               	subwf	___lwdiv@dividend,f
  3268  044B  0871               	movf	___lwdiv@divisor+1,w
  3269  044C  1C03               	skipc
  3270  044D  03F3               	decf	___lwdiv@dividend+1,f
  3271  044E  02F3               	subwf	___lwdiv@dividend+1,f
  3272  044F                     l1427:
  3273  044F  1475               	bsf	___lwdiv@quotient,0
  3274  0450                     l1429:
  3275  0450  3001               	movlw	1
  3276  0451                     u515:
  3277  0451  1003               	clrc
  3278  0452  0CF1               	rrf	___lwdiv@divisor+1,f
  3279  0453  0CF0               	rrf	___lwdiv@divisor,f
  3280  0454  3EFF               	addlw	-1
  3281  0455  1D03               	skipz
  3282  0456  2C51               	goto	u515
  3283  0457                     l1431:
  3284  0457  3001               	movlw	1
  3285  0458  02F7               	subwf	___lwdiv@counter,f
  3286  0459  1D03               	btfss	3,2
  3287  045A  2C5C               	goto	u521
  3288  045B  2C5D               	goto	u520
  3289  045C                     u521:
  3290  045C  2C38               	goto	l1423
  3291  045D                     u520:
  3292  045D                     l1433:
  3293  045D  0876               	movf	___lwdiv@quotient+1,w
  3294  045E  00F1               	movwf	?___lwdiv+1
  3295  045F  0875               	movf	___lwdiv@quotient,w
  3296  0460  00F0               	movwf	?___lwdiv
  3297  0461                     l656:
  3298  0461  0008               	return
  3299  0462                     __end_of___lwdiv:
  3300                           
  3301                           	psect	text19
  3302  02BA                     __ptext19:	
  3303 ;; *************** function ___bmul *****************
  3304 ;; Defined at:
  3305 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;  multiplier      1    wreg     unsigned char 
  3308 ;;  multiplicand    1    0[COMMON] unsigned char 
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  multiplier      1    3[COMMON] unsigned char 
  3311 ;;  product         1    2[COMMON] unsigned char 
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      unsigned char 
  3314 ;; Registers used:
  3315 ;;		wreg, status,2, status,0
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3321 ;;      Params:         1       0       0       0       0
  3322 ;;      Locals:         2       0       0       0       0
  3323 ;;      Temps:          1       0       0       0       0
  3324 ;;      Totals:         4       0       0       0       0
  3325 ;;Total ram usage:        4 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_sprintf
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           
  3335                           ;psect for function ___bmul
  3336  02BA                     ___bmul:
  3337                           
  3338                           ;incstack = 0
  3339                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3340                           ;___bmul@multiplier stored from wreg
  3341  02BA  00F3               	movwf	___bmul@multiplier
  3342  02BB                     l1397:
  3343  02BB  01F2               	clrf	___bmul@product
  3344  02BC                     l1399:
  3345  02BC  1C73               	btfss	___bmul@multiplier,0
  3346  02BD  2ABF               	goto	u441
  3347  02BE  2AC0               	goto	u440
  3348  02BF                     u441:
  3349  02BF  2AC4               	goto	l1403
  3350  02C0                     u440:
  3351  02C0                     l1401:
  3352  02C0  0870               	movf	___bmul@multiplicand,w
  3353  02C1  00F1               	movwf	??___bmul
  3354  02C2  0871               	movf	??___bmul,w
  3355  02C3  07F2               	addwf	___bmul@product,f
  3356  02C4                     l1403:
  3357  02C4  1003               	clrc
  3358  02C5  0DF0               	rlf	___bmul@multiplicand,f
  3359  02C6                     l1405:
  3360  02C6  1003               	clrc
  3361  02C7  0CF3               	rrf	___bmul@multiplier,f
  3362  02C8  0873               	movf	___bmul@multiplier,w
  3363  02C9  1D03               	btfss	3,2
  3364  02CA  2ACC               	goto	u451
  3365  02CB  2ACD               	goto	u450
  3366  02CC                     u451:
  3367  02CC  2ABC               	goto	l1399
  3368  02CD                     u450:
  3369  02CD                     l1407:
  3370  02CD  0872               	movf	___bmul@product,w
  3371  02CE                     l410:
  3372  02CE  0008               	return
  3373  02CF                     __end_of___bmul:
  3374                           
  3375                           	psect	text20
  3376  031B                     __ptext20:	
  3377 ;; *************** function _ADC_channel2 *****************
  3378 ;; Defined at:
  3379 ;;		line 171 in file "pseudocodigo_lab3.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;		None
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;		None
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  1    wreg      void 
  3386 ;; Registers used:
  3387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3393 ;;      Params:         0       0       0       0       0
  3394 ;;      Locals:         0       0       0       0       0
  3395 ;;      Temps:          2       0       0       0       0
  3396 ;;      Totals:         2       0       0       0       0
  3397 ;;Total ram usage:        2 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; Hardware stack levels required when called:    1
  3400 ;; This function calls:
  3401 ;;		_ADC_Config
  3402 ;; This function is called by:
  3403 ;;		_main
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           
  3408                           ;psect for function _ADC_channel2
  3409  031B                     _ADC_channel2:
  3410  031B                     l1657:	
  3411                           ;incstack = 0
  3412                           ; Regs used in _ADC_channel2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3413                           
  3414                           
  3415                           ;pseudocodigo_lab3.c: 172:     ADC_Config (1);
  3416  031B  3001               	movlw	1
  3417  031C  120A  118A  25D4  120A  118A  	fcall	_ADC_Config
  3418  0321                     l1659:
  3419                           
  3420                           ;pseudocodigo_lab3.c: 173:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3421  0321  3003               	movlw	3
  3422  0322  00F4               	movwf	??_ADC_channel2+1
  3423  0323  3097               	movlw	151
  3424  0324  00F3               	movwf	??_ADC_channel2
  3425  0325                     u907:
  3426  0325  0BF3               	decfsz	??_ADC_channel2,f
  3427  0326  2B25               	goto	u907
  3428  0327  0BF4               	decfsz	??_ADC_channel2+1,f
  3429  0328  2B25               	goto	u907
  3430  0329  2B2A               	nop2
  3431  032A                     l1661:
  3432                           
  3433                           ;pseudocodigo_lab3.c: 174:     ADCON0bits.GO = 1;
  3434  032A  1283               	bcf	3,5	;RP0=0, select bank0
  3435  032B  1303               	bcf	3,6	;RP1=0, select bank0
  3436  032C  149F               	bsf	31,1	;volatile
  3437                           
  3438                           ;pseudocodigo_lab3.c: 175:     while (ADCON0bits.GO != 0) {
  3439  032D  2B32               	goto	l1665
  3440  032E                     l1663:
  3441                           
  3442                           ;pseudocodigo_lab3.c: 176:         S2_val = ADRESH;
  3443  032E  081E               	movf	30,w	;volatile
  3444  032F  00F3               	movwf	??_ADC_channel2
  3445  0330  0873               	movf	??_ADC_channel2,w
  3446  0331  00AE               	movwf	_S2_val
  3447  0332                     l1665:
  3448                           
  3449                           ;pseudocodigo_lab3.c: 175:     while (ADCON0bits.GO != 0) {
  3450  0332  189F               	btfsc	31,1	;volatile
  3451  0333  2B35               	goto	u761
  3452  0334  2B36               	goto	u760
  3453  0335                     u761:
  3454  0335  2B2E               	goto	l1663
  3455  0336                     u760:
  3456  0336                     l111:
  3457  0336  0008               	return
  3458  0337                     __end_of_ADC_channel2:
  3459                           
  3460                           	psect	text21
  3461  02FF                     __ptext21:	
  3462 ;; *************** function _ADC_channel1 *****************
  3463 ;; Defined at:
  3464 ;;		line 161 in file "pseudocodigo_lab3.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;		None
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3478 ;;      Params:         0       0       0       0       0
  3479 ;;      Locals:         0       0       0       0       0
  3480 ;;      Temps:          2       0       0       0       0
  3481 ;;      Totals:         2       0       0       0       0
  3482 ;;Total ram usage:        2 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; Hardware stack levels required when called:    1
  3485 ;; This function calls:
  3486 ;;		_ADC_Config
  3487 ;; This function is called by:
  3488 ;;		_main
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           
  3493                           ;psect for function _ADC_channel1
  3494  02FF                     _ADC_channel1:
  3495  02FF                     l1647:	
  3496                           ;incstack = 0
  3497                           ; Regs used in _ADC_channel1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3498                           
  3499                           
  3500                           ;pseudocodigo_lab3.c: 162:     ADC_Config (0);
  3501  02FF  3000               	movlw	0
  3502  0300  120A  118A  25D4  120A  118A  	fcall	_ADC_Config
  3503  0305                     l1649:
  3504                           
  3505                           ;pseudocodigo_lab3.c: 163:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3506  0305  3003               	movlw	3
  3507  0306  00F4               	movwf	??_ADC_channel1+1
  3508  0307  3097               	movlw	151
  3509  0308  00F3               	movwf	??_ADC_channel1
  3510  0309                     u917:
  3511  0309  0BF3               	decfsz	??_ADC_channel1,f
  3512  030A  2B09               	goto	u917
  3513  030B  0BF4               	decfsz	??_ADC_channel1+1,f
  3514  030C  2B09               	goto	u917
  3515  030D  2B0E               	nop2
  3516  030E                     l1651:
  3517                           
  3518                           ;pseudocodigo_lab3.c: 164:     ADCON0bits.GO = 1;
  3519  030E  1283               	bcf	3,5	;RP0=0, select bank0
  3520  030F  1303               	bcf	3,6	;RP1=0, select bank0
  3521  0310  149F               	bsf	31,1	;volatile
  3522                           
  3523                           ;pseudocodigo_lab3.c: 165:     while (ADCON0bits.GO != 0) {
  3524  0311  2B16               	goto	l1655
  3525  0312                     l1653:
  3526                           
  3527                           ;pseudocodigo_lab3.c: 166:         S1_val = ADRESH;
  3528  0312  081E               	movf	30,w	;volatile
  3529  0313  00F3               	movwf	??_ADC_channel1
  3530  0314  0873               	movf	??_ADC_channel1,w
  3531  0315  00AF               	movwf	_S1_val
  3532  0316                     l1655:
  3533                           
  3534                           ;pseudocodigo_lab3.c: 165:     while (ADCON0bits.GO != 0) {
  3535  0316  189F               	btfsc	31,1	;volatile
  3536  0317  2B19               	goto	u751
  3537  0318  2B1A               	goto	u750
  3538  0319                     u751:
  3539  0319  2B12               	goto	l1653
  3540  031A                     u750:
  3541  031A                     l105:
  3542  031A  0008               	return
  3543  031B                     __end_of_ADC_channel1:
  3544                           
  3545                           	psect	text22
  3546  05D4                     __ptext22:	
  3547 ;; *************** function _ADC_Config *****************
  3548 ;; Defined at:
  3549 ;;		line 31 in file "Config_ADC.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  AN_num          1    wreg     unsigned char 
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;  AN_num          1    2[COMMON] unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3563 ;;      Params:         0       0       0       0       0
  3564 ;;      Locals:         1       0       0       0       0
  3565 ;;      Temps:          2       0       0       0       0
  3566 ;;      Totals:         3       0       0       0       0
  3567 ;;Total ram usage:        3 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; This function calls:
  3570 ;;		Nothing
  3571 ;; This function is called by:
  3572 ;;		_ADC_channel1
  3573 ;;		_ADC_channel2
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           
  3578                           ;psect for function _ADC_Config
  3579  05D4                     _ADC_Config:
  3580                           
  3581                           ;incstack = 0
  3582                           ; Regs used in _ADC_Config: [wreg-fsr0h+status,2+status,0]
  3583                           ;ADC_Config@AN_num stored from wreg
  3584  05D4  00F2               	movwf	ADC_Config@AN_num
  3585  05D5                     l1479:
  3586                           
  3587                           ;Config_ADC.c: 33:     switch(AN_num){
  3588  05D5  2E4D               	goto	l1483
  3589  05D6                     l218:	
  3590                           ;Config_ADC.c: 34:         case 0:
  3591                           
  3592                           
  3593                           ;Config_ADC.c: 35:             ADCON0bits.CHS3 = 0;
  3594  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  3595  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  3596  05D8  129F               	bcf	31,5	;volatile
  3597                           
  3598                           ;Config_ADC.c: 36:             ADCON0bits.CHS2 = 0;
  3599  05D9  121F               	bcf	31,4	;volatile
  3600                           
  3601                           ;Config_ADC.c: 37:             ADCON0bits.CHS1 = 0;
  3602  05DA  119F               	bcf	31,3	;volatile
  3603                           
  3604                           ;Config_ADC.c: 38:             ADCON0bits.CHS0 = 0;
  3605  05DB  111F               	bcf	31,2	;volatile
  3606                           
  3607                           ;Config_ADC.c: 39:             break;
  3608  05DC  2E87               	goto	l1485
  3609  05DD                     l220:	
  3610                           ;Config_ADC.c: 40:         case 1:
  3611                           
  3612                           
  3613                           ;Config_ADC.c: 41:             ADCON0bits.CHS3 = 0;
  3614  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3615  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  3616  05DF  129F               	bcf	31,5	;volatile
  3617                           
  3618                           ;Config_ADC.c: 42:             ADCON0bits.CHS2 = 0;
  3619  05E0  121F               	bcf	31,4	;volatile
  3620                           
  3621                           ;Config_ADC.c: 43:             ADCON0bits.CHS1 = 0;
  3622  05E1  119F               	bcf	31,3	;volatile
  3623                           
  3624                           ;Config_ADC.c: 44:             ADCON0bits.CHS0 = 1;
  3625  05E2  151F               	bsf	31,2	;volatile
  3626                           
  3627                           ;Config_ADC.c: 45:             break;
  3628  05E3  2E87               	goto	l1485
  3629  05E4                     l221:	
  3630                           ;Config_ADC.c: 46:         case 2:
  3631                           
  3632                           
  3633                           ;Config_ADC.c: 47:             ADCON0bits.CHS3 = 0;
  3634  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  3635  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  3636  05E6  129F               	bcf	31,5	;volatile
  3637                           
  3638                           ;Config_ADC.c: 48:             ADCON0bits.CHS2 = 0;
  3639  05E7  121F               	bcf	31,4	;volatile
  3640                           
  3641                           ;Config_ADC.c: 49:             ADCON0bits.CHS1 = 1;
  3642  05E8  159F               	bsf	31,3	;volatile
  3643                           
  3644                           ;Config_ADC.c: 50:             ADCON0bits.CHS0 = 0;
  3645  05E9  111F               	bcf	31,2	;volatile
  3646                           
  3647                           ;Config_ADC.c: 51:             break;
  3648  05EA  2E87               	goto	l1485
  3649  05EB                     l222:	
  3650                           ;Config_ADC.c: 52:         case 3:
  3651                           
  3652                           
  3653                           ;Config_ADC.c: 53:             ADCON0bits.CHS3 = 0;
  3654  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3655  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  3656  05ED  129F               	bcf	31,5	;volatile
  3657                           
  3658                           ;Config_ADC.c: 54:             ADCON0bits.CHS2 = 0;
  3659  05EE  121F               	bcf	31,4	;volatile
  3660                           
  3661                           ;Config_ADC.c: 55:             ADCON0bits.CHS1 = 1;
  3662  05EF  159F               	bsf	31,3	;volatile
  3663                           
  3664                           ;Config_ADC.c: 56:             ADCON0bits.CHS0 = 1;
  3665  05F0  151F               	bsf	31,2	;volatile
  3666                           
  3667                           ;Config_ADC.c: 57:             break;
  3668  05F1  2E87               	goto	l1485
  3669  05F2                     l223:	
  3670                           ;Config_ADC.c: 58:         case 4:
  3671                           
  3672                           
  3673                           ;Config_ADC.c: 59:             ADCON0bits.CHS3 = 0;
  3674  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  3675  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  3676  05F4  129F               	bcf	31,5	;volatile
  3677                           
  3678                           ;Config_ADC.c: 60:             ADCON0bits.CHS2 = 1;
  3679  05F5  161F               	bsf	31,4	;volatile
  3680                           
  3681                           ;Config_ADC.c: 61:             ADCON0bits.CHS1 = 0;
  3682  05F6  119F               	bcf	31,3	;volatile
  3683                           
  3684                           ;Config_ADC.c: 62:             ADCON0bits.CHS0 = 0;
  3685  05F7  111F               	bcf	31,2	;volatile
  3686                           
  3687                           ;Config_ADC.c: 63:             break;
  3688  05F8  2E87               	goto	l1485
  3689  05F9                     l224:	
  3690                           ;Config_ADC.c: 64:         case 5:
  3691                           
  3692                           
  3693                           ;Config_ADC.c: 65:             ADCON0bits.CHS3 = 0;
  3694  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  3695  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  3696  05FB  129F               	bcf	31,5	;volatile
  3697                           
  3698                           ;Config_ADC.c: 66:             ADCON0bits.CHS2 = 1;
  3699  05FC  161F               	bsf	31,4	;volatile
  3700                           
  3701                           ;Config_ADC.c: 67:             ADCON0bits.CHS1 = 0;
  3702  05FD  119F               	bcf	31,3	;volatile
  3703                           
  3704                           ;Config_ADC.c: 68:             ADCON0bits.CHS0 = 1;
  3705  05FE  151F               	bsf	31,2	;volatile
  3706                           
  3707                           ;Config_ADC.c: 69:             break;
  3708  05FF  2E87               	goto	l1485
  3709  0600                     l225:	
  3710                           ;Config_ADC.c: 70:         case 6:
  3711                           
  3712                           
  3713                           ;Config_ADC.c: 71:             ADCON0bits.CHS3 = 0;
  3714  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3715  0601  1303               	bcf	3,6	;RP1=0, select bank0
  3716  0602  129F               	bcf	31,5	;volatile
  3717                           
  3718                           ;Config_ADC.c: 72:             ADCON0bits.CHS2 = 1;
  3719  0603  161F               	bsf	31,4	;volatile
  3720                           
  3721                           ;Config_ADC.c: 73:             ADCON0bits.CHS1 = 1;
  3722  0604  159F               	bsf	31,3	;volatile
  3723                           
  3724                           ;Config_ADC.c: 74:             ADCON0bits.CHS0 = 0;
  3725  0605  111F               	bcf	31,2	;volatile
  3726                           
  3727                           ;Config_ADC.c: 75:             break;
  3728  0606  2E87               	goto	l1485
  3729  0607                     l226:	
  3730                           ;Config_ADC.c: 76:         case 7:
  3731                           
  3732                           
  3733                           ;Config_ADC.c: 77:             ADCON0bits.CHS3 = 0;
  3734  0607  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0608  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0609  129F               	bcf	31,5	;volatile
  3737                           
  3738                           ;Config_ADC.c: 78:             ADCON0bits.CHS2 = 1;
  3739  060A  161F               	bsf	31,4	;volatile
  3740                           
  3741                           ;Config_ADC.c: 79:             ADCON0bits.CHS1 = 1;
  3742  060B  159F               	bsf	31,3	;volatile
  3743                           
  3744                           ;Config_ADC.c: 80:             ADCON0bits.CHS0 = 1;
  3745  060C  151F               	bsf	31,2	;volatile
  3746                           
  3747                           ;Config_ADC.c: 81:             break;
  3748  060D  2E87               	goto	l1485
  3749  060E                     l227:	
  3750                           ;Config_ADC.c: 82:         case 8:
  3751                           
  3752                           
  3753                           ;Config_ADC.c: 83:             ADCON0bits.CHS3 = 1;
  3754  060E  1283               	bcf	3,5	;RP0=0, select bank0
  3755  060F  1303               	bcf	3,6	;RP1=0, select bank0
  3756  0610  169F               	bsf	31,5	;volatile
  3757                           
  3758                           ;Config_ADC.c: 84:             ADCON0bits.CHS2 = 0;
  3759  0611  121F               	bcf	31,4	;volatile
  3760                           
  3761                           ;Config_ADC.c: 85:             ADCON0bits.CHS1 = 0;
  3762  0612  119F               	bcf	31,3	;volatile
  3763                           
  3764                           ;Config_ADC.c: 86:             ADCON0bits.CHS0 = 0;
  3765  0613  111F               	bcf	31,2	;volatile
  3766                           
  3767                           ;Config_ADC.c: 87:             break;
  3768  0614  2E87               	goto	l1485
  3769  0615                     l228:	
  3770                           ;Config_ADC.c: 88:         case 9:
  3771                           
  3772                           
  3773                           ;Config_ADC.c: 89:             ADCON0bits.CHS3 = 1;
  3774  0615  1283               	bcf	3,5	;RP0=0, select bank0
  3775  0616  1303               	bcf	3,6	;RP1=0, select bank0
  3776  0617  169F               	bsf	31,5	;volatile
  3777                           
  3778                           ;Config_ADC.c: 90:             ADCON0bits.CHS2 = 0;
  3779  0618  121F               	bcf	31,4	;volatile
  3780                           
  3781                           ;Config_ADC.c: 91:             ADCON0bits.CHS1 = 0;
  3782  0619  119F               	bcf	31,3	;volatile
  3783                           
  3784                           ;Config_ADC.c: 92:             ADCON0bits.CHS0 = 1;
  3785  061A  151F               	bsf	31,2	;volatile
  3786                           
  3787                           ;Config_ADC.c: 93:             break;
  3788  061B  2E87               	goto	l1485
  3789  061C                     l229:	
  3790                           ;Config_ADC.c: 94:         case 10:
  3791                           
  3792                           
  3793                           ;Config_ADC.c: 95:             ADCON0bits.CHS3 = 1;
  3794  061C  1283               	bcf	3,5	;RP0=0, select bank0
  3795  061D  1303               	bcf	3,6	;RP1=0, select bank0
  3796  061E  169F               	bsf	31,5	;volatile
  3797                           
  3798                           ;Config_ADC.c: 96:             ADCON0bits.CHS2 = 0;
  3799  061F  121F               	bcf	31,4	;volatile
  3800                           
  3801                           ;Config_ADC.c: 97:             ADCON0bits.CHS1 = 1;
  3802  0620  159F               	bsf	31,3	;volatile
  3803                           
  3804                           ;Config_ADC.c: 98:             ADCON0bits.CHS0 = 0;
  3805  0621  111F               	bcf	31,2	;volatile
  3806                           
  3807                           ;Config_ADC.c: 99:             break;
  3808  0622  2E87               	goto	l1485
  3809  0623                     l230:	
  3810                           ;Config_ADC.c: 100:         case 11:
  3811                           
  3812                           
  3813                           ;Config_ADC.c: 101:             ADCON0bits.CHS3 = 1;
  3814  0623  1283               	bcf	3,5	;RP0=0, select bank0
  3815  0624  1303               	bcf	3,6	;RP1=0, select bank0
  3816  0625  169F               	bsf	31,5	;volatile
  3817                           
  3818                           ;Config_ADC.c: 102:             ADCON0bits.CHS2 = 0;
  3819  0626  121F               	bcf	31,4	;volatile
  3820                           
  3821                           ;Config_ADC.c: 103:             ADCON0bits.CHS1 = 1;
  3822  0627  159F               	bsf	31,3	;volatile
  3823                           
  3824                           ;Config_ADC.c: 104:             ADCON0bits.CHS0 = 1;
  3825  0628  151F               	bsf	31,2	;volatile
  3826                           
  3827                           ;Config_ADC.c: 105:             break;
  3828  0629  2E87               	goto	l1485
  3829  062A                     l231:	
  3830                           ;Config_ADC.c: 106:         case 12:
  3831                           
  3832                           
  3833                           ;Config_ADC.c: 107:             ADCON0bits.CHS3 = 1;
  3834  062A  1283               	bcf	3,5	;RP0=0, select bank0
  3835  062B  1303               	bcf	3,6	;RP1=0, select bank0
  3836  062C  169F               	bsf	31,5	;volatile
  3837                           
  3838                           ;Config_ADC.c: 108:             ADCON0bits.CHS2 = 1;
  3839  062D  161F               	bsf	31,4	;volatile
  3840                           
  3841                           ;Config_ADC.c: 109:             ADCON0bits.CHS1 = 0;
  3842  062E  119F               	bcf	31,3	;volatile
  3843                           
  3844                           ;Config_ADC.c: 110:             ADCON0bits.CHS0 = 0;
  3845  062F  111F               	bcf	31,2	;volatile
  3846                           
  3847                           ;Config_ADC.c: 111:             break;
  3848  0630  2E87               	goto	l1485
  3849  0631                     l232:	
  3850                           ;Config_ADC.c: 112:         case 13:
  3851                           
  3852                           
  3853                           ;Config_ADC.c: 113:             ADCON0bits.CHS3 = 1;
  3854  0631  1283               	bcf	3,5	;RP0=0, select bank0
  3855  0632  1303               	bcf	3,6	;RP1=0, select bank0
  3856  0633  169F               	bsf	31,5	;volatile
  3857                           
  3858                           ;Config_ADC.c: 114:             ADCON0bits.CHS2 = 1;
  3859  0634  161F               	bsf	31,4	;volatile
  3860                           
  3861                           ;Config_ADC.c: 115:             ADCON0bits.CHS1 = 0;
  3862  0635  119F               	bcf	31,3	;volatile
  3863                           
  3864                           ;Config_ADC.c: 116:             ADCON0bits.CHS0 = 1;
  3865  0636  151F               	bsf	31,2	;volatile
  3866                           
  3867                           ;Config_ADC.c: 117:             break;
  3868  0637  2E87               	goto	l1485
  3869  0638                     l233:	
  3870                           ;Config_ADC.c: 118:         case 14:
  3871                           
  3872                           
  3873                           ;Config_ADC.c: 119:             ADCON0bits.CHS3 = 1;
  3874  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3875  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3876  063A  169F               	bsf	31,5	;volatile
  3877                           
  3878                           ;Config_ADC.c: 120:             ADCON0bits.CHS2 = 1;
  3879  063B  161F               	bsf	31,4	;volatile
  3880                           
  3881                           ;Config_ADC.c: 121:             ADCON0bits.CHS1 = 1;
  3882  063C  159F               	bsf	31,3	;volatile
  3883                           
  3884                           ;Config_ADC.c: 122:             ADCON0bits.CHS0 = 0;
  3885  063D  111F               	bcf	31,2	;volatile
  3886                           
  3887                           ;Config_ADC.c: 123:             break;
  3888  063E  2E87               	goto	l1485
  3889  063F                     l234:	
  3890                           ;Config_ADC.c: 124:         case 15:
  3891                           
  3892                           
  3893                           ;Config_ADC.c: 125:             ADCON0bits.CHS3 = 1;
  3894  063F  1283               	bcf	3,5	;RP0=0, select bank0
  3895  0640  1303               	bcf	3,6	;RP1=0, select bank0
  3896  0641  169F               	bsf	31,5	;volatile
  3897                           
  3898                           ;Config_ADC.c: 126:             ADCON0bits.CHS2 = 1;
  3899  0642  161F               	bsf	31,4	;volatile
  3900                           
  3901                           ;Config_ADC.c: 127:             ADCON0bits.CHS1 = 1;
  3902  0643  159F               	bsf	31,3	;volatile
  3903                           
  3904                           ;Config_ADC.c: 128:             ADCON0bits.CHS0 = 1;
  3905  0644  151F               	bsf	31,2	;volatile
  3906                           
  3907                           ;Config_ADC.c: 129:             break;
  3908  0645  2E87               	goto	l1485
  3909  0646                     l235:	
  3910                           ;Config_ADC.c: 130:         default:
  3911                           
  3912                           
  3913                           ;Config_ADC.c: 131:             ADCON0bits.CHS3 = 0;
  3914  0646  1283               	bcf	3,5	;RP0=0, select bank0
  3915  0647  1303               	bcf	3,6	;RP1=0, select bank0
  3916  0648  129F               	bcf	31,5	;volatile
  3917                           
  3918                           ;Config_ADC.c: 132:             ADCON0bits.CHS2 = 0;
  3919  0649  121F               	bcf	31,4	;volatile
  3920                           
  3921                           ;Config_ADC.c: 133:             ADCON0bits.CHS1 = 0;
  3922  064A  119F               	bcf	31,3	;volatile
  3923                           
  3924                           ;Config_ADC.c: 134:             ADCON0bits.CHS0 = 0;
  3925  064B  111F               	bcf	31,2	;volatile
  3926                           
  3927                           ;Config_ADC.c: 135:             break;
  3928  064C  2E87               	goto	l1485
  3929  064D                     l1483:
  3930  064D  0872               	movf	ADC_Config@AN_num,w
  3931  064E  00F0               	movwf	??_ADC_Config
  3932  064F  01F1               	clrf	??_ADC_Config+1
  3933                           
  3934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3935                           ; Switch size 1, requested type "simple"
  3936                           ; Number of cases is 1, Range of values is 0 to 0
  3937                           ; switch strategies available:
  3938                           ; Name         Instructions Cycles
  3939                           ; simple_byte            4     3 (average)
  3940                           ; direct_byte           11     8 (fixed)
  3941                           ; jumptable            260     6 (fixed)
  3942                           ;	Chosen strategy is simple_byte
  3943  0650  0871               	movf	??_ADC_Config+1,w
  3944  0651  3A00               	xorlw	0	; case 0
  3945  0652  1903               	skipnz
  3946  0653  2E55               	goto	l1833
  3947  0654  2E46               	goto	l235
  3948  0655                     l1833:
  3949                           
  3950                           ; Switch size 1, requested type "simple"
  3951                           ; Number of cases is 16, Range of values is 0 to 15
  3952                           ; switch strategies available:
  3953                           ; Name         Instructions Cycles
  3954                           ; simple_byte           49    25 (average)
  3955                           ; direct_byte           56     8 (fixed)
  3956                           ; jumptable            260     6 (fixed)
  3957                           ;	Chosen strategy is simple_byte
  3958  0655  0870               	movf	??_ADC_Config,w
  3959  0656  3A00               	xorlw	0	; case 0
  3960  0657  1903               	skipnz
  3961  0658  2DD6               	goto	l218
  3962  0659  3A01               	xorlw	1	; case 1
  3963  065A  1903               	skipnz
  3964  065B  2DDD               	goto	l220
  3965  065C  3A03               	xorlw	3	; case 2
  3966  065D  1903               	skipnz
  3967  065E  2DE4               	goto	l221
  3968  065F  3A01               	xorlw	1	; case 3
  3969  0660  1903               	skipnz
  3970  0661  2DEB               	goto	l222
  3971  0662  3A07               	xorlw	7	; case 4
  3972  0663  1903               	skipnz
  3973  0664  2DF2               	goto	l223
  3974  0665  3A01               	xorlw	1	; case 5
  3975  0666  1903               	skipnz
  3976  0667  2DF9               	goto	l224
  3977  0668  3A03               	xorlw	3	; case 6
  3978  0669  1903               	skipnz
  3979  066A  2E00               	goto	l225
  3980  066B  3A01               	xorlw	1	; case 7
  3981  066C  1903               	skipnz
  3982  066D  2E07               	goto	l226
  3983  066E  3A0F               	xorlw	15	; case 8
  3984  066F  1903               	skipnz
  3985  0670  2E0E               	goto	l227
  3986  0671  3A01               	xorlw	1	; case 9
  3987  0672  1903               	skipnz
  3988  0673  2E15               	goto	l228
  3989  0674  3A03               	xorlw	3	; case 10
  3990  0675  1903               	skipnz
  3991  0676  2E1C               	goto	l229
  3992  0677  3A01               	xorlw	1	; case 11
  3993  0678  1903               	skipnz
  3994  0679  2E23               	goto	l230
  3995  067A  3A07               	xorlw	7	; case 12
  3996  067B  1903               	skipnz
  3997  067C  2E2A               	goto	l231
  3998  067D  3A01               	xorlw	1	; case 13
  3999  067E  1903               	skipnz
  4000  067F  2E31               	goto	l232
  4001  0680  3A03               	xorlw	3	; case 14
  4002  0681  1903               	skipnz
  4003  0682  2E38               	goto	l233
  4004  0683  3A01               	xorlw	1	; case 15
  4005  0684  1903               	skipnz
  4006  0685  2E3F               	goto	l234
  4007  0686  2E46               	goto	l235
  4008  0687                     l1485:
  4009                           
  4010                           ;Config_ADC.c: 137:     ADCON1 = 0b00000000;
  4011  0687  1683               	bsf	3,5	;RP0=1, select bank1
  4012  0688  1303               	bcf	3,6	;RP1=0, select bank1
  4013  0689  019F               	clrf	31	;volatile
  4014  068A                     l1487:
  4015                           
  4016                           ;Config_ADC.c: 138:     ADCON0bits.ADCS1 = 1;
  4017  068A  1283               	bcf	3,5	;RP0=0, select bank0
  4018  068B  1303               	bcf	3,6	;RP1=0, select bank0
  4019  068C  179F               	bsf	31,7	;volatile
  4020  068D                     l1489:
  4021                           
  4022                           ;Config_ADC.c: 139:     ADCON0bits.ADCS0 = 0;
  4023  068D  131F               	bcf	31,6	;volatile
  4024  068E                     l1491:
  4025                           
  4026                           ;Config_ADC.c: 140:     ADCON0bits.ADON = 1;
  4027  068E  141F               	bsf	31,0	;volatile
  4028  068F                     l236:
  4029  068F  0008               	return
  4030  0690                     __end_of_ADC_Config:
  4031  007E                     btemp	set	126	;btemp
  4032  007E                     wtemp0	set	126
  4033                           
  4034                           	psect	config
  4035                           
  4036                           ;Config register CONFIG1 @ 0x2007
  4037                           ;	Oscillator Selection bits
  4038                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4039                           ;	Watchdog Timer Enable bit
  4040                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4041                           ;	Power-up Timer Enable bit
  4042                           ;	PWRTE = OFF, PWRT disabled
  4043                           ;	RE3/MCLR pin function select bit
  4044                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4045                           ;	Code Protection bit
  4046                           ;	CP = OFF, Program memory code protection is disabled
  4047                           ;	Data Code Protection bit
  4048                           ;	CPD = OFF, Data memory code protection is disabled
  4049                           ;	Brown Out Reset Selection bits
  4050                           ;	BOREN = ON, BOR enabled
  4051                           ;	Internal External Switchover bit
  4052                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4053                           ;	Fail-Safe Clock Monitor Enabled bit
  4054                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4055                           ;	Low Voltage Programming Enable bit
  4056                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4057                           ;	In-Circuit Debugger Mode bit
  4058                           ;	DEBUG = 0x1, unprogrammed default
  4059  2007                     	org	8199
  4060  2007  23D4               	dw	9172
  4061                           
  4062                           ;Config register CONFIG2 @ 0x2008
  4063                           ;	Brown-out Reset Selection bit
  4064                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4065                           ;	Flash Program Memory Self Write Enable bits
  4066                           ;	WRT = OFF, Write protection off
  4067  2008                     	org	8200
  4068  2008  3FFF               	dw	16383

Data Sizes:
    Strings     21
    Constant    10
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[6]), STR_2(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> data1(BANK0[8]), data2(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 

    data1	PTR unsigned char [8] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    data2	PTR unsigned char [8] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMMON

    _titulos_LCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _setup->_initOsc
    _Show_val_LCD->_Lcd_Set_Cursor
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _ADC_channel2->_ADC_Config
    _ADC_channel1->_ADC_Config

Critical Paths under _main in BANK0

    _main->_ADC_to_string
    _ADC_to_string->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2961
                                             16 BANK0      2     2      0
                       _ADC_channel1
                       _ADC_channel2
                      _ADC_to_string
                           _Lcd_Init
                       _Show_val_LCD
                        _Trasmission
                         _USART_Init
                _USART_Init_BaudRate
                              _setup
                        _titulos_LCD
 ---------------------------------------------------------------------------------
 (1) _titulos_LCD                                          1     1      0     573
                                              8 COMMON     1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     167
                                              3 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init_BaudRate                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Trasmission                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Show_val_LCD                                         2     2      0     450
                                              8 COMMON     2     2      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     406
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_to_string                                        3     3      0    1806
                                             13 BANK0      3     3      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1806
                                              0 BANK0     13    10      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ADC_channel2                                         2     2      0      22
                                              3 COMMON     2     2      0
                         _ADC_Config
 ---------------------------------------------------------------------------------
 (1) _ADC_channel1                                         2     2      0      22
                                              3 COMMON     2     2      0
                         _ADC_Config
 ---------------------------------------------------------------------------------
 (2) _ADC_Config                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_channel1
     _ADC_Config
   _ADC_channel2
     _ADC_Config
   _ADC_to_string
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _isdigit
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Show_val_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
   _Trasmission
   _USART_Init
   _USART_Init_BaudRate
   _setup
     _initOsc
   _titulos_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      40       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      32       5       62.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      40      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 11:23:37 2021

                           pc 0002                ___bmul@product 0072                            l92 04F7  
                          l99 02A7                            fsr 0004           __size_of_ADC_Config 00BC  
                         l111 0336                           l105 031A                           l114 03E3  
                         l220 05DD                           l124 0371                           l140 052A  
                         l221 05E4                           l117 05D3                           l141 0530  
                         l133 0506                           l230 0623                           l222 05EB  
                         l142 0536                           l134 055E                           l231 062A  
                         l223 05F2                           l143 055F                           l135 050C  
                         l127 0352                           l232 0631                           l224 05F9  
                         l136 0512                           l233 0638                           l225 0600  
                         l137 0518                           l234 063F                           l226 0607  
                         l218 05D6                           l410 02CE                           l162 02FE  
                         l138 051E                           l235 0646                           l227 060E  
                         l171 0395                           l139 0524                           l236 068F  
                         l228 0615                           l156 04AC                           l180 03BA  
                         l229 061C                           l253 0296                           l174 02E4  
                         l159 0278                           l256 027E                           l380 07F2  
                         l656 0461                           l666 041D                           l837 02B9  
                         u500 0449                           u420 02B0                           u501 0448  
                         u421 02AF                           u430 02B6                           u431 02B5  
                         u440 02C0                           u520 045D                           u600 038A  
                         u441 02BF                           u521 045C                           u505 0445  
                         u601 0389                           u450 02CD                           u530 03EA  
                         u610 03BA                           u451 02CC                           u515 0451  
                         u531 03E9                           u611 03B9                           u460 0426  
                         u700 076E                           u620 069E                           u461 0425  
                         u701 076D                           u621 069D                           u550 03FC  
                         u710 0783                           u630 06B7                           u551 03FB  
                         u711 0782                           u631 06B6                           u480 0438  
                         u560 0406                           u720 0791                           u640 06ED  
                         u800 04F3                           u481 0437                           u561 0405  
                         u545 03EE                           u721 0790                           u705 076A  
                         u641 06EC                           u801 04F2                           u730 07DC  
                         u650 071E                           u810 04FD                           u475 042A  
                         u731 07DB                           u715 077F                           u651 071D  
                         u811 04FC                           u580 0419                           u740 07EE  
                         u660 072C                           u581 0418                           u565 0402  
                         u741 07ED                           u661 072B                           u750 031A  
                         u670 0732                           u590 0378                           _VAL 0026  
                         u751 0319                           u495 0439                           u575 040D  
                         u671 0731                           u591 0377                           u760 0336  
                         u680 0753                           u761 0335                           u681 0752  
                         u690 075E                           u770 0359                           u907 0325  
                         u691 075D                           u771 0358                           u780 035E  
                         u917 0309                           u685 074F                           u781 035D  
                         u837 04D1                           u790 0370                           u847 0598  
                         u791 036F                           u857 02DE                           u867 046C  
                         u877 047B                           u887 048A                           u897 02F6  
                         fsr0 0004                           indf 0000                   _titulos_LCD 0297  
                        l1401 02C0                          l1403 02C4                          l1411 041E  
                        l1405 02C6                          l1421 0434                          l1413 0420  
                        l1501 069E                          l1407 02CD                          l1431 0457  
                        l1423 0438                          l1415 0426                          l1511 06BB  
                        l1503 06A5                          l1425 0449                          l1417 0429  
                        l1433 045D                          l1441 03ED                          l1513 06BD  
                        l1521 06EE                          l1505 06AA                          l1601 0341  
                        l1427 044F                          l1419 0430                          l1451 040C  
                        l1443 03F4                          l1531 071A                          l1515 06CE  
                        l1507 06AB                          l1363 0274                          l1371 02DC  
                        l1611 0349                          l1603 0342                          l1429 0450  
                        l1453 0413                          l1445 03F8                          l1437 03E4  
                        l1541 0732                          l1533 071E                          l1525 06EF  
                        l1517 06D9                          l1509 06B7                          l1381 02F2  
                        l1461 0378                          l1373 02E1                          l1365 02D0  
                        l1701 036A                          l1621 0350                          l1613 034A  
                        l1605 0346                          l1447 03FC                          l1439 03EA  
                        l1455 0419                          l1391 02B6                          l1551 0754  
                        l1543 0736                          l1535 0722                          l1527 070E  
                        l1519 06DD                          l1383 02FB                          l1375 02E6  
                        l1463 037D                          l1367 02D3                          l1703 0370  
                        l1631 027C                          l1623 0351                          l1615 034B  
                        l1607 0347                          l1471 0397                          l1711 04BC  
                        l1449 0406                          l1393 02B8                          l1385 02A9  
                        l1561 0789                          l1553 075E                          l1537 0727  
                        l1529 0716                          l1377 02E9                          l1641 0486  
                        l1633 0462                          l1465 0384                          l1369 02D9  
                        l1625 0287                          l1617 034E                          l1609 0348  
                        l1473 039A                          l1721 04DA                          l1713 04C1  
                        l1705 04AD                          l1491 068E                          l1483 064D  
                        l1651 030E                          l1387 02AA                          l1563 0791  
                        l1555 076E                          l1547 0738                          l1539 072C  
                        l1379 02EF                          l1635 0468                          l1467 038A  
                        l1459 0373                          l1627 0295                          l1619 034F  
                        l1475 03A7                          l1643 0297                          l1731 04F3  
                        l1723 04DF                          l1715 04C6                          l1707 04B2  
                        l1485 0687                          l1653 0312                          l1661 032A  
                        l1397 02BB                          l1389 02B0                          l1565 0798  
                        l1573 07D3                          l1557 076F                          l1637 0471  
                        l1469 038F                          l1629 0279                          l1477 03AD  
                        l1645 02A1                          l1733 04FD                          l1725 04E4  
                        l1717 04CB                          l1709 04B7                          l1487 068A  
                        l1479 05D5                          l1655 0316                          l1647 02FF  
                        l1663 032E                          l1399 02BC                          l1567 079D  
                        l1559 0783                          l1831 0703                          l1575 07DC  
                        l1639 0480                          l1671 0594                          l1591 053C  
                        l1735 04FF                          l1727 04E9                          l1719 04D5  
                        l1489 068D                          l1833 0655                          l1649 0305  
                        l1665 0332                          l1657 031B                          l1569 07CB  
                        l1577 07EE                          l1497 0693                          l1681 05BD  
                        l1673 059D                          l1729 04ED                          l1659 0321  
                        l1499 0698                          l1667 03BB                          l1683 05C5  
                        l1675 05A7                          l1691 035E                          l1587 0505  
                        l1685 05CD                          l1677 05AF                          l1669 0560  
                        l1693 0360                          l1829 0544                          l1597 0337  
                        l1679 05B5                          l1695 0362                          l1687 0353  
                        l1599 033D                          l1697 0364                          l1689 0359  
                        l1699 0366                          STR_1 0013                          STR_2 0022  
                        STR_3 0022             ?_Lcd_Write_String 0070                          _cont 0029  
                        _main 04AD                          btemp 007E                          start 0000  
          ??_Lcd_Write_String 0073               __end_of_Lcd_Cmd 02FF             ___bmul@multiplier 0073  
                       ?_main 0070                         _ANSEL 0188               __end_of___lwdiv 0462  
             __end_of___lwmod 041E                         _RCREG 001A                         _SPBRG 0099  
                       _PORTA 0005                         _PORTB 0006                         _PORTC 0007  
                       _PORTD 0008                         _PORTE 0009       __size_of_Lcd_Set_Cursor 0024  
                       _TRISA 0085                         _TRISB 0086                         _TRISD 0088  
                       _TRISE 0089                         _TXREG 0019              ADC_Config@AN_num 0072  
                       _data1 0038                         _data2 0030               __end_of_dpowers 0013  
             __end_of_initOsc 0560               __end_of_isdigit 02BA                         _setup 0337  
                       pclath 000A                         status 0003                         wtemp0 007E  
             __end_of_sprintf 07F3                   ?_USART_Init 0070              __end_of_Lcd_Init 04AD  
       __size_of_ADC_channel1 001C         __size_of_ADC_channel2 001C              __end_of_Lcd_Port 0279  
             __initialization 07F3                  __end_of_main 0504                        ??_main 0050  
                      _ADCON1 009F                        _ADRESH 001E                        _ADRESL 009E  
                 initOsc@IRCF 0072           _USART_Init_BaudRate 0279                        ?_setup 0070  
                      _ANSELH 0189                  ??_ADC_Config 0070                  _ADC_channel1 02FF  
                _ADC_channel2 031B                     ??_Lcd_Cmd 0071                        _S1_val 002F  
                      _S2_val 002E                        _SPBRGH 009A       __size_of_Lcd_Write_Char 0016  
                      ___bmul 02BA          ?_USART_Init_BaudRate 0070                     ??___lwdiv 0074  
                   ??___lwmod 007C            __end_of_ADC_Config 0690                     ??_initOsc 0070  
                   ??_isdigit 0070           __size_of_USART_Init 0010                     ??_sprintf 0043  
             Lcd_Set_Cursor@a 0076               Lcd_Set_Cursor@b 0074       __end_of__initialization 07FC  
         ___bmul@multiplicand 0070                __pcstackCOMMON 0070         ??_USART_Init_BaudRate 0070  
               __end_of_setup 0353                 ??_Trasmission 0070                _Lcd_Set_Cursor 0372  
                ?_titulos_LCD 0070                     ?_Lcd_Init 0070                     ?_Lcd_Port 0070  
                     ??_setup 0073                    __pbssBANK0 0020                    __pmaintext 04AD  
                     ?___bmul 0070     __size_of_Lcd_Write_String 0025        __end_of_Lcd_Set_Cursor 0396  
      __size_of_ADC_to_string 0029                       _S3_cont 002D                    ??_Lcd_Init 0074  
         __end_of_Trasmission 0372                    ??_Lcd_Port 0070                    __stringtab 0003  
               _eusart_toggle 002C                    _cont_usart 002A                _Lcd_Write_Char 02CF  
                     _Lcd_Cmd 02E5                  ??_USART_Init 0070               __size_of___bmul 0015  
               ?_Show_val_LCD 0070                       ___lwdiv 041E                       ___lwmod 03E4  
             ?_Lcd_Set_Cursor 0074                       __ptext1 0297                       __ptext2 0396  
                     __ptext3 0337                       __ptext4 0504                       __ptext5 0279  
                     __ptext6 0287                       __ptext7 0353                       __ptext8 0560  
                     __ptext9 02CF                       _dpowers 0009                       _initOsc 0504  
                     _isdigit 02A8            __end_of_USART_Init 0297                       _sprintf 0690  
                     clrloop0 0280        __end_of_Lcd_Write_Char 02E5          end_of_initialization 07FC  
               _ADC_to_string 03BB                ??_Show_val_LCD 0078                     _RCSTAbits 0018  
                   Lcd_Port@a 0070                     _PORTEbits 0009                   _Trasmission 0353  
                   _TRISCbits 0087          __size_of_titulos_LCD 0011               ?_Lcd_Write_Char 0070  
           Lcd_Write_String@a 0075             Lcd_Write_String@i 0073                ?_ADC_to_string 0070  
                   _TXSTAbits 0098                __end_of___bmul 02CF              _Lcd_Write_String 0396  
         start_initialization 07F3             __size_of_Lcd_Init 004B             __size_of_Lcd_Port 0006  
 __end_of_USART_Init_BaudRate 027F                      ??___bmul 0071               Lcd_Write_Char@a 0072  
                   ___latbits 0002                 __pcstackBANK0 0040                  _isdigit$1000 0070  
        __end_of_Show_val_LCD 05D4                   _data_recive 0028               ??_ADC_to_string 004D  
                    ?_Lcd_Cmd 0070                   sprintf@flag 0047                   sprintf@prec 004B  
            ___lwdiv@dividend 0072              ??_Lcd_Set_Cursor 0075                      ?___lwdiv 0070  
                    ?___lwmod 0078                     __pstrings 0003                      ?_initOsc 0070  
                    ?_isdigit 0070              ___lwdiv@quotient 0075                      ?_sprintf 0040  
              __size_of_setup 001C                 ?_ADC_channel1 0070                 ?_ADC_channel2 0070  
                   clear_ram0 027F                      _PIE1bits 008C                      Lcd_Cmd@a 0073  
                    _PIR1bits 000C                      _VAL_SWAP 0024                    _ADCON0bits 001F  
                 __stringbase 0008                  ?_Trasmission 0070              ??_Lcd_Write_Char 0071  
                    _Lcd_Init 0462                      _Lcd_Port 0273                ??_ADC_channel1 0073  
              ??_ADC_channel2 0073                    _ADC_Config 05D4      __end_of_Lcd_Write_String 03BB  
            __size_of_Lcd_Cmd 001A                    _ADC_toggle 002B              __size_of___lwdiv 0044  
            __size_of___lwmod 003A            __end_of__stringtab 0009         __size_of_Show_val_LCD 0074  
                  sprintf@val 0048                 ??_titulos_LCD 0078              __size_of_initOsc 005C  
            __size_of_isdigit 0012               ___lwdiv@divisor 0070               ___lwdiv@counter 0077  
                    __ptext10 0372                      __ptext11 0462                      __ptext20 031B  
                    __ptext12 02E5                      __ptext21 02FF                      __ptext13 0273  
                    __ptext22 05D4                      __ptext14 03BB                      __ptext15 0690  
                    __ptext16 02A8                      __ptext17 03E4                      __ptext18 041E  
                    __ptext19 02BA              __size_of_sprintf 0163                 __size_of_main 0057  
                _Show_val_LCD 0560                    _INTCONbits 000B                   _VAL_NIBBLE1 0022  
                 _VAL_NIBBLE2 0020                      isdigit@c 0071                     sprintf@ap 0046  
                   sprintf@sp 004A                   ?_ADC_Config 0070           __end_of_titulos_LCD 02A8  
            ___lwmod@dividend 007A                     stringcode 0003                    _OSCCONbits 008F  
__size_of_USART_Init_BaudRate 0006          __end_of_ADC_channel1 031B          __end_of_ADC_channel2 0337  
          Lcd_Set_Cursor@temp 0077                      sprintf@c 004C                      sprintf@f 0040  
             ___lwmod@divisor 0078          __size_of_Trasmission 001F               ___lwmod@counter 007D  
                    stringdir 0003                      stringtab 0003         __end_of_ADC_to_string 03E4  
                  _USART_Init 0287  
