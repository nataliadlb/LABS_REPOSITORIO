

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 16:40:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  0105                     	;# 
   372  0107                     	;# 
   373  0108                     	;# 
   374  0109                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0185                     	;# 
   381  0187                     	;# 
   382  0188                     	;# 
   383  0189                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  008F                     	;# 
   431  0090                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009E                     	;# 
   448  009F                     	;# 
   449  0105                     	;# 
   450  0107                     	;# 
   451  0108                     	;# 
   452  0109                     	;# 
   453  010C                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  010E                     	;# 
   457  010F                     	;# 
   458  0185                     	;# 
   459  0187                     	;# 
   460  0188                     	;# 
   461  0189                     	;# 
   462  018C                     	;# 
   463  018D                     	;# 
   464  0000                     	;# 
   465  0001                     	;# 
   466  0002                     	;# 
   467  0003                     	;# 
   468  0004                     	;# 
   469  0005                     	;# 
   470  0006                     	;# 
   471  0007                     	;# 
   472  0008                     	;# 
   473  0009                     	;# 
   474  000A                     	;# 
   475  000B                     	;# 
   476  000C                     	;# 
   477  000D                     	;# 
   478  000E                     	;# 
   479  000E                     	;# 
   480  000F                     	;# 
   481  0010                     	;# 
   482  0011                     	;# 
   483  0012                     	;# 
   484  0013                     	;# 
   485  0014                     	;# 
   486  0015                     	;# 
   487  0015                     	;# 
   488  0016                     	;# 
   489  0017                     	;# 
   490  0018                     	;# 
   491  0019                     	;# 
   492  001A                     	;# 
   493  001B                     	;# 
   494  001B                     	;# 
   495  001C                     	;# 
   496  001D                     	;# 
   497  001E                     	;# 
   498  001F                     	;# 
   499  0081                     	;# 
   500  0085                     	;# 
   501  0086                     	;# 
   502  0087                     	;# 
   503  0088                     	;# 
   504  0089                     	;# 
   505  008C                     	;# 
   506  008D                     	;# 
   507  008E                     	;# 
   508  008F                     	;# 
   509  0090                     	;# 
   510  0091                     	;# 
   511  0092                     	;# 
   512  0093                     	;# 
   513  0093                     	;# 
   514  0093                     	;# 
   515  0094                     	;# 
   516  0095                     	;# 
   517  0096                     	;# 
   518  0097                     	;# 
   519  0098                     	;# 
   520  0099                     	;# 
   521  009A                     	;# 
   522  009B                     	;# 
   523  009C                     	;# 
   524  009D                     	;# 
   525  009E                     	;# 
   526  009F                     	;# 
   527  0105                     	;# 
   528  0107                     	;# 
   529  0108                     	;# 
   530  0109                     	;# 
   531  010C                     	;# 
   532  010C                     	;# 
   533  010D                     	;# 
   534  010E                     	;# 
   535  010F                     	;# 
   536  0185                     	;# 
   537  0187                     	;# 
   538  0188                     	;# 
   539  0189                     	;# 
   540  018C                     	;# 
   541  018D                     	;# 
   542                           
   543                           	psect	strings
   544  04B3                     __pstrings:
   545  04B3                     stringtab:
   546  04B3                     __stringtab:
   547  04B3                     stringcode:	
   548                           ;	String table - string pointers are 1 byte each
   549                           
   550  04B3                     stringdir:
   551  04B3  3004               	movlw	high stringdir
   552  04B4  008A               	movwf	10
   553  04B5  0804               	movf	4,w
   554  04B6  0A84               	incf	4,f
   555  04B7  0782               	addwf	2,f
   556  04B8                     __stringbase:
   557  04B8  3400               	retlw	0
   558  04B9                     __end_of__stringtab:
   559  04B9                     _dpowers:
   560  04B9  3401               	retlw	1
   561  04BA  3400               	retlw	0
   562  04BB  340A               	retlw	10
   563  04BC  3400               	retlw	0
   564  04BD  3464               	retlw	100
   565  04BE  3400               	retlw	0
   566  04BF  34E8               	retlw	232
   567  04C0  3403               	retlw	3
   568  04C1  3410               	retlw	16
   569  04C2  3427               	retlw	39
   570  04C3                     __end_of_dpowers:
   571  000B                     _INTCONbits	set	11
   572  0018                     _RCSTAbits	set	24
   573  0009                     _PORTEbits	set	9
   574  0009                     _PORTE	set	9
   575  0008                     _PORTD	set	8
   576  0007                     _PORTC	set	7
   577  0005                     _PORTA	set	5
   578  0019                     _TXREG	set	25
   579  001E                     _ADRESH	set	30
   580  001F                     _ADCON0bits	set	31
   581  0006                     _PORTB	set	6
   582  001A                     _RCREG	set	26
   583  000C                     _PIR1bits	set	12
   584  0065                     _RCIF	set	101
   585  008C                     _PIE1bits	set	140
   586  0099                     _SPBRG	set	153
   587  009A                     _SPBRGH	set	154
   588  0098                     _TXSTAbits	set	152
   589  009F                     _ADCON1	set	159
   590  009E                     _ADRESL	set	158
   591  008F                     _OSCCONbits	set	143
   592  0089                     _TRISE	set	137
   593  0088                     _TRISD	set	136
   594  0087                     _TRISCbits	set	135
   595  0086                     _TRISB	set	134
   596  0085                     _TRISA	set	133
   597  04C1                     _TRMT	set	1217
   598  0189                     _ANSELH	set	393
   599  0188                     _ANSEL	set	392
   600  04C3                     STR_1:
   601  04C3  3453               	retlw	83	;'S'
   602  04C4  3431               	retlw	49	;'1'
   603  04C5  343A               	retlw	58	;':'
   604  04C6  3420               	retlw	32	;' '
   605  04C7  3420               	retlw	32	;' '
   606  04C8  3420               	retlw	32	;' '
   607  04C9  3453               	retlw	83	;'S'
   608  04CA  3432               	retlw	50	;'2'
   609  04CB  343A               	retlw	58	;':'
   610  04CC  3420               	retlw	32	;' '
   611  04CD  3420               	retlw	32	;' '
   612  04CE  3453               	retlw	83	;'S'
   613  04CF  3433               	retlw	51	;'3'
   614  04D0  343A               	retlw	58	;':'
   615  04D1  3400               	retlw	0
   616  04D2                     STR_2:
   617  04D2  3425               	retlw	37	;'%'
   618  04D3  342E               	retlw	46	;'.'
   619  04D4  3433               	retlw	51	;'3'
   620  04D5  3469               	retlw	105	;'i'
   621  04D6  3456               	retlw	86	;'V'
   622  04D7  3400               	retlw	0
   623  04D8                     STR_4:
   624  04D8  3425               	retlw	37	;'%'
   625  04D9  342E               	retlw	46	;'.'
   626  04DA  3433               	retlw	51	;'3'
   627  04DB  3469               	retlw	105	;'i'
   628  04DC  3400               	retlw	0
   629  04D2                     
   630                           	psect	cinit
   631  000F                     start_initialization:	
   632                           ; #config settings
   633                           
   634  000F                     __initialization:
   635                           
   636                           ; Clear objects allocated to COMMON
   637  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   638  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   639  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   640                           
   641                           ; Clear objects allocated to BANK0
   642  0012  1383               	bcf	3,7	;select IRP bank0
   643  0013  3020               	movlw	low __pbssBANK0
   644  0014  0084               	movwf	4
   645  0015  303F               	movlw	low (__pbssBANK0+31)
   646  0016  120A  118A  261F  120A  118A  	fcall	clear_ram0
   647  001B                     end_of_initialization:	
   648                           ;End of C runtime variable initialization code
   649                           
   650  001B                     __end_of__initialization:
   651  001B  0183               	clrf	3
   652  001C  120A  118A  2AE1   	ljmp	_main	;jump to C main() function
   653                           
   654                           	psect	bssCOMMON
   655  0078                     __pbssCOMMON:
   656  0078                     _data_recive:
   657  0078                     	ds	1
   658  0079                     _cont:
   659  0079                     	ds	1
   660  007A                     _eusart_toggle:
   661  007A                     	ds	1
   662                           
   663                           	psect	bssBANK0
   664  0020                     __pbssBANK0:
   665  0020                     _VAL_NIBBLE2:
   666  0020                     	ds	2
   667  0022                     _VAL_NIBBLE1:
   668  0022                     	ds	2
   669  0024                     _VAL_SWAP:
   670  0024                     	ds	2
   671  0026                     _VAL:
   672  0026                     	ds	2
   673  0028                     _cont_usart:
   674  0028                     	ds	1
   675  0029                     _ADC_toggle:
   676  0029                     	ds	1
   677  002A                     _S2_val:
   678  002A                     	ds	1
   679  002B                     _S1_val:
   680  002B                     	ds	1
   681  002C                     _data2:
   682  002C                     	ds	8
   683  0034                     _data1:
   684  0034                     	ds	8
   685  003C                     _S3_cont:
   686  003C                     	ds	3
   687                           
   688                           	psect	clrtext
   689  061F                     clear_ram0:	
   690                           ;	Called with FSR containing the base address, and
   691                           ;	W with the last address+1
   692                           
   693  061F  0064               	clrwdt	;clear the watchdog before getting into this loop
   694  0620                     clrloop0:
   695  0620  0180               	clrf	0	;clear RAM location pointed to by FSR
   696  0621  0A84               	incf	4,f	;increment pointer
   697  0622  0604               	xorwf	4,w	;XOR with final address
   698  0623  1903               	btfsc	3,2	;have we reached the end yet?
   699  0624  3400               	retlw	0	;all done for this memory range, return
   700  0625  0604               	xorwf	4,w	;XOR again to restore value
   701  0626  2E20               	goto	clrloop0	;do the next byte
   702                           
   703                           	psect	cstackCOMMON
   704  0070                     __pcstackCOMMON:
   705  0070                     ?_isdigit:
   706  0070                     ?_setup:	
   707                           ; 1 bit 
   708                           
   709  0070                     ?_USART_Init_BaudRate:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_USART_Init:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_USART_INTERRUPT:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_Lcd_Init:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_titulos_LCD:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_ADC_channel1:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?_ADC_channel2:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_ADC_to_string:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_Show_val_LCD:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?_Trasmission:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_Lcd_Write_String:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_ADC_Config:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_Lcd_Write_Char:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_initOsc:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_Lcd_Port:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?_Lcd_Cmd:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_ISR:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ??_ISR:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_main:	
   764                           ; 1 bytes @ 0x0
   765                           
   766                           
   767                           ; 1 bytes @ 0x0
   768  0070                     	ds	3
   769  0073                     ??_USART_Init_BaudRate:
   770  0073                     ??_USART_Init:	
   771                           ; 1 bytes @ 0x3
   772                           
   773  0073                     ??_USART_INTERRUPT:	
   774                           ; 1 bytes @ 0x3
   775                           
   776  0073                     ??_Trasmission:	
   777                           ; 1 bytes @ 0x3
   778                           
   779  0073                     ??_ADC_Config:	
   780                           ; 1 bytes @ 0x3
   781                           
   782  0073                     ??_initOsc:	
   783                           ; 1 bytes @ 0x3
   784                           
   785  0073                     ??_Lcd_Port:	
   786                           ; 1 bytes @ 0x3
   787                           
   788  0073                     ??_isdigit:	
   789                           ; 1 bytes @ 0x3
   790                           
   791  0073                     ?___bmul:	
   792                           ; 1 bytes @ 0x3
   793                           
   794  0073                     ?___lwdiv:	
   795                           ; 1 bytes @ 0x3
   796                           
   797  0073                     Lcd_Port@a:	
   798                           ; 2 bytes @ 0x3
   799                           
   800  0073                     ___bmul@multiplicand:	
   801                           ; 1 bytes @ 0x3
   802                           
   803  0073                     _isdigit$1021:	
   804                           ; 1 bytes @ 0x3
   805                           
   806  0073                     ___lwdiv@divisor:	
   807                           ; 1 bytes @ 0x3
   808                           
   809                           
   810                           ; 2 bytes @ 0x3
   811  0073                     	ds	1
   812  0074                     ??_Lcd_Write_Char:
   813  0074                     ??_Lcd_Cmd:	
   814                           ; 1 bytes @ 0x4
   815                           
   816  0074                     ??___bmul:	
   817                           ; 1 bytes @ 0x4
   818                           
   819  0074                     isdigit@c:	
   820                           ; 1 bytes @ 0x4
   821                           
   822                           
   823                           ; 1 bytes @ 0x4
   824  0074                     	ds	1
   825  0075                     initOsc@IRCF:
   826  0075                     Lcd_Write_Char@a:	
   827                           ; 1 bytes @ 0x5
   828                           
   829  0075                     ADC_Config@AN_num:	
   830                           ; 1 bytes @ 0x5
   831                           
   832  0075                     ___bmul@product:	
   833                           ; 1 bytes @ 0x5
   834                           
   835  0075                     ___lwdiv@dividend:	
   836                           ; 1 bytes @ 0x5
   837                           
   838                           
   839                           ; 2 bytes @ 0x5
   840  0075                     	ds	1
   841  0076                     ??_setup:
   842  0076                     ??_ADC_channel1:	
   843                           ; 1 bytes @ 0x6
   844                           
   845  0076                     ??_ADC_channel2:	
   846                           ; 1 bytes @ 0x6
   847                           
   848  0076                     ??_Lcd_Write_String:	
   849                           ; 1 bytes @ 0x6
   850                           
   851  0076                     Lcd_Cmd@a:	
   852                           ; 1 bytes @ 0x6
   853                           
   854  0076                     ___bmul@multiplier:	
   855                           ; 1 bytes @ 0x6
   856                           
   857                           
   858                           ; 1 bytes @ 0x6
   859  0076                     	ds	1
   860  0077                     ?_Lcd_Set_Cursor:
   861  0077                     ??___lwdiv:	
   862                           ; 1 bytes @ 0x7
   863                           
   864  0077                     Lcd_Set_Cursor@b:	
   865                           ; 1 bytes @ 0x7
   866                           
   867                           
   868                           ; 1 bytes @ 0x7
   869  0077                     	ds	1
   870                           
   871                           	psect	cstackBANK0
   872  003F                     __pcstackBANK0:
   873  003F                     ??_Lcd_Init:
   874  003F                     ??_Lcd_Set_Cursor:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  003F                     Lcd_Write_String@a:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  003F                     ___lwdiv@counter:	
   881                           ; 1 bytes @ 0x0
   882                           
   883                           
   884                           ; 1 bytes @ 0x0
   885  003F                     	ds	1
   886  0040                     Lcd_Set_Cursor@a:
   887  0040                     Lcd_Write_String@i:	
   888                           ; 1 bytes @ 0x1
   889                           
   890  0040                     ___lwdiv@quotient:	
   891                           ; 2 bytes @ 0x1
   892                           
   893                           
   894                           ; 2 bytes @ 0x1
   895  0040                     	ds	1
   896  0041                     Lcd_Set_Cursor@temp:
   897                           
   898                           ; 1 bytes @ 0x2
   899  0041                     	ds	1
   900  0042                     ??_titulos_LCD:
   901  0042                     ??_Show_val_LCD:	
   902                           ; 1 bytes @ 0x3
   903                           
   904  0042                     ?___lwmod:	
   905                           ; 1 bytes @ 0x3
   906                           
   907  0042                     ___lwmod@divisor:	
   908                           ; 2 bytes @ 0x3
   909                           
   910                           
   911                           ; 2 bytes @ 0x3
   912  0042                     	ds	2
   913  0044                     ___lwmod@dividend:
   914                           
   915                           ; 2 bytes @ 0x5
   916  0044                     	ds	2
   917  0046                     ??___lwmod:
   918                           
   919                           ; 1 bytes @ 0x7
   920  0046                     	ds	1
   921  0047                     ___lwmod@counter:
   922                           
   923                           ; 1 bytes @ 0x8
   924  0047                     	ds	1
   925  0048                     ?_sprintf:
   926  0048                     sprintf@f:	
   927                           ; 2 bytes @ 0x9
   928                           
   929                           
   930                           ; 1 bytes @ 0x9
   931  0048                     	ds	3
   932  004B                     ??_sprintf:
   933                           
   934                           ; 1 bytes @ 0xC
   935  004B                     	ds	3
   936  004E                     sprintf@ap:
   937                           
   938                           ; 1 bytes @ 0xF
   939  004E                     	ds	1
   940  004F                     sprintf@flag:
   941                           
   942                           ; 1 bytes @ 0x10
   943  004F                     	ds	1
   944  0050                     sprintf@val:
   945                           
   946                           ; 2 bytes @ 0x11
   947  0050                     	ds	2
   948  0052                     sprintf@sp:
   949                           
   950                           ; 1 bytes @ 0x13
   951  0052                     	ds	1
   952  0053                     sprintf@prec:
   953                           
   954                           ; 1 bytes @ 0x14
   955  0053                     	ds	1
   956  0054                     sprintf@c:
   957                           
   958                           ; 1 bytes @ 0x15
   959  0054                     	ds	1
   960  0055                     ??_ADC_to_string:
   961                           
   962                           ; 1 bytes @ 0x16
   963  0055                     	ds	3
   964  0058                     ??_main:
   965                           
   966                           ; 1 bytes @ 0x19
   967  0058                     	ds	2
   968                           
   969                           	psect	maintext
   970  02E1                     __pmaintext:	
   971 ;;
   972 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   973 ;;
   974 ;; *************** function _main *****************
   975 ;; Defined at:
   976 ;;		line 139 in file "pseudocodigo_lab3.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : B00/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   990 ;;      Params:         0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0
   992 ;;      Temps:          0       2       0       0       0
   993 ;;      Totals:         0       2       0       0       0
   994 ;;Total ram usage:        2 bytes
   995 ;; Hardware stack levels required when called:    5
   996 ;; This function calls:
   997 ;;		_ADC_channel1
   998 ;;		_ADC_channel2
   999 ;;		_ADC_to_string
  1000 ;;		_Lcd_Init
  1001 ;;		_Show_val_LCD
  1002 ;;		_Trasmission
  1003 ;;		_USART_INTERRUPT
  1004 ;;		_USART_Init
  1005 ;;		_USART_Init_BaudRate
  1006 ;;		_setup
  1007 ;;		_titulos_LCD
  1008 ;; This function is called by:
  1009 ;;		Startup code after reset
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           
  1014                           ;psect for function _main
  1015  02E1                     _main:
  1016  02E1                     l2046:	
  1017                           ;incstack = 0
  1018                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1019                           
  1020                           
  1021                           ;pseudocodigo_lab3.c: 140:     setup();
  1022  02E1  120A  118A  252C  120A  118A  	fcall	_setup
  1023  02E6                     l2048:
  1024                           
  1025                           ;pseudocodigo_lab3.c: 141:     USART_Init_BaudRate();
  1026  02E6  120A  118A  2627  120A  118A  	fcall	_USART_Init_BaudRate
  1027  02EB                     l2050:
  1028                           
  1029                           ;pseudocodigo_lab3.c: 142:     USART_Init();
  1030  02EB  120A  118A  260F  120A  118A  	fcall	_USART_Init
  1031  02F0                     l2052:
  1032                           
  1033                           ;pseudocodigo_lab3.c: 143:     USART_INTERRUPT();
  1034  02F0  120A  118A  262D  120A  118A  	fcall	_USART_INTERRUPT
  1035  02F5                     l2054:
  1036                           
  1037                           ;pseudocodigo_lab3.c: 144:     Lcd_Init();
  1038  02F5  120A  118A  23A5  120A  118A  	fcall	_Lcd_Init
  1039                           
  1040                           ;pseudocodigo_lab3.c: 145:     titulos_LCD();
  1041  02FA  120A  118A  25D9  120A  118A  	fcall	_titulos_LCD
  1042  02FF                     l2056:
  1043                           
  1044                           ;pseudocodigo_lab3.c: 146:     cont = -1;
  1045  02FF  30FF               	movlw	255
  1046  0300  1283               	bcf	3,5	;RP0=0, select bank0
  1047  0301  1303               	bcf	3,6	;RP1=0, select bank0
  1048  0302  00D8               	movwf	??_main
  1049  0303  0858               	movf	??_main,w
  1050  0304  00F9               	movwf	_cont
  1051  0305                     l2058:
  1052                           
  1053                           ;pseudocodigo_lab3.c: 153:         ADC_channel1();
  1054  0305  120A  118A  2564  120A  118A  	fcall	_ADC_channel1
  1055                           
  1056                           ;pseudocodigo_lab3.c: 154:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1057  030A  3003               	movlw	3
  1058  030B  1283               	bcf	3,5	;RP0=0, select bank0
  1059  030C  1303               	bcf	3,6	;RP1=0, select bank0
  1060  030D  00D9               	movwf	??_main+1
  1061  030E  3097               	movlw	151
  1062  030F  00D8               	movwf	??_main
  1063  0310                     u1087:
  1064  0310  0BD8               	decfsz	??_main,f
  1065  0311  2B10               	goto	u1087
  1066  0312  0BD9               	decfsz	??_main+1,f
  1067  0313  2B10               	goto	u1087
  1068  0314                     l2060:
  1069                           
  1070                           ;pseudocodigo_lab3.c: 155:         ADC_channel2();
  1071  0314  120A  118A  2548  120A  118A  	fcall	_ADC_channel2
  1072  0319                     l2062:
  1073                           
  1074                           ;pseudocodigo_lab3.c: 157:         ADC_to_string();
  1075  0319  120A  118A  243B  120A  118A  	fcall	_ADC_to_string
  1076  031E                     l2064:
  1077                           
  1078                           ;pseudocodigo_lab3.c: 158:         Show_val_LCD();
  1079  031E  120A  118A  2240  120A  118A  	fcall	_Show_val_LCD
  1080  0323                     l2066:
  1081                           
  1082                           ;pseudocodigo_lab3.c: 159:         Trasmission();
  1083  0323  120A  118A  25C5  120A  118A  	fcall	_Trasmission
  1084  0328                     l2068:
  1085                           
  1086                           ;pseudocodigo_lab3.c: 160:         if (data_recive == '+'){
  1087  0328  302B               	movlw	43
  1088  0329  0678               	xorwf	_data_recive,w
  1089  032A  1D03               	btfss	3,2
  1090  032B  2B2D               	goto	u1061
  1091  032C  2B2E               	goto	u1060
  1092  032D                     u1061:
  1093  032D  2B37               	goto	l2074
  1094  032E                     u1060:
  1095  032E                     l2070:
  1096                           
  1097                           ;pseudocodigo_lab3.c: 161:                 cont++;
  1098  032E  3001               	movlw	1
  1099  032F  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0330  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0331  00D8               	movwf	??_main
  1102  0332  0858               	movf	??_main,w
  1103  0333  07F9               	addwf	_cont,f
  1104  0334                     l2072:
  1105                           
  1106                           ;pseudocodigo_lab3.c: 162:                 PORTB = cont;
  1107  0334  0879               	movf	_cont,w
  1108  0335  0086               	movwf	6	;volatile
  1109                           
  1110                           ;pseudocodigo_lab3.c: 163:             }
  1111  0336  2B44               	goto	l2080
  1112  0337                     l2074:
  1113  0337  302D               	movlw	45
  1114  0338  0678               	xorwf	_data_recive,w
  1115  0339  1D03               	btfss	3,2
  1116  033A  2B3C               	goto	u1071
  1117  033B  2B3D               	goto	u1070
  1118  033C                     u1071:
  1119  033C  2B40               	goto	l2078
  1120  033D                     u1070:
  1121  033D                     l2076:
  1122                           
  1123                           ;pseudocodigo_lab3.c: 165:             cont--;
  1124  033D  3001               	movlw	1
  1125  033E  02F9               	subwf	_cont,f
  1126                           
  1127                           ;pseudocodigo_lab3.c: 166:         }
  1128  033F  2B44               	goto	l2080
  1129  0340                     l2078:
  1130                           
  1131                           ;pseudocodigo_lab3.c: 168:             PORTB = 0xFF;
  1132  0340  30FF               	movlw	255
  1133  0341  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0342  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0343  0086               	movwf	6	;volatile
  1136  0344                     l2080:
  1137                           
  1138                           ;pseudocodigo_lab3.c: 170:         data_recive = 0;
  1139  0344  01F8               	clrf	_data_recive
  1140  0345  2B05               	goto	l2058
  1141  0346  120A  118A  280C   	ljmp	start
  1142  0349                     __end_of_main:
  1143                           
  1144                           	psect	text1
  1145  05D9                     __ptext1:	
  1146 ;; *************** function _titulos_LCD *****************
  1147 ;; Defined at:
  1148 ;;		line 200 in file "pseudocodigo_lab3.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;		None
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;		None
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1162 ;;      Params:         0       0       0       0       0
  1163 ;;      Locals:         0       0       0       0       0
  1164 ;;      Temps:          0       1       0       0       0
  1165 ;;      Totals:         0       1       0       0       0
  1166 ;;Total ram usage:        1 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; Hardware stack levels required when called:    4
  1169 ;; This function calls:
  1170 ;;		_Lcd_Set_Cursor
  1171 ;;		_Lcd_Write_String
  1172 ;; This function is called by:
  1173 ;;		_main
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           
  1178                           ;psect for function _titulos_LCD
  1179  05D9                     _titulos_LCD:
  1180  05D9                     l2012:	
  1181                           ;incstack = 0
  1182                           ; Regs used in _titulos_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1183                           
  1184                           
  1185                           ;pseudocodigo_lab3.c: 201:         Lcd_Set_Cursor(1,2);
  1186  05D9  3002               	movlw	2
  1187  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  1188  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  1189  05DC  00C2               	movwf	??_titulos_LCD
  1190  05DD  0842               	movf	??_titulos_LCD,w
  1191  05DE  00F7               	movwf	Lcd_Set_Cursor@b
  1192  05DF  3001               	movlw	1
  1193  05E0  120A  118A  2506  120A  118A  	fcall	_Lcd_Set_Cursor
  1194  05E5                     l2014:
  1195                           
  1196                           ;pseudocodigo_lab3.c: 202:         Lcd_Write_String("S1:   S2:  S3:");
  1197  05E5  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1198  05E6  120A  118A  24DD  120A  118A  	fcall	_Lcd_Write_String
  1199  05EB                     l111:
  1200  05EB  0008               	return
  1201  05EC                     __end_of_titulos_LCD:
  1202                           
  1203                           	psect	text2
  1204  04DD                     __ptext2:	
  1205 ;; *************** function _Lcd_Write_String *****************
  1206 ;; Defined at:
  1207 ;;		line 70 in file "LCD.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  a               1    wreg     PTR unsigned char 
  1210 ;;		 -> STR_1(15), 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  a               1    0[BANK0 ] PTR unsigned char 
  1213 ;;		 -> STR_1(15), 
  1214 ;;  i               2    1[BANK0 ] int 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1224 ;;      Params:         0       0       0       0       0
  1225 ;;      Locals:         0       3       0       0       0
  1226 ;;      Temps:          0       0       0       0       0
  1227 ;;      Totals:         0       3       0       0       0
  1228 ;;Total ram usage:        3 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    3
  1231 ;; This function calls:
  1232 ;;		_Lcd_Write_Char
  1233 ;; This function is called by:
  1234 ;;		_titulos_LCD
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function _Lcd_Write_String
  1240  04DD                     _Lcd_Write_String:
  1241                           
  1242                           ;incstack = 0
  1243                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1244                           ;Lcd_Write_String@a stored from wreg
  1245  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  1246  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  1247  04DF  00BF               	movwf	Lcd_Write_String@a
  1248  04E0                     l1904:
  1249                           
  1250                           ;LCD.c: 71:  int i;;LCD.c: 72:  for(i=0;a[i]!='\0';i++)
  1251  04E0  01C0               	clrf	Lcd_Write_String@i
  1252  04E1  01C1               	clrf	Lcd_Write_String@i+1
  1253  04E2  2CF8               	goto	l1910
  1254  04E3                     l1906:
  1255                           
  1256                           ;LCD.c: 73:     Lcd_Write_Char(a[i]);
  1257  04E3  0840               	movf	Lcd_Write_String@i,w
  1258  04E4  073F               	addwf	Lcd_Write_String@a,w
  1259  04E5  0084               	movwf	4
  1260  04E6  120A  118A  24B3  120A  118A  	fcall	stringdir
  1261  04EB  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  1262  04F0                     l1908:
  1263  04F0  3001               	movlw	1
  1264  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1265  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1266  04F3  07C0               	addwf	Lcd_Write_String@i,f
  1267  04F4  1803               	skipnc
  1268  04F5  0AC1               	incf	Lcd_Write_String@i+1,f
  1269  04F6  3000               	movlw	0
  1270  04F7  07C1               	addwf	Lcd_Write_String@i+1,f
  1271  04F8                     l1910:
  1272  04F8  0840               	movf	Lcd_Write_String@i,w
  1273  04F9  073F               	addwf	Lcd_Write_String@a,w
  1274  04FA  0084               	movwf	4
  1275  04FB  120A  118A  24B3  120A  118A  	fcall	stringdir
  1276  0500  3A00               	xorlw	0
  1277  0501  1D03               	skipz
  1278  0502  2D04               	goto	u921
  1279  0503  2D05               	goto	u920
  1280  0504                     u921:
  1281  0504  2CE3               	goto	l1906
  1282  0505                     u920:
  1283  0505                     l191:
  1284  0505  0008               	return
  1285  0506                     __end_of_Lcd_Write_String:
  1286                           
  1287                           	psect	text3
  1288  052C                     __ptext3:	
  1289 ;; *************** function _setup *****************
  1290 ;; Defined at:
  1291 ;;		line 286 in file "pseudocodigo_lab3.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;		None
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      void 
  1298 ;; Registers used:
  1299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1305 ;;      Params:         0       0       0       0       0
  1306 ;;      Locals:         0       0       0       0       0
  1307 ;;      Temps:          0       0       0       0       0
  1308 ;;      Totals:         0       0       0       0       0
  1309 ;;Total ram usage:        0 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    2
  1312 ;; This function calls:
  1313 ;;		_initOsc
  1314 ;; This function is called by:
  1315 ;;		_main
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           
  1320                           ;psect for function _setup
  1321  052C                     _setup:
  1322  052C                     l1164:	
  1323                           ;incstack = 0
  1324                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1325                           
  1326                           
  1327                           ;pseudocodigo_lab3.c: 287:     initOsc(0b00000110);
  1328  052C  3006               	movlw	6
  1329  052D  120A  118A  2349  120A  118A  	fcall	_initOsc
  1330  0532                     l1166:
  1331                           
  1332                           ;pseudocodigo_lab3.c: 288:     ANSEL = 0b00000011;
  1333  0532  3003               	movlw	3
  1334  0533  1683               	bsf	3,5	;RP0=1, select bank3
  1335  0534  1703               	bsf	3,6	;RP1=1, select bank3
  1336  0535  0088               	movwf	8	;volatile
  1337  0536                     l1168:
  1338                           
  1339                           ;pseudocodigo_lab3.c: 289:     ANSELH = 0;
  1340  0536  0189               	clrf	9	;volatile
  1341  0537                     l1170:
  1342                           
  1343                           ;pseudocodigo_lab3.c: 290:     TRISA = 0b00000011;
  1344  0537  3003               	movlw	3
  1345  0538  1683               	bsf	3,5	;RP0=1, select bank1
  1346  0539  1303               	bcf	3,6	;RP1=0, select bank1
  1347  053A  0085               	movwf	5	;volatile
  1348  053B                     l1172:
  1349                           
  1350                           ;pseudocodigo_lab3.c: 291:     TRISB = 0;
  1351  053B  0186               	clrf	6	;volatile
  1352  053C                     l1174:
  1353                           
  1354                           ;pseudocodigo_lab3.c: 292:     TRISCbits.TRISC6 = 0;
  1355  053C  1307               	bcf	7,6	;volatile
  1356  053D                     l1176:
  1357                           
  1358                           ;pseudocodigo_lab3.c: 293:     TRISCbits.TRISC7 = 1;
  1359  053D  1787               	bsf	7,7	;volatile
  1360  053E                     l1178:
  1361                           
  1362                           ;pseudocodigo_lab3.c: 294:     TRISD = 0;
  1363  053E  0188               	clrf	8	;volatile
  1364  053F                     l1180:
  1365                           
  1366                           ;pseudocodigo_lab3.c: 295:     TRISE = 0;
  1367  053F  0189               	clrf	9	;volatile
  1368  0540                     l1182:
  1369                           
  1370                           ;pseudocodigo_lab3.c: 296:     PORTA = 0;
  1371  0540  1283               	bcf	3,5	;RP0=0, select bank0
  1372  0541  1303               	bcf	3,6	;RP1=0, select bank0
  1373  0542  0185               	clrf	5	;volatile
  1374  0543                     l1184:
  1375                           
  1376                           ;pseudocodigo_lab3.c: 297:     PORTB = 0;
  1377  0543  0186               	clrf	6	;volatile
  1378  0544                     l1186:
  1379                           
  1380                           ;pseudocodigo_lab3.c: 298:     PORTC = 0;
  1381  0544  0187               	clrf	7	;volatile
  1382  0545                     l1188:
  1383                           
  1384                           ;pseudocodigo_lab3.c: 299:     PORTD = 0;
  1385  0545  0188               	clrf	8	;volatile
  1386  0546                     l1190:
  1387                           
  1388                           ;pseudocodigo_lab3.c: 300:     PORTE = 0;
  1389  0546  0189               	clrf	9	;volatile
  1390  0547                     l138:
  1391  0547  0008               	return
  1392  0548                     __end_of_setup:
  1393                           
  1394                           	psect	text4
  1395  0349                     __ptext4:	
  1396 ;; *************** function _initOsc *****************
  1397 ;; Defined at:
  1398 ;;		line 3 in file "Oscilador.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  IRCF            1    wreg     unsigned char 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  IRCF            1    5[COMMON] unsigned char 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         0       0       0       0       0
  1413 ;;      Locals:         1       0       0       0       0
  1414 ;;      Temps:          2       0       0       0       0
  1415 ;;      Totals:         3       0       0       0       0
  1416 ;;Total ram usage:        3 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:    1
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_setup
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           
  1427                           ;psect for function _initOsc
  1428  0349                     _initOsc:
  1429                           
  1430                           ;incstack = 0
  1431                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1432                           ;initOsc@IRCF stored from wreg
  1433  0349  00F5               	movwf	initOsc@IRCF
  1434  034A                     l1154:
  1435                           
  1436                           ;Oscilador.c: 5:     switch(IRCF){
  1437  034A  2B81               	goto	l1158
  1438  034B                     l144:	
  1439                           ;Oscilador.c: 6:         case 0:
  1440                           
  1441                           
  1442                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  1443  034B  1683               	bsf	3,5	;RP0=1, select bank1
  1444  034C  1303               	bcf	3,6	;RP1=0, select bank1
  1445  034D  130F               	bcf	15,6	;volatile
  1446                           
  1447                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  1448  034E  128F               	bcf	15,5	;volatile
  1449                           
  1450                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  1451  034F  120F               	bcf	15,4	;volatile
  1452                           
  1453                           ;Oscilador.c: 10:             break;
  1454  0350  2BA3               	goto	l145
  1455  0351                     l146:	
  1456                           ;Oscilador.c: 11:          case 1:
  1457                           
  1458                           
  1459                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  1460  0351  1683               	bsf	3,5	;RP0=1, select bank1
  1461  0352  1303               	bcf	3,6	;RP1=0, select bank1
  1462  0353  130F               	bcf	15,6	;volatile
  1463                           
  1464                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  1465  0354  128F               	bcf	15,5	;volatile
  1466                           
  1467                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  1468  0355  160F               	bsf	15,4	;volatile
  1469                           
  1470                           ;Oscilador.c: 15:             break;
  1471  0356  2BA3               	goto	l145
  1472  0357                     l147:	
  1473                           ;Oscilador.c: 16:         case 2:
  1474                           
  1475                           
  1476                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  1477  0357  1683               	bsf	3,5	;RP0=1, select bank1
  1478  0358  1303               	bcf	3,6	;RP1=0, select bank1
  1479  0359  130F               	bcf	15,6	;volatile
  1480                           
  1481                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  1482  035A  168F               	bsf	15,5	;volatile
  1483                           
  1484                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  1485  035B  120F               	bcf	15,4	;volatile
  1486                           
  1487                           ;Oscilador.c: 20:             break;
  1488  035C  2BA3               	goto	l145
  1489  035D                     l148:	
  1490                           ;Oscilador.c: 21:         case 3:
  1491                           
  1492                           
  1493                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  1494  035D  1683               	bsf	3,5	;RP0=1, select bank1
  1495  035E  1303               	bcf	3,6	;RP1=0, select bank1
  1496  035F  130F               	bcf	15,6	;volatile
  1497                           
  1498                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  1499  0360  168F               	bsf	15,5	;volatile
  1500                           
  1501                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  1502  0361  160F               	bsf	15,4	;volatile
  1503                           
  1504                           ;Oscilador.c: 25:             break;
  1505  0362  2BA3               	goto	l145
  1506  0363                     l149:	
  1507                           ;Oscilador.c: 26:         case 4:
  1508                           
  1509                           
  1510                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  1511  0363  1683               	bsf	3,5	;RP0=1, select bank1
  1512  0364  1303               	bcf	3,6	;RP1=0, select bank1
  1513  0365  170F               	bsf	15,6	;volatile
  1514                           
  1515                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  1516  0366  128F               	bcf	15,5	;volatile
  1517                           
  1518                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  1519  0367  120F               	bcf	15,4	;volatile
  1520                           
  1521                           ;Oscilador.c: 30:             break;
  1522  0368  2BA3               	goto	l145
  1523  0369                     l150:	
  1524                           ;Oscilador.c: 31:         case 5:
  1525                           
  1526                           
  1527                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1528  0369  1683               	bsf	3,5	;RP0=1, select bank1
  1529  036A  1303               	bcf	3,6	;RP1=0, select bank1
  1530  036B  170F               	bsf	15,6	;volatile
  1531                           
  1532                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1533  036C  128F               	bcf	15,5	;volatile
  1534                           
  1535                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1536  036D  160F               	bsf	15,4	;volatile
  1537                           
  1538                           ;Oscilador.c: 35:             break;
  1539  036E  2BA3               	goto	l145
  1540  036F                     l151:	
  1541                           ;Oscilador.c: 36:         case 6:
  1542                           
  1543                           
  1544                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1545  036F  1683               	bsf	3,5	;RP0=1, select bank1
  1546  0370  1303               	bcf	3,6	;RP1=0, select bank1
  1547  0371  170F               	bsf	15,6	;volatile
  1548                           
  1549                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1550  0372  168F               	bsf	15,5	;volatile
  1551                           
  1552                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1553  0373  120F               	bcf	15,4	;volatile
  1554                           
  1555                           ;Oscilador.c: 40:             break;
  1556  0374  2BA3               	goto	l145
  1557  0375                     l152:	
  1558                           ;Oscilador.c: 41:         case 7:
  1559                           
  1560                           
  1561                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1562  0375  1683               	bsf	3,5	;RP0=1, select bank1
  1563  0376  1303               	bcf	3,6	;RP1=0, select bank1
  1564  0377  170F               	bsf	15,6	;volatile
  1565                           
  1566                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1567  0378  168F               	bsf	15,5	;volatile
  1568                           
  1569                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1570  0379  160F               	bsf	15,4	;volatile
  1571                           
  1572                           ;Oscilador.c: 45:             break;
  1573  037A  2BA3               	goto	l145
  1574  037B                     l153:	
  1575                           ;Oscilador.c: 46:         default:
  1576                           
  1577                           
  1578                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1579  037B  1683               	bsf	3,5	;RP0=1, select bank1
  1580  037C  1303               	bcf	3,6	;RP1=0, select bank1
  1581  037D  170F               	bsf	15,6	;volatile
  1582                           
  1583                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1584  037E  168F               	bsf	15,5	;volatile
  1585                           
  1586                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1587  037F  120F               	bcf	15,4	;volatile
  1588                           
  1589                           ;Oscilador.c: 50:             break;
  1590  0380  2BA3               	goto	l145
  1591  0381                     l1158:
  1592  0381  0875               	movf	initOsc@IRCF,w
  1593  0382  00F3               	movwf	??_initOsc
  1594  0383  01F4               	clrf	??_initOsc+1
  1595                           
  1596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1597                           ; Switch size 1, requested type "simple"
  1598                           ; Number of cases is 1, Range of values is 0 to 0
  1599                           ; switch strategies available:
  1600                           ; Name         Instructions Cycles
  1601                           ; simple_byte            4     3 (average)
  1602                           ; direct_byte           11     8 (fixed)
  1603                           ; jumptable            260     6 (fixed)
  1604                           ;	Chosen strategy is simple_byte
  1605  0384  0874               	movf	??_initOsc+1,w
  1606  0385  3A00               	xorlw	0	; case 0
  1607  0386  1903               	skipnz
  1608  0387  2B89               	goto	l2158
  1609  0388  2B7B               	goto	l153
  1610  0389                     l2158:
  1611                           
  1612                           ; Switch size 1, requested type "simple"
  1613                           ; Number of cases is 8, Range of values is 0 to 7
  1614                           ; switch strategies available:
  1615                           ; Name         Instructions Cycles
  1616                           ; simple_byte           25    13 (average)
  1617                           ; direct_byte           32     8 (fixed)
  1618                           ; jumptable            260     6 (fixed)
  1619                           ;	Chosen strategy is simple_byte
  1620  0389  0873               	movf	??_initOsc,w
  1621  038A  3A00               	xorlw	0	; case 0
  1622  038B  1903               	skipnz
  1623  038C  2B4B               	goto	l144
  1624  038D  3A01               	xorlw	1	; case 1
  1625  038E  1903               	skipnz
  1626  038F  2B51               	goto	l146
  1627  0390  3A03               	xorlw	3	; case 2
  1628  0391  1903               	skipnz
  1629  0392  2B57               	goto	l147
  1630  0393  3A01               	xorlw	1	; case 3
  1631  0394  1903               	skipnz
  1632  0395  2B5D               	goto	l148
  1633  0396  3A07               	xorlw	7	; case 4
  1634  0397  1903               	skipnz
  1635  0398  2B63               	goto	l149
  1636  0399  3A01               	xorlw	1	; case 5
  1637  039A  1903               	skipnz
  1638  039B  2B69               	goto	l150
  1639  039C  3A03               	xorlw	3	; case 6
  1640  039D  1903               	skipnz
  1641  039E  2B6F               	goto	l151
  1642  039F  3A01               	xorlw	1	; case 7
  1643  03A0  1903               	skipnz
  1644  03A1  2B75               	goto	l152
  1645  03A2  2B7B               	goto	l153
  1646  03A3                     l145:
  1647                           
  1648                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1649  03A3  140F               	bsf	15,0	;volatile
  1650  03A4                     l154:
  1651  03A4  0008               	return
  1652  03A5                     __end_of_initOsc:
  1653                           
  1654                           	psect	text5
  1655  0627                     __ptext5:	
  1656 ;; *************** function _USART_Init_BaudRate *****************
  1657 ;; Defined at:
  1658 ;;		line 20 in file "USART.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1672 ;;      Params:         0       0       0       0       0
  1673 ;;      Locals:         0       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0
  1675 ;;      Totals:         0       0       0       0       0
  1676 ;;Total ram usage:        0 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; Hardware stack levels required when called:    1
  1679 ;; This function calls:
  1680 ;;		Nothing
  1681 ;; This function is called by:
  1682 ;;		_main
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           
  1687                           ;psect for function _USART_Init_BaudRate
  1688  0627                     _USART_Init_BaudRate:
  1689  0627                     l1192:	
  1690                           ;incstack = 0
  1691                           ; Regs used in _USART_Init_BaudRate: [wreg+status,2]
  1692                           
  1693                           
  1694                           ;USART.c: 21:     SPBRGH = 0;
  1695  0627  1683               	bsf	3,5	;RP0=1, select bank1
  1696  0628  1303               	bcf	3,6	;RP1=0, select bank1
  1697  0629  019A               	clrf	26	;volatile
  1698  062A                     l1194:
  1699                           
  1700                           ;USART.c: 22:     SPBRG = 12;
  1701  062A  300C               	movlw	12
  1702  062B  0099               	movwf	25	;volatile
  1703  062C                     l273:
  1704  062C  0008               	return
  1705  062D                     __end_of_USART_Init_BaudRate:
  1706                           
  1707                           	psect	text6
  1708  060F                     __ptext6:	
  1709 ;; *************** function _USART_Init *****************
  1710 ;; Defined at:
  1711 ;;		line 5 in file "USART.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		status,2
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1725 ;;      Params:         0       0       0       0       0
  1726 ;;      Locals:         0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0
  1728 ;;      Totals:         0       0       0       0       0
  1729 ;;Total ram usage:        0 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    1
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           
  1740                           ;psect for function _USART_Init
  1741  060F                     _USART_Init:
  1742  060F                     l1196:	
  1743                           ;incstack = 0
  1744                           ; Regs used in _USART_Init: [status,2]
  1745                           
  1746                           
  1747                           ;USART.c: 7:     RCSTAbits.SPEN = 1;
  1748  060F  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0610  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0611  1798               	bsf	24,7	;volatile
  1751                           
  1752                           ;USART.c: 8:     TXSTAbits.SYNC = 0;
  1753  0612  1683               	bsf	3,5	;RP0=1, select bank1
  1754  0613  1303               	bcf	3,6	;RP1=0, select bank1
  1755  0614  1218               	bcf	24,4	;volatile
  1756                           
  1757                           ;USART.c: 10:     TXSTAbits.TXEN = 1;
  1758  0615  1698               	bsf	24,5	;volatile
  1759                           
  1760                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  1761  0616  1318               	bcf	24,6	;volatile
  1762                           
  1763                           ;USART.c: 12:     TXSTAbits.BRGH = 1;
  1764  0617  1518               	bsf	24,2	;volatile
  1765                           
  1766                           ;USART.c: 13:     TXSTAbits.TRMT = 0;
  1767  0618  1098               	bcf	24,1	;volatile
  1768                           
  1769                           ;USART.c: 15:     RCSTAbits.RX9 = 0;
  1770  0619  1283               	bcf	3,5	;RP0=0, select bank0
  1771  061A  1303               	bcf	3,6	;RP1=0, select bank0
  1772  061B  1318               	bcf	24,6	;volatile
  1773                           
  1774                           ;USART.c: 16:     RCSTAbits.CREN = 1;
  1775  061C  1618               	bsf	24,4	;volatile
  1776  061D                     l1198:
  1777                           
  1778                           ;USART.c: 17:     RCREG = 0;
  1779  061D  019A               	clrf	26	;volatile
  1780  061E                     l270:
  1781  061E  0008               	return
  1782  061F                     __end_of_USART_Init:
  1783                           
  1784                           	psect	text7
  1785  062D                     __ptext7:	
  1786 ;; *************** function _USART_INTERRUPT *****************
  1787 ;; Defined at:
  1788 ;;		line 25 in file "USART.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;		None
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;		None
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		None
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1802 ;;      Params:         0       0       0       0       0
  1803 ;;      Locals:         0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0
  1805 ;;      Totals:         0       0       0       0       0
  1806 ;;Total ram usage:        0 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    1
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           
  1817                           ;psect for function _USART_INTERRUPT
  1818  062D                     _USART_INTERRUPT:
  1819  062D                     l1200:	
  1820                           ;incstack = 0
  1821                           ; Regs used in _USART_INTERRUPT: []
  1822                           
  1823                           
  1824                           ;USART.c: 26:     INTCONbits.GIE = 1;
  1825  062D  178B               	bsf	11,7	;volatile
  1826                           
  1827                           ;USART.c: 27:     INTCONbits.PEIE = 1;
  1828  062E  170B               	bsf	11,6	;volatile
  1829                           
  1830                           ;USART.c: 28:     PIE1bits.RCIE = 1;
  1831  062F  1683               	bsf	3,5	;RP0=1, select bank1
  1832  0630  1303               	bcf	3,6	;RP1=0, select bank1
  1833  0631  168C               	bsf	12,5	;volatile
  1834  0632                     l276:
  1835  0632  0008               	return
  1836  0633                     __end_of_USART_INTERRUPT:
  1837                           
  1838                           	psect	text8
  1839  05C5                     __ptext8:	
  1840 ;; *************** function _Trasmission *****************
  1841 ;; Defined at:
  1842 ;;		line 259 in file "pseudocodigo_lab3.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1856 ;;      Params:         0       0       0       0       0
  1857 ;;      Locals:         0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0
  1859 ;;      Totals:         0       0       0       0       0
  1860 ;;Total ram usage:        0 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    1
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           
  1871                           ;psect for function _Trasmission
  1872  05C5                     _Trasmission:
  1873  05C5                     l1266:	
  1874                           ;incstack = 0
  1875                           ; Regs used in _Trasmission: [wreg+status,2+status,0]
  1876                           
  1877                           
  1878                           ;pseudocodigo_lab3.c: 260:     if (PIR1bits.TXIF ){
  1879  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1880  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1881  05C7  1E0C               	btfss	12,4	;volatile
  1882  05C8  2DCA               	goto	u361
  1883  05C9  2DCB               	goto	u360
  1884  05CA                     u361:
  1885  05CA  2DD8               	goto	l135
  1886  05CB                     u360:
  1887  05CB                     l1268:
  1888                           
  1889                           ;pseudocodigo_lab3.c: 261:             if (eusart_toggle){
  1890  05CB  087A               	movf	_eusart_toggle,w
  1891  05CC  1903               	btfsc	3,2
  1892  05CD  2DCF               	goto	u371
  1893  05CE  2DD0               	goto	u370
  1894  05CF                     u371:
  1895  05CF  2DD4               	goto	l1274
  1896  05D0                     u370:
  1897  05D0                     l1270:
  1898                           
  1899                           ;pseudocodigo_lab3.c: 262:                 TXREG = data2;
  1900  05D0  302C               	movlw	(low _data2)& (0+255)
  1901  05D1  0099               	movwf	25	;volatile
  1902  05D2                     l1272:
  1903                           
  1904                           ;pseudocodigo_lab3.c: 263:                 eusart_toggle = 0;
  1905  05D2  01FA               	clrf	_eusart_toggle
  1906                           
  1907                           ;pseudocodigo_lab3.c: 264:             }
  1908  05D3  2DD8               	goto	l135
  1909  05D4                     l1274:
  1910                           
  1911                           ;pseudocodigo_lab3.c: 266:                 TXREG = data1;
  1912  05D4  3034               	movlw	(low _data1)& (0+255)
  1913  05D5  0099               	movwf	25	;volatile
  1914  05D6                     l1276:
  1915                           
  1916                           ;pseudocodigo_lab3.c: 267:                 eusart_toggle = 1;
  1917  05D6  01FA               	clrf	_eusart_toggle
  1918  05D7  0AFA               	incf	_eusart_toggle,f
  1919  05D8                     l135:
  1920  05D8  0008               	return
  1921  05D9                     __end_of_Trasmission:
  1922                           
  1923                           	psect	text9
  1924  0240                     __ptext9:	
  1925 ;; *************** function _Show_val_LCD *****************
  1926 ;; Defined at:
  1927 ;;		line 233 in file "pseudocodigo_lab3.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;		None
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;		None
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		wreg, status,2, status,0, pclath, cstack
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1941 ;;      Params:         0       0       0       0       0
  1942 ;;      Locals:         0       0       0       0       0
  1943 ;;      Temps:          0       2       0       0       0
  1944 ;;      Totals:         0       2       0       0       0
  1945 ;;Total ram usage:        2 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; Hardware stack levels required when called:    4
  1948 ;; This function calls:
  1949 ;;		_Lcd_Set_Cursor
  1950 ;;		_Lcd_Write_Char
  1951 ;; This function is called by:
  1952 ;;		_main
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           
  1957                           ;psect for function _Show_val_LCD
  1958  0240                     _Show_val_LCD:
  1959  0240                     l2018:	
  1960                           ;incstack = 0
  1961                           ; Regs used in _Show_val_LCD: [wreg+status,2+status,0+pclath+cstack]
  1962                           
  1963                           
  1964                           ;pseudocodigo_lab3.c: 235:         Lcd_Set_Cursor(2,1);
  1965  0240  01F7               	clrf	Lcd_Set_Cursor@b
  1966  0241  0AF7               	incf	Lcd_Set_Cursor@b,f
  1967  0242  3002               	movlw	2
  1968  0243  120A  118A  2506  120A  118A  	fcall	_Lcd_Set_Cursor
  1969                           
  1970                           ;pseudocodigo_lab3.c: 236:         Lcd_Write_Char(data2[0]);
  1971  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1973  024A  082C               	movf	_data2,w
  1974  024B  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  1975                           
  1976                           ;pseudocodigo_lab3.c: 237:         Lcd_Write_Char('.');
  1977  0250  302E               	movlw	46
  1978  0251  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  1979                           
  1980                           ;pseudocodigo_lab3.c: 238:         Lcd_Write_Char(data2[1]);
  1981  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1983  0258  082D               	movf	_data2+1,w
  1984  0259  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  1985                           
  1986                           ;pseudocodigo_lab3.c: 239:         Lcd_Write_Char(data2[2]);
  1987  025E  1283               	bcf	3,5	;RP0=0, select bank0
  1988  025F  1303               	bcf	3,6	;RP1=0, select bank0
  1989  0260  082E               	movf	_data2+2,w
  1990  0261  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  1991                           
  1992                           ;pseudocodigo_lab3.c: 240:         Lcd_Write_Char(data2[3]);
  1993  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0267  1303               	bcf	3,6	;RP1=0, select bank0
  1995  0268  082F               	movf	_data2+3,w
  1996  0269  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  1997                           
  1998                           ;pseudocodigo_lab3.c: 241:         Lcd_Write_Char(' ');
  1999  026E  3020               	movlw	32
  2000  026F  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  2001  0274                     l2020:
  2002                           
  2003                           ;pseudocodigo_lab3.c: 243:         _delay((unsigned long)((1)*(8000000/4000.0)));
  2004  0274  3003               	movlw	3
  2005  0275  1283               	bcf	3,5	;RP0=0, select bank0
  2006  0276  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0277  00C3               	movwf	??_Show_val_LCD+1
  2008  0278  3097               	movlw	151
  2009  0279  00C2               	movwf	??_Show_val_LCD
  2010  027A                     u1097:
  2011  027A  0BC2               	decfsz	??_Show_val_LCD,f
  2012  027B  2A7A               	goto	u1097
  2013  027C  0BC3               	decfsz	??_Show_val_LCD+1,f
  2014  027D  2A7A               	goto	u1097
  2015  027E                     l2022:
  2016                           
  2017                           ;pseudocodigo_lab3.c: 245:         Lcd_Set_Cursor(2,7);
  2018  027E  3007               	movlw	7
  2019  027F  1283               	bcf	3,5	;RP0=0, select bank0
  2020  0280  1303               	bcf	3,6	;RP1=0, select bank0
  2021  0281  00C2               	movwf	??_Show_val_LCD
  2022  0282  0842               	movf	??_Show_val_LCD,w
  2023  0283  00F7               	movwf	Lcd_Set_Cursor@b
  2024  0284  3002               	movlw	2
  2025  0285  120A  118A  2506  120A  118A  	fcall	_Lcd_Set_Cursor
  2026  028A                     l2024:
  2027                           
  2028                           ;pseudocodigo_lab3.c: 246:         Lcd_Write_Char(data1[0]);
  2029  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2030  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2031  028C  0834               	movf	_data1,w
  2032  028D  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  2033  0292                     l2026:
  2034                           
  2035                           ;pseudocodigo_lab3.c: 247:         Lcd_Write_Char('.');
  2036  0292  302E               	movlw	46
  2037  0293  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  2038  0298                     l2028:
  2039                           
  2040                           ;pseudocodigo_lab3.c: 248:         Lcd_Write_Char(data1[1]);
  2041  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2042  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2043  029A  0835               	movf	_data1+1,w
  2044  029B  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  2045  02A0                     l2030:
  2046                           
  2047                           ;pseudocodigo_lab3.c: 249:         Lcd_Write_Char(data1[2]);
  2048  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2049  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2050  02A2  0836               	movf	_data1+2,w
  2051  02A3  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  2052  02A8                     l2032:
  2053                           
  2054                           ;pseudocodigo_lab3.c: 250:         Lcd_Write_Char(data1[3]);
  2055  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2056  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2057  02AA  0837               	movf	_data1+3,w
  2058  02AB  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  2059  02B0                     l2034:
  2060                           
  2061                           ;pseudocodigo_lab3.c: 251:         Lcd_Write_Char(' ');
  2062  02B0  3020               	movlw	32
  2063  02B1  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  2064  02B6                     l2036:
  2065                           
  2066                           ;pseudocodigo_lab3.c: 253:         Lcd_Set_Cursor(2,13);
  2067  02B6  300D               	movlw	13
  2068  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2069  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2070  02B9  00C2               	movwf	??_Show_val_LCD
  2071  02BA  0842               	movf	??_Show_val_LCD,w
  2072  02BB  00F7               	movwf	Lcd_Set_Cursor@b
  2073  02BC  3002               	movlw	2
  2074  02BD  120A  118A  2506  120A  118A  	fcall	_Lcd_Set_Cursor
  2075  02C2                     l2038:
  2076                           
  2077                           ;pseudocodigo_lab3.c: 254:         Lcd_Write_Char(S3_cont[0]);
  2078  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2079  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2080  02C4  083C               	movf	_S3_cont,w
  2081  02C5  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  2082  02CA                     l2040:
  2083                           
  2084                           ;pseudocodigo_lab3.c: 255:         Lcd_Write_Char(S3_cont[1]);
  2085  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2086  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2087  02CC  083D               	movf	_S3_cont+1,w
  2088  02CD  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  2089  02D2                     l2042:
  2090                           
  2091                           ;pseudocodigo_lab3.c: 256:         Lcd_Write_Char(S3_cont[2]);
  2092  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2093  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2094  02D4  083E               	movf	_S3_cont+2,w
  2095  02D5  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  2096  02DA                     l2044:
  2097                           
  2098                           ;pseudocodigo_lab3.c: 257:         Lcd_Write_Char(' ');
  2099  02DA  3020               	movlw	32
  2100  02DB  120A  118A  259A  120A  118A  	fcall	_Lcd_Write_Char
  2101  02E0                     l129:
  2102  02E0  0008               	return
  2103  02E1                     __end_of_Show_val_LCD:
  2104                           
  2105                           	psect	text10
  2106  059A                     __ptext10:	
  2107 ;; *************** function _Lcd_Write_Char *****************
  2108 ;; Defined at:
  2109 ;;		line 61 in file "LCD.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  a               1    wreg     unsigned char 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  a               1    5[COMMON] unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0, pclath, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2123 ;;      Params:         0       0       0       0       0
  2124 ;;      Locals:         1       0       0       0       0
  2125 ;;      Temps:          1       0       0       0       0
  2126 ;;      Totals:         2       0       0       0       0
  2127 ;;Total ram usage:        2 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    2
  2130 ;; This function calls:
  2131 ;;		_Lcd_Port
  2132 ;; This function is called by:
  2133 ;;		_Show_val_LCD
  2134 ;;		_Lcd_Write_String
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _Lcd_Write_Char
  2140  059A                     _Lcd_Write_Char:
  2141                           
  2142                           ;incstack = 0
  2143                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2144                           ;Lcd_Write_Char@a stored from wreg
  2145  059A  00F5               	movwf	Lcd_Write_Char@a
  2146  059B                     l1846:
  2147                           
  2148                           ;LCD.c: 62:    PORTEbits.RE0 = 1;
  2149  059B  1283               	bcf	3,5	;RP0=0, select bank0
  2150  059C  1303               	bcf	3,6	;RP1=0, select bank0
  2151  059D  1409               	bsf	9,0	;volatile
  2152  059E                     l1848:
  2153                           
  2154                           ;LCD.c: 63:    Lcd_Port(a);
  2155  059E  0875               	movf	Lcd_Write_Char@a,w
  2156  059F  120A  118A  2633  120A  118A  	fcall	_Lcd_Port
  2157  05A4                     l1850:
  2158                           
  2159                           ;LCD.c: 64:    PORTEbits.RE2 = 1;
  2160  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  2161  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  2162  05A6  1509               	bsf	9,2	;volatile
  2163  05A7                     l1852:
  2164                           
  2165                           ;LCD.c: 65:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2166  05A7  301A               	movlw	26
  2167  05A8  00F4               	movwf	??_Lcd_Write_Char
  2168  05A9                     u1107:
  2169  05A9  0BF4               	decfsz	??_Lcd_Write_Char,f
  2170  05AA  2DA9               	goto	u1107
  2171  05AB  0000               	nop
  2172  05AC                     l1854:
  2173                           
  2174                           ;LCD.c: 66:    PORTEbits.RE2 = 0;
  2175  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  2176  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  2177  05AE  1109               	bcf	9,2	;volatile
  2178  05AF                     l185:
  2179  05AF  0008               	return
  2180  05B0                     __end_of_Lcd_Write_Char:
  2181                           
  2182                           	psect	text11
  2183  0506                     __ptext11:	
  2184 ;; *************** function _Lcd_Set_Cursor *****************
  2185 ;; Defined at:
  2186 ;;		line 48 in file "LCD.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  a               1    wreg     unsigned char 
  2189 ;;  b               1    7[COMMON] unsigned char 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  a               1    1[BANK0 ] unsigned char 
  2192 ;;  temp            1    2[BANK0 ] unsigned char 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0, pclath, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2202 ;;      Params:         1       0       0       0       0
  2203 ;;      Locals:         0       2       0       0       0
  2204 ;;      Temps:          0       1       0       0       0
  2205 ;;      Totals:         1       3       0       0       0
  2206 ;;Total ram usage:        4 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    3
  2209 ;; This function calls:
  2210 ;;		_Lcd_Cmd
  2211 ;; This function is called by:
  2212 ;;		_titulos_LCD
  2213 ;;		_Show_val_LCD
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           
  2218                           ;psect for function _Lcd_Set_Cursor
  2219  0506                     _Lcd_Set_Cursor:
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2223                           ;Lcd_Set_Cursor@a stored from wreg
  2224  0506  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0507  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0508  00C0               	movwf	Lcd_Set_Cursor@a
  2227  0509                     l1892:
  2228                           
  2229                           ;LCD.c: 49:  char temp;;LCD.c: 50:  if(a == 1){
  2230  0509  0340               	decf	Lcd_Set_Cursor@a,w
  2231  050A  1D03               	btfss	3,2
  2232  050B  2D0D               	goto	u901
  2233  050C  2D0E               	goto	u900
  2234  050D                     u901:
  2235  050D  2D1A               	goto	l1898
  2236  050E                     u900:
  2237  050E                     l1894:
  2238                           
  2239                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2240  050E  0877               	movf	Lcd_Set_Cursor@b,w
  2241  050F  3E7F               	addlw	127
  2242  0510  00BF               	movwf	??_Lcd_Set_Cursor
  2243  0511  083F               	movf	??_Lcd_Set_Cursor,w
  2244  0512  00C1               	movwf	Lcd_Set_Cursor@temp
  2245  0513                     l1896:
  2246                           
  2247                           ;LCD.c: 52:         Lcd_Cmd(temp);
  2248  0513  0841               	movf	Lcd_Set_Cursor@temp,w
  2249  0514  120A  118A  2580  120A  118A  	fcall	_Lcd_Cmd
  2250                           
  2251                           ;LCD.c: 53:  }
  2252  0519  2D2B               	goto	l182
  2253  051A                     l1898:
  2254  051A  3002               	movlw	2
  2255  051B  0640               	xorwf	Lcd_Set_Cursor@a,w
  2256  051C  1D03               	btfss	3,2
  2257  051D  2D1F               	goto	u911
  2258  051E  2D20               	goto	u910
  2259  051F                     u911:
  2260  051F  2D2B               	goto	l182
  2261  0520                     u910:
  2262  0520                     l1900:
  2263                           
  2264                           ;LCD.c: 55:   temp = 0xC0 + b - 1;
  2265  0520  0877               	movf	Lcd_Set_Cursor@b,w
  2266  0521  3EBF               	addlw	191
  2267  0522  00BF               	movwf	??_Lcd_Set_Cursor
  2268  0523  083F               	movf	??_Lcd_Set_Cursor,w
  2269  0524  00C1               	movwf	Lcd_Set_Cursor@temp
  2270  0525                     l1902:
  2271                           
  2272                           ;LCD.c: 56:   Lcd_Cmd(temp);
  2273  0525  0841               	movf	Lcd_Set_Cursor@temp,w
  2274  0526  120A  118A  2580  120A  118A  	fcall	_Lcd_Cmd
  2275  052B                     l182:
  2276  052B  0008               	return
  2277  052C                     __end_of_Lcd_Set_Cursor:
  2278                           
  2279                           	psect	text12
  2280  03A5                     __ptext12:	
  2281 ;; *************** function _Lcd_Init *****************
  2282 ;; Defined at:
  2283 ;;		line 14 in file "LCD.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;		None
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;		None
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, status,2, status,0, pclath, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2297 ;;      Params:         0       0       0       0       0
  2298 ;;      Locals:         0       0       0       0       0
  2299 ;;      Temps:          0       2       0       0       0
  2300 ;;      Totals:         0       2       0       0       0
  2301 ;;Total ram usage:        2 bytes
  2302 ;; Hardware stack levels used:    1
  2303 ;; Hardware stack levels required when called:    3
  2304 ;; This function calls:
  2305 ;;		_Lcd_Cmd
  2306 ;;		_Lcd_Port
  2307 ;; This function is called by:
  2308 ;;		_main
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           
  2313                           ;psect for function _Lcd_Init
  2314  03A5                     _Lcd_Init:
  2315  03A5                     l2002:	
  2316                           ;incstack = 0
  2317                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2318                           
  2319                           
  2320                           ;LCD.c: 15:   Lcd_Port(0x00);
  2321  03A5  3000               	movlw	0
  2322  03A6  120A  118A  2633  120A  118A  	fcall	_Lcd_Port
  2323  03AB                     l2004:
  2324                           
  2325                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2326  03AB  3034               	movlw	52
  2327  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2328  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2329  03AE  00C0               	movwf	??_Lcd_Init+1
  2330  03AF  30F1               	movlw	241
  2331  03B0  00BF               	movwf	??_Lcd_Init
  2332  03B1                     u1117:
  2333  03B1  0BBF               	decfsz	??_Lcd_Init,f
  2334  03B2  2BB1               	goto	u1117
  2335  03B3  0BC0               	decfsz	??_Lcd_Init+1,f
  2336  03B4  2BB1               	goto	u1117
  2337  03B5                     l2006:
  2338                           
  2339                           ;LCD.c: 17:   Lcd_Cmd(0x30);
  2340  03B5  3030               	movlw	48
  2341  03B6  120A  118A  2580  120A  118A  	fcall	_Lcd_Cmd
  2342                           
  2343                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2344  03BB  300D               	movlw	13
  2345  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2346  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2347  03BE  00C0               	movwf	??_Lcd_Init+1
  2348  03BF  30FB               	movlw	251
  2349  03C0  00BF               	movwf	??_Lcd_Init
  2350  03C1                     u1127:
  2351  03C1  0BBF               	decfsz	??_Lcd_Init,f
  2352  03C2  2BC1               	goto	u1127
  2353  03C3  0BC0               	decfsz	??_Lcd_Init+1,f
  2354  03C4  2BC1               	goto	u1127
  2355  03C5                     l2008:
  2356                           
  2357                           ;LCD.c: 19:   Lcd_Cmd(0x30);
  2358  03C5  3030               	movlw	48
  2359  03C6  120A  118A  2580  120A  118A  	fcall	_Lcd_Cmd
  2360  03CB                     l2010:
  2361                           
  2362                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2363  03CB  301D               	movlw	29
  2364  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2365  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2366  03CE  00C0               	movwf	??_Lcd_Init+1
  2367  03CF  3090               	movlw	144
  2368  03D0  00BF               	movwf	??_Lcd_Init
  2369  03D1                     u1137:
  2370  03D1  0BBF               	decfsz	??_Lcd_Init,f
  2371  03D2  2BD1               	goto	u1137
  2372  03D3  0BC0               	decfsz	??_Lcd_Init+1,f
  2373  03D4  2BD1               	goto	u1137
  2374  03D5  0000               	nop
  2375                           
  2376                           ;LCD.c: 21:   Lcd_Cmd(0x30);
  2377  03D6  3030               	movlw	48
  2378  03D7  120A  118A  2580  120A  118A  	fcall	_Lcd_Cmd
  2379                           
  2380                           ;LCD.c: 22:   Lcd_Cmd(0x38);
  2381  03DC  3038               	movlw	56
  2382  03DD  120A  118A  2580  120A  118A  	fcall	_Lcd_Cmd
  2383                           
  2384                           ;LCD.c: 23:   Lcd_Cmd(0x0C);
  2385  03E2  300C               	movlw	12
  2386  03E3  120A  118A  2580  120A  118A  	fcall	_Lcd_Cmd
  2387                           
  2388                           ;LCD.c: 24:   Lcd_Cmd(0x01);
  2389  03E8  3001               	movlw	1
  2390  03E9  120A  118A  2580  120A  118A  	fcall	_Lcd_Cmd
  2391                           
  2392                           ;LCD.c: 25:   Lcd_Cmd(0x06);
  2393  03EE  3006               	movlw	6
  2394  03EF  120A  118A  2580  120A  118A  	fcall	_Lcd_Cmd
  2395  03F4                     l167:
  2396  03F4  0008               	return
  2397  03F5                     __end_of_Lcd_Init:
  2398                           
  2399                           	psect	text13
  2400  0580                     __ptext13:	
  2401 ;; *************** function _Lcd_Cmd *****************
  2402 ;; Defined at:
  2403 ;;		line 33 in file "LCD.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  a               1    wreg     unsigned char 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  a               1    6[COMMON] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      void 
  2410 ;; Registers used:
  2411 ;;		wreg, status,2, status,0, pclath, cstack
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2417 ;;      Params:         0       0       0       0       0
  2418 ;;      Locals:         1       0       0       0       0
  2419 ;;      Temps:          2       0       0       0       0
  2420 ;;      Totals:         3       0       0       0       0
  2421 ;;Total ram usage:        3 bytes
  2422 ;; Hardware stack levels used:    1
  2423 ;; Hardware stack levels required when called:    2
  2424 ;; This function calls:
  2425 ;;		_Lcd_Port
  2426 ;; This function is called by:
  2427 ;;		_Lcd_Init
  2428 ;;		_Lcd_Set_Cursor
  2429 ;;		_Lcd_Clear
  2430 ;;		_Lcd_Shift_Right
  2431 ;;		_Lcd_Shift_Left
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           
  2436                           ;psect for function _Lcd_Cmd
  2437  0580                     _Lcd_Cmd:
  2438                           
  2439                           ;incstack = 0
  2440                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2441                           ;Lcd_Cmd@a stored from wreg
  2442  0580  00F6               	movwf	Lcd_Cmd@a
  2443  0581                     l1856:
  2444                           
  2445                           ;LCD.c: 34:  PORTEbits.RE0 = 0;
  2446  0581  1283               	bcf	3,5	;RP0=0, select bank0
  2447  0582  1303               	bcf	3,6	;RP1=0, select bank0
  2448  0583  1009               	bcf	9,0	;volatile
  2449  0584                     l1858:
  2450                           
  2451                           ;LCD.c: 35:  Lcd_Port(a);
  2452  0584  0876               	movf	Lcd_Cmd@a,w
  2453  0585  120A  118A  2633  120A  118A  	fcall	_Lcd_Port
  2454  058A                     l1860:
  2455                           
  2456                           ;LCD.c: 36:  PORTEbits.RE2 = 1;
  2457  058A  1283               	bcf	3,5	;RP0=0, select bank0
  2458  058B  1303               	bcf	3,6	;RP1=0, select bank0
  2459  058C  1509               	bsf	9,2	;volatile
  2460  058D                     l1862:
  2461                           
  2462                           ;LCD.c: 37:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2463  058D  300B               	movlw	11
  2464  058E  00F5               	movwf	??_Lcd_Cmd+1
  2465  058F  3062               	movlw	98
  2466  0590  00F4               	movwf	??_Lcd_Cmd
  2467  0591                     u1147:
  2468  0591  0BF4               	decfsz	??_Lcd_Cmd,f
  2469  0592  2D91               	goto	u1147
  2470  0593  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2471  0594  2D91               	goto	u1147
  2472  0595  0000               	nop
  2473  0596                     l1864:
  2474                           
  2475                           ;LCD.c: 38:         PORTEbits.RE2 = 0;
  2476  0596  1283               	bcf	3,5	;RP0=0, select bank0
  2477  0597  1303               	bcf	3,6	;RP1=0, select bank0
  2478  0598  1109               	bcf	9,2	;volatile
  2479  0599                     l173:
  2480  0599  0008               	return
  2481  059A                     __end_of_Lcd_Cmd:
  2482                           
  2483                           	psect	text14
  2484  0633                     __ptext14:	
  2485 ;; *************** function _Lcd_Port *****************
  2486 ;; Defined at:
  2487 ;;		line 29 in file "LCD.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  a               1    wreg     unsigned char 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  a               1    3[COMMON] unsigned char 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		wreg
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2501 ;;      Params:         0       0       0       0       0
  2502 ;;      Locals:         1       0       0       0       0
  2503 ;;      Temps:          0       0       0       0       0
  2504 ;;      Totals:         1       0       0       0       0
  2505 ;;Total ram usage:        1 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    1
  2508 ;; This function calls:
  2509 ;;		Nothing
  2510 ;; This function is called by:
  2511 ;;		_Lcd_Init
  2512 ;;		_Lcd_Cmd
  2513 ;;		_Lcd_Write_Char
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           
  2518                           ;psect for function _Lcd_Port
  2519  0633                     _Lcd_Port:
  2520                           
  2521                           ;incstack = 0
  2522                           ; Regs used in _Lcd_Port: [wreg]
  2523                           ;Lcd_Port@a stored from wreg
  2524  0633  00F3               	movwf	Lcd_Port@a
  2525  0634                     l1844:
  2526                           
  2527                           ;LCD.c: 30:     PORTD = a;
  2528  0634  0873               	movf	Lcd_Port@a,w
  2529  0635  1283               	bcf	3,5	;RP0=0, select bank0
  2530  0636  1303               	bcf	3,6	;RP1=0, select bank0
  2531  0637  0088               	movwf	8	;volatile
  2532  0638                     l170:
  2533  0638  0008               	return
  2534  0639                     __end_of_Lcd_Port:
  2535                           
  2536                           	psect	text15
  2537  043B                     __ptext15:	
  2538 ;; *************** function _ADC_to_string *****************
  2539 ;; Defined at:
  2540 ;;		line 225 in file "pseudocodigo_lab3.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2554 ;;      Params:         0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0
  2556 ;;      Temps:          0       3       0       0       0
  2557 ;;      Totals:         0       3       0       0       0
  2558 ;;Total ram usage:        3 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    3
  2561 ;; This function calls:
  2562 ;;		_sprintf
  2563 ;; This function is called by:
  2564 ;;		_main
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           
  2569                           ;psect for function _ADC_to_string
  2570  043B                     _ADC_to_string:
  2571  043B                     l2016:	
  2572                           ;incstack = 0
  2573                           ; Regs used in _ADC_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2574                           
  2575                           
  2576                           ;pseudocodigo_lab3.c: 226:     sprintf(data2, "%.3iV", S1_val<<1);
  2577  043B  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2578  043C  1283               	bcf	3,5	;RP0=0, select bank0
  2579  043D  1303               	bcf	3,6	;RP1=0, select bank0
  2580  043E  00D5               	movwf	??_ADC_to_string
  2581  043F  0855               	movf	??_ADC_to_string,w
  2582  0440  00C8               	movwf	sprintf@f
  2583  0441  082B               	movf	_S1_val,w
  2584  0442  00D6               	movwf	??_ADC_to_string+1
  2585  0443  01D7               	clrf	??_ADC_to_string+2
  2586  0444  1003               	clrc
  2587  0445  0D56               	rlf	??_ADC_to_string+1,w
  2588  0446  00C9               	movwf	?_sprintf+1
  2589  0447  0D57               	rlf	??_ADC_to_string+2,w
  2590  0448  00CA               	movwf	?_sprintf+2
  2591  0449  302C               	movlw	(low (_data2| 0))& (0+255)
  2592  044A  120A  118A  201F  120A  118A  	fcall	_sprintf
  2593                           
  2594                           ;pseudocodigo_lab3.c: 227:     sprintf(data1, "%.3iV", S2_val<<1);
  2595  044F  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2596  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2597  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2598  0452  00D5               	movwf	??_ADC_to_string
  2599  0453  0855               	movf	??_ADC_to_string,w
  2600  0454  00C8               	movwf	sprintf@f
  2601  0455  082A               	movf	_S2_val,w
  2602  0456  00D6               	movwf	??_ADC_to_string+1
  2603  0457  01D7               	clrf	??_ADC_to_string+2
  2604  0458  1003               	clrc
  2605  0459  0D56               	rlf	??_ADC_to_string+1,w
  2606  045A  00C9               	movwf	?_sprintf+1
  2607  045B  0D57               	rlf	??_ADC_to_string+2,w
  2608  045C  00CA               	movwf	?_sprintf+2
  2609  045D  3034               	movlw	(low (_data1| 0))& (0+255)
  2610  045E  120A  118A  201F  120A  118A  	fcall	_sprintf
  2611                           
  2612                           ;pseudocodigo_lab3.c: 228:     sprintf(S3_cont, "%.3i", cont);
  2613  0463  3020               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2614  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2615  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2616  0466  00D5               	movwf	??_ADC_to_string
  2617  0467  0855               	movf	??_ADC_to_string,w
  2618  0468  00C8               	movwf	sprintf@f
  2619  0469  0879               	movf	_cont,w
  2620  046A  00D6               	movwf	??_ADC_to_string+1
  2621  046B  01D7               	clrf	??_ADC_to_string+2
  2622  046C  0856               	movf	??_ADC_to_string+1,w
  2623  046D  00C9               	movwf	?_sprintf+1
  2624  046E  0857               	movf	??_ADC_to_string+2,w
  2625  046F  00CA               	movwf	?_sprintf+2
  2626  0470  303C               	movlw	(low (_S3_cont| 0))& (0+255)
  2627  0471  120A  118A  201F  120A  118A  	fcall	_sprintf
  2628  0476                     l126:
  2629  0476  0008               	return
  2630  0477                     __end_of_ADC_to_string:
  2631                           
  2632                           	psect	text16
  2633  001F                     __ptext16:	
  2634 ;; *************** function _sprintf *****************
  2635 ;; Defined at:
  2636 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  sp              1    wreg     PTR unsigned char 
  2639 ;;		 -> S3_cont(3), data1(8), data2(8), 
  2640 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  2641 ;;		 -> STR_4(5), STR_3(6), STR_2(6), 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  2644 ;;		 -> S3_cont(3), data1(8), data2(8), 
  2645 ;;  tmpval          4    0        struct .
  2646 ;;  val             2   17[BANK0 ] unsigned int 
  2647 ;;  cp              2    0        PTR const unsigned char 
  2648 ;;  len             2    0        unsigned int 
  2649 ;;  c               1   21[BANK0 ] unsigned char 
  2650 ;;  prec            1   20[BANK0 ] char 
  2651 ;;  flag            1   16[BANK0 ] unsigned char 
  2652 ;;  ap              1   15[BANK0 ] PTR void [1]
  2653 ;;		 -> ?_sprintf(2), 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  2    9[BANK0 ] int 
  2656 ;; Registers used:
  2657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2663 ;;      Params:         0       3       0       0       0
  2664 ;;      Locals:         0       7       0       0       0
  2665 ;;      Temps:          0       3       0       0       0
  2666 ;;      Totals:         0      13       0       0       0
  2667 ;;Total ram usage:       13 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    2
  2670 ;; This function calls:
  2671 ;;		___bmul
  2672 ;;		___lwdiv
  2673 ;;		___lwmod
  2674 ;;		_isdigit
  2675 ;; This function is called by:
  2676 ;;		_ADC_to_string
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           
  2681                           ;psect for function _sprintf
  2682  001F                     _sprintf:
  2683                           
  2684                           ;incstack = 0
  2685                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2686                           ;sprintf@sp stored from wreg
  2687  001F  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0020  1303               	bcf	3,6	;RP1=0, select bank0
  2689  0021  00D2               	movwf	sprintf@sp
  2690  0022                     l1912:
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2693  0022  3049               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2694  0023  00CB               	movwf	??_sprintf
  2695  0024  084B               	movf	??_sprintf,w
  2696  0025  00CE               	movwf	sprintf@ap
  2697                           
  2698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2699  0026  296D               	goto	l1990
  2700  0027                     l1914:
  2701                           
  2702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2703  0027  3025               	movlw	37
  2704  0028  0654               	xorwf	sprintf@c,w
  2705  0029  1903               	btfsc	3,2
  2706  002A  282C               	goto	u931
  2707  002B  282D               	goto	u930
  2708  002C                     u931:
  2709  002C  2839               	goto	l1920
  2710  002D                     u930:
  2711  002D                     l1916:
  2712                           
  2713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2714  002D  0854               	movf	sprintf@c,w
  2715  002E  00CB               	movwf	??_sprintf
  2716  002F  0852               	movf	sprintf@sp,w
  2717  0030  0084               	movwf	4
  2718  0031  084B               	movf	??_sprintf,w
  2719  0032  1383               	bcf	3,7	;select IRP bank0
  2720  0033  0080               	movwf	0
  2721  0034                     l1918:
  2722  0034  3001               	movlw	1
  2723  0035  00CB               	movwf	??_sprintf
  2724  0036  084B               	movf	??_sprintf,w
  2725  0037  07D2               	addwf	sprintf@sp,f
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2728  0038  296D               	goto	l1990
  2729  0039                     l1920:
  2730                           
  2731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2732  0039  01CF               	clrf	sprintf@flag
  2733  003A                     l1922:
  2734                           
  2735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2736  003A  0848               	movf	sprintf@f,w
  2737  003B  0084               	movwf	4
  2738  003C  120A  118A  24B3  120A  118A  	fcall	stringdir
  2739  0041  3A2E               	xorlw	46
  2740  0042  1D03               	skipz
  2741  0043  2845               	goto	u941
  2742  0044  2846               	goto	u940
  2743  0045                     u941:
  2744  0045  287D               	goto	l1936
  2745  0046                     u940:
  2746  0046                     l1924:
  2747                           
  2748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2749  0046  3001               	movlw	1
  2750  0047  00CB               	movwf	??_sprintf
  2751  0048  084B               	movf	??_sprintf,w
  2752  0049  07C8               	addwf	sprintf@f,f
  2753  004A                     l1926:
  2754                           
  2755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2756  004A  01D3               	clrf	sprintf@prec
  2757                           
  2758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2759  004B  286C               	goto	l1934
  2760  004C                     l1928:
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2763  004C  1283               	bcf	3,5	;RP0=0, select bank0
  2764  004D  1303               	bcf	3,6	;RP1=0, select bank0
  2765  004E  0853               	movf	sprintf@prec,w
  2766  004F  00CB               	movwf	??_sprintf
  2767  0050  084B               	movf	??_sprintf,w
  2768  0051  00F3               	movwf	___bmul@multiplicand
  2769  0052  300A               	movlw	10
  2770  0053  120A  118A  25B0  120A  118A  	fcall	___bmul
  2771  0058  1283               	bcf	3,5	;RP0=0, select bank0
  2772  0059  1303               	bcf	3,6	;RP1=0, select bank0
  2773  005A  00CC               	movwf	??_sprintf+1
  2774  005B  084C               	movf	??_sprintf+1,w
  2775  005C  00D3               	movwf	sprintf@prec
  2776  005D                     l1930:
  2777                           
  2778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2779  005D  0848               	movf	sprintf@f,w
  2780  005E  0084               	movwf	4
  2781  005F  120A  118A  24B3  120A  118A  	fcall	stringdir
  2782  0064  3ED0               	addlw	-48
  2783  0065  00CB               	movwf	??_sprintf
  2784  0066  084B               	movf	??_sprintf,w
  2785  0067  07D3               	addwf	sprintf@prec,f
  2786  0068                     l1932:
  2787  0068  3001               	movlw	1
  2788  0069  00CB               	movwf	??_sprintf
  2789  006A  084B               	movf	??_sprintf,w
  2790  006B  07C8               	addwf	sprintf@f,f
  2791  006C                     l1934:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2794  006C  0848               	movf	sprintf@f,w
  2795  006D  0084               	movwf	4
  2796  006E  120A  118A  24B3  120A  118A  	fcall	stringdir
  2797  0073  120A  118A  25EC  120A  118A  	fcall	_isdigit
  2798  0078  1803               	btfsc	3,0
  2799  0079  287B               	goto	u951
  2800  007A  287C               	goto	u950
  2801  007B                     u951:
  2802  007B  284C               	goto	l1928
  2803  007C                     u950:
  2804  007C  287E               	goto	l1940
  2805  007D                     l1936:
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2808  007D  01D3               	clrf	sprintf@prec
  2809  007E                     l1940:
  2810  007E  3001               	movlw	1
  2811  007F  1283               	bcf	3,5	;RP0=0, select bank0
  2812  0080  1303               	bcf	3,6	;RP1=0, select bank0
  2813  0081  07C8               	addwf	sprintf@f,f
  2814  0082  30FF               	movlw	-1
  2815  0083  0748               	addwf	sprintf@f,w
  2816  0084  0084               	movwf	4
  2817  0085  120A  118A  24B3  120A  118A  	fcall	stringdir
  2818  008A  00D4               	movwf	sprintf@c
  2819  008B  00CB               	movwf	??_sprintf
  2820  008C  01CC               	clrf	??_sprintf+1
  2821                           
  2822                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2823                           ; Switch size 1, requested type "simple"
  2824                           ; Number of cases is 1, Range of values is 0 to 0
  2825                           ; switch strategies available:
  2826                           ; Name         Instructions Cycles
  2827                           ; simple_byte            4     3 (average)
  2828                           ; direct_byte           11     8 (fixed)
  2829                           ; jumptable            260     6 (fixed)
  2830                           ;	Chosen strategy is simple_byte
  2831  008D  084C               	movf	??_sprintf+1,w
  2832  008E  3A00               	xorlw	0	; case 0
  2833  008F  1903               	skipnz
  2834  0090  2892               	goto	l2160
  2835  0091  296D               	goto	l1990
  2836  0092                     l2160:
  2837                           
  2838                           ; Switch size 1, requested type "simple"
  2839                           ; Number of cases is 3, Range of values is 0 to 105
  2840                           ; switch strategies available:
  2841                           ; Name         Instructions Cycles
  2842                           ; simple_byte           10     6 (average)
  2843                           ; jumptable            260     6 (fixed)
  2844                           ;	Chosen strategy is simple_byte
  2845  0092  084B               	movf	??_sprintf,w
  2846  0093  3A00               	xorlw	0	; case 0
  2847  0094  1903               	skipnz
  2848  0095  297F               	goto	l1992
  2849  0096  3A64               	xorlw	100	; case 100
  2850  0097  1903               	skipnz
  2851  0098  289D               	goto	l1942
  2852  0099  3A0D               	xorlw	13	; case 105
  2853  009A  1903               	skipnz
  2854  009B  289D               	goto	l1942
  2855  009C  296D               	goto	l1990
  2856  009D                     l1942:
  2857                           
  2858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2859  009D  084E               	movf	sprintf@ap,w
  2860  009E  0084               	movwf	4
  2861  009F  1383               	bcf	3,7	;select IRP bank0
  2862  00A0  0800               	movf	0,w
  2863  00A1  00D0               	movwf	sprintf@val
  2864  00A2  0A84               	incf	4,f
  2865  00A3  0800               	movf	0,w
  2866  00A4  00D1               	movwf	sprintf@val+1
  2867  00A5                     l1944:
  2868  00A5  3002               	movlw	2
  2869  00A6  00CB               	movwf	??_sprintf
  2870  00A7  084B               	movf	??_sprintf,w
  2871  00A8  07CE               	addwf	sprintf@ap,f
  2872  00A9                     l1946:
  2873                           
  2874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2875  00A9  1FD1               	btfss	sprintf@val+1,7
  2876  00AA  28AC               	goto	u961
  2877  00AB  28AD               	goto	u960
  2878  00AC                     u961:
  2879  00AC  28B6               	goto	l1952
  2880  00AD                     u960:
  2881  00AD                     l1948:
  2882                           
  2883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2884  00AD  3003               	movlw	3
  2885  00AE  00CB               	movwf	??_sprintf
  2886  00AF  084B               	movf	??_sprintf,w
  2887  00B0  04CF               	iorwf	sprintf@flag,f
  2888  00B1                     l1950:
  2889                           
  2890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2891  00B1  09D0               	comf	sprintf@val,f
  2892  00B2  09D1               	comf	sprintf@val+1,f
  2893  00B3  0AD0               	incf	sprintf@val,f
  2894  00B4  1903               	skipnz
  2895  00B5  0AD1               	incf	sprintf@val+1,f
  2896  00B6                     l1952:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  2899  00B6  0853               	movf	sprintf@prec,w
  2900  00B7  1D03               	btfss	3,2
  2901  00B8  28BA               	goto	u971
  2902  00B9  28BB               	goto	u970
  2903  00BA                     u971:
  2904  00BA  28C5               	goto	l1958
  2905  00BB                     u970:
  2906  00BB                     l1954:
  2907  00BB  0850               	movf	sprintf@val,w
  2908  00BC  0451               	iorwf	sprintf@val+1,w
  2909  00BD  1D03               	btfss	3,2
  2910  00BE  28C0               	goto	u981
  2911  00BF  28C1               	goto	u980
  2912  00C0                     u981:
  2913  00C0  28C5               	goto	l1958
  2914  00C1                     u980:
  2915  00C1                     l1956:
  2916                           
  2917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  2918  00C1  3001               	movlw	1
  2919  00C2  00CB               	movwf	??_sprintf
  2920  00C3  084B               	movf	??_sprintf,w
  2921  00C4  07D3               	addwf	sprintf@prec,f
  2922  00C5                     l1958:
  2923                           
  2924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2925  00C5  01D4               	clrf	sprintf@c
  2926  00C6  0AD4               	incf	sprintf@c,f
  2927  00C7                     l1962:
  2928                           
  2929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2930  00C7  0854               	movf	sprintf@c,w
  2931  00C8  00CB               	movwf	??_sprintf
  2932  00C9  074B               	addwf	??_sprintf,w
  2933  00CA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2934  00CB  0084               	movwf	4
  2935  00CC  120A  118A  24B3  120A  118A  	fcall	stringdir
  2936  00D1  00CC               	movwf	??_sprintf+1
  2937  00D2  120A  118A  24B3  120A  118A  	fcall	stringdir
  2938  00D7  00CD               	movwf	??_sprintf+2
  2939  00D8  084D               	movf	??_sprintf+2,w
  2940  00D9  0251               	subwf	sprintf@val+1,w
  2941  00DA  1D03               	skipz
  2942  00DB  28DE               	goto	u995
  2943  00DC  084C               	movf	??_sprintf+1,w
  2944  00DD  0250               	subwf	sprintf@val,w
  2945  00DE                     u995:
  2946  00DE  1803               	skipnc
  2947  00DF  28E1               	goto	u991
  2948  00E0  28E2               	goto	u990
  2949  00E1                     u991:
  2950  00E1  28E3               	goto	l1966
  2951  00E2                     u990:
  2952  00E2  28ED               	goto	l1968
  2953  00E3                     l1966:
  2954  00E3  3001               	movlw	1
  2955  00E4  00CB               	movwf	??_sprintf
  2956  00E5  084B               	movf	??_sprintf,w
  2957  00E6  07D4               	addwf	sprintf@c,f
  2958  00E7  3005               	movlw	5
  2959  00E8  0654               	xorwf	sprintf@c,w
  2960  00E9  1D03               	btfss	3,2
  2961  00EA  28EC               	goto	u1001
  2962  00EB  28ED               	goto	u1000
  2963  00EC                     u1001:
  2964  00EC  28C7               	goto	l1962
  2965  00ED                     u1000:
  2966  00ED                     l1968:
  2967                           
  2968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  2969  00ED  0853               	movf	sprintf@prec,w
  2970  00EE  00CB               	movwf	??_sprintf
  2971  00EF  01CC               	clrf	??_sprintf+1
  2972  00F0  1BCB               	btfsc	??_sprintf,7
  2973  00F1  03CC               	decf	??_sprintf+1,f
  2974  00F2  084C               	movf	??_sprintf+1,w
  2975  00F3  3A80               	xorlw	128
  2976  00F4  3C80               	sublw	128
  2977  00F5  1D03               	skipz
  2978  00F6  28F9               	goto	u1015
  2979  00F7  084B               	movf	??_sprintf,w
  2980  00F8  0254               	subwf	sprintf@c,w
  2981  00F9                     u1015:
  2982  00F9  1803               	skipnc
  2983  00FA  28FC               	goto	u1011
  2984  00FB  28FD               	goto	u1010
  2985  00FC                     u1011:
  2986  00FC  28FE               	goto	l1972
  2987  00FD                     u1010:
  2988  00FD                     l1970:
  2989  00FD  2918               	goto	l1976
  2990  00FE                     l1972:
  2991  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  2992  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0100  0853               	movf	sprintf@prec,w
  2994  0101  00CB               	movwf	??_sprintf
  2995  0102  01CC               	clrf	??_sprintf+1
  2996  0103  1BCB               	btfsc	??_sprintf,7
  2997  0104  03CC               	decf	??_sprintf+1,f
  2998  0105  084C               	movf	??_sprintf+1,w
  2999  0106  3A80               	xorlw	128
  3000  0107  00CD               	movwf	??_sprintf+2
  3001  0108  3080               	movlw	128
  3002  0109  024D               	subwf	??_sprintf+2,w
  3003  010A  1D03               	skipz
  3004  010B  290E               	goto	u1025
  3005  010C  0854               	movf	sprintf@c,w
  3006  010D  024B               	subwf	??_sprintf,w
  3007  010E                     u1025:
  3008  010E  1803               	skipnc
  3009  010F  2911               	goto	u1021
  3010  0110  2912               	goto	u1020
  3011  0111                     u1021:
  3012  0111  2918               	goto	l1976
  3013  0112                     u1020:
  3014  0112                     l1974:
  3015                           
  3016                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3017  0112  1283               	bcf	3,5	;RP0=0, select bank0
  3018  0113  1303               	bcf	3,6	;RP1=0, select bank0
  3019  0114  0854               	movf	sprintf@c,w
  3020  0115  00CB               	movwf	??_sprintf
  3021  0116  084B               	movf	??_sprintf,w
  3022  0117  00D3               	movwf	sprintf@prec
  3023  0118                     l1976:
  3024                           
  3025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3026  0118  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0119  1303               	bcf	3,6	;RP1=0, select bank0
  3028  011A  084F               	movf	sprintf@flag,w
  3029  011B  3903               	andlw	3
  3030  011C  1903               	btfsc	3,2
  3031  011D  291F               	goto	u1031
  3032  011E  2920               	goto	u1030
  3033  011F                     u1031:
  3034  011F  2964               	goto	l1988
  3035  0120                     u1030:
  3036  0120                     l1978:
  3037                           
  3038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3039  0120  302D               	movlw	45
  3040  0121  00CB               	movwf	??_sprintf
  3041  0122  0852               	movf	sprintf@sp,w
  3042  0123  0084               	movwf	4
  3043  0124  084B               	movf	??_sprintf,w
  3044  0125  1383               	bcf	3,7	;select IRP bank0
  3045  0126  0080               	movwf	0
  3046  0127                     l1980:
  3047  0127  3001               	movlw	1
  3048  0128  00CB               	movwf	??_sprintf
  3049  0129  084B               	movf	??_sprintf,w
  3050  012A  07D2               	addwf	sprintf@sp,f
  3051  012B  2964               	goto	l1988
  3052  012C                     l1982:
  3053                           
  3054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3055  012C  300A               	movlw	10
  3056  012D  00C2               	movwf	___lwmod@divisor
  3057  012E  3000               	movlw	0
  3058  012F  00C3               	movwf	___lwmod@divisor+1
  3059  0130  0853               	movf	sprintf@prec,w
  3060  0131  00CB               	movwf	??_sprintf
  3061  0132  074B               	addwf	??_sprintf,w
  3062  0133  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3063  0134  0084               	movwf	4
  3064  0135  120A  118A  24B3  120A  118A  	fcall	stringdir
  3065  013A  00F3               	movwf	___lwdiv@divisor
  3066  013B  120A  118A  24B3  120A  118A  	fcall	stringdir
  3067  0140  00F4               	movwf	___lwdiv@divisor+1
  3068  0141  0851               	movf	sprintf@val+1,w
  3069  0142  00F6               	movwf	___lwdiv@dividend+1
  3070  0143  0850               	movf	sprintf@val,w
  3071  0144  00F5               	movwf	___lwdiv@dividend
  3072  0145  120A  118A  23F5  120A  118A  	fcall	___lwdiv
  3073  014A  0874               	movf	?___lwdiv+1,w
  3074  014B  1283               	bcf	3,5	;RP0=0, select bank0
  3075  014C  1303               	bcf	3,6	;RP1=0, select bank0
  3076  014D  00C5               	movwf	___lwmod@dividend+1
  3077  014E  0873               	movf	?___lwdiv,w
  3078  014F  00C4               	movwf	___lwmod@dividend
  3079  0150  120A  118A  2477  120A  118A  	fcall	___lwmod
  3080  0155  1283               	bcf	3,5	;RP0=0, select bank0
  3081  0156  1303               	bcf	3,6	;RP1=0, select bank0
  3082  0157  0842               	movf	?___lwmod,w
  3083  0158  3E30               	addlw	48
  3084  0159  00CC               	movwf	??_sprintf+1
  3085  015A  084C               	movf	??_sprintf+1,w
  3086  015B  00D4               	movwf	sprintf@c
  3087  015C                     l1984:
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3090  015C  0854               	movf	sprintf@c,w
  3091  015D  00CB               	movwf	??_sprintf
  3092  015E  0852               	movf	sprintf@sp,w
  3093  015F  0084               	movwf	4
  3094  0160  084B               	movf	??_sprintf,w
  3095  0161  1383               	bcf	3,7	;select IRP bank0
  3096  0162  0080               	movwf	0
  3097  0163  2927               	goto	l1980
  3098  0164                     l1988:
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3101  0164  30FF               	movlw	255
  3102  0165  00CB               	movwf	??_sprintf
  3103  0166  084B               	movf	??_sprintf,w
  3104  0167  07D3               	addwf	sprintf@prec,f
  3105  0168  0A53               	incf	sprintf@prec,w
  3106  0169  1D03               	btfss	3,2
  3107  016A  296C               	goto	u1041
  3108  016B  296D               	goto	u1040
  3109  016C                     u1041:
  3110  016C  292C               	goto	l1982
  3111  016D                     u1040:
  3112  016D                     l1990:
  3113                           
  3114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3115  016D  3001               	movlw	1
  3116  016E  07C8               	addwf	sprintf@f,f
  3117  016F  30FF               	movlw	-1
  3118  0170  0748               	addwf	sprintf@f,w
  3119  0171  0084               	movwf	4
  3120  0172  120A  118A  24B3  120A  118A  	fcall	stringdir
  3121  0177  00CB               	movwf	??_sprintf
  3122  0178  084B               	movf	??_sprintf,w
  3123  0179  00D4               	movwf	sprintf@c
  3124  017A  0854               	movf	sprintf@c,w
  3125  017B  1D03               	btfss	3,2
  3126  017C  297E               	goto	u1051
  3127  017D  297F               	goto	u1050
  3128  017E                     u1051:
  3129  017E  2827               	goto	l1914
  3130  017F                     u1050:
  3131  017F                     l1992:
  3132                           
  3133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3134  017F  0852               	movf	sprintf@sp,w
  3135  0180  0084               	movwf	4
  3136  0181  1383               	bcf	3,7	;select IRP bank0
  3137  0182  0180               	clrf	0
  3138  0183                     l415:
  3139  0183  0008               	return
  3140  0184                     __end_of_sprintf:
  3141                           
  3142                           	psect	text17
  3143  05EC                     __ptext17:	
  3144 ;; *************** function _isdigit *****************
  3145 ;; Defined at:
  3146 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  c               1    wreg     unsigned char 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  c               1    4[COMMON] unsigned char 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;		None               void
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3160 ;;      Params:         0       0       0       0       0
  3161 ;;      Locals:         2       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0
  3163 ;;      Totals:         2       0       0       0       0
  3164 ;;Total ram usage:        2 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    1
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_sprintf
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           
  3175                           ;psect for function _isdigit
  3176  05EC                     _isdigit:
  3177                           
  3178                           ;incstack = 0
  3179                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3180                           ;isdigit@c stored from wreg
  3181  05EC  00F4               	movwf	isdigit@c
  3182  05ED                     l1450:
  3183  05ED  01F3               	clrf	_isdigit$1021
  3184  05EE                     l1452:
  3185  05EE  303A               	movlw	58
  3186  05EF  0274               	subwf	isdigit@c,w
  3187  05F0  1803               	skipnc
  3188  05F1  2DF3               	goto	u451
  3189  05F2  2DF4               	goto	u450
  3190  05F3                     u451:
  3191  05F3  2DFC               	goto	l1458
  3192  05F4                     u450:
  3193  05F4                     l1454:
  3194  05F4  3030               	movlw	48
  3195  05F5  0274               	subwf	isdigit@c,w
  3196  05F6  1C03               	skipc
  3197  05F7  2DF9               	goto	u461
  3198  05F8  2DFA               	goto	u460
  3199  05F9                     u461:
  3200  05F9  2DFC               	goto	l1458
  3201  05FA                     u460:
  3202  05FA                     l1456:
  3203  05FA  01F3               	clrf	_isdigit$1021
  3204  05FB  0AF3               	incf	_isdigit$1021,f
  3205  05FC                     l1458:
  3206  05FC  0C73               	rrf	_isdigit$1021,w
  3207  05FD                     l872:
  3208  05FD  0008               	return
  3209  05FE                     __end_of_isdigit:
  3210                           
  3211                           	psect	text18
  3212  0477                     __ptext18:	
  3213 ;; *************** function ___lwmod *****************
  3214 ;; Defined at:
  3215 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  divisor         2    3[BANK0 ] unsigned int 
  3218 ;;  dividend        2    5[BANK0 ] unsigned int 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  counter         1    8[BANK0 ] unsigned char 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  2    3[BANK0 ] unsigned int 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3230 ;;      Params:         0       4       0       0       0
  3231 ;;      Locals:         0       1       0       0       0
  3232 ;;      Temps:          0       1       0       0       0
  3233 ;;      Totals:         0       6       0       0       0
  3234 ;;Total ram usage:        6 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    1
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		_sprintf
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           
  3245                           ;psect for function ___lwmod
  3246  0477                     ___lwmod:
  3247  0477                     l1502:	
  3248                           ;incstack = 0
  3249                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3250                           
  3251  0477  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0478  1303               	bcf	3,6	;RP1=0, select bank0
  3253  0479  0842               	movf	___lwmod@divisor,w
  3254  047A  0443               	iorwf	___lwmod@divisor+1,w
  3255  047B  1903               	btfsc	3,2
  3256  047C  2C7E               	goto	u561
  3257  047D  2C7F               	goto	u560
  3258  047E                     u561:
  3259  047E  2CAE               	goto	l1520
  3260  047F                     u560:
  3261  047F                     l1504:
  3262  047F  01C7               	clrf	___lwmod@counter
  3263  0480  0AC7               	incf	___lwmod@counter,f
  3264  0481  2C8D               	goto	l1510
  3265  0482                     l1506:
  3266  0482  3001               	movlw	1
  3267  0483                     u575:
  3268  0483  1003               	clrc
  3269  0484  0DC2               	rlf	___lwmod@divisor,f
  3270  0485  0DC3               	rlf	___lwmod@divisor+1,f
  3271  0486  3EFF               	addlw	-1
  3272  0487  1D03               	skipz
  3273  0488  2C83               	goto	u575
  3274  0489                     l1508:
  3275  0489  3001               	movlw	1
  3276  048A  00C6               	movwf	??___lwmod
  3277  048B  0846               	movf	??___lwmod,w
  3278  048C  07C7               	addwf	___lwmod@counter,f
  3279  048D                     l1510:
  3280  048D  1FC3               	btfss	___lwmod@divisor+1,7
  3281  048E  2C90               	goto	u581
  3282  048F  2C91               	goto	u580
  3283  0490                     u581:
  3284  0490  2C82               	goto	l1506
  3285  0491                     u580:
  3286  0491                     l1512:
  3287  0491  0843               	movf	___lwmod@divisor+1,w
  3288  0492  0245               	subwf	___lwmod@dividend+1,w
  3289  0493  1D03               	skipz
  3290  0494  2C97               	goto	u595
  3291  0495  0842               	movf	___lwmod@divisor,w
  3292  0496  0244               	subwf	___lwmod@dividend,w
  3293  0497                     u595:
  3294  0497  1C03               	skipc
  3295  0498  2C9A               	goto	u591
  3296  0499  2C9B               	goto	u590
  3297  049A                     u591:
  3298  049A  2CA1               	goto	l1516
  3299  049B                     u590:
  3300  049B                     l1514:
  3301  049B  0842               	movf	___lwmod@divisor,w
  3302  049C  02C4               	subwf	___lwmod@dividend,f
  3303  049D  0843               	movf	___lwmod@divisor+1,w
  3304  049E  1C03               	skipc
  3305  049F  03C5               	decf	___lwmod@dividend+1,f
  3306  04A0  02C5               	subwf	___lwmod@dividend+1,f
  3307  04A1                     l1516:
  3308  04A1  3001               	movlw	1
  3309  04A2                     u605:
  3310  04A2  1003               	clrc
  3311  04A3  0CC3               	rrf	___lwmod@divisor+1,f
  3312  04A4  0CC2               	rrf	___lwmod@divisor,f
  3313  04A5  3EFF               	addlw	-1
  3314  04A6  1D03               	skipz
  3315  04A7  2CA2               	goto	u605
  3316  04A8                     l1518:
  3317  04A8  3001               	movlw	1
  3318  04A9  02C7               	subwf	___lwmod@counter,f
  3319  04AA  1D03               	btfss	3,2
  3320  04AB  2CAD               	goto	u611
  3321  04AC  2CAE               	goto	u610
  3322  04AD                     u611:
  3323  04AD  2C91               	goto	l1512
  3324  04AE                     u610:
  3325  04AE                     l1520:
  3326  04AE  0845               	movf	___lwmod@dividend+1,w
  3327  04AF  00C3               	movwf	?___lwmod+1
  3328  04B0  0844               	movf	___lwmod@dividend,w
  3329  04B1  00C2               	movwf	?___lwmod
  3330  04B2                     l701:
  3331  04B2  0008               	return
  3332  04B3                     __end_of___lwmod:
  3333                           
  3334                           	psect	text19
  3335  03F5                     __ptext19:	
  3336 ;; *************** function ___lwdiv *****************
  3337 ;; Defined at:
  3338 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  divisor         2    3[COMMON] unsigned int 
  3341 ;;  dividend        2    5[COMMON] unsigned int 
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;  quotient        2    1[BANK0 ] unsigned int 
  3344 ;;  counter         1    0[BANK0 ] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  2    3[COMMON] unsigned int 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         4       0       0       0       0
  3355 ;;      Locals:         0       3       0       0       0
  3356 ;;      Temps:          1       0       0       0       0
  3357 ;;      Totals:         5       3       0       0       0
  3358 ;;Total ram usage:        8 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    1
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_sprintf
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           
  3369                           ;psect for function ___lwdiv
  3370  03F5                     ___lwdiv:
  3371  03F5                     l1866:	
  3372                           ;incstack = 0
  3373                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3374                           
  3375  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  3376  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  3377  03F7  01C0               	clrf	___lwdiv@quotient
  3378  03F8  01C1               	clrf	___lwdiv@quotient+1
  3379  03F9                     l1868:
  3380  03F9  0873               	movf	___lwdiv@divisor,w
  3381  03FA  0474               	iorwf	___lwdiv@divisor+1,w
  3382  03FB  1903               	btfsc	3,2
  3383  03FC  2BFE               	goto	u831
  3384  03FD  2BFF               	goto	u830
  3385  03FE                     u831:
  3386  03FE  2C36               	goto	l1888
  3387  03FF                     u830:
  3388  03FF                     l1870:
  3389  03FF  01BF               	clrf	___lwdiv@counter
  3390  0400  0ABF               	incf	___lwdiv@counter,f
  3391  0401  2C0D               	goto	l1876
  3392  0402                     l1872:
  3393  0402  3001               	movlw	1
  3394  0403                     u845:
  3395  0403  1003               	clrc
  3396  0404  0DF3               	rlf	___lwdiv@divisor,f
  3397  0405  0DF4               	rlf	___lwdiv@divisor+1,f
  3398  0406  3EFF               	addlw	-1
  3399  0407  1D03               	skipz
  3400  0408  2C03               	goto	u845
  3401  0409                     l1874:
  3402  0409  3001               	movlw	1
  3403  040A  00F7               	movwf	??___lwdiv
  3404  040B  0877               	movf	??___lwdiv,w
  3405  040C  07BF               	addwf	___lwdiv@counter,f
  3406  040D                     l1876:
  3407  040D  1FF4               	btfss	___lwdiv@divisor+1,7
  3408  040E  2C10               	goto	u851
  3409  040F  2C11               	goto	u850
  3410  0410                     u851:
  3411  0410  2C02               	goto	l1872
  3412  0411                     u850:
  3413  0411                     l1878:
  3414  0411  3001               	movlw	1
  3415  0412                     u865:
  3416  0412  1003               	clrc
  3417  0413  0DC0               	rlf	___lwdiv@quotient,f
  3418  0414  0DC1               	rlf	___lwdiv@quotient+1,f
  3419  0415  3EFF               	addlw	-1
  3420  0416  1D03               	skipz
  3421  0417  2C12               	goto	u865
  3422  0418  0874               	movf	___lwdiv@divisor+1,w
  3423  0419  0276               	subwf	___lwdiv@dividend+1,w
  3424  041A  1D03               	skipz
  3425  041B  2C1E               	goto	u875
  3426  041C  0873               	movf	___lwdiv@divisor,w
  3427  041D  0275               	subwf	___lwdiv@dividend,w
  3428  041E                     u875:
  3429  041E  1C03               	skipc
  3430  041F  2C21               	goto	u871
  3431  0420  2C22               	goto	u870
  3432  0421                     u871:
  3433  0421  2C29               	goto	l1884
  3434  0422                     u870:
  3435  0422                     l1880:
  3436  0422  0873               	movf	___lwdiv@divisor,w
  3437  0423  02F5               	subwf	___lwdiv@dividend,f
  3438  0424  0874               	movf	___lwdiv@divisor+1,w
  3439  0425  1C03               	skipc
  3440  0426  03F6               	decf	___lwdiv@dividend+1,f
  3441  0427  02F6               	subwf	___lwdiv@dividend+1,f
  3442  0428                     l1882:
  3443  0428  1440               	bsf	___lwdiv@quotient,0
  3444  0429                     l1884:
  3445  0429  3001               	movlw	1
  3446  042A                     u885:
  3447  042A  1003               	clrc
  3448  042B  0CF4               	rrf	___lwdiv@divisor+1,f
  3449  042C  0CF3               	rrf	___lwdiv@divisor,f
  3450  042D  3EFF               	addlw	-1
  3451  042E  1D03               	skipz
  3452  042F  2C2A               	goto	u885
  3453  0430                     l1886:
  3454  0430  3001               	movlw	1
  3455  0431  02BF               	subwf	___lwdiv@counter,f
  3456  0432  1D03               	btfss	3,2
  3457  0433  2C35               	goto	u891
  3458  0434  2C36               	goto	u890
  3459  0435                     u891:
  3460  0435  2C11               	goto	l1878
  3461  0436                     u890:
  3462  0436                     l1888:
  3463  0436  0841               	movf	___lwdiv@quotient+1,w
  3464  0437  00F4               	movwf	?___lwdiv+1
  3465  0438  0840               	movf	___lwdiv@quotient,w
  3466  0439  00F3               	movwf	?___lwdiv
  3467  043A                     l691:
  3468  043A  0008               	return
  3469  043B                     __end_of___lwdiv:
  3470                           
  3471                           	psect	text20
  3472  05B0                     __ptext20:	
  3473 ;; *************** function ___bmul *****************
  3474 ;; Defined at:
  3475 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  multiplier      1    wreg     unsigned char 
  3478 ;;  multiplicand    1    3[COMMON] unsigned char 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;  multiplier      1    6[COMMON] unsigned char 
  3481 ;;  product         1    5[COMMON] unsigned char 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      unsigned char 
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3491 ;;      Params:         1       0       0       0       0
  3492 ;;      Locals:         2       0       0       0       0
  3493 ;;      Temps:          1       0       0       0       0
  3494 ;;      Totals:         4       0       0       0       0
  3495 ;;Total ram usage:        4 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    1
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_sprintf
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           
  3506                           ;psect for function ___bmul
  3507  05B0                     ___bmul:
  3508                           
  3509                           ;incstack = 0
  3510                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3511                           ;___bmul@multiplier stored from wreg
  3512  05B0  00F6               	movwf	___bmul@multiplier
  3513  05B1                     l1462:
  3514  05B1  01F5               	clrf	___bmul@product
  3515  05B2                     l1464:
  3516  05B2  1C76               	btfss	___bmul@multiplier,0
  3517  05B3  2DB5               	goto	u471
  3518  05B4  2DB6               	goto	u470
  3519  05B5                     u471:
  3520  05B5  2DBA               	goto	l1468
  3521  05B6                     u470:
  3522  05B6                     l1466:
  3523  05B6  0873               	movf	___bmul@multiplicand,w
  3524  05B7  00F4               	movwf	??___bmul
  3525  05B8  0874               	movf	??___bmul,w
  3526  05B9  07F5               	addwf	___bmul@product,f
  3527  05BA                     l1468:
  3528  05BA  1003               	clrc
  3529  05BB  0DF3               	rlf	___bmul@multiplicand,f
  3530  05BC                     l1470:
  3531  05BC  1003               	clrc
  3532  05BD  0CF6               	rrf	___bmul@multiplier,f
  3533  05BE  0876               	movf	___bmul@multiplier,w
  3534  05BF  1D03               	btfss	3,2
  3535  05C0  2DC2               	goto	u481
  3536  05C1  2DC3               	goto	u480
  3537  05C2                     u481:
  3538  05C2  2DB2               	goto	l1464
  3539  05C3                     u480:
  3540  05C3                     l1472:
  3541  05C3  0875               	movf	___bmul@product,w
  3542  05C4                     l445:
  3543  05C4  0008               	return
  3544  05C5                     __end_of___bmul:
  3545                           
  3546                           	psect	text21
  3547  0548                     __ptext21:	
  3548 ;; *************** function _ADC_channel2 *****************
  3549 ;; Defined at:
  3550 ;;		line 215 in file "pseudocodigo_lab3.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;		None
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;		None
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  1    wreg      void 
  3557 ;; Registers used:
  3558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3564 ;;      Params:         0       0       0       0       0
  3565 ;;      Locals:         0       0       0       0       0
  3566 ;;      Temps:          2       0       0       0       0
  3567 ;;      Totals:         2       0       0       0       0
  3568 ;;Total ram usage:        2 bytes
  3569 ;; Hardware stack levels used:    1
  3570 ;; Hardware stack levels required when called:    2
  3571 ;; This function calls:
  3572 ;;		_ADC_Config
  3573 ;; This function is called by:
  3574 ;;		_main
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           
  3579                           ;psect for function _ADC_channel2
  3580  0548                     _ADC_channel2:
  3581  0548                     l1676:	
  3582                           ;incstack = 0
  3583                           ; Regs used in _ADC_channel2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3584                           
  3585                           
  3586                           ;pseudocodigo_lab3.c: 216:     ADC_Config (1);
  3587  0548  3001               	movlw	1
  3588  0549  120A  118A  2184  120A  118A  	fcall	_ADC_Config
  3589  054E                     l1678:
  3590                           
  3591                           ;pseudocodigo_lab3.c: 217:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3592  054E  3003               	movlw	3
  3593  054F  00F7               	movwf	??_ADC_channel2+1
  3594  0550  3097               	movlw	151
  3595  0551  00F6               	movwf	??_ADC_channel2
  3596  0552                     u1157:
  3597  0552  0BF6               	decfsz	??_ADC_channel2,f
  3598  0553  2D52               	goto	u1157
  3599  0554  0BF7               	decfsz	??_ADC_channel2+1,f
  3600  0555  2D52               	goto	u1157
  3601  0556  2D57               	nop2
  3602  0557                     l1680:
  3603                           
  3604                           ;pseudocodigo_lab3.c: 218:     ADCON0bits.GO = 1;
  3605  0557  1283               	bcf	3,5	;RP0=0, select bank0
  3606  0558  1303               	bcf	3,6	;RP1=0, select bank0
  3607  0559  149F               	bsf	31,1	;volatile
  3608                           
  3609                           ;pseudocodigo_lab3.c: 219:     while (ADCON0bits.GO != 0) {
  3610  055A  2D5F               	goto	l1684
  3611  055B                     l1682:
  3612                           
  3613                           ;pseudocodigo_lab3.c: 220:         S2_val = ADRESH;
  3614  055B  081E               	movf	30,w	;volatile
  3615  055C  00F6               	movwf	??_ADC_channel2
  3616  055D  0876               	movf	??_ADC_channel2,w
  3617  055E  00AA               	movwf	_S2_val
  3618  055F                     l1684:
  3619                           
  3620                           ;pseudocodigo_lab3.c: 219:     while (ADCON0bits.GO != 0) {
  3621  055F  189F               	btfsc	31,1	;volatile
  3622  0560  2D62               	goto	u791
  3623  0561  2D63               	goto	u790
  3624  0562                     u791:
  3625  0562  2D5B               	goto	l1682
  3626  0563                     u790:
  3627  0563                     l123:
  3628  0563  0008               	return
  3629  0564                     __end_of_ADC_channel2:
  3630                           
  3631                           	psect	text22
  3632  0564                     __ptext22:	
  3633 ;; *************** function _ADC_channel1 *****************
  3634 ;; Defined at:
  3635 ;;		line 205 in file "pseudocodigo_lab3.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;		None
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3649 ;;      Params:         0       0       0       0       0
  3650 ;;      Locals:         0       0       0       0       0
  3651 ;;      Temps:          2       0       0       0       0
  3652 ;;      Totals:         2       0       0       0       0
  3653 ;;Total ram usage:        2 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    2
  3656 ;; This function calls:
  3657 ;;		_ADC_Config
  3658 ;; This function is called by:
  3659 ;;		_main
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           
  3664                           ;psect for function _ADC_channel1
  3665  0564                     _ADC_channel1:
  3666  0564                     l1666:	
  3667                           ;incstack = 0
  3668                           ; Regs used in _ADC_channel1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3669                           
  3670                           
  3671                           ;pseudocodigo_lab3.c: 206:     ADC_Config (0);
  3672  0564  3000               	movlw	0
  3673  0565  120A  118A  2184  120A  118A  	fcall	_ADC_Config
  3674  056A                     l1668:
  3675                           
  3676                           ;pseudocodigo_lab3.c: 207:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3677  056A  3003               	movlw	3
  3678  056B  00F7               	movwf	??_ADC_channel1+1
  3679  056C  3097               	movlw	151
  3680  056D  00F6               	movwf	??_ADC_channel1
  3681  056E                     u1167:
  3682  056E  0BF6               	decfsz	??_ADC_channel1,f
  3683  056F  2D6E               	goto	u1167
  3684  0570  0BF7               	decfsz	??_ADC_channel1+1,f
  3685  0571  2D6E               	goto	u1167
  3686  0572  2D73               	nop2
  3687  0573                     l1670:
  3688                           
  3689                           ;pseudocodigo_lab3.c: 208:     ADCON0bits.GO = 1;
  3690  0573  1283               	bcf	3,5	;RP0=0, select bank0
  3691  0574  1303               	bcf	3,6	;RP1=0, select bank0
  3692  0575  149F               	bsf	31,1	;volatile
  3693                           
  3694                           ;pseudocodigo_lab3.c: 209:     while (ADCON0bits.GO != 0) {
  3695  0576  2D7B               	goto	l1674
  3696  0577                     l1672:
  3697                           
  3698                           ;pseudocodigo_lab3.c: 210:         S1_val = ADRESH;
  3699  0577  081E               	movf	30,w	;volatile
  3700  0578  00F6               	movwf	??_ADC_channel1
  3701  0579  0876               	movf	??_ADC_channel1,w
  3702  057A  00AB               	movwf	_S1_val
  3703  057B                     l1674:
  3704                           
  3705                           ;pseudocodigo_lab3.c: 209:     while (ADCON0bits.GO != 0) {
  3706  057B  189F               	btfsc	31,1	;volatile
  3707  057C  2D7E               	goto	u781
  3708  057D  2D7F               	goto	u780
  3709  057E                     u781:
  3710  057E  2D77               	goto	l1672
  3711  057F                     u780:
  3712  057F                     l117:
  3713  057F  0008               	return
  3714  0580                     __end_of_ADC_channel1:
  3715                           
  3716                           	psect	text23
  3717  0184                     __ptext23:	
  3718 ;; *************** function _ADC_Config *****************
  3719 ;; Defined at:
  3720 ;;		line 31 in file "Config_ADC.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  AN_num          1    wreg     unsigned char 
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;  AN_num          1    5[COMMON] unsigned char 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      void 
  3727 ;; Registers used:
  3728 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3734 ;;      Params:         0       0       0       0       0
  3735 ;;      Locals:         1       0       0       0       0
  3736 ;;      Temps:          2       0       0       0       0
  3737 ;;      Totals:         3       0       0       0       0
  3738 ;;Total ram usage:        3 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:    1
  3741 ;; This function calls:
  3742 ;;		Nothing
  3743 ;; This function is called by:
  3744 ;;		_ADC_channel1
  3745 ;;		_ADC_channel2
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           
  3750                           ;psect for function _ADC_Config
  3751  0184                     _ADC_Config:
  3752                           
  3753                           ;incstack = 0
  3754                           ; Regs used in _ADC_Config: [wreg-fsr0h+status,2+status,0]
  3755                           ;ADC_Config@AN_num stored from wreg
  3756  0184  00F5               	movwf	ADC_Config@AN_num
  3757  0185                     l1544:
  3758                           
  3759                           ;Config_ADC.c: 33:     switch(AN_num){
  3760  0185  29FD               	goto	l1548
  3761  0186                     l229:	
  3762                           ;Config_ADC.c: 34:         case 0:
  3763                           
  3764                           
  3765                           ;Config_ADC.c: 35:             ADCON0bits.CHS3 = 0;
  3766  0186  1283               	bcf	3,5	;RP0=0, select bank0
  3767  0187  1303               	bcf	3,6	;RP1=0, select bank0
  3768  0188  129F               	bcf	31,5	;volatile
  3769                           
  3770                           ;Config_ADC.c: 36:             ADCON0bits.CHS2 = 0;
  3771  0189  121F               	bcf	31,4	;volatile
  3772                           
  3773                           ;Config_ADC.c: 37:             ADCON0bits.CHS1 = 0;
  3774  018A  119F               	bcf	31,3	;volatile
  3775                           
  3776                           ;Config_ADC.c: 38:             ADCON0bits.CHS0 = 0;
  3777  018B  111F               	bcf	31,2	;volatile
  3778                           
  3779                           ;Config_ADC.c: 39:             break;
  3780  018C  2A37               	goto	l1550
  3781  018D                     l231:	
  3782                           ;Config_ADC.c: 40:         case 1:
  3783                           
  3784                           
  3785                           ;Config_ADC.c: 41:             ADCON0bits.CHS3 = 0;
  3786  018D  1283               	bcf	3,5	;RP0=0, select bank0
  3787  018E  1303               	bcf	3,6	;RP1=0, select bank0
  3788  018F  129F               	bcf	31,5	;volatile
  3789                           
  3790                           ;Config_ADC.c: 42:             ADCON0bits.CHS2 = 0;
  3791  0190  121F               	bcf	31,4	;volatile
  3792                           
  3793                           ;Config_ADC.c: 43:             ADCON0bits.CHS1 = 0;
  3794  0191  119F               	bcf	31,3	;volatile
  3795                           
  3796                           ;Config_ADC.c: 44:             ADCON0bits.CHS0 = 1;
  3797  0192  151F               	bsf	31,2	;volatile
  3798                           
  3799                           ;Config_ADC.c: 45:             break;
  3800  0193  2A37               	goto	l1550
  3801  0194                     l232:	
  3802                           ;Config_ADC.c: 46:         case 2:
  3803                           
  3804                           
  3805                           ;Config_ADC.c: 47:             ADCON0bits.CHS3 = 0;
  3806  0194  1283               	bcf	3,5	;RP0=0, select bank0
  3807  0195  1303               	bcf	3,6	;RP1=0, select bank0
  3808  0196  129F               	bcf	31,5	;volatile
  3809                           
  3810                           ;Config_ADC.c: 48:             ADCON0bits.CHS2 = 0;
  3811  0197  121F               	bcf	31,4	;volatile
  3812                           
  3813                           ;Config_ADC.c: 49:             ADCON0bits.CHS1 = 1;
  3814  0198  159F               	bsf	31,3	;volatile
  3815                           
  3816                           ;Config_ADC.c: 50:             ADCON0bits.CHS0 = 0;
  3817  0199  111F               	bcf	31,2	;volatile
  3818                           
  3819                           ;Config_ADC.c: 51:             break;
  3820  019A  2A37               	goto	l1550
  3821  019B                     l233:	
  3822                           ;Config_ADC.c: 52:         case 3:
  3823                           
  3824                           
  3825                           ;Config_ADC.c: 53:             ADCON0bits.CHS3 = 0;
  3826  019B  1283               	bcf	3,5	;RP0=0, select bank0
  3827  019C  1303               	bcf	3,6	;RP1=0, select bank0
  3828  019D  129F               	bcf	31,5	;volatile
  3829                           
  3830                           ;Config_ADC.c: 54:             ADCON0bits.CHS2 = 0;
  3831  019E  121F               	bcf	31,4	;volatile
  3832                           
  3833                           ;Config_ADC.c: 55:             ADCON0bits.CHS1 = 1;
  3834  019F  159F               	bsf	31,3	;volatile
  3835                           
  3836                           ;Config_ADC.c: 56:             ADCON0bits.CHS0 = 1;
  3837  01A0  151F               	bsf	31,2	;volatile
  3838                           
  3839                           ;Config_ADC.c: 57:             break;
  3840  01A1  2A37               	goto	l1550
  3841  01A2                     l234:	
  3842                           ;Config_ADC.c: 58:         case 4:
  3843                           
  3844                           
  3845                           ;Config_ADC.c: 59:             ADCON0bits.CHS3 = 0;
  3846  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  3847  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  3848  01A4  129F               	bcf	31,5	;volatile
  3849                           
  3850                           ;Config_ADC.c: 60:             ADCON0bits.CHS2 = 1;
  3851  01A5  161F               	bsf	31,4	;volatile
  3852                           
  3853                           ;Config_ADC.c: 61:             ADCON0bits.CHS1 = 0;
  3854  01A6  119F               	bcf	31,3	;volatile
  3855                           
  3856                           ;Config_ADC.c: 62:             ADCON0bits.CHS0 = 0;
  3857  01A7  111F               	bcf	31,2	;volatile
  3858                           
  3859                           ;Config_ADC.c: 63:             break;
  3860  01A8  2A37               	goto	l1550
  3861  01A9                     l235:	
  3862                           ;Config_ADC.c: 64:         case 5:
  3863                           
  3864                           
  3865                           ;Config_ADC.c: 65:             ADCON0bits.CHS3 = 0;
  3866  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  3867  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  3868  01AB  129F               	bcf	31,5	;volatile
  3869                           
  3870                           ;Config_ADC.c: 66:             ADCON0bits.CHS2 = 1;
  3871  01AC  161F               	bsf	31,4	;volatile
  3872                           
  3873                           ;Config_ADC.c: 67:             ADCON0bits.CHS1 = 0;
  3874  01AD  119F               	bcf	31,3	;volatile
  3875                           
  3876                           ;Config_ADC.c: 68:             ADCON0bits.CHS0 = 1;
  3877  01AE  151F               	bsf	31,2	;volatile
  3878                           
  3879                           ;Config_ADC.c: 69:             break;
  3880  01AF  2A37               	goto	l1550
  3881  01B0                     l236:	
  3882                           ;Config_ADC.c: 70:         case 6:
  3883                           
  3884                           
  3885                           ;Config_ADC.c: 71:             ADCON0bits.CHS3 = 0;
  3886  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  3887  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  3888  01B2  129F               	bcf	31,5	;volatile
  3889                           
  3890                           ;Config_ADC.c: 72:             ADCON0bits.CHS2 = 1;
  3891  01B3  161F               	bsf	31,4	;volatile
  3892                           
  3893                           ;Config_ADC.c: 73:             ADCON0bits.CHS1 = 1;
  3894  01B4  159F               	bsf	31,3	;volatile
  3895                           
  3896                           ;Config_ADC.c: 74:             ADCON0bits.CHS0 = 0;
  3897  01B5  111F               	bcf	31,2	;volatile
  3898                           
  3899                           ;Config_ADC.c: 75:             break;
  3900  01B6  2A37               	goto	l1550
  3901  01B7                     l237:	
  3902                           ;Config_ADC.c: 76:         case 7:
  3903                           
  3904                           
  3905                           ;Config_ADC.c: 77:             ADCON0bits.CHS3 = 0;
  3906  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  3907  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  3908  01B9  129F               	bcf	31,5	;volatile
  3909                           
  3910                           ;Config_ADC.c: 78:             ADCON0bits.CHS2 = 1;
  3911  01BA  161F               	bsf	31,4	;volatile
  3912                           
  3913                           ;Config_ADC.c: 79:             ADCON0bits.CHS1 = 1;
  3914  01BB  159F               	bsf	31,3	;volatile
  3915                           
  3916                           ;Config_ADC.c: 80:             ADCON0bits.CHS0 = 1;
  3917  01BC  151F               	bsf	31,2	;volatile
  3918                           
  3919                           ;Config_ADC.c: 81:             break;
  3920  01BD  2A37               	goto	l1550
  3921  01BE                     l238:	
  3922                           ;Config_ADC.c: 82:         case 8:
  3923                           
  3924                           
  3925                           ;Config_ADC.c: 83:             ADCON0bits.CHS3 = 1;
  3926  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  3927  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  3928  01C0  169F               	bsf	31,5	;volatile
  3929                           
  3930                           ;Config_ADC.c: 84:             ADCON0bits.CHS2 = 0;
  3931  01C1  121F               	bcf	31,4	;volatile
  3932                           
  3933                           ;Config_ADC.c: 85:             ADCON0bits.CHS1 = 0;
  3934  01C2  119F               	bcf	31,3	;volatile
  3935                           
  3936                           ;Config_ADC.c: 86:             ADCON0bits.CHS0 = 0;
  3937  01C3  111F               	bcf	31,2	;volatile
  3938                           
  3939                           ;Config_ADC.c: 87:             break;
  3940  01C4  2A37               	goto	l1550
  3941  01C5                     l239:	
  3942                           ;Config_ADC.c: 88:         case 9:
  3943                           
  3944                           
  3945                           ;Config_ADC.c: 89:             ADCON0bits.CHS3 = 1;
  3946  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  3947  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  3948  01C7  169F               	bsf	31,5	;volatile
  3949                           
  3950                           ;Config_ADC.c: 90:             ADCON0bits.CHS2 = 0;
  3951  01C8  121F               	bcf	31,4	;volatile
  3952                           
  3953                           ;Config_ADC.c: 91:             ADCON0bits.CHS1 = 0;
  3954  01C9  119F               	bcf	31,3	;volatile
  3955                           
  3956                           ;Config_ADC.c: 92:             ADCON0bits.CHS0 = 1;
  3957  01CA  151F               	bsf	31,2	;volatile
  3958                           
  3959                           ;Config_ADC.c: 93:             break;
  3960  01CB  2A37               	goto	l1550
  3961  01CC                     l240:	
  3962                           ;Config_ADC.c: 94:         case 10:
  3963                           
  3964                           
  3965                           ;Config_ADC.c: 95:             ADCON0bits.CHS3 = 1;
  3966  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3967  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3968  01CE  169F               	bsf	31,5	;volatile
  3969                           
  3970                           ;Config_ADC.c: 96:             ADCON0bits.CHS2 = 0;
  3971  01CF  121F               	bcf	31,4	;volatile
  3972                           
  3973                           ;Config_ADC.c: 97:             ADCON0bits.CHS1 = 1;
  3974  01D0  159F               	bsf	31,3	;volatile
  3975                           
  3976                           ;Config_ADC.c: 98:             ADCON0bits.CHS0 = 0;
  3977  01D1  111F               	bcf	31,2	;volatile
  3978                           
  3979                           ;Config_ADC.c: 99:             break;
  3980  01D2  2A37               	goto	l1550
  3981  01D3                     l241:	
  3982                           ;Config_ADC.c: 100:         case 11:
  3983                           
  3984                           
  3985                           ;Config_ADC.c: 101:             ADCON0bits.CHS3 = 1;
  3986  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  3987  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  3988  01D5  169F               	bsf	31,5	;volatile
  3989                           
  3990                           ;Config_ADC.c: 102:             ADCON0bits.CHS2 = 0;
  3991  01D6  121F               	bcf	31,4	;volatile
  3992                           
  3993                           ;Config_ADC.c: 103:             ADCON0bits.CHS1 = 1;
  3994  01D7  159F               	bsf	31,3	;volatile
  3995                           
  3996                           ;Config_ADC.c: 104:             ADCON0bits.CHS0 = 1;
  3997  01D8  151F               	bsf	31,2	;volatile
  3998                           
  3999                           ;Config_ADC.c: 105:             break;
  4000  01D9  2A37               	goto	l1550
  4001  01DA                     l242:	
  4002                           ;Config_ADC.c: 106:         case 12:
  4003                           
  4004                           
  4005                           ;Config_ADC.c: 107:             ADCON0bits.CHS3 = 1;
  4006  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  4007  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  4008  01DC  169F               	bsf	31,5	;volatile
  4009                           
  4010                           ;Config_ADC.c: 108:             ADCON0bits.CHS2 = 1;
  4011  01DD  161F               	bsf	31,4	;volatile
  4012                           
  4013                           ;Config_ADC.c: 109:             ADCON0bits.CHS1 = 0;
  4014  01DE  119F               	bcf	31,3	;volatile
  4015                           
  4016                           ;Config_ADC.c: 110:             ADCON0bits.CHS0 = 0;
  4017  01DF  111F               	bcf	31,2	;volatile
  4018                           
  4019                           ;Config_ADC.c: 111:             break;
  4020  01E0  2A37               	goto	l1550
  4021  01E1                     l243:	
  4022                           ;Config_ADC.c: 112:         case 13:
  4023                           
  4024                           
  4025                           ;Config_ADC.c: 113:             ADCON0bits.CHS3 = 1;
  4026  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  4027  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  4028  01E3  169F               	bsf	31,5	;volatile
  4029                           
  4030                           ;Config_ADC.c: 114:             ADCON0bits.CHS2 = 1;
  4031  01E4  161F               	bsf	31,4	;volatile
  4032                           
  4033                           ;Config_ADC.c: 115:             ADCON0bits.CHS1 = 0;
  4034  01E5  119F               	bcf	31,3	;volatile
  4035                           
  4036                           ;Config_ADC.c: 116:             ADCON0bits.CHS0 = 1;
  4037  01E6  151F               	bsf	31,2	;volatile
  4038                           
  4039                           ;Config_ADC.c: 117:             break;
  4040  01E7  2A37               	goto	l1550
  4041  01E8                     l244:	
  4042                           ;Config_ADC.c: 118:         case 14:
  4043                           
  4044                           
  4045                           ;Config_ADC.c: 119:             ADCON0bits.CHS3 = 1;
  4046  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  4047  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  4048  01EA  169F               	bsf	31,5	;volatile
  4049                           
  4050                           ;Config_ADC.c: 120:             ADCON0bits.CHS2 = 1;
  4051  01EB  161F               	bsf	31,4	;volatile
  4052                           
  4053                           ;Config_ADC.c: 121:             ADCON0bits.CHS1 = 1;
  4054  01EC  159F               	bsf	31,3	;volatile
  4055                           
  4056                           ;Config_ADC.c: 122:             ADCON0bits.CHS0 = 0;
  4057  01ED  111F               	bcf	31,2	;volatile
  4058                           
  4059                           ;Config_ADC.c: 123:             break;
  4060  01EE  2A37               	goto	l1550
  4061  01EF                     l245:	
  4062                           ;Config_ADC.c: 124:         case 15:
  4063                           
  4064                           
  4065                           ;Config_ADC.c: 125:             ADCON0bits.CHS3 = 1;
  4066  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  4067  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  4068  01F1  169F               	bsf	31,5	;volatile
  4069                           
  4070                           ;Config_ADC.c: 126:             ADCON0bits.CHS2 = 1;
  4071  01F2  161F               	bsf	31,4	;volatile
  4072                           
  4073                           ;Config_ADC.c: 127:             ADCON0bits.CHS1 = 1;
  4074  01F3  159F               	bsf	31,3	;volatile
  4075                           
  4076                           ;Config_ADC.c: 128:             ADCON0bits.CHS0 = 1;
  4077  01F4  151F               	bsf	31,2	;volatile
  4078                           
  4079                           ;Config_ADC.c: 129:             break;
  4080  01F5  2A37               	goto	l1550
  4081  01F6                     l246:	
  4082                           ;Config_ADC.c: 130:         default:
  4083                           
  4084                           
  4085                           ;Config_ADC.c: 131:             ADCON0bits.CHS3 = 0;
  4086  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  4087  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  4088  01F8  129F               	bcf	31,5	;volatile
  4089                           
  4090                           ;Config_ADC.c: 132:             ADCON0bits.CHS2 = 0;
  4091  01F9  121F               	bcf	31,4	;volatile
  4092                           
  4093                           ;Config_ADC.c: 133:             ADCON0bits.CHS1 = 0;
  4094  01FA  119F               	bcf	31,3	;volatile
  4095                           
  4096                           ;Config_ADC.c: 134:             ADCON0bits.CHS0 = 0;
  4097  01FB  111F               	bcf	31,2	;volatile
  4098                           
  4099                           ;Config_ADC.c: 135:             break;
  4100  01FC  2A37               	goto	l1550
  4101  01FD                     l1548:
  4102  01FD  0875               	movf	ADC_Config@AN_num,w
  4103  01FE  00F3               	movwf	??_ADC_Config
  4104  01FF  01F4               	clrf	??_ADC_Config+1
  4105                           
  4106                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4107                           ; Switch size 1, requested type "simple"
  4108                           ; Number of cases is 1, Range of values is 0 to 0
  4109                           ; switch strategies available:
  4110                           ; Name         Instructions Cycles
  4111                           ; simple_byte            4     3 (average)
  4112                           ; direct_byte           11     8 (fixed)
  4113                           ; jumptable            260     6 (fixed)
  4114                           ;	Chosen strategy is simple_byte
  4115  0200  0874               	movf	??_ADC_Config+1,w
  4116  0201  3A00               	xorlw	0	; case 0
  4117  0202  1903               	skipnz
  4118  0203  2A05               	goto	l2162
  4119  0204  29F6               	goto	l246
  4120  0205                     l2162:
  4121                           
  4122                           ; Switch size 1, requested type "simple"
  4123                           ; Number of cases is 16, Range of values is 0 to 15
  4124                           ; switch strategies available:
  4125                           ; Name         Instructions Cycles
  4126                           ; simple_byte           49    25 (average)
  4127                           ; direct_byte           56     8 (fixed)
  4128                           ; jumptable            260     6 (fixed)
  4129                           ;	Chosen strategy is simple_byte
  4130  0205  0873               	movf	??_ADC_Config,w
  4131  0206  3A00               	xorlw	0	; case 0
  4132  0207  1903               	skipnz
  4133  0208  2986               	goto	l229
  4134  0209  3A01               	xorlw	1	; case 1
  4135  020A  1903               	skipnz
  4136  020B  298D               	goto	l231
  4137  020C  3A03               	xorlw	3	; case 2
  4138  020D  1903               	skipnz
  4139  020E  2994               	goto	l232
  4140  020F  3A01               	xorlw	1	; case 3
  4141  0210  1903               	skipnz
  4142  0211  299B               	goto	l233
  4143  0212  3A07               	xorlw	7	; case 4
  4144  0213  1903               	skipnz
  4145  0214  29A2               	goto	l234
  4146  0215  3A01               	xorlw	1	; case 5
  4147  0216  1903               	skipnz
  4148  0217  29A9               	goto	l235
  4149  0218  3A03               	xorlw	3	; case 6
  4150  0219  1903               	skipnz
  4151  021A  29B0               	goto	l236
  4152  021B  3A01               	xorlw	1	; case 7
  4153  021C  1903               	skipnz
  4154  021D  29B7               	goto	l237
  4155  021E  3A0F               	xorlw	15	; case 8
  4156  021F  1903               	skipnz
  4157  0220  29BE               	goto	l238
  4158  0221  3A01               	xorlw	1	; case 9
  4159  0222  1903               	skipnz
  4160  0223  29C5               	goto	l239
  4161  0224  3A03               	xorlw	3	; case 10
  4162  0225  1903               	skipnz
  4163  0226  29CC               	goto	l240
  4164  0227  3A01               	xorlw	1	; case 11
  4165  0228  1903               	skipnz
  4166  0229  29D3               	goto	l241
  4167  022A  3A07               	xorlw	7	; case 12
  4168  022B  1903               	skipnz
  4169  022C  29DA               	goto	l242
  4170  022D  3A01               	xorlw	1	; case 13
  4171  022E  1903               	skipnz
  4172  022F  29E1               	goto	l243
  4173  0230  3A03               	xorlw	3	; case 14
  4174  0231  1903               	skipnz
  4175  0232  29E8               	goto	l244
  4176  0233  3A01               	xorlw	1	; case 15
  4177  0234  1903               	skipnz
  4178  0235  29EF               	goto	l245
  4179  0236  29F6               	goto	l246
  4180  0237                     l1550:
  4181                           
  4182                           ;Config_ADC.c: 137:     ADCON1 = 0b00000000;
  4183  0237  1683               	bsf	3,5	;RP0=1, select bank1
  4184  0238  1303               	bcf	3,6	;RP1=0, select bank1
  4185  0239  019F               	clrf	31	;volatile
  4186  023A                     l1552:
  4187                           
  4188                           ;Config_ADC.c: 138:     ADCON0bits.ADCS1 = 1;
  4189  023A  1283               	bcf	3,5	;RP0=0, select bank0
  4190  023B  1303               	bcf	3,6	;RP1=0, select bank0
  4191  023C  179F               	bsf	31,7	;volatile
  4192  023D                     l1554:
  4193                           
  4194                           ;Config_ADC.c: 139:     ADCON0bits.ADCS0 = 0;
  4195  023D  131F               	bcf	31,6	;volatile
  4196  023E                     l1556:
  4197                           
  4198                           ;Config_ADC.c: 140:     ADCON0bits.ADON = 1;
  4199  023E  141F               	bsf	31,0	;volatile
  4200  023F                     l247:
  4201  023F  0008               	return
  4202  0240                     __end_of_ADC_Config:
  4203                           
  4204                           	psect	text24
  4205  05FE                     __ptext24:	
  4206 ;; *************** function _ISR *****************
  4207 ;; Defined at:
  4208 ;;		line 93 in file "pseudocodigo_lab3.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;		None
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;		None
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		wreg
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4222 ;;      Params:         0       0       0       0       0
  4223 ;;      Locals:         0       0       0       0       0
  4224 ;;      Temps:          3       0       0       0       0
  4225 ;;      Totals:         3       0       0       0       0
  4226 ;;Total ram usage:        3 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; This function calls:
  4229 ;;		Nothing
  4230 ;; This function is called by:
  4231 ;;		Interrupt level 1
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           
  4236                           ;psect for function _ISR
  4237  05FE                     _ISR:
  4238  05FE                     i1l1282:
  4239                           
  4240                           ;pseudocodigo_lab3.c: 94:     if (PIR1bits.RCIF == 1){
  4241  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  4242  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  4243  0600  1E8C               	btfss	12,5	;volatile
  4244  0601  2E03               	goto	u39_21
  4245  0602  2E04               	goto	u39_20
  4246  0603                     u39_21:
  4247  0603  2E08               	goto	i1l96
  4248  0604                     u39_20:
  4249  0604                     i1l1284:
  4250                           
  4251                           ;pseudocodigo_lab3.c: 99:         data_recive = RCREG;
  4252  0604  081A               	movf	26,w	;volatile
  4253  0605  00F0               	movwf	??_ISR
  4254  0606  0870               	movf	??_ISR,w
  4255  0607  00F8               	movwf	_data_recive
  4256  0608                     i1l96:
  4257  0608  0872               	movf	??_ISR+2,w
  4258  0609  008A               	movwf	10
  4259  060A  0E71               	swapf	??_ISR+1,w
  4260  060B  0083               	movwf	3
  4261  060C  0EFE               	swapf	btemp,f
  4262  060D  0E7E               	swapf	btemp,w
  4263  060E  0009               	retfie
  4264  060F                     __end_of_ISR:
  4265  007E                     btemp	set	126	;btemp
  4266  007E                     wtemp0	set	126
  4267                           
  4268                           	psect	intentry
  4269  0004                     __pintentry:	
  4270                           ;incstack = 0
  4271                           ; Regs used in _ISR: [wreg]
  4272                           
  4273  0004                     interrupt_function:
  4274  007E                     saved_w	set	btemp
  4275  0004  00FE               	movwf	btemp
  4276  0005  0E03               	swapf	3,w
  4277  0006  00F1               	movwf	??_ISR+1
  4278  0007  080A               	movf	10,w
  4279  0008  00F2               	movwf	??_ISR+2
  4280  0009  120A  118A  2DFE   	ljmp	_ISR
  4281                           
  4282                           	psect	config
  4283                           
  4284                           ;Config register CONFIG1 @ 0x2007
  4285                           ;	Oscillator Selection bits
  4286                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4287                           ;	Watchdog Timer Enable bit
  4288                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4289                           ;	Power-up Timer Enable bit
  4290                           ;	PWRTE = OFF, PWRT disabled
  4291                           ;	RE3/MCLR pin function select bit
  4292                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4293                           ;	Code Protection bit
  4294                           ;	CP = OFF, Program memory code protection is disabled
  4295                           ;	Data Code Protection bit
  4296                           ;	CPD = OFF, Data memory code protection is disabled
  4297                           ;	Brown Out Reset Selection bits
  4298                           ;	BOREN = ON, BOR enabled
  4299                           ;	Internal External Switchover bit
  4300                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4301                           ;	Fail-Safe Clock Monitor Enabled bit
  4302                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4303                           ;	Low Voltage Programming Enable bit
  4304                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4305                           ;	In-Circuit Debugger Mode bit
  4306                           ;	DEBUG = 0x1, unprogrammed default
  4307  2007                     	org	8199
  4308  2007  23D4               	dw	9172
  4309                           
  4310                           ;Config register CONFIG2 @ 0x2008
  4311                           ;	Brown-out Reset Selection bit
  4312                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4313                           ;	Flash Program Memory Self Write Enable bits
  4314                           ;	WRT = OFF, Write protection off
  4315  2008                     	org	8200
  4316  2008  3FFF               	dw	16383

Data Sizes:
    Strings     26
    Constant    10
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     27      58
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_4(CODE[5]), STR_3(CODE[6]), STR_2(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> S3_cont(BANK0[3]), data1(BANK0[8]), data2(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 

    S3_cont	PTR unsigned char [3] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    data1	PTR unsigned char [8] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    data2	PTR unsigned char [8] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_ADC_channel1
    _main->_ADC_channel2
    _titulos_LCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _setup->_initOsc
    _Show_val_LCD->_Lcd_Set_Cursor
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _ADC_channel2->_ADC_Config
    _ADC_channel1->_ADC_Config

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ADC_to_string
    _titulos_LCD->_Lcd_Set_Cursor
    _titulos_LCD->_Lcd_Write_String
    _Show_val_LCD->_Lcd_Set_Cursor
    _ADC_to_string->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4077
                                             25 BANK0      2     2      0
                       _ADC_channel1
                       _ADC_channel2
                      _ADC_to_string
                           _Lcd_Init
                       _Show_val_LCD
                        _Trasmission
                    _USART_INTERRUPT
                         _USART_Init
                _USART_Init_BaudRate
                              _setup
                        _titulos_LCD
 ---------------------------------------------------------------------------------
 (1) _titulos_LCD                                          1     1      0     842
                                              3 BANK0      1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     228
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init_BaudRate                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_INTERRUPT                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Trasmission                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Show_val_LCD                                         2     2      0     676
                                              3 BANK0      2     2      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     614
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_to_string                                        3     3      0    2407
                                             22 BANK0      3     3      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    2407
                                              9 BANK0     13    10      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ADC_channel2                                         2     2      0      22
                                              6 COMMON     2     2      0
                         _ADC_Config
 ---------------------------------------------------------------------------------
 (1) _ADC_channel1                                         2     2      0      22
                                              6 COMMON     2     2      0
                         _ADC_Config
 ---------------------------------------------------------------------------------
 (2) _ADC_Config                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_channel1
     _ADC_Config
   _ADC_channel2
     _ADC_Config
   _ADC_to_string
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _isdigit
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Show_val_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
   _Trasmission
   _USART_INTERRUPT
   _USART_Init
   _USART_Init_BaudRate
   _setup
     _initOsc
   _titulos_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      45       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1B      3A       5       72.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      45      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 16:40:34 2021

                           pc 0002                ___bmul@product 0075                            fsr 0004  
         __size_of_ADC_Config 00BC              ?_USART_INTERRUPT 0070                           l111 05EB  
                         l123 0563                           l117 057F                           l126 0476  
                         l150 0369                           l231 018D                           l135 05D8  
                         l151 036F                           l240 01CC                           l232 0194  
                         l152 0375                           l144 034B                           l241 01D3  
                         l233 019B                           l129 02E0                           l153 037B  
                         l145 03A3                           l242 01DA                           l234 01A2  
                         l170 0638                           l154 03A4                           l146 0351  
                         l138 0547                           l243 01E1                           l235 01A9  
                         l147 0357                           l244 01E8                           l236 01B0  
                         l148 035D                           l245 01EF                           l237 01B7  
                         l229 0186                           l173 0599                           l149 0363  
                         l246 01F6                           l238 01BE                           l182 052B  
                         l270 061E                           l247 023F                           l239 01C5  
                         l415 0183                           l167 03F4                           l191 0505  
                         l185 05AF                           l273 062C                           l276 0632  
                         l445 05C4                           l701 04B2                           l691 043A  
                         l872 05FD                           u360 05CB                           u361 05CA  
                         u610 04AE                           u450 05F4                           u370 05D0  
                         u611 04AD                           u451 05F3                           u371 05CF  
                         u460 05FA                           _ISR 05FE                           u605 04A2  
                         u461 05F9                           u470 05B6                           u471 05B5  
                         u480 05C3                           u560 047F                           u481 05C2  
                         u561 047E                           u580 0491                           u900 050E  
                         u581 0490                           u901 050D                           u830 03FF  
                         u590 049B                           u910 0520                           _VAL 0026  
                         u831 03FE                           u591 049A                           u575 0483  
                         u911 051F                           u920 0505                           u921 0504  
                         u850 0411                           u930 002D                           u851 0410  
                         u595 0497                           u931 002C                           u780 057F  
                         u940 0046                           u781 057E                           u845 0403  
                         u941 0045                           u790 0563                           u870 0422  
                         u950 007C                           u791 0562                           u871 0421  
                         u951 007B                           u960 00AD                           u865 0412  
                         u961 00AC                           u890 0436                           u970 00BB  
                         u891 0435                           u875 041E                           u971 00BA  
                         u980 00C1                           u885 042A                           u981 00C0  
                         u990 00E2                           u991 00E1                           u995 00DE  
                         fsr0 0004                           indf 0000                   _titulos_LCD 05D9  
                        ?_ISR 0070                          l1200 062D                          l2010 03CB  
                        l2002 03A5                          l2004 03AB                          l2020 0274  
                        l2012 05D9                          l2006 03B5                          l2030 02A0  
                        l2022 027E                          l2014 05E5                          l2016 043B  
                        l2008 03C5                          l2040 02CA                          l2032 02A8  
                        l2024 028A                          l2042 02D2                          l2034 02B0  
                        l2026 0292                          l2018 0240                          l1154 034A  
                        l1170 0537                          l2050 02EB                          l2044 02DA  
                        l2036 02B6                          l2028 0298                          l1180 053F  
                        l1172 053B                          l1164 052C                          l2060 0314  
                        l2052 02F0                          l1510 048D                          l1502 0477  
                        l2038 02C2                          l1270 05D0                          l1158 0381  
                        l1190 0546                          l1182 0540                          l1174 053C  
                        l1166 0532                          l2070 032E                          l2062 0319  
                        l2054 02F5                          l2046 02E1                          l1512 0491  
                        l1504 047F                          l1520 04AE                          l2160 0092  
                        l1272 05D2                          l1192 0627                          l1184 0543  
                        l1176 053D                          l1168 0536                          l2080 0344  
                        l2072 0334                          l2064 031E                          l2056 02FF  
                        l2048 02E6                          l2162 0205                          l1514 049B  
                        l1506 0482                          l1450 05ED                          l1274 05D4  
                        l1266 05C5                          l1194 062A                          l1186 0544  
                        l1178 053E                          l2074 0337                          l2066 0323  
                        l2058 0305                          l1516 04A1                          l1508 0489  
                        l1452 05EE                          l1276 05D6                          l1268 05CB  
                        l1196 060F                          l1188 0545                          l2076 033D  
                        l2068 0328                          l1550 0237                          l1470 05BC  
                        l1462 05B1                          l1518 04A8                          l1454 05F4  
                        l1198 061D                          l2158 0389                          l2078 0340  
                        l1552 023A                          l1544 0185                          l1472 05C3  
                        l1464 05B2                          l1456 05FA                          l1554 023D  
                        l1466 05B6                          l1458 05FC                          l1556 023E  
                        l1548 01FD                          l1468 05BA                          l1900 0520  
                        l1670 0573                          l1902 0525                          l1910 04F8  
                        l1672 0577                          l1680 0557                          l1920 0039  
                        l1912 0022                          l1904 04E0                          l1674 057B  
                        l1666 0564                          l1682 055B                          l1930 005D  
                        l1922 003A                          l1914 0027                          l1850 05A4  
                        l1906 04E3                          l1668 056A                          l1684 055F  
                        l1676 0548                          l1940 007E                          l1932 0068  
                        l1924 0046                          l1916 002D                          l1844 0634  
                        l1860 058A                          l1852 05A7                          l1908 04F0  
                        l1678 054E                          l1870 03FF                          l1950 00B1  
                        l1942 009D                          l1934 006C                          l1926 004A  
                        l1918 0034                          l1862 058D                          l1854 05AC  
                        l1846 059B                          l1880 0422                          l1872 0402  
                        l1952 00B6                          l1944 00A5                          l1928 004C  
                        l1936 007D                          l1864 0596                          l1856 0581  
                        l1848 059E                          l1882 0428                          l1874 0409  
                        l1866 03F5                          l1970 00FD                          l1962 00C7  
                        l1954 00BB                          l1946 00A9                          l1858 0584  
                        l1884 0429                          l1876 040D                          l1868 03F9  
                        l1980 0127                          l1972 00FE                          l1956 00C1  
                        l1948 00AD                          l1892 0509                          l1886 0430  
                        l1878 0411                          l1982 012C                          l1974 0112  
                        l1966 00E3                          l1958 00C5                          l1990 016D  
                        l1894 050E                          l1888 0436                          l1984 015C  
                        l1976 0118                          l1968 00ED                          l1992 017F  
                        l1896 0513                          l1978 0120                          l1898 051A  
                        l1988 0164                          STR_1 04C3                          STR_2 04D2  
                        STR_3 04D2                          STR_4 04D8                          u1000 00ED  
                        u1001 00EC                          u1010 00FD                          u1011 00FC  
                        u1020 0112                          u1021 0111                          u1030 0120  
                        u1031 011F                          u1015 00F9                          u1040 016D  
                        u1041 016C                          u1025 010E                          u1050 017F  
                        u1051 017E                          u1107 05A9                          u1060 032E  
                        u1117 03B1                          u1061 032D                          u1070 033D  
                        u1127 03C1                          u1071 033C                          u1137 03D1  
                        u1147 0591                          u1157 0552                          u1167 056E  
                        u1087 0310                          u1097 027A                          _RCIF 0065  
                        i1l96 0608                          _TRMT 04C1             ?_Lcd_Write_String 0070  
                        _cont 0079                          _main 02E1                          btemp 007E  
                        start 000C            ??_Lcd_Write_String 0076               __end_of_Lcd_Cmd 059A  
           ___bmul@multiplier 0076                         ??_ISR 0070                         ?_main 0070  
                       _ANSEL 0188               __end_of___lwdiv 043B               __end_of___lwmod 04B3  
                       _RCREG 001A                         _SPBRG 0099                         _PORTA 0005  
                       _PORTB 0006                         _PORTC 0007                         _PORTD 0008  
                       _PORTE 0009                         u39_20 0604                         u39_21 0603  
     __size_of_Lcd_Set_Cursor 0026                         _TRISA 0085                         _TRISB 0086  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
            ADC_Config@AN_num 0075                         _data1 0034                         _data2 002C  
             __end_of_dpowers 04C3               __end_of_initOsc 03A5               __end_of_isdigit 05FE  
                       _setup 052C                         pclath 000A                         status 0003  
                       wtemp0 007E               __end_of_sprintf 0184                   ?_USART_Init 0070  
            __end_of_Lcd_Init 03F5         __size_of_ADC_channel1 001C         __size_of_ADC_channel2 001C  
            __end_of_Lcd_Port 0639               __initialization 000F                  __end_of_main 0349  
                      ??_main 0058                        _ADCON1 009F                        _ADRESH 001E  
                      _ADRESL 009E                   initOsc@IRCF 0075           _USART_Init_BaudRate 0627  
                      ?_setup 0070                        _ANSELH 0189                        i1l1282 05FE  
                      i1l1284 0604                  ??_ADC_Config 0073                  _ADC_channel1 0564  
                _ADC_channel2 0548                     ??_Lcd_Cmd 0074                        _S1_val 002B  
                      _S2_val 002A                        _SPBRGH 009A       __size_of_Lcd_Write_Char 0016  
                      ___bmul 05B0          ?_USART_Init_BaudRate 0070                     ??___lwdiv 0077  
                   ??___lwmod 0046            __end_of_ADC_Config 0240                     ??_initOsc 0073  
                   ??_isdigit 0073                        saved_w 007E           __size_of_USART_Init 0010  
                   ??_sprintf 004B               Lcd_Set_Cursor@a 0040               Lcd_Set_Cursor@b 0077  
     __end_of__initialization 001B           ___bmul@multiplicand 0073                __pcstackCOMMON 0070  
       ??_USART_Init_BaudRate 0073                 __end_of_setup 0548                 ??_Trasmission 0073  
              _Lcd_Set_Cursor 0506                  ?_titulos_LCD 0070                     ?_Lcd_Init 0070  
                   ?_Lcd_Port 0070                       ??_setup 0076                    __pbssBANK0 0020  
                  __pmaintext 02E1                       ?___bmul 0073                    __pintentry 0004  
   __size_of_Lcd_Write_String 0029        __end_of_Lcd_Set_Cursor 052C        __size_of_ADC_to_string 003C  
                     _S3_cont 003C                    ??_Lcd_Init 003F           __end_of_Trasmission 05D9  
                  ??_Lcd_Port 0073      __size_of_USART_INTERRUPT 0006                    __stringtab 04B3  
               _eusart_toggle 007A                    _cont_usart 0028                _Lcd_Write_Char 059A  
                     _Lcd_Cmd 0580                  ??_USART_Init 0073               __size_of___bmul 0015  
               ?_Show_val_LCD 0070                       ___lwdiv 03F5                       ___lwmod 0477  
             ?_Lcd_Set_Cursor 0077                       __ptext1 05D9                       __ptext2 04DD  
                     __ptext3 052C                       __ptext4 0349                       __ptext5 0627  
                     __ptext6 060F                       __ptext7 062D                       __ptext8 05C5  
                     __ptext9 0240                  __size_of_ISR 0011                       _dpowers 04B9  
                     _initOsc 0349                       _isdigit 05EC            __end_of_USART_Init 061F  
                     _sprintf 001F                       clrloop0 0620        __end_of_Lcd_Write_Char 05B0  
        end_of_initialization 001B                 _ADC_to_string 043B                ??_Show_val_LCD 0042  
                   _RCSTAbits 0018                     Lcd_Port@a 0073                     _PORTEbits 0009  
                 _Trasmission 05C5                     _TRISCbits 0087          __size_of_titulos_LCD 0013  
             ?_Lcd_Write_Char 0070             Lcd_Write_String@a 003F             Lcd_Write_String@i 0040  
              ?_ADC_to_string 0070                     _TXSTAbits 0098             ??_USART_INTERRUPT 0073  
              __end_of___bmul 05C5              _Lcd_Write_String 04DD           start_initialization 000F  
                 __end_of_ISR 060F             __size_of_Lcd_Init 0050             __size_of_Lcd_Port 0006  
 __end_of_USART_Init_BaudRate 062D                      ??___bmul 0074               Lcd_Write_Char@a 0075  
                 __pbssCOMMON 0078                     ___latbits 0002                 __pcstackBANK0 003F  
                _isdigit$1021 0073          __end_of_Show_val_LCD 02E1                   _data_recive 0078  
             ??_ADC_to_string 0055                      ?_Lcd_Cmd 0070                   sprintf@flag 004F  
                 sprintf@prec 0053              ___lwdiv@dividend 0075              ??_Lcd_Set_Cursor 003F  
                    ?___lwdiv 0073                      ?___lwmod 0042                     __pstrings 04B3  
                    ?_initOsc 0070                      ?_isdigit 0070              ___lwdiv@quotient 0040  
                    ?_sprintf 0048                __size_of_setup 001C                 ?_ADC_channel1 0070  
               ?_ADC_channel2 0070             interrupt_function 0004                     clear_ram0 061F  
                    _PIE1bits 008C                      Lcd_Cmd@a 0076                      _PIR1bits 000C  
                    _VAL_SWAP 0024                    _ADCON0bits 001F                   __stringbase 04B8  
                ?_Trasmission 0070              ??_Lcd_Write_Char 0074               _USART_INTERRUPT 062D  
                    _Lcd_Init 03A5                      _Lcd_Port 0633                ??_ADC_channel1 0076  
              ??_ADC_channel2 0076                    _ADC_Config 0184      __end_of_Lcd_Write_String 0506  
            __size_of_Lcd_Cmd 001A                    _ADC_toggle 0029              __size_of___lwdiv 0046  
            __size_of___lwmod 003C            __end_of__stringtab 04B9         __size_of_Show_val_LCD 00A1  
                  sprintf@val 0050                 ??_titulos_LCD 0042              __size_of_initOsc 005C  
            __size_of_isdigit 0012               ___lwdiv@divisor 0073               ___lwdiv@counter 003F  
                    __ptext10 059A                      __ptext11 0506                      __ptext20 05B0  
                    __ptext12 03A5                      __ptext21 0548                      __ptext13 0580  
                    __ptext22 0564                      __ptext14 0633                      __ptext23 0184  
                    __ptext15 043B                      __ptext24 05FE                      __ptext16 001F  
                    __ptext17 05EC                      __ptext18 0477                      __ptext19 03F5  
            __size_of_sprintf 0165                 __size_of_main 0068                  _Show_val_LCD 0240  
     __end_of_USART_INTERRUPT 0633                    _INTCONbits 000B                   _VAL_NIBBLE1 0022  
                 _VAL_NIBBLE2 0020                      isdigit@c 0074                      intlevel1 0000  
                   sprintf@ap 004E                     sprintf@sp 0052                   ?_ADC_Config 0070  
         __end_of_titulos_LCD 05EC              ___lwmod@dividend 0044                     stringcode 04B3  
                  _OSCCONbits 008F  __size_of_USART_Init_BaudRate 0006          __end_of_ADC_channel1 0580  
        __end_of_ADC_channel2 0564            Lcd_Set_Cursor@temp 0041                      sprintf@c 0054  
                    sprintf@f 0048               ___lwmod@divisor 0042          __size_of_Trasmission 0014  
             ___lwmod@counter 0047                      stringdir 04B3                      stringtab 04B3  
       __end_of_ADC_to_string 0477                    _USART_Init 060F  
