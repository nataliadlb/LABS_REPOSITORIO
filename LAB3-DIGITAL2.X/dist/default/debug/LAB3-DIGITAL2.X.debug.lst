

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 11 23:51:31 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	psect	text8_split_1,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F887 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  0105                     	;# 
   234  0107                     	;# 
   235  0108                     	;# 
   236  0109                     	;# 
   237  010C                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0185                     	;# 
   243  0187                     	;# 
   244  0188                     	;# 
   245  0189                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  000E                     	;# 
   264  000F                     	;# 
   265  0010                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001D                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  0087                     	;# 
   287  0088                     	;# 
   288  0089                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  009F                     	;# 
   311  0105                     	;# 
   312  0107                     	;# 
   313  0108                     	;# 
   314  0109                     	;# 
   315  010C                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  0185                     	;# 
   321  0187                     	;# 
   322  0188                     	;# 
   323  0189                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  008F                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  0105                     	;# 
   390  0107                     	;# 
   391  0108                     	;# 
   392  0109                     	;# 
   393  010C                     	;# 
   394  010C                     	;# 
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  0185                     	;# 
   399  0187                     	;# 
   400  0188                     	;# 
   401  0189                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404  0000                     	;# 
   405  0001                     	;# 
   406  0002                     	;# 
   407  0003                     	;# 
   408  0004                     	;# 
   409  0005                     	;# 
   410  0006                     	;# 
   411  0007                     	;# 
   412  0008                     	;# 
   413  0009                     	;# 
   414  000A                     	;# 
   415  000B                     	;# 
   416  000C                     	;# 
   417  000D                     	;# 
   418  000E                     	;# 
   419  000E                     	;# 
   420  000F                     	;# 
   421  0010                     	;# 
   422  0011                     	;# 
   423  0012                     	;# 
   424  0013                     	;# 
   425  0014                     	;# 
   426  0015                     	;# 
   427  0015                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001B                     	;# 
   435  001C                     	;# 
   436  001D                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  0081                     	;# 
   440  0085                     	;# 
   441  0086                     	;# 
   442  0087                     	;# 
   443  0088                     	;# 
   444  0089                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  008E                     	;# 
   448  008F                     	;# 
   449  0090                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0094                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009A                     	;# 
   462  009B                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  009F                     	;# 
   467  0105                     	;# 
   468  0107                     	;# 
   469  0108                     	;# 
   470  0109                     	;# 
   471  010C                     	;# 
   472  010C                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  010F                     	;# 
   476  0185                     	;# 
   477  0187                     	;# 
   478  0188                     	;# 
   479  0189                     	;# 
   480  018C                     	;# 
   481  018D                     	;# 
   482  0000                     	;# 
   483  0001                     	;# 
   484  0002                     	;# 
   485  0003                     	;# 
   486  0004                     	;# 
   487  0005                     	;# 
   488  0006                     	;# 
   489  0007                     	;# 
   490  0008                     	;# 
   491  0009                     	;# 
   492  000A                     	;# 
   493  000B                     	;# 
   494  000C                     	;# 
   495  000D                     	;# 
   496  000E                     	;# 
   497  000E                     	;# 
   498  000F                     	;# 
   499  0010                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0013                     	;# 
   503  0014                     	;# 
   504  0015                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  001A                     	;# 
   511  001B                     	;# 
   512  001B                     	;# 
   513  001C                     	;# 
   514  001D                     	;# 
   515  001E                     	;# 
   516  001F                     	;# 
   517  0081                     	;# 
   518  0085                     	;# 
   519  0086                     	;# 
   520  0087                     	;# 
   521  0088                     	;# 
   522  0089                     	;# 
   523  008C                     	;# 
   524  008D                     	;# 
   525  008E                     	;# 
   526  008F                     	;# 
   527  0090                     	;# 
   528  0091                     	;# 
   529  0092                     	;# 
   530  0093                     	;# 
   531  0093                     	;# 
   532  0093                     	;# 
   533  0094                     	;# 
   534  0095                     	;# 
   535  0096                     	;# 
   536  0097                     	;# 
   537  0098                     	;# 
   538  0099                     	;# 
   539  009A                     	;# 
   540  009B                     	;# 
   541  009C                     	;# 
   542  009D                     	;# 
   543  009E                     	;# 
   544  009F                     	;# 
   545  0105                     	;# 
   546  0107                     	;# 
   547  0108                     	;# 
   548  0109                     	;# 
   549  010C                     	;# 
   550  010C                     	;# 
   551  010D                     	;# 
   552  010E                     	;# 
   553  010F                     	;# 
   554  0185                     	;# 
   555  0187                     	;# 
   556  0188                     	;# 
   557  0189                     	;# 
   558  018C                     	;# 
   559  018D                     	;# 
   560                           
   561                           	psect	strings
   562  1800                     __pstrings:
   563  1800                     stringtab:
   564  1800                     __stringtab:
   565                           
   566                           ;	String table - string pointers are 1 byte each
   567  1800  1BFF               	btfsc	btemp+1,7
   568  1801  280A               	ljmp	stringcode
   569  1802  1383               	bcf	3,7
   570  1803  187F               	btfsc	btemp+1,0
   571  1804  1783               	bsf	3,7
   572  1805  0800               	movf	0,w
   573  1806  0A84               	incf	4,f
   574  1807  1903               	skipnz
   575  1808  0AFF               	incf	btemp+1,f
   576  1809  0008               	return
   577  180A                     stringcode:
   578  180A                     stringdir:
   579  180A  3018               	movlw	high stringdir
   580  180B  008A               	movwf	10
   581  180C  0804               	movf	4,w
   582  180D  0A84               	incf	4,f
   583  180E  0782               	addwf	2,f
   584  180F                     __stringbase:
   585  180F  3400               	retlw	0
   586  1810                     __end_of__stringtab:
   587  1810                     __powers_:
   588  1810  3400               	retlw	0
   589  1811  3400               	retlw	0
   590  1812  3480               	retlw	128
   591  1813  343F               	retlw	63
   592  1814  3400               	retlw	0
   593  1815  3400               	retlw	0
   594  1816  3420               	retlw	32
   595  1817  3441               	retlw	65
   596  1818  3400               	retlw	0
   597  1819  3400               	retlw	0
   598  181A  34C8               	retlw	200
   599  181B  3442               	retlw	66
   600  181C  3400               	retlw	0
   601  181D  3400               	retlw	0
   602  181E  347A               	retlw	122
   603  181F  3444               	retlw	68
   604  1820  3400               	retlw	0
   605  1821  3440               	retlw	64
   606  1822  341C               	retlw	28
   607  1823  3446               	retlw	70
   608  1824  3400               	retlw	0
   609  1825  3450               	retlw	80
   610  1826  34C3               	retlw	195
   611  1827  3447               	retlw	71
   612  1828  3400               	retlw	0
   613  1829  3424               	retlw	36
   614  182A  3474               	retlw	116
   615  182B  3449               	retlw	73
   616  182C  3480               	retlw	128
   617  182D  3496               	retlw	150
   618  182E  3418               	retlw	24
   619  182F  344B               	retlw	75
   620  1830  3420               	retlw	32
   621  1831  34BC               	retlw	188
   622  1832  34BE               	retlw	190
   623  1833  344C               	retlw	76
   624  1834  3428               	retlw	40
   625  1835  346B               	retlw	107
   626  1836  346E               	retlw	110
   627  1837  344E               	retlw	78
   628  1838  34F9               	retlw	249
   629  1839  3402               	retlw	2
   630  183A  3415               	retlw	21
   631  183B  3450               	retlw	80
   632  183C  34EC               	retlw	236
   633  183D  3478               	retlw	120
   634  183E  34AD               	retlw	173
   635  183F  3460               	retlw	96
   636  1840  34CA               	retlw	202
   637  1841  34F2               	retlw	242
   638  1842  3449               	retlw	73
   639  1843  3471               	retlw	113
   640  1844                     __end_of__powers_:
   641  1844                     __npowers_:
   642  1844  3400               	retlw	0
   643  1845  3400               	retlw	0
   644  1846  3480               	retlw	128
   645  1847  343F               	retlw	63
   646  1848  34CD               	retlw	205
   647  1849  34CC               	retlw	204
   648  184A  34CC               	retlw	204
   649  184B  343D               	retlw	61
   650  184C  340A               	retlw	10
   651  184D  34D7               	retlw	215
   652  184E  3423               	retlw	35
   653  184F  343C               	retlw	60
   654  1850  346F               	retlw	111
   655  1851  3412               	retlw	18
   656  1852  3483               	retlw	131
   657  1853  343A               	retlw	58
   658  1854  3417               	retlw	23
   659  1855  34B7               	retlw	183
   660  1856  34D1               	retlw	209
   661  1857  3438               	retlw	56
   662  1858  34AC               	retlw	172
   663  1859  34C5               	retlw	197
   664  185A  3427               	retlw	39
   665  185B  3437               	retlw	55
   666  185C  34BD               	retlw	189
   667  185D  3437               	retlw	55
   668  185E  3486               	retlw	134
   669  185F  3435               	retlw	53
   670  1860  3495               	retlw	149
   671  1861  34BF               	retlw	191
   672  1862  34D6               	retlw	214
   673  1863  3433               	retlw	51
   674  1864  3477               	retlw	119
   675  1865  34CC               	retlw	204
   676  1866  342B               	retlw	43
   677  1867  3432               	retlw	50
   678  1868  345F               	retlw	95
   679  1869  3470               	retlw	112
   680  186A  3489               	retlw	137
   681  186B  3430               	retlw	48
   682  186C  34FF               	retlw	255
   683  186D  34E6               	retlw	230
   684  186E  34DB               	retlw	219
   685  186F  342E               	retlw	46
   686  1870  3408               	retlw	8
   687  1871  34E5               	retlw	229
   688  1872  343C               	retlw	60
   689  1873  341E               	retlw	30
   690  1874  3460               	retlw	96
   691  1875  3442               	retlw	66
   692  1876  34A2               	retlw	162
   693  1877  340D               	retlw	13
   694  1878                     __end_of__npowers_:
   695  1878                     _dpowers:
   696  1878  3401               	retlw	1
   697  1879  3400               	retlw	0
   698  187A  3400               	retlw	0
   699  187B  3400               	retlw	0
   700  187C  340A               	retlw	10
   701  187D  3400               	retlw	0
   702  187E  3400               	retlw	0
   703  187F  3400               	retlw	0
   704  1880  3464               	retlw	100
   705  1881  3400               	retlw	0
   706  1882  3400               	retlw	0
   707  1883  3400               	retlw	0
   708  1884  34E8               	retlw	232
   709  1885  3403               	retlw	3
   710  1886  3400               	retlw	0
   711  1887  3400               	retlw	0
   712  1888  3410               	retlw	16
   713  1889  3427               	retlw	39
   714  188A  3400               	retlw	0
   715  188B  3400               	retlw	0
   716  188C  34A0               	retlw	160
   717  188D  3486               	retlw	134
   718  188E  3401               	retlw	1
   719  188F  3400               	retlw	0
   720  1890  3440               	retlw	64
   721  1891  3442               	retlw	66
   722  1892  340F               	retlw	15
   723  1893  3400               	retlw	0
   724  1894  3480               	retlw	128
   725  1895  3496               	retlw	150
   726  1896  3498               	retlw	152
   727  1897  3400               	retlw	0
   728  1898  3400               	retlw	0
   729  1899  34E1               	retlw	225
   730  189A  34F5               	retlw	245
   731  189B  3405               	retlw	5
   732  189C  3400               	retlw	0
   733  189D  34CA               	retlw	202
   734  189E  349A               	retlw	154
   735  189F  343B               	retlw	59
   736  18A0                     __end_of_dpowers:
   737  000B                     _INTCONbits	set	11
   738  001A                     _RCREG	set	26
   739  0018                     _RCSTAbits	set	24
   740  0009                     _PORTEbits	set	9
   741  0009                     _PORTE	set	9
   742  0008                     _PORTD	set	8
   743  0007                     _PORTC	set	7
   744  0006                     _PORTB	set	6
   745  0005                     _PORTA	set	5
   746  001E                     _ADRESH	set	30
   747  001F                     _ADCON0bits	set	31
   748  0019                     _TXREG	set	25
   749  000C                     _PIR1bits	set	12
   750  0099                     _SPBRG	set	153
   751  0098                     _TXSTAbits	set	152
   752  009F                     _ADCON1	set	159
   753  009E                     _ADRESL	set	158
   754  008F                     _OSCCONbits	set	143
   755  0089                     _TRISE	set	137
   756  0088                     _TRISD	set	136
   757  0087                     _TRISCbits	set	135
   758  0086                     _TRISB	set	134
   759  0085                     _TRISA	set	133
   760  008C                     _PIE1bits	set	140
   761  0189                     _ANSELH	set	393
   762  0188                     _ANSEL	set	392
   763  18A0                     STR_6:
   764  18A0  3425               	retlw	37	;'%'
   765  18A1  3431               	retlw	49	;'1'
   766  18A2  342E               	retlw	46	;'.'
   767  18A3  3432               	retlw	50	;'2'
   768  18A4  3466               	retlw	102	;'f'
   769  18A5  3400               	retlw	0
   770  18A6                     STR_1:
   771  18A6  3453               	retlw	83	;'S'
   772  18A7  3431               	retlw	49	;'1'
   773  18A8  343A               	retlw	58	;':'
   774  18A9  3400               	retlw	0
   775  18AA                     STR_2:
   776  18AA  3453               	retlw	83	;'S'
   777  18AB  3432               	retlw	50	;'2'
   778  18AC  343A               	retlw	58	;':'
   779  18AD  3400               	retlw	0
   780  18AE                     STR_3:
   781  18AE  3453               	retlw	83	;'S'
   782  18AF  3433               	retlw	51	;'3'
   783  18B0  343A               	retlw	58	;':'
   784  18B1  3400               	retlw	0
   785  18B2                     STR_4:
   786  18B2  3476               	retlw	118	;'v'
   787  18B3  3400               	retlw	0
   788  18A0                     
   789                           	psect	cinit
   790  07E7                     start_initialization:	
   791                           ; #config settings
   792                           
   793  07E7                     __initialization:
   794                           
   795                           ; Clear objects allocated to COMMON
   796  07E7  01F8               	clrf	__pbssCOMMON& (0+127)
   797  07E8  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   798  07E9  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   799                           
   800                           ; Clear objects allocated to BANK1
   801  07EA  1383               	bcf	3,7	;select IRP bank0
   802  07EB  30CE               	movlw	low __pbssBANK1
   803  07EC  0084               	movwf	4
   804  07ED  30EE               	movlw	low (__pbssBANK1+32)
   805  07EE  120A  118A  2198  120A  118A  	fcall	clear_ram0
   806                           
   807                           ; Clear objects allocated to BANK3
   808  07F3  1783               	bsf	3,7	;select IRP bank2
   809  07F4  3090               	movlw	low __pbssBANK3
   810  07F5  0084               	movwf	4
   811  07F6  30A0               	movlw	low (__pbssBANK3+16)
   812  07F7  120A  118A  2198  120A  118A  	fcall	clear_ram0
   813  07FC                     end_of_initialization:	
   814                           ;End of C runtime variable initialization code
   815                           
   816  07FC                     __end_of__initialization:
   817  07FC  0183               	clrf	3
   818  07FD  160A  158A  2B13   	ljmp	_main	;jump to C main() function
   819                           
   820                           	psect	bssCOMMON
   821  0078                     __pbssCOMMON:
   822  0078                     _cont_usart:
   823  0078                     	ds	1
   824  0079                     _eusart_flag:
   825  0079                     	ds	1
   826  007A                     _S3_cont:
   827  007A                     	ds	1
   828                           
   829                           	psect	bssBANK1
   830  00CE                     __pbssBANK1:
   831  00CE                     _S2_val:
   832  00CE                     	ds	4
   833  00D2                     _S1_val:
   834  00D2                     	ds	4
   835  00D6                     _VAL_NIBBLE2:
   836  00D6                     	ds	2
   837  00D8                     _VAL_NIBBLE1:
   838  00D8                     	ds	2
   839  00DA                     _VAL_SWAP:
   840  00DA                     	ds	2
   841  00DC                     _VAL:
   842  00DC                     	ds	2
   843  00DE                     _data1:
   844  00DE                     	ds	16
   845                           
   846                           	psect	bssBANK3
   847  0190                     __pbssBANK3:
   848  0190                     _data2:
   849  0190                     	ds	16
   850                           
   851                           	psect	clrtext
   852  0198                     clear_ram0:	
   853                           ;	Called with FSR containing the base address, and
   854                           ;	W with the last address+1
   855                           
   856  0198  0064               	clrwdt	;clear the watchdog before getting into this loop
   857  0199                     clrloop0:
   858  0199  0180               	clrf	0	;clear RAM location pointed to by FSR
   859  019A  0A84               	incf	4,f	;increment pointer
   860  019B  0604               	xorwf	4,w	;XOR with final address
   861  019C  1903               	btfsc	3,2	;have we reached the end yet?
   862  019D  3400               	retlw	0	;all done for this memory range, return
   863  019E  0604               	xorwf	4,w	;XOR again to restore value
   864  019F  2999               	goto	clrloop0	;do the next byte
   865                           
   866                           	psect	cstackBANK1
   867  00A0                     __pcstackBANK1:
   868  00A0                     ?___flsub:
   869  00A0                     ___flsub@a:	
   870                           ; 4 bytes @ 0x0
   871                           
   872                           
   873                           ; 4 bytes @ 0x0
   874  00A0                     	ds	4
   875  00A4                     ___flsub@b:
   876                           
   877                           ; 4 bytes @ 0x4
   878  00A4                     	ds	4
   879  00A8                     ?_sprintf:
   880  00A8                     sprintf@sp:	
   881                           ; 2 bytes @ 0x8
   882                           
   883                           
   884                           ; 2 bytes @ 0x8
   885  00A8                     	ds	2
   886  00AA                     sprintf@f:
   887                           
   888                           ; 1 bytes @ 0xA
   889  00AA                     	ds	5
   890  00AF                     ??_sprintf:
   891                           
   892                           ; 1 bytes @ 0xF
   893  00AF                     	ds	5
   894  00B4                     _sprintf$1236:
   895                           
   896                           ; 4 bytes @ 0x14
   897  00B4                     	ds	4
   898  00B8                     sprintf@ap:
   899                           
   900                           ; 1 bytes @ 0x18
   901  00B8                     	ds	1
   902  00B9                     sprintf@val:
   903                           
   904                           ; 4 bytes @ 0x19
   905  00B9                     	ds	4
   906  00BD                     sprintf@flag:
   907                           
   908                           ; 2 bytes @ 0x1D
   909  00BD                     	ds	2
   910  00BF                     sprintf@width:
   911                           
   912                           ; 2 bytes @ 0x1F
   913  00BF                     	ds	2
   914  00C1                     sprintf@tmpval:
   915                           
   916                           ; 4 bytes @ 0x21
   917  00C1                     	ds	4
   918  00C5                     sprintf@eexp:
   919                           
   920                           ; 2 bytes @ 0x25
   921  00C5                     	ds	2
   922  00C7                     sprintf@fval:
   923                           
   924                           ; 4 bytes @ 0x27
   925  00C7                     	ds	4
   926  00CB                     sprintf@prec:
   927                           
   928                           ; 2 bytes @ 0x2B
   929  00CB                     	ds	2
   930  00CD                     sprintf@c:
   931                           
   932                           ; 1 bytes @ 0x2D
   933  00CD                     	ds	1
   934                           
   935                           	psect	cstackCOMMON
   936  0070                     __pcstackCOMMON:
   937  0070                     ?_isdigit:
   938  0070                     ?_setup:	
   939                           ; 1 bit 
   940                           
   941  0070                     ?_USART_Init:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0070                     ?_USART_Init_BaudRate:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0070                     ?_Lcd_Init:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0070                     ?_titulos_LCD:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0070                     ?_ADC_channel1:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0070                     ?_ADC_channel2:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0070                     ?_float_to_string:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0070                     ?_ADC_Config:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0070                     ?_initOsc:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0070                     ?_Lcd_Port:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0070                     ?_Lcd_Cmd:	
   972                           ; 1 bytes @ 0x0
   973                           
   974  0070                     ?_ISR:	
   975                           ; 1 bytes @ 0x0
   976                           
   977  0070                     ??_ISR:	
   978                           ; 1 bytes @ 0x0
   979                           
   980  0070                     ?_main:	
   981                           ; 1 bytes @ 0x0
   982                           
   983  0070                     ?_Lcd_Write_Char:	
   984                           ; 1 bytes @ 0x0
   985                           
   986                           
   987                           ; 1 bytes @ 0x0
   988  0070                     	ds	3
   989  0073                     ??_USART_Init:
   990  0073                     ??_USART_Init_BaudRate:	
   991                           ; 1 bytes @ 0x3
   992                           
   993  0073                     ??_ADC_Config:	
   994                           ; 1 bytes @ 0x3
   995                           
   996  0073                     ??_initOsc:	
   997                           ; 1 bytes @ 0x3
   998                           
   999  0073                     ??_Lcd_Port:	
  1000                           ; 1 bytes @ 0x3
  1001                           
  1002  0073                     ??_isdigit:	
  1003                           ; 1 bytes @ 0x3
  1004                           
  1005  0073                     ??__tdiv_to_l_:	
  1006                           ; 1 bytes @ 0x3
  1007                           
  1008  0073                     ??__div_to_l_:	
  1009                           ; 1 bytes @ 0x3
  1010                           
  1011  0073                     ??___lldiv:	
  1012                           ; 1 bytes @ 0x3
  1013                           
  1014  0073                     ??___fleq:	
  1015                           ; 1 bytes @ 0x3
  1016                           
  1017  0073                     ??___flge:	
  1018                           ; 1 bytes @ 0x3
  1019                           
  1020  0073                     ??___llmod:	
  1021                           ; 1 bytes @ 0x3
  1022                           
  1023  0073                     ?__Umul8_16:	
  1024                           ; 1 bytes @ 0x3
  1025                           
  1026  0073                     ?___wmul:	
  1027                           ; 2 bytes @ 0x3
  1028                           
  1029  0073                     ?___awmod:	
  1030                           ; 2 bytes @ 0x3
  1031                           
  1032  0073                     ?___lwmod:	
  1033                           ; 2 bytes @ 0x3
  1034                           
  1035  0073                     ?___flneg:	
  1036                           ; 2 bytes @ 0x3
  1037                           
  1038  0073                     ?___xxtofl:	
  1039                           ; 4 bytes @ 0x3
  1040                           
  1041  0073                     Lcd_Port@a:	
  1042                           ; 4 bytes @ 0x3
  1043                           
  1044  0073                     __Umul8_16@multiplicand:	
  1045                           ; 1 bytes @ 0x3
  1046                           
  1047  0073                     _isdigit$1038:	
  1048                           ; 1 bytes @ 0x3
  1049                           
  1050  0073                     ___wmul@multiplier:	
  1051                           ; 1 bytes @ 0x3
  1052                           
  1053  0073                     ___awmod@divisor:	
  1054                           ; 2 bytes @ 0x3
  1055                           
  1056  0073                     ___lwmod@divisor:	
  1057                           ; 2 bytes @ 0x3
  1058                           
  1059  0073                     ___flneg@f1:	
  1060                           ; 2 bytes @ 0x3
  1061                           
  1062  0073                     ___xxtofl@val:	
  1063                           ; 4 bytes @ 0x3
  1064                           
  1065                           
  1066                           ; 4 bytes @ 0x3
  1067  0073                     	ds	1
  1068  0074                     ??_Lcd_Cmd:
  1069  0074                     ??_Lcd_Write_Char:	
  1070                           ; 1 bytes @ 0x4
  1071                           
  1072  0074                     ___llmod@counter:	
  1073                           ; 1 bytes @ 0x4
  1074                           
  1075  0074                     isdigit@c:	
  1076                           ; 1 bytes @ 0x4
  1077                           
  1078                           
  1079                           ; 1 bytes @ 0x4
  1080  0074                     	ds	1
  1081  0075                     ??__Umul8_16:
  1082  0075                     initOsc@IRCF:	
  1083                           ; 1 bytes @ 0x5
  1084                           
  1085  0075                     Lcd_Write_Char@a:	
  1086                           ; 1 bytes @ 0x5
  1087                           
  1088  0075                     ADC_Config@AN_num:	
  1089                           ; 1 bytes @ 0x5
  1090                           
  1091  0075                     ___wmul@multiplicand:	
  1092                           ; 1 bytes @ 0x5
  1093                           
  1094  0075                     ___awmod@dividend:	
  1095                           ; 2 bytes @ 0x5
  1096                           
  1097  0075                     ___lwmod@dividend:	
  1098                           ; 2 bytes @ 0x5
  1099                           
  1100                           
  1101                           ; 2 bytes @ 0x5
  1102  0075                     	ds	1
  1103  0076                     ??_setup:
  1104  0076                     ?_Lcd_Write_String:	
  1105                           ; 1 bytes @ 0x6
  1106                           
  1107  0076                     Lcd_Cmd@a:	
  1108                           ; 1 bytes @ 0x6
  1109                           
  1110  0076                     Lcd_Write_String@a:	
  1111                           ; 1 bytes @ 0x6
  1112                           
  1113                           
  1114                           ; 2 bytes @ 0x6
  1115  0076                     	ds	1
  1116  0077                     ?_Lcd_Set_Cursor:
  1117  0077                     ??___wmul:	
  1118                           ; 1 bytes @ 0x7
  1119                           
  1120  0077                     ??___awmod:	
  1121                           ; 1 bytes @ 0x7
  1122                           
  1123  0077                     ??___flneg:	
  1124                           ; 1 bytes @ 0x7
  1125                           
  1126  0077                     ??___lwmod:	
  1127                           ; 1 bytes @ 0x7
  1128                           
  1129  0077                     Lcd_Set_Cursor@b:	
  1130                           ; 1 bytes @ 0x7
  1131                           
  1132                           
  1133                           ; 1 bytes @ 0x7
  1134  0077                     	ds	1
  1135  0078                     ??___flsub:
  1136                           
  1137                           	psect	cstackBANK0
  1138  0020                     __pcstackBANK0:	
  1139                           ; 1 bytes @ 0x8
  1140                           
  1141  0020                     ?___fleq:
  1142  0020                     ?___flge:	
  1143                           ; 1 bit 
  1144                           
  1145  0020                     ??_Lcd_Init:	
  1146                           ; 1 bit 
  1147                           
  1148  0020                     ??_Lcd_Set_Cursor:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0020                     ??_Lcd_Write_String:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0020                     ??___xxtofl:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0020                     ?__tdiv_to_l_:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0020                     ?__div_to_l_:	
  1161                           ; 4 bytes @ 0x0
  1162                           
  1163  0020                     ?___lldiv:	
  1164                           ; 4 bytes @ 0x0
  1165                           
  1166  0020                     ?___llmod:	
  1167                           ; 4 bytes @ 0x0
  1168                           
  1169  0020                     ___awmod@counter:	
  1170                           ; 4 bytes @ 0x0
  1171                           
  1172  0020                     ___lwmod@counter:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175  0020                     ___wmul@product:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178  0020                     __Umul8_16@product:	
  1179                           ; 2 bytes @ 0x0
  1180                           
  1181  0020                     ___lldiv@divisor:	
  1182                           ; 2 bytes @ 0x0
  1183                           
  1184  0020                     __div_to_l_@f1:	
  1185                           ; 4 bytes @ 0x0
  1186                           
  1187  0020                     ___fleq@ff1:	
  1188                           ; 4 bytes @ 0x0
  1189                           
  1190  0020                     ___flge@ff1:	
  1191                           ; 4 bytes @ 0x0
  1192                           
  1193  0020                     __tdiv_to_l_@f1:	
  1194                           ; 4 bytes @ 0x0
  1195                           
  1196  0020                     ___llmod@divisor:	
  1197                           ; 4 bytes @ 0x0
  1198                           
  1199                           
  1200                           ; 4 bytes @ 0x0
  1201  0020                     	ds	1
  1202  0021                     ?___lwdiv:
  1203  0021                     Lcd_Set_Cursor@a:	
  1204                           ; 2 bytes @ 0x1
  1205                           
  1206  0021                     ___awmod@sign:	
  1207                           ; 1 bytes @ 0x1
  1208                           
  1209  0021                     ___lwdiv@divisor:	
  1210                           ; 1 bytes @ 0x1
  1211                           
  1212                           
  1213                           ; 2 bytes @ 0x1
  1214  0021                     	ds	1
  1215  0022                     ?___awdiv:
  1216  0022                     Lcd_Set_Cursor@temp:	
  1217                           ; 2 bytes @ 0x2
  1218                           
  1219  0022                     ___awdiv@divisor:	
  1220                           ; 1 bytes @ 0x2
  1221                           
  1222  0022                     __Umul8_16@word_mpld:	
  1223                           ; 2 bytes @ 0x2
  1224                           
  1225                           
  1226                           ; 2 bytes @ 0x2
  1227  0022                     	ds	1
  1228  0023                     Lcd_Write_String@i:
  1229  0023                     ___lwdiv@dividend:	
  1230                           ; 2 bytes @ 0x3
  1231                           
  1232                           
  1233                           ; 2 bytes @ 0x3
  1234  0023                     	ds	1
  1235  0024                     __Umul8_16@multiplier:
  1236  0024                     ___xxtofl@sign:	
  1237                           ; 1 bytes @ 0x4
  1238                           
  1239  0024                     ___awdiv@dividend:	
  1240                           ; 1 bytes @ 0x4
  1241                           
  1242  0024                     ___lldiv@dividend:	
  1243                           ; 2 bytes @ 0x4
  1244                           
  1245  0024                     __div_to_l_@f2:	
  1246                           ; 4 bytes @ 0x4
  1247                           
  1248  0024                     ___fleq@ff2:	
  1249                           ; 4 bytes @ 0x4
  1250                           
  1251  0024                     ___flge@ff2:	
  1252                           ; 4 bytes @ 0x4
  1253                           
  1254  0024                     __tdiv_to_l_@f2:	
  1255                           ; 4 bytes @ 0x4
  1256                           
  1257  0024                     ___llmod@dividend:	
  1258                           ; 4 bytes @ 0x4
  1259                           
  1260                           
  1261                           ; 4 bytes @ 0x4
  1262  0024                     	ds	1
  1263  0025                     ??_titulos_LCD:
  1264  0025                     ??___lwdiv:	
  1265                           ; 1 bytes @ 0x5
  1266                           
  1267  0025                     ___xxtofl@exp:	
  1268                           ; 1 bytes @ 0x5
  1269                           
  1270                           
  1271                           ; 1 bytes @ 0x5
  1272  0025                     	ds	1
  1273  0026                     ??___awdiv:
  1274  0026                     ___lwdiv@counter:	
  1275                           ; 1 bytes @ 0x6
  1276                           
  1277  0026                     ___xxtofl@arg:	
  1278                           ; 1 bytes @ 0x6
  1279                           
  1280                           
  1281                           ; 4 bytes @ 0x6
  1282  0026                     	ds	1
  1283  0027                     ___awdiv@counter:
  1284  0027                     ___lwdiv@quotient:	
  1285                           ; 1 bytes @ 0x7
  1286                           
  1287                           
  1288                           ; 2 bytes @ 0x7
  1289  0027                     	ds	1
  1290  0028                     ___awdiv@sign:
  1291  0028                     ___lldiv@quotient:	
  1292                           ; 1 bytes @ 0x8
  1293                           
  1294  0028                     __div_to_l_@quot:	
  1295                           ; 4 bytes @ 0x8
  1296                           
  1297  0028                     __tdiv_to_l_@quot:	
  1298                           ; 4 bytes @ 0x8
  1299                           
  1300                           
  1301                           ; 4 bytes @ 0x8
  1302  0028                     	ds	1
  1303  0029                     ___awdiv@quotient:
  1304                           
  1305                           ; 2 bytes @ 0x9
  1306  0029                     	ds	2
  1307  002B                     ?___flmul:
  1308  002B                     ___flmul@b:	
  1309                           ; 4 bytes @ 0xB
  1310                           
  1311                           
  1312                           ; 4 bytes @ 0xB
  1313  002B                     	ds	1
  1314  002C                     ___lldiv@counter:
  1315  002C                     __div_to_l_@cntr:	
  1316                           ; 1 bytes @ 0xC
  1317                           
  1318  002C                     __tdiv_to_l_@cntr:	
  1319                           ; 1 bytes @ 0xC
  1320                           
  1321                           
  1322                           ; 1 bytes @ 0xC
  1323  002C                     	ds	1
  1324  002D                     __div_to_l_@exp1:
  1325  002D                     __tdiv_to_l_@exp1:	
  1326                           ; 1 bytes @ 0xD
  1327                           
  1328                           
  1329                           ; 1 bytes @ 0xD
  1330  002D                     	ds	2
  1331  002F                     ___flmul@a:
  1332                           
  1333                           ; 4 bytes @ 0xF
  1334  002F                     	ds	4
  1335  0033                     ??___flmul:
  1336                           
  1337                           ; 1 bytes @ 0x13
  1338  0033                     	ds	5
  1339  0038                     ___flmul@sign:
  1340                           
  1341                           ; 1 bytes @ 0x18
  1342  0038                     	ds	1
  1343  0039                     ___flmul@grs:
  1344                           
  1345                           ; 4 bytes @ 0x19
  1346  0039                     	ds	4
  1347  003D                     ___flmul@aexp:
  1348                           
  1349                           ; 1 bytes @ 0x1D
  1350  003D                     	ds	1
  1351  003E                     ___flmul@bexp:
  1352                           
  1353                           ; 1 bytes @ 0x1E
  1354  003E                     	ds	1
  1355  003F                     ___flmul@prod:
  1356                           
  1357                           ; 4 bytes @ 0x1F
  1358  003F                     	ds	4
  1359  0043                     ___flmul@temp:
  1360                           
  1361                           ; 2 bytes @ 0x23
  1362  0043                     	ds	2
  1363  0045                     ?_fround:
  1364  0045                     ?_scale:	
  1365                           ; 4 bytes @ 0x25
  1366                           
  1367  0045                     ?___fldiv:	
  1368                           ; 4 bytes @ 0x25
  1369                           
  1370  0045                     ___fldiv@a:	
  1371                           ; 4 bytes @ 0x25
  1372                           
  1373                           
  1374                           ; 4 bytes @ 0x25
  1375  0045                     	ds	4
  1376  0049                     ??_fround:
  1377  0049                     ??_scale:	
  1378                           ; 1 bytes @ 0x29
  1379                           
  1380  0049                     ___fldiv@b:	
  1381                           ; 1 bytes @ 0x29
  1382                           
  1383                           
  1384                           ; 4 bytes @ 0x29
  1385  0049                     	ds	4
  1386  004D                     ??___fldiv:
  1387                           
  1388                           ; 1 bytes @ 0x2D
  1389  004D                     	ds	3
  1390  0050                     _fround$1234:
  1391                           
  1392                           ; 4 bytes @ 0x30
  1393  0050                     	ds	2
  1394  0052                     ___fldiv@rem:
  1395                           
  1396                           ; 4 bytes @ 0x32
  1397  0052                     	ds	1
  1398  0053                     _scale$1235:
  1399                           
  1400                           ; 4 bytes @ 0x33
  1401  0053                     	ds	1
  1402  0054                     _fround$1233:
  1403                           
  1404                           ; 4 bytes @ 0x34
  1405  0054                     	ds	2
  1406  0056                     ___fldiv@sign:
  1407                           
  1408                           ; 1 bytes @ 0x36
  1409  0056                     	ds	1
  1410  0057                     scale@scl:
  1411  0057                     ___fldiv@new_exp:	
  1412                           ; 1 bytes @ 0x37
  1413                           
  1414                           
  1415                           ; 2 bytes @ 0x37
  1416  0057                     	ds	1
  1417  0058                     ?___fltol:
  1418  0058                     fround@prec:	
  1419                           ; 4 bytes @ 0x38
  1420                           
  1421  0058                     ___fltol@f1:	
  1422                           ; 1 bytes @ 0x38
  1423                           
  1424                           
  1425                           ; 4 bytes @ 0x38
  1426  0058                     	ds	1
  1427  0059                     ?___fladd:
  1428  0059                     ___fladd@b:	
  1429                           ; 4 bytes @ 0x39
  1430                           
  1431  0059                     ___fldiv@grs:	
  1432                           ; 4 bytes @ 0x39
  1433                           
  1434                           
  1435                           ; 4 bytes @ 0x39
  1436  0059                     	ds	3
  1437  005C                     ??___fltol:
  1438                           
  1439                           ; 1 bytes @ 0x3C
  1440  005C                     	ds	1
  1441  005D                     ___fldiv@bexp:
  1442  005D                     ___fladd@a:	
  1443                           ; 1 bytes @ 0x3D
  1444                           
  1445                           
  1446                           ; 4 bytes @ 0x3D
  1447  005D                     	ds	1
  1448  005E                     ___fldiv@aexp:
  1449                           
  1450                           ; 1 bytes @ 0x3E
  1451  005E                     	ds	1
  1452  005F                     ??_ADC_channel1:
  1453  005F                     ??_ADC_channel2:	
  1454                           ; 1 bytes @ 0x3F
  1455                           
  1456                           
  1457                           ; 1 bytes @ 0x3F
  1458  005F                     	ds	2
  1459  0061                     ??___fladd:
  1460  0061                     ___fltol@sign1:	
  1461                           ; 1 bytes @ 0x41
  1462                           
  1463                           
  1464                           ; 1 bytes @ 0x41
  1465  0061                     	ds	1
  1466  0062                     ___fltol@exp1:
  1467                           
  1468                           ; 1 bytes @ 0x42
  1469  0062                     	ds	7
  1470  0069                     ___fladd@signs:
  1471                           
  1472                           ; 1 bytes @ 0x49
  1473  0069                     	ds	1
  1474  006A                     ___fladd@aexp:
  1475                           
  1476                           ; 1 bytes @ 0x4A
  1477  006A                     	ds	1
  1478  006B                     ___fladd@bexp:
  1479                           
  1480                           ; 1 bytes @ 0x4B
  1481  006B                     	ds	1
  1482  006C                     ___fladd@grs:
  1483                           
  1484                           ; 1 bytes @ 0x4C
  1485  006C                     	ds	1
  1486  006D                     ??_float_to_string:
  1487                           
  1488                           ; 1 bytes @ 0x4D
  1489  006D                     	ds	1
  1490  006E                     ??_main:
  1491                           
  1492                           ; 1 bytes @ 0x4E
  1493  006E                     	ds	2
  1494                           
  1495                           	psect	maintext
  1496  1B13                     __pmaintext:	
  1497 ;;
  1498 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1499 ;;
  1500 ;; *************** function _main *****************
  1501 ;; Defined at:
  1502 ;;		line 111 in file "pseudocodigo_lab3.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;		None
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;		None
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : B00/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1516 ;;      Params:         0       0       0       0       0
  1517 ;;      Locals:         0       0       0       0       0
  1518 ;;      Temps:          0       2       0       0       0
  1519 ;;      Totals:         0       2       0       0       0
  1520 ;;Total ram usage:        2 bytes
  1521 ;; Hardware stack levels required when called:    6
  1522 ;; This function calls:
  1523 ;;		_ADC_channel1
  1524 ;;		_ADC_channel2
  1525 ;;		_Lcd_Init
  1526 ;;		_Lcd_Set_Cursor
  1527 ;;		_Lcd_Write_String
  1528 ;;		_USART_Init
  1529 ;;		_USART_Init_BaudRate
  1530 ;;		_float_to_string
  1531 ;;		_setup
  1532 ;;		_titulos_LCD
  1533 ;; This function is called by:
  1534 ;;		Startup code after reset
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           
  1539                           ;psect for function _main
  1540  1B13                     _main:
  1541  1B13                     l4839:	
  1542                           ;incstack = 0
  1543                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1544                           
  1545                           
  1546                           ;pseudocodigo_lab3.c: 112:     setup();
  1547  1B13  160A  118A  2005  160A  158A  	fcall	_setup
  1548  1B18                     l4841:
  1549                           
  1550                           ;pseudocodigo_lab3.c: 113:     USART_Init();
  1551  1B18  120A  118A  2061  160A  158A  	fcall	_USART_Init
  1552  1B1D                     l4843:
  1553                           
  1554                           ;pseudocodigo_lab3.c: 115:     USART_Init_BaudRate();
  1555  1B1D  160A  118A  2000  160A  158A  	fcall	_USART_Init_BaudRate
  1556  1B22                     l4845:
  1557                           
  1558                           ;pseudocodigo_lab3.c: 116:     Lcd_Init();
  1559  1B22  160A  158A  2116  160A  158A  	fcall	_Lcd_Init
  1560  1B27                     l4847:
  1561                           
  1562                           ;pseudocodigo_lab3.c: 117:     titulos_LCD();
  1563  1B27  160A  158A  244A  160A  158A  	fcall	_titulos_LCD
  1564  1B2C                     l4849:
  1565                           
  1566                           ;pseudocodigo_lab3.c: 125:         ADC_channel1();
  1567  1B2C  160A  158A  24B4  160A  158A  	fcall	_ADC_channel1
  1568  1B31                     l4851:
  1569                           
  1570                           ;pseudocodigo_lab3.c: 126:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1571  1B31  3003               	movlw	3
  1572  1B32  1283               	bcf	3,5	;RP0=0, select bank0
  1573  1B33  1303               	bcf	3,6	;RP1=0, select bank0
  1574  1B34  00EF               	movwf	??_main+1
  1575  1B35  3097               	movlw	151
  1576  1B36  00EE               	movwf	??_main
  1577  1B37                     u7997:
  1578  1B37  0BEE               	decfsz	??_main,f
  1579  1B38  2B37               	goto	u7997
  1580  1B39  0BEF               	decfsz	??_main+1,f
  1581  1B3A  2B37               	goto	u7997
  1582  1B3B                     l4853:
  1583                           
  1584                           ;pseudocodigo_lab3.c: 127:         ADC_channel2();
  1585  1B3B  160A  118A  2021  160A  158A  	fcall	_ADC_channel2
  1586  1B40                     l4855:
  1587                           
  1588                           ;pseudocodigo_lab3.c: 128:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1589  1B40  3003               	movlw	3
  1590  1B41  1283               	bcf	3,5	;RP0=0, select bank0
  1591  1B42  1303               	bcf	3,6	;RP1=0, select bank0
  1592  1B43  00EF               	movwf	??_main+1
  1593  1B44  3097               	movlw	151
  1594  1B45  00EE               	movwf	??_main
  1595  1B46                     u8007:
  1596  1B46  0BEE               	decfsz	??_main,f
  1597  1B47  2B46               	goto	u8007
  1598  1B48  0BEF               	decfsz	??_main+1,f
  1599  1B49  2B46               	goto	u8007
  1600  1B4A                     l4857:
  1601                           
  1602                           ;pseudocodigo_lab3.c: 130:         float_to_string();
  1603  1B4A  120A  118A  213B  160A  158A  	fcall	_float_to_string
  1604  1B4F                     l4859:
  1605                           
  1606                           ;pseudocodigo_lab3.c: 134:         Lcd_Set_Cursor(2,1);
  1607  1B4F  01F7               	clrf	Lcd_Set_Cursor@b
  1608  1B50  0AF7               	incf	Lcd_Set_Cursor@b,f
  1609  1B51  3002               	movlw	2
  1610  1B52  120A  118A  2172  160A  158A  	fcall	_Lcd_Set_Cursor
  1611  1B57                     l4861:
  1612                           
  1613                           ;pseudocodigo_lab3.c: 135:         Lcd_Write_String(data1);
  1614  1B57  30DE               	movlw	(low (_data1| 0))& (0+255)
  1615  1B58  00F6               	movwf	Lcd_Write_String@a
  1616  1B59  3000               	movlw	0
  1617  1B5A  00F7               	movwf	Lcd_Write_String@a+1
  1618  1B5B  160A  158A  20D0  160A  158A  	fcall	_Lcd_Write_String
  1619  1B60                     l4863:
  1620                           
  1621                           ;pseudocodigo_lab3.c: 136:         Lcd_Set_Cursor(2,7);
  1622  1B60  3007               	movlw	7
  1623  1B61  1283               	bcf	3,5	;RP0=0, select bank0
  1624  1B62  1303               	bcf	3,6	;RP1=0, select bank0
  1625  1B63  00EE               	movwf	??_main
  1626  1B64  086E               	movf	??_main,w
  1627  1B65  00F7               	movwf	Lcd_Set_Cursor@b
  1628  1B66  3002               	movlw	2
  1629  1B67  120A  118A  2172  160A  158A  	fcall	_Lcd_Set_Cursor
  1630  1B6C                     l4865:
  1631                           
  1632                           ;pseudocodigo_lab3.c: 137:         Lcd_Write_String(data2);
  1633  1B6C  3090               	movlw	(low (_data2| (0+256)))& (0+255)
  1634  1B6D  00F6               	movwf	Lcd_Write_String@a
  1635  1B6E  3001               	movlw	1
  1636  1B6F  00F7               	movwf	Lcd_Write_String@a+1
  1637  1B70  160A  158A  20D0  160A  158A  	fcall	_Lcd_Write_String
  1638  1B75  2B2C               	goto	l4849
  1639  1B76  120A  118A  2808   	ljmp	start
  1640  1B79                     __end_of_main:
  1641                           
  1642                           	psect	text1
  1643  1C4A                     __ptext1:	
  1644 ;; *************** function _titulos_LCD *****************
  1645 ;; Defined at:
  1646 ;;		line 151 in file "pseudocodigo_lab3.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;		None
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;		None
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1660 ;;      Params:         0       0       0       0       0
  1661 ;;      Locals:         0       0       0       0       0
  1662 ;;      Temps:          0       1       0       0       0
  1663 ;;      Totals:         0       1       0       0       0
  1664 ;;Total ram usage:        1 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; Hardware stack levels required when called:    4
  1667 ;; This function calls:
  1668 ;;		_Lcd_Set_Cursor
  1669 ;;		_Lcd_Write_String
  1670 ;; This function is called by:
  1671 ;;		_main
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           
  1676                           ;psect for function _titulos_LCD
  1677  1C4A                     _titulos_LCD:
  1678  1C4A                     l4803:	
  1679                           ;incstack = 0
  1680                           ; Regs used in _titulos_LCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1681                           
  1682                           
  1683                           ;pseudocodigo_lab3.c: 153:         Lcd_Set_Cursor(1,2);
  1684  1C4A  3002               	movlw	2
  1685  1C4B  1283               	bcf	3,5	;RP0=0, select bank0
  1686  1C4C  1303               	bcf	3,6	;RP1=0, select bank0
  1687  1C4D  00A5               	movwf	??_titulos_LCD
  1688  1C4E  0825               	movf	??_titulos_LCD,w
  1689  1C4F  00F7               	movwf	Lcd_Set_Cursor@b
  1690  1C50  3001               	movlw	1
  1691  1C51  120A  118A  2172  160A  158A  	fcall	_Lcd_Set_Cursor
  1692  1C56                     l4805:
  1693                           
  1694                           ;pseudocodigo_lab3.c: 154:         Lcd_Write_String("S1:");
  1695  1C56  3097               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1696  1C57  00F6               	movwf	Lcd_Write_String@a
  1697  1C58  3080               	movlw	128
  1698  1C59  00F7               	movwf	Lcd_Write_String@a+1
  1699  1C5A  160A  158A  20D0  160A  158A  	fcall	_Lcd_Write_String
  1700  1C5F                     l4807:
  1701                           
  1702                           ;pseudocodigo_lab3.c: 155:         Lcd_Set_Cursor(1,8);
  1703  1C5F  3008               	movlw	8
  1704  1C60  1283               	bcf	3,5	;RP0=0, select bank0
  1705  1C61  1303               	bcf	3,6	;RP1=0, select bank0
  1706  1C62  00A5               	movwf	??_titulos_LCD
  1707  1C63  0825               	movf	??_titulos_LCD,w
  1708  1C64  00F7               	movwf	Lcd_Set_Cursor@b
  1709  1C65  3001               	movlw	1
  1710  1C66  120A  118A  2172  160A  158A  	fcall	_Lcd_Set_Cursor
  1711                           
  1712                           ;pseudocodigo_lab3.c: 156:         Lcd_Write_String("S2:");
  1713  1C6B  309B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1714  1C6C  00F6               	movwf	Lcd_Write_String@a
  1715  1C6D  3080               	movlw	128
  1716  1C6E  00F7               	movwf	Lcd_Write_String@a+1
  1717  1C6F  160A  158A  20D0  160A  158A  	fcall	_Lcd_Write_String
  1718  1C74                     l4809:
  1719                           
  1720                           ;pseudocodigo_lab3.c: 157:         Lcd_Set_Cursor(1,14);
  1721  1C74  300E               	movlw	14
  1722  1C75  1283               	bcf	3,5	;RP0=0, select bank0
  1723  1C76  1303               	bcf	3,6	;RP1=0, select bank0
  1724  1C77  00A5               	movwf	??_titulos_LCD
  1725  1C78  0825               	movf	??_titulos_LCD,w
  1726  1C79  00F7               	movwf	Lcd_Set_Cursor@b
  1727  1C7A  3001               	movlw	1
  1728  1C7B  120A  118A  2172  160A  158A  	fcall	_Lcd_Set_Cursor
  1729  1C80                     l4811:
  1730                           
  1731                           ;pseudocodigo_lab3.c: 158:         Lcd_Write_String("S3:");
  1732  1C80  309F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1733  1C81  00F6               	movwf	Lcd_Write_String@a
  1734  1C82  3080               	movlw	128
  1735  1C83  00F7               	movwf	Lcd_Write_String@a+1
  1736  1C84  160A  158A  20D0  160A  158A  	fcall	_Lcd_Write_String
  1737                           
  1738                           ;pseudocodigo_lab3.c: 159:         Lcd_Set_Cursor(2,5);
  1739  1C89  3005               	movlw	5
  1740  1C8A  1283               	bcf	3,5	;RP0=0, select bank0
  1741  1C8B  1303               	bcf	3,6	;RP1=0, select bank0
  1742  1C8C  00A5               	movwf	??_titulos_LCD
  1743  1C8D  0825               	movf	??_titulos_LCD,w
  1744  1C8E  00F7               	movwf	Lcd_Set_Cursor@b
  1745  1C8F  3002               	movlw	2
  1746  1C90  120A  118A  2172  160A  158A  	fcall	_Lcd_Set_Cursor
  1747  1C95                     l4813:
  1748                           
  1749                           ;pseudocodigo_lab3.c: 160:         Lcd_Write_String("v");
  1750  1C95  30A3               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1751  1C96  00F6               	movwf	Lcd_Write_String@a
  1752  1C97  3080               	movlw	128
  1753  1C98  00F7               	movwf	Lcd_Write_String@a+1
  1754  1C99  160A  158A  20D0  160A  158A  	fcall	_Lcd_Write_String
  1755  1C9E                     l4815:
  1756                           
  1757                           ;pseudocodigo_lab3.c: 161:         Lcd_Set_Cursor(2,12);
  1758  1C9E  300C               	movlw	12
  1759  1C9F  1283               	bcf	3,5	;RP0=0, select bank0
  1760  1CA0  1303               	bcf	3,6	;RP1=0, select bank0
  1761  1CA1  00A5               	movwf	??_titulos_LCD
  1762  1CA2  0825               	movf	??_titulos_LCD,w
  1763  1CA3  00F7               	movwf	Lcd_Set_Cursor@b
  1764  1CA4  3002               	movlw	2
  1765  1CA5  120A  118A  2172  160A  158A  	fcall	_Lcd_Set_Cursor
  1766                           
  1767                           ;pseudocodigo_lab3.c: 162:         Lcd_Write_String("v");
  1768  1CAA  30A3               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1769  1CAB  00F6               	movwf	Lcd_Write_String@a
  1770  1CAC  3080               	movlw	128
  1771  1CAD  00F7               	movwf	Lcd_Write_String@a+1
  1772  1CAE  160A  158A  20D0  160A  158A  	fcall	_Lcd_Write_String
  1773  1CB3                     l96:
  1774  1CB3  0008               	return
  1775  1CB4                     __end_of_titulos_LCD:
  1776                           
  1777                           	psect	text2
  1778  18D0                     __ptext2:	
  1779 ;; *************** function _Lcd_Write_String *****************
  1780 ;; Defined at:
  1781 ;;		line 70 in file "LCD.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  a               2    6[COMMON] PTR unsigned char 
  1784 ;;		 -> STR_5(2), STR_4(2), STR_3(4), STR_2(4), 
  1785 ;;		 -> STR_1(4), data2(16), data1(16), 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  i               2    3[BANK0 ] int 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1797 ;;      Params:         2       0       0       0       0
  1798 ;;      Locals:         0       2       0       0       0
  1799 ;;      Temps:          0       3       0       0       0
  1800 ;;      Totals:         2       5       0       0       0
  1801 ;;Total ram usage:        7 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    3
  1804 ;; This function calls:
  1805 ;;		_Lcd_Write_Char
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;;		_titulos_LCD
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function _Lcd_Write_String
  1814  18D0                     _Lcd_Write_String:
  1815  18D0                     l4521:	
  1816                           ;incstack = 0
  1817                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1818                           
  1819                           
  1820                           ;LCD.c: 71:  int i;;LCD.c: 72:  for(i=0;a[i]!='\0';i++)
  1821  18D0  1283               	bcf	3,5	;RP0=0, select bank0
  1822  18D1  1303               	bcf	3,6	;RP1=0, select bank0
  1823  18D2  01A3               	clrf	Lcd_Write_String@i
  1824  18D3  01A4               	clrf	Lcd_Write_String@i+1
  1825  18D4  28F9               	goto	l4527
  1826  18D5                     l4523:
  1827                           
  1828                           ;LCD.c: 73:     Lcd_Write_Char(a[i]);
  1829  18D5  0823               	movf	Lcd_Write_String@i,w
  1830  18D6  0776               	addwf	Lcd_Write_String@a,w
  1831  18D7  00A1               	movwf	??_Lcd_Write_String+1
  1832  18D8  0877               	movf	Lcd_Write_String@a+1,w
  1833  18D9  00A0               	movwf	??_Lcd_Write_String
  1834  18DA  1803               	skipnc
  1835  18DB  0AA0               	incf	??_Lcd_Write_String,f
  1836  18DC  1FA3               	btfss	Lcd_Write_String@i,7
  1837  18DD  28DF               	goto	u7470
  1838  18DE  03A0               	decf	??_Lcd_Write_String,f
  1839  18DF                     u7470:
  1840  18DF  1283               	bcf	3,5	;RP0=0, select bank0
  1841  18E0  1303               	bcf	3,6	;RP1=0, select bank0
  1842  18E1  0820               	movf	??_Lcd_Write_String,w
  1843  18E2  00A2               	movwf	??_Lcd_Write_String+2
  1844  18E3  0822               	movf	??_Lcd_Write_String+2,w
  1845  18E4  00FF               	movwf	btemp+1
  1846  18E5  0821               	movf	??_Lcd_Write_String+1,w
  1847  18E6  0084               	movwf	4
  1848  18E7  160A  158A  2000  160A  158A  	fcall	stringtab
  1849  18EC  120A  118A  200D  160A  158A  	fcall	_Lcd_Write_Char
  1850  18F1                     l4525:
  1851  18F1  3001               	movlw	1
  1852  18F2  1283               	bcf	3,5	;RP0=0, select bank0
  1853  18F3  1303               	bcf	3,6	;RP1=0, select bank0
  1854  18F4  07A3               	addwf	Lcd_Write_String@i,f
  1855  18F5  1803               	skipnc
  1856  18F6  0AA4               	incf	Lcd_Write_String@i+1,f
  1857  18F7  3000               	movlw	0
  1858  18F8  07A4               	addwf	Lcd_Write_String@i+1,f
  1859  18F9                     l4527:
  1860  18F9  0823               	movf	Lcd_Write_String@i,w
  1861  18FA  0776               	addwf	Lcd_Write_String@a,w
  1862  18FB  00A1               	movwf	??_Lcd_Write_String+1
  1863  18FC  0877               	movf	Lcd_Write_String@a+1,w
  1864  18FD  00A0               	movwf	??_Lcd_Write_String
  1865  18FE  1803               	skipnc
  1866  18FF  0AA0               	incf	??_Lcd_Write_String,f
  1867  1900  1FA3               	btfss	Lcd_Write_String@i,7
  1868  1901  2903               	goto	u7480
  1869  1902  03A0               	decf	??_Lcd_Write_String,f
  1870  1903                     u7480:
  1871  1903  1283               	bcf	3,5	;RP0=0, select bank0
  1872  1904  1303               	bcf	3,6	;RP1=0, select bank0
  1873  1905  0820               	movf	??_Lcd_Write_String,w
  1874  1906  00A2               	movwf	??_Lcd_Write_String+2
  1875  1907  0822               	movf	??_Lcd_Write_String+2,w
  1876  1908  00FF               	movwf	btemp+1
  1877  1909  0821               	movf	??_Lcd_Write_String+1,w
  1878  190A  0084               	movwf	4
  1879  190B  160A  158A  2000  160A  158A  	fcall	stringtab
  1880  1910  3A00               	xorlw	0
  1881  1911  1D03               	skipz
  1882  1912  2914               	goto	u7491
  1883  1913  2915               	goto	u7490
  1884  1914                     u7491:
  1885  1914  28D5               	goto	l4523
  1886  1915                     u7490:
  1887  1915                     l167:
  1888  1915  0008               	return
  1889  1916                     __end_of_Lcd_Write_String:
  1890                           
  1891                           	psect	text3
  1892  000D                     __ptext3:	
  1893 ;; *************** function _Lcd_Write_Char *****************
  1894 ;; Defined at:
  1895 ;;		line 61 in file "LCD.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  a               1    wreg     unsigned char 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  a               1    5[COMMON] unsigned char 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, status,2, status,0, pclath, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1909 ;;      Params:         0       0       0       0       0
  1910 ;;      Locals:         1       0       0       0       0
  1911 ;;      Temps:          1       0       0       0       0
  1912 ;;      Totals:         2       0       0       0       0
  1913 ;;Total ram usage:        2 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    2
  1916 ;; This function calls:
  1917 ;;		_Lcd_Port
  1918 ;; This function is called by:
  1919 ;;		_Lcd_Write_String
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           
  1924                           ;psect for function _Lcd_Write_Char
  1925  000D                     _Lcd_Write_Char:
  1926                           
  1927                           ;incstack = 0
  1928                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1929                           ;Lcd_Write_Char@a stored from wreg
  1930  000D  00F5               	movwf	Lcd_Write_Char@a
  1931  000E                     l4203:
  1932                           
  1933                           ;LCD.c: 62:    PORTEbits.RE0 = 1;
  1934  000E  1283               	bcf	3,5	;RP0=0, select bank0
  1935  000F  1303               	bcf	3,6	;RP1=0, select bank0
  1936  0010  1409               	bsf	9,0	;volatile
  1937  0011                     l4205:
  1938                           
  1939                           ;LCD.c: 63:    Lcd_Port(a);
  1940  0011  0875               	movf	Lcd_Write_Char@a,w
  1941  0012  120A  118A  205B  120A  118A  	fcall	_Lcd_Port
  1942  0017                     l4207:
  1943                           
  1944                           ;LCD.c: 64:    PORTEbits.RE2 = 1;
  1945  0017  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0018  1303               	bcf	3,6	;RP1=0, select bank0
  1947  0019  1509               	bsf	9,2	;volatile
  1948  001A                     l4209:
  1949                           
  1950                           ;LCD.c: 65:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1951  001A  301A               	movlw	26
  1952  001B  00F4               	movwf	??_Lcd_Write_Char
  1953  001C                     u8017:
  1954  001C  0BF4               	decfsz	??_Lcd_Write_Char,f
  1955  001D  281C               	goto	u8017
  1956  001E  0000               	nop
  1957  001F                     l4211:
  1958                           
  1959                           ;LCD.c: 66:    PORTEbits.RE2 = 0;
  1960  001F  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0020  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0021  1109               	bcf	9,2	;volatile
  1963  0022                     l161:
  1964  0022  0008               	return
  1965  0023                     __end_of_Lcd_Write_Char:
  1966                           
  1967                           	psect	text4
  1968  0172                     __ptext4:	
  1969 ;; *************** function _Lcd_Set_Cursor *****************
  1970 ;; Defined at:
  1971 ;;		line 48 in file "LCD.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  a               1    wreg     unsigned char 
  1974 ;;  b               1    7[COMMON] unsigned char 
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;  a               1    1[BANK0 ] unsigned char 
  1977 ;;  temp            1    2[BANK0 ] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0, pclath, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1987 ;;      Params:         1       0       0       0       0
  1988 ;;      Locals:         0       2       0       0       0
  1989 ;;      Temps:          0       1       0       0       0
  1990 ;;      Totals:         1       3       0       0       0
  1991 ;;Total ram usage:        4 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    3
  1994 ;; This function calls:
  1995 ;;		_Lcd_Cmd
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;;		_titulos_LCD
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           
  2003                           ;psect for function _Lcd_Set_Cursor
  2004  0172                     _Lcd_Set_Cursor:
  2005                           
  2006                           ;incstack = 0
  2007                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2008                           ;Lcd_Set_Cursor@a stored from wreg
  2009  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0173  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0174  00A1               	movwf	Lcd_Set_Cursor@a
  2012  0175                     l4509:
  2013                           
  2014                           ;LCD.c: 49:  char temp;;LCD.c: 50:  if(a == 1){
  2015  0175  0321               	decf	Lcd_Set_Cursor@a,w
  2016  0176  1D03               	btfss	3,2
  2017  0177  2979               	goto	u7451
  2018  0178  297A               	goto	u7450
  2019  0179                     u7451:
  2020  0179  2986               	goto	l4515
  2021  017A                     u7450:
  2022  017A                     l4511:
  2023                           
  2024                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2025  017A  0877               	movf	Lcd_Set_Cursor@b,w
  2026  017B  3E7F               	addlw	127
  2027  017C  00A0               	movwf	??_Lcd_Set_Cursor
  2028  017D  0820               	movf	??_Lcd_Set_Cursor,w
  2029  017E  00A2               	movwf	Lcd_Set_Cursor@temp
  2030  017F                     l4513:
  2031                           
  2032                           ;LCD.c: 52:         Lcd_Cmd(temp);
  2033  017F  0822               	movf	Lcd_Set_Cursor@temp,w
  2034  0180  160A  158A  20B6  120A  118A  	fcall	_Lcd_Cmd
  2035                           
  2036                           ;LCD.c: 53:  }
  2037  0185  2997               	goto	l158
  2038  0186                     l4515:
  2039  0186  3002               	movlw	2
  2040  0187  0621               	xorwf	Lcd_Set_Cursor@a,w
  2041  0188  1D03               	btfss	3,2
  2042  0189  298B               	goto	u7461
  2043  018A  298C               	goto	u7460
  2044  018B                     u7461:
  2045  018B  2997               	goto	l158
  2046  018C                     u7460:
  2047  018C                     l4517:
  2048                           
  2049                           ;LCD.c: 55:   temp = 0xC0 + b - 1;
  2050  018C  0877               	movf	Lcd_Set_Cursor@b,w
  2051  018D  3EBF               	addlw	191
  2052  018E  00A0               	movwf	??_Lcd_Set_Cursor
  2053  018F  0820               	movf	??_Lcd_Set_Cursor,w
  2054  0190  00A2               	movwf	Lcd_Set_Cursor@temp
  2055  0191                     l4519:
  2056                           
  2057                           ;LCD.c: 56:   Lcd_Cmd(temp);
  2058  0191  0822               	movf	Lcd_Set_Cursor@temp,w
  2059  0192  160A  158A  20B6  120A  118A  	fcall	_Lcd_Cmd
  2060  0197                     l158:
  2061  0197  0008               	return
  2062  0198                     __end_of_Lcd_Set_Cursor:
  2063                           
  2064                           	psect	text5
  2065  1005                     __ptext5:	
  2066 ;; *************** function _setup *****************
  2067 ;; Defined at:
  2068 ;;		line 198 in file "pseudocodigo_lab3.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;		None
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2082 ;;      Params:         0       0       0       0       0
  2083 ;;      Locals:         0       0       0       0       0
  2084 ;;      Temps:          0       0       0       0       0
  2085 ;;      Totals:         0       0       0       0       0
  2086 ;;Total ram usage:        0 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    2
  2089 ;; This function calls:
  2090 ;;		_initOsc
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           
  2097                           ;psect for function _setup
  2098  1005                     _setup:
  2099  1005                     l3863:	
  2100                           ;incstack = 0
  2101                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2102                           
  2103                           
  2104                           ;pseudocodigo_lab3.c: 199:     initOsc(0b00000110);
  2105  1005  3006               	movlw	6
  2106  1006  160A  158A  22B7  160A  118A  	fcall	_initOsc
  2107  100B                     l3865:
  2108                           
  2109                           ;pseudocodigo_lab3.c: 200:     ANSEL = 0b00000011;
  2110  100B  3003               	movlw	3
  2111  100C  1683               	bsf	3,5	;RP0=1, select bank3
  2112  100D  1703               	bsf	3,6	;RP1=1, select bank3
  2113  100E  0088               	movwf	8	;volatile
  2114  100F                     l3867:
  2115                           
  2116                           ;pseudocodigo_lab3.c: 201:     ANSELH = 0;
  2117  100F  0189               	clrf	9	;volatile
  2118  1010                     l3869:
  2119                           
  2120                           ;pseudocodigo_lab3.c: 202:     TRISA = 0b00000011;
  2121  1010  3003               	movlw	3
  2122  1011  1683               	bsf	3,5	;RP0=1, select bank1
  2123  1012  1303               	bcf	3,6	;RP1=0, select bank1
  2124  1013  0085               	movwf	5	;volatile
  2125  1014                     l3871:
  2126                           
  2127                           ;pseudocodigo_lab3.c: 203:     TRISB = 0;
  2128  1014  0186               	clrf	6	;volatile
  2129  1015                     l3873:
  2130                           
  2131                           ;pseudocodigo_lab3.c: 204:     TRISCbits.TRISC6 = 0;
  2132  1015  1307               	bcf	7,6	;volatile
  2133  1016                     l3875:
  2134                           
  2135                           ;pseudocodigo_lab3.c: 205:     TRISCbits.TRISC7 = 1;
  2136  1016  1787               	bsf	7,7	;volatile
  2137  1017                     l3877:
  2138                           
  2139                           ;pseudocodigo_lab3.c: 206:     TRISD = 0;
  2140  1017  0188               	clrf	8	;volatile
  2141  1018                     l3879:
  2142                           
  2143                           ;pseudocodigo_lab3.c: 207:     TRISE = 0;
  2144  1018  0189               	clrf	9	;volatile
  2145  1019                     l3881:
  2146                           
  2147                           ;pseudocodigo_lab3.c: 208:     PORTA = 0;
  2148  1019  1283               	bcf	3,5	;RP0=0, select bank0
  2149  101A  1303               	bcf	3,6	;RP1=0, select bank0
  2150  101B  0185               	clrf	5	;volatile
  2151  101C                     l3883:
  2152                           
  2153                           ;pseudocodigo_lab3.c: 209:     PORTB = 0;
  2154  101C  0186               	clrf	6	;volatile
  2155  101D                     l3885:
  2156                           
  2157                           ;pseudocodigo_lab3.c: 210:     PORTC = 0;
  2158  101D  0187               	clrf	7	;volatile
  2159  101E                     l3887:
  2160                           
  2161                           ;pseudocodigo_lab3.c: 211:     PORTD = 0;
  2162  101E  0188               	clrf	8	;volatile
  2163  101F                     l3889:
  2164                           
  2165                           ;pseudocodigo_lab3.c: 212:     PORTE = 0;
  2166  101F  0189               	clrf	9	;volatile
  2167  1020                     l114:
  2168  1020  0008               	return
  2169  1021                     __end_of_setup:
  2170                           
  2171                           	psect	text6
  2172  1AB7                     __ptext6:	
  2173 ;; *************** function _initOsc *****************
  2174 ;; Defined at:
  2175 ;;		line 3 in file "Oscilador.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  IRCF            1    wreg     unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  IRCF            1    5[COMMON] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2189 ;;      Params:         0       0       0       0       0
  2190 ;;      Locals:         1       0       0       0       0
  2191 ;;      Temps:          2       0       0       0       0
  2192 ;;      Totals:         3       0       0       0       0
  2193 ;;Total ram usage:        3 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    1
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_setup
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           
  2204                           ;psect for function _initOsc
  2205  1AB7                     _initOsc:
  2206                           
  2207                           ;incstack = 0
  2208                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  2209                           ;initOsc@IRCF stored from wreg
  2210  1AB7  00F5               	movwf	initOsc@IRCF
  2211  1AB8                     l3711:
  2212                           
  2213                           ;Oscilador.c: 5:     switch(IRCF){
  2214  1AB8  2AEF               	goto	l3715
  2215  1AB9                     l120:	
  2216                           ;Oscilador.c: 6:         case 0:
  2217                           
  2218                           
  2219                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  2220  1AB9  1683               	bsf	3,5	;RP0=1, select bank1
  2221  1ABA  1303               	bcf	3,6	;RP1=0, select bank1
  2222  1ABB  130F               	bcf	15,6	;volatile
  2223                           
  2224                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  2225  1ABC  128F               	bcf	15,5	;volatile
  2226                           
  2227                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  2228  1ABD  120F               	bcf	15,4	;volatile
  2229                           
  2230                           ;Oscilador.c: 10:             break;
  2231  1ABE  2B11               	goto	l121
  2232  1ABF                     l122:	
  2233                           ;Oscilador.c: 11:          case 1:
  2234                           
  2235                           
  2236                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  2237  1ABF  1683               	bsf	3,5	;RP0=1, select bank1
  2238  1AC0  1303               	bcf	3,6	;RP1=0, select bank1
  2239  1AC1  130F               	bcf	15,6	;volatile
  2240                           
  2241                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  2242  1AC2  128F               	bcf	15,5	;volatile
  2243                           
  2244                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  2245  1AC3  160F               	bsf	15,4	;volatile
  2246                           
  2247                           ;Oscilador.c: 15:             break;
  2248  1AC4  2B11               	goto	l121
  2249  1AC5                     l123:	
  2250                           ;Oscilador.c: 16:         case 2:
  2251                           
  2252                           
  2253                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  2254  1AC5  1683               	bsf	3,5	;RP0=1, select bank1
  2255  1AC6  1303               	bcf	3,6	;RP1=0, select bank1
  2256  1AC7  130F               	bcf	15,6	;volatile
  2257                           
  2258                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  2259  1AC8  168F               	bsf	15,5	;volatile
  2260                           
  2261                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  2262  1AC9  120F               	bcf	15,4	;volatile
  2263                           
  2264                           ;Oscilador.c: 20:             break;
  2265  1ACA  2B11               	goto	l121
  2266  1ACB                     l124:	
  2267                           ;Oscilador.c: 21:         case 3:
  2268                           
  2269                           
  2270                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  2271  1ACB  1683               	bsf	3,5	;RP0=1, select bank1
  2272  1ACC  1303               	bcf	3,6	;RP1=0, select bank1
  2273  1ACD  130F               	bcf	15,6	;volatile
  2274                           
  2275                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  2276  1ACE  168F               	bsf	15,5	;volatile
  2277                           
  2278                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  2279  1ACF  160F               	bsf	15,4	;volatile
  2280                           
  2281                           ;Oscilador.c: 25:             break;
  2282  1AD0  2B11               	goto	l121
  2283  1AD1                     l125:	
  2284                           ;Oscilador.c: 26:         case 4:
  2285                           
  2286                           
  2287                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  2288  1AD1  1683               	bsf	3,5	;RP0=1, select bank1
  2289  1AD2  1303               	bcf	3,6	;RP1=0, select bank1
  2290  1AD3  170F               	bsf	15,6	;volatile
  2291                           
  2292                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  2293  1AD4  128F               	bcf	15,5	;volatile
  2294                           
  2295                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  2296  1AD5  120F               	bcf	15,4	;volatile
  2297                           
  2298                           ;Oscilador.c: 30:             break;
  2299  1AD6  2B11               	goto	l121
  2300  1AD7                     l126:	
  2301                           ;Oscilador.c: 31:         case 5:
  2302                           
  2303                           
  2304                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  2305  1AD7  1683               	bsf	3,5	;RP0=1, select bank1
  2306  1AD8  1303               	bcf	3,6	;RP1=0, select bank1
  2307  1AD9  170F               	bsf	15,6	;volatile
  2308                           
  2309                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  2310  1ADA  128F               	bcf	15,5	;volatile
  2311                           
  2312                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  2313  1ADB  160F               	bsf	15,4	;volatile
  2314                           
  2315                           ;Oscilador.c: 35:             break;
  2316  1ADC  2B11               	goto	l121
  2317  1ADD                     l127:	
  2318                           ;Oscilador.c: 36:         case 6:
  2319                           
  2320                           
  2321                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  2322  1ADD  1683               	bsf	3,5	;RP0=1, select bank1
  2323  1ADE  1303               	bcf	3,6	;RP1=0, select bank1
  2324  1ADF  170F               	bsf	15,6	;volatile
  2325                           
  2326                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  2327  1AE0  168F               	bsf	15,5	;volatile
  2328                           
  2329                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  2330  1AE1  120F               	bcf	15,4	;volatile
  2331                           
  2332                           ;Oscilador.c: 40:             break;
  2333  1AE2  2B11               	goto	l121
  2334  1AE3                     l128:	
  2335                           ;Oscilador.c: 41:         case 7:
  2336                           
  2337                           
  2338                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  2339  1AE3  1683               	bsf	3,5	;RP0=1, select bank1
  2340  1AE4  1303               	bcf	3,6	;RP1=0, select bank1
  2341  1AE5  170F               	bsf	15,6	;volatile
  2342                           
  2343                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  2344  1AE6  168F               	bsf	15,5	;volatile
  2345                           
  2346                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  2347  1AE7  160F               	bsf	15,4	;volatile
  2348                           
  2349                           ;Oscilador.c: 45:             break;
  2350  1AE8  2B11               	goto	l121
  2351  1AE9                     l129:	
  2352                           ;Oscilador.c: 46:         default:
  2353                           
  2354                           
  2355                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  2356  1AE9  1683               	bsf	3,5	;RP0=1, select bank1
  2357  1AEA  1303               	bcf	3,6	;RP1=0, select bank1
  2358  1AEB  170F               	bsf	15,6	;volatile
  2359                           
  2360                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  2361  1AEC  168F               	bsf	15,5	;volatile
  2362                           
  2363                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  2364  1AED  120F               	bcf	15,4	;volatile
  2365                           
  2366                           ;Oscilador.c: 50:             break;
  2367  1AEE  2B11               	goto	l121
  2368  1AEF                     l3715:
  2369  1AEF  0875               	movf	initOsc@IRCF,w
  2370  1AF0  00F3               	movwf	??_initOsc
  2371  1AF1  01F4               	clrf	??_initOsc+1
  2372                           
  2373                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2374                           ; Switch size 1, requested type "simple"
  2375                           ; Number of cases is 1, Range of values is 0 to 0
  2376                           ; switch strategies available:
  2377                           ; Name         Instructions Cycles
  2378                           ; simple_byte            4     3 (average)
  2379                           ; direct_byte           11     8 (fixed)
  2380                           ; jumptable            260     6 (fixed)
  2381                           ;	Chosen strategy is simple_byte
  2382  1AF2  0874               	movf	??_initOsc+1,w
  2383  1AF3  3A00               	xorlw	0	; case 0
  2384  1AF4  1903               	skipnz
  2385  1AF5  2AF7               	goto	l4933
  2386  1AF6  2AE9               	goto	l129
  2387  1AF7                     l4933:
  2388                           
  2389                           ; Switch size 1, requested type "simple"
  2390                           ; Number of cases is 8, Range of values is 0 to 7
  2391                           ; switch strategies available:
  2392                           ; Name         Instructions Cycles
  2393                           ; simple_byte           25    13 (average)
  2394                           ; direct_byte           32     8 (fixed)
  2395                           ; jumptable            260     6 (fixed)
  2396                           ;	Chosen strategy is simple_byte
  2397  1AF7  0873               	movf	??_initOsc,w
  2398  1AF8  3A00               	xorlw	0	; case 0
  2399  1AF9  1903               	skipnz
  2400  1AFA  2AB9               	goto	l120
  2401  1AFB  3A01               	xorlw	1	; case 1
  2402  1AFC  1903               	skipnz
  2403  1AFD  2ABF               	goto	l122
  2404  1AFE  3A03               	xorlw	3	; case 2
  2405  1AFF  1903               	skipnz
  2406  1B00  2AC5               	goto	l123
  2407  1B01  3A01               	xorlw	1	; case 3
  2408  1B02  1903               	skipnz
  2409  1B03  2ACB               	goto	l124
  2410  1B04  3A07               	xorlw	7	; case 4
  2411  1B05  1903               	skipnz
  2412  1B06  2AD1               	goto	l125
  2413  1B07  3A01               	xorlw	1	; case 5
  2414  1B08  1903               	skipnz
  2415  1B09  2AD7               	goto	l126
  2416  1B0A  3A03               	xorlw	3	; case 6
  2417  1B0B  1903               	skipnz
  2418  1B0C  2ADD               	goto	l127
  2419  1B0D  3A01               	xorlw	1	; case 7
  2420  1B0E  1903               	skipnz
  2421  1B0F  2AE3               	goto	l128
  2422  1B10  2AE9               	goto	l129
  2423  1B11                     l121:
  2424                           
  2425                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  2426  1B11  140F               	bsf	15,0	;volatile
  2427  1B12                     l130:
  2428  1B12  0008               	return
  2429  1B13                     __end_of_initOsc:
  2430                           
  2431                           	psect	text7
  2432  013B                     __ptext7:	
  2433 ;; *************** function _float_to_string *****************
  2434 ;; Defined at:
  2435 ;;		line 183 in file "pseudocodigo_lab3.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;		None
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;		None
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2449 ;;      Params:         0       0       0       0       0
  2450 ;;      Locals:         0       0       0       0       0
  2451 ;;      Temps:          0       1       0       0       0
  2452 ;;      Totals:         0       1       0       0       0
  2453 ;;Total ram usage:        1 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:    5
  2456 ;; This function calls:
  2457 ;;		_sprintf
  2458 ;; This function is called by:
  2459 ;;		_main
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           
  2464                           ;psect for function _float_to_string
  2465  013B                     _float_to_string:
  2466  013B                     l4837:	
  2467                           ;incstack = 0
  2468                           ; Regs used in _float_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2469                           
  2470                           
  2471                           ;pseudocodigo_lab3.c: 184:     sprintf(data2, "%1.2f",S1_val);
  2472  013B  3090               	movlw	(low (_data2| (0+256)))& (0+255)
  2473  013C  1683               	bsf	3,5	;RP0=1, select bank1
  2474  013D  1303               	bcf	3,6	;RP1=0, select bank1
  2475  013E  00A8               	movwf	sprintf@sp^(0+128)
  2476  013F  3001               	movlw	1
  2477  0140  00A9               	movwf	(sprintf@sp+1)^(0+128)
  2478  0141  3091               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2479  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2480  0143  1303               	bcf	3,6	;RP1=0, select bank0
  2481  0144  00ED               	movwf	??_float_to_string
  2482  0145  086D               	movf	??_float_to_string,w
  2483  0146  1683               	bsf	3,5	;RP0=1, select bank1
  2484  0147  1303               	bcf	3,6	;RP1=0, select bank1
  2485  0148  00AA               	movwf	sprintf@f^(0+128)
  2486  0149  0855               	movf	(_S1_val+3)^(0+128),w
  2487  014A  00AE               	movwf	((?_sprintf+3)^(0+128)+3)
  2488  014B  0854               	movf	(_S1_val+2)^(0+128),w
  2489  014C  00AD               	movwf	((?_sprintf+2)^(0+128)+3)
  2490  014D  0853               	movf	(_S1_val+1)^(0+128),w
  2491  014E  00AC               	movwf	((?_sprintf+1)^(0+128)+3)
  2492  014F  0852               	movf	_S1_val^(0+128),w
  2493  0150  00AB               	movwf	(?_sprintf^(0+128)+3)
  2494  0151  160A  118A  24F9  120A  118A  	fcall	_sprintf
  2495                           
  2496                           ;pseudocodigo_lab3.c: 185:     sprintf(data1, "%1.2f", S2_val);
  2497  0156  30DE               	movlw	(low (_data1| 0))& (0+255)
  2498  0157  1683               	bsf	3,5	;RP0=1, select bank1
  2499  0158  1303               	bcf	3,6	;RP1=0, select bank1
  2500  0159  00A8               	movwf	sprintf@sp^(0+128)
  2501  015A  3000               	movlw	0
  2502  015B  00A9               	movwf	(sprintf@sp+1)^(0+128)
  2503  015C  3091               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2504  015D  1283               	bcf	3,5	;RP0=0, select bank0
  2505  015E  1303               	bcf	3,6	;RP1=0, select bank0
  2506  015F  00ED               	movwf	??_float_to_string
  2507  0160  086D               	movf	??_float_to_string,w
  2508  0161  1683               	bsf	3,5	;RP0=1, select bank1
  2509  0162  1303               	bcf	3,6	;RP1=0, select bank1
  2510  0163  00AA               	movwf	sprintf@f^(0+128)
  2511  0164  0851               	movf	(_S2_val+3)^(0+128),w
  2512  0165  00AE               	movwf	((?_sprintf+3)^(0+128)+3)
  2513  0166  0850               	movf	(_S2_val+2)^(0+128),w
  2514  0167  00AD               	movwf	((?_sprintf+2)^(0+128)+3)
  2515  0168  084F               	movf	(_S2_val+1)^(0+128),w
  2516  0169  00AC               	movwf	((?_sprintf+1)^(0+128)+3)
  2517  016A  084E               	movf	_S2_val^(0+128),w
  2518  016B  00AB               	movwf	(?_sprintf^(0+128)+3)
  2519  016C  160A  118A  24F9  120A  118A  	fcall	_sprintf
  2520  0171                     l111:
  2521  0171  0008               	return
  2522  0172                     __end_of_float_to_string:
  2523                           
  2524                           	psect	text8
  2525  14F9                     __ptext8:	
  2526 ;; *************** function _sprintf *****************
  2527 ;; Defined at:
  2528 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  sp              2    8[BANK1 ] PTR unsigned char 
  2531 ;;		 -> data2(16), data1(16), 
  2532 ;;  f               1   10[BANK1 ] PTR const unsigned char 
  2533 ;;		 -> STR_7(6), STR_6(6), 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  fval            4   39[BANK1 ] PTR const unsigned char 
  2536 ;;  tmpval          4   33[BANK1 ] struct .
  2537 ;;  val             4   25[BANK1 ] unsigned long 
  2538 ;;  prec            2   43[BANK1 ] int 
  2539 ;;  eexp            2   37[BANK1 ] int 
  2540 ;;  width           2   31[BANK1 ] int 
  2541 ;;  flag            2   29[BANK1 ] unsigned short 
  2542 ;;  cp              2    0        PTR const unsigned char 
  2543 ;;  len             2    0        unsigned int 
  2544 ;;  c               1   45[BANK1 ] unsigned char 
  2545 ;;  ap              1   24[BANK1 ] PTR void [1]
  2546 ;;		 -> ?_sprintf(2), 
  2547 ;;  d               1    0        unsigned char 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  2    8[BANK1 ] int 
  2550 ;; Registers used:
  2551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2557 ;;      Params:         0       0       7       0       0
  2558 ;;      Locals:         0       0      26       0       0
  2559 ;;      Temps:          0       0       5       0       0
  2560 ;;      Totals:         0       0      38       0       0
  2561 ;;Total ram usage:       38 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    4
  2564 ;; This function calls:
  2565 ;;		___awdiv
  2566 ;;		___fladd
  2567 ;;		___fleq
  2568 ;;		___flge
  2569 ;;		___flmul
  2570 ;;		___flneg
  2571 ;;		___flsub
  2572 ;;		___fltol
  2573 ;;		___lldiv
  2574 ;;		___llmod
  2575 ;;		___wmul
  2576 ;;		___xxtofl
  2577 ;;		__div_to_l_
  2578 ;;		__tdiv_to_l_
  2579 ;;		_fround
  2580 ;;		_isdigit
  2581 ;;		_scale
  2582 ;; This function is called by:
  2583 ;;		_float_to_string
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           
  2588                           ;psect for function _sprintf
  2589  14F9                     _sprintf:
  2590  14F9                     l4529:	
  2591                           ;incstack = 0
  2592                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2593                           
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2596  14F9  30AB               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  2597  14FA  1683               	bsf	3,5	;RP0=1, select bank1
  2598  14FB  1303               	bcf	3,6	;RP1=0, select bank1
  2599  14FC  00AF               	movwf	??_sprintf^(0+128)
  2600  14FD  082F               	movf	??_sprintf^(0+128),w
  2601  14FE  00B8               	movwf	sprintf@ap^(0+128)
  2602  14FF                     L1:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2605  14FF  120A  118A  2FCC   	goto	l4783
  2606  1502                     l4531:
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2609  1502  3025               	movlw	37
  2610  1503  064D               	xorwf	sprintf@c^(0+128),w
  2611  1504  1903               	btfsc	3,2
  2612  1505  2D07               	goto	u7501
  2613  1506  2D08               	goto	u7500
  2614  1507                     u7501:
  2615  1507  2D18               	goto	l4537
  2616  1508                     u7500:
  2617  1508                     l4533:
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2620  1508  084D               	movf	sprintf@c^(0+128),w
  2621  1509  00AF               	movwf	??_sprintf^(0+128)
  2622  150A  0828               	movf	sprintf@sp^(0+128),w
  2623  150B  0084               	movwf	4
  2624  150C  1783               	bsf	3,7
  2625  150D  1C29               	btfss	(sprintf@sp+1)^(0+128),0
  2626  150E  1383               	bcf	3,7
  2627  150F  082F               	movf	??_sprintf^(0+128),w
  2628  1510  0080               	movwf	0
  2629  1511                     l4535:
  2630  1511  3001               	movlw	1
  2631  1512  07A8               	addwf	sprintf@sp^(0+128),f
  2632  1513  1803               	skipnc
  2633  1514  0AA9               	incf	(sprintf@sp+1)^(0+128),f
  2634  1515  3000               	movlw	0
  2635  1516  07A9               	addwf	(sprintf@sp+1)^(0+128),f
  2636                           
  2637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2638  1517  2CFF               	goto	L1
  2639  1518                     l4537:
  2640                           
  2641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2642  1518  01BF               	clrf	sprintf@width^(0+128)
  2643  1519  01C0               	clrf	(sprintf@width+1)^(0+128)
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2646  151A  01BD               	clrf	sprintf@flag^(0+128)
  2647  151B  01BE               	clrf	(sprintf@flag+1)^(0+128)
  2648  151C                     l4539:
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2651  151C  082A               	movf	sprintf@f^(0+128),w
  2652  151D  0084               	movwf	4
  2653  151E  160A  158A  200A  160A  118A  	fcall	stringdir
  2654  1523  120A  118A  2129  160A  118A  	fcall	_isdigit
  2655  1528  1C03               	btfss	3,0
  2656  1529  2D2B               	goto	u7511
  2657  152A  2D2C               	goto	u7510
  2658  152B                     u7511:
  2659  152B  2D6C               	goto	l4551
  2660  152C                     u7510:
  2661  152C                     l4541:
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2664  152C  1683               	bsf	3,5	;RP0=1, select bank1
  2665  152D  1303               	bcf	3,6	;RP1=0, select bank1
  2666  152E  01BF               	clrf	sprintf@width^(0+128)
  2667  152F  01C0               	clrf	(sprintf@width+1)^(0+128)
  2668  1530                     l4543:
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2671  1530  300A               	movlw	10
  2672  1531  00F3               	movwf	___wmul@multiplier
  2673  1532  3000               	movlw	0
  2674  1533  00F4               	movwf	___wmul@multiplier+1
  2675  1534  1683               	bsf	3,5	;RP0=1, select bank1
  2676  1535  1303               	bcf	3,6	;RP1=0, select bank1
  2677  1536  0840               	movf	(sprintf@width+1)^(0+128),w
  2678  1537  00F6               	movwf	___wmul@multiplicand+1
  2679  1538  083F               	movf	sprintf@width^(0+128),w
  2680  1539  00F5               	movwf	___wmul@multiplicand
  2681  153A  120A  118A  207C  160A  118A  	fcall	___wmul
  2682  153F  0874               	movf	?___wmul+1,w
  2683  1540  1683               	bsf	3,5	;RP0=1, select bank1
  2684  1541  1303               	bcf	3,6	;RP1=0, select bank1
  2685  1542  00C0               	movwf	(sprintf@width+1)^(0+128)
  2686  1543  0873               	movf	?___wmul,w
  2687  1544  00BF               	movwf	sprintf@width^(0+128)
  2688  1545                     l4545:
  2689                           
  2690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2691  1545  082A               	movf	sprintf@f^(0+128),w
  2692  1546  0084               	movwf	4
  2693  1547  160A  158A  200A  160A  118A  	fcall	stringdir
  2694  154C  3ED0               	addlw	208
  2695  154D  00AF               	movwf	??_sprintf^(0+128)
  2696  154E  30FF               	movlw	255
  2697  154F  1803               	skipnc
  2698  1550  3000               	movlw	0
  2699  1551  00B0               	movwf	(??_sprintf^(0+128)+1)
  2700  1552  082F               	movf	??_sprintf^(0+128),w
  2701  1553  07BF               	addwf	sprintf@width^(0+128),f
  2702  1554  1803               	skipnc
  2703  1555  0AC0               	incf	(sprintf@width+1)^(0+128),f
  2704  1556  0830               	movf	(??_sprintf+1)^(0+128),w
  2705  1557  07C0               	addwf	(sprintf@width+1)^(0+128),f
  2706  1558                     l4547:
  2707  1558  3001               	movlw	1
  2708  1559  00AF               	movwf	??_sprintf^(0+128)
  2709  155A  082F               	movf	??_sprintf^(0+128),w
  2710  155B  07AA               	addwf	sprintf@f^(0+128),f
  2711  155C                     l4549:
  2712                           
  2713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2714  155C  082A               	movf	sprintf@f^(0+128),w
  2715  155D  0084               	movwf	4
  2716  155E  160A  158A  200A  160A  118A  	fcall	stringdir
  2717  1563  120A  118A  2129  160A  118A  	fcall	_isdigit
  2718  1568  1803               	btfsc	3,0
  2719  1569  2D6B               	goto	u7521
  2720  156A  2D6C               	goto	u7520
  2721  156B                     u7521:
  2722  156B  2D30               	goto	l4543
  2723  156C                     u7520:
  2724  156C                     l4551:
  2725                           
  2726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2727  156C  1683               	bsf	3,5	;RP0=1, select bank1
  2728  156D  1303               	bcf	3,6	;RP1=0, select bank1
  2729  156E  082A               	movf	sprintf@f^(0+128),w
  2730  156F  0084               	movwf	4
  2731  1570  160A  158A  200A  160A  118A  	fcall	stringdir
  2732  1575  3A2E               	xorlw	46
  2733  1576  1D03               	skipz
  2734  1577  2D79               	goto	u7531
  2735  1578  2D7A               	goto	u7530
  2736  1579                     u7531:
  2737  1579  2DBF               	goto	l4567
  2738  157A                     u7530:
  2739  157A                     l4553:
  2740                           
  2741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2742  157A  173E               	bsf	(sprintf@flag^(0+128)+1),6
  2743  157B                     l4555:
  2744                           
  2745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2746  157B  3001               	movlw	1
  2747  157C  00AF               	movwf	??_sprintf^(0+128)
  2748  157D  082F               	movf	??_sprintf^(0+128),w
  2749  157E  07AA               	addwf	sprintf@f^(0+128),f
  2750  157F                     l4557:
  2751                           
  2752                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2753  157F  01CB               	clrf	sprintf@prec^(0+128)
  2754  1580  01CC               	clrf	(sprintf@prec+1)^(0+128)
  2755                           
  2756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2757  1581  2DAE               	goto	l4565
  2758  1582                     l4559:
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2761  1582  300A               	movlw	10
  2762  1583  00F3               	movwf	___wmul@multiplier
  2763  1584  3000               	movlw	0
  2764  1585  00F4               	movwf	___wmul@multiplier+1
  2765  1586  1683               	bsf	3,5	;RP0=1, select bank1
  2766  1587  1303               	bcf	3,6	;RP1=0, select bank1
  2767  1588  084C               	movf	(sprintf@prec+1)^(0+128),w
  2768  1589  00F6               	movwf	___wmul@multiplicand+1
  2769  158A  084B               	movf	sprintf@prec^(0+128),w
  2770  158B  00F5               	movwf	___wmul@multiplicand
  2771  158C  120A  118A  207C  160A  118A  	fcall	___wmul
  2772  1591  0874               	movf	?___wmul+1,w
  2773  1592  1683               	bsf	3,5	;RP0=1, select bank1
  2774  1593  1303               	bcf	3,6	;RP1=0, select bank1
  2775  1594  00CC               	movwf	(sprintf@prec+1)^(0+128)
  2776  1595  0873               	movf	?___wmul,w
  2777  1596  00CB               	movwf	sprintf@prec^(0+128)
  2778  1597                     l4561:
  2779                           
  2780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2781  1597  082A               	movf	sprintf@f^(0+128),w
  2782  1598  0084               	movwf	4
  2783  1599  160A  158A  200A  160A  118A  	fcall	stringdir
  2784  159E  3ED0               	addlw	208
  2785  159F  00AF               	movwf	??_sprintf^(0+128)
  2786  15A0  30FF               	movlw	255
  2787  15A1  1803               	skipnc
  2788  15A2  3000               	movlw	0
  2789  15A3  00B0               	movwf	(??_sprintf^(0+128)+1)
  2790  15A4  082F               	movf	??_sprintf^(0+128),w
  2791  15A5  07CB               	addwf	sprintf@prec^(0+128),f
  2792  15A6  1803               	skipnc
  2793  15A7  0ACC               	incf	(sprintf@prec+1)^(0+128),f
  2794  15A8  0830               	movf	(??_sprintf+1)^(0+128),w
  2795  15A9  07CC               	addwf	(sprintf@prec+1)^(0+128),f
  2796  15AA                     l4563:
  2797  15AA  3001               	movlw	1
  2798  15AB  00AF               	movwf	??_sprintf^(0+128)
  2799  15AC  082F               	movf	??_sprintf^(0+128),w
  2800  15AD  07AA               	addwf	sprintf@f^(0+128),f
  2801  15AE                     l4565:
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2804  15AE  082A               	movf	sprintf@f^(0+128),w
  2805  15AF  0084               	movwf	4
  2806  15B0  160A  158A  200A  160A  118A  	fcall	stringdir
  2807  15B5  120A  118A  2129  160A  118A  	fcall	_isdigit
  2808  15BA  1803               	btfsc	3,0
  2809  15BB  2DBD               	goto	u7541
  2810  15BC  2DBE               	goto	u7540
  2811  15BD                     u7541:
  2812  15BD  2D82               	goto	l4559
  2813  15BE                     u7540:
  2814  15BE  2DC5               	goto	l4573
  2815  15BF                     l4567:
  2816                           
  2817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2818  15BF  01CB               	clrf	sprintf@prec^(0+128)
  2819  15C0  01CC               	clrf	(sprintf@prec+1)^(0+128)
  2820  15C1                     l4569:
  2821                           
  2822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2823  15C1  163E               	bsf	(sprintf@flag^(0+128)+1),4
  2824  15C2  2DC5               	goto	l4573
  2825  15C3                     l375:	
  2826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2827                           
  2828                           
  2829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2830  15C3  153E               	bsf	(sprintf@flag^(0+128)+1),2
  2831                           
  2832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2833  15C4  2DE1               	goto	l4575
  2834  15C5                     l4573:
  2835  15C5  3001               	movlw	1
  2836  15C6  1683               	bsf	3,5	;RP0=1, select bank1
  2837  15C7  1303               	bcf	3,6	;RP1=0, select bank1
  2838  15C8  07AA               	addwf	sprintf@f^(0+128),f
  2839  15C9  30FF               	movlw	-1
  2840  15CA  072A               	addwf	sprintf@f^(0+128),w
  2841  15CB  0084               	movwf	4
  2842  15CC  160A  158A  200A  160A  118A  	fcall	stringdir
  2843  15D1  00CD               	movwf	sprintf@c^(0+128)
  2844  15D2  00AF               	movwf	??_sprintf^(0+128)
  2845  15D3  01B0               	clrf	(??_sprintf^(0+128)+1)
  2846                           
  2847                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2848                           ; Switch size 1, requested type "simple"
  2849                           ; Number of cases is 1, Range of values is 0 to 0
  2850                           ; switch strategies available:
  2851                           ; Name         Instructions Cycles
  2852                           ; simple_byte            4     3 (average)
  2853                           ; direct_byte           11     8 (fixed)
  2854                           ; jumptable            260     6 (fixed)
  2855                           ;	Chosen strategy is simple_byte
  2856  15D4  0830               	movf	(??_sprintf+1)^(0+128),w
  2857  15D5  3A00               	xorlw	0	; case 0
  2858  15D6  1903               	skipnz
  2859  15D7  2DD9               	goto	l4935
  2860  15D8  2CFF               	goto	L1
  2861  15D9                     l4935:
  2862                           
  2863                           ; Switch size 1, requested type "simple"
  2864                           ; Number of cases is 2, Range of values is 0 to 102
  2865                           ; switch strategies available:
  2866                           ; Name         Instructions Cycles
  2867                           ; simple_byte            7     4 (average)
  2868                           ; jumptable            260     6 (fixed)
  2869                           ;	Chosen strategy is simple_byte
  2870  15D9  082F               	movf	??_sprintf^(0+128),w
  2871  15DA  3A00               	xorlw	0	; case 0
  2872  15DB  1903               	skipnz
  2873  15DC  2FFD               	goto	L3
  2874  15DD  3A66               	xorlw	102	; case 102
  2875  15DE  1903               	skipnz
  2876  15DF  2DC3               	goto	l375
  2877  15E0  2CFF               	goto	L1
  2878  15E1                     l4575:
  2879                           
  2880                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2881  15E1  3000               	movlw	0
  2882  15E2  053D               	andwf	sprintf@flag^(0+128),w
  2883  15E3  00AF               	movwf	??_sprintf^(0+128)
  2884  15E4  3007               	movlw	7
  2885  15E5  053E               	andwf	(sprintf@flag+1)^(0+128),w
  2886  15E6  00B0               	movwf	(??_sprintf+1)^(0+128)
  2887  15E7  082F               	movf	??_sprintf^(0+128),w
  2888  15E8  0430               	iorwf	(??_sprintf^(0+128)+1),w
  2889  15E9  1903               	btfsc	3,2
  2890  15EA  2DEC               	goto	u7551
  2891  15EB  2DEF               	goto	u7550
  2892  15EC                     u7551:
  2893  15EC  120A  118A  2F01   	goto	l4737
  2894  15EF                     u7550:
  2895  15EF                     l4577:
  2896                           
  2897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2898  15EF  1E3E               	btfss	(sprintf@flag+1)^(0+128),4
  2899  15F0  2DF2               	goto	u7561
  2900  15F1  2DF3               	goto	u7560
  2901  15F2                     u7561:
  2902  15F2  2DF7               	goto	l4581
  2903  15F3                     u7560:
  2904  15F3                     l4579:
  2905                           
  2906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2907  15F3  3006               	movlw	6
  2908  15F4  00CB               	movwf	sprintf@prec^(0+128)
  2909  15F5  3000               	movlw	0
  2910  15F6  00CC               	movwf	(sprintf@prec^(0+128)+1)
  2911  15F7                     l4581:
  2912                           
  2913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2914  15F7  0838               	movf	sprintf@ap^(0+128),w
  2915  15F8  0084               	movwf	4
  2916  15F9  1383               	bcf	3,7	;select IRP bank0
  2917  15FA  0800               	movf	0,w
  2918  15FB  00C7               	movwf	sprintf@fval^(0+128)
  2919  15FC  0A84               	incf	4,f
  2920  15FD  0800               	movf	0,w
  2921  15FE  00C8               	movwf	(sprintf@fval+1)^(0+128)
  2922  15FF  0A84               	incf	4,f
  2923  1600  0800               	movf	0,w
  2924  1601  00C9               	movwf	(sprintf@fval+2)^(0+128)
  2925  1602  0A84               	incf	4,f
  2926  1603  0800               	movf	0,w
  2927  1604  00CA               	movwf	(sprintf@fval+3)^(0+128)
  2928  1605                     l4583:
  2929  1605  3004               	movlw	4
  2930  1606  00AF               	movwf	??_sprintf^(0+128)
  2931  1607  082F               	movf	??_sprintf^(0+128),w
  2932  1608  07B8               	addwf	sprintf@ap^(0+128),f
  2933  1609                     l4585:
  2934                           
  2935                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2936  1609  084A               	movf	(sprintf@fval+3)^(0+128),w
  2937  160A  1283               	bcf	3,5	;RP0=0, select bank0
  2938  160B  1303               	bcf	3,6	;RP1=0, select bank0
  2939  160C  00A3               	movwf	___flge@ff1+3
  2940  160D  1683               	bsf	3,5	;RP0=1, select bank1
  2941  160E  1303               	bcf	3,6	;RP1=0, select bank1
  2942  160F  0849               	movf	(sprintf@fval+2)^(0+128),w
  2943  1610  1283               	bcf	3,5	;RP0=0, select bank0
  2944  1611  1303               	bcf	3,6	;RP1=0, select bank0
  2945  1612  00A2               	movwf	___flge@ff1+2
  2946  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2947  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2948  1615  0848               	movf	(sprintf@fval+1)^(0+128),w
  2949  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2950  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2951  1618  00A1               	movwf	___flge@ff1+1
  2952  1619  1683               	bsf	3,5	;RP0=1, select bank1
  2953  161A  1303               	bcf	3,6	;RP1=0, select bank1
  2954  161B  0847               	movf	sprintf@fval^(0+128),w
  2955  161C  1283               	bcf	3,5	;RP0=0, select bank0
  2956  161D  1303               	bcf	3,6	;RP1=0, select bank0
  2957  161E  00A0               	movwf	___flge@ff1
  2958  161F  3000               	movlw	0
  2959  1620  00A7               	movwf	___flge@ff2+3
  2960  1621  3000               	movlw	0
  2961  1622  00A6               	movwf	___flge@ff2+2
  2962  1623  3000               	movlw	0
  2963  1624  00A5               	movwf	___flge@ff2+1
  2964  1625  3000               	movlw	0
  2965  1626  00A4               	movwf	___flge@ff2
  2966  1627  160A  158A  2527  160A  118A  	fcall	___flge
  2967  162C  1803               	btfsc	3,0
  2968  162D  2E2F               	goto	u7571
  2969  162E  2E30               	goto	u7570
  2970  162F                     u7571:
  2971  162F  2E4D               	goto	l4591
  2972  1630                     u7570:
  2973  1630                     l4587:
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2976  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2977  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2978  1632  084A               	movf	(sprintf@fval+3)^(0+128),w
  2979  1633  00F6               	movwf	___flneg@f1+3
  2980  1634  0849               	movf	(sprintf@fval+2)^(0+128),w
  2981  1635  00F5               	movwf	___flneg@f1+2
  2982  1636  0848               	movf	(sprintf@fval+1)^(0+128),w
  2983  1637  00F4               	movwf	___flneg@f1+1
  2984  1638  0847               	movf	sprintf@fval^(0+128),w
  2985  1639  00F3               	movwf	___flneg@f1
  2986  163A  120A  118A  2071  160A  118A  	fcall	___flneg
  2987  163F  0876               	movf	?___flneg+3,w
  2988  1640  1683               	bsf	3,5	;RP0=1, select bank1
  2989  1641  1303               	bcf	3,6	;RP1=0, select bank1
  2990  1642  00CA               	movwf	(sprintf@fval+3)^(0+128)
  2991  1643  0875               	movf	?___flneg+2,w
  2992  1644  00C9               	movwf	(sprintf@fval+2)^(0+128)
  2993  1645  0874               	movf	?___flneg+1,w
  2994  1646  00C8               	movwf	(sprintf@fval+1)^(0+128)
  2995  1647  0873               	movf	?___flneg,w
  2996  1648  00C7               	movwf	sprintf@fval^(0+128)
  2997  1649                     l4589:
  2998                           
  2999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  3000  1649  3003               	movlw	3
  3001  164A  04BD               	iorwf	sprintf@flag^(0+128),f
  3002  164B  3000               	movlw	0
  3003  164C  04BE               	iorwf	(sprintf@flag+1)^(0+128),f
  3004  164D                     l4591:
  3005                           
  3006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  3007  164D  1683               	bsf	3,5	;RP0=1, select bank1
  3008  164E  1303               	bcf	3,6	;RP1=0, select bank1
  3009  164F  01C5               	clrf	sprintf@eexp^(0+128)
  3010  1650  01C6               	clrf	(sprintf@eexp+1)^(0+128)
  3011  1651                     l4593:
  3012                           
  3013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  3014  1651  084A               	movf	(sprintf@fval+3)^(0+128),w
  3015  1652  1283               	bcf	3,5	;RP0=0, select bank0
  3016  1653  1303               	bcf	3,6	;RP1=0, select bank0
  3017  1654  00A3               	movwf	___fleq@ff1+3
  3018  1655  1683               	bsf	3,5	;RP0=1, select bank1
  3019  1656  1303               	bcf	3,6	;RP1=0, select bank1
  3020  1657  0849               	movf	(sprintf@fval+2)^(0+128),w
  3021  1658  1283               	bcf	3,5	;RP0=0, select bank0
  3022  1659  1303               	bcf	3,6	;RP1=0, select bank0
  3023  165A  00A2               	movwf	___fleq@ff1+2
  3024  165B  1683               	bsf	3,5	;RP0=1, select bank1
  3025  165C  1303               	bcf	3,6	;RP1=0, select bank1
  3026  165D  0848               	movf	(sprintf@fval+1)^(0+128),w
  3027  165E  1283               	bcf	3,5	;RP0=0, select bank0
  3028  165F  1303               	bcf	3,6	;RP1=0, select bank0
  3029  1660  00A1               	movwf	___fleq@ff1+1
  3030  1661  1683               	bsf	3,5	;RP0=1, select bank1
  3031  1662  1303               	bcf	3,6	;RP1=0, select bank1
  3032  1663  0847               	movf	sprintf@fval^(0+128),w
  3033  1664  1283               	bcf	3,5	;RP0=0, select bank0
  3034  1665  1303               	bcf	3,6	;RP1=0, select bank0
  3035  1666  00A0               	movwf	___fleq@ff1
  3036  1667  3000               	movlw	0
  3037  1668  00A7               	movwf	___fleq@ff2+3
  3038  1669  3000               	movlw	0
  3039  166A  00A6               	movwf	___fleq@ff2+2
  3040  166B  3000               	movlw	0
  3041  166C  00A5               	movwf	___fleq@ff2+1
  3042  166D  3000               	movlw	0
  3043  166E  00A4               	movwf	___fleq@ff2
  3044  166F  160A  158A  2166  160A  118A  	fcall	___fleq
  3045  1674  1803               	btfsc	3,0
  3046  1675  2E77               	goto	u7581
  3047  1676  2E78               	goto	u7580
  3048  1677                     u7581:
  3049  1677  2F94               	goto	l4619
  3050  1678                     u7580:
  3051  1678                     l4595:
  3052                           
  3053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  3054  1678  1003               	clrc
  3055  1679  1683               	bsf	3,5	;RP0=1, select bank1
  3056  167A  1303               	bcf	3,6	;RP1=0, select bank1
  3057  167B  0D49               	rlf	(sprintf@fval+2)^(0+128),w
  3058  167C  0D4A               	rlf	(sprintf@fval+3)^(0+128),w
  3059  167D  3E82               	addlw	130
  3060  167E  00C5               	movwf	sprintf@eexp^(0+128)
  3061  167F  30FF               	movlw	255
  3062  1680  1803               	skipnc
  3063  1681  3000               	movlw	0
  3064  1682  00C6               	movwf	(sprintf@eexp^(0+128)+1)
  3065  1683                     l4597:
  3066                           
  3067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  3068  1683  30FF               	movlw	255
  3069  1684  07C5               	addwf	sprintf@eexp^(0+128),f
  3070  1685  1803               	skipnc
  3071  1686  0AC6               	incf	(sprintf@eexp+1)^(0+128),f
  3072  1687  30FF               	movlw	255
  3073  1688  07C6               	addwf	(sprintf@eexp+1)^(0+128),f
  3074  1689                     l4599:
  3075                           
  3076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  3077  1689  3003               	movlw	3
  3078  168A  00F3               	movwf	___wmul@multiplier
  3079  168B  3000               	movlw	0
  3080  168C  00F4               	movwf	___wmul@multiplier+1
  3081  168D  0846               	movf	(sprintf@eexp+1)^(0+128),w
  3082  168E  00F6               	movwf	___wmul@multiplicand+1
  3083  168F  0845               	movf	sprintf@eexp^(0+128),w
  3084  1690  00F5               	movwf	___wmul@multiplicand
  3085  1691  120A  118A  207C  160A  118A  	fcall	___wmul
  3086  1696  0874               	movf	?___wmul+1,w
  3087  1697  1683               	bsf	3,5	;RP0=1, select bank1
  3088  1698  1303               	bcf	3,6	;RP1=0, select bank1
  3089  1699  00C6               	movwf	(sprintf@eexp+1)^(0+128)
  3090  169A  0873               	movf	?___wmul,w
  3091  169B  00C5               	movwf	sprintf@eexp^(0+128)
  3092  169C                     l4601:
  3093                           
  3094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  3095  169C  300A               	movlw	10
  3096  169D  1283               	bcf	3,5	;RP0=0, select bank0
  3097  169E  1303               	bcf	3,6	;RP1=0, select bank0
  3098  169F  00A2               	movwf	___awdiv@divisor
  3099  16A0  3000               	movlw	0
  3100  16A1  00A3               	movwf	___awdiv@divisor+1
  3101  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  3102  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  3103  16A4  0846               	movf	(sprintf@eexp+1)^(0+128),w
  3104  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  3105  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  3106  16A7  00A5               	movwf	___awdiv@dividend+1
  3107  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  3108  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  3109  16AA  0845               	movf	sprintf@eexp^(0+128),w
  3110  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  3111  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  3112  16AD  00A4               	movwf	___awdiv@dividend
  3113  16AE  160A  158A  23E1  160A  118A  	fcall	___awdiv
  3114  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  3115  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  3116  16B5  0823               	movf	?___awdiv+1,w
  3117  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  3118  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  3119  16B8  00C6               	movwf	(sprintf@eexp+1)^(0+128)
  3120  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  3121  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  3122  16BB  0822               	movf	?___awdiv,w
  3123  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  3124  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  3125  16BE  00C5               	movwf	sprintf@eexp^(0+128)
  3126  16BF                     l4603:
  3127                           
  3128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  3129  16BF  1FC6               	btfss	(sprintf@eexp+1)^(0+128),7
  3130  16C0  2EC2               	goto	u7591
  3131  16C1  2EC3               	goto	u7590
  3132  16C2                     u7591:
  3133  16C2  2EC9               	goto	l4607
  3134  16C3                     u7590:
  3135  16C3                     l4605:
  3136                           
  3137                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  3138  16C3  30FF               	movlw	255
  3139  16C4  07C5               	addwf	sprintf@eexp^(0+128),f
  3140  16C5  1803               	skipnc
  3141  16C6  0AC6               	incf	(sprintf@eexp+1)^(0+128),f
  3142  16C7  30FF               	movlw	255
  3143  16C8  07C6               	addwf	(sprintf@eexp+1)^(0+128),f
  3144  16C9                     l4607:
  3145                           
  3146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  3147  16C9  0345               	decf	sprintf@eexp^(0+128),w
  3148  16CA  3AFF               	xorlw	255
  3149  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  3150  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  3151  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  3152  16D2  0848               	movf	?_scale+3,w
  3153  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  3154  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  3155  16D5  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  3156  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  3157  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  3158  16D8  0847               	movf	?_scale+2,w
  3159  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  3160  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  3161  16DB  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  3162  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  3163  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  3164  16DE  0846               	movf	?_scale+1,w
  3165  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  3166  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  3167  16E1  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  3168  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  3169  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  3170  16E4  0845               	movf	?_scale,w
  3171  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  3172  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  3173  16E7  00C1               	movwf	sprintf@tmpval^(0+128)
  3174  16E8                     l4609:
  3175                           
  3176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  3177  16E8  084A               	movf	(sprintf@fval+3)^(0+128),w
  3178  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  3179  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  3180  16EB  00AE               	movwf	___flmul@b+3
  3181  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  3182  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  3183  16EE  0849               	movf	(sprintf@fval+2)^(0+128),w
  3184  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  3185  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  3186  16F1  00AD               	movwf	___flmul@b+2
  3187  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  3188  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  3189  16F4  0848               	movf	(sprintf@fval+1)^(0+128),w
  3190  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  3191  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  3192  16F7  00AC               	movwf	___flmul@b+1
  3193  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  3194  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  3195  16FA  0847               	movf	sprintf@fval^(0+128),w
  3196  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  3197  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  3198  16FD  00AB               	movwf	___flmul@b
  3199  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  3200  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  3201  1700  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  3202  1701  1283               	bcf	3,5	;RP0=0, select bank0
  3203  1702  1303               	bcf	3,6	;RP1=0, select bank0
  3204  1703  00B2               	movwf	___flmul@a+3
  3205  1704  1683               	bsf	3,5	;RP0=1, select bank1
  3206  1705  1303               	bcf	3,6	;RP1=0, select bank1
  3207  1706  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  3208  1707  1283               	bcf	3,5	;RP0=0, select bank0
  3209  1708  1303               	bcf	3,6	;RP1=0, select bank0
  3210  1709  00B1               	movwf	___flmul@a+2
  3211  170A  1683               	bsf	3,5	;RP0=1, select bank1
  3212  170B  1303               	bcf	3,6	;RP1=0, select bank1
  3213  170C  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  3214  170D  1283               	bcf	3,5	;RP0=0, select bank0
  3215  170E  1303               	bcf	3,6	;RP1=0, select bank0
  3216  170F  00B0               	movwf	___flmul@a+1
  3217  1710  1683               	bsf	3,5	;RP0=1, select bank1
  3218  1711  1303               	bcf	3,6	;RP1=0, select bank1
  3219  1712  0841               	movf	sprintf@tmpval^(0+128),w
  3220  1713  1283               	bcf	3,5	;RP0=0, select bank0
  3221  1714  1303               	bcf	3,6	;RP1=0, select bank0
  3222  1715  00AF               	movwf	___flmul@a
  3223  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  3224  171B  1283               	bcf	3,5	;RP0=0, select bank0
  3225  171C  1303               	bcf	3,6	;RP1=0, select bank0
  3226  171D  082E               	movf	?___flmul+3,w
  3227  171E  1683               	bsf	3,5	;RP0=1, select bank1
  3228  171F  1303               	bcf	3,6	;RP1=0, select bank1
  3229  1720  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
  3230  1721  1283               	bcf	3,5	;RP0=0, select bank0
  3231  1722  1303               	bcf	3,6	;RP1=0, select bank0
  3232  1723  082D               	movf	?___flmul+2,w
  3233  1724  1683               	bsf	3,5	;RP0=1, select bank1
  3234  1725  1303               	bcf	3,6	;RP1=0, select bank1
  3235  1726  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
  3236  1727  1283               	bcf	3,5	;RP0=0, select bank0
  3237  1728  1303               	bcf	3,6	;RP1=0, select bank0
  3238  1729  082C               	movf	?___flmul+1,w
  3239  172A  1683               	bsf	3,5	;RP0=1, select bank1
  3240  172B  1303               	bcf	3,6	;RP1=0, select bank1
  3241  172C  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
  3242  172D  1283               	bcf	3,5	;RP0=0, select bank0
  3243  172E  1303               	bcf	3,6	;RP1=0, select bank0
  3244  172F  082B               	movf	?___flmul,w
  3245  1730  1683               	bsf	3,5	;RP0=1, select bank1
  3246  1731  1303               	bcf	3,6	;RP1=0, select bank1
  3247  1732  00C1               	movwf	sprintf@tmpval^(0+128)
  3248  1733                     l4611:
  3249                           
  3250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  3251  1733  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  3252  1734  1283               	bcf	3,5	;RP0=0, select bank0
  3253  1735  1303               	bcf	3,6	;RP1=0, select bank0
  3254  1736  00A3               	movwf	___flge@ff1+3
  3255  1737  1683               	bsf	3,5	;RP0=1, select bank1
  3256  1738  1303               	bcf	3,6	;RP1=0, select bank1
  3257  1739  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  3258  173A  1283               	bcf	3,5	;RP0=0, select bank0
  3259  173B  1303               	bcf	3,6	;RP1=0, select bank0
  3260  173C  00A2               	movwf	___flge@ff1+2
  3261  173D  1683               	bsf	3,5	;RP0=1, select bank1
  3262  173E  1303               	bcf	3,6	;RP1=0, select bank1
  3263  173F  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  3264  1740  1283               	bcf	3,5	;RP0=0, select bank0
  3265  1741  1303               	bcf	3,6	;RP1=0, select bank0
  3266  1742  00A1               	movwf	___flge@ff1+1
  3267  1743  1683               	bsf	3,5	;RP0=1, select bank1
  3268  1744  1303               	bcf	3,6	;RP1=0, select bank1
  3269  1745  0841               	movf	sprintf@tmpval^(0+128),w
  3270  1746  1283               	bcf	3,5	;RP0=0, select bank0
  3271  1747  1303               	bcf	3,6	;RP1=0, select bank0
  3272  1748  00A0               	movwf	___flge@ff1
  3273  1749  303F               	movlw	63
  3274  174A  00A7               	movwf	___flge@ff2+3
  3275  174B  3080               	movlw	128
  3276  174C  00A6               	movwf	___flge@ff2+2
  3277  174D  3000               	movlw	0
  3278  174E  00A5               	movwf	___flge@ff2+1
  3279  174F  3000               	movlw	0
  3280  1750  00A4               	movwf	___flge@ff2
  3281  1751  160A  158A  2527  160A  118A  	fcall	___flge
  3282  1756  1803               	btfsc	3,0
  3283  1757  2F59               	goto	u7601
  3284  1758  2F5A               	goto	u7600
  3285  1759                     u7601:
  3286  1759  2F63               	goto	l4615
  3287  175A                     u7600:
  3288  175A                     l4613:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3291  175A  30FF               	movlw	255
  3292  175B  1683               	bsf	3,5	;RP0=1, select bank1
  3293  175C  1303               	bcf	3,6	;RP1=0, select bank1
  3294  175D  07C5               	addwf	sprintf@eexp^(0+128),f
  3295  175E  1803               	skipnc
  3296  175F  0AC6               	incf	(sprintf@eexp+1)^(0+128),f
  3297  1760  30FF               	movlw	255
  3298  1761  07C6               	addwf	(sprintf@eexp+1)^(0+128),f
  3299  1762  2F94               	goto	l4619
  3300  1763                     l4615:
  3301  1763  1683               	bsf	3,5	;RP0=1, select bank1
  3302  1764  1303               	bcf	3,6	;RP1=0, select bank1
  3303  1765  0844               	movf	(sprintf@tmpval+3)^(0+128),w
  3304  1766  1283               	bcf	3,5	;RP0=0, select bank0
  3305  1767  1303               	bcf	3,6	;RP1=0, select bank0
  3306  1768  00A3               	movwf	___flge@ff1+3
  3307  1769  1683               	bsf	3,5	;RP0=1, select bank1
  3308  176A  1303               	bcf	3,6	;RP1=0, select bank1
  3309  176B  0843               	movf	(sprintf@tmpval+2)^(0+128),w
  3310  176C  1283               	bcf	3,5	;RP0=0, select bank0
  3311  176D  1303               	bcf	3,6	;RP1=0, select bank0
  3312  176E  00A2               	movwf	___flge@ff1+2
  3313  176F  1683               	bsf	3,5	;RP0=1, select bank1
  3314  1770  1303               	bcf	3,6	;RP1=0, select bank1
  3315  1771  0842               	movf	(sprintf@tmpval+1)^(0+128),w
  3316  1772  1283               	bcf	3,5	;RP0=0, select bank0
  3317  1773  1303               	bcf	3,6	;RP1=0, select bank0
  3318  1774  00A1               	movwf	___flge@ff1+1
  3319  1775  1683               	bsf	3,5	;RP0=1, select bank1
  3320  1776  1303               	bcf	3,6	;RP1=0, select bank1
  3321  1777  0841               	movf	sprintf@tmpval^(0+128),w
  3322  1778  1283               	bcf	3,5	;RP0=0, select bank0
  3323  1779  1303               	bcf	3,6	;RP1=0, select bank0
  3324  177A  00A0               	movwf	___flge@ff1
  3325  177B  3041               	movlw	65
  3326  177C  00A7               	movwf	___flge@ff2+3
  3327  177D  3020               	movlw	32
  3328  177E  00A6               	movwf	___flge@ff2+2
  3329  177F  3000               	movlw	0
  3330  1780  00A5               	movwf	___flge@ff2+1
  3331  1781  3000               	movlw	0
  3332  1782  00A4               	movwf	___flge@ff2
  3333  1783  160A  158A  2527  160A  118A  	fcall	___flge
  3334  1788  1C03               	btfss	3,0
  3335  1789  2F8B               	goto	u7611
  3336  178A  2F8C               	goto	u7610
  3337  178B                     u7611:
  3338  178B  2F94               	goto	l4619
  3339  178C                     u7610:
  3340  178C                     l4617:
  3341                           
  3342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3343  178C  3001               	movlw	1
  3344  178D  1683               	bsf	3,5	;RP0=1, select bank1
  3345  178E  1303               	bcf	3,6	;RP1=0, select bank1
  3346  178F  07C5               	addwf	sprintf@eexp^(0+128),f
  3347  1790  1803               	skipnc
  3348  1791  0AC6               	incf	(sprintf@eexp+1)^(0+128),f
  3349  1792  3000               	movlw	0
  3350  1793  07C6               	addwf	(sprintf@eexp+1)^(0+128),f
  3351  1794                     l4619:
  3352                           
  3353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3354  1794  1683               	bsf	3,5	;RP0=1, select bank1
  3355  1795  1303               	bcf	3,6	;RP1=0, select bank1
  3356  1796  084C               	movf	(sprintf@prec+1)^(0+128),w
  3357  1797  3A80               	xorlw	128
  3358  1798  00FF               	movwf	btemp+1
  3359  1799  3080               	movlw	128
  3360  179A  027F               	subwf	btemp+1,w
  3361  179B  1D03               	skipz
  3362  179C  2F9F               	goto	u7625
  3363  179D  300D               	movlw	13
  3364  179E  024B               	subwf	sprintf@prec^(0+128),w
  3365  179F                     u7625:
  3366  179F  1803               	skipnc
  3367  17A0  2FA2               	goto	u7621
  3368  17A1  2FA3               	goto	u7620
  3369  17A2                     u7621:
  3370  17A2  2FEA               	goto	l4623
  3371  17A3                     u7620:
  3372  17A3                     l4621:
  3373                           
  3374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3375  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  3376  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  3377  17A5  084B               	movf	sprintf@prec^(0+128),w
  3378  17A6  120A  118A  2023  160A  118A  	fcall	_fround
  3379  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  3380  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  3381  17AD  0848               	movf	?_fround+3,w
  3382  17AE  00DC               	movwf	___fladd@b+3
  3383  17AF  0847               	movf	?_fround+2,w
  3384  17B0  00DB               	movwf	___fladd@b+2
  3385  17B1  0846               	movf	?_fround+1,w
  3386  17B2  00DA               	movwf	___fladd@b+1
  3387  17B3  0845               	movf	?_fround,w
  3388  17B4  00D9               	movwf	___fladd@b
  3389  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  3390  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  3391  17B7  084A               	movf	(sprintf@fval+3)^(0+128),w
  3392  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  3393  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  3394  17BA  00E0               	movwf	___fladd@a+3
  3395  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  3396  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  3397  17BD  0849               	movf	(sprintf@fval+2)^(0+128),w
  3398  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  3399  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  3400  17C0  00DF               	movwf	___fladd@a+2
  3401  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  3402  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  3403  17C3  0848               	movf	(sprintf@fval+1)^(0+128),w
  3404  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  3405  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  3406  17C6  00DE               	movwf	___fladd@a+1
  3407  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  3408  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  3409  17C9  0847               	movf	sprintf@fval^(0+128),w
  3410  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  3411  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  3412  17CC  00DD               	movwf	___fladd@a
  3413  17CD  160A  118A  2271  160A  118A  	fcall	___fladd
  3414  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  3415  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  3416  17D4  085C               	movf	?___fladd+3,w
  3417  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  3418  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  3419  17D7  00CA               	movwf	(sprintf@fval+3)^(0+128)
  3420  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  3421  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  3422  17DA  085B               	movf	?___fladd+2,w
  3423  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  3424  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  3425  17DD  00C9               	movwf	(sprintf@fval+2)^(0+128)
  3426  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  3427  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  3428  17E0  085A               	movf	?___fladd+1,w
  3429  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  3430  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  3431  17E3  00C8               	movwf	(sprintf@fval+1)^(0+128)
  3432  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  3433  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  3434  17E6  0859               	movf	?___fladd,w
  3435  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  3436  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  3437  17E9  00C7               	movwf	sprintf@fval^(0+128)
  3438  17EA                     l4623:
  3439                           
  3440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3441  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  3442  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  3443  17EC  0846               	movf	(sprintf@eexp+1)^(0+128),w
  3444  17ED  3A80               	xorlw	128
  3445  17EE  00FF               	movwf	btemp+1
  3446  17EF  3080               	movlw	128
  3447  17F0  027F               	subwf	btemp+1,w
  3448  17F1  1D03               	skipz
  3449  17F2  2FF5               	goto	u7635
  3450  17F3  300A               	movlw	10
  3451  17F4  0245               	subwf	sprintf@eexp^(0+128),w
  3452  17F5                     u7635:
  3453  17F5  1803               	skipnc
  3454  17F6  2FFA               	goto	u7631
  3455  17F7  120A  118A  2A30   	goto	u7630
  3456  17FA                     u7631:
  3457  17FA  120A  118A  2A8F   	goto	l4631
  3458  17FD                     L3:
  3459  17FD                     L2:
  3460  17FD  120A  118A  2FE0   	ljmp	l4785
  3461                           
  3462                           	psect	text9
  3463  0C9D                     __ptext9:	
  3464 ;; *************** function _scale *****************
  3465 ;; Defined at:
  3466 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  scl             1    wreg     char 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  scl             1   55[BANK0 ] char 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  4   37[BANK0 ] char 
  3473 ;; Registers used:
  3474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3480 ;;      Params:         0       4       0       0       0
  3481 ;;      Locals:         0       5       0       0       0
  3482 ;;      Temps:          0      10       0       0       0
  3483 ;;      Totals:         0      19       0       0       0
  3484 ;;Total ram usage:       19 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    3
  3487 ;; This function calls:
  3488 ;;		___awdiv
  3489 ;;		___awmod
  3490 ;;		___flmul
  3491 ;; This function is called by:
  3492 ;;		_sprintf
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           
  3497                           ;psect for function _scale
  3498  0C9D                     _scale:
  3499                           
  3500                           ;incstack = 0
  3501                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3502                           ;scale@scl stored from wreg
  3503  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3504  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3505  0C9F  00D7               	movwf	scale@scl
  3506  0CA0                     l4231:
  3507                           
  3508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3509  0CA0  1FD7               	btfss	scale@scl,7
  3510  0CA1  2CA3               	goto	u6611
  3511  0CA2  2CA4               	goto	u6610
  3512  0CA3                     u6611:
  3513  0CA3  2E53               	goto	l4253
  3514  0CA4                     u6610:
  3515  0CA4                     l4233:
  3516                           
  3517                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3518  0CA4  09D7               	comf	scale@scl,f
  3519  0CA5  0AD7               	incf	scale@scl,f
  3520  0CA6                     l4235:
  3521                           
  3522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3523  0CA6  0857               	movf	scale@scl,w
  3524  0CA7  3A80               	xorlw	128
  3525  0CA8  3E12               	addlw	-238
  3526  0CA9  1C03               	skipc
  3527  0CAA  2CAC               	goto	u6621
  3528  0CAB  2CAD               	goto	u6620
  3529  0CAC                     u6621:
  3530  0CAC  2D97               	goto	l4243
  3531  0CAD                     u6620:
  3532  0CAD                     l4237:
  3533                           
  3534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3535  0CAD  300A               	movlw	10
  3536  0CAE  00A2               	movwf	___awdiv@divisor
  3537  0CAF  3000               	movlw	0
  3538  0CB0  00A3               	movwf	___awdiv@divisor+1
  3539  0CB1  0857               	movf	scale@scl,w
  3540  0CB2  00F5               	movwf	___awmod@dividend
  3541  0CB3  01F6               	clrf	___awmod@dividend+1
  3542  0CB4  1BF5               	btfsc	___awmod@dividend,7
  3543  0CB5  03F6               	decf	___awmod@dividend+1,f
  3544  0CB6  3064               	movlw	100
  3545  0CB7  00F3               	movwf	___awmod@divisor
  3546  0CB8  3000               	movlw	0
  3547  0CB9  00F4               	movwf	___awmod@divisor+1
  3548  0CBA  160A  158A  225C  120A  158A  	fcall	___awmod
  3549  0CBF  0874               	movf	?___awmod+1,w
  3550  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3551  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3552  0CC2  00A5               	movwf	___awdiv@dividend+1
  3553  0CC3  0873               	movf	?___awmod,w
  3554  0CC4  00A4               	movwf	___awdiv@dividend
  3555  0CC5  160A  158A  23E1  120A  158A  	fcall	___awdiv
  3556  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3557  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3558  0CCC  0822               	movf	?___awdiv,w
  3559  0CCD  00C9               	movwf	??_scale
  3560  0CCE  3001               	movlw	1
  3561  0CCF                     u6635:
  3562  0CCF  1003               	clrc
  3563  0CD0  0DC9               	rlf	??_scale,f
  3564  0CD1  3EFF               	addlw	-1
  3565  0CD2  1D03               	skipz
  3566  0CD3  2CCF               	goto	u6635
  3567  0CD4  1003               	clrc
  3568  0CD5  0D49               	rlf	??_scale,w
  3569  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3570  0CD7  0084               	movwf	4
  3571  0CD8  160A  158A  200A  120A  158A  	fcall	stringdir
  3572  0CDD  00CA               	movwf	??_scale+1
  3573  0CDE  160A  158A  200A  120A  158A  	fcall	stringdir
  3574  0CE3  00CB               	movwf	??_scale+2
  3575  0CE4  160A  158A  200A  120A  158A  	fcall	stringdir
  3576  0CE9  00CC               	movwf	??_scale+3
  3577  0CEA  160A  158A  200A  120A  158A  	fcall	stringdir
  3578  0CEF  00CD               	movwf	??_scale+4
  3579  0CF0  084D               	movf	??_scale+4,w
  3580  0CF1  00AE               	movwf	___flmul@b+3
  3581  0CF2  084C               	movf	??_scale+3,w
  3582  0CF3  00AD               	movwf	___flmul@b+2
  3583  0CF4  084B               	movf	??_scale+2,w
  3584  0CF5  00AC               	movwf	___flmul@b+1
  3585  0CF6  084A               	movf	??_scale+1,w
  3586  0CF7  00AB               	movwf	___flmul@b
  3587  0CF8  3064               	movlw	100
  3588  0CF9  00A2               	movwf	___awdiv@divisor
  3589  0CFA  3000               	movlw	0
  3590  0CFB  00A3               	movwf	___awdiv@divisor+1
  3591  0CFC  0857               	movf	scale@scl,w
  3592  0CFD  00A4               	movwf	___awdiv@dividend
  3593  0CFE  01A5               	clrf	___awdiv@dividend+1
  3594  0CFF  1BA4               	btfsc	___awdiv@dividend,7
  3595  0D00  03A5               	decf	___awdiv@dividend+1,f
  3596  0D01  160A  158A  23E1  120A  158A  	fcall	___awdiv
  3597  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3598  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3599  0D08  0822               	movf	?___awdiv,w
  3600  0D09  00CE               	movwf	??_scale+5
  3601  0D0A  3001               	movlw	1
  3602  0D0B                     u6645:
  3603  0D0B  1003               	clrc
  3604  0D0C  0DCE               	rlf	??_scale+5,f
  3605  0D0D  3EFF               	addlw	-1
  3606  0D0E  1D03               	skipz
  3607  0D0F  2D0B               	goto	u6645
  3608  0D10  1003               	clrc
  3609  0D11  0D4E               	rlf	??_scale+5,w
  3610  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3611  0D13  0084               	movwf	4
  3612  0D14  160A  158A  200A  120A  158A  	fcall	stringdir
  3613  0D19  00CF               	movwf	??_scale+6
  3614  0D1A  160A  158A  200A  120A  158A  	fcall	stringdir
  3615  0D1F  00D0               	movwf	??_scale+7
  3616  0D20  160A  158A  200A  120A  158A  	fcall	stringdir
  3617  0D25  00D1               	movwf	??_scale+8
  3618  0D26  160A  158A  200A  120A  158A  	fcall	stringdir
  3619  0D2B  00D2               	movwf	??_scale+9
  3620  0D2C  0852               	movf	??_scale+9,w
  3621  0D2D  00B2               	movwf	___flmul@a+3
  3622  0D2E  0851               	movf	??_scale+8,w
  3623  0D2F  00B1               	movwf	___flmul@a+2
  3624  0D30  0850               	movf	??_scale+7,w
  3625  0D31  00B0               	movwf	___flmul@a+1
  3626  0D32  084F               	movf	??_scale+6,w
  3627  0D33  00AF               	movwf	___flmul@a
  3628  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  3629  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3630  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3631  0D3B  082E               	movf	?___flmul+3,w
  3632  0D3C  00D6               	movwf	_scale$1235+3
  3633  0D3D  082D               	movf	?___flmul+2,w
  3634  0D3E  00D5               	movwf	_scale$1235+2
  3635  0D3F  082C               	movf	?___flmul+1,w
  3636  0D40  00D4               	movwf	_scale$1235+1
  3637  0D41  082B               	movf	?___flmul,w
  3638  0D42  00D3               	movwf	_scale$1235
  3639                           
  3640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3641  0D43  300A               	movlw	10
  3642  0D44  00F3               	movwf	___awmod@divisor
  3643  0D45  3000               	movlw	0
  3644  0D46  00F4               	movwf	___awmod@divisor+1
  3645  0D47  0857               	movf	scale@scl,w
  3646  0D48  00F5               	movwf	___awmod@dividend
  3647  0D49  01F6               	clrf	___awmod@dividend+1
  3648  0D4A  1BF5               	btfsc	___awmod@dividend,7
  3649  0D4B  03F6               	decf	___awmod@dividend+1,f
  3650  0D4C  160A  158A  225C  120A  158A  	fcall	___awmod
  3651  0D51  0873               	movf	?___awmod,w
  3652  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3653  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3654  0D54  00C9               	movwf	??_scale
  3655  0D55  3001               	movlw	1
  3656  0D56                     u6655:
  3657  0D56  1003               	clrc
  3658  0D57  0DC9               	rlf	??_scale,f
  3659  0D58  3EFF               	addlw	-1
  3660  0D59  1D03               	skipz
  3661  0D5A  2D56               	goto	u6655
  3662  0D5B  1003               	clrc
  3663  0D5C  0D49               	rlf	??_scale,w
  3664  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3665  0D5E  0084               	movwf	4
  3666  0D5F  160A  158A  200A  120A  158A  	fcall	stringdir
  3667  0D64  00CA               	movwf	??_scale+1
  3668  0D65  160A  158A  200A  120A  158A  	fcall	stringdir
  3669  0D6A  00CB               	movwf	??_scale+2
  3670  0D6B  160A  158A  200A  120A  158A  	fcall	stringdir
  3671  0D70  00CC               	movwf	??_scale+3
  3672  0D71  160A  158A  200A  120A  158A  	fcall	stringdir
  3673  0D76  00CD               	movwf	??_scale+4
  3674  0D77  084D               	movf	??_scale+4,w
  3675  0D78  00AE               	movwf	___flmul@b+3
  3676  0D79  084C               	movf	??_scale+3,w
  3677  0D7A  00AD               	movwf	___flmul@b+2
  3678  0D7B  084B               	movf	??_scale+2,w
  3679  0D7C  00AC               	movwf	___flmul@b+1
  3680  0D7D  084A               	movf	??_scale+1,w
  3681  0D7E  00AB               	movwf	___flmul@b
  3682  0D7F  0856               	movf	_scale$1235+3,w
  3683  0D80  00B2               	movwf	___flmul@a+3
  3684  0D81  0855               	movf	_scale$1235+2,w
  3685  0D82  00B1               	movwf	___flmul@a+2
  3686  0D83  0854               	movf	_scale$1235+1,w
  3687  0D84  00B0               	movwf	___flmul@a+1
  3688  0D85  0853               	movf	_scale$1235,w
  3689  0D86  00AF               	movwf	___flmul@a
  3690  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3691  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3692  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3693  0D8E  082E               	movf	?___flmul+3,w
  3694  0D8F  00C8               	movwf	?_scale+3
  3695  0D90  082D               	movf	?___flmul+2,w
  3696  0D91  00C7               	movwf	?_scale+2
  3697  0D92  082C               	movf	?___flmul+1,w
  3698  0D93  00C6               	movwf	?_scale+1
  3699  0D94  082B               	movf	?___flmul,w
  3700  0D95  00C5               	movwf	?_scale
  3701  0D96  2FFF               	goto	l353
  3702  0D97                     l4243:
  3703  0D97  0857               	movf	scale@scl,w
  3704  0D98  3A80               	xorlw	128
  3705  0D99  3E75               	addlw	-139
  3706  0D9A  1C03               	skipc
  3707  0D9B  2D9D               	goto	u6661
  3708  0D9C  2D9E               	goto	u6660
  3709  0D9D                     u6661:
  3710  0D9D  2E26               	goto	l4249
  3711  0D9E                     u6660:
  3712  0D9E                     l4245:
  3713                           
  3714                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3715  0D9E  300A               	movlw	10
  3716  0D9F  00F3               	movwf	___awmod@divisor
  3717  0DA0  3000               	movlw	0
  3718  0DA1  00F4               	movwf	___awmod@divisor+1
  3719  0DA2  0857               	movf	scale@scl,w
  3720  0DA3  00F5               	movwf	___awmod@dividend
  3721  0DA4  01F6               	clrf	___awmod@dividend+1
  3722  0DA5  1BF5               	btfsc	___awmod@dividend,7
  3723  0DA6  03F6               	decf	___awmod@dividend+1,f
  3724  0DA7  160A  158A  225C  120A  158A  	fcall	___awmod
  3725  0DAC  0873               	movf	?___awmod,w
  3726  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3727  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3728  0DAF  00C9               	movwf	??_scale
  3729  0DB0  3001               	movlw	1
  3730  0DB1                     u6675:
  3731  0DB1  1003               	clrc
  3732  0DB2  0DC9               	rlf	??_scale,f
  3733  0DB3  3EFF               	addlw	-1
  3734  0DB4  1D03               	skipz
  3735  0DB5  2DB1               	goto	u6675
  3736  0DB6  1003               	clrc
  3737  0DB7  0D49               	rlf	??_scale,w
  3738  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3739  0DB9  0084               	movwf	4
  3740  0DBA  160A  158A  200A  120A  158A  	fcall	stringdir
  3741  0DBF  00CA               	movwf	??_scale+1
  3742  0DC0  160A  158A  200A  120A  158A  	fcall	stringdir
  3743  0DC5  00CB               	movwf	??_scale+2
  3744  0DC6  160A  158A  200A  120A  158A  	fcall	stringdir
  3745  0DCB  00CC               	movwf	??_scale+3
  3746  0DCC  160A  158A  200A  120A  158A  	fcall	stringdir
  3747  0DD1  00CD               	movwf	??_scale+4
  3748  0DD2  084D               	movf	??_scale+4,w
  3749  0DD3  00AE               	movwf	___flmul@b+3
  3750  0DD4  084C               	movf	??_scale+3,w
  3751  0DD5  00AD               	movwf	___flmul@b+2
  3752  0DD6  084B               	movf	??_scale+2,w
  3753  0DD7  00AC               	movwf	___flmul@b+1
  3754  0DD8  084A               	movf	??_scale+1,w
  3755  0DD9  00AB               	movwf	___flmul@b
  3756  0DDA  300A               	movlw	10
  3757  0DDB  00A2               	movwf	___awdiv@divisor
  3758  0DDC  3000               	movlw	0
  3759  0DDD  00A3               	movwf	___awdiv@divisor+1
  3760  0DDE  0857               	movf	scale@scl,w
  3761  0DDF  00A4               	movwf	___awdiv@dividend
  3762  0DE0  01A5               	clrf	___awdiv@dividend+1
  3763  0DE1  1BA4               	btfsc	___awdiv@dividend,7
  3764  0DE2  03A5               	decf	___awdiv@dividend+1,f
  3765  0DE3  160A  158A  23E1  120A  158A  	fcall	___awdiv
  3766  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3767  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3768  0DEA  0822               	movf	?___awdiv,w
  3769  0DEB  00CE               	movwf	??_scale+5
  3770  0DEC  3001               	movlw	1
  3771  0DED                     u6685:
  3772  0DED  1003               	clrc
  3773  0DEE  0DCE               	rlf	??_scale+5,f
  3774  0DEF  3EFF               	addlw	-1
  3775  0DF0  1D03               	skipz
  3776  0DF1  2DED               	goto	u6685
  3777  0DF2  1003               	clrc
  3778  0DF3  0D4E               	rlf	??_scale+5,w
  3779  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3780  0DF5  0084               	movwf	4
  3781  0DF6  160A  158A  200A  120A  158A  	fcall	stringdir
  3782  0DFB  00CF               	movwf	??_scale+6
  3783  0DFC  160A  158A  200A  120A  158A  	fcall	stringdir
  3784  0E01  00D0               	movwf	??_scale+7
  3785  0E02  160A  158A  200A  120A  158A  	fcall	stringdir
  3786  0E07  00D1               	movwf	??_scale+8
  3787  0E08  160A  158A  200A  120A  158A  	fcall	stringdir
  3788  0E0D  00D2               	movwf	??_scale+9
  3789  0E0E  0852               	movf	??_scale+9,w
  3790  0E0F  00B2               	movwf	___flmul@a+3
  3791  0E10  0851               	movf	??_scale+8,w
  3792  0E11  00B1               	movwf	___flmul@a+2
  3793  0E12  0850               	movf	??_scale+7,w
  3794  0E13  00B0               	movwf	___flmul@a+1
  3795  0E14  084F               	movf	??_scale+6,w
  3796  0E15  00AF               	movwf	___flmul@a
  3797  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3798  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3799  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3800  0E1D  082E               	movf	?___flmul+3,w
  3801  0E1E  00C8               	movwf	?_scale+3
  3802  0E1F  082D               	movf	?___flmul+2,w
  3803  0E20  00C7               	movwf	?_scale+2
  3804  0E21  082C               	movf	?___flmul+1,w
  3805  0E22  00C6               	movwf	?_scale+1
  3806  0E23  082B               	movf	?___flmul,w
  3807  0E24  00C5               	movwf	?_scale
  3808  0E25  2FFF               	goto	l353
  3809  0E26                     l4249:
  3810                           
  3811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3812  0E26  0857               	movf	scale@scl,w
  3813  0E27  00C9               	movwf	??_scale
  3814  0E28  3001               	movlw	1
  3815  0E29                     u6695:
  3816  0E29  1003               	clrc
  3817  0E2A  0DC9               	rlf	??_scale,f
  3818  0E2B  3EFF               	addlw	-1
  3819  0E2C  1D03               	skipz
  3820  0E2D  2E29               	goto	u6695
  3821  0E2E  1003               	clrc
  3822  0E2F  0D49               	rlf	??_scale,w
  3823  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3824  0E31  0084               	movwf	4
  3825  0E32  160A  158A  200A  120A  158A  	fcall	stringdir
  3826  0E37  00CA               	movwf	??_scale+1
  3827  0E38  160A  158A  200A  120A  158A  	fcall	stringdir
  3828  0E3D  00CB               	movwf	??_scale+2
  3829  0E3E  160A  158A  200A  120A  158A  	fcall	stringdir
  3830  0E43  00CC               	movwf	??_scale+3
  3831  0E44  160A  158A  200A  120A  158A  	fcall	stringdir
  3832  0E49  00CD               	movwf	??_scale+4
  3833  0E4A  084D               	movf	??_scale+4,w
  3834  0E4B  00C8               	movwf	?_scale+3
  3835  0E4C  084C               	movf	??_scale+3,w
  3836  0E4D  00C7               	movwf	?_scale+2
  3837  0E4E  084B               	movf	??_scale+2,w
  3838  0E4F  00C6               	movwf	?_scale+1
  3839  0E50  084A               	movf	??_scale+1,w
  3840  0E51  00C5               	movwf	?_scale
  3841  0E52  2FFF               	goto	l353
  3842  0E53                     l4253:
  3843                           
  3844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3845  0E53  0857               	movf	scale@scl,w
  3846  0E54  3A80               	xorlw	128
  3847  0E55  3E12               	addlw	-238
  3848  0E56  1C03               	skipc
  3849  0E57  2E59               	goto	u6701
  3850  0E58  2E5A               	goto	u6700
  3851  0E59                     u6701:
  3852  0E59  2F44               	goto	l4261
  3853  0E5A                     u6700:
  3854  0E5A                     l4255:
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3857  0E5A  300A               	movlw	10
  3858  0E5B  00A2               	movwf	___awdiv@divisor
  3859  0E5C  3000               	movlw	0
  3860  0E5D  00A3               	movwf	___awdiv@divisor+1
  3861  0E5E  0857               	movf	scale@scl,w
  3862  0E5F  00F5               	movwf	___awmod@dividend
  3863  0E60  01F6               	clrf	___awmod@dividend+1
  3864  0E61  1BF5               	btfsc	___awmod@dividend,7
  3865  0E62  03F6               	decf	___awmod@dividend+1,f
  3866  0E63  3064               	movlw	100
  3867  0E64  00F3               	movwf	___awmod@divisor
  3868  0E65  3000               	movlw	0
  3869  0E66  00F4               	movwf	___awmod@divisor+1
  3870  0E67  160A  158A  225C  120A  158A  	fcall	___awmod
  3871  0E6C  0874               	movf	?___awmod+1,w
  3872  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3873  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3874  0E6F  00A5               	movwf	___awdiv@dividend+1
  3875  0E70  0873               	movf	?___awmod,w
  3876  0E71  00A4               	movwf	___awdiv@dividend
  3877  0E72  160A  158A  23E1  120A  158A  	fcall	___awdiv
  3878  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3879  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3880  0E79  0822               	movf	?___awdiv,w
  3881  0E7A  00C9               	movwf	??_scale
  3882  0E7B  3001               	movlw	1
  3883  0E7C                     u6715:
  3884  0E7C  1003               	clrc
  3885  0E7D  0DC9               	rlf	??_scale,f
  3886  0E7E  3EFF               	addlw	-1
  3887  0E7F  1D03               	skipz
  3888  0E80  2E7C               	goto	u6715
  3889  0E81  1003               	clrc
  3890  0E82  0D49               	rlf	??_scale,w
  3891  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3892  0E84  0084               	movwf	4
  3893  0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  3894  0E8A  00CA               	movwf	??_scale+1
  3895  0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  3896  0E90  00CB               	movwf	??_scale+2
  3897  0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  3898  0E96  00CC               	movwf	??_scale+3
  3899  0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  3900  0E9C  00CD               	movwf	??_scale+4
  3901  0E9D  084D               	movf	??_scale+4,w
  3902  0E9E  00AE               	movwf	___flmul@b+3
  3903  0E9F  084C               	movf	??_scale+3,w
  3904  0EA0  00AD               	movwf	___flmul@b+2
  3905  0EA1  084B               	movf	??_scale+2,w
  3906  0EA2  00AC               	movwf	___flmul@b+1
  3907  0EA3  084A               	movf	??_scale+1,w
  3908  0EA4  00AB               	movwf	___flmul@b
  3909  0EA5  3064               	movlw	100
  3910  0EA6  00A2               	movwf	___awdiv@divisor
  3911  0EA7  3000               	movlw	0
  3912  0EA8  00A3               	movwf	___awdiv@divisor+1
  3913  0EA9  0857               	movf	scale@scl,w
  3914  0EAA  00A4               	movwf	___awdiv@dividend
  3915  0EAB  01A5               	clrf	___awdiv@dividend+1
  3916  0EAC  1BA4               	btfsc	___awdiv@dividend,7
  3917  0EAD  03A5               	decf	___awdiv@dividend+1,f
  3918  0EAE  160A  158A  23E1  120A  158A  	fcall	___awdiv
  3919  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3920  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3921  0EB5  0822               	movf	?___awdiv,w
  3922  0EB6  00CE               	movwf	??_scale+5
  3923  0EB7  3001               	movlw	1
  3924  0EB8                     u6725:
  3925  0EB8  1003               	clrc
  3926  0EB9  0DCE               	rlf	??_scale+5,f
  3927  0EBA  3EFF               	addlw	-1
  3928  0EBB  1D03               	skipz
  3929  0EBC  2EB8               	goto	u6725
  3930  0EBD  1003               	clrc
  3931  0EBE  0D4E               	rlf	??_scale+5,w
  3932  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3933  0EC0  0084               	movwf	4
  3934  0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  3935  0EC6  00CF               	movwf	??_scale+6
  3936  0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  3937  0ECC  00D0               	movwf	??_scale+7
  3938  0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  3939  0ED2  00D1               	movwf	??_scale+8
  3940  0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  3941  0ED8  00D2               	movwf	??_scale+9
  3942  0ED9  0852               	movf	??_scale+9,w
  3943  0EDA  00B2               	movwf	___flmul@a+3
  3944  0EDB  0851               	movf	??_scale+8,w
  3945  0EDC  00B1               	movwf	___flmul@a+2
  3946  0EDD  0850               	movf	??_scale+7,w
  3947  0EDE  00B0               	movwf	___flmul@a+1
  3948  0EDF  084F               	movf	??_scale+6,w
  3949  0EE0  00AF               	movwf	___flmul@a
  3950  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3951  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3952  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3953  0EE8  082E               	movf	?___flmul+3,w
  3954  0EE9  00D6               	movwf	_scale$1235+3
  3955  0EEA  082D               	movf	?___flmul+2,w
  3956  0EEB  00D5               	movwf	_scale$1235+2
  3957  0EEC  082C               	movf	?___flmul+1,w
  3958  0EED  00D4               	movwf	_scale$1235+1
  3959  0EEE  082B               	movf	?___flmul,w
  3960  0EEF  00D3               	movwf	_scale$1235
  3961                           
  3962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3963  0EF0  300A               	movlw	10
  3964  0EF1  00F3               	movwf	___awmod@divisor
  3965  0EF2  3000               	movlw	0
  3966  0EF3  00F4               	movwf	___awmod@divisor+1
  3967  0EF4  0857               	movf	scale@scl,w
  3968  0EF5  00F5               	movwf	___awmod@dividend
  3969  0EF6  01F6               	clrf	___awmod@dividend+1
  3970  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3971  0EF8  03F6               	decf	___awmod@dividend+1,f
  3972  0EF9  160A  158A  225C  120A  158A  	fcall	___awmod
  3973  0EFE  0873               	movf	?___awmod,w
  3974  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3975  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3976  0F01  00C9               	movwf	??_scale
  3977  0F02  3001               	movlw	1
  3978  0F03                     u6735:
  3979  0F03  1003               	clrc
  3980  0F04  0DC9               	rlf	??_scale,f
  3981  0F05  3EFF               	addlw	-1
  3982  0F06  1D03               	skipz
  3983  0F07  2F03               	goto	u6735
  3984  0F08  1003               	clrc
  3985  0F09  0D49               	rlf	??_scale,w
  3986  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3987  0F0B  0084               	movwf	4
  3988  0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  3989  0F11  00CA               	movwf	??_scale+1
  3990  0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  3991  0F17  00CB               	movwf	??_scale+2
  3992  0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  3993  0F1D  00CC               	movwf	??_scale+3
  3994  0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  3995  0F23  00CD               	movwf	??_scale+4
  3996  0F24  084D               	movf	??_scale+4,w
  3997  0F25  00AE               	movwf	___flmul@b+3
  3998  0F26  084C               	movf	??_scale+3,w
  3999  0F27  00AD               	movwf	___flmul@b+2
  4000  0F28  084B               	movf	??_scale+2,w
  4001  0F29  00AC               	movwf	___flmul@b+1
  4002  0F2A  084A               	movf	??_scale+1,w
  4003  0F2B  00AB               	movwf	___flmul@b
  4004  0F2C  0856               	movf	_scale$1235+3,w
  4005  0F2D  00B2               	movwf	___flmul@a+3
  4006  0F2E  0855               	movf	_scale$1235+2,w
  4007  0F2F  00B1               	movwf	___flmul@a+2
  4008  0F30  0854               	movf	_scale$1235+1,w
  4009  0F31  00B0               	movwf	___flmul@a+1
  4010  0F32  0853               	movf	_scale$1235,w
  4011  0F33  00AF               	movwf	___flmul@a
  4012  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  4013  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4014  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4015  0F3B  082E               	movf	?___flmul+3,w
  4016  0F3C  00C8               	movwf	?_scale+3
  4017  0F3D  082D               	movf	?___flmul+2,w
  4018  0F3E  00C7               	movwf	?_scale+2
  4019  0F3F  082C               	movf	?___flmul+1,w
  4020  0F40  00C6               	movwf	?_scale+1
  4021  0F41  082B               	movf	?___flmul,w
  4022  0F42  00C5               	movwf	?_scale
  4023  0F43  2FFF               	goto	l353
  4024  0F44                     l4261:
  4025  0F44  0857               	movf	scale@scl,w
  4026  0F45  3A80               	xorlw	128
  4027  0F46  3E75               	addlw	-139
  4028  0F47  1C03               	skipc
  4029  0F48  2F4A               	goto	u6741
  4030  0F49  2F4B               	goto	u6740
  4031  0F4A                     u6741:
  4032  0F4A  2FD3               	goto	l4267
  4033  0F4B                     u6740:
  4034  0F4B                     l4263:
  4035                           
  4036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4037  0F4B  300A               	movlw	10
  4038  0F4C  00F3               	movwf	___awmod@divisor
  4039  0F4D  3000               	movlw	0
  4040  0F4E  00F4               	movwf	___awmod@divisor+1
  4041  0F4F  0857               	movf	scale@scl,w
  4042  0F50  00F5               	movwf	___awmod@dividend
  4043  0F51  01F6               	clrf	___awmod@dividend+1
  4044  0F52  1BF5               	btfsc	___awmod@dividend,7
  4045  0F53  03F6               	decf	___awmod@dividend+1,f
  4046  0F54  160A  158A  225C  120A  158A  	fcall	___awmod
  4047  0F59  0873               	movf	?___awmod,w
  4048  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4049  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4050  0F5C  00C9               	movwf	??_scale
  4051  0F5D  3001               	movlw	1
  4052  0F5E                     u6755:
  4053  0F5E  1003               	clrc
  4054  0F5F  0DC9               	rlf	??_scale,f
  4055  0F60  3EFF               	addlw	-1
  4056  0F61  1D03               	skipz
  4057  0F62  2F5E               	goto	u6755
  4058  0F63  1003               	clrc
  4059  0F64  0D49               	rlf	??_scale,w
  4060  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4061  0F66  0084               	movwf	4
  4062  0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  4063  0F6C  00CA               	movwf	??_scale+1
  4064  0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  4065  0F72  00CB               	movwf	??_scale+2
  4066  0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  4067  0F78  00CC               	movwf	??_scale+3
  4068  0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  4069  0F7E  00CD               	movwf	??_scale+4
  4070  0F7F  084D               	movf	??_scale+4,w
  4071  0F80  00AE               	movwf	___flmul@b+3
  4072  0F81  084C               	movf	??_scale+3,w
  4073  0F82  00AD               	movwf	___flmul@b+2
  4074  0F83  084B               	movf	??_scale+2,w
  4075  0F84  00AC               	movwf	___flmul@b+1
  4076  0F85  084A               	movf	??_scale+1,w
  4077  0F86  00AB               	movwf	___flmul@b
  4078  0F87  300A               	movlw	10
  4079  0F88  00A2               	movwf	___awdiv@divisor
  4080  0F89  3000               	movlw	0
  4081  0F8A  00A3               	movwf	___awdiv@divisor+1
  4082  0F8B  0857               	movf	scale@scl,w
  4083  0F8C  00A4               	movwf	___awdiv@dividend
  4084  0F8D  01A5               	clrf	___awdiv@dividend+1
  4085  0F8E  1BA4               	btfsc	___awdiv@dividend,7
  4086  0F8F  03A5               	decf	___awdiv@dividend+1,f
  4087  0F90  160A  158A  23E1  120A  158A  	fcall	___awdiv
  4088  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4089  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4090  0F97  0822               	movf	?___awdiv,w
  4091  0F98  00CE               	movwf	??_scale+5
  4092  0F99  3001               	movlw	1
  4093  0F9A                     u6765:
  4094  0F9A  1003               	clrc
  4095  0F9B  0DCE               	rlf	??_scale+5,f
  4096  0F9C  3EFF               	addlw	-1
  4097  0F9D  1D03               	skipz
  4098  0F9E  2F9A               	goto	u6765
  4099  0F9F  1003               	clrc
  4100  0FA0  0D4E               	rlf	??_scale+5,w
  4101  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4102  0FA2  0084               	movwf	4
  4103  0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  4104  0FA8  00CF               	movwf	??_scale+6
  4105  0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  4106  0FAE  00D0               	movwf	??_scale+7
  4107  0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  4108  0FB4  00D1               	movwf	??_scale+8
  4109  0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  4110  0FBA  00D2               	movwf	??_scale+9
  4111  0FBB  0852               	movf	??_scale+9,w
  4112  0FBC  00B2               	movwf	___flmul@a+3
  4113  0FBD  0851               	movf	??_scale+8,w
  4114  0FBE  00B1               	movwf	___flmul@a+2
  4115  0FBF  0850               	movf	??_scale+7,w
  4116  0FC0  00B0               	movwf	___flmul@a+1
  4117  0FC1  084F               	movf	??_scale+6,w
  4118  0FC2  00AF               	movwf	___flmul@a
  4119  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  4120  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4121  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4122  0FCA  082E               	movf	?___flmul+3,w
  4123  0FCB  00C8               	movwf	?_scale+3
  4124  0FCC  082D               	movf	?___flmul+2,w
  4125  0FCD  00C7               	movwf	?_scale+2
  4126  0FCE  082C               	movf	?___flmul+1,w
  4127  0FCF  00C6               	movwf	?_scale+1
  4128  0FD0  082B               	movf	?___flmul,w
  4129  0FD1  00C5               	movwf	?_scale
  4130  0FD2  2FFF               	goto	l353
  4131  0FD3                     l4267:
  4132                           
  4133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4134  0FD3  0857               	movf	scale@scl,w
  4135  0FD4  00C9               	movwf	??_scale
  4136  0FD5  3001               	movlw	1
  4137  0FD6                     u6775:
  4138  0FD6  1003               	clrc
  4139  0FD7  0DC9               	rlf	??_scale,f
  4140  0FD8  3EFF               	addlw	-1
  4141  0FD9  1D03               	skipz
  4142  0FDA  2FD6               	goto	u6775
  4143  0FDB  1003               	clrc
  4144  0FDC  0D49               	rlf	??_scale,w
  4145  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4146  0FDE  0084               	movwf	4
  4147  0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  4148  0FE4  00CA               	movwf	??_scale+1
  4149  0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  4150  0FEA  00CB               	movwf	??_scale+2
  4151  0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  4152  0FF0  00CC               	movwf	??_scale+3
  4153  0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  4154  0FF6  00CD               	movwf	??_scale+4
  4155  0FF7  084D               	movf	??_scale+4,w
  4156  0FF8  00C8               	movwf	?_scale+3
  4157  0FF9  084C               	movf	??_scale+3,w
  4158  0FFA  00C7               	movwf	?_scale+2
  4159  0FFB  084B               	movf	??_scale+2,w
  4160  0FFC  00C6               	movwf	?_scale+1
  4161  0FFD  084A               	movf	??_scale+1,w
  4162  0FFE  00C5               	movwf	?_scale
  4163  0FFF                     l353:
  4164  0FFF  0008               	return
  4165  1000                     __end_of_scale:
  4166                           
  4167                           	psect	text10
  4168  1A5C                     __ptext10:	
  4169 ;; *************** function ___awmod *****************
  4170 ;; Defined at:
  4171 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  divisor         2    3[COMMON] int 
  4174 ;;  dividend        2    5[COMMON] int 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  sign            1    1[BANK0 ] unsigned char 
  4177 ;;  counter         1    0[BANK0 ] unsigned char 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  2    3[COMMON] int 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4187 ;;      Params:         4       0       0       0       0
  4188 ;;      Locals:         0       2       0       0       0
  4189 ;;      Temps:          1       0       0       0       0
  4190 ;;      Totals:         5       2       0       0       0
  4191 ;;Total ram usage:        7 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    1
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_scale
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           
  4202                           ;psect for function ___awmod
  4203  1A5C                     ___awmod:
  4204  1A5C                     l4107:	
  4205                           ;incstack = 0
  4206                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4207                           
  4208  1A5C  1283               	bcf	3,5	;RP0=0, select bank0
  4209  1A5D  1303               	bcf	3,6	;RP1=0, select bank0
  4210  1A5E  01A1               	clrf	___awmod@sign
  4211  1A5F                     l4109:
  4212  1A5F  1FF6               	btfss	___awmod@dividend+1,7
  4213  1A60  2A62               	goto	u6311
  4214  1A61  2A63               	goto	u6310
  4215  1A62                     u6311:
  4216  1A62  2A6A               	goto	l4115
  4217  1A63                     u6310:
  4218  1A63                     l4111:
  4219  1A63  09F5               	comf	___awmod@dividend,f
  4220  1A64  09F6               	comf	___awmod@dividend+1,f
  4221  1A65  0AF5               	incf	___awmod@dividend,f
  4222  1A66  1903               	skipnz
  4223  1A67  0AF6               	incf	___awmod@dividend+1,f
  4224  1A68                     l4113:
  4225  1A68  01A1               	clrf	___awmod@sign
  4226  1A69  0AA1               	incf	___awmod@sign,f
  4227  1A6A                     l4115:
  4228  1A6A  1FF4               	btfss	___awmod@divisor+1,7
  4229  1A6B  2A6D               	goto	u6321
  4230  1A6C  2A6E               	goto	u6320
  4231  1A6D                     u6321:
  4232  1A6D  2A73               	goto	l4119
  4233  1A6E                     u6320:
  4234  1A6E                     l4117:
  4235  1A6E  09F3               	comf	___awmod@divisor,f
  4236  1A6F  09F4               	comf	___awmod@divisor+1,f
  4237  1A70  0AF3               	incf	___awmod@divisor,f
  4238  1A71  1903               	skipnz
  4239  1A72  0AF4               	incf	___awmod@divisor+1,f
  4240  1A73                     l4119:
  4241  1A73  0873               	movf	___awmod@divisor,w
  4242  1A74  0474               	iorwf	___awmod@divisor+1,w
  4243  1A75  1903               	btfsc	3,2
  4244  1A76  2A78               	goto	u6331
  4245  1A77  2A79               	goto	u6330
  4246  1A78                     u6331:
  4247  1A78  2AA8               	goto	l4137
  4248  1A79                     u6330:
  4249  1A79                     l4121:
  4250  1A79  01A0               	clrf	___awmod@counter
  4251  1A7A  0AA0               	incf	___awmod@counter,f
  4252  1A7B  2A87               	goto	l4127
  4253  1A7C                     l4123:
  4254  1A7C  3001               	movlw	1
  4255  1A7D                     u6345:
  4256  1A7D  1003               	clrc
  4257  1A7E  0DF3               	rlf	___awmod@divisor,f
  4258  1A7F  0DF4               	rlf	___awmod@divisor+1,f
  4259  1A80  3EFF               	addlw	-1
  4260  1A81  1D03               	skipz
  4261  1A82  2A7D               	goto	u6345
  4262  1A83                     l4125:
  4263  1A83  3001               	movlw	1
  4264  1A84  00F7               	movwf	??___awmod
  4265  1A85  0877               	movf	??___awmod,w
  4266  1A86  07A0               	addwf	___awmod@counter,f
  4267  1A87                     l4127:
  4268  1A87  1FF4               	btfss	___awmod@divisor+1,7
  4269  1A88  2A8A               	goto	u6351
  4270  1A89  2A8B               	goto	u6350
  4271  1A8A                     u6351:
  4272  1A8A  2A7C               	goto	l4123
  4273  1A8B                     u6350:
  4274  1A8B                     l4129:
  4275  1A8B  0874               	movf	___awmod@divisor+1,w
  4276  1A8C  0276               	subwf	___awmod@dividend+1,w
  4277  1A8D  1D03               	skipz
  4278  1A8E  2A91               	goto	u6365
  4279  1A8F  0873               	movf	___awmod@divisor,w
  4280  1A90  0275               	subwf	___awmod@dividend,w
  4281  1A91                     u6365:
  4282  1A91  1C03               	skipc
  4283  1A92  2A94               	goto	u6361
  4284  1A93  2A95               	goto	u6360
  4285  1A94                     u6361:
  4286  1A94  2A9B               	goto	l4133
  4287  1A95                     u6360:
  4288  1A95                     l4131:
  4289  1A95  0873               	movf	___awmod@divisor,w
  4290  1A96  02F5               	subwf	___awmod@dividend,f
  4291  1A97  0874               	movf	___awmod@divisor+1,w
  4292  1A98  1C03               	skipc
  4293  1A99  03F6               	decf	___awmod@dividend+1,f
  4294  1A9A  02F6               	subwf	___awmod@dividend+1,f
  4295  1A9B                     l4133:
  4296  1A9B  3001               	movlw	1
  4297  1A9C                     u6375:
  4298  1A9C  1003               	clrc
  4299  1A9D  0CF4               	rrf	___awmod@divisor+1,f
  4300  1A9E  0CF3               	rrf	___awmod@divisor,f
  4301  1A9F  3EFF               	addlw	-1
  4302  1AA0  1D03               	skipz
  4303  1AA1  2A9C               	goto	u6375
  4304  1AA2                     l4135:
  4305  1AA2  3001               	movlw	1
  4306  1AA3  02A0               	subwf	___awmod@counter,f
  4307  1AA4  1D03               	btfss	3,2
  4308  1AA5  2AA7               	goto	u6381
  4309  1AA6  2AA8               	goto	u6380
  4310  1AA7                     u6381:
  4311  1AA7  2A8B               	goto	l4129
  4312  1AA8                     u6380:
  4313  1AA8                     l4137:
  4314  1AA8  0821               	movf	___awmod@sign,w
  4315  1AA9  1903               	btfsc	3,2
  4316  1AAA  2AAC               	goto	u6391
  4317  1AAB  2AAD               	goto	u6390
  4318  1AAC                     u6391:
  4319  1AAC  2AB2               	goto	l4141
  4320  1AAD                     u6390:
  4321  1AAD                     l4139:
  4322  1AAD  09F5               	comf	___awmod@dividend,f
  4323  1AAE  09F6               	comf	___awmod@dividend+1,f
  4324  1AAF  0AF5               	incf	___awmod@dividend,f
  4325  1AB0  1903               	skipnz
  4326  1AB1  0AF6               	incf	___awmod@dividend+1,f
  4327  1AB2                     l4141:
  4328  1AB2  0876               	movf	___awmod@dividend+1,w
  4329  1AB3  00F4               	movwf	?___awmod+1
  4330  1AB4  0875               	movf	___awmod@dividend,w
  4331  1AB5  00F3               	movwf	?___awmod
  4332  1AB6                     l606:
  4333  1AB6  0008               	return
  4334  1AB7                     __end_of___awmod:
  4335                           
  4336                           	psect	text11
  4337  1BE1                     __ptext11:	
  4338 ;; *************** function ___awdiv *****************
  4339 ;; Defined at:
  4340 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  divisor         2    2[BANK0 ] int 
  4343 ;;  dividend        2    4[BANK0 ] int 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  quotient        2    9[BANK0 ] int 
  4346 ;;  sign            1    8[BANK0 ] unsigned char 
  4347 ;;  counter         1    7[BANK0 ] unsigned char 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  2    2[BANK0 ] int 
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4357 ;;      Params:         0       4       0       0       0
  4358 ;;      Locals:         0       4       0       0       0
  4359 ;;      Temps:          0       1       0       0       0
  4360 ;;      Totals:         0       9       0       0       0
  4361 ;;Total ram usage:        9 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    1
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_scale
  4368 ;;		_sprintf
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           
  4373                           ;psect for function ___awdiv
  4374  1BE1                     ___awdiv:
  4375  1BE1                     l4063:	
  4376                           ;incstack = 0
  4377                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4378                           
  4379  1BE1  1283               	bcf	3,5	;RP0=0, select bank0
  4380  1BE2  1303               	bcf	3,6	;RP1=0, select bank0
  4381  1BE3  01A8               	clrf	___awdiv@sign
  4382  1BE4                     l4065:
  4383  1BE4  1FA3               	btfss	___awdiv@divisor+1,7
  4384  1BE5  2BE7               	goto	u6211
  4385  1BE6  2BE8               	goto	u6210
  4386  1BE7                     u6211:
  4387  1BE7  2BEF               	goto	l4071
  4388  1BE8                     u6210:
  4389  1BE8                     l4067:
  4390  1BE8  09A2               	comf	___awdiv@divisor,f
  4391  1BE9  09A3               	comf	___awdiv@divisor+1,f
  4392  1BEA  0AA2               	incf	___awdiv@divisor,f
  4393  1BEB  1903               	skipnz
  4394  1BEC  0AA3               	incf	___awdiv@divisor+1,f
  4395  1BED                     l4069:
  4396  1BED  01A8               	clrf	___awdiv@sign
  4397  1BEE  0AA8               	incf	___awdiv@sign,f
  4398  1BEF                     l4071:
  4399  1BEF  1FA5               	btfss	___awdiv@dividend+1,7
  4400  1BF0  2BF2               	goto	u6221
  4401  1BF1  2BF3               	goto	u6220
  4402  1BF2                     u6221:
  4403  1BF2  2BFC               	goto	l4077
  4404  1BF3                     u6220:
  4405  1BF3                     l4073:
  4406  1BF3  09A4               	comf	___awdiv@dividend,f
  4407  1BF4  09A5               	comf	___awdiv@dividend+1,f
  4408  1BF5  0AA4               	incf	___awdiv@dividend,f
  4409  1BF6  1903               	skipnz
  4410  1BF7  0AA5               	incf	___awdiv@dividend+1,f
  4411  1BF8                     l4075:
  4412  1BF8  3001               	movlw	1
  4413  1BF9  00A6               	movwf	??___awdiv
  4414  1BFA  0826               	movf	??___awdiv,w
  4415  1BFB  06A8               	xorwf	___awdiv@sign,f
  4416  1BFC                     l4077:
  4417  1BFC  01A9               	clrf	___awdiv@quotient
  4418  1BFD  01AA               	clrf	___awdiv@quotient+1
  4419  1BFE                     l4079:
  4420  1BFE  0822               	movf	___awdiv@divisor,w
  4421  1BFF  0423               	iorwf	___awdiv@divisor+1,w
  4422  1C00  1903               	btfsc	3,2
  4423  1C01  2C03               	goto	u6231
  4424  1C02  2C04               	goto	u6230
  4425  1C03                     u6231:
  4426  1C03  2C3B               	goto	l4099
  4427  1C04                     u6230:
  4428  1C04                     l4081:
  4429  1C04  01A7               	clrf	___awdiv@counter
  4430  1C05  0AA7               	incf	___awdiv@counter,f
  4431  1C06  2C12               	goto	l4087
  4432  1C07                     l4083:
  4433  1C07  3001               	movlw	1
  4434  1C08                     u6245:
  4435  1C08  1003               	clrc
  4436  1C09  0DA2               	rlf	___awdiv@divisor,f
  4437  1C0A  0DA3               	rlf	___awdiv@divisor+1,f
  4438  1C0B  3EFF               	addlw	-1
  4439  1C0C  1D03               	skipz
  4440  1C0D  2C08               	goto	u6245
  4441  1C0E                     l4085:
  4442  1C0E  3001               	movlw	1
  4443  1C0F  00A6               	movwf	??___awdiv
  4444  1C10  0826               	movf	??___awdiv,w
  4445  1C11  07A7               	addwf	___awdiv@counter,f
  4446  1C12                     l4087:
  4447  1C12  1FA3               	btfss	___awdiv@divisor+1,7
  4448  1C13  2C15               	goto	u6251
  4449  1C14  2C16               	goto	u6250
  4450  1C15                     u6251:
  4451  1C15  2C07               	goto	l4083
  4452  1C16                     u6250:
  4453  1C16                     l4089:
  4454  1C16  3001               	movlw	1
  4455  1C17                     u6265:
  4456  1C17  1003               	clrc
  4457  1C18  0DA9               	rlf	___awdiv@quotient,f
  4458  1C19  0DAA               	rlf	___awdiv@quotient+1,f
  4459  1C1A  3EFF               	addlw	-1
  4460  1C1B  1D03               	skipz
  4461  1C1C  2C17               	goto	u6265
  4462  1C1D  0823               	movf	___awdiv@divisor+1,w
  4463  1C1E  0225               	subwf	___awdiv@dividend+1,w
  4464  1C1F  1D03               	skipz
  4465  1C20  2C23               	goto	u6275
  4466  1C21  0822               	movf	___awdiv@divisor,w
  4467  1C22  0224               	subwf	___awdiv@dividend,w
  4468  1C23                     u6275:
  4469  1C23  1C03               	skipc
  4470  1C24  2C26               	goto	u6271
  4471  1C25  2C27               	goto	u6270
  4472  1C26                     u6271:
  4473  1C26  2C2E               	goto	l4095
  4474  1C27                     u6270:
  4475  1C27                     l4091:
  4476  1C27  0822               	movf	___awdiv@divisor,w
  4477  1C28  02A4               	subwf	___awdiv@dividend,f
  4478  1C29  0823               	movf	___awdiv@divisor+1,w
  4479  1C2A  1C03               	skipc
  4480  1C2B  03A5               	decf	___awdiv@dividend+1,f
  4481  1C2C  02A5               	subwf	___awdiv@dividend+1,f
  4482  1C2D                     l4093:
  4483  1C2D  1429               	bsf	___awdiv@quotient,0
  4484  1C2E                     l4095:
  4485  1C2E  3001               	movlw	1
  4486  1C2F                     u6285:
  4487  1C2F  1003               	clrc
  4488  1C30  0CA3               	rrf	___awdiv@divisor+1,f
  4489  1C31  0CA2               	rrf	___awdiv@divisor,f
  4490  1C32  3EFF               	addlw	-1
  4491  1C33  1D03               	skipz
  4492  1C34  2C2F               	goto	u6285
  4493  1C35                     l4097:
  4494  1C35  3001               	movlw	1
  4495  1C36  02A7               	subwf	___awdiv@counter,f
  4496  1C37  1D03               	btfss	3,2
  4497  1C38  2C3A               	goto	u6291
  4498  1C39  2C3B               	goto	u6290
  4499  1C3A                     u6291:
  4500  1C3A  2C16               	goto	l4089
  4501  1C3B                     u6290:
  4502  1C3B                     l4099:
  4503  1C3B  0828               	movf	___awdiv@sign,w
  4504  1C3C  1903               	btfsc	3,2
  4505  1C3D  2C3F               	goto	u6301
  4506  1C3E  2C40               	goto	u6300
  4507  1C3F                     u6301:
  4508  1C3F  2C45               	goto	l4103
  4509  1C40                     u6300:
  4510  1C40                     l4101:
  4511  1C40  09A9               	comf	___awdiv@quotient,f
  4512  1C41  09AA               	comf	___awdiv@quotient+1,f
  4513  1C42  0AA9               	incf	___awdiv@quotient,f
  4514  1C43  1903               	skipnz
  4515  1C44  0AAA               	incf	___awdiv@quotient+1,f
  4516  1C45                     l4103:
  4517  1C45  082A               	movf	___awdiv@quotient+1,w
  4518  1C46  00A3               	movwf	?___awdiv+1
  4519  1C47  0829               	movf	___awdiv@quotient,w
  4520  1C48  00A2               	movwf	?___awdiv
  4521  1C49                     l593:
  4522  1C49  0008               	return
  4523  1C4A                     __end_of___awdiv:
  4524                           
  4525                           	psect	text12
  4526  0129                     __ptext12:	
  4527 ;; *************** function _isdigit *****************
  4528 ;; Defined at:
  4529 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  c               1    wreg     unsigned char 
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;  c               1    4[COMMON] unsigned char 
  4534 ;; Return value:  Size  Location     Type
  4535 ;;		None               void
  4536 ;; Registers used:
  4537 ;;		wreg, status,2, status,0
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4543 ;;      Params:         0       0       0       0       0
  4544 ;;      Locals:         2       0       0       0       0
  4545 ;;      Temps:          0       0       0       0       0
  4546 ;;      Totals:         2       0       0       0       0
  4547 ;;Total ram usage:        2 bytes
  4548 ;; Hardware stack levels used:    1
  4549 ;; Hardware stack levels required when called:    1
  4550 ;; This function calls:
  4551 ;;		Nothing
  4552 ;; This function is called by:
  4553 ;;		_sprintf
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           
  4558                           ;psect for function _isdigit
  4559  0129                     _isdigit:
  4560                           
  4561                           ;incstack = 0
  4562                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4563                           ;isdigit@c stored from wreg
  4564  0129  00F4               	movwf	isdigit@c
  4565  012A                     l3109:
  4566  012A  01F3               	clrf	_isdigit$1038
  4567  012B                     l3111:
  4568  012B  303A               	movlw	58
  4569  012C  0274               	subwf	isdigit@c,w
  4570  012D  1803               	skipnc
  4571  012E  2930               	goto	u4571
  4572  012F  2931               	goto	u4570
  4573  0130                     u4571:
  4574  0130  2939               	goto	l3117
  4575  0131                     u4570:
  4576  0131                     l3113:
  4577  0131  3030               	movlw	48
  4578  0132  0274               	subwf	isdigit@c,w
  4579  0133  1C03               	skipc
  4580  0134  2936               	goto	u4581
  4581  0135  2937               	goto	u4580
  4582  0136                     u4581:
  4583  0136  2939               	goto	l3117
  4584  0137                     u4580:
  4585  0137                     l3115:
  4586  0137  01F3               	clrf	_isdigit$1038
  4587  0138  0AF3               	incf	_isdigit$1038,f
  4588  0139                     l3117:
  4589  0139  0C73               	rrf	_isdigit$1038,w
  4590  013A                     l927:
  4591  013A  0008               	return
  4592  013B                     __end_of_isdigit:
  4593                           
  4594                           	psect	text13
  4595  0023                     __ptext13:	
  4596 ;; *************** function _fround *****************
  4597 ;; Defined at:
  4598 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  prec            1    wreg     unsigned char 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  prec            1   56[BANK0 ] unsigned char 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  4   37[BANK0 ] unsigned char 
  4605 ;; Registers used:
  4606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4612 ;;      Params:         0       4       0       0       0
  4613 ;;      Locals:         0       9       0       0       0
  4614 ;;      Temps:          0       7       0       0       0
  4615 ;;      Totals:         0      20       0       0       0
  4616 ;;Total ram usage:       20 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    3
  4619 ;; This function calls:
  4620 ;;		___flmul
  4621 ;;		___lwdiv
  4622 ;;		___lwmod
  4623 ;; This function is called by:
  4624 ;;		_sprintf
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           
  4629                           ;psect for function _fround
  4630  0023                     _fround:
  4631                           
  4632                           ;incstack = 0
  4633                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4634                           ;fround@prec stored from wreg
  4635  0023  1283               	bcf	3,5	;RP0=0, select bank0
  4636  0024  1303               	bcf	3,6	;RP1=0, select bank0
  4637  0025  00D8               	movwf	fround@prec
  4638  0026                     l4213:
  4639                           
  4640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4641  0026  306E               	movlw	110
  4642  0027  0258               	subwf	fround@prec,w
  4643  0028  1C03               	skipc
  4644  0029  282B               	goto	u6531
  4645  002A  282C               	goto	u6530
  4646  002B                     u6531:
  4647  002B  293B               	goto	l4221
  4648  002C                     u6530:
  4649  002C                     l4215:
  4650                           
  4651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4652  002C  303F               	movlw	63
  4653  002D  00AE               	movwf	___flmul@b+3
  4654  002E  3000               	movlw	0
  4655  002F  00AD               	movwf	___flmul@b+2
  4656  0030  3000               	movlw	0
  4657  0031  00AC               	movwf	___flmul@b+1
  4658  0032  3000               	movlw	0
  4659  0033  00AB               	movwf	___flmul@b
  4660  0034  3064               	movlw	100
  4661  0035  00A1               	movwf	___lwdiv@divisor
  4662  0036  3000               	movlw	0
  4663  0037  00A2               	movwf	___lwdiv@divisor+1
  4664  0038  0858               	movf	fround@prec,w
  4665  0039  00C9               	movwf	??_fround
  4666  003A  01CA               	clrf	??_fround+1
  4667  003B  0849               	movf	??_fround,w
  4668  003C  00A3               	movwf	___lwdiv@dividend
  4669  003D  084A               	movf	??_fround+1,w
  4670  003E  00A4               	movwf	___lwdiv@dividend+1
  4671  003F  120A  118A  20A7  120A  118A  	fcall	___lwdiv
  4672  0044  1283               	bcf	3,5	;RP0=0, select bank0
  4673  0045  1303               	bcf	3,6	;RP1=0, select bank0
  4674  0046  0821               	movf	?___lwdiv,w
  4675  0047  00CB               	movwf	??_fround+2
  4676  0048  3001               	movlw	1
  4677  0049                     u6545:
  4678  0049  1003               	clrc
  4679  004A  0DCB               	rlf	??_fround+2,f
  4680  004B  3EFF               	addlw	-1
  4681  004C  1D03               	skipz
  4682  004D  2849               	goto	u6545
  4683  004E  1003               	clrc
  4684  004F  0D4B               	rlf	??_fround+2,w
  4685  0050  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4686  0051  0084               	movwf	4
  4687  0052  160A  158A  200A  120A  118A  	fcall	stringdir
  4688  0057  00CC               	movwf	??_fround+3
  4689  0058  160A  158A  200A  120A  118A  	fcall	stringdir
  4690  005D  00CD               	movwf	??_fround+4
  4691  005E  160A  158A  200A  120A  118A  	fcall	stringdir
  4692  0063  00CE               	movwf	??_fround+5
  4693  0064  160A  158A  200A  120A  118A  	fcall	stringdir
  4694  0069  00CF               	movwf	??_fround+6
  4695  006A  084F               	movf	??_fround+6,w
  4696  006B  00B2               	movwf	___flmul@a+3
  4697  006C  084E               	movf	??_fround+5,w
  4698  006D  00B1               	movwf	___flmul@a+2
  4699  006E  084D               	movf	??_fround+4,w
  4700  006F  00B0               	movwf	___flmul@a+1
  4701  0070  084C               	movf	??_fround+3,w
  4702  0071  00AF               	movwf	___flmul@a
  4703  0072  120A  158A  213C  120A  118A  	fcall	___flmul
  4704  0077  1283               	bcf	3,5	;RP0=0, select bank0
  4705  0078  1303               	bcf	3,6	;RP1=0, select bank0
  4706  0079  082E               	movf	?___flmul+3,w
  4707  007A  00D7               	movwf	_fround$1233+3
  4708  007B  082D               	movf	?___flmul+2,w
  4709  007C  00D6               	movwf	_fround$1233+2
  4710  007D  082C               	movf	?___flmul+1,w
  4711  007E  00D5               	movwf	_fround$1233+1
  4712  007F  082B               	movf	?___flmul,w
  4713  0080  00D4               	movwf	_fround$1233
  4714                           
  4715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4716  0081  300A               	movlw	10
  4717  0082  00A1               	movwf	___lwdiv@divisor
  4718  0083  3000               	movlw	0
  4719  0084  00A2               	movwf	___lwdiv@divisor+1
  4720  0085  0858               	movf	fround@prec,w
  4721  0086  00C9               	movwf	??_fround
  4722  0087  01CA               	clrf	??_fround+1
  4723  0088  0849               	movf	??_fround,w
  4724  0089  00F5               	movwf	___lwmod@dividend
  4725  008A  084A               	movf	??_fround+1,w
  4726  008B  00F6               	movwf	___lwmod@dividend+1
  4727  008C  3064               	movlw	100
  4728  008D  00F3               	movwf	___lwmod@divisor
  4729  008E  3000               	movlw	0
  4730  008F  00F4               	movwf	___lwmod@divisor+1
  4731  0090  120A  118A  20ED  120A  118A  	fcall	___lwmod
  4732  0095  0874               	movf	?___lwmod+1,w
  4733  0096  1283               	bcf	3,5	;RP0=0, select bank0
  4734  0097  1303               	bcf	3,6	;RP1=0, select bank0
  4735  0098  00A4               	movwf	___lwdiv@dividend+1
  4736  0099  0873               	movf	?___lwmod,w
  4737  009A  00A3               	movwf	___lwdiv@dividend
  4738  009B  120A  118A  20A7  120A  118A  	fcall	___lwdiv
  4739  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  4740  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  4741  00A2  0821               	movf	?___lwdiv,w
  4742  00A3  00CB               	movwf	??_fround+2
  4743  00A4  3001               	movlw	1
  4744  00A5                     u6555:
  4745  00A5  1003               	clrc
  4746  00A6  0DCB               	rlf	??_fround+2,f
  4747  00A7  3EFF               	addlw	-1
  4748  00A8  1D03               	skipz
  4749  00A9  28A5               	goto	u6555
  4750  00AA  1003               	clrc
  4751  00AB  0D4B               	rlf	??_fround+2,w
  4752  00AC  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4753  00AD  0084               	movwf	4
  4754  00AE  160A  158A  200A  120A  118A  	fcall	stringdir
  4755  00B3  00CC               	movwf	??_fround+3
  4756  00B4  160A  158A  200A  120A  118A  	fcall	stringdir
  4757  00B9  00CD               	movwf	??_fround+4
  4758  00BA  160A  158A  200A  120A  118A  	fcall	stringdir
  4759  00BF  00CE               	movwf	??_fround+5
  4760  00C0  160A  158A  200A  120A  118A  	fcall	stringdir
  4761  00C5  00CF               	movwf	??_fround+6
  4762  00C6  084F               	movf	??_fround+6,w
  4763  00C7  00AE               	movwf	___flmul@b+3
  4764  00C8  084E               	movf	??_fround+5,w
  4765  00C9  00AD               	movwf	___flmul@b+2
  4766  00CA  084D               	movf	??_fround+4,w
  4767  00CB  00AC               	movwf	___flmul@b+1
  4768  00CC  084C               	movf	??_fround+3,w
  4769  00CD  00AB               	movwf	___flmul@b
  4770  00CE  0857               	movf	_fround$1233+3,w
  4771  00CF  00B2               	movwf	___flmul@a+3
  4772  00D0  0856               	movf	_fround$1233+2,w
  4773  00D1  00B1               	movwf	___flmul@a+2
  4774  00D2  0855               	movf	_fround$1233+1,w
  4775  00D3  00B0               	movwf	___flmul@a+1
  4776  00D4  0854               	movf	_fround$1233,w
  4777  00D5  00AF               	movwf	___flmul@a
  4778  00D6  120A  158A  213C  120A  118A  	fcall	___flmul
  4779  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  4780  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  4781  00DD  082E               	movf	?___flmul+3,w
  4782  00DE  00D3               	movwf	_fround$1234+3
  4783  00DF  082D               	movf	?___flmul+2,w
  4784  00E0  00D2               	movwf	_fround$1234+2
  4785  00E1  082C               	movf	?___flmul+1,w
  4786  00E2  00D1               	movwf	_fround$1234+1
  4787  00E3  082B               	movf	?___flmul,w
  4788  00E4  00D0               	movwf	_fround$1234
  4789                           
  4790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4791  00E5  300A               	movlw	10
  4792  00E6  00F3               	movwf	___lwmod@divisor
  4793  00E7  3000               	movlw	0
  4794  00E8  00F4               	movwf	___lwmod@divisor+1
  4795  00E9  0858               	movf	fround@prec,w
  4796  00EA  00C9               	movwf	??_fround
  4797  00EB  01CA               	clrf	??_fround+1
  4798  00EC  0849               	movf	??_fround,w
  4799  00ED  00F5               	movwf	___lwmod@dividend
  4800  00EE  084A               	movf	??_fround+1,w
  4801  00EF  00F6               	movwf	___lwmod@dividend+1
  4802  00F0  120A  118A  20ED  120A  118A  	fcall	___lwmod
  4803  00F5  0873               	movf	?___lwmod,w
  4804  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  4805  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  4806  00F8  00CB               	movwf	??_fround+2
  4807  00F9  3001               	movlw	1
  4808  00FA                     u6565:
  4809  00FA  1003               	clrc
  4810  00FB  0DCB               	rlf	??_fround+2,f
  4811  00FC  3EFF               	addlw	-1
  4812  00FD  1D03               	skipz
  4813  00FE  28FA               	goto	u6565
  4814  00FF  1003               	clrc
  4815  0100  0D4B               	rlf	??_fround+2,w
  4816  0101  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4817  0102  0084               	movwf	4
  4818  0103  160A  158A  200A  120A  118A  	fcall	stringdir
  4819  0108  00CC               	movwf	??_fround+3
  4820  0109  160A  158A  200A  120A  118A  	fcall	stringdir
  4821  010E  00CD               	movwf	??_fround+4
  4822  010F  160A  158A  200A  120A  118A  	fcall	stringdir
  4823  0114  00CE               	movwf	??_fround+5
  4824  0115  160A  158A  200A  120A  118A  	fcall	stringdir
  4825  011A  00CF               	movwf	??_fround+6
  4826  011B  084F               	movf	??_fround+6,w
  4827  011C  00AE               	movwf	___flmul@b+3
  4828  011D  084E               	movf	??_fround+5,w
  4829  011E  00AD               	movwf	___flmul@b+2
  4830  011F  084D               	movf	??_fround+4,w
  4831  0120  00AC               	movwf	___flmul@b+1
  4832  0121  084C               	movf	??_fround+3,w
  4833  0122  00AB               	movwf	___flmul@b
  4834  0123  0853               	movf	_fround$1234+3,w
  4835  0124  00B2               	movwf	___flmul@a+3
  4836  0125  0852               	movf	_fround$1234+2,w
  4837  0126  00B1               	movwf	___flmul@a+2
  4838  0127  0851               	movf	_fround$1234+1,w
  4839  0128  00B0               	movwf	___flmul@a+1
  4840  0129  0850               	movf	_fround$1234,w
  4841  012A  00AF               	movwf	___flmul@a
  4842  012B  120A  158A  213C  120A  118A  	fcall	___flmul
  4843  0130  1283               	bcf	3,5	;RP0=0, select bank0
  4844  0131  1303               	bcf	3,6	;RP1=0, select bank0
  4845  0132  082E               	movf	?___flmul+3,w
  4846  0133  00C8               	movwf	?_fround+3
  4847  0134  082D               	movf	?___flmul+2,w
  4848  0135  00C7               	movwf	?_fround+2
  4849  0136  082C               	movf	?___flmul+1,w
  4850  0137  00C6               	movwf	?_fround+1
  4851  0138  082B               	movf	?___flmul,w
  4852  0139  00C5               	movwf	?_fround
  4853  013A  2A2F               	goto	l346
  4854  013B                     l4221:
  4855  013B  300B               	movlw	11
  4856  013C  0258               	subwf	fround@prec,w
  4857  013D  1C03               	skipc
  4858  013E  2940               	goto	u6571
  4859  013F  2941               	goto	u6570
  4860  0140                     u6571:
  4861  0140  29EC               	goto	l4227
  4862  0141                     u6570:
  4863  0141                     l4223:
  4864                           
  4865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4866  0141  303F               	movlw	63
  4867  0142  00AE               	movwf	___flmul@b+3
  4868  0143  3000               	movlw	0
  4869  0144  00AD               	movwf	___flmul@b+2
  4870  0145  3000               	movlw	0
  4871  0146  00AC               	movwf	___flmul@b+1
  4872  0147  3000               	movlw	0
  4873  0148  00AB               	movwf	___flmul@b
  4874  0149  300A               	movlw	10
  4875  014A  00A1               	movwf	___lwdiv@divisor
  4876  014B  3000               	movlw	0
  4877  014C  00A2               	movwf	___lwdiv@divisor+1
  4878  014D  0858               	movf	fround@prec,w
  4879  014E  00C9               	movwf	??_fround
  4880  014F  01CA               	clrf	??_fround+1
  4881  0150  0849               	movf	??_fround,w
  4882  0151  00A3               	movwf	___lwdiv@dividend
  4883  0152  084A               	movf	??_fround+1,w
  4884  0153  00A4               	movwf	___lwdiv@dividend+1
  4885  0154  120A  118A  20A7  120A  118A  	fcall	___lwdiv
  4886  0159  1283               	bcf	3,5	;RP0=0, select bank0
  4887  015A  1303               	bcf	3,6	;RP1=0, select bank0
  4888  015B  0821               	movf	?___lwdiv,w
  4889  015C  00CB               	movwf	??_fround+2
  4890  015D  3001               	movlw	1
  4891  015E                     u6585:
  4892  015E  1003               	clrc
  4893  015F  0DCB               	rlf	??_fround+2,f
  4894  0160  3EFF               	addlw	-1
  4895  0161  1D03               	skipz
  4896  0162  295E               	goto	u6585
  4897  0163  1003               	clrc
  4898  0164  0D4B               	rlf	??_fround+2,w
  4899  0165  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4900  0166  0084               	movwf	4
  4901  0167  160A  158A  200A  120A  118A  	fcall	stringdir
  4902  016C  00CC               	movwf	??_fround+3
  4903  016D  160A  158A  200A  120A  118A  	fcall	stringdir
  4904  0172  00CD               	movwf	??_fround+4
  4905  0173  160A  158A  200A  120A  118A  	fcall	stringdir
  4906  0178  00CE               	movwf	??_fround+5
  4907  0179  160A  158A  200A  120A  118A  	fcall	stringdir
  4908  017E  00CF               	movwf	??_fround+6
  4909  017F  084F               	movf	??_fround+6,w
  4910  0180  00B2               	movwf	___flmul@a+3
  4911  0181  084E               	movf	??_fround+5,w
  4912  0182  00B1               	movwf	___flmul@a+2
  4913  0183  084D               	movf	??_fround+4,w
  4914  0184  00B0               	movwf	___flmul@a+1
  4915  0185  084C               	movf	??_fround+3,w
  4916  0186  00AF               	movwf	___flmul@a
  4917  0187  120A  158A  213C  120A  118A  	fcall	___flmul
  4918  018C  1283               	bcf	3,5	;RP0=0, select bank0
  4919  018D  1303               	bcf	3,6	;RP1=0, select bank0
  4920  018E  082E               	movf	?___flmul+3,w
  4921  018F  00D7               	movwf	_fround$1233+3
  4922  0190  082D               	movf	?___flmul+2,w
  4923  0191  00D6               	movwf	_fround$1233+2
  4924  0192  082C               	movf	?___flmul+1,w
  4925  0193  00D5               	movwf	_fround$1233+1
  4926  0194  082B               	movf	?___flmul,w
  4927  0195  00D4               	movwf	_fround$1233
  4928                           
  4929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4930  0196  300A               	movlw	10
  4931  0197  00F3               	movwf	___lwmod@divisor
  4932  0198  3000               	movlw	0
  4933  0199  00F4               	movwf	___lwmod@divisor+1
  4934  019A  0858               	movf	fround@prec,w
  4935  019B  00C9               	movwf	??_fround
  4936  019C  01CA               	clrf	??_fround+1
  4937  019D  0849               	movf	??_fround,w
  4938  019E  00F5               	movwf	___lwmod@dividend
  4939  019F  084A               	movf	??_fround+1,w
  4940  01A0  00F6               	movwf	___lwmod@dividend+1
  4941  01A1  120A  118A  20ED  120A  118A  	fcall	___lwmod
  4942  01A6  0873               	movf	?___lwmod,w
  4943  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  4944  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  4945  01A9  00CB               	movwf	??_fround+2
  4946  01AA  3001               	movlw	1
  4947  01AB                     u6595:
  4948  01AB  1003               	clrc
  4949  01AC  0DCB               	rlf	??_fround+2,f
  4950  01AD  3EFF               	addlw	-1
  4951  01AE  1D03               	skipz
  4952  01AF  29AB               	goto	u6595
  4953  01B0  1003               	clrc
  4954  01B1  0D4B               	rlf	??_fround+2,w
  4955  01B2  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4956  01B3  0084               	movwf	4
  4957  01B4  160A  158A  200A  120A  118A  	fcall	stringdir
  4958  01B9  00CC               	movwf	??_fround+3
  4959  01BA  160A  158A  200A  120A  118A  	fcall	stringdir
  4960  01BF  00CD               	movwf	??_fround+4
  4961  01C0  160A  158A  200A  120A  118A  	fcall	stringdir
  4962  01C5  00CE               	movwf	??_fround+5
  4963  01C6  160A  158A  200A  120A  118A  	fcall	stringdir
  4964  01CB  00CF               	movwf	??_fround+6
  4965  01CC  084F               	movf	??_fround+6,w
  4966  01CD  00AE               	movwf	___flmul@b+3
  4967  01CE  084E               	movf	??_fround+5,w
  4968  01CF  00AD               	movwf	___flmul@b+2
  4969  01D0  084D               	movf	??_fround+4,w
  4970  01D1  00AC               	movwf	___flmul@b+1
  4971  01D2  084C               	movf	??_fround+3,w
  4972  01D3  00AB               	movwf	___flmul@b
  4973  01D4  0857               	movf	_fround$1233+3,w
  4974  01D5  00B2               	movwf	___flmul@a+3
  4975  01D6  0856               	movf	_fround$1233+2,w
  4976  01D7  00B1               	movwf	___flmul@a+2
  4977  01D8  0855               	movf	_fround$1233+1,w
  4978  01D9  00B0               	movwf	___flmul@a+1
  4979  01DA  0854               	movf	_fround$1233,w
  4980  01DB  00AF               	movwf	___flmul@a
  4981  01DC  120A  158A  213C  120A  118A  	fcall	___flmul
  4982  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  4983  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  4984  01E3  082E               	movf	?___flmul+3,w
  4985  01E4  00C8               	movwf	?_fround+3
  4986  01E5  082D               	movf	?___flmul+2,w
  4987  01E6  00C7               	movwf	?_fround+2
  4988  01E7  082C               	movf	?___flmul+1,w
  4989  01E8  00C6               	movwf	?_fround+1
  4990  01E9  082B               	movf	?___flmul,w
  4991  01EA  00C5               	movwf	?_fround
  4992  01EB  2A2F               	goto	l346
  4993  01EC                     l4227:
  4994                           
  4995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4996  01EC  303F               	movlw	63
  4997  01ED  00AE               	movwf	___flmul@b+3
  4998  01EE  3000               	movlw	0
  4999  01EF  00AD               	movwf	___flmul@b+2
  5000  01F0  3000               	movlw	0
  5001  01F1  00AC               	movwf	___flmul@b+1
  5002  01F2  3000               	movlw	0
  5003  01F3  00AB               	movwf	___flmul@b
  5004  01F4  0858               	movf	fround@prec,w
  5005  01F5  00C9               	movwf	??_fround
  5006  01F6  3001               	movlw	1
  5007  01F7                     u6605:
  5008  01F7  1003               	clrc
  5009  01F8  0DC9               	rlf	??_fround,f
  5010  01F9  3EFF               	addlw	-1
  5011  01FA  1D03               	skipz
  5012  01FB  29F7               	goto	u6605
  5013  01FC  1003               	clrc
  5014  01FD  0D49               	rlf	??_fround,w
  5015  01FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5016  01FF  0084               	movwf	4
  5017  0200  160A  158A  200A  120A  118A  	fcall	stringdir
  5018  0205  00CA               	movwf	??_fround+1
  5019  0206  160A  158A  200A  120A  118A  	fcall	stringdir
  5020  020B  00CB               	movwf	??_fround+2
  5021  020C  160A  158A  200A  120A  118A  	fcall	stringdir
  5022  0211  00CC               	movwf	??_fround+3
  5023  0212  160A  158A  200A  120A  118A  	fcall	stringdir
  5024  0217  00CD               	movwf	??_fround+4
  5025  0218  084D               	movf	??_fround+4,w
  5026  0219  00B2               	movwf	___flmul@a+3
  5027  021A  084C               	movf	??_fround+3,w
  5028  021B  00B1               	movwf	___flmul@a+2
  5029  021C  084B               	movf	??_fround+2,w
  5030  021D  00B0               	movwf	___flmul@a+1
  5031  021E  084A               	movf	??_fround+1,w
  5032  021F  00AF               	movwf	___flmul@a
  5033  0220  120A  158A  213C  120A  118A  	fcall	___flmul
  5034  0225  1283               	bcf	3,5	;RP0=0, select bank0
  5035  0226  1303               	bcf	3,6	;RP1=0, select bank0
  5036  0227  082E               	movf	?___flmul+3,w
  5037  0228  00C8               	movwf	?_fround+3
  5038  0229  082D               	movf	?___flmul+2,w
  5039  022A  00C7               	movwf	?_fround+2
  5040  022B  082C               	movf	?___flmul+1,w
  5041  022C  00C6               	movwf	?_fround+1
  5042  022D  082B               	movf	?___flmul,w
  5043  022E  00C5               	movwf	?_fround
  5044  022F                     l346:
  5045  022F  0008               	return
  5046  0230                     __end_of_fround:
  5047                           
  5048                           	psect	text14
  5049  00ED                     __ptext14:	
  5050 ;; *************** function ___lwmod *****************
  5051 ;; Defined at:
  5052 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;  divisor         2    3[COMMON] unsigned int 
  5055 ;;  dividend        2    5[COMMON] unsigned int 
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;  counter         1    0[BANK0 ] unsigned char 
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  2    3[COMMON] unsigned int 
  5060 ;; Registers used:
  5061 ;;		wreg, status,2, status,0
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5067 ;;      Params:         4       0       0       0       0
  5068 ;;      Locals:         0       1       0       0       0
  5069 ;;      Temps:          1       0       0       0       0
  5070 ;;      Totals:         5       1       0       0       0
  5071 ;;Total ram usage:        6 bytes
  5072 ;; Hardware stack levels used:    1
  5073 ;; Hardware stack levels required when called:    1
  5074 ;; This function calls:
  5075 ;;		Nothing
  5076 ;; This function is called by:
  5077 ;;		_fround
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           
  5082                           ;psect for function ___lwmod
  5083  00ED                     ___lwmod:
  5084  00ED                     l4171:	
  5085                           ;incstack = 0
  5086                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5087                           
  5088  00ED  0873               	movf	___lwmod@divisor,w
  5089  00EE  0474               	iorwf	___lwmod@divisor+1,w
  5090  00EF  1903               	btfsc	3,2
  5091  00F0  28F2               	goto	u6471
  5092  00F1  28F3               	goto	u6470
  5093  00F2                     u6471:
  5094  00F2  2924               	goto	l4189
  5095  00F3                     u6470:
  5096  00F3                     l4173:
  5097  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  5098  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  5099  00F5  01A0               	clrf	___lwmod@counter
  5100  00F6  0AA0               	incf	___lwmod@counter,f
  5101  00F7  2903               	goto	l4179
  5102  00F8                     l4175:
  5103  00F8  3001               	movlw	1
  5104  00F9                     u6485:
  5105  00F9  1003               	clrc
  5106  00FA  0DF3               	rlf	___lwmod@divisor,f
  5107  00FB  0DF4               	rlf	___lwmod@divisor+1,f
  5108  00FC  3EFF               	addlw	-1
  5109  00FD  1D03               	skipz
  5110  00FE  28F9               	goto	u6485
  5111  00FF                     l4177:
  5112  00FF  3001               	movlw	1
  5113  0100  00F7               	movwf	??___lwmod
  5114  0101  0877               	movf	??___lwmod,w
  5115  0102  07A0               	addwf	___lwmod@counter,f
  5116  0103                     l4179:
  5117  0103  1FF4               	btfss	___lwmod@divisor+1,7
  5118  0104  2906               	goto	u6491
  5119  0105  2907               	goto	u6490
  5120  0106                     u6491:
  5121  0106  28F8               	goto	l4175
  5122  0107                     u6490:
  5123  0107                     l4181:
  5124  0107  0874               	movf	___lwmod@divisor+1,w
  5125  0108  0276               	subwf	___lwmod@dividend+1,w
  5126  0109  1D03               	skipz
  5127  010A  290D               	goto	u6505
  5128  010B  0873               	movf	___lwmod@divisor,w
  5129  010C  0275               	subwf	___lwmod@dividend,w
  5130  010D                     u6505:
  5131  010D  1C03               	skipc
  5132  010E  2910               	goto	u6501
  5133  010F  2911               	goto	u6500
  5134  0110                     u6501:
  5135  0110  2917               	goto	l4185
  5136  0111                     u6500:
  5137  0111                     l4183:
  5138  0111  0873               	movf	___lwmod@divisor,w
  5139  0112  02F5               	subwf	___lwmod@dividend,f
  5140  0113  0874               	movf	___lwmod@divisor+1,w
  5141  0114  1C03               	skipc
  5142  0115  03F6               	decf	___lwmod@dividend+1,f
  5143  0116  02F6               	subwf	___lwmod@dividend+1,f
  5144  0117                     l4185:
  5145  0117  3001               	movlw	1
  5146  0118                     u6515:
  5147  0118  1003               	clrc
  5148  0119  0CF4               	rrf	___lwmod@divisor+1,f
  5149  011A  0CF3               	rrf	___lwmod@divisor,f
  5150  011B  3EFF               	addlw	-1
  5151  011C  1D03               	skipz
  5152  011D  2918               	goto	u6515
  5153  011E                     l4187:
  5154  011E  3001               	movlw	1
  5155  011F  02A0               	subwf	___lwmod@counter,f
  5156  0120  1D03               	btfss	3,2
  5157  0121  2923               	goto	u6521
  5158  0122  2924               	goto	u6520
  5159  0123                     u6521:
  5160  0123  2907               	goto	l4181
  5161  0124                     u6520:
  5162  0124                     l4189:
  5163  0124  0876               	movf	___lwmod@dividend+1,w
  5164  0125  00F4               	movwf	?___lwmod+1
  5165  0126  0875               	movf	___lwmod@dividend,w
  5166  0127  00F3               	movwf	?___lwmod
  5167  0128                     l756:
  5168  0128  0008               	return
  5169  0129                     __end_of___lwmod:
  5170                           
  5171                           	psect	text15
  5172  00A7                     __ptext15:	
  5173 ;; *************** function ___lwdiv *****************
  5174 ;; Defined at:
  5175 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  divisor         2    1[BANK0 ] unsigned int 
  5178 ;;  dividend        2    3[BANK0 ] unsigned int 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  quotient        2    7[BANK0 ] unsigned int 
  5181 ;;  counter         1    6[BANK0 ] unsigned char 
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  2    1[BANK0 ] unsigned int 
  5184 ;; Registers used:
  5185 ;;		wreg, status,2, status,0
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5191 ;;      Params:         0       4       0       0       0
  5192 ;;      Locals:         0       3       0       0       0
  5193 ;;      Temps:          0       1       0       0       0
  5194 ;;      Totals:         0       8       0       0       0
  5195 ;;Total ram usage:        8 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:    1
  5198 ;; This function calls:
  5199 ;;		Nothing
  5200 ;; This function is called by:
  5201 ;;		_fround
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           
  5206                           ;psect for function ___lwdiv
  5207  00A7                     ___lwdiv:
  5208  00A7                     l4145:	
  5209                           ;incstack = 0
  5210                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5211                           
  5212  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  5213  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  5214  00A9  01A7               	clrf	___lwdiv@quotient
  5215  00AA  01A8               	clrf	___lwdiv@quotient+1
  5216  00AB                     l4147:
  5217  00AB  0821               	movf	___lwdiv@divisor,w
  5218  00AC  0422               	iorwf	___lwdiv@divisor+1,w
  5219  00AD  1903               	btfsc	3,2
  5220  00AE  28B0               	goto	u6401
  5221  00AF  28B1               	goto	u6400
  5222  00B0                     u6401:
  5223  00B0  28E8               	goto	l4167
  5224  00B1                     u6400:
  5225  00B1                     l4149:
  5226  00B1  01A6               	clrf	___lwdiv@counter
  5227  00B2  0AA6               	incf	___lwdiv@counter,f
  5228  00B3  28BF               	goto	l4155
  5229  00B4                     l4151:
  5230  00B4  3001               	movlw	1
  5231  00B5                     u6415:
  5232  00B5  1003               	clrc
  5233  00B6  0DA1               	rlf	___lwdiv@divisor,f
  5234  00B7  0DA2               	rlf	___lwdiv@divisor+1,f
  5235  00B8  3EFF               	addlw	-1
  5236  00B9  1D03               	skipz
  5237  00BA  28B5               	goto	u6415
  5238  00BB                     l4153:
  5239  00BB  3001               	movlw	1
  5240  00BC  00A5               	movwf	??___lwdiv
  5241  00BD  0825               	movf	??___lwdiv,w
  5242  00BE  07A6               	addwf	___lwdiv@counter,f
  5243  00BF                     l4155:
  5244  00BF  1FA2               	btfss	___lwdiv@divisor+1,7
  5245  00C0  28C2               	goto	u6421
  5246  00C1  28C3               	goto	u6420
  5247  00C2                     u6421:
  5248  00C2  28B4               	goto	l4151
  5249  00C3                     u6420:
  5250  00C3                     l4157:
  5251  00C3  3001               	movlw	1
  5252  00C4                     u6435:
  5253  00C4  1003               	clrc
  5254  00C5  0DA7               	rlf	___lwdiv@quotient,f
  5255  00C6  0DA8               	rlf	___lwdiv@quotient+1,f
  5256  00C7  3EFF               	addlw	-1
  5257  00C8  1D03               	skipz
  5258  00C9  28C4               	goto	u6435
  5259  00CA  0822               	movf	___lwdiv@divisor+1,w
  5260  00CB  0224               	subwf	___lwdiv@dividend+1,w
  5261  00CC  1D03               	skipz
  5262  00CD  28D0               	goto	u6445
  5263  00CE  0821               	movf	___lwdiv@divisor,w
  5264  00CF  0223               	subwf	___lwdiv@dividend,w
  5265  00D0                     u6445:
  5266  00D0  1C03               	skipc
  5267  00D1  28D3               	goto	u6441
  5268  00D2  28D4               	goto	u6440
  5269  00D3                     u6441:
  5270  00D3  28DB               	goto	l4163
  5271  00D4                     u6440:
  5272  00D4                     l4159:
  5273  00D4  0821               	movf	___lwdiv@divisor,w
  5274  00D5  02A3               	subwf	___lwdiv@dividend,f
  5275  00D6  0822               	movf	___lwdiv@divisor+1,w
  5276  00D7  1C03               	skipc
  5277  00D8  03A4               	decf	___lwdiv@dividend+1,f
  5278  00D9  02A4               	subwf	___lwdiv@dividend+1,f
  5279  00DA                     l4161:
  5280  00DA  1427               	bsf	___lwdiv@quotient,0
  5281  00DB                     l4163:
  5282  00DB  3001               	movlw	1
  5283  00DC                     u6455:
  5284  00DC  1003               	clrc
  5285  00DD  0CA2               	rrf	___lwdiv@divisor+1,f
  5286  00DE  0CA1               	rrf	___lwdiv@divisor,f
  5287  00DF  3EFF               	addlw	-1
  5288  00E0  1D03               	skipz
  5289  00E1  28DC               	goto	u6455
  5290  00E2                     l4165:
  5291  00E2  3001               	movlw	1
  5292  00E3  02A6               	subwf	___lwdiv@counter,f
  5293  00E4  1D03               	btfss	3,2
  5294  00E5  28E7               	goto	u6461
  5295  00E6  28E8               	goto	u6460
  5296  00E7                     u6461:
  5297  00E7  28C3               	goto	l4157
  5298  00E8                     u6460:
  5299  00E8                     l4167:
  5300  00E8  0828               	movf	___lwdiv@quotient+1,w
  5301  00E9  00A2               	movwf	?___lwdiv+1
  5302  00EA  0827               	movf	___lwdiv@quotient,w
  5303  00EB  00A1               	movwf	?___lwdiv
  5304  00EC                     l746:
  5305  00EC  0008               	return
  5306  00ED                     __end_of___lwdiv:
  5307                           
  5308                           	psect	text16
  5309  1F43                     __ptext16:	
  5310 ;; *************** function __tdiv_to_l_ *****************
  5311 ;; Defined at:
  5312 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;  f1              4    0[BANK0 ] float 
  5315 ;;  f2              4    4[BANK0 ] float 
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;  quot            4    8[BANK0 ] unsigned long 
  5318 ;;  exp1            1   13[BANK0 ] unsigned char 
  5319 ;;  cntr            1   12[BANK0 ] unsigned char 
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  4    0[BANK0 ] unsigned long 
  5322 ;; Registers used:
  5323 ;;		wreg, status,2, status,0
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5329 ;;      Params:         0       8       0       0       0
  5330 ;;      Locals:         0       6       0       0       0
  5331 ;;      Temps:          4       0       0       0       0
  5332 ;;      Totals:         4      14       0       0       0
  5333 ;;Total ram usage:       18 bytes
  5334 ;; Hardware stack levels used:    1
  5335 ;; Hardware stack levels required when called:    1
  5336 ;; This function calls:
  5337 ;;		Nothing
  5338 ;; This function is called by:
  5339 ;;		_sprintf
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           
  5344                           ;psect for function __tdiv_to_l_
  5345  1F43                     __tdiv_to_l_:
  5346  1F43                     l4271:	
  5347                           ;incstack = 0
  5348                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5349                           
  5350  1F43  1283               	bcf	3,5	;RP0=0, select bank0
  5351  1F44  1303               	bcf	3,6	;RP1=0, select bank0
  5352  1F45  0820               	movf	__tdiv_to_l_@f1,w
  5353  1F46  00F3               	movwf	??__tdiv_to_l_
  5354  1F47  0821               	movf	__tdiv_to_l_@f1+1,w
  5355  1F48  00F4               	movwf	??__tdiv_to_l_+1
  5356  1F49  0822               	movf	__tdiv_to_l_@f1+2,w
  5357  1F4A  00F5               	movwf	??__tdiv_to_l_+2
  5358  1F4B  1003               	clrc
  5359  1F4C  0D74               	rlf	??__tdiv_to_l_+1,w
  5360  1F4D  0D75               	rlf	??__tdiv_to_l_+2,w
  5361  1F4E  00F6               	movwf	??__tdiv_to_l_+3
  5362  1F4F  0876               	movf	??__tdiv_to_l_+3,w
  5363  1F50  00AD               	movwf	__tdiv_to_l_@exp1
  5364  1F51  082D               	movf	__tdiv_to_l_@exp1,w
  5365  1F52  1D03               	btfss	3,2
  5366  1F53  2F55               	goto	u6781
  5367  1F54  2F56               	goto	u6780
  5368  1F55                     u6781:
  5369  1F55  2F5F               	goto	l4277
  5370  1F56                     u6780:
  5371  1F56                     l4273:
  5372  1F56  3000               	movlw	0
  5373  1F57  00A3               	movwf	?__tdiv_to_l_+3
  5374  1F58  3000               	movlw	0
  5375  1F59  00A2               	movwf	?__tdiv_to_l_+2
  5376  1F5A  3000               	movlw	0
  5377  1F5B  00A1               	movwf	?__tdiv_to_l_+1
  5378  1F5C  3000               	movlw	0
  5379  1F5D  00A0               	movwf	?__tdiv_to_l_
  5380  1F5E  2FFF               	goto	l657
  5381  1F5F                     l4277:
  5382  1F5F  0824               	movf	__tdiv_to_l_@f2,w
  5383  1F60  00F3               	movwf	??__tdiv_to_l_
  5384  1F61  0825               	movf	__tdiv_to_l_@f2+1,w
  5385  1F62  00F4               	movwf	??__tdiv_to_l_+1
  5386  1F63  0826               	movf	__tdiv_to_l_@f2+2,w
  5387  1F64  00F5               	movwf	??__tdiv_to_l_+2
  5388  1F65  1003               	clrc
  5389  1F66  0D74               	rlf	??__tdiv_to_l_+1,w
  5390  1F67  0D75               	rlf	??__tdiv_to_l_+2,w
  5391  1F68  00F6               	movwf	??__tdiv_to_l_+3
  5392  1F69  0876               	movf	??__tdiv_to_l_+3,w
  5393  1F6A  00AC               	movwf	__tdiv_to_l_@cntr
  5394  1F6B  082C               	movf	__tdiv_to_l_@cntr,w
  5395  1F6C  1D03               	btfss	3,2
  5396  1F6D  2F6F               	goto	u6791
  5397  1F6E  2F70               	goto	u6790
  5398  1F6F                     u6791:
  5399  1F6F  2F71               	goto	l658
  5400  1F70                     u6790:
  5401  1F70  2F56               	goto	l4273
  5402  1F71                     l658:
  5403  1F71  17A1               	bsf	__tdiv_to_l_@f1+1,7
  5404  1F72                     l4283:
  5405  1F72  30FF               	movlw	255
  5406  1F73  05A0               	andwf	__tdiv_to_l_@f1,f
  5407  1F74  30FF               	movlw	255
  5408  1F75  05A1               	andwf	__tdiv_to_l_@f1+1,f
  5409  1F76  3000               	movlw	0
  5410  1F77  05A2               	andwf	__tdiv_to_l_@f1+2,f
  5411  1F78                     l4285:
  5412  1F78  17A5               	bsf	__tdiv_to_l_@f2+1,7
  5413  1F79  30FF               	movlw	255
  5414  1F7A  05A4               	andwf	__tdiv_to_l_@f2,f
  5415  1F7B  30FF               	movlw	255
  5416  1F7C  05A5               	andwf	__tdiv_to_l_@f2+1,f
  5417  1F7D  3000               	movlw	0
  5418  1F7E  05A6               	andwf	__tdiv_to_l_@f2+2,f
  5419  1F7F  3000               	movlw	0
  5420  1F80  00AB               	movwf	__tdiv_to_l_@quot+3
  5421  1F81  3000               	movlw	0
  5422  1F82  00AA               	movwf	__tdiv_to_l_@quot+2
  5423  1F83  3000               	movlw	0
  5424  1F84  00A9               	movwf	__tdiv_to_l_@quot+1
  5425  1F85  3000               	movlw	0
  5426  1F86  00A8               	movwf	__tdiv_to_l_@quot
  5427  1F87                     l4287:
  5428  1F87  307F               	movlw	127
  5429  1F88  02AD               	subwf	__tdiv_to_l_@exp1,f
  5430  1F89                     l4289:
  5431  1F89  3098               	movlw	152
  5432  1F8A  072C               	addwf	__tdiv_to_l_@cntr,w
  5433  1F8B  00F3               	movwf	??__tdiv_to_l_
  5434  1F8C  0873               	movf	??__tdiv_to_l_,w
  5435  1F8D  02AD               	subwf	__tdiv_to_l_@exp1,f
  5436  1F8E  3018               	movlw	24
  5437  1F8F  00F3               	movwf	??__tdiv_to_l_
  5438  1F90  0873               	movf	??__tdiv_to_l_,w
  5439  1F91  00AC               	movwf	__tdiv_to_l_@cntr
  5440  1F92                     l4291:
  5441  1F92  3001               	movlw	1
  5442  1F93  00F3               	movwf	??__tdiv_to_l_
  5443  1F94                     u6805:
  5444  1F94  1003               	clrc
  5445  1F95  0DA8               	rlf	__tdiv_to_l_@quot,f
  5446  1F96  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  5447  1F97  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  5448  1F98  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  5449  1F99  0BF3               	decfsz	??__tdiv_to_l_,f
  5450  1F9A  2F94               	goto	u6805
  5451  1F9B                     l4293:
  5452  1F9B  0826               	movf	__tdiv_to_l_@f2+2,w
  5453  1F9C  0222               	subwf	__tdiv_to_l_@f1+2,w
  5454  1F9D  1D03               	skipz
  5455  1F9E  2FA5               	goto	u6815
  5456  1F9F  0825               	movf	__tdiv_to_l_@f2+1,w
  5457  1FA0  0221               	subwf	__tdiv_to_l_@f1+1,w
  5458  1FA1  1D03               	skipz
  5459  1FA2  2FA5               	goto	u6815
  5460  1FA3  0824               	movf	__tdiv_to_l_@f2,w
  5461  1FA4  0220               	subwf	__tdiv_to_l_@f1,w
  5462  1FA5                     u6815:
  5463  1FA5  1C03               	skipc
  5464  1FA6  2FA8               	goto	u6811
  5465  1FA7  2FA9               	goto	u6810
  5466  1FA8                     u6811:
  5467  1FA8  2FB4               	goto	l4299
  5468  1FA9                     u6810:
  5469  1FA9                     l4295:
  5470  1FA9  0824               	movf	__tdiv_to_l_@f2,w
  5471  1FAA  02A0               	subwf	__tdiv_to_l_@f1,f
  5472  1FAB  0825               	movf	__tdiv_to_l_@f2+1,w
  5473  1FAC  1C03               	skipc
  5474  1FAD  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  5475  1FAE  02A1               	subwf	__tdiv_to_l_@f1+1,f
  5476  1FAF  0826               	movf	__tdiv_to_l_@f2+2,w
  5477  1FB0  1C03               	skipc
  5478  1FB1  0A26               	incf	__tdiv_to_l_@f2+2,w
  5479  1FB2  02A2               	subwf	__tdiv_to_l_@f1+2,f
  5480  1FB3                     l4297:
  5481  1FB3  1428               	bsf	__tdiv_to_l_@quot,0
  5482  1FB4                     l4299:
  5483  1FB4  3001               	movlw	1
  5484  1FB5                     u6825:
  5485  1FB5  1003               	clrc
  5486  1FB6  0DA0               	rlf	__tdiv_to_l_@f1,f
  5487  1FB7  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  5488  1FB8  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  5489  1FB9  3EFF               	addlw	-1
  5490  1FBA  1D03               	skipz
  5491  1FBB  2FB5               	goto	u6825
  5492  1FBC                     l4301:
  5493  1FBC  3001               	movlw	1
  5494  1FBD  02AC               	subwf	__tdiv_to_l_@cntr,f
  5495  1FBE  1D03               	btfss	3,2
  5496  1FBF  2FC1               	goto	u6831
  5497  1FC0  2FC2               	goto	u6830
  5498  1FC1                     u6831:
  5499  1FC1  2F92               	goto	l4291
  5500  1FC2                     u6830:
  5501  1FC2                     l661:
  5502  1FC2  1FAD               	btfss	__tdiv_to_l_@exp1,7
  5503  1FC3  2FC5               	goto	u6841
  5504  1FC4  2FC6               	goto	u6840
  5505  1FC5                     u6841:
  5506  1FC5  2FE0               	goto	l4311
  5507  1FC6                     u6840:
  5508  1FC6                     l4303:
  5509  1FC6  082D               	movf	__tdiv_to_l_@exp1,w
  5510  1FC7  3A80               	xorlw	128
  5511  1FC8  3E97               	addlw	151
  5512  1FC9  1803               	skipnc
  5513  1FCA  2FCC               	goto	u6851
  5514  1FCB  2FCD               	goto	u6850
  5515  1FCC                     u6851:
  5516  1FCC  2FCE               	goto	l4309
  5517  1FCD                     u6850:
  5518  1FCD  2F56               	goto	l4273
  5519  1FCE                     l4309:
  5520  1FCE  3001               	movlw	1
  5521  1FCF                     u6865:
  5522  1FCF  1003               	clrc
  5523  1FD0  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  5524  1FD1  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  5525  1FD2  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  5526  1FD3  0CA8               	rrf	__tdiv_to_l_@quot,f
  5527  1FD4  3EFF               	addlw	-1
  5528  1FD5  1D03               	skipz
  5529  1FD6  2FCF               	goto	u6865
  5530  1FD7  3001               	movlw	1
  5531  1FD8  00F3               	movwf	??__tdiv_to_l_
  5532  1FD9  0873               	movf	??__tdiv_to_l_,w
  5533  1FDA  07AD               	addwf	__tdiv_to_l_@exp1,f
  5534  1FDB  1D03               	btfss	3,2
  5535  1FDC  2FDE               	goto	u6871
  5536  1FDD  2FDF               	goto	u6870
  5537  1FDE                     u6871:
  5538  1FDE  2FCE               	goto	l4309
  5539  1FDF                     u6870:
  5540  1FDF  2FF7               	goto	l4319
  5541  1FE0                     l4311:
  5542  1FE0  3018               	movlw	24
  5543  1FE1  022D               	subwf	__tdiv_to_l_@exp1,w
  5544  1FE2  1C03               	skipc
  5545  1FE3  2FE5               	goto	u6881
  5546  1FE4  2FE6               	goto	u6880
  5547  1FE5                     u6881:
  5548  1FE5  2FF2               	goto	l668
  5549  1FE6                     u6880:
  5550  1FE6  2F56               	goto	l4273
  5551  1FE7                     l4317:
  5552  1FE7  3001               	movlw	1
  5553  1FE8  00F3               	movwf	??__tdiv_to_l_
  5554  1FE9                     u6895:
  5555  1FE9  1003               	clrc
  5556  1FEA  0DA8               	rlf	__tdiv_to_l_@quot,f
  5557  1FEB  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  5558  1FEC  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  5559  1FED  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  5560  1FEE  0BF3               	decfsz	??__tdiv_to_l_,f
  5561  1FEF  2FE9               	goto	u6895
  5562  1FF0  3001               	movlw	1
  5563  1FF1  02AD               	subwf	__tdiv_to_l_@exp1,f
  5564  1FF2                     l668:
  5565  1FF2  082D               	movf	__tdiv_to_l_@exp1,w
  5566  1FF3  1D03               	btfss	3,2
  5567  1FF4  2FF6               	goto	u6901
  5568  1FF5  2FF7               	goto	u6900
  5569  1FF6                     u6901:
  5570  1FF6  2FE7               	goto	l4317
  5571  1FF7                     u6900:
  5572  1FF7                     l4319:
  5573  1FF7  082B               	movf	__tdiv_to_l_@quot+3,w
  5574  1FF8  00A3               	movwf	?__tdiv_to_l_+3
  5575  1FF9  082A               	movf	__tdiv_to_l_@quot+2,w
  5576  1FFA  00A2               	movwf	?__tdiv_to_l_+2
  5577  1FFB  0829               	movf	__tdiv_to_l_@quot+1,w
  5578  1FFC  00A1               	movwf	?__tdiv_to_l_+1
  5579  1FFD  0828               	movf	__tdiv_to_l_@quot,w
  5580  1FFE  00A0               	movwf	?__tdiv_to_l_
  5581  1FFF                     l657:
  5582  1FFF  0008               	return
  5583  2000                     __end_of__tdiv_to_l_:
  5584                           
  5585                           	psect	text17
  5586  087E                     __ptext17:	
  5587 ;; *************** function __div_to_l_ *****************
  5588 ;; Defined at:
  5589 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;  f1              4    0[BANK0 ] unsigned long 
  5592 ;;  f2              4    4[BANK0 ] unsigned long 
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;  quot            4    8[BANK0 ] unsigned long 
  5595 ;;  exp1            1   13[BANK0 ] unsigned char 
  5596 ;;  cntr            1   12[BANK0 ] unsigned char 
  5597 ;; Return value:  Size  Location     Type
  5598 ;;                  4    0[BANK0 ] unsigned long 
  5599 ;; Registers used:
  5600 ;;		wreg, status,2, status,0
  5601 ;; Tracked objects:
  5602 ;;		On entry : 0/0
  5603 ;;		On exit  : 0/0
  5604 ;;		Unchanged: 0/0
  5605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5606 ;;      Params:         0       8       0       0       0
  5607 ;;      Locals:         0       6       0       0       0
  5608 ;;      Temps:          1       0       0       0       0
  5609 ;;      Totals:         1      14       0       0       0
  5610 ;;Total ram usage:       15 bytes
  5611 ;; Hardware stack levels used:    1
  5612 ;; Hardware stack levels required when called:    1
  5613 ;; This function calls:
  5614 ;;		Nothing
  5615 ;; This function is called by:
  5616 ;;		_sprintf
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619                           
  5620                           
  5621                           ;psect for function __div_to_l_
  5622  087E                     __div_to_l_:
  5623  087E                     l4323:	
  5624                           ;incstack = 0
  5625                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5626                           
  5627  087E  1003               	clrc
  5628  087F  1283               	bcf	3,5	;RP0=0, select bank0
  5629  0880  1303               	bcf	3,6	;RP1=0, select bank0
  5630  0881  0D22               	rlf	__div_to_l_@f1+2,w
  5631  0882  0D23               	rlf	__div_to_l_@f1+3,w
  5632  0883  00F3               	movwf	??__div_to_l_
  5633  0884  0873               	movf	??__div_to_l_,w
  5634  0885  00AD               	movwf	__div_to_l_@exp1
  5635  0886  082D               	movf	__div_to_l_@exp1,w
  5636  0887  1D03               	btfss	3,2
  5637  0888  288A               	goto	u6911
  5638  0889  288B               	goto	u6910
  5639  088A                     u6911:
  5640  088A  2894               	goto	l4329
  5641  088B                     u6910:
  5642  088B                     l4325:
  5643  088B  3000               	movlw	0
  5644  088C  00A3               	movwf	?__div_to_l_+3
  5645  088D  3000               	movlw	0
  5646  088E  00A2               	movwf	?__div_to_l_+2
  5647  088F  3000               	movlw	0
  5648  0890  00A1               	movwf	?__div_to_l_+1
  5649  0891  3000               	movlw	0
  5650  0892  00A0               	movwf	?__div_to_l_
  5651  0893  293B               	goto	l610
  5652  0894                     l4329:
  5653  0894  1003               	clrc
  5654  0895  0D26               	rlf	__div_to_l_@f2+2,w
  5655  0896  0D27               	rlf	__div_to_l_@f2+3,w
  5656  0897  00F3               	movwf	??__div_to_l_
  5657  0898  0873               	movf	??__div_to_l_,w
  5658  0899  00AC               	movwf	__div_to_l_@cntr
  5659  089A  082C               	movf	__div_to_l_@cntr,w
  5660  089B  1D03               	btfss	3,2
  5661  089C  289E               	goto	u6921
  5662  089D  289F               	goto	u6920
  5663  089E                     u6921:
  5664  089E  28A0               	goto	l611
  5665  089F                     u6920:
  5666  089F  288B               	goto	l4325
  5667  08A0                     l611:
  5668  08A0  17A2               	bsf	__div_to_l_@f1+2,7
  5669  08A1                     l4335:
  5670  08A1  30FF               	movlw	255
  5671  08A2  05A0               	andwf	__div_to_l_@f1,f
  5672  08A3  30FF               	movlw	255
  5673  08A4  05A1               	andwf	__div_to_l_@f1+1,f
  5674  08A5  30FF               	movlw	255
  5675  08A6  05A2               	andwf	__div_to_l_@f1+2,f
  5676  08A7  3000               	movlw	0
  5677  08A8  05A3               	andwf	__div_to_l_@f1+3,f
  5678  08A9                     l4337:
  5679  08A9  17A6               	bsf	__div_to_l_@f2+2,7
  5680  08AA  30FF               	movlw	255
  5681  08AB  05A4               	andwf	__div_to_l_@f2,f
  5682  08AC  30FF               	movlw	255
  5683  08AD  05A5               	andwf	__div_to_l_@f2+1,f
  5684  08AE  30FF               	movlw	255
  5685  08AF  05A6               	andwf	__div_to_l_@f2+2,f
  5686  08B0  3000               	movlw	0
  5687  08B1  05A7               	andwf	__div_to_l_@f2+3,f
  5688  08B2  3000               	movlw	0
  5689  08B3  00AB               	movwf	__div_to_l_@quot+3
  5690  08B4  3000               	movlw	0
  5691  08B5  00AA               	movwf	__div_to_l_@quot+2
  5692  08B6  3000               	movlw	0
  5693  08B7  00A9               	movwf	__div_to_l_@quot+1
  5694  08B8  3000               	movlw	0
  5695  08B9  00A8               	movwf	__div_to_l_@quot
  5696  08BA                     l4339:
  5697  08BA  307F               	movlw	127
  5698  08BB  02AD               	subwf	__div_to_l_@exp1,f
  5699  08BC                     l4341:
  5700  08BC  30A0               	movlw	160
  5701  08BD  072C               	addwf	__div_to_l_@cntr,w
  5702  08BE  00F3               	movwf	??__div_to_l_
  5703  08BF  0873               	movf	??__div_to_l_,w
  5704  08C0  02AD               	subwf	__div_to_l_@exp1,f
  5705  08C1  3020               	movlw	32
  5706  08C2  00F3               	movwf	??__div_to_l_
  5707  08C3  0873               	movf	??__div_to_l_,w
  5708  08C4  00AC               	movwf	__div_to_l_@cntr
  5709  08C5                     l4343:
  5710  08C5  3001               	movlw	1
  5711  08C6  00F3               	movwf	??__div_to_l_
  5712  08C7                     u6935:
  5713  08C7  1003               	clrc
  5714  08C8  0DA8               	rlf	__div_to_l_@quot,f
  5715  08C9  0DA9               	rlf	__div_to_l_@quot+1,f
  5716  08CA  0DAA               	rlf	__div_to_l_@quot+2,f
  5717  08CB  0DAB               	rlf	__div_to_l_@quot+3,f
  5718  08CC  0BF3               	decfsz	??__div_to_l_,f
  5719  08CD  28C7               	goto	u6935
  5720  08CE                     l4345:
  5721  08CE  0827               	movf	__div_to_l_@f2+3,w
  5722  08CF  0223               	subwf	__div_to_l_@f1+3,w
  5723  08D0  1D03               	skipz
  5724  08D1  28DC               	goto	u6945
  5725  08D2  0826               	movf	__div_to_l_@f2+2,w
  5726  08D3  0222               	subwf	__div_to_l_@f1+2,w
  5727  08D4  1D03               	skipz
  5728  08D5  28DC               	goto	u6945
  5729  08D6  0825               	movf	__div_to_l_@f2+1,w
  5730  08D7  0221               	subwf	__div_to_l_@f1+1,w
  5731  08D8  1D03               	skipz
  5732  08D9  28DC               	goto	u6945
  5733  08DA  0824               	movf	__div_to_l_@f2,w
  5734  08DB  0220               	subwf	__div_to_l_@f1,w
  5735  08DC                     u6945:
  5736  08DC  1C03               	skipc
  5737  08DD  28DF               	goto	u6941
  5738  08DE  28E0               	goto	u6940
  5739  08DF                     u6941:
  5740  08DF  28EF               	goto	l4351
  5741  08E0                     u6940:
  5742  08E0                     l4347:
  5743  08E0  0824               	movf	__div_to_l_@f2,w
  5744  08E1  02A0               	subwf	__div_to_l_@f1,f
  5745  08E2  0825               	movf	__div_to_l_@f2+1,w
  5746  08E3  1C03               	skipc
  5747  08E4  0F25               	incfsz	__div_to_l_@f2+1,w
  5748  08E5  02A1               	subwf	__div_to_l_@f1+1,f
  5749  08E6  0826               	movf	__div_to_l_@f2+2,w
  5750  08E7  1C03               	skipc
  5751  08E8  0F26               	incfsz	__div_to_l_@f2+2,w
  5752  08E9  02A2               	subwf	__div_to_l_@f1+2,f
  5753  08EA  0827               	movf	__div_to_l_@f2+3,w
  5754  08EB  1C03               	skipc
  5755  08EC  0F27               	incfsz	__div_to_l_@f2+3,w
  5756  08ED  02A3               	subwf	__div_to_l_@f1+3,f
  5757  08EE                     l4349:
  5758  08EE  1428               	bsf	__div_to_l_@quot,0
  5759  08EF                     l4351:
  5760  08EF  3001               	movlw	1
  5761  08F0  00F3               	movwf	??__div_to_l_
  5762  08F1                     u6955:
  5763  08F1  1003               	clrc
  5764  08F2  0DA0               	rlf	__div_to_l_@f1,f
  5765  08F3  0DA1               	rlf	__div_to_l_@f1+1,f
  5766  08F4  0DA2               	rlf	__div_to_l_@f1+2,f
  5767  08F5  0DA3               	rlf	__div_to_l_@f1+3,f
  5768  08F6  0BF3               	decfsz	??__div_to_l_,f
  5769  08F7  28F1               	goto	u6955
  5770  08F8                     l4353:
  5771  08F8  3001               	movlw	1
  5772  08F9  02AC               	subwf	__div_to_l_@cntr,f
  5773  08FA  1D03               	btfss	3,2
  5774  08FB  28FD               	goto	u6961
  5775  08FC  28FE               	goto	u6960
  5776  08FD                     u6961:
  5777  08FD  28C5               	goto	l4343
  5778  08FE                     u6960:
  5779  08FE                     l614:
  5780  08FE  1FAD               	btfss	__div_to_l_@exp1,7
  5781  08FF  2901               	goto	u6971
  5782  0900  2902               	goto	u6970
  5783  0901                     u6971:
  5784  0901  291C               	goto	l4363
  5785  0902                     u6970:
  5786  0902                     l4355:
  5787  0902  082D               	movf	__div_to_l_@exp1,w
  5788  0903  3A80               	xorlw	128
  5789  0904  3E9F               	addlw	159
  5790  0905  1803               	skipnc
  5791  0906  2908               	goto	u6981
  5792  0907  2909               	goto	u6980
  5793  0908                     u6981:
  5794  0908  290A               	goto	l4361
  5795  0909                     u6980:
  5796  0909  288B               	goto	l4325
  5797  090A                     l4361:
  5798  090A  3001               	movlw	1
  5799  090B                     u6995:
  5800  090B  1003               	clrc
  5801  090C  0CAB               	rrf	__div_to_l_@quot+3,f
  5802  090D  0CAA               	rrf	__div_to_l_@quot+2,f
  5803  090E  0CA9               	rrf	__div_to_l_@quot+1,f
  5804  090F  0CA8               	rrf	__div_to_l_@quot,f
  5805  0910  3EFF               	addlw	-1
  5806  0911  1D03               	skipz
  5807  0912  290B               	goto	u6995
  5808  0913  3001               	movlw	1
  5809  0914  00F3               	movwf	??__div_to_l_
  5810  0915  0873               	movf	??__div_to_l_,w
  5811  0916  07AD               	addwf	__div_to_l_@exp1,f
  5812  0917  1D03               	btfss	3,2
  5813  0918  291A               	goto	u7001
  5814  0919  291B               	goto	u7000
  5815  091A                     u7001:
  5816  091A  290A               	goto	l4361
  5817  091B                     u7000:
  5818  091B  2933               	goto	l4371
  5819  091C                     l4363:
  5820  091C  3020               	movlw	32
  5821  091D  022D               	subwf	__div_to_l_@exp1,w
  5822  091E  1C03               	skipc
  5823  091F  2921               	goto	u7011
  5824  0920  2922               	goto	u7010
  5825  0921                     u7011:
  5826  0921  292E               	goto	l621
  5827  0922                     u7010:
  5828  0922  288B               	goto	l4325
  5829  0923                     l4369:
  5830  0923  3001               	movlw	1
  5831  0924  00F3               	movwf	??__div_to_l_
  5832  0925                     u7025:
  5833  0925  1003               	clrc
  5834  0926  0DA8               	rlf	__div_to_l_@quot,f
  5835  0927  0DA9               	rlf	__div_to_l_@quot+1,f
  5836  0928  0DAA               	rlf	__div_to_l_@quot+2,f
  5837  0929  0DAB               	rlf	__div_to_l_@quot+3,f
  5838  092A  0BF3               	decfsz	??__div_to_l_,f
  5839  092B  2925               	goto	u7025
  5840  092C  3001               	movlw	1
  5841  092D  02AD               	subwf	__div_to_l_@exp1,f
  5842  092E                     l621:
  5843  092E  082D               	movf	__div_to_l_@exp1,w
  5844  092F  1D03               	btfss	3,2
  5845  0930  2932               	goto	u7031
  5846  0931  2933               	goto	u7030
  5847  0932                     u7031:
  5848  0932  2923               	goto	l4369
  5849  0933                     u7030:
  5850  0933                     l4371:
  5851  0933  082B               	movf	__div_to_l_@quot+3,w
  5852  0934  00A3               	movwf	?__div_to_l_+3
  5853  0935  082A               	movf	__div_to_l_@quot+2,w
  5854  0936  00A2               	movwf	?__div_to_l_+2
  5855  0937  0829               	movf	__div_to_l_@quot+1,w
  5856  0938  00A1               	movwf	?__div_to_l_+1
  5857  0939  0828               	movf	__div_to_l_@quot,w
  5858  093A  00A0               	movwf	?__div_to_l_
  5859  093B                     l610:
  5860  093B  0008               	return
  5861  093C                     __end_of__div_to_l_:
  5862                           
  5863                           	psect	text18
  5864  007C                     __ptext18:	
  5865 ;; *************** function ___wmul *****************
  5866 ;; Defined at:
  5867 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;  multiplier      2    3[COMMON] unsigned int 
  5870 ;;  multiplicand    2    5[COMMON] unsigned int 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  product         2    0[BANK0 ] unsigned int 
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  2    3[COMMON] unsigned int 
  5875 ;; Registers used:
  5876 ;;		wreg, status,2, status,0
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5882 ;;      Params:         4       0       0       0       0
  5883 ;;      Locals:         0       2       0       0       0
  5884 ;;      Temps:          0       0       0       0       0
  5885 ;;      Totals:         4       2       0       0       0
  5886 ;;Total ram usage:        6 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    1
  5889 ;; This function calls:
  5890 ;;		Nothing
  5891 ;; This function is called by:
  5892 ;;		_sprintf
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           
  5897                           ;psect for function ___wmul
  5898  007C                     ___wmul:
  5899  007C                     l4375:	
  5900                           ;incstack = 0
  5901                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5902                           
  5903  007C  1283               	bcf	3,5	;RP0=0, select bank0
  5904  007D  1303               	bcf	3,6	;RP1=0, select bank0
  5905  007E  01A0               	clrf	___wmul@product
  5906  007F  01A1               	clrf	___wmul@product+1
  5907  0080                     l4377:
  5908  0080  1C73               	btfss	___wmul@multiplier,0
  5909  0081  2883               	goto	u7041
  5910  0082  2884               	goto	u7040
  5911  0083                     u7041:
  5912  0083  288C               	goto	l440
  5913  0084                     u7040:
  5914  0084                     l4379:
  5915  0084  0875               	movf	___wmul@multiplicand,w
  5916  0085  1283               	bcf	3,5	;RP0=0, select bank0
  5917  0086  1303               	bcf	3,6	;RP1=0, select bank0
  5918  0087  07A0               	addwf	___wmul@product,f
  5919  0088  1803               	skipnc
  5920  0089  0AA1               	incf	___wmul@product+1,f
  5921  008A  0876               	movf	___wmul@multiplicand+1,w
  5922  008B  07A1               	addwf	___wmul@product+1,f
  5923  008C                     l440:
  5924  008C  3001               	movlw	1
  5925  008D                     u7055:
  5926  008D  1003               	clrc
  5927  008E  0DF5               	rlf	___wmul@multiplicand,f
  5928  008F  0DF6               	rlf	___wmul@multiplicand+1,f
  5929  0090  3EFF               	addlw	-1
  5930  0091  1D03               	skipz
  5931  0092  288D               	goto	u7055
  5932  0093                     l4381:
  5933  0093  3001               	movlw	1
  5934  0094                     u7065:
  5935  0094  1003               	clrc
  5936  0095  0CF4               	rrf	___wmul@multiplier+1,f
  5937  0096  0CF3               	rrf	___wmul@multiplier,f
  5938  0097  3EFF               	addlw	-1
  5939  0098  1D03               	skipz
  5940  0099  2894               	goto	u7065
  5941  009A                     l4383:
  5942  009A  0873               	movf	___wmul@multiplier,w
  5943  009B  0474               	iorwf	___wmul@multiplier+1,w
  5944  009C  1D03               	btfss	3,2
  5945  009D  289F               	goto	u7071
  5946  009E  28A0               	goto	u7070
  5947  009F                     u7071:
  5948  009F  2880               	goto	l4377
  5949  00A0                     u7070:
  5950  00A0                     l4385:
  5951  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  5952  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  5953  00A2  0821               	movf	___wmul@product+1,w
  5954  00A3  00F4               	movwf	?___wmul+1
  5955  00A4  0820               	movf	___wmul@product,w
  5956  00A5  00F3               	movwf	?___wmul
  5957  00A6                     l442:
  5958  00A6  0008               	return
  5959  00A7                     __end_of___wmul:
  5960                           
  5961                           	psect	text19
  5962  1A06                     __ptext19:	
  5963 ;; *************** function ___llmod *****************
  5964 ;; Defined at:
  5965 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;  divisor         4    0[BANK0 ] unsigned long 
  5968 ;;  dividend        4    4[BANK0 ] unsigned long 
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;  counter         1    4[COMMON] unsigned char 
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  4    0[BANK0 ] unsigned long 
  5973 ;; Registers used:
  5974 ;;		wreg, status,2, status,0
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5980 ;;      Params:         0       8       0       0       0
  5981 ;;      Locals:         1       0       0       0       0
  5982 ;;      Temps:          1       0       0       0       0
  5983 ;;      Totals:         2       8       0       0       0
  5984 ;;Total ram usage:       10 bytes
  5985 ;; Hardware stack levels used:    1
  5986 ;; Hardware stack levels required when called:    1
  5987 ;; This function calls:
  5988 ;;		Nothing
  5989 ;; This function is called by:
  5990 ;;		_sprintf
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           
  5995                           ;psect for function ___llmod
  5996  1A06                     ___llmod:
  5997  1A06                     l4445:	
  5998                           ;incstack = 0
  5999                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6000                           
  6001  1A06  1283               	bcf	3,5	;RP0=0, select bank0
  6002  1A07  1303               	bcf	3,6	;RP1=0, select bank0
  6003  1A08  0823               	movf	___llmod@divisor+3,w
  6004  1A09  0422               	iorwf	___llmod@divisor+2,w
  6005  1A0A  0421               	iorwf	___llmod@divisor+1,w
  6006  1A0B  0420               	iorwf	___llmod@divisor,w
  6007  1A0C  1903               	skipnz
  6008  1A0D  2A0F               	goto	u7251
  6009  1A0E  2A10               	goto	u7250
  6010  1A0F                     u7251:
  6011  1A0F  2A53               	goto	l4461
  6012  1A10                     u7250:
  6013  1A10                     l4447:
  6014  1A10  01F4               	clrf	___llmod@counter
  6015  1A11  0AF4               	incf	___llmod@counter,f
  6016  1A12  2A20               	goto	l4451
  6017  1A13                     l4449:
  6018  1A13  3001               	movlw	1
  6019  1A14  00F3               	movwf	??___llmod
  6020  1A15                     u7265:
  6021  1A15  1003               	clrc
  6022  1A16  0DA0               	rlf	___llmod@divisor,f
  6023  1A17  0DA1               	rlf	___llmod@divisor+1,f
  6024  1A18  0DA2               	rlf	___llmod@divisor+2,f
  6025  1A19  0DA3               	rlf	___llmod@divisor+3,f
  6026  1A1A  0BF3               	decfsz	??___llmod,f
  6027  1A1B  2A15               	goto	u7265
  6028  1A1C  3001               	movlw	1
  6029  1A1D  00F3               	movwf	??___llmod
  6030  1A1E  0873               	movf	??___llmod,w
  6031  1A1F  07F4               	addwf	___llmod@counter,f
  6032  1A20                     l4451:
  6033  1A20  1FA3               	btfss	___llmod@divisor+3,7
  6034  1A21  2A23               	goto	u7271
  6035  1A22  2A24               	goto	u7270
  6036  1A23                     u7271:
  6037  1A23  2A13               	goto	l4449
  6038  1A24                     u7270:
  6039  1A24                     l4453:
  6040  1A24  0823               	movf	___llmod@divisor+3,w
  6041  1A25  0227               	subwf	___llmod@dividend+3,w
  6042  1A26  1D03               	skipz
  6043  1A27  2A32               	goto	u7285
  6044  1A28  0822               	movf	___llmod@divisor+2,w
  6045  1A29  0226               	subwf	___llmod@dividend+2,w
  6046  1A2A  1D03               	skipz
  6047  1A2B  2A32               	goto	u7285
  6048  1A2C  0821               	movf	___llmod@divisor+1,w
  6049  1A2D  0225               	subwf	___llmod@dividend+1,w
  6050  1A2E  1D03               	skipz
  6051  1A2F  2A32               	goto	u7285
  6052  1A30  0820               	movf	___llmod@divisor,w
  6053  1A31  0224               	subwf	___llmod@dividend,w
  6054  1A32                     u7285:
  6055  1A32  1C03               	skipc
  6056  1A33  2A35               	goto	u7281
  6057  1A34  2A36               	goto	u7280
  6058  1A35                     u7281:
  6059  1A35  2A44               	goto	l4457
  6060  1A36                     u7280:
  6061  1A36                     l4455:
  6062  1A36  0820               	movf	___llmod@divisor,w
  6063  1A37  02A4               	subwf	___llmod@dividend,f
  6064  1A38  0821               	movf	___llmod@divisor+1,w
  6065  1A39  1C03               	skipc
  6066  1A3A  0F21               	incfsz	___llmod@divisor+1,w
  6067  1A3B  02A5               	subwf	___llmod@dividend+1,f
  6068  1A3C  0822               	movf	___llmod@divisor+2,w
  6069  1A3D  1C03               	skipc
  6070  1A3E  0F22               	incfsz	___llmod@divisor+2,w
  6071  1A3F  02A6               	subwf	___llmod@dividend+2,f
  6072  1A40  0823               	movf	___llmod@divisor+3,w
  6073  1A41  1C03               	skipc
  6074  1A42  0F23               	incfsz	___llmod@divisor+3,w
  6075  1A43  02A7               	subwf	___llmod@dividend+3,f
  6076  1A44                     l4457:
  6077  1A44  3001               	movlw	1
  6078  1A45                     u7295:
  6079  1A45  1003               	clrc
  6080  1A46  0CA3               	rrf	___llmod@divisor+3,f
  6081  1A47  0CA2               	rrf	___llmod@divisor+2,f
  6082  1A48  0CA1               	rrf	___llmod@divisor+1,f
  6083  1A49  0CA0               	rrf	___llmod@divisor,f
  6084  1A4A  3EFF               	addlw	-1
  6085  1A4B  1D03               	skipz
  6086  1A4C  2A45               	goto	u7295
  6087  1A4D                     l4459:
  6088  1A4D  3001               	movlw	1
  6089  1A4E  02F4               	subwf	___llmod@counter,f
  6090  1A4F  1D03               	btfss	3,2
  6091  1A50  2A52               	goto	u7301
  6092  1A51  2A53               	goto	u7300
  6093  1A52                     u7301:
  6094  1A52  2A24               	goto	l4453
  6095  1A53                     u7300:
  6096  1A53                     l4461:
  6097  1A53  0827               	movf	___llmod@dividend+3,w
  6098  1A54  00A3               	movwf	?___llmod+3
  6099  1A55  0826               	movf	___llmod@dividend+2,w
  6100  1A56  00A2               	movwf	?___llmod+2
  6101  1A57  0825               	movf	___llmod@dividend+1,w
  6102  1A58  00A1               	movwf	?___llmod+1
  6103  1A59  0824               	movf	___llmod@dividend,w
  6104  1A5A  00A0               	movwf	?___llmod
  6105  1A5B                     l696:
  6106  1A5B  0008               	return
  6107  1A5C                     __end_of___llmod:
  6108                           
  6109                           	psect	text20
  6110  1B79                     __ptext20:	
  6111 ;; *************** function ___lldiv *****************
  6112 ;; Defined at:
  6113 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  divisor         4    0[BANK0 ] unsigned long 
  6116 ;;  dividend        4    4[BANK0 ] unsigned long 
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;  quotient        4    8[BANK0 ] unsigned long 
  6119 ;;  counter         1   12[BANK0 ] unsigned char 
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  4    0[BANK0 ] unsigned long 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2, status,0
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6129 ;;      Params:         0       8       0       0       0
  6130 ;;      Locals:         0       5       0       0       0
  6131 ;;      Temps:          1       0       0       0       0
  6132 ;;      Totals:         1      13       0       0       0
  6133 ;;Total ram usage:       14 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:    1
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_sprintf
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           
  6144                           ;psect for function ___lldiv
  6145  1B79                     ___lldiv:
  6146  1B79                     l4389:	
  6147                           ;incstack = 0
  6148                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6149                           
  6150  1B79  3000               	movlw	0
  6151  1B7A  1283               	bcf	3,5	;RP0=0, select bank0
  6152  1B7B  1303               	bcf	3,6	;RP1=0, select bank0
  6153  1B7C  00AB               	movwf	___lldiv@quotient+3
  6154  1B7D  3000               	movlw	0
  6155  1B7E  00AA               	movwf	___lldiv@quotient+2
  6156  1B7F  3000               	movlw	0
  6157  1B80  00A9               	movwf	___lldiv@quotient+1
  6158  1B81  3000               	movlw	0
  6159  1B82  00A8               	movwf	___lldiv@quotient
  6160  1B83  0823               	movf	___lldiv@divisor+3,w
  6161  1B84  0422               	iorwf	___lldiv@divisor+2,w
  6162  1B85  0421               	iorwf	___lldiv@divisor+1,w
  6163  1B86  0420               	iorwf	___lldiv@divisor,w
  6164  1B87  1903               	skipnz
  6165  1B88  2B8A               	goto	u7081
  6166  1B89  2B8B               	goto	u7080
  6167  1B8A                     u7081:
  6168  1B8A  2BD8               	goto	l4409
  6169  1B8B                     u7080:
  6170  1B8B                     l4391:
  6171  1B8B  01AC               	clrf	___lldiv@counter
  6172  1B8C  0AAC               	incf	___lldiv@counter,f
  6173  1B8D  2B9B               	goto	l4395
  6174  1B8E                     l4393:
  6175  1B8E  3001               	movlw	1
  6176  1B8F  00F3               	movwf	??___lldiv
  6177  1B90                     u7095:
  6178  1B90  1003               	clrc
  6179  1B91  0DA0               	rlf	___lldiv@divisor,f
  6180  1B92  0DA1               	rlf	___lldiv@divisor+1,f
  6181  1B93  0DA2               	rlf	___lldiv@divisor+2,f
  6182  1B94  0DA3               	rlf	___lldiv@divisor+3,f
  6183  1B95  0BF3               	decfsz	??___lldiv,f
  6184  1B96  2B90               	goto	u7095
  6185  1B97  3001               	movlw	1
  6186  1B98  00F3               	movwf	??___lldiv
  6187  1B99  0873               	movf	??___lldiv,w
  6188  1B9A  07AC               	addwf	___lldiv@counter,f
  6189  1B9B                     l4395:
  6190  1B9B  1FA3               	btfss	___lldiv@divisor+3,7
  6191  1B9C  2B9E               	goto	u7101
  6192  1B9D  2B9F               	goto	u7100
  6193  1B9E                     u7101:
  6194  1B9E  2B8E               	goto	l4393
  6195  1B9F                     u7100:
  6196  1B9F                     l4397:
  6197  1B9F  3001               	movlw	1
  6198  1BA0  00F3               	movwf	??___lldiv
  6199  1BA1                     u7115:
  6200  1BA1  1003               	clrc
  6201  1BA2  0DA8               	rlf	___lldiv@quotient,f
  6202  1BA3  0DA9               	rlf	___lldiv@quotient+1,f
  6203  1BA4  0DAA               	rlf	___lldiv@quotient+2,f
  6204  1BA5  0DAB               	rlf	___lldiv@quotient+3,f
  6205  1BA6  0BF3               	decfsz	??___lldiv,f
  6206  1BA7  2BA1               	goto	u7115
  6207  1BA8                     l4399:
  6208  1BA8  0823               	movf	___lldiv@divisor+3,w
  6209  1BA9  0227               	subwf	___lldiv@dividend+3,w
  6210  1BAA  1D03               	skipz
  6211  1BAB  2BB6               	goto	u7125
  6212  1BAC  0822               	movf	___lldiv@divisor+2,w
  6213  1BAD  0226               	subwf	___lldiv@dividend+2,w
  6214  1BAE  1D03               	skipz
  6215  1BAF  2BB6               	goto	u7125
  6216  1BB0  0821               	movf	___lldiv@divisor+1,w
  6217  1BB1  0225               	subwf	___lldiv@dividend+1,w
  6218  1BB2  1D03               	skipz
  6219  1BB3  2BB6               	goto	u7125
  6220  1BB4  0820               	movf	___lldiv@divisor,w
  6221  1BB5  0224               	subwf	___lldiv@dividend,w
  6222  1BB6                     u7125:
  6223  1BB6  1C03               	skipc
  6224  1BB7  2BB9               	goto	u7121
  6225  1BB8  2BBA               	goto	u7120
  6226  1BB9                     u7121:
  6227  1BB9  2BC9               	goto	l4405
  6228  1BBA                     u7120:
  6229  1BBA                     l4401:
  6230  1BBA  0820               	movf	___lldiv@divisor,w
  6231  1BBB  02A4               	subwf	___lldiv@dividend,f
  6232  1BBC  0821               	movf	___lldiv@divisor+1,w
  6233  1BBD  1C03               	skipc
  6234  1BBE  0F21               	incfsz	___lldiv@divisor+1,w
  6235  1BBF  02A5               	subwf	___lldiv@dividend+1,f
  6236  1BC0  0822               	movf	___lldiv@divisor+2,w
  6237  1BC1  1C03               	skipc
  6238  1BC2  0F22               	incfsz	___lldiv@divisor+2,w
  6239  1BC3  02A6               	subwf	___lldiv@dividend+2,f
  6240  1BC4  0823               	movf	___lldiv@divisor+3,w
  6241  1BC5  1C03               	skipc
  6242  1BC6  0F23               	incfsz	___lldiv@divisor+3,w
  6243  1BC7  02A7               	subwf	___lldiv@dividend+3,f
  6244  1BC8                     l4403:
  6245  1BC8  1428               	bsf	___lldiv@quotient,0
  6246  1BC9                     l4405:
  6247  1BC9  3001               	movlw	1
  6248  1BCA                     u7135:
  6249  1BCA  1003               	clrc
  6250  1BCB  0CA3               	rrf	___lldiv@divisor+3,f
  6251  1BCC  0CA2               	rrf	___lldiv@divisor+2,f
  6252  1BCD  0CA1               	rrf	___lldiv@divisor+1,f
  6253  1BCE  0CA0               	rrf	___lldiv@divisor,f
  6254  1BCF  3EFF               	addlw	-1
  6255  1BD0  1D03               	skipz
  6256  1BD1  2BCA               	goto	u7135
  6257  1BD2                     l4407:
  6258  1BD2  3001               	movlw	1
  6259  1BD3  02AC               	subwf	___lldiv@counter,f
  6260  1BD4  1D03               	btfss	3,2
  6261  1BD5  2BD7               	goto	u7141
  6262  1BD6  2BD8               	goto	u7140
  6263  1BD7                     u7141:
  6264  1BD7  2B9F               	goto	l4397
  6265  1BD8                     u7140:
  6266  1BD8                     l4409:
  6267  1BD8  082B               	movf	___lldiv@quotient+3,w
  6268  1BD9  00A3               	movwf	?___lldiv+3
  6269  1BDA  082A               	movf	___lldiv@quotient+2,w
  6270  1BDB  00A2               	movwf	?___lldiv+2
  6271  1BDC  0829               	movf	___lldiv@quotient+1,w
  6272  1BDD  00A1               	movwf	?___lldiv+1
  6273  1BDE  0828               	movf	___lldiv@quotient,w
  6274  1BDF  00A0               	movwf	?___lldiv
  6275  1BE0                     l476:
  6276  1BE0  0008               	return
  6277  1BE1                     __end_of___lldiv:
  6278                           
  6279                           	psect	text21
  6280  0802                     __ptext21:	
  6281 ;; *************** function ___fltol *****************
  6282 ;; Defined at:
  6283 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;  f1              4   56[BANK0 ] unsigned long 
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;  exp1            1   66[BANK0 ] unsigned char 
  6288 ;;  sign1           1   65[BANK0 ] unsigned char 
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  4   56[BANK0 ] long 
  6291 ;; Registers used:
  6292 ;;		wreg, status,2, status,0
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6298 ;;      Params:         0       4       0       0       0
  6299 ;;      Locals:         0       2       0       0       0
  6300 ;;      Temps:          0       5       0       0       0
  6301 ;;      Totals:         0      11       0       0       0
  6302 ;;Total ram usage:       11 bytes
  6303 ;; Hardware stack levels used:    1
  6304 ;; Hardware stack levels required when called:    1
  6305 ;; This function calls:
  6306 ;;		Nothing
  6307 ;; This function is called by:
  6308 ;;		_sprintf
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           
  6313                           ;psect for function ___fltol
  6314  0802                     ___fltol:
  6315  0802                     l3303:	
  6316                           ;incstack = 0
  6317                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6318                           
  6319  0802  1003               	clrc
  6320  0803  1283               	bcf	3,5	;RP0=0, select bank0
  6321  0804  1303               	bcf	3,6	;RP1=0, select bank0
  6322  0805  0D5A               	rlf	___fltol@f1+2,w
  6323  0806  0D5B               	rlf	___fltol@f1+3,w
  6324  0807  00DC               	movwf	??___fltol
  6325  0808  085C               	movf	??___fltol,w
  6326  0809  00E2               	movwf	___fltol@exp1
  6327  080A  0862               	movf	___fltol@exp1,w
  6328  080B  1D03               	btfss	3,2
  6329  080C  280E               	goto	u5071
  6330  080D  280F               	goto	u5070
  6331  080E                     u5071:
  6332  080E  2818               	goto	l3309
  6333  080F                     u5070:
  6334  080F                     l3305:
  6335  080F  3000               	movlw	0
  6336  0810  00DB               	movwf	?___fltol+3
  6337  0811  3000               	movlw	0
  6338  0812  00DA               	movwf	?___fltol+2
  6339  0813  3000               	movlw	0
  6340  0814  00D9               	movwf	?___fltol+1
  6341  0815  3000               	movlw	0
  6342  0816  00D8               	movwf	?___fltol
  6343  0817  287D               	goto	l643
  6344  0818                     l3309:
  6345  0818  0858               	movf	___fltol@f1,w
  6346  0819  00DC               	movwf	??___fltol
  6347  081A  0859               	movf	___fltol@f1+1,w
  6348  081B  00DD               	movwf	??___fltol+1
  6349  081C  085A               	movf	___fltol@f1+2,w
  6350  081D  00DE               	movwf	??___fltol+2
  6351  081E  085B               	movf	___fltol@f1+3,w
  6352  081F  00DF               	movwf	??___fltol+3
  6353  0820  301F               	movlw	31
  6354  0821                     u5085:
  6355  0821  1003               	clrc
  6356  0822  0CDF               	rrf	??___fltol+3,f
  6357  0823  0CDE               	rrf	??___fltol+2,f
  6358  0824  0CDD               	rrf	??___fltol+1,f
  6359  0825  0CDC               	rrf	??___fltol,f
  6360  0826                     u5080:
  6361  0826  3EFF               	addlw	-1
  6362  0827  1D03               	skipz
  6363  0828  2821               	goto	u5085
  6364  0829  085C               	movf	??___fltol,w
  6365  082A  00E0               	movwf	??___fltol+4
  6366  082B  0860               	movf	??___fltol+4,w
  6367  082C  00E1               	movwf	___fltol@sign1
  6368  082D                     l3311:
  6369  082D  17DA               	bsf	___fltol@f1+2,7
  6370  082E                     l3313:
  6371  082E  30FF               	movlw	255
  6372  082F  05D8               	andwf	___fltol@f1,f
  6373  0830  30FF               	movlw	255
  6374  0831  05D9               	andwf	___fltol@f1+1,f
  6375  0832  30FF               	movlw	255
  6376  0833  05DA               	andwf	___fltol@f1+2,f
  6377  0834  3000               	movlw	0
  6378  0835  05DB               	andwf	___fltol@f1+3,f
  6379  0836                     l3315:
  6380  0836  3096               	movlw	150
  6381  0837  02E2               	subwf	___fltol@exp1,f
  6382  0838                     l3317:
  6383  0838  1FE2               	btfss	___fltol@exp1,7
  6384  0839  283B               	goto	u5091
  6385  083A  283C               	goto	u5090
  6386  083B                     u5091:
  6387  083B  2856               	goto	l3327
  6388  083C                     u5090:
  6389  083C                     l3319:
  6390  083C  0862               	movf	___fltol@exp1,w
  6391  083D  3A80               	xorlw	128
  6392  083E  3E97               	addlw	151
  6393  083F  1803               	skipnc
  6394  0840  2842               	goto	u5101
  6395  0841  2843               	goto	u5100
  6396  0842                     u5101:
  6397  0842  2844               	goto	l3325
  6398  0843                     u5100:
  6399  0843  280F               	goto	l3305
  6400  0844                     l3325:
  6401  0844  3001               	movlw	1
  6402  0845                     u5115:
  6403  0845  1003               	clrc
  6404  0846  0CDB               	rrf	___fltol@f1+3,f
  6405  0847  0CDA               	rrf	___fltol@f1+2,f
  6406  0848  0CD9               	rrf	___fltol@f1+1,f
  6407  0849  0CD8               	rrf	___fltol@f1,f
  6408  084A  3EFF               	addlw	-1
  6409  084B  1D03               	skipz
  6410  084C  2845               	goto	u5115
  6411  084D  3001               	movlw	1
  6412  084E  00DC               	movwf	??___fltol
  6413  084F  085C               	movf	??___fltol,w
  6414  0850  07E2               	addwf	___fltol@exp1,f
  6415  0851  1D03               	btfss	3,2
  6416  0852  2854               	goto	u5121
  6417  0853  2855               	goto	u5120
  6418  0854                     u5121:
  6419  0854  2844               	goto	l3325
  6420  0855                     u5120:
  6421  0855  286D               	goto	l3335
  6422  0856                     l3327:
  6423  0856  3020               	movlw	32
  6424  0857  0262               	subwf	___fltol@exp1,w
  6425  0858  1C03               	skipc
  6426  0859  285B               	goto	u5131
  6427  085A  285C               	goto	u5130
  6428  085B                     u5131:
  6429  085B  2868               	goto	l650
  6430  085C                     u5130:
  6431  085C  280F               	goto	l3305
  6432  085D                     l3333:
  6433  085D  3001               	movlw	1
  6434  085E  00DC               	movwf	??___fltol
  6435  085F                     u5145:
  6436  085F  1003               	clrc
  6437  0860  0DD8               	rlf	___fltol@f1,f
  6438  0861  0DD9               	rlf	___fltol@f1+1,f
  6439  0862  0DDA               	rlf	___fltol@f1+2,f
  6440  0863  0DDB               	rlf	___fltol@f1+3,f
  6441  0864  0BDC               	decfsz	??___fltol,f
  6442  0865  285F               	goto	u5145
  6443  0866  3001               	movlw	1
  6444  0867  02E2               	subwf	___fltol@exp1,f
  6445  0868                     l650:
  6446  0868  0862               	movf	___fltol@exp1,w
  6447  0869  1D03               	btfss	3,2
  6448  086A  286C               	goto	u5151
  6449  086B  286D               	goto	u5150
  6450  086C                     u5151:
  6451  086C  285D               	goto	l3333
  6452  086D                     u5150:
  6453  086D                     l3335:
  6454  086D  0861               	movf	___fltol@sign1,w
  6455  086E  1903               	btfsc	3,2
  6456  086F  2871               	goto	u5161
  6457  0870  2872               	goto	u5160
  6458  0871                     u5161:
  6459  0871  287D               	goto	l653
  6460  0872                     u5160:
  6461  0872                     l3337:
  6462  0872  09D8               	comf	___fltol@f1,f
  6463  0873  09D9               	comf	___fltol@f1+1,f
  6464  0874  09DA               	comf	___fltol@f1+2,f
  6465  0875  09DB               	comf	___fltol@f1+3,f
  6466  0876  0AD8               	incf	___fltol@f1,f
  6467  0877  1903               	skipnz
  6468  0878  0AD9               	incf	___fltol@f1+1,f
  6469  0879  1903               	skipnz
  6470  087A  0ADA               	incf	___fltol@f1+2,f
  6471  087B  1903               	skipnz
  6472  087C  0ADB               	incf	___fltol@f1+3,f
  6473  087D                     l653:
  6474  087D                     l643:
  6475  087D  0008               	return
  6476  087E                     __end_of___fltol:
  6477                           
  6478                           	psect	text22
  6479  19B6                     __ptext22:	
  6480 ;; *************** function ___flsub *****************
  6481 ;; Defined at:
  6482 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  a               4    0[BANK1 ] long 
  6485 ;;  b               4    4[BANK1 ] long 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;		None
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  4    0[BANK1 ] long 
  6490 ;; Registers used:
  6491 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6497 ;;      Params:         0       0       8       0       0
  6498 ;;      Locals:         0       0       0       0       0
  6499 ;;      Temps:          0       0       0       0       0
  6500 ;;      Totals:         0       0       8       0       0
  6501 ;;Total ram usage:        8 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; Hardware stack levels required when called:    2
  6504 ;; This function calls:
  6505 ;;		___fladd
  6506 ;; This function is called by:
  6507 ;;		_sprintf
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           
  6512                           ;psect for function ___flsub
  6513  19B6                     ___flsub:
  6514  19B6                     l3359:	
  6515                           ;incstack = 0
  6516                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6517                           
  6518  19B6  3080               	movlw	128
  6519  19B7  1683               	bsf	3,5	;RP0=1, select bank1
  6520  19B8  1303               	bcf	3,6	;RP1=0, select bank1
  6521  19B9  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  6522  19BA                     l3361:
  6523  19BA  0827               	movf	(___flsub@b+3)^(0+128),w
  6524  19BB  1283               	bcf	3,5	;RP0=0, select bank0
  6525  19BC  1303               	bcf	3,6	;RP1=0, select bank0
  6526  19BD  00DC               	movwf	___fladd@b+3
  6527  19BE  1683               	bsf	3,5	;RP0=1, select bank1
  6528  19BF  1303               	bcf	3,6	;RP1=0, select bank1
  6529  19C0  0826               	movf	(___flsub@b+2)^(0+128),w
  6530  19C1  1283               	bcf	3,5	;RP0=0, select bank0
  6531  19C2  1303               	bcf	3,6	;RP1=0, select bank0
  6532  19C3  00DB               	movwf	___fladd@b+2
  6533  19C4  1683               	bsf	3,5	;RP0=1, select bank1
  6534  19C5  1303               	bcf	3,6	;RP1=0, select bank1
  6535  19C6  0825               	movf	(___flsub@b+1)^(0+128),w
  6536  19C7  1283               	bcf	3,5	;RP0=0, select bank0
  6537  19C8  1303               	bcf	3,6	;RP1=0, select bank0
  6538  19C9  00DA               	movwf	___fladd@b+1
  6539  19CA  1683               	bsf	3,5	;RP0=1, select bank1
  6540  19CB  1303               	bcf	3,6	;RP1=0, select bank1
  6541  19CC  0824               	movf	___flsub@b^(0+128),w
  6542  19CD  1283               	bcf	3,5	;RP0=0, select bank0
  6543  19CE  1303               	bcf	3,6	;RP1=0, select bank0
  6544  19CF  00D9               	movwf	___fladd@b
  6545  19D0  1683               	bsf	3,5	;RP0=1, select bank1
  6546  19D1  1303               	bcf	3,6	;RP1=0, select bank1
  6547  19D2  0823               	movf	(___flsub@a+3)^(0+128),w
  6548  19D3  1283               	bcf	3,5	;RP0=0, select bank0
  6549  19D4  1303               	bcf	3,6	;RP1=0, select bank0
  6550  19D5  00E0               	movwf	___fladd@a+3
  6551  19D6  1683               	bsf	3,5	;RP0=1, select bank1
  6552  19D7  1303               	bcf	3,6	;RP1=0, select bank1
  6553  19D8  0822               	movf	(___flsub@a+2)^(0+128),w
  6554  19D9  1283               	bcf	3,5	;RP0=0, select bank0
  6555  19DA  1303               	bcf	3,6	;RP1=0, select bank0
  6556  19DB  00DF               	movwf	___fladd@a+2
  6557  19DC  1683               	bsf	3,5	;RP0=1, select bank1
  6558  19DD  1303               	bcf	3,6	;RP1=0, select bank1
  6559  19DE  0821               	movf	(___flsub@a+1)^(0+128),w
  6560  19DF  1283               	bcf	3,5	;RP0=0, select bank0
  6561  19E0  1303               	bcf	3,6	;RP1=0, select bank0
  6562  19E1  00DE               	movwf	___fladd@a+1
  6563  19E2  1683               	bsf	3,5	;RP0=1, select bank1
  6564  19E3  1303               	bcf	3,6	;RP1=0, select bank1
  6565  19E4  0820               	movf	___flsub@a^(0+128),w
  6566  19E5  1283               	bcf	3,5	;RP0=0, select bank0
  6567  19E6  1303               	bcf	3,6	;RP1=0, select bank0
  6568  19E7  00DD               	movwf	___fladd@a
  6569  19E8  160A  118A  2271  160A  158A  	fcall	___fladd
  6570  19ED  1283               	bcf	3,5	;RP0=0, select bank0
  6571  19EE  1303               	bcf	3,6	;RP1=0, select bank0
  6572  19EF  085C               	movf	?___fladd+3,w
  6573  19F0  1683               	bsf	3,5	;RP0=1, select bank1
  6574  19F1  1303               	bcf	3,6	;RP1=0, select bank1
  6575  19F2  00A3               	movwf	(?___flsub+3)^(0+128)
  6576  19F3  1283               	bcf	3,5	;RP0=0, select bank0
  6577  19F4  1303               	bcf	3,6	;RP1=0, select bank0
  6578  19F5  085B               	movf	?___fladd+2,w
  6579  19F6  1683               	bsf	3,5	;RP0=1, select bank1
  6580  19F7  1303               	bcf	3,6	;RP1=0, select bank1
  6581  19F8  00A2               	movwf	(?___flsub+2)^(0+128)
  6582  19F9  1283               	bcf	3,5	;RP0=0, select bank0
  6583  19FA  1303               	bcf	3,6	;RP1=0, select bank0
  6584  19FB  085A               	movf	?___fladd+1,w
  6585  19FC  1683               	bsf	3,5	;RP0=1, select bank1
  6586  19FD  1303               	bcf	3,6	;RP1=0, select bank1
  6587  19FE  00A1               	movwf	(?___flsub+1)^(0+128)
  6588  19FF  1283               	bcf	3,5	;RP0=0, select bank0
  6589  1A00  1303               	bcf	3,6	;RP1=0, select bank0
  6590  1A01  0859               	movf	?___fladd,w
  6591  1A02  1683               	bsf	3,5	;RP0=1, select bank1
  6592  1A03  1303               	bcf	3,6	;RP1=0, select bank1
  6593  1A04  00A0               	movwf	?___flsub^(0+128)
  6594  1A05                     l813:
  6595  1A05  0008               	return
  6596  1A06                     __end_of___flsub:
  6597                           
  6598                           	psect	text23
  6599  1271                     __ptext23:	
  6600 ;; *************** function ___fladd *****************
  6601 ;; Defined at:
  6602 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;  b               4   57[BANK0 ] long 
  6605 ;;  a               4   61[BANK0 ] long 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;  grs             1   76[BANK0 ] unsigned char 
  6608 ;;  bexp            1   75[BANK0 ] unsigned char 
  6609 ;;  aexp            1   74[BANK0 ] unsigned char 
  6610 ;;  signs           1   73[BANK0 ] unsigned char 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  4   57[BANK0 ] unsigned char 
  6613 ;; Registers used:
  6614 ;;		wreg, status,2, status,0, btemp+1
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6620 ;;      Params:         0       8       0       0       0
  6621 ;;      Locals:         0       4       0       0       0
  6622 ;;      Temps:          0       8       0       0       0
  6623 ;;      Totals:         0      20       0       0       0
  6624 ;;Total ram usage:       20 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    1
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_sprintf
  6631 ;;		___flsub
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           
  6636                           ;psect for function ___fladd
  6637  1271                     ___fladd:
  6638  1271                     l2697:	
  6639                           ;incstack = 0
  6640                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6641                           
  6642  1271  1283               	bcf	3,5	;RP0=0, select bank0
  6643  1272  1303               	bcf	3,6	;RP1=0, select bank0
  6644  1273  085C               	movf	___fladd@b+3,w
  6645  1274  3980               	andlw	128
  6646  1275  00E1               	movwf	??___fladd
  6647  1276  0861               	movf	??___fladd,w
  6648  1277  00E9               	movwf	___fladd@signs
  6649  1278                     l2699:
  6650  1278  085C               	movf	___fladd@b+3,w
  6651  1279  00E1               	movwf	??___fladd
  6652  127A  0761               	addwf	??___fladd,w
  6653  127B  00E2               	movwf	??___fladd+1
  6654  127C  0862               	movf	??___fladd+1,w
  6655  127D  00EB               	movwf	___fladd@bexp
  6656  127E                     l2701:
  6657  127E  1FDB               	btfss	___fladd@b+2,7
  6658  127F  2A81               	goto	u3491
  6659  1280  2A82               	goto	u3490
  6660  1281                     u3491:
  6661  1281  2A83               	goto	l2705
  6662  1282                     u3490:
  6663  1282                     l2703:
  6664  1282  146B               	bsf	___fladd@bexp,0
  6665  1283                     l2705:
  6666  1283  086B               	movf	___fladd@bexp,w
  6667  1284  1903               	btfsc	3,2
  6668  1285  2A87               	goto	u3501
  6669  1286  2A88               	goto	u3500
  6670  1287                     u3501:
  6671  1287  2A98               	goto	l2715
  6672  1288                     u3500:
  6673  1288                     l2707:
  6674  1288  0A6B               	incf	___fladd@bexp,w
  6675  1289  1D03               	btfss	3,2
  6676  128A  2A8C               	goto	u3511
  6677  128B  2A8D               	goto	u3510
  6678  128C                     u3511:
  6679  128C  2A95               	goto	l2711
  6680  128D                     u3510:
  6681  128D                     l2709:
  6682  128D  3000               	movlw	0
  6683  128E  00DC               	movwf	___fladd@b+3
  6684  128F  3000               	movlw	0
  6685  1290  00DB               	movwf	___fladd@b+2
  6686  1291  3000               	movlw	0
  6687  1292  00DA               	movwf	___fladd@b+1
  6688  1293  3000               	movlw	0
  6689  1294  00D9               	movwf	___fladd@b
  6690  1295                     l2711:
  6691  1295  17DB               	bsf	___fladd@b+2,7
  6692  1296                     l2713:
  6693  1296  01DC               	clrf	___fladd@b+3
  6694  1297  2AA0               	goto	l2717
  6695  1298                     l2715:
  6696  1298  3000               	movlw	0
  6697  1299  00DC               	movwf	___fladd@b+3
  6698  129A  3000               	movlw	0
  6699  129B  00DB               	movwf	___fladd@b+2
  6700  129C  3000               	movlw	0
  6701  129D  00DA               	movwf	___fladd@b+1
  6702  129E  3000               	movlw	0
  6703  129F  00D9               	movwf	___fladd@b
  6704  12A0                     l2717:
  6705  12A0  0860               	movf	___fladd@a+3,w
  6706  12A1  3980               	andlw	128
  6707  12A2  00E1               	movwf	??___fladd
  6708  12A3  0861               	movf	??___fladd,w
  6709  12A4  00EA               	movwf	___fladd@aexp
  6710  12A5                     l2719:
  6711  12A5  086A               	movf	___fladd@aexp,w
  6712  12A6  0669               	xorwf	___fladd@signs,w
  6713  12A7  1903               	skipnz
  6714  12A8  2AAA               	goto	u3521
  6715  12A9  2AAB               	goto	u3520
  6716  12AA                     u3521:
  6717  12AA  2AAC               	goto	l2723
  6718  12AB                     u3520:
  6719  12AB                     l2721:
  6720  12AB  1769               	bsf	___fladd@signs,6
  6721  12AC                     l2723:
  6722  12AC  0860               	movf	___fladd@a+3,w
  6723  12AD  00E1               	movwf	??___fladd
  6724  12AE  0761               	addwf	??___fladd,w
  6725  12AF  00E2               	movwf	??___fladd+1
  6726  12B0  0862               	movf	??___fladd+1,w
  6727  12B1  00EA               	movwf	___fladd@aexp
  6728  12B2                     l2725:
  6729  12B2  1FDF               	btfss	___fladd@a+2,7
  6730  12B3  2AB5               	goto	u3531
  6731  12B4  2AB6               	goto	u3530
  6732  12B5                     u3531:
  6733  12B5  2AB7               	goto	l2729
  6734  12B6                     u3530:
  6735  12B6                     l2727:
  6736  12B6  146A               	bsf	___fladd@aexp,0
  6737  12B7                     l2729:
  6738  12B7  086A               	movf	___fladd@aexp,w
  6739  12B8  1903               	btfsc	3,2
  6740  12B9  2ABB               	goto	u3541
  6741  12BA  2ABC               	goto	u3540
  6742  12BB                     u3541:
  6743  12BB  2ACC               	goto	l2739
  6744  12BC                     u3540:
  6745  12BC                     l2731:
  6746  12BC  0A6A               	incf	___fladd@aexp,w
  6747  12BD  1D03               	btfss	3,2
  6748  12BE  2AC0               	goto	u3551
  6749  12BF  2AC1               	goto	u3550
  6750  12C0                     u3551:
  6751  12C0  2AC9               	goto	l2735
  6752  12C1                     u3550:
  6753  12C1                     l2733:
  6754  12C1  3000               	movlw	0
  6755  12C2  00E0               	movwf	___fladd@a+3
  6756  12C3  3000               	movlw	0
  6757  12C4  00DF               	movwf	___fladd@a+2
  6758  12C5  3000               	movlw	0
  6759  12C6  00DE               	movwf	___fladd@a+1
  6760  12C7  3000               	movlw	0
  6761  12C8  00DD               	movwf	___fladd@a
  6762  12C9                     l2735:
  6763  12C9  17DF               	bsf	___fladd@a+2,7
  6764  12CA                     l2737:
  6765  12CA  01E0               	clrf	___fladd@a+3
  6766  12CB  2AD4               	goto	l767
  6767  12CC                     l2739:
  6768  12CC  3000               	movlw	0
  6769  12CD  00E0               	movwf	___fladd@a+3
  6770  12CE  3000               	movlw	0
  6771  12CF  00DF               	movwf	___fladd@a+2
  6772  12D0  3000               	movlw	0
  6773  12D1  00DE               	movwf	___fladd@a+1
  6774  12D2  3000               	movlw	0
  6775  12D3  00DD               	movwf	___fladd@a
  6776  12D4                     l767:
  6777  12D4  086B               	movf	___fladd@bexp,w
  6778  12D5  026A               	subwf	___fladd@aexp,w
  6779  12D6  1803               	skipnc
  6780  12D7  2AD9               	goto	u3561
  6781  12D8  2ADA               	goto	u3560
  6782  12D9                     u3561:
  6783  12D9  2B1E               	goto	l2775
  6784  12DA                     u3560:
  6785  12DA                     l2741:
  6786  12DA  1F69               	btfss	___fladd@signs,6
  6787  12DB  2ADD               	goto	u3571
  6788  12DC  2ADE               	goto	u3570
  6789  12DD                     u3571:
  6790  12DD  2AE2               	goto	l2745
  6791  12DE                     u3570:
  6792  12DE                     l2743:
  6793  12DE  3080               	movlw	128
  6794  12DF  00E1               	movwf	??___fladd
  6795  12E0  0861               	movf	??___fladd,w
  6796  12E1  06E9               	xorwf	___fladd@signs,f
  6797  12E2                     l2745:
  6798  12E2  086B               	movf	___fladd@bexp,w
  6799  12E3  00E1               	movwf	??___fladd
  6800  12E4  0861               	movf	??___fladd,w
  6801  12E5  00EC               	movwf	___fladd@grs
  6802  12E6                     l2747:
  6803  12E6  086A               	movf	___fladd@aexp,w
  6804  12E7  00E1               	movwf	??___fladd
  6805  12E8  0861               	movf	??___fladd,w
  6806  12E9  00EB               	movwf	___fladd@bexp
  6807  12EA                     l2749:
  6808  12EA  086C               	movf	___fladd@grs,w
  6809  12EB  00E1               	movwf	??___fladd
  6810  12EC  0861               	movf	??___fladd,w
  6811  12ED  00EA               	movwf	___fladd@aexp
  6812  12EE                     l2751:
  6813  12EE  0859               	movf	___fladd@b,w
  6814  12EF  00E1               	movwf	??___fladd
  6815  12F0  0861               	movf	??___fladd,w
  6816  12F1  00EC               	movwf	___fladd@grs
  6817  12F2                     l2753:
  6818  12F2  085D               	movf	___fladd@a,w
  6819  12F3  00E1               	movwf	??___fladd
  6820  12F4  0861               	movf	??___fladd,w
  6821  12F5  00D9               	movwf	___fladd@b
  6822  12F6                     l2755:
  6823  12F6  086C               	movf	___fladd@grs,w
  6824  12F7  00E1               	movwf	??___fladd
  6825  12F8  0861               	movf	??___fladd,w
  6826  12F9  00DD               	movwf	___fladd@a
  6827  12FA                     l2757:
  6828  12FA  085A               	movf	___fladd@b+1,w
  6829  12FB  00E1               	movwf	??___fladd
  6830  12FC  0861               	movf	??___fladd,w
  6831  12FD  00EC               	movwf	___fladd@grs
  6832  12FE                     l2759:
  6833  12FE  085E               	movf	___fladd@a+1,w
  6834  12FF  00E1               	movwf	??___fladd
  6835  1300  0861               	movf	??___fladd,w
  6836  1301  00DA               	movwf	___fladd@b+1
  6837  1302                     l2761:
  6838  1302  086C               	movf	___fladd@grs,w
  6839  1303  00E1               	movwf	??___fladd
  6840  1304  0861               	movf	??___fladd,w
  6841  1305  00DE               	movwf	___fladd@a+1
  6842  1306                     l2763:
  6843  1306  085B               	movf	___fladd@b+2,w
  6844  1307  00E1               	movwf	??___fladd
  6845  1308  0861               	movf	??___fladd,w
  6846  1309  00EC               	movwf	___fladd@grs
  6847  130A                     l2765:
  6848  130A  085F               	movf	___fladd@a+2,w
  6849  130B  00E1               	movwf	??___fladd
  6850  130C  0861               	movf	??___fladd,w
  6851  130D  00DB               	movwf	___fladd@b+2
  6852  130E                     l2767:
  6853  130E  086C               	movf	___fladd@grs,w
  6854  130F  00E1               	movwf	??___fladd
  6855  1310  0861               	movf	??___fladd,w
  6856  1311  00DF               	movwf	___fladd@a+2
  6857  1312                     l2769:
  6858  1312  085C               	movf	___fladd@b+3,w
  6859  1313  00E1               	movwf	??___fladd
  6860  1314  0861               	movf	??___fladd,w
  6861  1315  00EC               	movwf	___fladd@grs
  6862  1316                     l2771:
  6863  1316  0860               	movf	___fladd@a+3,w
  6864  1317  00E1               	movwf	??___fladd
  6865  1318  0861               	movf	??___fladd,w
  6866  1319  00DC               	movwf	___fladd@b+3
  6867  131A                     l2773:
  6868  131A  086C               	movf	___fladd@grs,w
  6869  131B  00E1               	movwf	??___fladd
  6870  131C  0861               	movf	??___fladd,w
  6871  131D  00E0               	movwf	___fladd@a+3
  6872  131E                     l2775:
  6873  131E  01EC               	clrf	___fladd@grs
  6874  131F                     l2777:
  6875  131F  086A               	movf	___fladd@aexp,w
  6876  1320  00E1               	movwf	??___fladd
  6877  1321  01E2               	clrf	??___fladd+1
  6878  1322  0862               	movf	??___fladd+1,w
  6879  1323  00E4               	movwf	??___fladd+3
  6880  1324  086B               	movf	___fladd@bexp,w
  6881  1325  0261               	subwf	??___fladd,w
  6882  1326  00E3               	movwf	??___fladd+2
  6883  1327  1C03               	skipc
  6884  1328  03E4               	decf	??___fladd+3,f
  6885  1329  0864               	movf	??___fladd+3,w
  6886  132A  3A80               	xorlw	128
  6887  132B  00FF               	movwf	btemp+1
  6888  132C  3080               	movlw	128
  6889  132D  027F               	subwf	btemp+1,w
  6890  132E  1D03               	skipz
  6891  132F  2B32               	goto	u3585
  6892  1330  301A               	movlw	26
  6893  1331  0263               	subwf	??___fladd+2,w
  6894  1332                     u3585:
  6895  1332  1C03               	skipc
  6896  1333  2B35               	goto	u3581
  6897  1334  2B36               	goto	u3580
  6898  1335                     u3581:
  6899  1335  2B73               	goto	l2793
  6900  1336                     u3580:
  6901  1336                     l2779:
  6902  1336  1283               	bcf	3,5	;RP0=0, select bank0
  6903  1337  1303               	bcf	3,6	;RP1=0, select bank0
  6904  1338  085C               	movf	___fladd@b+3,w
  6905  1339  045B               	iorwf	___fladd@b+2,w
  6906  133A  045A               	iorwf	___fladd@b+1,w
  6907  133B  0459               	iorwf	___fladd@b,w
  6908  133C  1D03               	skipz
  6909  133D  2B3F               	goto	u3591
  6910  133E  2B41               	goto	u3590
  6911  133F                     u3591:
  6912  133F  3001               	movlw	1
  6913  1340  2B42               	goto	u3600
  6914  1341                     u3590:
  6915  1341  3000               	movlw	0
  6916  1342                     u3600:
  6917  1342  00E1               	movwf	??___fladd
  6918  1343  0861               	movf	??___fladd,w
  6919  1344  00EC               	movwf	___fladd@grs
  6920  1345  3000               	movlw	0
  6921  1346  00DC               	movwf	___fladd@b+3
  6922  1347  3000               	movlw	0
  6923  1348  00DB               	movwf	___fladd@b+2
  6924  1349  3000               	movlw	0
  6925  134A  00DA               	movwf	___fladd@b+1
  6926  134B  3000               	movlw	0
  6927  134C  00D9               	movwf	___fladd@b
  6928  134D  086A               	movf	___fladd@aexp,w
  6929  134E  00E1               	movwf	??___fladd
  6930  134F  0861               	movf	??___fladd,w
  6931  1350  00EB               	movwf	___fladd@bexp
  6932  1351  2B7B               	goto	l771
  6933  1352                     l773:
  6934  1352  1C6C               	btfss	___fladd@grs,0
  6935  1353  2B55               	goto	u3611
  6936  1354  2B56               	goto	u3610
  6937  1355                     u3611:
  6938  1355  2B5F               	goto	l2783
  6939  1356                     u3610:
  6940  1356                     l2781:
  6941  1356  086C               	movf	___fladd@grs,w
  6942  1357  00E1               	movwf	??___fladd
  6943  1358  1003               	clrc
  6944  1359  0C61               	rrf	??___fladd,w
  6945  135A  3801               	iorlw	1
  6946  135B  00E2               	movwf	??___fladd+1
  6947  135C  0862               	movf	??___fladd+1,w
  6948  135D  00EC               	movwf	___fladd@grs
  6949  135E  2B61               	goto	l2785
  6950  135F                     l2783:
  6951  135F  1003               	clrc
  6952  1360  0CEC               	rrf	___fladd@grs,f
  6953  1361                     l2785:
  6954  1361  1C59               	btfss	___fladd@b,0
  6955  1362  2B64               	goto	u3621
  6956  1363  2B65               	goto	u3620
  6957  1364                     u3621:
  6958  1364  2B66               	goto	l2789
  6959  1365                     u3620:
  6960  1365                     l2787:
  6961  1365  17EC               	bsf	___fladd@grs,7
  6962  1366                     l2789:
  6963  1366  3001               	movlw	1
  6964  1367  00E1               	movwf	??___fladd
  6965  1368                     u3635:
  6966  1368  0D5C               	rlf	___fladd@b+3,w
  6967  1369  0CDC               	rrf	___fladd@b+3,f
  6968  136A  0CDB               	rrf	___fladd@b+2,f
  6969  136B  0CDA               	rrf	___fladd@b+1,f
  6970  136C  0CD9               	rrf	___fladd@b,f
  6971  136D  0BE1               	decfsz	??___fladd& (0+127),f
  6972  136E  2B68               	goto	u3635
  6973  136F                     l2791:
  6974  136F  3001               	movlw	1
  6975  1370  00E1               	movwf	??___fladd
  6976  1371  0861               	movf	??___fladd,w
  6977  1372  07EB               	addwf	___fladd@bexp,f
  6978  1373                     l2793:
  6979  1373  1283               	bcf	3,5	;RP0=0, select bank0
  6980  1374  1303               	bcf	3,6	;RP1=0, select bank0
  6981  1375  086A               	movf	___fladd@aexp,w
  6982  1376  026B               	subwf	___fladd@bexp,w
  6983  1377  1C03               	skipc
  6984  1378  2B7A               	goto	u3641
  6985  1379  2B7B               	goto	u3640
  6986  137A                     u3641:
  6987  137A  2B52               	goto	l773
  6988  137B                     u3640:
  6989  137B                     l771:
  6990  137B  1B69               	btfsc	___fladd@signs,6
  6991  137C  2B7E               	goto	u3651
  6992  137D  2B7F               	goto	u3650
  6993  137E                     u3651:
  6994  137E  2BCA               	goto	l2819
  6995  137F                     u3650:
  6996  137F                     l2795:
  6997  137F  086B               	movf	___fladd@bexp,w
  6998  1380  1D03               	btfss	3,2
  6999  1381  2B83               	goto	u3661
  7000  1382  2B84               	goto	u3660
  7001  1383                     u3661:
  7002  1383  2B8D               	goto	l2801
  7003  1384                     u3660:
  7004  1384                     l2797:
  7005  1384  3000               	movlw	0
  7006  1385  00DC               	movwf	?___fladd+3
  7007  1386  3000               	movlw	0
  7008  1387  00DB               	movwf	?___fladd+2
  7009  1388  3000               	movlw	0
  7010  1389  00DA               	movwf	?___fladd+1
  7011  138A  3000               	movlw	0
  7012  138B  00D9               	movwf	?___fladd
  7013  138C  2CF8               	goto	l780
  7014  138D                     l2801:
  7015  138D  085D               	movf	___fladd@a,w
  7016  138E  07D9               	addwf	___fladd@b,f
  7017  138F  085E               	movf	___fladd@a+1,w
  7018  1390  1103               	clrz
  7019  1391  1803               	skipnc
  7020  1392  3E01               	addlw	1
  7021  1393  1903               	skipnz
  7022  1394  2B96               	goto	u3671
  7023  1395  07DA               	addwf	___fladd@b+1,f
  7024  1396                     u3671:
  7025  1396  085F               	movf	___fladd@a+2,w
  7026  1397  1103               	clrz
  7027  1398  1803               	skipnc
  7028  1399  3E01               	addlw	1
  7029  139A  1903               	skipnz
  7030  139B  2B9D               	goto	u3672
  7031  139C  07DB               	addwf	___fladd@b+2,f
  7032  139D                     u3672:
  7033  139D  0860               	movf	___fladd@a+3,w
  7034  139E  1103               	clrz
  7035  139F  1803               	skipnc
  7036  13A0  3E01               	addlw	1
  7037  13A1  1903               	skipnz
  7038  13A2  2BA4               	goto	u3673
  7039  13A3  07DC               	addwf	___fladd@b+3,f
  7040  13A4                     u3673:
  7041  13A4                     l2803:
  7042  13A4  1C5C               	btfss	___fladd@b+3,0
  7043  13A5  2BA7               	goto	u3681
  7044  13A6  2BA8               	goto	u3680
  7045  13A7                     u3681:
  7046  13A7  2C7E               	goto	l2853
  7047  13A8                     u3680:
  7048  13A8                     l2805:
  7049  13A8  1C6C               	btfss	___fladd@grs,0
  7050  13A9  2BAB               	goto	u3691
  7051  13AA  2BAC               	goto	u3690
  7052  13AB                     u3691:
  7053  13AB  2BB5               	goto	l2809
  7054  13AC                     u3690:
  7055  13AC                     l2807:
  7056  13AC  086C               	movf	___fladd@grs,w
  7057  13AD  00E1               	movwf	??___fladd
  7058  13AE  1003               	clrc
  7059  13AF  0C61               	rrf	??___fladd,w
  7060  13B0  3801               	iorlw	1
  7061  13B1  00E2               	movwf	??___fladd+1
  7062  13B2  0862               	movf	??___fladd+1,w
  7063  13B3  00EC               	movwf	___fladd@grs
  7064  13B4  2BB7               	goto	l2811
  7065  13B5                     l2809:
  7066  13B5  1003               	clrc
  7067  13B6  0CEC               	rrf	___fladd@grs,f
  7068  13B7                     l2811:
  7069  13B7  1C59               	btfss	___fladd@b,0
  7070  13B8  2BBA               	goto	u3701
  7071  13B9  2BBB               	goto	u3700
  7072  13BA                     u3701:
  7073  13BA  2BBC               	goto	l2815
  7074  13BB                     u3700:
  7075  13BB                     l2813:
  7076  13BB  17EC               	bsf	___fladd@grs,7
  7077  13BC                     l2815:
  7078  13BC  3001               	movlw	1
  7079  13BD  00E1               	movwf	??___fladd
  7080  13BE                     u3715:
  7081  13BE  0D5C               	rlf	___fladd@b+3,w
  7082  13BF  0CDC               	rrf	___fladd@b+3,f
  7083  13C0  0CDB               	rrf	___fladd@b+2,f
  7084  13C1  0CDA               	rrf	___fladd@b+1,f
  7085  13C2  0CD9               	rrf	___fladd@b,f
  7086  13C3  0BE1               	decfsz	??___fladd& (0+127),f
  7087  13C4  2BBE               	goto	u3715
  7088  13C5                     l2817:
  7089  13C5  3001               	movlw	1
  7090  13C6  00E1               	movwf	??___fladd
  7091  13C7  0861               	movf	??___fladd,w
  7092  13C8  07EB               	addwf	___fladd@bexp,f
  7093  13C9  2C7E               	goto	l2853
  7094  13CA                     l2819:
  7095  13CA  085C               	movf	___fladd@b+3,w
  7096  13CB  3A80               	xorlw	128
  7097  13CC  00FF               	movwf	btemp+1
  7098  13CD  0860               	movf	___fladd@a+3,w
  7099  13CE  3A80               	xorlw	128
  7100  13CF  027F               	subwf	btemp+1,w
  7101  13D0  1D03               	skipz
  7102  13D1  2BDC               	goto	u3723
  7103  13D2  085F               	movf	___fladd@a+2,w
  7104  13D3  025B               	subwf	___fladd@b+2,w
  7105  13D4  1D03               	skipz
  7106  13D5  2BDC               	goto	u3723
  7107  13D6  085E               	movf	___fladd@a+1,w
  7108  13D7  025A               	subwf	___fladd@b+1,w
  7109  13D8  1D03               	skipz
  7110  13D9  2BDC               	goto	u3723
  7111  13DA  085D               	movf	___fladd@a,w
  7112  13DB  0259               	subwf	___fladd@b,w
  7113  13DC                     u3723:
  7114  13DC  1803               	skipnc
  7115  13DD  2BDF               	goto	u3721
  7116  13DE  2BE0               	goto	u3720
  7117  13DF                     u3721:
  7118  13DF  2C38               	goto	l2829
  7119  13E0                     u3720:
  7120  13E0                     l2821:
  7121  13E0  30FF               	movlw	255
  7122  13E1  00E1               	movwf	??___fladd
  7123  13E2  30FF               	movlw	255
  7124  13E3  00E2               	movwf	??___fladd+1
  7125  13E4  30FF               	movlw	255
  7126  13E5  00E3               	movwf	??___fladd+2
  7127  13E6  30FF               	movlw	255
  7128  13E7  00E4               	movwf	??___fladd+3
  7129  13E8  085D               	movf	___fladd@a,w
  7130  13E9  00E5               	movwf	??___fladd+4
  7131  13EA  085E               	movf	___fladd@a+1,w
  7132  13EB  00E6               	movwf	??___fladd+5
  7133  13EC  085F               	movf	___fladd@a+2,w
  7134  13ED  00E7               	movwf	??___fladd+6
  7135  13EE  0860               	movf	___fladd@a+3,w
  7136  13EF  00E8               	movwf	??___fladd+7
  7137  13F0  0859               	movf	___fladd@b,w
  7138  13F1  02E5               	subwf	??___fladd+4,f
  7139  13F2  085A               	movf	___fladd@b+1,w
  7140  13F3  1C03               	skipc
  7141  13F4  0F5A               	incfsz	___fladd@b+1,w
  7142  13F5  2BF7               	goto	u3731
  7143  13F6  2BF8               	goto	u3732
  7144  13F7                     u3731:
  7145  13F7  02E6               	subwf	??___fladd+5,f
  7146  13F8                     u3732:
  7147  13F8  085B               	movf	___fladd@b+2,w
  7148  13F9  1C03               	skipc
  7149  13FA  0F5B               	incfsz	___fladd@b+2,w
  7150  13FB  2BFD               	goto	u3733
  7151  13FC  2BFE               	goto	u3734
  7152  13FD                     u3733:
  7153  13FD  02E7               	subwf	??___fladd+6,f
  7154  13FE                     u3734:
  7155  13FE  085C               	movf	___fladd@b+3,w
  7156  13FF  1C03               	skipc
  7157  1400  0F5C               	incfsz	___fladd@b+3,w
  7158  1401  2C03               	goto	u3735
  7159  1402  2C04               	goto	u3736
  7160  1403                     u3735:
  7161  1403  02E8               	subwf	??___fladd+7,f
  7162  1404                     u3736:
  7163  1404  0865               	movf	??___fladd+4,w
  7164  1405  07E1               	addwf	??___fladd,f
  7165  1406  0866               	movf	??___fladd+5,w
  7166  1407  1803               	skipnc
  7167  1408  0F66               	incfsz	??___fladd+5,w
  7168  1409  2C0B               	goto	u3740
  7169  140A  2C0C               	goto	u3741
  7170  140B                     u3740:
  7171  140B  07E2               	addwf	??___fladd+1,f
  7172  140C                     u3741:
  7173  140C  0867               	movf	??___fladd+6,w
  7174  140D  1803               	skipnc
  7175  140E  0F67               	incfsz	??___fladd+6,w
  7176  140F  2C11               	goto	u3742
  7177  1410  2C12               	goto	u3743
  7178  1411                     u3742:
  7179  1411  07E3               	addwf	??___fladd+2,f
  7180  1412                     u3743:
  7181  1412  0868               	movf	??___fladd+7,w
  7182  1413  1803               	skipnc
  7183  1414  0A68               	incf	??___fladd+7,w
  7184  1415  07E4               	addwf	??___fladd+3,f
  7185  1416  0864               	movf	??___fladd+3,w
  7186  1417  00DC               	movwf	___fladd@b+3
  7187  1418  0863               	movf	??___fladd+2,w
  7188  1419  00DB               	movwf	___fladd@b+2
  7189  141A  0862               	movf	??___fladd+1,w
  7190  141B  00DA               	movwf	___fladd@b+1
  7191  141C  0861               	movf	??___fladd,w
  7192  141D  00D9               	movwf	___fladd@b
  7193  141E                     l2823:
  7194  141E  3080               	movlw	128
  7195  141F  00E1               	movwf	??___fladd
  7196  1420  0861               	movf	??___fladd,w
  7197  1421  06E9               	xorwf	___fladd@signs,f
  7198  1422  09EC               	comf	___fladd@grs,f
  7199  1423  0AEC               	incf	___fladd@grs,f
  7200  1424                     l2825:
  7201  1424  086C               	movf	___fladd@grs,w
  7202  1425  1D03               	btfss	3,2
  7203  1426  2C28               	goto	u3751
  7204  1427  2C29               	goto	u3750
  7205  1428                     u3751:
  7206  1428  2C46               	goto	l788
  7207  1429                     u3750:
  7208  1429                     l2827:
  7209  1429  3001               	movlw	1
  7210  142A  07D9               	addwf	___fladd@b,f
  7211  142B  3000               	movlw	0
  7212  142C  1803               	skipnc
  7213  142D  3001               	movlw	1
  7214  142E  07DA               	addwf	___fladd@b+1,f
  7215  142F  3000               	movlw	0
  7216  1430  1803               	skipnc
  7217  1431  3001               	movlw	1
  7218  1432  07DB               	addwf	___fladd@b+2,f
  7219  1433  3000               	movlw	0
  7220  1434  1803               	skipnc
  7221  1435  3001               	movlw	1
  7222  1436  07DC               	addwf	___fladd@b+3,f
  7223  1437  2C46               	goto	l788
  7224  1438                     l2829:
  7225  1438  085D               	movf	___fladd@a,w
  7226  1439  02D9               	subwf	___fladd@b,f
  7227  143A  085E               	movf	___fladd@a+1,w
  7228  143B  1C03               	skipc
  7229  143C  0F5E               	incfsz	___fladd@a+1,w
  7230  143D  02DA               	subwf	___fladd@b+1,f
  7231  143E  085F               	movf	___fladd@a+2,w
  7232  143F  1C03               	skipc
  7233  1440  0F5F               	incfsz	___fladd@a+2,w
  7234  1441  02DB               	subwf	___fladd@b+2,f
  7235  1442  0860               	movf	___fladd@a+3,w
  7236  1443  1C03               	skipc
  7237  1444  0F60               	incfsz	___fladd@a+3,w
  7238  1445  02DC               	subwf	___fladd@b+3,f
  7239  1446                     l788:
  7240  1446  085C               	movf	___fladd@b+3,w
  7241  1447  045B               	iorwf	___fladd@b+2,w
  7242  1448  045A               	iorwf	___fladd@b+1,w
  7243  1449  0459               	iorwf	___fladd@b,w
  7244  144A  1D03               	skipz
  7245  144B  2C4D               	goto	u3761
  7246  144C  2C4E               	goto	u3760
  7247  144D                     u3761:
  7248  144D  2C7A               	goto	l2851
  7249  144E                     u3760:
  7250  144E                     l2831:
  7251  144E  086C               	movf	___fladd@grs,w
  7252  144F  1D03               	btfss	3,2
  7253  1450  2C52               	goto	u3771
  7254  1451  2C53               	goto	u3770
  7255  1452                     u3771:
  7256  1452  2C7A               	goto	l2851
  7257  1453                     u3770:
  7258  1453                     l2833:
  7259  1453  3000               	movlw	0
  7260  1454  00DC               	movwf	?___fladd+3
  7261  1455  3000               	movlw	0
  7262  1456  00DB               	movwf	?___fladd+2
  7263  1457  3000               	movlw	0
  7264  1458  00DA               	movwf	?___fladd+1
  7265  1459  3000               	movlw	0
  7266  145A  00D9               	movwf	?___fladd
  7267  145B  2CF8               	goto	l780
  7268  145C                     l2837:
  7269  145C  3001               	movlw	1
  7270  145D  00E1               	movwf	??___fladd
  7271  145E                     u3785:
  7272  145E  1003               	clrc
  7273  145F  0DD9               	rlf	___fladd@b,f
  7274  1460  0DDA               	rlf	___fladd@b+1,f
  7275  1461  0DDB               	rlf	___fladd@b+2,f
  7276  1462  0DDC               	rlf	___fladd@b+3,f
  7277  1463  0BE1               	decfsz	??___fladd,f
  7278  1464  2C5E               	goto	u3785
  7279  1465                     l2839:
  7280  1465  1FEC               	btfss	___fladd@grs,7
  7281  1466  2C68               	goto	u3791
  7282  1467  2C69               	goto	u3790
  7283  1468                     u3791:
  7284  1468  2C6A               	goto	l792
  7285  1469                     u3790:
  7286  1469                     l2841:
  7287  1469  1459               	bsf	___fladd@b,0
  7288  146A                     l792:
  7289  146A  1C6C               	btfss	___fladd@grs,0
  7290  146B  2C6D               	goto	u3801
  7291  146C  2C6E               	goto	u3800
  7292  146D                     u3801:
  7293  146D  2C71               	goto	l2845
  7294  146E                     u3800:
  7295  146E                     l2843:
  7296  146E  1403               	setc
  7297  146F  0DEC               	rlf	___fladd@grs,f
  7298  1470  2C73               	goto	l2847
  7299  1471                     l2845:
  7300  1471  1003               	clrc
  7301  1472  0DEC               	rlf	___fladd@grs,f
  7302  1473                     l2847:
  7303  1473  086B               	movf	___fladd@bexp,w
  7304  1474  1903               	btfsc	3,2
  7305  1475  2C77               	goto	u3811
  7306  1476  2C78               	goto	u3810
  7307  1477                     u3811:
  7308  1477  2C7A               	goto	l2851
  7309  1478                     u3810:
  7310  1478                     l2849:
  7311  1478  3001               	movlw	1
  7312  1479  02EB               	subwf	___fladd@bexp,f
  7313  147A                     l2851:
  7314  147A  1FDB               	btfss	___fladd@b+2,7
  7315  147B  2C7D               	goto	u3821
  7316  147C  2C7E               	goto	u3820
  7317  147D                     u3821:
  7318  147D  2C5C               	goto	l2837
  7319  147E                     u3820:
  7320  147E                     l2853:
  7321  147E  01EA               	clrf	___fladd@aexp
  7322  147F                     l2855:
  7323  147F  1FEC               	btfss	___fladd@grs,7
  7324  1480  2C82               	goto	u3831
  7325  1481  2C83               	goto	u3830
  7326  1482                     u3831:
  7327  1482  2C91               	goto	l2863
  7328  1483                     u3830:
  7329  1483                     l2857:
  7330  1483  086C               	movf	___fladd@grs,w
  7331  1484  397F               	andlw	127
  7332  1485  1903               	btfsc	3,2
  7333  1486  2C88               	goto	u3841
  7334  1487  2C89               	goto	u3840
  7335  1488                     u3841:
  7336  1488  2C8C               	goto	l798
  7337  1489                     u3840:
  7338  1489                     l2859:
  7339  1489  01EA               	clrf	___fladd@aexp
  7340  148A  0AEA               	incf	___fladd@aexp,f
  7341  148B  2C91               	goto	l2863
  7342  148C                     l798:
  7343  148C  1C59               	btfss	___fladd@b,0
  7344  148D  2C8F               	goto	u3851
  7345  148E  2C90               	goto	u3850
  7346  148F                     u3851:
  7347  148F  2C91               	goto	l2863
  7348  1490                     u3850:
  7349  1490  2C89               	goto	l2859
  7350  1491                     l2863:
  7351  1491  086A               	movf	___fladd@aexp,w
  7352  1492  1903               	btfsc	3,2
  7353  1493  2C95               	goto	u3861
  7354  1494  2C96               	goto	u3860
  7355  1495                     u3861:
  7356  1495  2CCA               	goto	l801
  7357  1496                     u3860:
  7358  1496                     l2865:
  7359  1496  3001               	movlw	1
  7360  1497  07D9               	addwf	___fladd@b,f
  7361  1498  3000               	movlw	0
  7362  1499  1803               	skipnc
  7363  149A  3001               	movlw	1
  7364  149B  07DA               	addwf	___fladd@b+1,f
  7365  149C  3000               	movlw	0
  7366  149D  1803               	skipnc
  7367  149E  3001               	movlw	1
  7368  149F  07DB               	addwf	___fladd@b+2,f
  7369  14A0  3000               	movlw	0
  7370  14A1  1803               	skipnc
  7371  14A2  3001               	movlw	1
  7372  14A3  07DC               	addwf	___fladd@b+3,f
  7373  14A4                     l2867:
  7374  14A4  1C5C               	btfss	___fladd@b+3,0
  7375  14A5  2CA7               	goto	u3871
  7376  14A6  2CA8               	goto	u3870
  7377  14A7                     u3871:
  7378  14A7  2CCA               	goto	l801
  7379  14A8                     u3870:
  7380  14A8                     l2869:
  7381  14A8  0859               	movf	___fladd@b,w
  7382  14A9  00E1               	movwf	??___fladd
  7383  14AA  085A               	movf	___fladd@b+1,w
  7384  14AB  00E2               	movwf	??___fladd+1
  7385  14AC  085B               	movf	___fladd@b+2,w
  7386  14AD  00E3               	movwf	??___fladd+2
  7387  14AE  085C               	movf	___fladd@b+3,w
  7388  14AF  00E4               	movwf	??___fladd+3
  7389  14B0  3001               	movlw	1
  7390  14B1  00E5               	movwf	??___fladd+4
  7391  14B2                     u3885:
  7392  14B2  0D64               	rlf	??___fladd+3,w
  7393  14B3  0CE4               	rrf	??___fladd+3,f
  7394  14B4  0CE3               	rrf	??___fladd+2,f
  7395  14B5  0CE2               	rrf	??___fladd+1,f
  7396  14B6  0CE1               	rrf	??___fladd,f
  7397  14B7                     u3880:
  7398  14B7  0BE5               	decfsz	??___fladd+4,f
  7399  14B8  2CB2               	goto	u3885
  7400  14B9  0864               	movf	??___fladd+3,w
  7401  14BA  00DC               	movwf	___fladd@b+3
  7402  14BB  0863               	movf	??___fladd+2,w
  7403  14BC  00DB               	movwf	___fladd@b+2
  7404  14BD  0862               	movf	??___fladd+1,w
  7405  14BE  00DA               	movwf	___fladd@b+1
  7406  14BF  0861               	movf	??___fladd,w
  7407  14C0  00D9               	movwf	___fladd@b
  7408  14C1  0A6B               	incf	___fladd@bexp,w
  7409  14C2  1903               	btfsc	3,2
  7410  14C3  2CC5               	goto	u3891
  7411  14C4  2CC6               	goto	u3890
  7412  14C5                     u3891:
  7413  14C5  2CCA               	goto	l801
  7414  14C6                     u3890:
  7415  14C6                     l2871:
  7416  14C6  3001               	movlw	1
  7417  14C7  00E1               	movwf	??___fladd
  7418  14C8  0861               	movf	??___fladd,w
  7419  14C9  07EB               	addwf	___fladd@bexp,f
  7420  14CA                     l801:
  7421  14CA  0A6B               	incf	___fladd@bexp,w
  7422  14CB  1903               	btfsc	3,2
  7423  14CC  2CCE               	goto	u3901
  7424  14CD  2CCF               	goto	u3900
  7425  14CE                     u3901:
  7426  14CE  2CD4               	goto	l2875
  7427  14CF                     u3900:
  7428  14CF                     l2873:
  7429  14CF  086B               	movf	___fladd@bexp,w
  7430  14D0  1D03               	btfss	3,2
  7431  14D1  2CD3               	goto	u3911
  7432  14D2  2CD4               	goto	u3910
  7433  14D3                     u3911:
  7434  14D3  2CE2               	goto	l2881
  7435  14D4                     u3910:
  7436  14D4                     l2875:
  7437  14D4  3000               	movlw	0
  7438  14D5  00DC               	movwf	___fladd@b+3
  7439  14D6  3000               	movlw	0
  7440  14D7  00DB               	movwf	___fladd@b+2
  7441  14D8  3000               	movlw	0
  7442  14D9  00DA               	movwf	___fladd@b+1
  7443  14DA  3000               	movlw	0
  7444  14DB  00D9               	movwf	___fladd@b
  7445  14DC                     l2877:
  7446  14DC  086B               	movf	___fladd@bexp,w
  7447  14DD  1D03               	btfss	3,2
  7448  14DE  2CE0               	goto	u3921
  7449  14DF  2CE1               	goto	u3920
  7450  14E0                     u3921:
  7451  14E0  2CE2               	goto	l2881
  7452  14E1                     u3920:
  7453  14E1                     l2879:
  7454  14E1  01E9               	clrf	___fladd@signs
  7455  14E2                     l2881:
  7456  14E2  1C6B               	btfss	___fladd@bexp,0
  7457  14E3  2CE5               	goto	u3931
  7458  14E4  2CE6               	goto	u3930
  7459  14E5                     u3931:
  7460  14E5  2CE8               	goto	l2885
  7461  14E6                     u3930:
  7462  14E6                     l2883:
  7463  14E6  17DB               	bsf	___fladd@b+2,7
  7464  14E7  2CEC               	goto	l809
  7465  14E8                     l2885:
  7466  14E8  307F               	movlw	127
  7467  14E9  00E1               	movwf	??___fladd
  7468  14EA  0861               	movf	??___fladd,w
  7469  14EB  05DB               	andwf	___fladd@b+2,f
  7470  14EC                     l809:
  7471  14EC  086B               	movf	___fladd@bexp,w
  7472  14ED  00E1               	movwf	??___fladd
  7473  14EE  1003               	clrc
  7474  14EF  0C61               	rrf	??___fladd,w
  7475  14F0  00E2               	movwf	??___fladd+1
  7476  14F1  0862               	movf	??___fladd+1,w
  7477  14F2  00DC               	movwf	___fladd@b+3
  7478  14F3                     l2887:
  7479  14F3  1FE9               	btfss	___fladd@signs,7
  7480  14F4  2CF6               	goto	u3941
  7481  14F5  2CF7               	goto	u3940
  7482  14F6                     u3941:
  7483  14F6  2CF8               	goto	l810
  7484  14F7                     u3940:
  7485  14F7                     l2889:
  7486  14F7  17DC               	bsf	___fladd@b+3,7
  7487  14F8                     l810:
  7488  14F8                     l780:
  7489  14F8  0008               	return
  7490  14F9                     __end_of___fladd:
  7491                           
  7492                           	psect	text24
  7493  0071                     __ptext24:	
  7494 ;; *************** function ___flneg *****************
  7495 ;; Defined at:
  7496 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7497 ;; Parameters:    Size  Location     Type
  7498 ;;  f1              4    3[COMMON] unsigned char 
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;		None
  7501 ;; Return value:  Size  Location     Type
  7502 ;;                  4    3[COMMON] unsigned char 
  7503 ;; Registers used:
  7504 ;;		wreg
  7505 ;; Tracked objects:
  7506 ;;		On entry : 0/0
  7507 ;;		On exit  : 0/0
  7508 ;;		Unchanged: 0/0
  7509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7510 ;;      Params:         4       0       0       0       0
  7511 ;;      Locals:         0       0       0       0       0
  7512 ;;      Temps:          0       0       0       0       0
  7513 ;;      Totals:         4       0       0       0       0
  7514 ;;Total ram usage:        4 bytes
  7515 ;; Hardware stack levels used:    1
  7516 ;; Hardware stack levels required when called:    1
  7517 ;; This function calls:
  7518 ;;		Nothing
  7519 ;; This function is called by:
  7520 ;;		_sprintf
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           
  7525                           ;psect for function ___flneg
  7526  0071                     ___flneg:
  7527  0071                     l3295:	
  7528                           ;incstack = 0
  7529                           ; Regs used in ___flneg: [wreg]
  7530                           
  7531  0071  0876               	movf	___flneg@f1+3,w
  7532  0072  0475               	iorwf	___flneg@f1+2,w
  7533  0073  0474               	iorwf	___flneg@f1+1,w
  7534  0074  0473               	iorwf	___flneg@f1,w
  7535  0075  1903               	skipnz
  7536  0076  2878               	goto	u5061
  7537  0077  2879               	goto	u5060
  7538  0078                     u5061:
  7539  0078  287B               	goto	l3299
  7540  0079                     u5060:
  7541  0079                     l3297:
  7542  0079  3080               	movlw	128
  7543  007A  06F6               	xorwf	___flneg@f1+3,f
  7544  007B                     l3299:
  7545  007B                     l639:
  7546  007B  0008               	return
  7547  007C                     __end_of___flneg:
  7548                           
  7549                           	psect	text25
  7550  1D27                     __ptext25:	
  7551 ;; *************** function ___flge *****************
  7552 ;; Defined at:
  7553 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;  ff1             4    0[BANK0 ] unsigned char 
  7556 ;;  ff2             4    4[BANK0 ] unsigned char 
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;		None
  7559 ;; Return value:  Size  Location     Type
  7560 ;;		None               void
  7561 ;; Registers used:
  7562 ;;		wreg, status,2, status,0
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7568 ;;      Params:         0       8       0       0       0
  7569 ;;      Locals:         0       0       0       0       0
  7570 ;;      Temps:          4       0       0       0       0
  7571 ;;      Totals:         4       8       0       0       0
  7572 ;;Total ram usage:       12 bytes
  7573 ;; Hardware stack levels used:    1
  7574 ;; Hardware stack levels required when called:    1
  7575 ;; This function calls:
  7576 ;;		Nothing
  7577 ;; This function is called by:
  7578 ;;		_sprintf
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           
  7583                           ;psect for function ___flge
  7584  1D27                     ___flge:
  7585  1D27                     l4425:	
  7586                           ;incstack = 0
  7587                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7588                           
  7589  1D27  3000               	movlw	0
  7590  1D28  1283               	bcf	3,5	;RP0=0, select bank0
  7591  1D29  1303               	bcf	3,6	;RP1=0, select bank0
  7592  1D2A  0520               	andwf	___flge@ff1,w
  7593  1D2B  00F3               	movwf	??___flge
  7594  1D2C  3000               	movlw	0
  7595  1D2D  0521               	andwf	___flge@ff1+1,w
  7596  1D2E  00F4               	movwf	??___flge+1
  7597  1D2F  3080               	movlw	128
  7598  1D30  0522               	andwf	___flge@ff1+2,w
  7599  1D31  00F5               	movwf	??___flge+2
  7600  1D32  307F               	movlw	127
  7601  1D33  0523               	andwf	___flge@ff1+3,w
  7602  1D34  00F6               	movwf	??___flge+3
  7603  1D35  0876               	movf	??___flge+3,w
  7604  1D36  0475               	iorwf	??___flge+2,w
  7605  1D37  0474               	iorwf	??___flge+1,w
  7606  1D38  0473               	iorwf	??___flge,w
  7607  1D39  1D03               	skipz
  7608  1D3A  2D3C               	goto	u7181
  7609  1D3B  2D3D               	goto	u7180
  7610  1D3C                     u7181:
  7611  1D3C  2D45               	goto	l631
  7612  1D3D                     u7180:
  7613  1D3D                     l4427:
  7614  1D3D  3000               	movlw	0
  7615  1D3E  00A3               	movwf	___flge@ff1+3
  7616  1D3F  3000               	movlw	0
  7617  1D40  00A2               	movwf	___flge@ff1+2
  7618  1D41  3000               	movlw	0
  7619  1D42  00A1               	movwf	___flge@ff1+1
  7620  1D43  3000               	movlw	0
  7621  1D44  00A0               	movwf	___flge@ff1
  7622  1D45                     l631:
  7623  1D45  3000               	movlw	0
  7624  1D46  0524               	andwf	___flge@ff2,w
  7625  1D47  00F3               	movwf	??___flge
  7626  1D48  3000               	movlw	0
  7627  1D49  0525               	andwf	___flge@ff2+1,w
  7628  1D4A  00F4               	movwf	??___flge+1
  7629  1D4B  3080               	movlw	128
  7630  1D4C  0526               	andwf	___flge@ff2+2,w
  7631  1D4D  00F5               	movwf	??___flge+2
  7632  1D4E  307F               	movlw	127
  7633  1D4F  0527               	andwf	___flge@ff2+3,w
  7634  1D50  00F6               	movwf	??___flge+3
  7635  1D51  0876               	movf	??___flge+3,w
  7636  1D52  0475               	iorwf	??___flge+2,w
  7637  1D53  0474               	iorwf	??___flge+1,w
  7638  1D54  0473               	iorwf	??___flge,w
  7639  1D55  1D03               	skipz
  7640  1D56  2D58               	goto	u7191
  7641  1D57  2D59               	goto	u7190
  7642  1D58                     u7191:
  7643  1D58  2D61               	goto	l4431
  7644  1D59                     u7190:
  7645  1D59                     l4429:
  7646  1D59  3000               	movlw	0
  7647  1D5A  00A7               	movwf	___flge@ff2+3
  7648  1D5B  3000               	movlw	0
  7649  1D5C  00A6               	movwf	___flge@ff2+2
  7650  1D5D  3000               	movlw	0
  7651  1D5E  00A5               	movwf	___flge@ff2+1
  7652  1D5F  3000               	movlw	0
  7653  1D60  00A4               	movwf	___flge@ff2
  7654  1D61                     l4431:
  7655  1D61  1FA3               	btfss	___flge@ff1+3,7
  7656  1D62  2D64               	goto	u7201
  7657  1D63  2D65               	goto	u7200
  7658  1D64                     u7201:
  7659  1D64  2D89               	goto	l4435
  7660  1D65                     u7200:
  7661  1D65                     l4433:
  7662  1D65  3000               	movlw	0
  7663  1D66  00F3               	movwf	??___flge
  7664  1D67  3000               	movlw	0
  7665  1D68  00F4               	movwf	??___flge+1
  7666  1D69  3000               	movlw	0
  7667  1D6A  00F5               	movwf	??___flge+2
  7668  1D6B  3080               	movlw	128
  7669  1D6C  00F6               	movwf	??___flge+3
  7670  1D6D  0820               	movf	___flge@ff1,w
  7671  1D6E  02F3               	subwf	??___flge,f
  7672  1D6F  0821               	movf	___flge@ff1+1,w
  7673  1D70  1C03               	skipc
  7674  1D71  0F21               	incfsz	___flge@ff1+1,w
  7675  1D72  2D74               	goto	u7211
  7676  1D73  2D75               	goto	u7212
  7677  1D74                     u7211:
  7678  1D74  02F4               	subwf	??___flge+1,f
  7679  1D75                     u7212:
  7680  1D75  0822               	movf	___flge@ff1+2,w
  7681  1D76  1C03               	skipc
  7682  1D77  0F22               	incfsz	___flge@ff1+2,w
  7683  1D78  2D7A               	goto	u7213
  7684  1D79  2D7B               	goto	u7214
  7685  1D7A                     u7213:
  7686  1D7A  02F5               	subwf	??___flge+2,f
  7687  1D7B                     u7214:
  7688  1D7B  0823               	movf	___flge@ff1+3,w
  7689  1D7C  1C03               	skipc
  7690  1D7D  0F23               	incfsz	___flge@ff1+3,w
  7691  1D7E  2D80               	goto	u7215
  7692  1D7F  2D81               	goto	u7216
  7693  1D80                     u7215:
  7694  1D80  02F6               	subwf	??___flge+3,f
  7695  1D81                     u7216:
  7696  1D81  0876               	movf	??___flge+3,w
  7697  1D82  00A3               	movwf	___flge@ff1+3
  7698  1D83  0875               	movf	??___flge+2,w
  7699  1D84  00A2               	movwf	___flge@ff1+2
  7700  1D85  0874               	movf	??___flge+1,w
  7701  1D86  00A1               	movwf	___flge@ff1+1
  7702  1D87  0873               	movf	??___flge,w
  7703  1D88  00A0               	movwf	___flge@ff1
  7704  1D89                     l4435:
  7705  1D89  1FA7               	btfss	___flge@ff2+3,7
  7706  1D8A  2D8C               	goto	u7221
  7707  1D8B  2D8D               	goto	u7220
  7708  1D8C                     u7221:
  7709  1D8C  2DB1               	goto	l634
  7710  1D8D                     u7220:
  7711  1D8D                     l4437:
  7712  1D8D  3000               	movlw	0
  7713  1D8E  00F3               	movwf	??___flge
  7714  1D8F  3000               	movlw	0
  7715  1D90  00F4               	movwf	??___flge+1
  7716  1D91  3000               	movlw	0
  7717  1D92  00F5               	movwf	??___flge+2
  7718  1D93  3080               	movlw	128
  7719  1D94  00F6               	movwf	??___flge+3
  7720  1D95  0824               	movf	___flge@ff2,w
  7721  1D96  02F3               	subwf	??___flge,f
  7722  1D97  0825               	movf	___flge@ff2+1,w
  7723  1D98  1C03               	skipc
  7724  1D99  0F25               	incfsz	___flge@ff2+1,w
  7725  1D9A  2D9C               	goto	u7231
  7726  1D9B  2D9D               	goto	u7232
  7727  1D9C                     u7231:
  7728  1D9C  02F4               	subwf	??___flge+1,f
  7729  1D9D                     u7232:
  7730  1D9D  0826               	movf	___flge@ff2+2,w
  7731  1D9E  1C03               	skipc
  7732  1D9F  0F26               	incfsz	___flge@ff2+2,w
  7733  1DA0  2DA2               	goto	u7233
  7734  1DA1  2DA3               	goto	u7234
  7735  1DA2                     u7233:
  7736  1DA2  02F5               	subwf	??___flge+2,f
  7737  1DA3                     u7234:
  7738  1DA3  0827               	movf	___flge@ff2+3,w
  7739  1DA4  1C03               	skipc
  7740  1DA5  0F27               	incfsz	___flge@ff2+3,w
  7741  1DA6  2DA8               	goto	u7235
  7742  1DA7  2DA9               	goto	u7236
  7743  1DA8                     u7235:
  7744  1DA8  02F6               	subwf	??___flge+3,f
  7745  1DA9                     u7236:
  7746  1DA9  0876               	movf	??___flge+3,w
  7747  1DAA  00A7               	movwf	___flge@ff2+3
  7748  1DAB  0875               	movf	??___flge+2,w
  7749  1DAC  00A6               	movwf	___flge@ff2+2
  7750  1DAD  0874               	movf	??___flge+1,w
  7751  1DAE  00A5               	movwf	___flge@ff2+1
  7752  1DAF  0873               	movf	??___flge,w
  7753  1DB0  00A4               	movwf	___flge@ff2
  7754  1DB1                     l634:
  7755  1DB1  3080               	movlw	128
  7756  1DB2  06A3               	xorwf	___flge@ff1+3,f
  7757  1DB3  3080               	movlw	128
  7758  1DB4  06A7               	xorwf	___flge@ff2+3,f
  7759  1DB5  0827               	movf	___flge@ff2+3,w
  7760  1DB6  0223               	subwf	___flge@ff1+3,w
  7761  1DB7  1D03               	skipz
  7762  1DB8  2DC3               	goto	u7245
  7763  1DB9  0826               	movf	___flge@ff2+2,w
  7764  1DBA  0222               	subwf	___flge@ff1+2,w
  7765  1DBB  1D03               	skipz
  7766  1DBC  2DC3               	goto	u7245
  7767  1DBD  0825               	movf	___flge@ff2+1,w
  7768  1DBE  0221               	subwf	___flge@ff1+1,w
  7769  1DBF  1D03               	skipz
  7770  1DC0  2DC3               	goto	u7245
  7771  1DC1  0824               	movf	___flge@ff2,w
  7772  1DC2  0220               	subwf	___flge@ff1,w
  7773  1DC3                     u7245:
  7774  1DC3  1803               	skipnc
  7775  1DC4  2DC6               	goto	u7241
  7776  1DC5  2DC7               	goto	u7240
  7777  1DC6                     u7241:
  7778  1DC6  2DC9               	goto	l4441
  7779  1DC7                     u7240:
  7780  1DC7                     l4439:
  7781  1DC7  1003               	clrc
  7782  1DC8  2DCA               	goto	l635
  7783  1DC9                     l4441:
  7784  1DC9  1403               	setc
  7785  1DCA                     l635:
  7786  1DCA  0008               	return
  7787  1DCB                     __end_of___flge:
  7788                           
  7789                           	psect	text26
  7790  1966                     __ptext26:	
  7791 ;; *************** function ___fleq *****************
  7792 ;; Defined at:
  7793 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;  ff1             4    0[BANK0 ] unsigned char 
  7796 ;;  ff2             4    4[BANK0 ] unsigned char 
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;		None
  7799 ;; Return value:  Size  Location     Type
  7800 ;;		None               void
  7801 ;; Registers used:
  7802 ;;		wreg, status,2, status,0
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7808 ;;      Params:         0       8       0       0       0
  7809 ;;      Locals:         0       0       0       0       0
  7810 ;;      Temps:          4       0       0       0       0
  7811 ;;      Totals:         4       8       0       0       0
  7812 ;;Total ram usage:       12 bytes
  7813 ;; Hardware stack levels used:    1
  7814 ;; Hardware stack levels required when called:    1
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_sprintf
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           
  7823                           ;psect for function ___fleq
  7824  1966                     ___fleq:
  7825  1966                     l4413:	
  7826                           ;incstack = 0
  7827                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7828                           
  7829  1966  3000               	movlw	0
  7830  1967  1283               	bcf	3,5	;RP0=0, select bank0
  7831  1968  1303               	bcf	3,6	;RP1=0, select bank0
  7832  1969  0520               	andwf	___fleq@ff1,w
  7833  196A  00F3               	movwf	??___fleq
  7834  196B  3000               	movlw	0
  7835  196C  0521               	andwf	___fleq@ff1+1,w
  7836  196D  00F4               	movwf	??___fleq+1
  7837  196E  3080               	movlw	128
  7838  196F  0522               	andwf	___fleq@ff1+2,w
  7839  1970  00F5               	movwf	??___fleq+2
  7840  1971  307F               	movlw	127
  7841  1972  0523               	andwf	___fleq@ff1+3,w
  7842  1973  00F6               	movwf	??___fleq+3
  7843  1974  0876               	movf	??___fleq+3,w
  7844  1975  0475               	iorwf	??___fleq+2,w
  7845  1976  0474               	iorwf	??___fleq+1,w
  7846  1977  0473               	iorwf	??___fleq,w
  7847  1978  1D03               	skipz
  7848  1979  297B               	goto	u7151
  7849  197A  297C               	goto	u7150
  7850  197B                     u7151:
  7851  197B  2984               	goto	l626
  7852  197C                     u7150:
  7853  197C                     l4415:
  7854  197C  3000               	movlw	0
  7855  197D  00A3               	movwf	___fleq@ff1+3
  7856  197E  3000               	movlw	0
  7857  197F  00A2               	movwf	___fleq@ff1+2
  7858  1980  3000               	movlw	0
  7859  1981  00A1               	movwf	___fleq@ff1+1
  7860  1982  3000               	movlw	0
  7861  1983  00A0               	movwf	___fleq@ff1
  7862  1984                     l626:
  7863  1984  3000               	movlw	0
  7864  1985  0524               	andwf	___fleq@ff2,w
  7865  1986  00F3               	movwf	??___fleq
  7866  1987  3000               	movlw	0
  7867  1988  0525               	andwf	___fleq@ff2+1,w
  7868  1989  00F4               	movwf	??___fleq+1
  7869  198A  3080               	movlw	128
  7870  198B  0526               	andwf	___fleq@ff2+2,w
  7871  198C  00F5               	movwf	??___fleq+2
  7872  198D  307F               	movlw	127
  7873  198E  0527               	andwf	___fleq@ff2+3,w
  7874  198F  00F6               	movwf	??___fleq+3
  7875  1990  0876               	movf	??___fleq+3,w
  7876  1991  0475               	iorwf	??___fleq+2,w
  7877  1992  0474               	iorwf	??___fleq+1,w
  7878  1993  0473               	iorwf	??___fleq,w
  7879  1994  1D03               	skipz
  7880  1995  2997               	goto	u7161
  7881  1996  2998               	goto	u7160
  7882  1997                     u7161:
  7883  1997  29A0               	goto	l627
  7884  1998                     u7160:
  7885  1998                     l4417:
  7886  1998  3000               	movlw	0
  7887  1999  00A7               	movwf	___fleq@ff2+3
  7888  199A  3000               	movlw	0
  7889  199B  00A6               	movwf	___fleq@ff2+2
  7890  199C  3000               	movlw	0
  7891  199D  00A5               	movwf	___fleq@ff2+1
  7892  199E  3000               	movlw	0
  7893  199F  00A4               	movwf	___fleq@ff2
  7894  19A0                     l627:
  7895  19A0  0827               	movf	___fleq@ff2+3,w
  7896  19A1  0623               	xorwf	___fleq@ff1+3,w
  7897  19A2  1D03               	skipz
  7898  19A3  29AE               	goto	u7175
  7899  19A4  0826               	movf	___fleq@ff2+2,w
  7900  19A5  0622               	xorwf	___fleq@ff1+2,w
  7901  19A6  1D03               	skipz
  7902  19A7  29AE               	goto	u7175
  7903  19A8  0825               	movf	___fleq@ff2+1,w
  7904  19A9  0621               	xorwf	___fleq@ff1+1,w
  7905  19AA  1D03               	skipz
  7906  19AB  29AE               	goto	u7175
  7907  19AC  0824               	movf	___fleq@ff2,w
  7908  19AD  0620               	xorwf	___fleq@ff1,w
  7909  19AE                     u7175:
  7910  19AE  1903               	skipnz
  7911  19AF  29B1               	goto	u7171
  7912  19B0  29B2               	goto	u7170
  7913  19B1                     u7171:
  7914  19B1  29B4               	goto	l4421
  7915  19B2                     u7170:
  7916  19B2                     l4419:
  7917  19B2  1003               	clrc
  7918  19B3  29B5               	goto	l628
  7919  19B4                     l4421:
  7920  19B4  1403               	setc
  7921  19B5                     l628:
  7922  19B5  0008               	return
  7923  19B6                     __end_of___fleq:
  7924                           
  7925                           	psect	text27
  7926  1000                     __ptext27:	
  7927 ;; *************** function _USART_Init_BaudRate *****************
  7928 ;; Defined at:
  7929 ;;		line 20 in file "USART.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;		None
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;		None
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  1    wreg      void 
  7936 ;; Registers used:
  7937 ;;		wreg
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7943 ;;      Params:         0       0       0       0       0
  7944 ;;      Locals:         0       0       0       0       0
  7945 ;;      Temps:          0       0       0       0       0
  7946 ;;      Totals:         0       0       0       0       0
  7947 ;;Total ram usage:        0 bytes
  7948 ;; Hardware stack levels used:    1
  7949 ;; Hardware stack levels required when called:    1
  7950 ;; This function calls:
  7951 ;;		Nothing
  7952 ;; This function is called by:
  7953 ;;		_main
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957                           
  7958                           ;psect for function _USART_Init_BaudRate
  7959  1000                     _USART_Init_BaudRate:
  7960  1000                     l3895:	
  7961                           ;incstack = 0
  7962                           ; Regs used in _USART_Init_BaudRate: [wreg]
  7963                           
  7964                           
  7965                           ;USART.c: 21:     SPBRG = 12;
  7966  1000  300C               	movlw	12
  7967  1001  1683               	bsf	3,5	;RP0=1, select bank1
  7968  1002  1303               	bcf	3,6	;RP1=0, select bank1
  7969  1003  0099               	movwf	25	;volatile
  7970  1004                     l241:
  7971  1004  0008               	return
  7972  1005                     __end_of_USART_Init_BaudRate:
  7973                           
  7974                           	psect	text28
  7975  0061                     __ptext28:	
  7976 ;; *************** function _USART_Init *****************
  7977 ;; Defined at:
  7978 ;;		line 5 in file "USART.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;		None
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;		None
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  1    wreg      void 
  7985 ;; Registers used:
  7986 ;;		status,2
  7987 ;; Tracked objects:
  7988 ;;		On entry : 0/0
  7989 ;;		On exit  : 0/0
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7992 ;;      Params:         0       0       0       0       0
  7993 ;;      Locals:         0       0       0       0       0
  7994 ;;      Temps:          0       0       0       0       0
  7995 ;;      Totals:         0       0       0       0       0
  7996 ;;Total ram usage:        0 bytes
  7997 ;; Hardware stack levels used:    1
  7998 ;; Hardware stack levels required when called:    1
  7999 ;; This function calls:
  8000 ;;		Nothing
  8001 ;; This function is called by:
  8002 ;;		_main
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005                           
  8006                           
  8007                           ;psect for function _USART_Init
  8008  0061                     _USART_Init:
  8009  0061                     l3891:	
  8010                           ;incstack = 0
  8011                           ; Regs used in _USART_Init: [status,2]
  8012                           
  8013                           
  8014                           ;USART.c: 7:     RCSTAbits.SPEN = 1;
  8015  0061  1283               	bcf	3,5	;RP0=0, select bank0
  8016  0062  1303               	bcf	3,6	;RP1=0, select bank0
  8017  0063  1798               	bsf	24,7	;volatile
  8018                           
  8019                           ;USART.c: 8:     TXSTAbits.SYNC = 0;
  8020  0064  1683               	bsf	3,5	;RP0=1, select bank1
  8021  0065  1303               	bcf	3,6	;RP1=0, select bank1
  8022  0066  1218               	bcf	24,4	;volatile
  8023                           
  8024                           ;USART.c: 10:     TXSTAbits.TXEN = 1;
  8025  0067  1698               	bsf	24,5	;volatile
  8026                           
  8027                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  8028  0068  1318               	bcf	24,6	;volatile
  8029                           
  8030                           ;USART.c: 12:     TXSTAbits.BRGH = 1;
  8031  0069  1518               	bsf	24,2	;volatile
  8032                           
  8033                           ;USART.c: 13:     TXSTAbits.TRMT = 0;
  8034  006A  1098               	bcf	24,1	;volatile
  8035                           
  8036                           ;USART.c: 15:     RCSTAbits.RX9 = 0;
  8037  006B  1283               	bcf	3,5	;RP0=0, select bank0
  8038  006C  1303               	bcf	3,6	;RP1=0, select bank0
  8039  006D  1318               	bcf	24,6	;volatile
  8040                           
  8041                           ;USART.c: 16:     RCSTAbits.CREN = 1;
  8042  006E  1618               	bsf	24,4	;volatile
  8043  006F                     l3893:
  8044                           
  8045                           ;USART.c: 17:     RCREG = 0;
  8046  006F  019A               	clrf	26	;volatile
  8047  0070                     l238:
  8048  0070  0008               	return
  8049  0071                     __end_of_USART_Init:
  8050                           
  8051                           	psect	text29
  8052  1916                     __ptext29:	
  8053 ;; *************** function _Lcd_Init *****************
  8054 ;; Defined at:
  8055 ;;		line 14 in file "LCD.c"
  8056 ;; Parameters:    Size  Location     Type
  8057 ;;		None
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;		None
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  1    wreg      void 
  8062 ;; Registers used:
  8063 ;;		wreg, status,2, status,0, pclath, cstack
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8069 ;;      Params:         0       0       0       0       0
  8070 ;;      Locals:         0       0       0       0       0
  8071 ;;      Temps:          0       2       0       0       0
  8072 ;;      Totals:         0       2       0       0       0
  8073 ;;Total ram usage:        2 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; Hardware stack levels required when called:    3
  8076 ;; This function calls:
  8077 ;;		_Lcd_Cmd
  8078 ;;		_Lcd_Port
  8079 ;; This function is called by:
  8080 ;;		_main
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           
  8085                           ;psect for function _Lcd_Init
  8086  1916                     _Lcd_Init:
  8087  1916                     l4793:	
  8088                           ;incstack = 0
  8089                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  8090                           
  8091                           
  8092                           ;LCD.c: 15:   Lcd_Port(0x00);
  8093  1916  3000               	movlw	0
  8094  1917  120A  118A  205B  160A  158A  	fcall	_Lcd_Port
  8095  191C                     l4795:
  8096                           
  8097                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  8098  191C  3034               	movlw	52
  8099  191D  1283               	bcf	3,5	;RP0=0, select bank0
  8100  191E  1303               	bcf	3,6	;RP1=0, select bank0
  8101  191F  00A1               	movwf	??_Lcd_Init+1
  8102  1920  30F1               	movlw	241
  8103  1921  00A0               	movwf	??_Lcd_Init
  8104  1922                     u8027:
  8105  1922  0BA0               	decfsz	??_Lcd_Init,f
  8106  1923  2922               	goto	u8027
  8107  1924  0BA1               	decfsz	??_Lcd_Init+1,f
  8108  1925  2922               	goto	u8027
  8109  1926                     l4797:
  8110                           
  8111                           ;LCD.c: 17:   Lcd_Cmd(0x30);
  8112  1926  3030               	movlw	48
  8113  1927  160A  158A  20B6  160A  158A  	fcall	_Lcd_Cmd
  8114                           
  8115                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  8116  192C  300D               	movlw	13
  8117  192D  1283               	bcf	3,5	;RP0=0, select bank0
  8118  192E  1303               	bcf	3,6	;RP1=0, select bank0
  8119  192F  00A1               	movwf	??_Lcd_Init+1
  8120  1930  30FB               	movlw	251
  8121  1931  00A0               	movwf	??_Lcd_Init
  8122  1932                     u8037:
  8123  1932  0BA0               	decfsz	??_Lcd_Init,f
  8124  1933  2932               	goto	u8037
  8125  1934  0BA1               	decfsz	??_Lcd_Init+1,f
  8126  1935  2932               	goto	u8037
  8127  1936                     l4799:
  8128                           
  8129                           ;LCD.c: 19:   Lcd_Cmd(0x30);
  8130  1936  3030               	movlw	48
  8131  1937  160A  158A  20B6  160A  158A  	fcall	_Lcd_Cmd
  8132  193C                     l4801:
  8133                           
  8134                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  8135  193C  301D               	movlw	29
  8136  193D  1283               	bcf	3,5	;RP0=0, select bank0
  8137  193E  1303               	bcf	3,6	;RP1=0, select bank0
  8138  193F  00A1               	movwf	??_Lcd_Init+1
  8139  1940  3090               	movlw	144
  8140  1941  00A0               	movwf	??_Lcd_Init
  8141  1942                     u8047:
  8142  1942  0BA0               	decfsz	??_Lcd_Init,f
  8143  1943  2942               	goto	u8047
  8144  1944  0BA1               	decfsz	??_Lcd_Init+1,f
  8145  1945  2942               	goto	u8047
  8146  1946  0000               	nop
  8147                           
  8148                           ;LCD.c: 21:   Lcd_Cmd(0x30);
  8149  1947  3030               	movlw	48
  8150  1948  160A  158A  20B6  160A  158A  	fcall	_Lcd_Cmd
  8151                           
  8152                           ;LCD.c: 22:   Lcd_Cmd(0x38);
  8153  194D  3038               	movlw	56
  8154  194E  160A  158A  20B6  160A  158A  	fcall	_Lcd_Cmd
  8155                           
  8156                           ;LCD.c: 23:   Lcd_Cmd(0x0C);
  8157  1953  300C               	movlw	12
  8158  1954  160A  158A  20B6  160A  158A  	fcall	_Lcd_Cmd
  8159                           
  8160                           ;LCD.c: 24:   Lcd_Cmd(0x01);
  8161  1959  3001               	movlw	1
  8162  195A  160A  158A  20B6  160A  158A  	fcall	_Lcd_Cmd
  8163                           
  8164                           ;LCD.c: 25:   Lcd_Cmd(0x06);
  8165  195F  3006               	movlw	6
  8166  1960  160A  158A  20B6  160A  158A  	fcall	_Lcd_Cmd
  8167  1965                     l143:
  8168  1965  0008               	return
  8169  1966                     __end_of_Lcd_Init:
  8170                           
  8171                           	psect	text30
  8172  18B6                     __ptext30:	
  8173 ;; *************** function _Lcd_Cmd *****************
  8174 ;; Defined at:
  8175 ;;		line 33 in file "LCD.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;  a               1    wreg     unsigned char 
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;  a               1    6[COMMON] unsigned char 
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      void 
  8182 ;; Registers used:
  8183 ;;		wreg, status,2, status,0, pclath, cstack
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8189 ;;      Params:         0       0       0       0       0
  8190 ;;      Locals:         1       0       0       0       0
  8191 ;;      Temps:          2       0       0       0       0
  8192 ;;      Totals:         3       0       0       0       0
  8193 ;;Total ram usage:        3 bytes
  8194 ;; Hardware stack levels used:    1
  8195 ;; Hardware stack levels required when called:    2
  8196 ;; This function calls:
  8197 ;;		_Lcd_Port
  8198 ;; This function is called by:
  8199 ;;		_Lcd_Init
  8200 ;;		_Lcd_Set_Cursor
  8201 ;;		_Lcd_Clear
  8202 ;;		_Lcd_Shift_Right
  8203 ;;		_Lcd_Shift_Left
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           
  8207                           
  8208                           ;psect for function _Lcd_Cmd
  8209  18B6                     _Lcd_Cmd:
  8210                           
  8211                           ;incstack = 0
  8212                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  8213                           ;Lcd_Cmd@a stored from wreg
  8214  18B6  00F6               	movwf	Lcd_Cmd@a
  8215  18B7                     l4193:
  8216                           
  8217                           ;LCD.c: 34:  PORTEbits.RE0 = 0;
  8218  18B7  1283               	bcf	3,5	;RP0=0, select bank0
  8219  18B8  1303               	bcf	3,6	;RP1=0, select bank0
  8220  18B9  1009               	bcf	9,0	;volatile
  8221  18BA                     l4195:
  8222                           
  8223                           ;LCD.c: 35:  Lcd_Port(a);
  8224  18BA  0876               	movf	Lcd_Cmd@a,w
  8225  18BB  120A  118A  205B  160A  158A  	fcall	_Lcd_Port
  8226  18C0                     l4197:
  8227                           
  8228                           ;LCD.c: 36:  PORTEbits.RE2 = 1;
  8229  18C0  1283               	bcf	3,5	;RP0=0, select bank0
  8230  18C1  1303               	bcf	3,6	;RP1=0, select bank0
  8231  18C2  1509               	bsf	9,2	;volatile
  8232  18C3                     l4199:
  8233                           
  8234                           ;LCD.c: 37:         _delay((unsigned long)((4)*(8000000/4000.0)));
  8235  18C3  300B               	movlw	11
  8236  18C4  00F5               	movwf	??_Lcd_Cmd+1
  8237  18C5  3062               	movlw	98
  8238  18C6  00F4               	movwf	??_Lcd_Cmd
  8239  18C7                     u8057:
  8240  18C7  0BF4               	decfsz	??_Lcd_Cmd,f
  8241  18C8  28C7               	goto	u8057
  8242  18C9  0BF5               	decfsz	??_Lcd_Cmd+1,f
  8243  18CA  28C7               	goto	u8057
  8244  18CB  0000               	nop
  8245  18CC                     l4201:
  8246                           
  8247                           ;LCD.c: 38:         PORTEbits.RE2 = 0;
  8248  18CC  1283               	bcf	3,5	;RP0=0, select bank0
  8249  18CD  1303               	bcf	3,6	;RP1=0, select bank0
  8250  18CE  1109               	bcf	9,2	;volatile
  8251  18CF                     l149:
  8252  18CF  0008               	return
  8253  18D0                     __end_of_Lcd_Cmd:
  8254                           
  8255                           	psect	text31
  8256  005B                     __ptext31:	
  8257 ;; *************** function _Lcd_Port *****************
  8258 ;; Defined at:
  8259 ;;		line 29 in file "LCD.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;  a               1    wreg     unsigned char 
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;  a               1    3[COMMON] unsigned char 
  8264 ;; Return value:  Size  Location     Type
  8265 ;;                  1    wreg      void 
  8266 ;; Registers used:
  8267 ;;		wreg
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 0/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8273 ;;      Params:         0       0       0       0       0
  8274 ;;      Locals:         1       0       0       0       0
  8275 ;;      Temps:          0       0       0       0       0
  8276 ;;      Totals:         1       0       0       0       0
  8277 ;;Total ram usage:        1 bytes
  8278 ;; Hardware stack levels used:    1
  8279 ;; Hardware stack levels required when called:    1
  8280 ;; This function calls:
  8281 ;;		Nothing
  8282 ;; This function is called by:
  8283 ;;		_Lcd_Init
  8284 ;;		_Lcd_Cmd
  8285 ;;		_Lcd_Write_Char
  8286 ;; This function uses a non-reentrant model
  8287 ;;
  8288                           
  8289                           
  8290                           ;psect for function _Lcd_Port
  8291  005B                     _Lcd_Port:
  8292                           
  8293                           ;incstack = 0
  8294                           ; Regs used in _Lcd_Port: [wreg]
  8295                           ;Lcd_Port@a stored from wreg
  8296  005B  00F3               	movwf	Lcd_Port@a
  8297  005C                     l4061:
  8298                           
  8299                           ;LCD.c: 30:     PORTD = a;
  8300  005C  0873               	movf	Lcd_Port@a,w
  8301  005D  1283               	bcf	3,5	;RP0=0, select bank0
  8302  005E  1303               	bcf	3,6	;RP1=0, select bank0
  8303  005F  0088               	movwf	8	;volatile
  8304  0060                     l146:
  8305  0060  0008               	return
  8306  0061                     __end_of_Lcd_Port:
  8307                           
  8308                           	psect	text32
  8309  1021                     __ptext32:	
  8310 ;; *************** function _ADC_channel2 *****************
  8311 ;; Defined at:
  8312 ;;		line 174 in file "pseudocodigo_lab3.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;		None
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;		None
  8317 ;; Return value:  Size  Location     Type
  8318 ;;                  1    wreg      void 
  8319 ;; Registers used:
  8320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8321 ;; Tracked objects:
  8322 ;;		On entry : 0/0
  8323 ;;		On exit  : 0/0
  8324 ;;		Unchanged: 0/0
  8325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8326 ;;      Params:         0       0       0       0       0
  8327 ;;      Locals:         0       0       0       0       0
  8328 ;;      Temps:          0       4       0       0       0
  8329 ;;      Totals:         0       4       0       0       0
  8330 ;;Total ram usage:        4 bytes
  8331 ;; Hardware stack levels used:    1
  8332 ;; Hardware stack levels required when called:    3
  8333 ;; This function calls:
  8334 ;;		_ADC_Config
  8335 ;;		___fldiv
  8336 ;;		___flmul
  8337 ;;		___xxtofl
  8338 ;; This function is called by:
  8339 ;;		_main
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           
  8344                           ;psect for function _ADC_channel2
  8345  1021                     _ADC_channel2:
  8346  1021                     l4827:	
  8347                           ;incstack = 0
  8348                           ; Regs used in _ADC_channel2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8349                           
  8350                           
  8351                           ;pseudocodigo_lab3.c: 175:     ADC_Config (1);
  8352  1021  3001               	movlw	1
  8353  1022  160A  158A  25CB  160A  118A  	fcall	_ADC_Config
  8354  1027                     l4829:
  8355                           
  8356                           ;pseudocodigo_lab3.c: 176:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8357  1027  3003               	movlw	3
  8358  1028  1283               	bcf	3,5	;RP0=0, select bank0
  8359  1029  1303               	bcf	3,6	;RP1=0, select bank0
  8360  102A  00E0               	movwf	??_ADC_channel2+1
  8361  102B  3097               	movlw	151
  8362  102C  00DF               	movwf	??_ADC_channel2
  8363  102D                     u8067:
  8364  102D  0BDF               	decfsz	??_ADC_channel2,f
  8365  102E  282D               	goto	u8067
  8366  102F  0BE0               	decfsz	??_ADC_channel2+1,f
  8367  1030  282D               	goto	u8067
  8368  1031                     l4831:
  8369                           
  8370                           ;pseudocodigo_lab3.c: 177:     ADCON0bits.GO = 1;
  8371  1031  1283               	bcf	3,5	;RP0=0, select bank0
  8372  1032  1303               	bcf	3,6	;RP1=0, select bank0
  8373  1033  149F               	bsf	31,1	;volatile
  8374                           
  8375                           ;pseudocodigo_lab3.c: 178:     while (ADCON0bits.GO != 0) {
  8376  1034  288E               	goto	l4835
  8377  1035                     l4833:
  8378                           
  8379                           ;pseudocodigo_lab3.c: 179:         S2_val = ((ADRESH * 5.0) / 255);
  8380  1035  3043               	movlw	67
  8381  1036  00C8               	movwf	___fldiv@a+3
  8382  1037  307F               	movlw	127
  8383  1038  00C7               	movwf	___fldiv@a+2
  8384  1039  3000               	movlw	0
  8385  103A  00C6               	movwf	___fldiv@a+1
  8386  103B  3000               	movlw	0
  8387  103C  00C5               	movwf	___fldiv@a
  8388  103D  3040               	movlw	64
  8389  103E  00AE               	movwf	___flmul@b+3
  8390  103F  30A0               	movlw	160
  8391  1040  00AD               	movwf	___flmul@b+2
  8392  1041  3000               	movlw	0
  8393  1042  00AC               	movwf	___flmul@b+1
  8394  1043  3000               	movlw	0
  8395  1044  00AB               	movwf	___flmul@b
  8396  1045  081E               	movf	30,w	;volatile
  8397  1046  00DF               	movwf	??_ADC_channel2
  8398  1047  01E0               	clrf	??_ADC_channel2+1
  8399  1048  01E1               	clrf	??_ADC_channel2+2
  8400  1049  01E2               	clrf	??_ADC_channel2+3
  8401  104A  0862               	movf	??_ADC_channel2+3,w
  8402  104B  00F6               	movwf	___xxtofl@val+3
  8403  104C  0861               	movf	??_ADC_channel2+2,w
  8404  104D  00F5               	movwf	___xxtofl@val+2
  8405  104E  0860               	movf	??_ADC_channel2+1,w
  8406  104F  00F4               	movwf	___xxtofl@val+1
  8407  1050  085F               	movf	??_ADC_channel2,w
  8408  1051  00F3               	movwf	___xxtofl@val
  8409  1052  3001               	movlw	1
  8410  1053  160A  158A  2687  160A  118A  	fcall	___xxtofl
  8411  1058  0876               	movf	?___xxtofl+3,w
  8412  1059  1283               	bcf	3,5	;RP0=0, select bank0
  8413  105A  1303               	bcf	3,6	;RP1=0, select bank0
  8414  105B  00B2               	movwf	___flmul@a+3
  8415  105C  0875               	movf	?___xxtofl+2,w
  8416  105D  00B1               	movwf	___flmul@a+2
  8417  105E  0874               	movf	?___xxtofl+1,w
  8418  105F  00B0               	movwf	___flmul@a+1
  8419  1060  0873               	movf	?___xxtofl,w
  8420  1061  00AF               	movwf	___flmul@a
  8421  1062  120A  158A  213C  160A  118A  	fcall	___flmul
  8422  1067  1283               	bcf	3,5	;RP0=0, select bank0
  8423  1068  1303               	bcf	3,6	;RP1=0, select bank0
  8424  1069  082E               	movf	?___flmul+3,w
  8425  106A  00CC               	movwf	___fldiv@b+3
  8426  106B  082D               	movf	?___flmul+2,w
  8427  106C  00CB               	movwf	___fldiv@b+2
  8428  106D  082C               	movf	?___flmul+1,w
  8429  106E  00CA               	movwf	___fldiv@b+1
  8430  106F  082B               	movf	?___flmul,w
  8431  1070  00C9               	movwf	___fldiv@b
  8432  1071  160A  118A  2094  160A  118A  	fcall	___fldiv
  8433  1076  1283               	bcf	3,5	;RP0=0, select bank0
  8434  1077  1303               	bcf	3,6	;RP1=0, select bank0
  8435  1078  0848               	movf	?___fldiv+3,w
  8436  1079  1683               	bsf	3,5	;RP0=1, select bank1
  8437  107A  1303               	bcf	3,6	;RP1=0, select bank1
  8438  107B  00D1               	movwf	(_S2_val+3)^(0+128)
  8439  107C  1283               	bcf	3,5	;RP0=0, select bank0
  8440  107D  1303               	bcf	3,6	;RP1=0, select bank0
  8441  107E  0847               	movf	?___fldiv+2,w
  8442  107F  1683               	bsf	3,5	;RP0=1, select bank1
  8443  1080  1303               	bcf	3,6	;RP1=0, select bank1
  8444  1081  00D0               	movwf	(_S2_val+2)^(0+128)
  8445  1082  1283               	bcf	3,5	;RP0=0, select bank0
  8446  1083  1303               	bcf	3,6	;RP1=0, select bank0
  8447  1084  0846               	movf	?___fldiv+1,w
  8448  1085  1683               	bsf	3,5	;RP0=1, select bank1
  8449  1086  1303               	bcf	3,6	;RP1=0, select bank1
  8450  1087  00CF               	movwf	(_S2_val+1)^(0+128)
  8451  1088  1283               	bcf	3,5	;RP0=0, select bank0
  8452  1089  1303               	bcf	3,6	;RP1=0, select bank0
  8453  108A  0845               	movf	?___fldiv,w
  8454  108B  1683               	bsf	3,5	;RP0=1, select bank1
  8455  108C  1303               	bcf	3,6	;RP1=0, select bank1
  8456  108D  00CE               	movwf	_S2_val^(0+128)
  8457  108E                     l4835:
  8458                           
  8459                           ;pseudocodigo_lab3.c: 178:     while (ADCON0bits.GO != 0) {
  8460  108E  1283               	bcf	3,5	;RP0=0, select bank0
  8461  108F  189F               	btfsc	31,1	;volatile
  8462  1090  2892               	goto	u7981
  8463  1091  2893               	goto	u7980
  8464  1092                     u7981:
  8465  1092  2835               	goto	l4833
  8466  1093                     u7980:
  8467  1093                     l108:
  8468  1093  0008               	return
  8469  1094                     __end_of_ADC_channel2:
  8470                           
  8471                           	psect	text33
  8472  1CB4                     __ptext33:	
  8473 ;; *************** function _ADC_channel1 *****************
  8474 ;; Defined at:
  8475 ;;		line 165 in file "pseudocodigo_lab3.c"
  8476 ;; Parameters:    Size  Location     Type
  8477 ;;		None
  8478 ;; Auto vars:     Size  Location     Type
  8479 ;;		None
  8480 ;; Return value:  Size  Location     Type
  8481 ;;                  1    wreg      void 
  8482 ;; Registers used:
  8483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8484 ;; Tracked objects:
  8485 ;;		On entry : 0/0
  8486 ;;		On exit  : 0/0
  8487 ;;		Unchanged: 0/0
  8488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8489 ;;      Params:         0       0       0       0       0
  8490 ;;      Locals:         0       0       0       0       0
  8491 ;;      Temps:          0       4       0       0       0
  8492 ;;      Totals:         0       4       0       0       0
  8493 ;;Total ram usage:        4 bytes
  8494 ;; Hardware stack levels used:    1
  8495 ;; Hardware stack levels required when called:    3
  8496 ;; This function calls:
  8497 ;;		_ADC_Config
  8498 ;;		___fldiv
  8499 ;;		___flmul
  8500 ;;		___xxtofl
  8501 ;; This function is called by:
  8502 ;;		_main
  8503 ;; This function uses a non-reentrant model
  8504 ;;
  8505                           
  8506                           
  8507                           ;psect for function _ADC_channel1
  8508  1CB4                     _ADC_channel1:
  8509  1CB4                     l4817:	
  8510                           ;incstack = 0
  8511                           ; Regs used in _ADC_channel1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8512                           
  8513                           
  8514                           ;pseudocodigo_lab3.c: 166:     ADC_Config (0);
  8515  1CB4  3000               	movlw	0
  8516  1CB5  160A  158A  25CB  160A  158A  	fcall	_ADC_Config
  8517  1CBA                     l4819:
  8518                           
  8519                           ;pseudocodigo_lab3.c: 167:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8520  1CBA  3003               	movlw	3
  8521  1CBB  1283               	bcf	3,5	;RP0=0, select bank0
  8522  1CBC  1303               	bcf	3,6	;RP1=0, select bank0
  8523  1CBD  00E0               	movwf	??_ADC_channel1+1
  8524  1CBE  3097               	movlw	151
  8525  1CBF  00DF               	movwf	??_ADC_channel1
  8526  1CC0                     u8077:
  8527  1CC0  0BDF               	decfsz	??_ADC_channel1,f
  8528  1CC1  2CC0               	goto	u8077
  8529  1CC2  0BE0               	decfsz	??_ADC_channel1+1,f
  8530  1CC3  2CC0               	goto	u8077
  8531  1CC4                     l4821:
  8532                           
  8533                           ;pseudocodigo_lab3.c: 168:     ADCON0bits.GO = 1;
  8534  1CC4  1283               	bcf	3,5	;RP0=0, select bank0
  8535  1CC5  1303               	bcf	3,6	;RP1=0, select bank0
  8536  1CC6  149F               	bsf	31,1	;volatile
  8537                           
  8538                           ;pseudocodigo_lab3.c: 169:     while (ADCON0bits.GO != 0) {
  8539  1CC7  2D21               	goto	l4825
  8540  1CC8                     l4823:
  8541                           
  8542                           ;pseudocodigo_lab3.c: 170:         S1_val = ((ADRESH * 5.0) / 255);
  8543  1CC8  3043               	movlw	67
  8544  1CC9  00C8               	movwf	___fldiv@a+3
  8545  1CCA  307F               	movlw	127
  8546  1CCB  00C7               	movwf	___fldiv@a+2
  8547  1CCC  3000               	movlw	0
  8548  1CCD  00C6               	movwf	___fldiv@a+1
  8549  1CCE  3000               	movlw	0
  8550  1CCF  00C5               	movwf	___fldiv@a
  8551  1CD0  3040               	movlw	64
  8552  1CD1  00AE               	movwf	___flmul@b+3
  8553  1CD2  30A0               	movlw	160
  8554  1CD3  00AD               	movwf	___flmul@b+2
  8555  1CD4  3000               	movlw	0
  8556  1CD5  00AC               	movwf	___flmul@b+1
  8557  1CD6  3000               	movlw	0
  8558  1CD7  00AB               	movwf	___flmul@b
  8559  1CD8  081E               	movf	30,w	;volatile
  8560  1CD9  00DF               	movwf	??_ADC_channel1
  8561  1CDA  01E0               	clrf	??_ADC_channel1+1
  8562  1CDB  01E1               	clrf	??_ADC_channel1+2
  8563  1CDC  01E2               	clrf	??_ADC_channel1+3
  8564  1CDD  0862               	movf	??_ADC_channel1+3,w
  8565  1CDE  00F6               	movwf	___xxtofl@val+3
  8566  1CDF  0861               	movf	??_ADC_channel1+2,w
  8567  1CE0  00F5               	movwf	___xxtofl@val+2
  8568  1CE1  0860               	movf	??_ADC_channel1+1,w
  8569  1CE2  00F4               	movwf	___xxtofl@val+1
  8570  1CE3  085F               	movf	??_ADC_channel1,w
  8571  1CE4  00F3               	movwf	___xxtofl@val
  8572  1CE5  3001               	movlw	1
  8573  1CE6  160A  158A  2687  160A  158A  	fcall	___xxtofl
  8574  1CEB  0876               	movf	?___xxtofl+3,w
  8575  1CEC  1283               	bcf	3,5	;RP0=0, select bank0
  8576  1CED  1303               	bcf	3,6	;RP1=0, select bank0
  8577  1CEE  00B2               	movwf	___flmul@a+3
  8578  1CEF  0875               	movf	?___xxtofl+2,w
  8579  1CF0  00B1               	movwf	___flmul@a+2
  8580  1CF1  0874               	movf	?___xxtofl+1,w
  8581  1CF2  00B0               	movwf	___flmul@a+1
  8582  1CF3  0873               	movf	?___xxtofl,w
  8583  1CF4  00AF               	movwf	___flmul@a
  8584  1CF5  120A  158A  213C  160A  158A  	fcall	___flmul
  8585  1CFA  1283               	bcf	3,5	;RP0=0, select bank0
  8586  1CFB  1303               	bcf	3,6	;RP1=0, select bank0
  8587  1CFC  082E               	movf	?___flmul+3,w
  8588  1CFD  00CC               	movwf	___fldiv@b+3
  8589  1CFE  082D               	movf	?___flmul+2,w
  8590  1CFF  00CB               	movwf	___fldiv@b+2
  8591  1D00  082C               	movf	?___flmul+1,w
  8592  1D01  00CA               	movwf	___fldiv@b+1
  8593  1D02  082B               	movf	?___flmul,w
  8594  1D03  00C9               	movwf	___fldiv@b
  8595  1D04  160A  118A  2094  160A  158A  	fcall	___fldiv
  8596  1D09  1283               	bcf	3,5	;RP0=0, select bank0
  8597  1D0A  1303               	bcf	3,6	;RP1=0, select bank0
  8598  1D0B  0848               	movf	?___fldiv+3,w
  8599  1D0C  1683               	bsf	3,5	;RP0=1, select bank1
  8600  1D0D  1303               	bcf	3,6	;RP1=0, select bank1
  8601  1D0E  00D5               	movwf	(_S1_val+3)^(0+128)
  8602  1D0F  1283               	bcf	3,5	;RP0=0, select bank0
  8603  1D10  1303               	bcf	3,6	;RP1=0, select bank0
  8604  1D11  0847               	movf	?___fldiv+2,w
  8605  1D12  1683               	bsf	3,5	;RP0=1, select bank1
  8606  1D13  1303               	bcf	3,6	;RP1=0, select bank1
  8607  1D14  00D4               	movwf	(_S1_val+2)^(0+128)
  8608  1D15  1283               	bcf	3,5	;RP0=0, select bank0
  8609  1D16  1303               	bcf	3,6	;RP1=0, select bank0
  8610  1D17  0846               	movf	?___fldiv+1,w
  8611  1D18  1683               	bsf	3,5	;RP0=1, select bank1
  8612  1D19  1303               	bcf	3,6	;RP1=0, select bank1
  8613  1D1A  00D3               	movwf	(_S1_val+1)^(0+128)
  8614  1D1B  1283               	bcf	3,5	;RP0=0, select bank0
  8615  1D1C  1303               	bcf	3,6	;RP1=0, select bank0
  8616  1D1D  0845               	movf	?___fldiv,w
  8617  1D1E  1683               	bsf	3,5	;RP0=1, select bank1
  8618  1D1F  1303               	bcf	3,6	;RP1=0, select bank1
  8619  1D20  00D2               	movwf	_S1_val^(0+128)
  8620  1D21                     l4825:
  8621                           
  8622                           ;pseudocodigo_lab3.c: 169:     while (ADCON0bits.GO != 0) {
  8623  1D21  1283               	bcf	3,5	;RP0=0, select bank0
  8624  1D22  189F               	btfsc	31,1	;volatile
  8625  1D23  2D25               	goto	u7971
  8626  1D24  2D26               	goto	u7970
  8627  1D25                     u7971:
  8628  1D25  2CC8               	goto	l4823
  8629  1D26                     u7970:
  8630  1D26                     l102:
  8631  1D26  0008               	return
  8632  1D27                     __end_of_ADC_channel1:
  8633                           
  8634                           	psect	text34
  8635  1E87                     __ptext34:	
  8636 ;; *************** function ___xxtofl *****************
  8637 ;; Defined at:
  8638 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8639 ;; Parameters:    Size  Location     Type
  8640 ;;  sign            1    wreg     unsigned char 
  8641 ;;  val             4    3[COMMON] long 
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;  sign            1    4[BANK0 ] unsigned char 
  8644 ;;  arg             4    6[BANK0 ] unsigned long 
  8645 ;;  exp             1    5[BANK0 ] unsigned char 
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  4    3[COMMON] unsigned char 
  8648 ;; Registers used:
  8649 ;;		wreg, status,2, status,0
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8655 ;;      Params:         4       0       0       0       0
  8656 ;;      Locals:         0       6       0       0       0
  8657 ;;      Temps:          0       4       0       0       0
  8658 ;;      Totals:         4      10       0       0       0
  8659 ;;Total ram usage:       14 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; Hardware stack levels required when called:    1
  8662 ;; This function calls:
  8663 ;;		Nothing
  8664 ;; This function is called by:
  8665 ;;		_ADC_channel1
  8666 ;;		_ADC_channel2
  8667 ;;		_sprintf
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           
  8672                           ;psect for function ___xxtofl
  8673  1E87                     ___xxtofl:
  8674                           
  8675                           ;incstack = 0
  8676                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8677                           ;___xxtofl@sign stored from wreg
  8678  1E87  1283               	bcf	3,5	;RP0=0, select bank0
  8679  1E88  1303               	bcf	3,6	;RP1=0, select bank0
  8680  1E89  00A4               	movwf	___xxtofl@sign
  8681  1E8A                     l4465:
  8682  1E8A  0824               	movf	___xxtofl@sign,w
  8683  1E8B  1903               	btfsc	3,2
  8684  1E8C  2E8E               	goto	u7311
  8685  1E8D  2E8F               	goto	u7310
  8686  1E8E                     u7311:
  8687  1E8E  2EA3               	goto	l4471
  8688  1E8F                     u7310:
  8689  1E8F                     l4467:
  8690  1E8F  1FF6               	btfss	___xxtofl@val+3,7
  8691  1E90  2E92               	goto	u7321
  8692  1E91  2E93               	goto	u7320
  8693  1E92                     u7321:
  8694  1E92  2EA3               	goto	l4471
  8695  1E93                     u7320:
  8696  1E93                     l4469:
  8697  1E93  0973               	comf	___xxtofl@val,w
  8698  1E94  00A6               	movwf	___xxtofl@arg
  8699  1E95  0974               	comf	___xxtofl@val+1,w
  8700  1E96  00A7               	movwf	___xxtofl@arg+1
  8701  1E97  0975               	comf	___xxtofl@val+2,w
  8702  1E98  00A8               	movwf	___xxtofl@arg+2
  8703  1E99  0976               	comf	___xxtofl@val+3,w
  8704  1E9A  00A9               	movwf	___xxtofl@arg+3
  8705  1E9B  0AA6               	incf	___xxtofl@arg,f
  8706  1E9C  1903               	skipnz
  8707  1E9D  0AA7               	incf	___xxtofl@arg+1,f
  8708  1E9E  1903               	skipnz
  8709  1E9F  0AA8               	incf	___xxtofl@arg+2,f
  8710  1EA0  1903               	skipnz
  8711  1EA1  0AA9               	incf	___xxtofl@arg+3,f
  8712  1EA2  2EAB               	goto	l907
  8713  1EA3                     l4471:
  8714  1EA3  0876               	movf	___xxtofl@val+3,w
  8715  1EA4  00A9               	movwf	___xxtofl@arg+3
  8716  1EA5  0875               	movf	___xxtofl@val+2,w
  8717  1EA6  00A8               	movwf	___xxtofl@arg+2
  8718  1EA7  0874               	movf	___xxtofl@val+1,w
  8719  1EA8  00A7               	movwf	___xxtofl@arg+1
  8720  1EA9  0873               	movf	___xxtofl@val,w
  8721  1EAA  00A6               	movwf	___xxtofl@arg
  8722  1EAB                     l907:
  8723  1EAB  0876               	movf	___xxtofl@val+3,w
  8724  1EAC  0475               	iorwf	___xxtofl@val+2,w
  8725  1EAD  0474               	iorwf	___xxtofl@val+1,w
  8726  1EAE  0473               	iorwf	___xxtofl@val,w
  8727  1EAF  1D03               	skipz
  8728  1EB0  2EB2               	goto	u7331
  8729  1EB1  2EB3               	goto	u7330
  8730  1EB2                     u7331:
  8731  1EB2  2EBC               	goto	l4477
  8732  1EB3                     u7330:
  8733  1EB3                     l4473:
  8734  1EB3  3000               	movlw	0
  8735  1EB4  00F6               	movwf	?___xxtofl+3
  8736  1EB5  3000               	movlw	0
  8737  1EB6  00F5               	movwf	?___xxtofl+2
  8738  1EB7  3000               	movlw	0
  8739  1EB8  00F4               	movwf	?___xxtofl+1
  8740  1EB9  3000               	movlw	0
  8741  1EBA  00F3               	movwf	?___xxtofl
  8742  1EBB  2F42               	goto	l909
  8743  1EBC                     l4477:
  8744  1EBC  3096               	movlw	150
  8745  1EBD  00A0               	movwf	??___xxtofl
  8746  1EBE  0820               	movf	??___xxtofl,w
  8747  1EBF  00A5               	movwf	___xxtofl@exp
  8748  1EC0  2ECE               	goto	l4481
  8749  1EC1                     l4479:
  8750  1EC1  3001               	movlw	1
  8751  1EC2  00A0               	movwf	??___xxtofl
  8752  1EC3  0820               	movf	??___xxtofl,w
  8753  1EC4  07A5               	addwf	___xxtofl@exp,f
  8754  1EC5  3001               	movlw	1
  8755  1EC6                     u7345:
  8756  1EC6  1003               	clrc
  8757  1EC7  0CA9               	rrf	___xxtofl@arg+3,f
  8758  1EC8  0CA8               	rrf	___xxtofl@arg+2,f
  8759  1EC9  0CA7               	rrf	___xxtofl@arg+1,f
  8760  1ECA  0CA6               	rrf	___xxtofl@arg,f
  8761  1ECB  3EFF               	addlw	-1
  8762  1ECC  1D03               	skipz
  8763  1ECD  2EC6               	goto	u7345
  8764  1ECE                     l4481:
  8765  1ECE  30FE               	movlw	254
  8766  1ECF  0529               	andwf	___xxtofl@arg+3,w
  8767  1ED0  1D03               	btfss	3,2
  8768  1ED1  2ED3               	goto	u7351
  8769  1ED2  2ED4               	goto	u7350
  8770  1ED3                     u7351:
  8771  1ED3  2EC1               	goto	l4479
  8772  1ED4                     u7350:
  8773  1ED4  2EF0               	goto	l913
  8774  1ED5                     l4483:
  8775  1ED5  3001               	movlw	1
  8776  1ED6  00A0               	movwf	??___xxtofl
  8777  1ED7  0820               	movf	??___xxtofl,w
  8778  1ED8  07A5               	addwf	___xxtofl@exp,f
  8779  1ED9                     l4485:
  8780  1ED9  3001               	movlw	1
  8781  1EDA  07A6               	addwf	___xxtofl@arg,f
  8782  1EDB  3000               	movlw	0
  8783  1EDC  1803               	skipnc
  8784  1EDD  3001               	movlw	1
  8785  1EDE  07A7               	addwf	___xxtofl@arg+1,f
  8786  1EDF  3000               	movlw	0
  8787  1EE0  1803               	skipnc
  8788  1EE1  3001               	movlw	1
  8789  1EE2  07A8               	addwf	___xxtofl@arg+2,f
  8790  1EE3  3000               	movlw	0
  8791  1EE4  1803               	skipnc
  8792  1EE5  3001               	movlw	1
  8793  1EE6  07A9               	addwf	___xxtofl@arg+3,f
  8794  1EE7                     l4487:
  8795  1EE7  3001               	movlw	1
  8796  1EE8                     u7365:
  8797  1EE8  1003               	clrc
  8798  1EE9  0CA9               	rrf	___xxtofl@arg+3,f
  8799  1EEA  0CA8               	rrf	___xxtofl@arg+2,f
  8800  1EEB  0CA7               	rrf	___xxtofl@arg+1,f
  8801  1EEC  0CA6               	rrf	___xxtofl@arg,f
  8802  1EED  3EFF               	addlw	-1
  8803  1EEE  1D03               	skipz
  8804  1EEF  2EE8               	goto	u7365
  8805  1EF0                     l913:
  8806  1EF0  30FF               	movlw	255
  8807  1EF1  0529               	andwf	___xxtofl@arg+3,w
  8808  1EF2  1D03               	btfss	3,2
  8809  1EF3  2EF5               	goto	u7371
  8810  1EF4  2EF6               	goto	u7370
  8811  1EF5                     u7371:
  8812  1EF5  2ED5               	goto	l4483
  8813  1EF6                     u7370:
  8814  1EF6  2F02               	goto	l4491
  8815  1EF7                     l4489:
  8816  1EF7  3001               	movlw	1
  8817  1EF8  02A5               	subwf	___xxtofl@exp,f
  8818  1EF9  3001               	movlw	1
  8819  1EFA  00A0               	movwf	??___xxtofl
  8820  1EFB                     u7385:
  8821  1EFB  1003               	clrc
  8822  1EFC  0DA6               	rlf	___xxtofl@arg,f
  8823  1EFD  0DA7               	rlf	___xxtofl@arg+1,f
  8824  1EFE  0DA8               	rlf	___xxtofl@arg+2,f
  8825  1EFF  0DA9               	rlf	___xxtofl@arg+3,f
  8826  1F00  0BA0               	decfsz	??___xxtofl,f
  8827  1F01  2EFB               	goto	u7385
  8828  1F02                     l4491:
  8829  1F02  1BA8               	btfsc	___xxtofl@arg+2,7
  8830  1F03  2F05               	goto	u7391
  8831  1F04  2F06               	goto	u7390
  8832  1F05                     u7391:
  8833  1F05  2F0C               	goto	l920
  8834  1F06                     u7390:
  8835  1F06                     l4493:
  8836  1F06  3002               	movlw	2
  8837  1F07  0225               	subwf	___xxtofl@exp,w
  8838  1F08  1803               	skipnc
  8839  1F09  2F0B               	goto	u7401
  8840  1F0A  2F0C               	goto	u7400
  8841  1F0B                     u7401:
  8842  1F0B  2EF7               	goto	l4489
  8843  1F0C                     u7400:
  8844  1F0C                     l920:
  8845  1F0C  1825               	btfsc	___xxtofl@exp,0
  8846  1F0D  2F0F               	goto	u7411
  8847  1F0E  2F10               	goto	u7410
  8848  1F0F                     u7411:
  8849  1F0F  2F18               	goto	l921
  8850  1F10                     u7410:
  8851  1F10                     l4495:
  8852  1F10  30FF               	movlw	255
  8853  1F11  05A6               	andwf	___xxtofl@arg,f
  8854  1F12  30FF               	movlw	255
  8855  1F13  05A7               	andwf	___xxtofl@arg+1,f
  8856  1F14  307F               	movlw	127
  8857  1F15  05A8               	andwf	___xxtofl@arg+2,f
  8858  1F16  30FF               	movlw	255
  8859  1F17  05A9               	andwf	___xxtofl@arg+3,f
  8860  1F18                     l921:
  8861  1F18  1003               	clrc
  8862  1F19  0CA5               	rrf	___xxtofl@exp,f
  8863  1F1A                     l4497:
  8864  1F1A  0825               	movf	___xxtofl@exp,w
  8865  1F1B  00A0               	movwf	??___xxtofl
  8866  1F1C  01A1               	clrf	??___xxtofl+1
  8867  1F1D  01A2               	clrf	??___xxtofl+2
  8868  1F1E  01A3               	clrf	??___xxtofl+3
  8869  1F1F  3018               	movlw	24
  8870  1F20                     u7425:
  8871  1F20  1003               	clrc
  8872  1F21  0DA0               	rlf	??___xxtofl,f
  8873  1F22  0DA1               	rlf	??___xxtofl+1,f
  8874  1F23  0DA2               	rlf	??___xxtofl+2,f
  8875  1F24  0DA3               	rlf	??___xxtofl+3,f
  8876  1F25                     u7420:
  8877  1F25  3EFF               	addlw	-1
  8878  1F26  1D03               	skipz
  8879  1F27  2F20               	goto	u7425
  8880  1F28  0820               	movf	??___xxtofl,w
  8881  1F29  04A6               	iorwf	___xxtofl@arg,f
  8882  1F2A  0821               	movf	??___xxtofl+1,w
  8883  1F2B  04A7               	iorwf	___xxtofl@arg+1,f
  8884  1F2C  0822               	movf	??___xxtofl+2,w
  8885  1F2D  04A8               	iorwf	___xxtofl@arg+2,f
  8886  1F2E  0823               	movf	??___xxtofl+3,w
  8887  1F2F  04A9               	iorwf	___xxtofl@arg+3,f
  8888  1F30                     l4499:
  8889  1F30  0824               	movf	___xxtofl@sign,w
  8890  1F31  1903               	btfsc	3,2
  8891  1F32  2F34               	goto	u7431
  8892  1F33  2F35               	goto	u7430
  8893  1F34                     u7431:
  8894  1F34  2F3A               	goto	l4505
  8895  1F35                     u7430:
  8896  1F35                     l4501:
  8897  1F35  1FF6               	btfss	___xxtofl@val+3,7
  8898  1F36  2F38               	goto	u7441
  8899  1F37  2F39               	goto	u7440
  8900  1F38                     u7441:
  8901  1F38  2F3A               	goto	l4505
  8902  1F39                     u7440:
  8903  1F39                     l4503:
  8904  1F39  17A9               	bsf	___xxtofl@arg+3,7
  8905  1F3A                     l4505:
  8906  1F3A  0829               	movf	___xxtofl@arg+3,w
  8907  1F3B  00F6               	movwf	?___xxtofl+3
  8908  1F3C  0828               	movf	___xxtofl@arg+2,w
  8909  1F3D  00F5               	movwf	?___xxtofl+2
  8910  1F3E  0827               	movf	___xxtofl@arg+1,w
  8911  1F3F  00F4               	movwf	?___xxtofl+1
  8912  1F40  0826               	movf	___xxtofl@arg,w
  8913  1F41  00F3               	movwf	?___xxtofl
  8914  1F42                     l909:
  8915  1F42  0008               	return
  8916  1F43                     __end_of___xxtofl:
  8917                           
  8918                           	psect	text35
  8919  093C                     __ptext35:	
  8920 ;; *************** function ___flmul *****************
  8921 ;; Defined at:
  8922 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  8923 ;; Parameters:    Size  Location     Type
  8924 ;;  b               4   11[BANK0 ] unsigned char 
  8925 ;;  a               4   15[BANK0 ] unsigned char 
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;  prod            4   31[BANK0 ] struct .
  8928 ;;  grs             4   25[BANK0 ] unsigned long 
  8929 ;;  temp            2   35[BANK0 ] struct .
  8930 ;;  bexp            1   30[BANK0 ] unsigned char 
  8931 ;;  aexp            1   29[BANK0 ] unsigned char 
  8932 ;;  sign            1   24[BANK0 ] unsigned char 
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  4   11[BANK0 ] unsigned char 
  8935 ;; Registers used:
  8936 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8942 ;;      Params:         0       8       0       0       0
  8943 ;;      Locals:         0      13       0       0       0
  8944 ;;      Temps:          0       5       0       0       0
  8945 ;;      Totals:         0      26       0       0       0
  8946 ;;Total ram usage:       26 bytes
  8947 ;; Hardware stack levels used:    1
  8948 ;; Hardware stack levels required when called:    2
  8949 ;; This function calls:
  8950 ;;		__Umul8_16
  8951 ;; This function is called by:
  8952 ;;		_ADC_channel1
  8953 ;;		_ADC_channel2
  8954 ;;		_fround
  8955 ;;		_scale
  8956 ;;		_sprintf
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960                           
  8961                           ;psect for function ___flmul
  8962  093C                     ___flmul:
  8963  093C                     l2891:	
  8964                           ;incstack = 0
  8965                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8966                           
  8967  093C  1283               	bcf	3,5	;RP0=0, select bank0
  8968  093D  1303               	bcf	3,6	;RP1=0, select bank0
  8969  093E  082E               	movf	___flmul@b+3,w
  8970  093F  3980               	andlw	128
  8971  0940  00B3               	movwf	??___flmul
  8972  0941  0833               	movf	??___flmul,w
  8973  0942  00B8               	movwf	___flmul@sign
  8974  0943                     l2893:
  8975  0943  082E               	movf	___flmul@b+3,w
  8976  0944  00B3               	movwf	??___flmul
  8977  0945  0733               	addwf	??___flmul,w
  8978  0946  00B4               	movwf	??___flmul+1
  8979  0947  0834               	movf	??___flmul+1,w
  8980  0948  00BE               	movwf	___flmul@bexp
  8981  0949                     l2895:
  8982  0949  1FAD               	btfss	___flmul@b+2,7
  8983  094A  294C               	goto	u3951
  8984  094B  294D               	goto	u3950
  8985  094C                     u3951:
  8986  094C  294E               	goto	l2899
  8987  094D                     u3950:
  8988  094D                     l2897:
  8989  094D  143E               	bsf	___flmul@bexp,0
  8990  094E                     l2899:
  8991  094E  083E               	movf	___flmul@bexp,w
  8992  094F  1903               	btfsc	3,2
  8993  0950  2952               	goto	u3961
  8994  0951  2953               	goto	u3960
  8995  0952                     u3961:
  8996  0952  2962               	goto	l2907
  8997  0953                     u3960:
  8998  0953                     l2901:
  8999  0953  0A3E               	incf	___flmul@bexp,w
  9000  0954  1D03               	btfss	3,2
  9001  0955  2957               	goto	u3971
  9002  0956  2958               	goto	u3970
  9003  0957                     u3971:
  9004  0957  2960               	goto	l2905
  9005  0958                     u3970:
  9006  0958                     l2903:
  9007  0958  3000               	movlw	0
  9008  0959  00AE               	movwf	___flmul@b+3
  9009  095A  3000               	movlw	0
  9010  095B  00AD               	movwf	___flmul@b+2
  9011  095C  3000               	movlw	0
  9012  095D  00AC               	movwf	___flmul@b+1
  9013  095E  3000               	movlw	0
  9014  095F  00AB               	movwf	___flmul@b
  9015  0960                     l2905:
  9016  0960  17AD               	bsf	___flmul@b+2,7
  9017  0961  296A               	goto	l2909
  9018  0962                     l2907:
  9019  0962  3000               	movlw	0
  9020  0963  00AE               	movwf	___flmul@b+3
  9021  0964  3000               	movlw	0
  9022  0965  00AD               	movwf	___flmul@b+2
  9023  0966  3000               	movlw	0
  9024  0967  00AC               	movwf	___flmul@b+1
  9025  0968  3000               	movlw	0
  9026  0969  00AB               	movwf	___flmul@b
  9027  096A                     l2909:
  9028  096A  0832               	movf	___flmul@a+3,w
  9029  096B  3980               	andlw	128
  9030  096C  00B3               	movwf	??___flmul
  9031  096D  0833               	movf	??___flmul,w
  9032  096E  06B8               	xorwf	___flmul@sign,f
  9033  096F                     l2911:
  9034  096F  0832               	movf	___flmul@a+3,w
  9035  0970  00B3               	movwf	??___flmul
  9036  0971  0733               	addwf	??___flmul,w
  9037  0972  00B4               	movwf	??___flmul+1
  9038  0973  0834               	movf	??___flmul+1,w
  9039  0974  00BD               	movwf	___flmul@aexp
  9040  0975                     l2913:
  9041  0975  1FB1               	btfss	___flmul@a+2,7
  9042  0976  2978               	goto	u3981
  9043  0977  2979               	goto	u3980
  9044  0978                     u3981:
  9045  0978  297A               	goto	l2917
  9046  0979                     u3980:
  9047  0979                     l2915:
  9048  0979  143D               	bsf	___flmul@aexp,0
  9049  097A                     l2917:
  9050  097A  083D               	movf	___flmul@aexp,w
  9051  097B  1903               	btfsc	3,2
  9052  097C  297E               	goto	u3991
  9053  097D  297F               	goto	u3990
  9054  097E                     u3991:
  9055  097E  298E               	goto	l2925
  9056  097F                     u3990:
  9057  097F                     l2919:
  9058  097F  0A3D               	incf	___flmul@aexp,w
  9059  0980  1D03               	btfss	3,2
  9060  0981  2983               	goto	u4001
  9061  0982  2984               	goto	u4000
  9062  0983                     u4001:
  9063  0983  298C               	goto	l2923
  9064  0984                     u4000:
  9065  0984                     l2921:
  9066  0984  3000               	movlw	0
  9067  0985  00B2               	movwf	___flmul@a+3
  9068  0986  3000               	movlw	0
  9069  0987  00B1               	movwf	___flmul@a+2
  9070  0988  3000               	movlw	0
  9071  0989  00B0               	movwf	___flmul@a+1
  9072  098A  3000               	movlw	0
  9073  098B  00AF               	movwf	___flmul@a
  9074  098C                     l2923:
  9075  098C  17B1               	bsf	___flmul@a+2,7
  9076  098D  2996               	goto	l2927
  9077  098E                     l2925:
  9078  098E  3000               	movlw	0
  9079  098F  00B2               	movwf	___flmul@a+3
  9080  0990  3000               	movlw	0
  9081  0991  00B1               	movwf	___flmul@a+2
  9082  0992  3000               	movlw	0
  9083  0993  00B0               	movwf	___flmul@a+1
  9084  0994  3000               	movlw	0
  9085  0995  00AF               	movwf	___flmul@a
  9086  0996                     l2927:
  9087  0996  083D               	movf	___flmul@aexp,w
  9088  0997  1903               	btfsc	3,2
  9089  0998  299A               	goto	u4011
  9090  0999  299B               	goto	u4010
  9091  099A                     u4011:
  9092  099A  29A0               	goto	l2931
  9093  099B                     u4010:
  9094  099B                     l2929:
  9095  099B  083E               	movf	___flmul@bexp,w
  9096  099C  1D03               	btfss	3,2
  9097  099D  299F               	goto	u4021
  9098  099E  29A0               	goto	u4020
  9099  099F                     u4021:
  9100  099F  29A9               	goto	l2935
  9101  09A0                     u4020:
  9102  09A0                     l2931:
  9103  09A0  3000               	movlw	0
  9104  09A1  00AE               	movwf	?___flmul+3
  9105  09A2  3000               	movlw	0
  9106  09A3  00AD               	movwf	?___flmul+2
  9107  09A4  3000               	movlw	0
  9108  09A5  00AC               	movwf	?___flmul+1
  9109  09A6  3000               	movlw	0
  9110  09A7  00AB               	movwf	?___flmul
  9111  09A8  2C9C               	goto	l863
  9112  09A9                     l2935:
  9113  09A9  082B               	movf	___flmul@b,w
  9114  09AA  00B3               	movwf	??___flmul
  9115  09AB  0833               	movf	??___flmul,w
  9116  09AC  00F3               	movwf	__Umul8_16@multiplicand
  9117  09AD  0831               	movf	___flmul@a+2,w
  9118  09AE  120A  118A  2032  120A  158A  	fcall	__Umul8_16
  9119  09B3  0874               	movf	?__Umul8_16+1,w
  9120  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  9121  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  9122  09B6  00C4               	movwf	___flmul@temp+1
  9123  09B7  0873               	movf	?__Umul8_16,w
  9124  09B8  00C3               	movwf	___flmul@temp
  9125  09B9                     l2937:
  9126  09B9  0843               	movf	___flmul@temp,w
  9127  09BA  00B3               	movwf	??___flmul
  9128  09BB  01B4               	clrf	??___flmul+1
  9129  09BC  01B5               	clrf	??___flmul+2
  9130  09BD  01B6               	clrf	??___flmul+3
  9131  09BE  0836               	movf	??___flmul+3,w
  9132  09BF  00BC               	movwf	___flmul@grs+3
  9133  09C0  0835               	movf	??___flmul+2,w
  9134  09C1  00BB               	movwf	___flmul@grs+2
  9135  09C2  0834               	movf	??___flmul+1,w
  9136  09C3  00BA               	movwf	___flmul@grs+1
  9137  09C4  0833               	movf	??___flmul,w
  9138  09C5  00B9               	movwf	___flmul@grs
  9139  09C6                     l2939:
  9140  09C6  0844               	movf	___flmul@temp+1,w
  9141  09C7  00B3               	movwf	??___flmul
  9142  09C8  01B4               	clrf	??___flmul+1
  9143  09C9  01B5               	clrf	??___flmul+2
  9144  09CA  01B6               	clrf	??___flmul+3
  9145  09CB  0836               	movf	??___flmul+3,w
  9146  09CC  00C2               	movwf	___flmul@prod+3
  9147  09CD  0835               	movf	??___flmul+2,w
  9148  09CE  00C1               	movwf	___flmul@prod+2
  9149  09CF  0834               	movf	??___flmul+1,w
  9150  09D0  00C0               	movwf	___flmul@prod+1
  9151  09D1  0833               	movf	??___flmul,w
  9152  09D2  00BF               	movwf	___flmul@prod
  9153  09D3  082C               	movf	___flmul@b+1,w
  9154  09D4  00B3               	movwf	??___flmul
  9155  09D5  0833               	movf	??___flmul,w
  9156  09D6  00F3               	movwf	__Umul8_16@multiplicand
  9157  09D7  0830               	movf	___flmul@a+1,w
  9158  09D8  120A  118A  2032  120A  158A  	fcall	__Umul8_16
  9159  09DD  0874               	movf	?__Umul8_16+1,w
  9160  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  9161  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  9162  09E0  00C4               	movwf	___flmul@temp+1
  9163  09E1  0873               	movf	?__Umul8_16,w
  9164  09E2  00C3               	movwf	___flmul@temp
  9165  09E3                     l2941:
  9166  09E3  0843               	movf	___flmul@temp,w
  9167  09E4  00B3               	movwf	??___flmul
  9168  09E5  01B4               	clrf	??___flmul+1
  9169  09E6  01B5               	clrf	??___flmul+2
  9170  09E7  01B6               	clrf	??___flmul+3
  9171  09E8  0833               	movf	??___flmul,w
  9172  09E9  07B9               	addwf	___flmul@grs,f
  9173  09EA  0834               	movf	??___flmul+1,w
  9174  09EB  1103               	clrz
  9175  09EC  1803               	skipnc
  9176  09ED  3E01               	addlw	1
  9177  09EE  1903               	skipnz
  9178  09EF  29F1               	goto	u4031
  9179  09F0  07BA               	addwf	___flmul@grs+1,f
  9180  09F1                     u4031:
  9181  09F1  0835               	movf	??___flmul+2,w
  9182  09F2  1103               	clrz
  9183  09F3  1803               	skipnc
  9184  09F4  3E01               	addlw	1
  9185  09F5  1903               	skipnz
  9186  09F6  29F8               	goto	u4032
  9187  09F7  07BB               	addwf	___flmul@grs+2,f
  9188  09F8                     u4032:
  9189  09F8  0836               	movf	??___flmul+3,w
  9190  09F9  1103               	clrz
  9191  09FA  1803               	skipnc
  9192  09FB  3E01               	addlw	1
  9193  09FC  1903               	skipnz
  9194  09FD  29FF               	goto	u4033
  9195  09FE  07BC               	addwf	___flmul@grs+3,f
  9196  09FF                     u4033:
  9197  09FF                     l2943:
  9198  09FF  0844               	movf	___flmul@temp+1,w
  9199  0A00  00B3               	movwf	??___flmul
  9200  0A01  01B4               	clrf	??___flmul+1
  9201  0A02  01B5               	clrf	??___flmul+2
  9202  0A03  01B6               	clrf	??___flmul+3
  9203  0A04  0833               	movf	??___flmul,w
  9204  0A05  07BF               	addwf	___flmul@prod,f
  9205  0A06  0834               	movf	??___flmul+1,w
  9206  0A07  1103               	clrz
  9207  0A08  1803               	skipnc
  9208  0A09  3E01               	addlw	1
  9209  0A0A  1903               	skipnz
  9210  0A0B  2A0D               	goto	u4041
  9211  0A0C  07C0               	addwf	___flmul@prod+1,f
  9212  0A0D                     u4041:
  9213  0A0D  0835               	movf	??___flmul+2,w
  9214  0A0E  1103               	clrz
  9215  0A0F  1803               	skipnc
  9216  0A10  3E01               	addlw	1
  9217  0A11  1903               	skipnz
  9218  0A12  2A14               	goto	u4042
  9219  0A13  07C1               	addwf	___flmul@prod+2,f
  9220  0A14                     u4042:
  9221  0A14  0836               	movf	??___flmul+3,w
  9222  0A15  1103               	clrz
  9223  0A16  1803               	skipnc
  9224  0A17  3E01               	addlw	1
  9225  0A18  1903               	skipnz
  9226  0A19  2A1B               	goto	u4043
  9227  0A1A  07C2               	addwf	___flmul@prod+3,f
  9228  0A1B                     u4043:
  9229  0A1B  082D               	movf	___flmul@b+2,w
  9230  0A1C  00B3               	movwf	??___flmul
  9231  0A1D  0833               	movf	??___flmul,w
  9232  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  9233  0A1F  082F               	movf	___flmul@a,w
  9234  0A20  120A  118A  2032  120A  158A  	fcall	__Umul8_16
  9235  0A25  0874               	movf	?__Umul8_16+1,w
  9236  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  9237  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  9238  0A28  00C4               	movwf	___flmul@temp+1
  9239  0A29  0873               	movf	?__Umul8_16,w
  9240  0A2A  00C3               	movwf	___flmul@temp
  9241  0A2B                     l2945:
  9242  0A2B  0843               	movf	___flmul@temp,w
  9243  0A2C  00B3               	movwf	??___flmul
  9244  0A2D  01B4               	clrf	??___flmul+1
  9245  0A2E  01B5               	clrf	??___flmul+2
  9246  0A2F  01B6               	clrf	??___flmul+3
  9247  0A30  0833               	movf	??___flmul,w
  9248  0A31  07B9               	addwf	___flmul@grs,f
  9249  0A32  0834               	movf	??___flmul+1,w
  9250  0A33  1103               	clrz
  9251  0A34  1803               	skipnc
  9252  0A35  3E01               	addlw	1
  9253  0A36  1903               	skipnz
  9254  0A37  2A39               	goto	u4051
  9255  0A38  07BA               	addwf	___flmul@grs+1,f
  9256  0A39                     u4051:
  9257  0A39  0835               	movf	??___flmul+2,w
  9258  0A3A  1103               	clrz
  9259  0A3B  1803               	skipnc
  9260  0A3C  3E01               	addlw	1
  9261  0A3D  1903               	skipnz
  9262  0A3E  2A40               	goto	u4052
  9263  0A3F  07BB               	addwf	___flmul@grs+2,f
  9264  0A40                     u4052:
  9265  0A40  0836               	movf	??___flmul+3,w
  9266  0A41  1103               	clrz
  9267  0A42  1803               	skipnc
  9268  0A43  3E01               	addlw	1
  9269  0A44  1903               	skipnz
  9270  0A45  2A47               	goto	u4053
  9271  0A46  07BC               	addwf	___flmul@grs+3,f
  9272  0A47                     u4053:
  9273  0A47                     l2947:
  9274  0A47  0844               	movf	___flmul@temp+1,w
  9275  0A48  00B3               	movwf	??___flmul
  9276  0A49  01B4               	clrf	??___flmul+1
  9277  0A4A  01B5               	clrf	??___flmul+2
  9278  0A4B  01B6               	clrf	??___flmul+3
  9279  0A4C  0833               	movf	??___flmul,w
  9280  0A4D  07BF               	addwf	___flmul@prod,f
  9281  0A4E  0834               	movf	??___flmul+1,w
  9282  0A4F  1103               	clrz
  9283  0A50  1803               	skipnc
  9284  0A51  3E01               	addlw	1
  9285  0A52  1903               	skipnz
  9286  0A53  2A55               	goto	u4061
  9287  0A54  07C0               	addwf	___flmul@prod+1,f
  9288  0A55                     u4061:
  9289  0A55  0835               	movf	??___flmul+2,w
  9290  0A56  1103               	clrz
  9291  0A57  1803               	skipnc
  9292  0A58  3E01               	addlw	1
  9293  0A59  1903               	skipnz
  9294  0A5A  2A5C               	goto	u4062
  9295  0A5B  07C1               	addwf	___flmul@prod+2,f
  9296  0A5C                     u4062:
  9297  0A5C  0836               	movf	??___flmul+3,w
  9298  0A5D  1103               	clrz
  9299  0A5E  1803               	skipnc
  9300  0A5F  3E01               	addlw	1
  9301  0A60  1903               	skipnz
  9302  0A61  2A63               	goto	u4063
  9303  0A62  07C2               	addwf	___flmul@prod+3,f
  9304  0A63                     u4063:
  9305  0A63                     l2949:
  9306  0A63  3008               	movlw	8
  9307  0A64  00B3               	movwf	??___flmul
  9308  0A65                     u4075:
  9309  0A65  1003               	clrc
  9310  0A66  0DB9               	rlf	___flmul@grs,f
  9311  0A67  0DBA               	rlf	___flmul@grs+1,f
  9312  0A68  0DBB               	rlf	___flmul@grs+2,f
  9313  0A69  0DBC               	rlf	___flmul@grs+3,f
  9314  0A6A  0BB3               	decfsz	??___flmul,f
  9315  0A6B  2A65               	goto	u4075
  9316  0A6C                     l2951:
  9317  0A6C  082C               	movf	___flmul@b+1,w
  9318  0A6D  00B3               	movwf	??___flmul
  9319  0A6E  0833               	movf	??___flmul,w
  9320  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  9321  0A70  082F               	movf	___flmul@a,w
  9322  0A71  120A  118A  2032  120A  158A  	fcall	__Umul8_16
  9323  0A76  0874               	movf	?__Umul8_16+1,w
  9324  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  9325  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  9326  0A79  00C4               	movwf	___flmul@temp+1
  9327  0A7A  0873               	movf	?__Umul8_16,w
  9328  0A7B  00C3               	movwf	___flmul@temp
  9329  0A7C                     l2953:
  9330  0A7C  0843               	movf	___flmul@temp,w
  9331  0A7D  00B3               	movwf	??___flmul
  9332  0A7E  0844               	movf	___flmul@temp+1,w
  9333  0A7F  00B4               	movwf	??___flmul+1
  9334  0A80  01B5               	clrf	??___flmul+2
  9335  0A81  01B6               	clrf	??___flmul+3
  9336  0A82  0833               	movf	??___flmul,w
  9337  0A83  07B9               	addwf	___flmul@grs,f
  9338  0A84  0834               	movf	??___flmul+1,w
  9339  0A85  1103               	clrz
  9340  0A86  1803               	skipnc
  9341  0A87  3E01               	addlw	1
  9342  0A88  1903               	skipnz
  9343  0A89  2A8B               	goto	u4081
  9344  0A8A  07BA               	addwf	___flmul@grs+1,f
  9345  0A8B                     u4081:
  9346  0A8B  0835               	movf	??___flmul+2,w
  9347  0A8C  1103               	clrz
  9348  0A8D  1803               	skipnc
  9349  0A8E  3E01               	addlw	1
  9350  0A8F  1903               	skipnz
  9351  0A90  2A92               	goto	u4082
  9352  0A91  07BB               	addwf	___flmul@grs+2,f
  9353  0A92                     u4082:
  9354  0A92  0836               	movf	??___flmul+3,w
  9355  0A93  1103               	clrz
  9356  0A94  1803               	skipnc
  9357  0A95  3E01               	addlw	1
  9358  0A96  1903               	skipnz
  9359  0A97  2A99               	goto	u4083
  9360  0A98  07BC               	addwf	___flmul@grs+3,f
  9361  0A99                     u4083:
  9362  0A99                     l2955:
  9363  0A99  082B               	movf	___flmul@b,w
  9364  0A9A  00B3               	movwf	??___flmul
  9365  0A9B  0833               	movf	??___flmul,w
  9366  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  9367  0A9D  0830               	movf	___flmul@a+1,w
  9368  0A9E  120A  118A  2032  120A  158A  	fcall	__Umul8_16
  9369  0AA3  0874               	movf	?__Umul8_16+1,w
  9370  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  9371  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  9372  0AA6  00C4               	movwf	___flmul@temp+1
  9373  0AA7  0873               	movf	?__Umul8_16,w
  9374  0AA8  00C3               	movwf	___flmul@temp
  9375  0AA9                     l2957:
  9376  0AA9  0843               	movf	___flmul@temp,w
  9377  0AAA  00B3               	movwf	??___flmul
  9378  0AAB  0844               	movf	___flmul@temp+1,w
  9379  0AAC  00B4               	movwf	??___flmul+1
  9380  0AAD  01B5               	clrf	??___flmul+2
  9381  0AAE  01B6               	clrf	??___flmul+3
  9382  0AAF  0833               	movf	??___flmul,w
  9383  0AB0  07B9               	addwf	___flmul@grs,f
  9384  0AB1  0834               	movf	??___flmul+1,w
  9385  0AB2  1103               	clrz
  9386  0AB3  1803               	skipnc
  9387  0AB4  3E01               	addlw	1
  9388  0AB5  1903               	skipnz
  9389  0AB6  2AB8               	goto	u4091
  9390  0AB7  07BA               	addwf	___flmul@grs+1,f
  9391  0AB8                     u4091:
  9392  0AB8  0835               	movf	??___flmul+2,w
  9393  0AB9  1103               	clrz
  9394  0ABA  1803               	skipnc
  9395  0ABB  3E01               	addlw	1
  9396  0ABC  1903               	skipnz
  9397  0ABD  2ABF               	goto	u4092
  9398  0ABE  07BB               	addwf	___flmul@grs+2,f
  9399  0ABF                     u4092:
  9400  0ABF  0836               	movf	??___flmul+3,w
  9401  0AC0  1103               	clrz
  9402  0AC1  1803               	skipnc
  9403  0AC2  3E01               	addlw	1
  9404  0AC3  1903               	skipnz
  9405  0AC4  2AC6               	goto	u4093
  9406  0AC5  07BC               	addwf	___flmul@grs+3,f
  9407  0AC6                     u4093:
  9408  0AC6                     l2959:
  9409  0AC6  3008               	movlw	8
  9410  0AC7  00B3               	movwf	??___flmul
  9411  0AC8                     u4105:
  9412  0AC8  1003               	clrc
  9413  0AC9  0DB9               	rlf	___flmul@grs,f
  9414  0ACA  0DBA               	rlf	___flmul@grs+1,f
  9415  0ACB  0DBB               	rlf	___flmul@grs+2,f
  9416  0ACC  0DBC               	rlf	___flmul@grs+3,f
  9417  0ACD  0BB3               	decfsz	??___flmul,f
  9418  0ACE  2AC8               	goto	u4105
  9419  0ACF  082B               	movf	___flmul@b,w
  9420  0AD0  00B3               	movwf	??___flmul
  9421  0AD1  0833               	movf	??___flmul,w
  9422  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  9423  0AD3  082F               	movf	___flmul@a,w
  9424  0AD4  120A  118A  2032  120A  158A  	fcall	__Umul8_16
  9425  0AD9  0874               	movf	?__Umul8_16+1,w
  9426  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  9427  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  9428  0ADC  00C4               	movwf	___flmul@temp+1
  9429  0ADD  0873               	movf	?__Umul8_16,w
  9430  0ADE  00C3               	movwf	___flmul@temp
  9431  0ADF                     l2961:
  9432  0ADF  0843               	movf	___flmul@temp,w
  9433  0AE0  00B3               	movwf	??___flmul
  9434  0AE1  0844               	movf	___flmul@temp+1,w
  9435  0AE2  00B4               	movwf	??___flmul+1
  9436  0AE3  01B5               	clrf	??___flmul+2
  9437  0AE4  01B6               	clrf	??___flmul+3
  9438  0AE5  0833               	movf	??___flmul,w
  9439  0AE6  07B9               	addwf	___flmul@grs,f
  9440  0AE7  0834               	movf	??___flmul+1,w
  9441  0AE8  1103               	clrz
  9442  0AE9  1803               	skipnc
  9443  0AEA  3E01               	addlw	1
  9444  0AEB  1903               	skipnz
  9445  0AEC  2AEE               	goto	u4111
  9446  0AED  07BA               	addwf	___flmul@grs+1,f
  9447  0AEE                     u4111:
  9448  0AEE  0835               	movf	??___flmul+2,w
  9449  0AEF  1103               	clrz
  9450  0AF0  1803               	skipnc
  9451  0AF1  3E01               	addlw	1
  9452  0AF2  1903               	skipnz
  9453  0AF3  2AF5               	goto	u4112
  9454  0AF4  07BB               	addwf	___flmul@grs+2,f
  9455  0AF5                     u4112:
  9456  0AF5  0836               	movf	??___flmul+3,w
  9457  0AF6  1103               	clrz
  9458  0AF7  1803               	skipnc
  9459  0AF8  3E01               	addlw	1
  9460  0AF9  1903               	skipnz
  9461  0AFA  2AFC               	goto	u4113
  9462  0AFB  07BC               	addwf	___flmul@grs+3,f
  9463  0AFC                     u4113:
  9464  0AFC                     l2963:
  9465  0AFC  082C               	movf	___flmul@b+1,w
  9466  0AFD  00B3               	movwf	??___flmul
  9467  0AFE  0833               	movf	??___flmul,w
  9468  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  9469  0B00  0831               	movf	___flmul@a+2,w
  9470  0B01  120A  118A  2032  120A  158A  	fcall	__Umul8_16
  9471  0B06  0874               	movf	?__Umul8_16+1,w
  9472  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  9473  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  9474  0B09  00C4               	movwf	___flmul@temp+1
  9475  0B0A  0873               	movf	?__Umul8_16,w
  9476  0B0B  00C3               	movwf	___flmul@temp
  9477  0B0C  0843               	movf	___flmul@temp,w
  9478  0B0D  00B3               	movwf	??___flmul
  9479  0B0E  0844               	movf	___flmul@temp+1,w
  9480  0B0F  00B4               	movwf	??___flmul+1
  9481  0B10  01B5               	clrf	??___flmul+2
  9482  0B11  01B6               	clrf	??___flmul+3
  9483  0B12  0833               	movf	??___flmul,w
  9484  0B13  07BF               	addwf	___flmul@prod,f
  9485  0B14  0834               	movf	??___flmul+1,w
  9486  0B15  1103               	clrz
  9487  0B16  1803               	skipnc
  9488  0B17  3E01               	addlw	1
  9489  0B18  1903               	skipnz
  9490  0B19  2B1B               	goto	u4121
  9491  0B1A  07C0               	addwf	___flmul@prod+1,f
  9492  0B1B                     u4121:
  9493  0B1B  0835               	movf	??___flmul+2,w
  9494  0B1C  1103               	clrz
  9495  0B1D  1803               	skipnc
  9496  0B1E  3E01               	addlw	1
  9497  0B1F  1903               	skipnz
  9498  0B20  2B22               	goto	u4122
  9499  0B21  07C1               	addwf	___flmul@prod+2,f
  9500  0B22                     u4122:
  9501  0B22  0836               	movf	??___flmul+3,w
  9502  0B23  1103               	clrz
  9503  0B24  1803               	skipnc
  9504  0B25  3E01               	addlw	1
  9505  0B26  1903               	skipnz
  9506  0B27  2B29               	goto	u4123
  9507  0B28  07C2               	addwf	___flmul@prod+3,f
  9508  0B29                     u4123:
  9509  0B29                     l2965:
  9510  0B29  082D               	movf	___flmul@b+2,w
  9511  0B2A  00B3               	movwf	??___flmul
  9512  0B2B  0833               	movf	??___flmul,w
  9513  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  9514  0B2D  0830               	movf	___flmul@a+1,w
  9515  0B2E  120A  118A  2032  120A  158A  	fcall	__Umul8_16
  9516  0B33  0874               	movf	?__Umul8_16+1,w
  9517  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  9518  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  9519  0B36  00C4               	movwf	___flmul@temp+1
  9520  0B37  0873               	movf	?__Umul8_16,w
  9521  0B38  00C3               	movwf	___flmul@temp
  9522  0B39                     l2967:
  9523  0B39  0843               	movf	___flmul@temp,w
  9524  0B3A  00B3               	movwf	??___flmul
  9525  0B3B  0844               	movf	___flmul@temp+1,w
  9526  0B3C  00B4               	movwf	??___flmul+1
  9527  0B3D  01B5               	clrf	??___flmul+2
  9528  0B3E  01B6               	clrf	??___flmul+3
  9529  0B3F  0833               	movf	??___flmul,w
  9530  0B40  07BF               	addwf	___flmul@prod,f
  9531  0B41  0834               	movf	??___flmul+1,w
  9532  0B42  1103               	clrz
  9533  0B43  1803               	skipnc
  9534  0B44  3E01               	addlw	1
  9535  0B45  1903               	skipnz
  9536  0B46  2B48               	goto	u4131
  9537  0B47  07C0               	addwf	___flmul@prod+1,f
  9538  0B48                     u4131:
  9539  0B48  0835               	movf	??___flmul+2,w
  9540  0B49  1103               	clrz
  9541  0B4A  1803               	skipnc
  9542  0B4B  3E01               	addlw	1
  9543  0B4C  1903               	skipnz
  9544  0B4D  2B4F               	goto	u4132
  9545  0B4E  07C1               	addwf	___flmul@prod+2,f
  9546  0B4F                     u4132:
  9547  0B4F  0836               	movf	??___flmul+3,w
  9548  0B50  1103               	clrz
  9549  0B51  1803               	skipnc
  9550  0B52  3E01               	addlw	1
  9551  0B53  1903               	skipnz
  9552  0B54  2B56               	goto	u4133
  9553  0B55  07C2               	addwf	___flmul@prod+3,f
  9554  0B56                     u4133:
  9555  0B56  082D               	movf	___flmul@b+2,w
  9556  0B57  00B3               	movwf	??___flmul
  9557  0B58  0833               	movf	??___flmul,w
  9558  0B59  00F3               	movwf	__Umul8_16@multiplicand
  9559  0B5A  0831               	movf	___flmul@a+2,w
  9560  0B5B  120A  118A  2032  120A  158A  	fcall	__Umul8_16
  9561  0B60  0874               	movf	?__Umul8_16+1,w
  9562  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  9563  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  9564  0B63  00C4               	movwf	___flmul@temp+1
  9565  0B64  0873               	movf	?__Umul8_16,w
  9566  0B65  00C3               	movwf	___flmul@temp
  9567  0B66                     l2969:
  9568  0B66  0843               	movf	___flmul@temp,w
  9569  0B67  00B3               	movwf	??___flmul
  9570  0B68  0844               	movf	___flmul@temp+1,w
  9571  0B69  00B4               	movwf	??___flmul+1
  9572  0B6A  01B5               	clrf	??___flmul+2
  9573  0B6B  01B6               	clrf	??___flmul+3
  9574  0B6C  3008               	movlw	8
  9575  0B6D                     u4145:
  9576  0B6D  1003               	clrc
  9577  0B6E  0DB3               	rlf	??___flmul,f
  9578  0B6F  0DB4               	rlf	??___flmul+1,f
  9579  0B70  0DB5               	rlf	??___flmul+2,f
  9580  0B71  0DB6               	rlf	??___flmul+3,f
  9581  0B72                     u4140:
  9582  0B72  3EFF               	addlw	-1
  9583  0B73  1D03               	skipz
  9584  0B74  2B6D               	goto	u4145
  9585  0B75  0833               	movf	??___flmul,w
  9586  0B76  07BF               	addwf	___flmul@prod,f
  9587  0B77  0834               	movf	??___flmul+1,w
  9588  0B78  1103               	clrz
  9589  0B79  1803               	skipnc
  9590  0B7A  3E01               	addlw	1
  9591  0B7B  1903               	skipnz
  9592  0B7C  2B7E               	goto	u4151
  9593  0B7D  07C0               	addwf	___flmul@prod+1,f
  9594  0B7E                     u4151:
  9595  0B7E  0835               	movf	??___flmul+2,w
  9596  0B7F  1103               	clrz
  9597  0B80  1803               	skipnc
  9598  0B81  3E01               	addlw	1
  9599  0B82  1903               	skipnz
  9600  0B83  2B85               	goto	u4152
  9601  0B84  07C1               	addwf	___flmul@prod+2,f
  9602  0B85                     u4152:
  9603  0B85  0836               	movf	??___flmul+3,w
  9604  0B86  1103               	clrz
  9605  0B87  1803               	skipnc
  9606  0B88  3E01               	addlw	1
  9607  0B89  1903               	skipnz
  9608  0B8A  2B8C               	goto	u4153
  9609  0B8B  07C2               	addwf	___flmul@prod+3,f
  9610  0B8C                     u4153:
  9611  0B8C                     l2971:
  9612  0B8C  0839               	movf	___flmul@grs,w
  9613  0B8D  00B3               	movwf	??___flmul
  9614  0B8E  083A               	movf	___flmul@grs+1,w
  9615  0B8F  00B4               	movwf	??___flmul+1
  9616  0B90  083B               	movf	___flmul@grs+2,w
  9617  0B91  00B5               	movwf	??___flmul+2
  9618  0B92  083C               	movf	___flmul@grs+3,w
  9619  0B93  00B6               	movwf	??___flmul+3
  9620  0B94  3018               	movlw	24
  9621  0B95                     u4165:
  9622  0B95  1003               	clrc
  9623  0B96  0CB6               	rrf	??___flmul+3,f
  9624  0B97  0CB5               	rrf	??___flmul+2,f
  9625  0B98  0CB4               	rrf	??___flmul+1,f
  9626  0B99  0CB3               	rrf	??___flmul,f
  9627  0B9A                     u4160:
  9628  0B9A  3EFF               	addlw	-1
  9629  0B9B  1D03               	skipz
  9630  0B9C  2B95               	goto	u4165
  9631  0B9D  0833               	movf	??___flmul,w
  9632  0B9E  07BF               	addwf	___flmul@prod,f
  9633  0B9F  0834               	movf	??___flmul+1,w
  9634  0BA0  1103               	clrz
  9635  0BA1  1803               	skipnc
  9636  0BA2  3E01               	addlw	1
  9637  0BA3  1903               	skipnz
  9638  0BA4  2BA6               	goto	u4171
  9639  0BA5  07C0               	addwf	___flmul@prod+1,f
  9640  0BA6                     u4171:
  9641  0BA6  0835               	movf	??___flmul+2,w
  9642  0BA7  1103               	clrz
  9643  0BA8  1803               	skipnc
  9644  0BA9  3E01               	addlw	1
  9645  0BAA  1903               	skipnz
  9646  0BAB  2BAD               	goto	u4172
  9647  0BAC  07C1               	addwf	___flmul@prod+2,f
  9648  0BAD                     u4172:
  9649  0BAD  0836               	movf	??___flmul+3,w
  9650  0BAE  1103               	clrz
  9651  0BAF  1803               	skipnc
  9652  0BB0  3E01               	addlw	1
  9653  0BB1  1903               	skipnz
  9654  0BB2  2BB4               	goto	u4173
  9655  0BB3  07C2               	addwf	___flmul@prod+3,f
  9656  0BB4                     u4173:
  9657  0BB4                     l2973:
  9658  0BB4  3008               	movlw	8
  9659  0BB5  00B3               	movwf	??___flmul
  9660  0BB6                     u4185:
  9661  0BB6  1003               	clrc
  9662  0BB7  0DB9               	rlf	___flmul@grs,f
  9663  0BB8  0DBA               	rlf	___flmul@grs+1,f
  9664  0BB9  0DBB               	rlf	___flmul@grs+2,f
  9665  0BBA  0DBC               	rlf	___flmul@grs+3,f
  9666  0BBB  0BB3               	decfsz	??___flmul,f
  9667  0BBC  2BB6               	goto	u4185
  9668  0BBD                     l2975:
  9669  0BBD  083E               	movf	___flmul@bexp,w
  9670  0BBE  073D               	addwf	___flmul@aexp,w
  9671  0BBF  00B3               	movwf	??___flmul
  9672  0BC0  01B4               	clrf	??___flmul+1
  9673  0BC1  0DB4               	rlf	??___flmul+1,f
  9674  0BC2  0833               	movf	??___flmul,w
  9675  0BC3  3E82               	addlw	130
  9676  0BC4  00C3               	movwf	___flmul@temp
  9677  0BC5  0834               	movf	??___flmul+1,w
  9678  0BC6  1803               	skipnc
  9679  0BC7  3E01               	addlw	1
  9680  0BC8  3EFF               	addlw	255
  9681  0BC9  00C4               	movwf	___flmul@temp+1
  9682  0BCA  2BE8               	goto	l2987
  9683  0BCB                     l2977:
  9684  0BCB  3001               	movlw	1
  9685  0BCC  00B3               	movwf	??___flmul
  9686  0BCD                     u4195:
  9687  0BCD  1003               	clrc
  9688  0BCE  0DBF               	rlf	___flmul@prod,f
  9689  0BCF  0DC0               	rlf	___flmul@prod+1,f
  9690  0BD0  0DC1               	rlf	___flmul@prod+2,f
  9691  0BD1  0DC2               	rlf	___flmul@prod+3,f
  9692  0BD2  0BB3               	decfsz	??___flmul,f
  9693  0BD3  2BCD               	goto	u4195
  9694  0BD4                     l2979:
  9695  0BD4  1FBC               	btfss	___flmul@grs+3,7
  9696  0BD5  2BD7               	goto	u4201
  9697  0BD6  2BD8               	goto	u4200
  9698  0BD7                     u4201:
  9699  0BD7  2BD9               	goto	l2983
  9700  0BD8                     u4200:
  9701  0BD8                     l2981:
  9702  0BD8  143F               	bsf	___flmul@prod,0
  9703  0BD9                     l2983:
  9704  0BD9  3001               	movlw	1
  9705  0BDA  00B3               	movwf	??___flmul
  9706  0BDB                     u4215:
  9707  0BDB  1003               	clrc
  9708  0BDC  0DB9               	rlf	___flmul@grs,f
  9709  0BDD  0DBA               	rlf	___flmul@grs+1,f
  9710  0BDE  0DBB               	rlf	___flmul@grs+2,f
  9711  0BDF  0DBC               	rlf	___flmul@grs+3,f
  9712  0BE0  0BB3               	decfsz	??___flmul,f
  9713  0BE1  2BDB               	goto	u4215
  9714  0BE2                     l2985:
  9715  0BE2  30FF               	movlw	255
  9716  0BE3  07C3               	addwf	___flmul@temp,f
  9717  0BE4  1803               	skipnc
  9718  0BE5  0AC4               	incf	___flmul@temp+1,f
  9719  0BE6  30FF               	movlw	255
  9720  0BE7  07C4               	addwf	___flmul@temp+1,f
  9721  0BE8                     l2987:
  9722  0BE8  1FC1               	btfss	___flmul@prod+2,7
  9723  0BE9  2BEB               	goto	u4221
  9724  0BEA  2BEC               	goto	u4220
  9725  0BEB                     u4221:
  9726  0BEB  2BCB               	goto	l2977
  9727  0BEC                     u4220:
  9728  0BEC                     l2989:
  9729  0BEC  01BD               	clrf	___flmul@aexp
  9730  0BED                     l2991:
  9731  0BED  1FBC               	btfss	___flmul@grs+3,7
  9732  0BEE  2BF0               	goto	u4231
  9733  0BEF  2BF1               	goto	u4230
  9734  0BF0                     u4231:
  9735  0BF0  2C0D               	goto	l2999
  9736  0BF1                     u4230:
  9737  0BF1                     l2993:
  9738  0BF1  30FF               	movlw	255
  9739  0BF2  0539               	andwf	___flmul@grs,w
  9740  0BF3  00B3               	movwf	??___flmul
  9741  0BF4  30FF               	movlw	255
  9742  0BF5  053A               	andwf	___flmul@grs+1,w
  9743  0BF6  00B4               	movwf	??___flmul+1
  9744  0BF7  30FF               	movlw	255
  9745  0BF8  053B               	andwf	___flmul@grs+2,w
  9746  0BF9  00B5               	movwf	??___flmul+2
  9747  0BFA  307F               	movlw	127
  9748  0BFB  053C               	andwf	___flmul@grs+3,w
  9749  0BFC  00B6               	movwf	??___flmul+3
  9750  0BFD  0836               	movf	??___flmul+3,w
  9751  0BFE  0435               	iorwf	??___flmul+2,w
  9752  0BFF  0434               	iorwf	??___flmul+1,w
  9753  0C00  0433               	iorwf	??___flmul,w
  9754  0C01  1903               	skipnz
  9755  0C02  2C04               	goto	u4241
  9756  0C03  2C05               	goto	u4240
  9757  0C04                     u4241:
  9758  0C04  2C08               	goto	l869
  9759  0C05                     u4240:
  9760  0C05                     l2995:
  9761  0C05  01BD               	clrf	___flmul@aexp
  9762  0C06  0ABD               	incf	___flmul@aexp,f
  9763  0C07  2C0D               	goto	l2999
  9764  0C08                     l869:
  9765  0C08  1C3F               	btfss	___flmul@prod,0
  9766  0C09  2C0B               	goto	u4251
  9767  0C0A  2C0C               	goto	u4250
  9768  0C0B                     u4251:
  9769  0C0B  2C0D               	goto	l2999
  9770  0C0C                     u4250:
  9771  0C0C  2C05               	goto	l2995
  9772  0C0D                     l2999:
  9773  0C0D  083D               	movf	___flmul@aexp,w
  9774  0C0E  1903               	btfsc	3,2
  9775  0C0F  2C11               	goto	u4261
  9776  0C10  2C12               	goto	u4260
  9777  0C11                     u4261:
  9778  0C11  2C43               	goto	l3009
  9779  0C12                     u4260:
  9780  0C12                     l3001:
  9781  0C12  3001               	movlw	1
  9782  0C13  07BF               	addwf	___flmul@prod,f
  9783  0C14  3000               	movlw	0
  9784  0C15  1803               	skipnc
  9785  0C16  3001               	movlw	1
  9786  0C17  07C0               	addwf	___flmul@prod+1,f
  9787  0C18  3000               	movlw	0
  9788  0C19  1803               	skipnc
  9789  0C1A  3001               	movlw	1
  9790  0C1B  07C1               	addwf	___flmul@prod+2,f
  9791  0C1C  3000               	movlw	0
  9792  0C1D  1803               	skipnc
  9793  0C1E  3001               	movlw	1
  9794  0C1F  07C2               	addwf	___flmul@prod+3,f
  9795  0C20                     l3003:
  9796  0C20  1C42               	btfss	___flmul@prod+3,0
  9797  0C21  2C23               	goto	u4271
  9798  0C22  2C24               	goto	u4270
  9799  0C23                     u4271:
  9800  0C23  2C43               	goto	l3009
  9801  0C24                     u4270:
  9802  0C24                     l3005:
  9803  0C24  083F               	movf	___flmul@prod,w
  9804  0C25  00B3               	movwf	??___flmul
  9805  0C26  0840               	movf	___flmul@prod+1,w
  9806  0C27  00B4               	movwf	??___flmul+1
  9807  0C28  0841               	movf	___flmul@prod+2,w
  9808  0C29  00B5               	movwf	??___flmul+2
  9809  0C2A  0842               	movf	___flmul@prod+3,w
  9810  0C2B  00B6               	movwf	??___flmul+3
  9811  0C2C  3001               	movlw	1
  9812  0C2D  00B7               	movwf	??___flmul+4
  9813  0C2E                     u4285:
  9814  0C2E  0D36               	rlf	??___flmul+3,w
  9815  0C2F  0CB6               	rrf	??___flmul+3,f
  9816  0C30  0CB5               	rrf	??___flmul+2,f
  9817  0C31  0CB4               	rrf	??___flmul+1,f
  9818  0C32  0CB3               	rrf	??___flmul,f
  9819  0C33                     u4280:
  9820  0C33  0BB7               	decfsz	??___flmul+4,f
  9821  0C34  2C2E               	goto	u4285
  9822  0C35  0836               	movf	??___flmul+3,w
  9823  0C36  00C2               	movwf	___flmul@prod+3
  9824  0C37  0835               	movf	??___flmul+2,w
  9825  0C38  00C1               	movwf	___flmul@prod+2
  9826  0C39  0834               	movf	??___flmul+1,w
  9827  0C3A  00C0               	movwf	___flmul@prod+1
  9828  0C3B  0833               	movf	??___flmul,w
  9829  0C3C  00BF               	movwf	___flmul@prod
  9830  0C3D                     l3007:
  9831  0C3D  3001               	movlw	1
  9832  0C3E  07C3               	addwf	___flmul@temp,f
  9833  0C3F  1803               	skipnc
  9834  0C40  0AC4               	incf	___flmul@temp+1,f
  9835  0C41  3000               	movlw	0
  9836  0C42  07C4               	addwf	___flmul@temp+1,f
  9837  0C43                     l3009:
  9838  0C43  0844               	movf	___flmul@temp+1,w
  9839  0C44  3A80               	xorlw	128
  9840  0C45  00FF               	movwf	btemp+1
  9841  0C46  3080               	movlw	128
  9842  0C47  027F               	subwf	btemp+1,w
  9843  0C48  1D03               	skipz
  9844  0C49  2C4C               	goto	u4295
  9845  0C4A  30FF               	movlw	255
  9846  0C4B  0243               	subwf	___flmul@temp,w
  9847  0C4C                     u4295:
  9848  0C4C  1C03               	skipc
  9849  0C4D  2C4F               	goto	u4291
  9850  0C4E  2C50               	goto	u4290
  9851  0C4F                     u4291:
  9852  0C4F  2C5B               	goto	l3013
  9853  0C50                     u4290:
  9854  0C50                     l3011:
  9855  0C50  307F               	movlw	127
  9856  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  9857  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  9858  0C53  00C2               	movwf	___flmul@prod+3
  9859  0C54  3080               	movlw	128
  9860  0C55  00C1               	movwf	___flmul@prod+2
  9861  0C56  3000               	movlw	0
  9862  0C57  00C0               	movwf	___flmul@prod+1
  9863  0C58  3000               	movlw	0
  9864  0C59  00BF               	movwf	___flmul@prod
  9865  0C5A  2C90               	goto	l875
  9866  0C5B                     l3013:
  9867  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  9868  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  9869  0C5D  0844               	movf	___flmul@temp+1,w
  9870  0C5E  3A80               	xorlw	128
  9871  0C5F  00FF               	movwf	btemp+1
  9872  0C60  3080               	movlw	128
  9873  0C61  027F               	subwf	btemp+1,w
  9874  0C62  1D03               	skipz
  9875  0C63  2C66               	goto	u4305
  9876  0C64  3001               	movlw	1
  9877  0C65  0243               	subwf	___flmul@temp,w
  9878  0C66                     u4305:
  9879  0C66  1803               	skipnc
  9880  0C67  2C69               	goto	u4301
  9881  0C68  2C6A               	goto	u4300
  9882  0C69                     u4301:
  9883  0C69  2C76               	goto	l3019
  9884  0C6A                     u4300:
  9885  0C6A                     l3015:
  9886  0C6A  3000               	movlw	0
  9887  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  9888  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  9889  0C6D  00C2               	movwf	___flmul@prod+3
  9890  0C6E  3000               	movlw	0
  9891  0C6F  00C1               	movwf	___flmul@prod+2
  9892  0C70  3000               	movlw	0
  9893  0C71  00C0               	movwf	___flmul@prod+1
  9894  0C72  3000               	movlw	0
  9895  0C73  00BF               	movwf	___flmul@prod
  9896  0C74                     l3017:
  9897  0C74  01B8               	clrf	___flmul@sign
  9898  0C75  2C90               	goto	l875
  9899  0C76                     l3019:
  9900  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  9901  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  9902  0C78  0843               	movf	___flmul@temp,w
  9903  0C79  00B3               	movwf	??___flmul
  9904  0C7A  0833               	movf	??___flmul,w
  9905  0C7B  00BE               	movwf	___flmul@bexp
  9906  0C7C  30FF               	movlw	255
  9907  0C7D  05BF               	andwf	___flmul@prod,f
  9908  0C7E  30FF               	movlw	255
  9909  0C7F  05C0               	andwf	___flmul@prod+1,f
  9910  0C80  307F               	movlw	127
  9911  0C81  05C1               	andwf	___flmul@prod+2,f
  9912  0C82  3000               	movlw	0
  9913  0C83  05C2               	andwf	___flmul@prod+3,f
  9914  0C84                     l3021:
  9915  0C84  1C3E               	btfss	___flmul@bexp,0
  9916  0C85  2C87               	goto	u4311
  9917  0C86  2C88               	goto	u4310
  9918  0C87                     u4311:
  9919  0C87  2C89               	goto	l3025
  9920  0C88                     u4310:
  9921  0C88                     l3023:
  9922  0C88  17C1               	bsf	___flmul@prod+2,7
  9923  0C89                     l3025:
  9924  0C89  083E               	movf	___flmul@bexp,w
  9925  0C8A  00B3               	movwf	??___flmul
  9926  0C8B  1003               	clrc
  9927  0C8C  0C33               	rrf	??___flmul,w
  9928  0C8D  00B4               	movwf	??___flmul+1
  9929  0C8E  0834               	movf	??___flmul+1,w
  9930  0C8F  00C2               	movwf	___flmul@prod+3
  9931  0C90                     l875:
  9932  0C90  0838               	movf	___flmul@sign,w
  9933  0C91  00B3               	movwf	??___flmul
  9934  0C92  0833               	movf	??___flmul,w
  9935  0C93  04C2               	iorwf	___flmul@prod+3,f
  9936  0C94                     l3027:
  9937  0C94  0842               	movf	___flmul@prod+3,w
  9938  0C95  00AE               	movwf	?___flmul+3
  9939  0C96  0841               	movf	___flmul@prod+2,w
  9940  0C97  00AD               	movwf	?___flmul+2
  9941  0C98  0840               	movf	___flmul@prod+1,w
  9942  0C99  00AC               	movwf	?___flmul+1
  9943  0C9A  083F               	movf	___flmul@prod,w
  9944  0C9B  00AB               	movwf	?___flmul
  9945  0C9C                     l863:
  9946  0C9C  0008               	return
  9947  0C9D                     __end_of___flmul:
  9948                           
  9949                           	psect	text36
  9950  0032                     __ptext36:	
  9951 ;; *************** function __Umul8_16 *****************
  9952 ;; Defined at:
  9953 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  9954 ;; Parameters:    Size  Location     Type
  9955 ;;  multiplier      1    wreg     unsigned char 
  9956 ;;  multiplicand    1    3[COMMON] unsigned char 
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;  multiplier      1    4[BANK0 ] unsigned char 
  9959 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  9960 ;;  product         2    0[BANK0 ] unsigned int 
  9961 ;; Return value:  Size  Location     Type
  9962 ;;                  2    3[COMMON] unsigned int 
  9963 ;; Registers used:
  9964 ;;		wreg, status,2, status,0
  9965 ;; Tracked objects:
  9966 ;;		On entry : 0/0
  9967 ;;		On exit  : 0/0
  9968 ;;		Unchanged: 0/0
  9969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9970 ;;      Params:         2       0       0       0       0
  9971 ;;      Locals:         0       5       0       0       0
  9972 ;;      Temps:          2       0       0       0       0
  9973 ;;      Totals:         4       5       0       0       0
  9974 ;;Total ram usage:        9 bytes
  9975 ;; Hardware stack levels used:    1
  9976 ;; Hardware stack levels required when called:    1
  9977 ;; This function calls:
  9978 ;;		Nothing
  9979 ;; This function is called by:
  9980 ;;		___flmul
  9981 ;; This function uses a non-reentrant model
  9982 ;;
  9983                           
  9984                           
  9985                           ;psect for function __Umul8_16
  9986  0032                     __Umul8_16:
  9987                           
  9988                           ;incstack = 0
  9989                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9990                           ;__Umul8_16@multiplier stored from wreg
  9991  0032  1283               	bcf	3,5	;RP0=0, select bank0
  9992  0033  1303               	bcf	3,6	;RP1=0, select bank0
  9993  0034  00A4               	movwf	__Umul8_16@multiplier
  9994  0035                     l2551:
  9995  0035  01A0               	clrf	__Umul8_16@product
  9996  0036  01A1               	clrf	__Umul8_16@product+1
  9997  0037                     l2553:
  9998  0037  0873               	movf	__Umul8_16@multiplicand,w
  9999  0038  00F5               	movwf	??__Umul8_16
 10000  0039  01F6               	clrf	??__Umul8_16+1
 10001  003A  0875               	movf	??__Umul8_16,w
 10002  003B  00A2               	movwf	__Umul8_16@word_mpld
 10003  003C  0876               	movf	??__Umul8_16+1,w
 10004  003D  00A3               	movwf	__Umul8_16@word_mpld+1
 10005  003E                     l2555:
 10006  003E  1C24               	btfss	__Umul8_16@multiplier,0
 10007  003F  2841               	goto	u3141
 10008  0040  2842               	goto	u3140
 10009  0041                     u3141:
 10010  0041  2848               	goto	l882
 10011  0042                     u3140:
 10012  0042                     l2557:
 10013  0042  0822               	movf	__Umul8_16@word_mpld,w
 10014  0043  07A0               	addwf	__Umul8_16@product,f
 10015  0044  1803               	skipnc
 10016  0045  0AA1               	incf	__Umul8_16@product+1,f
 10017  0046  0823               	movf	__Umul8_16@word_mpld+1,w
 10018  0047  07A1               	addwf	__Umul8_16@product+1,f
 10019  0048                     l882:
 10020  0048  3001               	movlw	1
 10021  0049                     u3155:
 10022  0049  1003               	clrc
 10023  004A  0DA2               	rlf	__Umul8_16@word_mpld,f
 10024  004B  0DA3               	rlf	__Umul8_16@word_mpld+1,f
 10025  004C  3EFF               	addlw	-1
 10026  004D  1D03               	skipz
 10027  004E  2849               	goto	u3155
 10028  004F  1003               	clrc
 10029  0050  0CA4               	rrf	__Umul8_16@multiplier,f
 10030  0051                     l2559:
 10031  0051  0824               	movf	__Umul8_16@multiplier,w
 10032  0052  1D03               	btfss	3,2
 10033  0053  2855               	goto	u3161
 10034  0054  2856               	goto	u3160
 10035  0055                     u3161:
 10036  0055  283E               	goto	l2555
 10037  0056                     u3160:
 10038  0056                     l2561:
 10039  0056  0821               	movf	__Umul8_16@product+1,w
 10040  0057  00F4               	movwf	?__Umul8_16+1
 10041  0058  0820               	movf	__Umul8_16@product,w
 10042  0059  00F3               	movwf	?__Umul8_16
 10043  005A                     l884:
 10044  005A  0008               	return
 10045  005B                     __end_of__Umul8_16:
 10046                           
 10047                           	psect	text37
 10048  1094                     __ptext37:	
 10049 ;; *************** function ___fldiv *****************
 10050 ;; Defined at:
 10051 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 10052 ;; Parameters:    Size  Location     Type
 10053 ;;  a               4   37[BANK0 ] unsigned int 
 10054 ;;  b               4   41[BANK0 ] unsigned int 
 10055 ;; Auto vars:     Size  Location     Type
 10056 ;;  grs             4   57[BANK0 ] unsigned long 
 10057 ;;  rem             4   50[BANK0 ] unsigned long 
 10058 ;;  new_exp         2   55[BANK0 ] int 
 10059 ;;  aexp            1   62[BANK0 ] unsigned char 
 10060 ;;  bexp            1   61[BANK0 ] unsigned char 
 10061 ;;  sign            1   54[BANK0 ] unsigned char 
 10062 ;; Return value:  Size  Location     Type
 10063 ;;                  4   37[BANK0 ] unsigned char 
 10064 ;; Registers used:
 10065 ;;		wreg, status,2, status,0, btemp+1
 10066 ;; Tracked objects:
 10067 ;;		On entry : 0/0
 10068 ;;		On exit  : 0/0
 10069 ;;		Unchanged: 0/0
 10070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10071 ;;      Params:         0       8       0       0       0
 10072 ;;      Locals:         0      13       0       0       0
 10073 ;;      Temps:          0       5       0       0       0
 10074 ;;      Totals:         0      26       0       0       0
 10075 ;;Total ram usage:       26 bytes
 10076 ;; Hardware stack levels used:    1
 10077 ;; Hardware stack levels required when called:    1
 10078 ;; This function calls:
 10079 ;;		Nothing
 10080 ;; This function is called by:
 10081 ;;		_ADC_channel1
 10082 ;;		_ADC_channel2
 10083 ;; This function uses a non-reentrant model
 10084 ;;
 10085                           
 10086                           
 10087                           ;psect for function ___fldiv
 10088  1094                     ___fldiv:
 10089  1094                     l3721:	
 10090                           ;incstack = 0
 10091                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 10092                           
 10093  1094  1283               	bcf	3,5	;RP0=0, select bank0
 10094  1095  1303               	bcf	3,6	;RP1=0, select bank0
 10095  1096  084C               	movf	___fldiv@b+3,w
 10096  1097  3980               	andlw	128
 10097  1098  00CD               	movwf	??___fldiv
 10098  1099  084D               	movf	??___fldiv,w
 10099  109A  00D6               	movwf	___fldiv@sign
 10100  109B                     l3723:
 10101  109B  084C               	movf	___fldiv@b+3,w
 10102  109C  00CD               	movwf	??___fldiv
 10103  109D  074D               	addwf	??___fldiv,w
 10104  109E  00CE               	movwf	??___fldiv+1
 10105  109F  084E               	movf	??___fldiv+1,w
 10106  10A0  00DD               	movwf	___fldiv@bexp
 10107  10A1                     l3725:
 10108  10A1  1FCB               	btfss	___fldiv@b+2,7
 10109  10A2  28A4               	goto	u5891
 10110  10A3  28A5               	goto	u5890
 10111  10A4                     u5891:
 10112  10A4  28A6               	goto	l3729
 10113  10A5                     u5890:
 10114  10A5                     l3727:
 10115  10A5  145D               	bsf	___fldiv@bexp,0
 10116  10A6                     l3729:
 10117  10A6  085D               	movf	___fldiv@bexp,w
 10118  10A7  1903               	btfsc	3,2
 10119  10A8  28AA               	goto	u5901
 10120  10A9  28AB               	goto	u5900
 10121  10AA                     u5901:
 10122  10AA  28BB               	goto	l3739
 10123  10AB                     u5900:
 10124  10AB                     l3731:
 10125  10AB  0A5D               	incf	___fldiv@bexp,w
 10126  10AC  1D03               	btfss	3,2
 10127  10AD  28AF               	goto	u5911
 10128  10AE  28B0               	goto	u5910
 10129  10AF                     u5911:
 10130  10AF  28B8               	goto	l3735
 10131  10B0                     u5910:
 10132  10B0                     l3733:
 10133  10B0  3000               	movlw	0
 10134  10B1  00CC               	movwf	___fldiv@b+3
 10135  10B2  3000               	movlw	0
 10136  10B3  00CB               	movwf	___fldiv@b+2
 10137  10B4  3000               	movlw	0
 10138  10B5  00CA               	movwf	___fldiv@b+1
 10139  10B6  3000               	movlw	0
 10140  10B7  00C9               	movwf	___fldiv@b
 10141  10B8                     l3735:
 10142  10B8  17CB               	bsf	___fldiv@b+2,7
 10143  10B9                     l3737:
 10144  10B9  01CC               	clrf	___fldiv@b+3
 10145  10BA  28C3               	goto	l3741
 10146  10BB                     l3739:
 10147  10BB  3000               	movlw	0
 10148  10BC  00CC               	movwf	___fldiv@b+3
 10149  10BD  3000               	movlw	0
 10150  10BE  00CB               	movwf	___fldiv@b+2
 10151  10BF  3000               	movlw	0
 10152  10C0  00CA               	movwf	___fldiv@b+1
 10153  10C1  3000               	movlw	0
 10154  10C2  00C9               	movwf	___fldiv@b
 10155  10C3                     l3741:
 10156  10C3  0848               	movf	___fldiv@a+3,w
 10157  10C4  3980               	andlw	128
 10158  10C5  00CD               	movwf	??___fldiv
 10159  10C6  084D               	movf	??___fldiv,w
 10160  10C7  06D6               	xorwf	___fldiv@sign,f
 10161  10C8                     l3743:
 10162  10C8  0848               	movf	___fldiv@a+3,w
 10163  10C9  00CD               	movwf	??___fldiv
 10164  10CA  074D               	addwf	??___fldiv,w
 10165  10CB  00CE               	movwf	??___fldiv+1
 10166  10CC  084E               	movf	??___fldiv+1,w
 10167  10CD  00DE               	movwf	___fldiv@aexp
 10168  10CE                     l3745:
 10169  10CE  1FC7               	btfss	___fldiv@a+2,7
 10170  10CF  28D1               	goto	u5921
 10171  10D0  28D2               	goto	u5920
 10172  10D1                     u5921:
 10173  10D1  28D3               	goto	l3749
 10174  10D2                     u5920:
 10175  10D2                     l3747:
 10176  10D2  145E               	bsf	___fldiv@aexp,0
 10177  10D3                     l3749:
 10178  10D3  085E               	movf	___fldiv@aexp,w
 10179  10D4  1903               	btfsc	3,2
 10180  10D5  28D7               	goto	u5931
 10181  10D6  28D8               	goto	u5930
 10182  10D7                     u5931:
 10183  10D7  28E8               	goto	l3759
 10184  10D8                     u5930:
 10185  10D8                     l3751:
 10186  10D8  0A5E               	incf	___fldiv@aexp,w
 10187  10D9  1D03               	btfss	3,2
 10188  10DA  28DC               	goto	u5941
 10189  10DB  28DD               	goto	u5940
 10190  10DC                     u5941:
 10191  10DC  28E5               	goto	l3755
 10192  10DD                     u5940:
 10193  10DD                     l3753:
 10194  10DD  3000               	movlw	0
 10195  10DE  00C8               	movwf	___fldiv@a+3
 10196  10DF  3000               	movlw	0
 10197  10E0  00C7               	movwf	___fldiv@a+2
 10198  10E1  3000               	movlw	0
 10199  10E2  00C6               	movwf	___fldiv@a+1
 10200  10E3  3000               	movlw	0
 10201  10E4  00C5               	movwf	___fldiv@a
 10202  10E5                     l3755:
 10203  10E5  17C7               	bsf	___fldiv@a+2,7
 10204  10E6                     l3757:
 10205  10E6  01C8               	clrf	___fldiv@a+3
 10206  10E7  28F0               	goto	l823
 10207  10E8                     l3759:
 10208  10E8  3000               	movlw	0
 10209  10E9  00C8               	movwf	___fldiv@a+3
 10210  10EA  3000               	movlw	0
 10211  10EB  00C7               	movwf	___fldiv@a+2
 10212  10EC  3000               	movlw	0
 10213  10ED  00C6               	movwf	___fldiv@a+1
 10214  10EE  3000               	movlw	0
 10215  10EF  00C5               	movwf	___fldiv@a
 10216  10F0                     l823:
 10217  10F0  0848               	movf	___fldiv@a+3,w
 10218  10F1  0447               	iorwf	___fldiv@a+2,w
 10219  10F2  0446               	iorwf	___fldiv@a+1,w
 10220  10F3  0445               	iorwf	___fldiv@a,w
 10221  10F4  1D03               	skipz
 10222  10F5  28F7               	goto	u5951
 10223  10F6  28F8               	goto	u5950
 10224  10F7                     u5951:
 10225  10F7  2911               	goto	l3769
 10226  10F8                     u5950:
 10227  10F8                     l3761:
 10228  10F8  3000               	movlw	0
 10229  10F9  00CC               	movwf	___fldiv@b+3
 10230  10FA  3000               	movlw	0
 10231  10FB  00CB               	movwf	___fldiv@b+2
 10232  10FC  3000               	movlw	0
 10233  10FD  00CA               	movwf	___fldiv@b+1
 10234  10FE  3000               	movlw	0
 10235  10FF  00C9               	movwf	___fldiv@b
 10236  1100  3080               	movlw	128
 10237  1101  04CB               	iorwf	___fldiv@b+2,f
 10238  1102  307F               	movlw	127
 10239  1103  04CC               	iorwf	___fldiv@b+3,f
 10240  1104                     l3763:
 10241  1104  0856               	movf	___fldiv@sign,w
 10242  1105  00CD               	movwf	??___fldiv
 10243  1106  084D               	movf	??___fldiv,w
 10244  1107  04CC               	iorwf	___fldiv@b+3,f
 10245  1108                     l3765:
 10246  1108  084C               	movf	___fldiv@b+3,w
 10247  1109  00C8               	movwf	?___fldiv+3
 10248  110A  084B               	movf	___fldiv@b+2,w
 10249  110B  00C7               	movwf	?___fldiv+2
 10250  110C  084A               	movf	___fldiv@b+1,w
 10251  110D  00C6               	movwf	?___fldiv+1
 10252  110E  0849               	movf	___fldiv@b,w
 10253  110F  00C5               	movwf	?___fldiv
 10254  1110  2A70               	goto	l825
 10255  1111                     l3769:
 10256  1111  085D               	movf	___fldiv@bexp,w
 10257  1112  1D03               	btfss	3,2
 10258  1113  2915               	goto	u5961
 10259  1114  2916               	goto	u5960
 10260  1115                     u5961:
 10261  1115  291F               	goto	l3775
 10262  1116                     u5960:
 10263  1116                     l3771:
 10264  1116  3000               	movlw	0
 10265  1117  00C8               	movwf	?___fldiv+3
 10266  1118  3000               	movlw	0
 10267  1119  00C7               	movwf	?___fldiv+2
 10268  111A  3000               	movlw	0
 10269  111B  00C6               	movwf	?___fldiv+1
 10270  111C  3000               	movlw	0
 10271  111D  00C5               	movwf	?___fldiv
 10272  111E  2A70               	goto	l825
 10273  111F                     l3775:
 10274  111F  085D               	movf	___fldiv@bexp,w
 10275  1120  00CD               	movwf	??___fldiv
 10276  1121  01CE               	clrf	??___fldiv+1
 10277  1122  084E               	movf	??___fldiv+1,w
 10278  1123  00D0               	movwf	??___fldiv+3
 10279  1124  085E               	movf	___fldiv@aexp,w
 10280  1125  024D               	subwf	??___fldiv,w
 10281  1126  00CF               	movwf	??___fldiv+2
 10282  1127  1C03               	skipc
 10283  1128  03D0               	decf	??___fldiv+3,f
 10284  1129  084F               	movf	??___fldiv+2,w
 10285  112A  3E7F               	addlw	127
 10286  112B  00D7               	movwf	___fldiv@new_exp
 10287  112C  0850               	movf	??___fldiv+3,w
 10288  112D  1803               	skipnc
 10289  112E  3E01               	addlw	1
 10290  112F  3E00               	addlw	0
 10291  1130  00D8               	movwf	___fldiv@new_exp+1
 10292  1131                     l3777:
 10293  1131  084C               	movf	___fldiv@b+3,w
 10294  1132  00D5               	movwf	___fldiv@rem+3
 10295  1133  084B               	movf	___fldiv@b+2,w
 10296  1134  00D4               	movwf	___fldiv@rem+2
 10297  1135  084A               	movf	___fldiv@b+1,w
 10298  1136  00D3               	movwf	___fldiv@rem+1
 10299  1137  0849               	movf	___fldiv@b,w
 10300  1138  00D2               	movwf	___fldiv@rem
 10301  1139                     l3779:
 10302  1139  3000               	movlw	0
 10303  113A  00CC               	movwf	___fldiv@b+3
 10304  113B  3000               	movlw	0
 10305  113C  00CB               	movwf	___fldiv@b+2
 10306  113D  3000               	movlw	0
 10307  113E  00CA               	movwf	___fldiv@b+1
 10308  113F  3000               	movlw	0
 10309  1140  00C9               	movwf	___fldiv@b
 10310  1141                     l3781:
 10311  1141  3000               	movlw	0
 10312  1142  00DC               	movwf	___fldiv@grs+3
 10313  1143  3000               	movlw	0
 10314  1144  00DB               	movwf	___fldiv@grs+2
 10315  1145  3000               	movlw	0
 10316  1146  00DA               	movwf	___fldiv@grs+1
 10317  1147  3000               	movlw	0
 10318  1148  00D9               	movwf	___fldiv@grs
 10319  1149                     l3783:
 10320  1149  01DE               	clrf	___fldiv@aexp
 10321  114A  2995               	goto	l3803
 10322  114B                     l3785:
 10323  114B  085E               	movf	___fldiv@aexp,w
 10324  114C  1903               	btfsc	3,2
 10325  114D  294F               	goto	u5971
 10326  114E  2950               	goto	u5970
 10327  114F                     u5971:
 10328  114F  2970               	goto	l3795
 10329  1150                     u5970:
 10330  1150                     l3787:
 10331  1150  3001               	movlw	1
 10332  1151  00CD               	movwf	??___fldiv
 10333  1152                     u5985:
 10334  1152  1003               	clrc
 10335  1153  0DD2               	rlf	___fldiv@rem,f
 10336  1154  0DD3               	rlf	___fldiv@rem+1,f
 10337  1155  0DD4               	rlf	___fldiv@rem+2,f
 10338  1156  0DD5               	rlf	___fldiv@rem+3,f
 10339  1157  0BCD               	decfsz	??___fldiv,f
 10340  1158  2952               	goto	u5985
 10341  1159  3001               	movlw	1
 10342  115A  00CD               	movwf	??___fldiv
 10343  115B                     u5995:
 10344  115B  1003               	clrc
 10345  115C  0DC9               	rlf	___fldiv@b,f
 10346  115D  0DCA               	rlf	___fldiv@b+1,f
 10347  115E  0DCB               	rlf	___fldiv@b+2,f
 10348  115F  0DCC               	rlf	___fldiv@b+3,f
 10349  1160  0BCD               	decfsz	??___fldiv,f
 10350  1161  295B               	goto	u5995
 10351  1162                     l3789:
 10352  1162  1FDC               	btfss	___fldiv@grs+3,7
 10353  1163  2965               	goto	u6001
 10354  1164  2966               	goto	u6000
 10355  1165                     u6001:
 10356  1165  2967               	goto	l3793
 10357  1166                     u6000:
 10358  1166                     l3791:
 10359  1166  1449               	bsf	___fldiv@b,0
 10360  1167                     l3793:
 10361  1167  3001               	movlw	1
 10362  1168  00CD               	movwf	??___fldiv
 10363  1169                     u6015:
 10364  1169  1003               	clrc
 10365  116A  0DD9               	rlf	___fldiv@grs,f
 10366  116B  0DDA               	rlf	___fldiv@grs+1,f
 10367  116C  0DDB               	rlf	___fldiv@grs+2,f
 10368  116D  0DDC               	rlf	___fldiv@grs+3,f
 10369  116E  0BCD               	decfsz	??___fldiv,f
 10370  116F  2969               	goto	u6015
 10371  1170                     l3795:
 10372  1170  0848               	movf	___fldiv@a+3,w
 10373  1171  0255               	subwf	___fldiv@rem+3,w
 10374  1172  1D03               	skipz
 10375  1173  297E               	goto	u6025
 10376  1174  0847               	movf	___fldiv@a+2,w
 10377  1175  0254               	subwf	___fldiv@rem+2,w
 10378  1176  1D03               	skipz
 10379  1177  297E               	goto	u6025
 10380  1178  0846               	movf	___fldiv@a+1,w
 10381  1179  0253               	subwf	___fldiv@rem+1,w
 10382  117A  1D03               	skipz
 10383  117B  297E               	goto	u6025
 10384  117C  0845               	movf	___fldiv@a,w
 10385  117D  0252               	subwf	___fldiv@rem,w
 10386  117E                     u6025:
 10387  117E  1C03               	skipc
 10388  117F  2981               	goto	u6021
 10389  1180  2982               	goto	u6020
 10390  1181                     u6021:
 10391  1181  2991               	goto	l3801
 10392  1182                     u6020:
 10393  1182                     l3797:
 10394  1182  175C               	bsf	___fldiv@grs+3,6
 10395  1183                     l3799:
 10396  1183  0845               	movf	___fldiv@a,w
 10397  1184  02D2               	subwf	___fldiv@rem,f
 10398  1185  0846               	movf	___fldiv@a+1,w
 10399  1186  1C03               	skipc
 10400  1187  0F46               	incfsz	___fldiv@a+1,w
 10401  1188  02D3               	subwf	___fldiv@rem+1,f
 10402  1189  0847               	movf	___fldiv@a+2,w
 10403  118A  1C03               	skipc
 10404  118B  0F47               	incfsz	___fldiv@a+2,w
 10405  118C  02D4               	subwf	___fldiv@rem+2,f
 10406  118D  0848               	movf	___fldiv@a+3,w
 10407  118E  1C03               	skipc
 10408  118F  0F48               	incfsz	___fldiv@a+3,w
 10409  1190  02D5               	subwf	___fldiv@rem+3,f
 10410  1191                     l3801:
 10411  1191  3001               	movlw	1
 10412  1192  00CD               	movwf	??___fldiv
 10413  1193  084D               	movf	??___fldiv,w
 10414  1194  07DE               	addwf	___fldiv@aexp,f
 10415  1195                     l3803:
 10416  1195  301A               	movlw	26
 10417  1196  025E               	subwf	___fldiv@aexp,w
 10418  1197  1C03               	skipc
 10419  1198  299A               	goto	u6031
 10420  1199  299B               	goto	u6030
 10421  119A                     u6031:
 10422  119A  294B               	goto	l3785
 10423  119B                     u6030:
 10424  119B                     l3805:
 10425  119B  0855               	movf	___fldiv@rem+3,w
 10426  119C  0454               	iorwf	___fldiv@rem+2,w
 10427  119D  0453               	iorwf	___fldiv@rem+1,w
 10428  119E  0452               	iorwf	___fldiv@rem,w
 10429  119F  1903               	skipnz
 10430  11A0  29A2               	goto	u6041
 10431  11A1  29A3               	goto	u6040
 10432  11A2                     u6041:
 10433  11A2  29C2               	goto	l3819
 10434  11A3                     u6040:
 10435  11A3                     l3807:
 10436  11A3  1459               	bsf	___fldiv@grs,0
 10437  11A4  29C2               	goto	l3819
 10438  11A5                     l3809:
 10439  11A5  3001               	movlw	1
 10440  11A6  00CD               	movwf	??___fldiv
 10441  11A7                     u6055:
 10442  11A7  1003               	clrc
 10443  11A8  0DC9               	rlf	___fldiv@b,f
 10444  11A9  0DCA               	rlf	___fldiv@b+1,f
 10445  11AA  0DCB               	rlf	___fldiv@b+2,f
 10446  11AB  0DCC               	rlf	___fldiv@b+3,f
 10447  11AC  0BCD               	decfsz	??___fldiv,f
 10448  11AD  29A7               	goto	u6055
 10449  11AE                     l3811:
 10450  11AE  1FDC               	btfss	___fldiv@grs+3,7
 10451  11AF  29B1               	goto	u6061
 10452  11B0  29B2               	goto	u6060
 10453  11B1                     u6061:
 10454  11B1  29B3               	goto	l3815
 10455  11B2                     u6060:
 10456  11B2                     l3813:
 10457  11B2  1449               	bsf	___fldiv@b,0
 10458  11B3                     l3815:
 10459  11B3  3001               	movlw	1
 10460  11B4  00CD               	movwf	??___fldiv
 10461  11B5                     u6075:
 10462  11B5  1003               	clrc
 10463  11B6  0DD9               	rlf	___fldiv@grs,f
 10464  11B7  0DDA               	rlf	___fldiv@grs+1,f
 10465  11B8  0DDB               	rlf	___fldiv@grs+2,f
 10466  11B9  0DDC               	rlf	___fldiv@grs+3,f
 10467  11BA  0BCD               	decfsz	??___fldiv,f
 10468  11BB  29B5               	goto	u6075
 10469  11BC                     l3817:
 10470  11BC  30FF               	movlw	255
 10471  11BD  07D7               	addwf	___fldiv@new_exp,f
 10472  11BE  1803               	skipnc
 10473  11BF  0AD8               	incf	___fldiv@new_exp+1,f
 10474  11C0  30FF               	movlw	255
 10475  11C1  07D8               	addwf	___fldiv@new_exp+1,f
 10476  11C2                     l3819:
 10477  11C2  1FCB               	btfss	___fldiv@b+2,7
 10478  11C3  29C5               	goto	u6081
 10479  11C4  29C6               	goto	u6080
 10480  11C5                     u6081:
 10481  11C5  29A5               	goto	l3809
 10482  11C6                     u6080:
 10483  11C6                     l3821:
 10484  11C6  01DE               	clrf	___fldiv@aexp
 10485  11C7                     l3823:
 10486  11C7  1FDC               	btfss	___fldiv@grs+3,7
 10487  11C8  29CA               	goto	u6091
 10488  11C9  29CB               	goto	u6090
 10489  11CA                     u6091:
 10490  11CA  29E7               	goto	l3831
 10491  11CB                     u6090:
 10492  11CB                     l3825:
 10493  11CB  30FF               	movlw	255
 10494  11CC  0559               	andwf	___fldiv@grs,w
 10495  11CD  00CD               	movwf	??___fldiv
 10496  11CE  30FF               	movlw	255
 10497  11CF  055A               	andwf	___fldiv@grs+1,w
 10498  11D0  00CE               	movwf	??___fldiv+1
 10499  11D1  30FF               	movlw	255
 10500  11D2  055B               	andwf	___fldiv@grs+2,w
 10501  11D3  00CF               	movwf	??___fldiv+2
 10502  11D4  307F               	movlw	127
 10503  11D5  055C               	andwf	___fldiv@grs+3,w
 10504  11D6  00D0               	movwf	??___fldiv+3
 10505  11D7  0850               	movf	??___fldiv+3,w
 10506  11D8  044F               	iorwf	??___fldiv+2,w
 10507  11D9  044E               	iorwf	??___fldiv+1,w
 10508  11DA  044D               	iorwf	??___fldiv,w
 10509  11DB  1903               	skipnz
 10510  11DC  29DE               	goto	u6101
 10511  11DD  29DF               	goto	u6100
 10512  11DE                     u6101:
 10513  11DE  29E2               	goto	l839
 10514  11DF                     u6100:
 10515  11DF                     l3827:
 10516  11DF  01DE               	clrf	___fldiv@aexp
 10517  11E0  0ADE               	incf	___fldiv@aexp,f
 10518  11E1  29E7               	goto	l3831
 10519  11E2                     l839:
 10520  11E2  1C49               	btfss	___fldiv@b,0
 10521  11E3  29E5               	goto	u6111
 10522  11E4  29E6               	goto	u6110
 10523  11E5                     u6111:
 10524  11E5  29E7               	goto	l3831
 10525  11E6                     u6110:
 10526  11E6  29DF               	goto	l3827
 10527  11E7                     l3831:
 10528  11E7  085E               	movf	___fldiv@aexp,w
 10529  11E8  1903               	btfsc	3,2
 10530  11E9  29EB               	goto	u6121
 10531  11EA  29EC               	goto	u6120
 10532  11EB                     u6121:
 10533  11EB  2A1D               	goto	l3841
 10534  11EC                     u6120:
 10535  11EC                     l3833:
 10536  11EC  3001               	movlw	1
 10537  11ED  07C9               	addwf	___fldiv@b,f
 10538  11EE  3000               	movlw	0
 10539  11EF  1803               	skipnc
 10540  11F0  3001               	movlw	1
 10541  11F1  07CA               	addwf	___fldiv@b+1,f
 10542  11F2  3000               	movlw	0
 10543  11F3  1803               	skipnc
 10544  11F4  3001               	movlw	1
 10545  11F5  07CB               	addwf	___fldiv@b+2,f
 10546  11F6  3000               	movlw	0
 10547  11F7  1803               	skipnc
 10548  11F8  3001               	movlw	1
 10549  11F9  07CC               	addwf	___fldiv@b+3,f
 10550  11FA                     l3835:
 10551  11FA  1C4C               	btfss	___fldiv@b+3,0
 10552  11FB  29FD               	goto	u6131
 10553  11FC  29FE               	goto	u6130
 10554  11FD                     u6131:
 10555  11FD  2A1D               	goto	l3841
 10556  11FE                     u6130:
 10557  11FE                     l3837:
 10558  11FE  0849               	movf	___fldiv@b,w
 10559  11FF  00CD               	movwf	??___fldiv
 10560  1200  084A               	movf	___fldiv@b+1,w
 10561  1201  00CE               	movwf	??___fldiv+1
 10562  1202  084B               	movf	___fldiv@b+2,w
 10563  1203  00CF               	movwf	??___fldiv+2
 10564  1204  084C               	movf	___fldiv@b+3,w
 10565  1205  00D0               	movwf	??___fldiv+3
 10566  1206  3001               	movlw	1
 10567  1207  00D1               	movwf	??___fldiv+4
 10568  1208                     u6145:
 10569  1208  0D50               	rlf	??___fldiv+3,w
 10570  1209  0CD0               	rrf	??___fldiv+3,f
 10571  120A  0CCF               	rrf	??___fldiv+2,f
 10572  120B  0CCE               	rrf	??___fldiv+1,f
 10573  120C  0CCD               	rrf	??___fldiv,f
 10574  120D                     u6140:
 10575  120D  0BD1               	decfsz	??___fldiv+4,f
 10576  120E  2A08               	goto	u6145
 10577  120F  0850               	movf	??___fldiv+3,w
 10578  1210  00CC               	movwf	___fldiv@b+3
 10579  1211  084F               	movf	??___fldiv+2,w
 10580  1212  00CB               	movwf	___fldiv@b+2
 10581  1213  084E               	movf	??___fldiv+1,w
 10582  1214  00CA               	movwf	___fldiv@b+1
 10583  1215  084D               	movf	??___fldiv,w
 10584  1216  00C9               	movwf	___fldiv@b
 10585  1217                     l3839:
 10586  1217  3001               	movlw	1
 10587  1218  07D7               	addwf	___fldiv@new_exp,f
 10588  1219  1803               	skipnc
 10589  121A  0AD8               	incf	___fldiv@new_exp+1,f
 10590  121B  3000               	movlw	0
 10591  121C  07D8               	addwf	___fldiv@new_exp+1,f
 10592  121D                     l3841:
 10593  121D  0858               	movf	___fldiv@new_exp+1,w
 10594  121E  3A80               	xorlw	128
 10595  121F  00FF               	movwf	btemp+1
 10596  1220  3080               	movlw	128
 10597  1221  027F               	subwf	btemp+1,w
 10598  1222  1D03               	skipz
 10599  1223  2A26               	goto	u6155
 10600  1224  30FF               	movlw	255
 10601  1225  0257               	subwf	___fldiv@new_exp,w
 10602  1226                     u6155:
 10603  1226  1C03               	skipc
 10604  1227  2A29               	goto	u6151
 10605  1228  2A2A               	goto	u6150
 10606  1229                     u6151:
 10607  1229  2A38               	goto	l3845
 10608  122A                     u6150:
 10609  122A                     l3843:
 10610  122A  30FF               	movlw	255
 10611  122B  1283               	bcf	3,5	;RP0=0, select bank0
 10612  122C  1303               	bcf	3,6	;RP1=0, select bank0
 10613  122D  00D7               	movwf	___fldiv@new_exp
 10614  122E  3000               	movlw	0
 10615  122F  00D8               	movwf	___fldiv@new_exp+1
 10616  1230  3000               	movlw	0
 10617  1231  00CC               	movwf	___fldiv@b+3
 10618  1232  3000               	movlw	0
 10619  1233  00CB               	movwf	___fldiv@b+2
 10620  1234  3000               	movlw	0
 10621  1235  00CA               	movwf	___fldiv@b+1
 10622  1236  3000               	movlw	0
 10623  1237  00C9               	movwf	___fldiv@b
 10624  1238                     l3845:
 10625  1238  1283               	bcf	3,5	;RP0=0, select bank0
 10626  1239  1303               	bcf	3,6	;RP1=0, select bank0
 10627  123A  0858               	movf	___fldiv@new_exp+1,w
 10628  123B  3A80               	xorlw	128
 10629  123C  00FF               	movwf	btemp+1
 10630  123D  3080               	movlw	128
 10631  123E  027F               	subwf	btemp+1,w
 10632  123F  1D03               	skipz
 10633  1240  2A43               	goto	u6165
 10634  1241  3001               	movlw	1
 10635  1242  0257               	subwf	___fldiv@new_exp,w
 10636  1243                     u6165:
 10637  1243  1803               	skipnc
 10638  1244  2A46               	goto	u6161
 10639  1245  2A47               	goto	u6160
 10640  1246                     u6161:
 10641  1246  2A54               	goto	l845
 10642  1247                     u6160:
 10643  1247                     l3847:
 10644  1247  1283               	bcf	3,5	;RP0=0, select bank0
 10645  1248  1303               	bcf	3,6	;RP1=0, select bank0
 10646  1249  01D7               	clrf	___fldiv@new_exp
 10647  124A  01D8               	clrf	___fldiv@new_exp+1
 10648  124B                     l3849:
 10649  124B  3000               	movlw	0
 10650  124C  00CC               	movwf	___fldiv@b+3
 10651  124D  3000               	movlw	0
 10652  124E  00CB               	movwf	___fldiv@b+2
 10653  124F  3000               	movlw	0
 10654  1250  00CA               	movwf	___fldiv@b+1
 10655  1251  3000               	movlw	0
 10656  1252  00C9               	movwf	___fldiv@b
 10657  1253                     l3851:
 10658  1253  01D6               	clrf	___fldiv@sign
 10659  1254                     l845:
 10660  1254  1283               	bcf	3,5	;RP0=0, select bank0
 10661  1255  1303               	bcf	3,6	;RP1=0, select bank0
 10662  1256  0857               	movf	___fldiv@new_exp,w
 10663  1257  00CD               	movwf	??___fldiv
 10664  1258  084D               	movf	??___fldiv,w
 10665  1259  00DD               	movwf	___fldiv@bexp
 10666  125A                     l3853:
 10667  125A  1C5D               	btfss	___fldiv@bexp,0
 10668  125B  2A5D               	goto	u6171
 10669  125C  2A5E               	goto	u6170
 10670  125D                     u6171:
 10671  125D  2A60               	goto	l3857
 10672  125E                     u6170:
 10673  125E                     l3855:
 10674  125E  17CB               	bsf	___fldiv@b+2,7
 10675  125F  2A64               	goto	l847
 10676  1260                     l3857:
 10677  1260  307F               	movlw	127
 10678  1261  00CD               	movwf	??___fldiv
 10679  1262  084D               	movf	??___fldiv,w
 10680  1263  05CB               	andwf	___fldiv@b+2,f
 10681  1264                     l847:
 10682  1264  085D               	movf	___fldiv@bexp,w
 10683  1265  00CD               	movwf	??___fldiv
 10684  1266  1003               	clrc
 10685  1267  0C4D               	rrf	??___fldiv,w
 10686  1268  00CE               	movwf	??___fldiv+1
 10687  1269  084E               	movf	??___fldiv+1,w
 10688  126A  00CC               	movwf	___fldiv@b+3
 10689  126B  0856               	movf	___fldiv@sign,w
 10690  126C  00CD               	movwf	??___fldiv
 10691  126D  084D               	movf	??___fldiv,w
 10692  126E  04CC               	iorwf	___fldiv@b+3,f
 10693  126F  2908               	goto	l3765
 10694  1270                     l825:
 10695  1270  0008               	return
 10696  1271                     __end_of___fldiv:
 10697                           
 10698                           	psect	text38
 10699  1DCB                     __ptext38:	
 10700 ;; *************** function _ADC_Config *****************
 10701 ;; Defined at:
 10702 ;;		line 31 in file "Config_ADC.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;  AN_num          1    wreg     unsigned char 
 10705 ;; Auto vars:     Size  Location     Type
 10706 ;;  AN_num          1    5[COMMON] unsigned char 
 10707 ;; Return value:  Size  Location     Type
 10708 ;;                  1    wreg      void 
 10709 ;; Registers used:
 10710 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10711 ;; Tracked objects:
 10712 ;;		On entry : 0/0
 10713 ;;		On exit  : 0/0
 10714 ;;		Unchanged: 0/0
 10715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10716 ;;      Params:         0       0       0       0       0
 10717 ;;      Locals:         1       0       0       0       0
 10718 ;;      Temps:          2       0       0       0       0
 10719 ;;      Totals:         3       0       0       0       0
 10720 ;;Total ram usage:        3 bytes
 10721 ;; Hardware stack levels used:    1
 10722 ;; Hardware stack levels required when called:    1
 10723 ;; This function calls:
 10724 ;;		Nothing
 10725 ;; This function is called by:
 10726 ;;		_ADC_channel1
 10727 ;;		_ADC_channel2
 10728 ;; This function uses a non-reentrant model
 10729 ;;
 10730                           
 10731                           
 10732                           ;psect for function _ADC_Config
 10733  1DCB                     _ADC_Config:
 10734                           
 10735                           ;incstack = 0
 10736                           ; Regs used in _ADC_Config: [wreg-fsr0h+status,2+status,0]
 10737                           ;ADC_Config@AN_num stored from wreg
 10738  1DCB  00F5               	movwf	ADC_Config@AN_num
 10739  1DCC                     l3429:
 10740                           
 10741                           ;Config_ADC.c: 33:     switch(AN_num){
 10742  1DCC  2E44               	goto	l3433
 10743  1DCD                     l205:	
 10744                           ;Config_ADC.c: 34:         case 0:
 10745                           
 10746                           
 10747                           ;Config_ADC.c: 35:             ADCON0bits.CHS3 = 0;
 10748  1DCD  1283               	bcf	3,5	;RP0=0, select bank0
 10749  1DCE  1303               	bcf	3,6	;RP1=0, select bank0
 10750  1DCF  129F               	bcf	31,5	;volatile
 10751                           
 10752                           ;Config_ADC.c: 36:             ADCON0bits.CHS2 = 0;
 10753  1DD0  121F               	bcf	31,4	;volatile
 10754                           
 10755                           ;Config_ADC.c: 37:             ADCON0bits.CHS1 = 0;
 10756  1DD1  119F               	bcf	31,3	;volatile
 10757                           
 10758                           ;Config_ADC.c: 38:             ADCON0bits.CHS0 = 0;
 10759  1DD2  111F               	bcf	31,2	;volatile
 10760                           
 10761                           ;Config_ADC.c: 39:             break;
 10762  1DD3  2E7E               	goto	l3435
 10763  1DD4                     l207:	
 10764                           ;Config_ADC.c: 40:         case 1:
 10765                           
 10766                           
 10767                           ;Config_ADC.c: 41:             ADCON0bits.CHS3 = 0;
 10768  1DD4  1283               	bcf	3,5	;RP0=0, select bank0
 10769  1DD5  1303               	bcf	3,6	;RP1=0, select bank0
 10770  1DD6  129F               	bcf	31,5	;volatile
 10771                           
 10772                           ;Config_ADC.c: 42:             ADCON0bits.CHS2 = 0;
 10773  1DD7  121F               	bcf	31,4	;volatile
 10774                           
 10775                           ;Config_ADC.c: 43:             ADCON0bits.CHS1 = 0;
 10776  1DD8  119F               	bcf	31,3	;volatile
 10777                           
 10778                           ;Config_ADC.c: 44:             ADCON0bits.CHS0 = 1;
 10779  1DD9  151F               	bsf	31,2	;volatile
 10780                           
 10781                           ;Config_ADC.c: 45:             break;
 10782  1DDA  2E7E               	goto	l3435
 10783  1DDB                     l208:	
 10784                           ;Config_ADC.c: 46:         case 2:
 10785                           
 10786                           
 10787                           ;Config_ADC.c: 47:             ADCON0bits.CHS3 = 0;
 10788  1DDB  1283               	bcf	3,5	;RP0=0, select bank0
 10789  1DDC  1303               	bcf	3,6	;RP1=0, select bank0
 10790  1DDD  129F               	bcf	31,5	;volatile
 10791                           
 10792                           ;Config_ADC.c: 48:             ADCON0bits.CHS2 = 0;
 10793  1DDE  121F               	bcf	31,4	;volatile
 10794                           
 10795                           ;Config_ADC.c: 49:             ADCON0bits.CHS1 = 1;
 10796  1DDF  159F               	bsf	31,3	;volatile
 10797                           
 10798                           ;Config_ADC.c: 50:             ADCON0bits.CHS0 = 0;
 10799  1DE0  111F               	bcf	31,2	;volatile
 10800                           
 10801                           ;Config_ADC.c: 51:             break;
 10802  1DE1  2E7E               	goto	l3435
 10803  1DE2                     l209:	
 10804                           ;Config_ADC.c: 52:         case 3:
 10805                           
 10806                           
 10807                           ;Config_ADC.c: 53:             ADCON0bits.CHS3 = 0;
 10808  1DE2  1283               	bcf	3,5	;RP0=0, select bank0
 10809  1DE3  1303               	bcf	3,6	;RP1=0, select bank0
 10810  1DE4  129F               	bcf	31,5	;volatile
 10811                           
 10812                           ;Config_ADC.c: 54:             ADCON0bits.CHS2 = 0;
 10813  1DE5  121F               	bcf	31,4	;volatile
 10814                           
 10815                           ;Config_ADC.c: 55:             ADCON0bits.CHS1 = 1;
 10816  1DE6  159F               	bsf	31,3	;volatile
 10817                           
 10818                           ;Config_ADC.c: 56:             ADCON0bits.CHS0 = 1;
 10819  1DE7  151F               	bsf	31,2	;volatile
 10820                           
 10821                           ;Config_ADC.c: 57:             break;
 10822  1DE8  2E7E               	goto	l3435
 10823  1DE9                     l210:	
 10824                           ;Config_ADC.c: 58:         case 4:
 10825                           
 10826                           
 10827                           ;Config_ADC.c: 59:             ADCON0bits.CHS3 = 0;
 10828  1DE9  1283               	bcf	3,5	;RP0=0, select bank0
 10829  1DEA  1303               	bcf	3,6	;RP1=0, select bank0
 10830  1DEB  129F               	bcf	31,5	;volatile
 10831                           
 10832                           ;Config_ADC.c: 60:             ADCON0bits.CHS2 = 1;
 10833  1DEC  161F               	bsf	31,4	;volatile
 10834                           
 10835                           ;Config_ADC.c: 61:             ADCON0bits.CHS1 = 0;
 10836  1DED  119F               	bcf	31,3	;volatile
 10837                           
 10838                           ;Config_ADC.c: 62:             ADCON0bits.CHS0 = 0;
 10839  1DEE  111F               	bcf	31,2	;volatile
 10840                           
 10841                           ;Config_ADC.c: 63:             break;
 10842  1DEF  2E7E               	goto	l3435
 10843  1DF0                     l211:	
 10844                           ;Config_ADC.c: 64:         case 5:
 10845                           
 10846                           
 10847                           ;Config_ADC.c: 65:             ADCON0bits.CHS3 = 0;
 10848  1DF0  1283               	bcf	3,5	;RP0=0, select bank0
 10849  1DF1  1303               	bcf	3,6	;RP1=0, select bank0
 10850  1DF2  129F               	bcf	31,5	;volatile
 10851                           
 10852                           ;Config_ADC.c: 66:             ADCON0bits.CHS2 = 1;
 10853  1DF3  161F               	bsf	31,4	;volatile
 10854                           
 10855                           ;Config_ADC.c: 67:             ADCON0bits.CHS1 = 0;
 10856  1DF4  119F               	bcf	31,3	;volatile
 10857                           
 10858                           ;Config_ADC.c: 68:             ADCON0bits.CHS0 = 1;
 10859  1DF5  151F               	bsf	31,2	;volatile
 10860                           
 10861                           ;Config_ADC.c: 69:             break;
 10862  1DF6  2E7E               	goto	l3435
 10863  1DF7                     l212:	
 10864                           ;Config_ADC.c: 70:         case 6:
 10865                           
 10866                           
 10867                           ;Config_ADC.c: 71:             ADCON0bits.CHS3 = 0;
 10868  1DF7  1283               	bcf	3,5	;RP0=0, select bank0
 10869  1DF8  1303               	bcf	3,6	;RP1=0, select bank0
 10870  1DF9  129F               	bcf	31,5	;volatile
 10871                           
 10872                           ;Config_ADC.c: 72:             ADCON0bits.CHS2 = 1;
 10873  1DFA  161F               	bsf	31,4	;volatile
 10874                           
 10875                           ;Config_ADC.c: 73:             ADCON0bits.CHS1 = 1;
 10876  1DFB  159F               	bsf	31,3	;volatile
 10877                           
 10878                           ;Config_ADC.c: 74:             ADCON0bits.CHS0 = 0;
 10879  1DFC  111F               	bcf	31,2	;volatile
 10880                           
 10881                           ;Config_ADC.c: 75:             break;
 10882  1DFD  2E7E               	goto	l3435
 10883  1DFE                     l213:	
 10884                           ;Config_ADC.c: 76:         case 7:
 10885                           
 10886                           
 10887                           ;Config_ADC.c: 77:             ADCON0bits.CHS3 = 0;
 10888  1DFE  1283               	bcf	3,5	;RP0=0, select bank0
 10889  1DFF  1303               	bcf	3,6	;RP1=0, select bank0
 10890  1E00  129F               	bcf	31,5	;volatile
 10891                           
 10892                           ;Config_ADC.c: 78:             ADCON0bits.CHS2 = 1;
 10893  1E01  161F               	bsf	31,4	;volatile
 10894                           
 10895                           ;Config_ADC.c: 79:             ADCON0bits.CHS1 = 1;
 10896  1E02  159F               	bsf	31,3	;volatile
 10897                           
 10898                           ;Config_ADC.c: 80:             ADCON0bits.CHS0 = 1;
 10899  1E03  151F               	bsf	31,2	;volatile
 10900                           
 10901                           ;Config_ADC.c: 81:             break;
 10902  1E04  2E7E               	goto	l3435
 10903  1E05                     l214:	
 10904                           ;Config_ADC.c: 82:         case 8:
 10905                           
 10906                           
 10907                           ;Config_ADC.c: 83:             ADCON0bits.CHS3 = 1;
 10908  1E05  1283               	bcf	3,5	;RP0=0, select bank0
 10909  1E06  1303               	bcf	3,6	;RP1=0, select bank0
 10910  1E07  169F               	bsf	31,5	;volatile
 10911                           
 10912                           ;Config_ADC.c: 84:             ADCON0bits.CHS2 = 0;
 10913  1E08  121F               	bcf	31,4	;volatile
 10914                           
 10915                           ;Config_ADC.c: 85:             ADCON0bits.CHS1 = 0;
 10916  1E09  119F               	bcf	31,3	;volatile
 10917                           
 10918                           ;Config_ADC.c: 86:             ADCON0bits.CHS0 = 0;
 10919  1E0A  111F               	bcf	31,2	;volatile
 10920                           
 10921                           ;Config_ADC.c: 87:             break;
 10922  1E0B  2E7E               	goto	l3435
 10923  1E0C                     l215:	
 10924                           ;Config_ADC.c: 88:         case 9:
 10925                           
 10926                           
 10927                           ;Config_ADC.c: 89:             ADCON0bits.CHS3 = 1;
 10928  1E0C  1283               	bcf	3,5	;RP0=0, select bank0
 10929  1E0D  1303               	bcf	3,6	;RP1=0, select bank0
 10930  1E0E  169F               	bsf	31,5	;volatile
 10931                           
 10932                           ;Config_ADC.c: 90:             ADCON0bits.CHS2 = 0;
 10933  1E0F  121F               	bcf	31,4	;volatile
 10934                           
 10935                           ;Config_ADC.c: 91:             ADCON0bits.CHS1 = 0;
 10936  1E10  119F               	bcf	31,3	;volatile
 10937                           
 10938                           ;Config_ADC.c: 92:             ADCON0bits.CHS0 = 1;
 10939  1E11  151F               	bsf	31,2	;volatile
 10940                           
 10941                           ;Config_ADC.c: 93:             break;
 10942  1E12  2E7E               	goto	l3435
 10943  1E13                     l216:	
 10944                           ;Config_ADC.c: 94:         case 10:
 10945                           
 10946                           
 10947                           ;Config_ADC.c: 95:             ADCON0bits.CHS3 = 1;
 10948  1E13  1283               	bcf	3,5	;RP0=0, select bank0
 10949  1E14  1303               	bcf	3,6	;RP1=0, select bank0
 10950  1E15  169F               	bsf	31,5	;volatile
 10951                           
 10952                           ;Config_ADC.c: 96:             ADCON0bits.CHS2 = 0;
 10953  1E16  121F               	bcf	31,4	;volatile
 10954                           
 10955                           ;Config_ADC.c: 97:             ADCON0bits.CHS1 = 1;
 10956  1E17  159F               	bsf	31,3	;volatile
 10957                           
 10958                           ;Config_ADC.c: 98:             ADCON0bits.CHS0 = 0;
 10959  1E18  111F               	bcf	31,2	;volatile
 10960                           
 10961                           ;Config_ADC.c: 99:             break;
 10962  1E19  2E7E               	goto	l3435
 10963  1E1A                     l217:	
 10964                           ;Config_ADC.c: 100:         case 11:
 10965                           
 10966                           
 10967                           ;Config_ADC.c: 101:             ADCON0bits.CHS3 = 1;
 10968  1E1A  1283               	bcf	3,5	;RP0=0, select bank0
 10969  1E1B  1303               	bcf	3,6	;RP1=0, select bank0
 10970  1E1C  169F               	bsf	31,5	;volatile
 10971                           
 10972                           ;Config_ADC.c: 102:             ADCON0bits.CHS2 = 0;
 10973  1E1D  121F               	bcf	31,4	;volatile
 10974                           
 10975                           ;Config_ADC.c: 103:             ADCON0bits.CHS1 = 1;
 10976  1E1E  159F               	bsf	31,3	;volatile
 10977                           
 10978                           ;Config_ADC.c: 104:             ADCON0bits.CHS0 = 1;
 10979  1E1F  151F               	bsf	31,2	;volatile
 10980                           
 10981                           ;Config_ADC.c: 105:             break;
 10982  1E20  2E7E               	goto	l3435
 10983  1E21                     l218:	
 10984                           ;Config_ADC.c: 106:         case 12:
 10985                           
 10986                           
 10987                           ;Config_ADC.c: 107:             ADCON0bits.CHS3 = 1;
 10988  1E21  1283               	bcf	3,5	;RP0=0, select bank0
 10989  1E22  1303               	bcf	3,6	;RP1=0, select bank0
 10990  1E23  169F               	bsf	31,5	;volatile
 10991                           
 10992                           ;Config_ADC.c: 108:             ADCON0bits.CHS2 = 1;
 10993  1E24  161F               	bsf	31,4	;volatile
 10994                           
 10995                           ;Config_ADC.c: 109:             ADCON0bits.CHS1 = 0;
 10996  1E25  119F               	bcf	31,3	;volatile
 10997                           
 10998                           ;Config_ADC.c: 110:             ADCON0bits.CHS0 = 0;
 10999  1E26  111F               	bcf	31,2	;volatile
 11000                           
 11001                           ;Config_ADC.c: 111:             break;
 11002  1E27  2E7E               	goto	l3435
 11003  1E28                     l219:	
 11004                           ;Config_ADC.c: 112:         case 13:
 11005                           
 11006                           
 11007                           ;Config_ADC.c: 113:             ADCON0bits.CHS3 = 1;
 11008  1E28  1283               	bcf	3,5	;RP0=0, select bank0
 11009  1E29  1303               	bcf	3,6	;RP1=0, select bank0
 11010  1E2A  169F               	bsf	31,5	;volatile
 11011                           
 11012                           ;Config_ADC.c: 114:             ADCON0bits.CHS2 = 1;
 11013  1E2B  161F               	bsf	31,4	;volatile
 11014                           
 11015                           ;Config_ADC.c: 115:             ADCON0bits.CHS1 = 0;
 11016  1E2C  119F               	bcf	31,3	;volatile
 11017                           
 11018                           ;Config_ADC.c: 116:             ADCON0bits.CHS0 = 1;
 11019  1E2D  151F               	bsf	31,2	;volatile
 11020                           
 11021                           ;Config_ADC.c: 117:             break;
 11022  1E2E  2E7E               	goto	l3435
 11023  1E2F                     l220:	
 11024                           ;Config_ADC.c: 118:         case 14:
 11025                           
 11026                           
 11027                           ;Config_ADC.c: 119:             ADCON0bits.CHS3 = 1;
 11028  1E2F  1283               	bcf	3,5	;RP0=0, select bank0
 11029  1E30  1303               	bcf	3,6	;RP1=0, select bank0
 11030  1E31  169F               	bsf	31,5	;volatile
 11031                           
 11032                           ;Config_ADC.c: 120:             ADCON0bits.CHS2 = 1;
 11033  1E32  161F               	bsf	31,4	;volatile
 11034                           
 11035                           ;Config_ADC.c: 121:             ADCON0bits.CHS1 = 1;
 11036  1E33  159F               	bsf	31,3	;volatile
 11037                           
 11038                           ;Config_ADC.c: 122:             ADCON0bits.CHS0 = 0;
 11039  1E34  111F               	bcf	31,2	;volatile
 11040                           
 11041                           ;Config_ADC.c: 123:             break;
 11042  1E35  2E7E               	goto	l3435
 11043  1E36                     l221:	
 11044                           ;Config_ADC.c: 124:         case 15:
 11045                           
 11046                           
 11047                           ;Config_ADC.c: 125:             ADCON0bits.CHS3 = 1;
 11048  1E36  1283               	bcf	3,5	;RP0=0, select bank0
 11049  1E37  1303               	bcf	3,6	;RP1=0, select bank0
 11050  1E38  169F               	bsf	31,5	;volatile
 11051                           
 11052                           ;Config_ADC.c: 126:             ADCON0bits.CHS2 = 1;
 11053  1E39  161F               	bsf	31,4	;volatile
 11054                           
 11055                           ;Config_ADC.c: 127:             ADCON0bits.CHS1 = 1;
 11056  1E3A  159F               	bsf	31,3	;volatile
 11057                           
 11058                           ;Config_ADC.c: 128:             ADCON0bits.CHS0 = 1;
 11059  1E3B  151F               	bsf	31,2	;volatile
 11060                           
 11061                           ;Config_ADC.c: 129:             break;
 11062  1E3C  2E7E               	goto	l3435
 11063  1E3D                     l222:	
 11064                           ;Config_ADC.c: 130:         default:
 11065                           
 11066                           
 11067                           ;Config_ADC.c: 131:             ADCON0bits.CHS3 = 0;
 11068  1E3D  1283               	bcf	3,5	;RP0=0, select bank0
 11069  1E3E  1303               	bcf	3,6	;RP1=0, select bank0
 11070  1E3F  129F               	bcf	31,5	;volatile
 11071                           
 11072                           ;Config_ADC.c: 132:             ADCON0bits.CHS2 = 0;
 11073  1E40  121F               	bcf	31,4	;volatile
 11074                           
 11075                           ;Config_ADC.c: 133:             ADCON0bits.CHS1 = 0;
 11076  1E41  119F               	bcf	31,3	;volatile
 11077                           
 11078                           ;Config_ADC.c: 134:             ADCON0bits.CHS0 = 0;
 11079  1E42  111F               	bcf	31,2	;volatile
 11080                           
 11081                           ;Config_ADC.c: 135:             break;
 11082  1E43  2E7E               	goto	l3435
 11083  1E44                     l3433:
 11084  1E44  0875               	movf	ADC_Config@AN_num,w
 11085  1E45  00F3               	movwf	??_ADC_Config
 11086  1E46  01F4               	clrf	??_ADC_Config+1
 11087                           
 11088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11089                           ; Switch size 1, requested type "simple"
 11090                           ; Number of cases is 1, Range of values is 0 to 0
 11091                           ; switch strategies available:
 11092                           ; Name         Instructions Cycles
 11093                           ; simple_byte            4     3 (average)
 11094                           ; direct_byte           11     8 (fixed)
 11095                           ; jumptable            260     6 (fixed)
 11096                           ;	Chosen strategy is simple_byte
 11097  1E47  0874               	movf	??_ADC_Config+1,w
 11098  1E48  3A00               	xorlw	0	; case 0
 11099  1E49  1903               	skipnz
 11100  1E4A  2E4C               	goto	l4937
 11101  1E4B  2E3D               	goto	l222
 11102  1E4C                     l4937:
 11103                           
 11104                           ; Switch size 1, requested type "simple"
 11105                           ; Number of cases is 16, Range of values is 0 to 15
 11106                           ; switch strategies available:
 11107                           ; Name         Instructions Cycles
 11108                           ; simple_byte           49    25 (average)
 11109                           ; direct_byte           56     8 (fixed)
 11110                           ; jumptable            260     6 (fixed)
 11111                           ;	Chosen strategy is simple_byte
 11112  1E4C  0873               	movf	??_ADC_Config,w
 11113  1E4D  3A00               	xorlw	0	; case 0
 11114  1E4E  1903               	skipnz
 11115  1E4F  2DCD               	goto	l205
 11116  1E50  3A01               	xorlw	1	; case 1
 11117  1E51  1903               	skipnz
 11118  1E52  2DD4               	goto	l207
 11119  1E53  3A03               	xorlw	3	; case 2
 11120  1E54  1903               	skipnz
 11121  1E55  2DDB               	goto	l208
 11122  1E56  3A01               	xorlw	1	; case 3
 11123  1E57  1903               	skipnz
 11124  1E58  2DE2               	goto	l209
 11125  1E59  3A07               	xorlw	7	; case 4
 11126  1E5A  1903               	skipnz
 11127  1E5B  2DE9               	goto	l210
 11128  1E5C  3A01               	xorlw	1	; case 5
 11129  1E5D  1903               	skipnz
 11130  1E5E  2DF0               	goto	l211
 11131  1E5F  3A03               	xorlw	3	; case 6
 11132  1E60  1903               	skipnz
 11133  1E61  2DF7               	goto	l212
 11134  1E62  3A01               	xorlw	1	; case 7
 11135  1E63  1903               	skipnz
 11136  1E64  2DFE               	goto	l213
 11137  1E65  3A0F               	xorlw	15	; case 8
 11138  1E66  1903               	skipnz
 11139  1E67  2E05               	goto	l214
 11140  1E68  3A01               	xorlw	1	; case 9
 11141  1E69  1903               	skipnz
 11142  1E6A  2E0C               	goto	l215
 11143  1E6B  3A03               	xorlw	3	; case 10
 11144  1E6C  1903               	skipnz
 11145  1E6D  2E13               	goto	l216
 11146  1E6E  3A01               	xorlw	1	; case 11
 11147  1E6F  1903               	skipnz
 11148  1E70  2E1A               	goto	l217
 11149  1E71  3A07               	xorlw	7	; case 12
 11150  1E72  1903               	skipnz
 11151  1E73  2E21               	goto	l218
 11152  1E74  3A01               	xorlw	1	; case 13
 11153  1E75  1903               	skipnz
 11154  1E76  2E28               	goto	l219
 11155  1E77  3A03               	xorlw	3	; case 14
 11156  1E78  1903               	skipnz
 11157  1E79  2E2F               	goto	l220
 11158  1E7A  3A01               	xorlw	1	; case 15
 11159  1E7B  1903               	skipnz
 11160  1E7C  2E36               	goto	l221
 11161  1E7D  2E3D               	goto	l222
 11162  1E7E                     l3435:
 11163                           
 11164                           ;Config_ADC.c: 137:     ADCON1 = 0b00000000;
 11165  1E7E  1683               	bsf	3,5	;RP0=1, select bank1
 11166  1E7F  1303               	bcf	3,6	;RP1=0, select bank1
 11167  1E80  019F               	clrf	31	;volatile
 11168  1E81                     l3437:
 11169                           
 11170                           ;Config_ADC.c: 138:     ADCON0bits.ADCS1 = 1;
 11171  1E81  1283               	bcf	3,5	;RP0=0, select bank0
 11172  1E82  1303               	bcf	3,6	;RP1=0, select bank0
 11173  1E83  179F               	bsf	31,7	;volatile
 11174  1E84                     l3439:
 11175                           
 11176                           ;Config_ADC.c: 139:     ADCON0bits.ADCS0 = 0;
 11177  1E84  131F               	bcf	31,6	;volatile
 11178  1E85                     l3441:
 11179                           
 11180                           ;Config_ADC.c: 140:     ADCON0bits.ADON = 1;
 11181  1E85  141F               	bsf	31,0	;volatile
 11182  1E86                     l223:
 11183  1E86  0008               	return
 11184  1E87                     __end_of_ADC_Config:
 11185                           
 11186                           	psect	text39
 11187  0000                     __ptext39:	
 11188 ;; *************** function _ISR *****************
 11189 ;; Defined at:
 11190 ;;		line 88 in file "pseudocodigo_lab3.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;		None
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;		None
 11195 ;; Return value:  Size  Location     Type
 11196 ;;                  1    wreg      void 
 11197 ;; Registers used:
 11198 ;;		wreg, status,2, status,0
 11199 ;; Tracked objects:
 11200 ;;		On entry : 0/0
 11201 ;;		On exit  : 0/0
 11202 ;;		Unchanged: 0/0
 11203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11204 ;;      Params:         0       0       0       0       0
 11205 ;;      Locals:         0       0       0       0       0
 11206 ;;      Temps:          3       0       0       0       0
 11207 ;;      Totals:         3       0       0       0       0
 11208 ;;Total ram usage:        3 bytes
 11209 ;; Hardware stack levels used:    1
 11210 ;; This function calls:
 11211 ;;		Nothing
 11212 ;; This function is called by:
 11213 ;;		Interrupt level 1
 11214 ;; This function uses a non-reentrant model
 11215 ;;
 11216                           
 11217                           
 11218                           ;psect for function _ISR
 11219  0000                     _ISR:
 11220  0000                     i1l2403:
 11221                           
 11222                           ;pseudocodigo_lab3.c: 90:     if (PIE1bits.TXIE && PIR1bits.TXIF){
 11223  0000  1683               	bsf	3,5	;RP0=1, select bank1
 11224  0001  1303               	bcf	3,6	;RP1=0, select bank1
 11225  0002  1E0C               	btfss	12,4	;volatile
 11226  0003  2805               	goto	u307_21
 11227  0004  2806               	goto	u307_20
 11228  0005                     u307_21:
 11229  0005  282B               	goto	i1l85
 11230  0006                     u307_20:
 11231  0006                     i1l2405:
 11232  0006  1283               	bcf	3,5	;RP0=0, select bank0
 11233  0007  1303               	bcf	3,6	;RP1=0, select bank0
 11234  0008  1E0C               	btfss	12,4	;volatile
 11235  0009  280B               	goto	u308_21
 11236  000A  280C               	goto	u308_20
 11237  000B                     u308_21:
 11238  000B  282B               	goto	i1l85
 11239  000C                     u308_20:
 11240  000C                     i1l2407:
 11241                           
 11242                           ;pseudocodigo_lab3.c: 91:         if (eusart_flag)
 11243  000C  0879               	movf	_eusart_flag,w
 11244  000D  1903               	btfsc	3,2
 11245  000E  2810               	goto	u309_21
 11246  000F  2811               	goto	u309_20
 11247  0010                     u309_21:
 11248  0010  2814               	goto	i1l2411
 11249  0011                     u309_20:
 11250  0011                     i1l2409:
 11251                           
 11252                           ;pseudocodigo_lab3.c: 92:         {;pseudocodigo_lab3.c: 93:             TXREG = 0b00001
      +                          111;
 11253  0011  300F               	movlw	15
 11254  0012  0099               	movwf	25	;volatile
 11255                           
 11256                           ;pseudocodigo_lab3.c: 94:         }
 11257  0013  2816               	goto	i1l2413
 11258  0014                     i1l2411:
 11259                           
 11260                           ;pseudocodigo_lab3.c: 96:         {;pseudocodigo_lab3.c: 97:             TXREG = 0b11110
      +                          000;
 11261  0014  30F0               	movlw	240
 11262  0015  0099               	movwf	25	;volatile
 11263  0016                     i1l2413:
 11264                           
 11265                           ;pseudocodigo_lab3.c: 99:         cont_usart++;
 11266  0016  3001               	movlw	1
 11267  0017  00F0               	movwf	??_ISR
 11268  0018  0870               	movf	??_ISR,w
 11269  0019  07F8               	addwf	_cont_usart,f
 11270  001A                     i1l2415:
 11271                           
 11272                           ;pseudocodigo_lab3.c: 101:         if (cont_usart == 5)
 11273  001A  3005               	movlw	5
 11274  001B  0678               	xorwf	_cont_usart,w
 11275  001C  1D03               	btfss	3,2
 11276  001D  281F               	goto	u310_21
 11277  001E  2820               	goto	u310_20
 11278  001F                     u310_21:
 11279  001F  282B               	goto	i1l85
 11280  0020                     u310_20:
 11281  0020                     i1l2417:
 11282                           
 11283                           ;pseudocodigo_lab3.c: 102:         {;pseudocodigo_lab3.c: 103:             eusart_flag =
      +                           !eusart_flag;
 11284  0020  0879               	movf	_eusart_flag,w
 11285  0021  1903               	btfsc	3,2
 11286  0022  2824               	goto	u311_21
 11287  0023  2826               	goto	u311_20
 11288  0024                     u311_21:
 11289  0024  3001               	movlw	1
 11290  0025  2827               	goto	u312_20
 11291  0026                     u311_20:
 11292  0026  3000               	movlw	0
 11293  0027                     u312_20:
 11294  0027  00F0               	movwf	??_ISR
 11295  0028  0870               	movf	??_ISR,w
 11296  0029  00F9               	movwf	_eusart_flag
 11297  002A                     i1l2419:
 11298                           
 11299                           ;pseudocodigo_lab3.c: 104:             cont_usart = 0;
 11300  002A  01F8               	clrf	_cont_usart
 11301  002B                     i1l85:
 11302  002B  0872               	movf	??_ISR+2,w
 11303  002C  008A               	movwf	10
 11304  002D  0E71               	swapf	??_ISR+1,w
 11305  002E  0083               	movwf	3
 11306  002F  0EFE               	swapf	btemp,f
 11307  0030  0E7E               	swapf	btemp,w
 11308  0031  0009               	retfie
 11309  0032                     __end_of_ISR:
 11310  007E                     btemp	set	126	;btemp
 11311  007E                     wtemp0	set	126
 11312                           
 11313                           	psect	intentry
 11314  0000                     __pintentry:	
 11315                           ;incstack = 0
 11316                           ; Regs used in _ISR: [wreg+status,2+status,0]
 11317                           
 11318  0000                     interrupt_function:
 11319  007E                     saved_w	set	btemp
 11320  0000  00FE               	movwf	btemp
 11321  0001  0E03               	swapf	3,w
 11322  0002  00F1               	movwf	??_ISR+1
 11323  0003  080A               	movf	10,w
 11324  0004  00F2               	movwf	??_ISR+2
 11325  0005  120A  118A  2800   	ljmp	_ISR
 11326                           
 11327                           	psect	config
 11328                           
 11329                           ;Config register CONFIG1 @ 0x2007
 11330                           ;	Oscillator Selection bits
 11331                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 11332                           ;	Watchdog Timer Enable bit
 11333                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11334                           ;	Power-up Timer Enable bit
 11335                           ;	PWRTE = OFF, PWRT disabled
 11336                           ;	RE3/MCLR pin function select bit
 11337                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11338                           ;	Code Protection bit
 11339                           ;	CP = OFF, Program memory code protection is disabled
 11340                           ;	Data Code Protection bit
 11341                           ;	CPD = OFF, Data memory code protection is disabled
 11342                           ;	Brown Out Reset Selection bits
 11343                           ;	BOREN = ON, BOR enabled
 11344                           ;	Internal External Switchover bit
 11345                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11346                           ;	Fail-Safe Clock Monitor Enabled bit
 11347                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11348                           ;	Low Voltage Programming Enable bit
 11349                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11350                           ;	In-Circuit Debugger Mode bit
 11351                           ;	DEBUG = 0x1, unprogrammed default
 11352  2007                     	org	8199
 11353  2007  23D2               	dw	9170
 11354                           
 11355                           ;Config register CONFIG2 @ 0x2008
 11356                           ;	Brown-out Reset Selection bit
 11357                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11358                           ;	Flash Program Memory Self Write Enable bits
 11359                           ;	WRT = OFF, Write protection off
 11360  2008                     	org	8200
 11361  2008  3FFF               	dw	16383
 11362                           
 11363                           	psect	text8_split_1
 11364  0230                     u7630:
 11365  0230                     l4625:
 11366  0230  1683               	bsf	3,5	;RP0=1, select bank1
 11367  0231  1303               	bcf	3,6	;RP1=0, select bank1
 11368  0232  084A               	movf	(sprintf@fval+3)^(0+128),w
 11369  0233  1283               	bcf	3,5	;RP0=0, select bank0
 11370  0234  1303               	bcf	3,6	;RP1=0, select bank0
 11371  0235  00A3               	movwf	___fleq@ff1+3
 11372  0236  1683               	bsf	3,5	;RP0=1, select bank1
 11373  0237  1303               	bcf	3,6	;RP1=0, select bank1
 11374  0238  0849               	movf	(sprintf@fval+2)^(0+128),w
 11375  0239  1283               	bcf	3,5	;RP0=0, select bank0
 11376  023A  1303               	bcf	3,6	;RP1=0, select bank0
 11377  023B  00A2               	movwf	___fleq@ff1+2
 11378  023C  1683               	bsf	3,5	;RP0=1, select bank1
 11379  023D  1303               	bcf	3,6	;RP1=0, select bank1
 11380  023E  0848               	movf	(sprintf@fval+1)^(0+128),w
 11381  023F  1283               	bcf	3,5	;RP0=0, select bank0
 11382  0240  1303               	bcf	3,6	;RP1=0, select bank0
 11383  0241  00A1               	movwf	___fleq@ff1+1
 11384  0242  1683               	bsf	3,5	;RP0=1, select bank1
 11385  0243  1303               	bcf	3,6	;RP1=0, select bank1
 11386  0244  0847               	movf	sprintf@fval^(0+128),w
 11387  0245  1283               	bcf	3,5	;RP0=0, select bank0
 11388  0246  1303               	bcf	3,6	;RP1=0, select bank0
 11389  0247  00A0               	movwf	___fleq@ff1
 11390  0248  3000               	movlw	0
 11391  0249  00A7               	movwf	___fleq@ff2+3
 11392  024A  3000               	movlw	0
 11393  024B  00A6               	movwf	___fleq@ff2+2
 11394  024C  3000               	movlw	0
 11395  024D  00A5               	movwf	___fleq@ff2+1
 11396  024E  3000               	movlw	0
 11397  024F  00A4               	movwf	___fleq@ff2
 11398  0250  160A  158A  2166  120A  118A  	fcall	___fleq
 11399  0255  1803               	btfsc	3,0
 11400  0256  2A58               	goto	u7641
 11401  0257  2A59               	goto	u7640
 11402  0258                     u7641:
 11403  0258  2B3B               	goto	l4645
 11404  0259                     u7640:
 11405  0259                     l4627:
 11406  0259  1683               	bsf	3,5	;RP0=1, select bank1
 11407  025A  1303               	bcf	3,6	;RP1=0, select bank1
 11408  025B  084A               	movf	(sprintf@fval+3)^(0+128),w
 11409  025C  1283               	bcf	3,5	;RP0=0, select bank0
 11410  025D  1303               	bcf	3,6	;RP1=0, select bank0
 11411  025E  00DB               	movwf	___fltol@f1+3
 11412  025F  1683               	bsf	3,5	;RP0=1, select bank1
 11413  0260  1303               	bcf	3,6	;RP1=0, select bank1
 11414  0261  0849               	movf	(sprintf@fval+2)^(0+128),w
 11415  0262  1283               	bcf	3,5	;RP0=0, select bank0
 11416  0263  1303               	bcf	3,6	;RP1=0, select bank0
 11417  0264  00DA               	movwf	___fltol@f1+2
 11418  0265  1683               	bsf	3,5	;RP0=1, select bank1
 11419  0266  1303               	bcf	3,6	;RP1=0, select bank1
 11420  0267  0848               	movf	(sprintf@fval+1)^(0+128),w
 11421  0268  1283               	bcf	3,5	;RP0=0, select bank0
 11422  0269  1303               	bcf	3,6	;RP1=0, select bank0
 11423  026A  00D9               	movwf	___fltol@f1+1
 11424  026B  1683               	bsf	3,5	;RP0=1, select bank1
 11425  026C  1303               	bcf	3,6	;RP1=0, select bank1
 11426  026D  0847               	movf	sprintf@fval^(0+128),w
 11427  026E  1283               	bcf	3,5	;RP0=0, select bank0
 11428  026F  1303               	bcf	3,6	;RP1=0, select bank0
 11429  0270  00D8               	movwf	___fltol@f1
 11430  0271  120A  158A  2002  120A  118A  	fcall	___fltol
 11431  0276  1283               	bcf	3,5	;RP0=0, select bank0
 11432  0277  1303               	bcf	3,6	;RP1=0, select bank0
 11433  0278  085B               	movf	?___fltol+3,w
 11434  0279  045A               	iorwf	?___fltol+2,w
 11435  027A  0459               	iorwf	?___fltol+1,w
 11436  027B  0458               	iorwf	?___fltol,w
 11437  027C  1D03               	skipz
 11438  027D  2A7F               	goto	u7651
 11439  027E  2A80               	goto	u7650
 11440  027F                     u7651:
 11441  027F  2B3B               	goto	l4645
 11442  0280                     u7650:
 11443  0280                     l4629:
 11444  0280  1683               	bsf	3,5	;RP0=1, select bank1
 11445  0281  1303               	bcf	3,6	;RP1=0, select bank1
 11446  0282  0846               	movf	(sprintf@eexp+1)^(0+128),w
 11447  0283  3A80               	xorlw	128
 11448  0284  00FF               	movwf	btemp+1
 11449  0285  3080               	movlw	128
 11450  0286  027F               	subwf	btemp+1,w
 11451  0287  1D03               	skipz
 11452  0288  2A8B               	goto	u7665
 11453  0289  3002               	movlw	2
 11454  028A  0245               	subwf	sprintf@eexp^(0+128),w
 11455  028B                     u7665:
 11456  028B  1C03               	skipc
 11457  028C  2A8E               	goto	u7661
 11458  028D  2A8F               	goto	u7660
 11459  028E                     u7661:
 11460  028E  2B3B               	goto	l4645
 11461  028F                     u7660:
 11462  028F                     l4631:
 11463                           
 11464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 11465  028F  1683               	bsf	3,5	;RP0=1, select bank1
 11466  0290  1303               	bcf	3,6	;RP1=0, select bank1
 11467  0291  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 11468  0292  1283               	bcf	3,5	;RP0=0, select bank0
 11469  0293  1303               	bcf	3,6	;RP1=0, select bank0
 11470  0294  00A3               	movwf	___flge@ff1+3
 11471  0295  1683               	bsf	3,5	;RP0=1, select bank1
 11472  0296  1303               	bcf	3,6	;RP1=0, select bank1
 11473  0297  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 11474  0298  1283               	bcf	3,5	;RP0=0, select bank0
 11475  0299  1303               	bcf	3,6	;RP1=0, select bank0
 11476  029A  00A2               	movwf	___flge@ff1+2
 11477  029B  1683               	bsf	3,5	;RP0=1, select bank1
 11478  029C  1303               	bcf	3,6	;RP1=0, select bank1
 11479  029D  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 11480  029E  1283               	bcf	3,5	;RP0=0, select bank0
 11481  029F  1303               	bcf	3,6	;RP1=0, select bank0
 11482  02A0  00A1               	movwf	___flge@ff1+1
 11483  02A1  1683               	bsf	3,5	;RP0=1, select bank1
 11484  02A2  1303               	bcf	3,6	;RP1=0, select bank1
 11485  02A3  0841               	movf	sprintf@tmpval^(0+128),w
 11486  02A4  1283               	bcf	3,5	;RP0=0, select bank0
 11487  02A5  1303               	bcf	3,6	;RP1=0, select bank0
 11488  02A6  00A0               	movwf	___flge@ff1
 11489  02A7  3040               	movlw	64
 11490  02A8  00A7               	movwf	___flge@ff2+3
 11491  02A9  3089               	movlw	137
 11492  02AA  00A6               	movwf	___flge@ff2+2
 11493  02AB  3070               	movlw	112
 11494  02AC  00A5               	movwf	___flge@ff2+1
 11495  02AD  305F               	movlw	95
 11496  02AE  00A4               	movwf	___flge@ff2
 11497  02AF  160A  158A  2527  120A  118A  	fcall	___flge
 11498  02B4  1803               	btfsc	3,0
 11499  02B5  2AB7               	goto	u7671
 11500  02B6  2AB8               	goto	u7670
 11501  02B7                     u7671:
 11502  02B7  2AC1               	goto	l4635
 11503  02B8                     u7670:
 11504  02B8                     l4633:
 11505                           
 11506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 11507  02B8  30F7               	movlw	247
 11508  02B9  1683               	bsf	3,5	;RP0=1, select bank1
 11509  02BA  1303               	bcf	3,6	;RP1=0, select bank1
 11510  02BB  07C5               	addwf	sprintf@eexp^(0+128),f
 11511  02BC  1803               	skipnc
 11512  02BD  0AC6               	incf	(sprintf@eexp+1)^(0+128),f
 11513  02BE  30FF               	movlw	255
 11514  02BF  07C6               	addwf	(sprintf@eexp+1)^(0+128),f
 11515                           
 11516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 11517  02C0  2AC9               	goto	l4637
 11518  02C1                     l4635:
 11519                           
 11520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 11521  02C1  30F8               	movlw	248
 11522  02C2  1683               	bsf	3,5	;RP0=1, select bank1
 11523  02C3  1303               	bcf	3,6	;RP1=0, select bank1
 11524  02C4  07C5               	addwf	sprintf@eexp^(0+128),f
 11525  02C5  1803               	skipnc
 11526  02C6  0AC6               	incf	(sprintf@eexp+1)^(0+128),f
 11527  02C7  30FF               	movlw	255
 11528  02C8  07C6               	addwf	(sprintf@eexp+1)^(0+128),f
 11529  02C9                     l4637:
 11530                           
 11531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 11532  02C9  0845               	movf	sprintf@eexp^(0+128),w
 11533  02CA  120A  158A  249D  120A  118A  	fcall	_scale
 11534  02CF  1283               	bcf	3,5	;RP0=0, select bank0
 11535  02D0  1303               	bcf	3,6	;RP1=0, select bank0
 11536  02D1  0848               	movf	?_scale+3,w
 11537  02D2  1683               	bsf	3,5	;RP0=1, select bank1
 11538  02D3  1303               	bcf	3,6	;RP1=0, select bank1
 11539  02D4  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 11540  02D5  1283               	bcf	3,5	;RP0=0, select bank0
 11541  02D6  1303               	bcf	3,6	;RP1=0, select bank0
 11542  02D7  0847               	movf	?_scale+2,w
 11543  02D8  1683               	bsf	3,5	;RP0=1, select bank1
 11544  02D9  1303               	bcf	3,6	;RP1=0, select bank1
 11545  02DA  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 11546  02DB  1283               	bcf	3,5	;RP0=0, select bank0
 11547  02DC  1303               	bcf	3,6	;RP1=0, select bank0
 11548  02DD  0846               	movf	?_scale+1,w
 11549  02DE  1683               	bsf	3,5	;RP0=1, select bank1
 11550  02DF  1303               	bcf	3,6	;RP1=0, select bank1
 11551  02E0  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 11552  02E1  1283               	bcf	3,5	;RP0=0, select bank0
 11553  02E2  1303               	bcf	3,6	;RP1=0, select bank0
 11554  02E3  0845               	movf	?_scale,w
 11555  02E4  1683               	bsf	3,5	;RP0=1, select bank1
 11556  02E5  1303               	bcf	3,6	;RP1=0, select bank1
 11557  02E6  00C1               	movwf	sprintf@tmpval^(0+128)
 11558  02E7                     l4639:
 11559  02E7  084A               	movf	(sprintf@fval+3)^(0+128),w
 11560  02E8  1283               	bcf	3,5	;RP0=0, select bank0
 11561  02E9  1303               	bcf	3,6	;RP1=0, select bank0
 11562  02EA  00A3               	movwf	__div_to_l_@f1+3
 11563  02EB  1683               	bsf	3,5	;RP0=1, select bank1
 11564  02EC  1303               	bcf	3,6	;RP1=0, select bank1
 11565  02ED  0849               	movf	(sprintf@fval+2)^(0+128),w
 11566  02EE  1283               	bcf	3,5	;RP0=0, select bank0
 11567  02EF  1303               	bcf	3,6	;RP1=0, select bank0
 11568  02F0  00A2               	movwf	__div_to_l_@f1+2
 11569  02F1  1683               	bsf	3,5	;RP0=1, select bank1
 11570  02F2  1303               	bcf	3,6	;RP1=0, select bank1
 11571  02F3  0848               	movf	(sprintf@fval+1)^(0+128),w
 11572  02F4  1283               	bcf	3,5	;RP0=0, select bank0
 11573  02F5  1303               	bcf	3,6	;RP1=0, select bank0
 11574  02F6  00A1               	movwf	__div_to_l_@f1+1
 11575  02F7  1683               	bsf	3,5	;RP0=1, select bank1
 11576  02F8  1303               	bcf	3,6	;RP1=0, select bank1
 11577  02F9  0847               	movf	sprintf@fval^(0+128),w
 11578  02FA  1283               	bcf	3,5	;RP0=0, select bank0
 11579  02FB  1303               	bcf	3,6	;RP1=0, select bank0
 11580  02FC  00A0               	movwf	__div_to_l_@f1
 11581  02FD  1683               	bsf	3,5	;RP0=1, select bank1
 11582  02FE  1303               	bcf	3,6	;RP1=0, select bank1
 11583  02FF  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 11584  0300  1283               	bcf	3,5	;RP0=0, select bank0
 11585  0301  1303               	bcf	3,6	;RP1=0, select bank0
 11586  0302  00A7               	movwf	__div_to_l_@f2+3
 11587  0303  1683               	bsf	3,5	;RP0=1, select bank1
 11588  0304  1303               	bcf	3,6	;RP1=0, select bank1
 11589  0305  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 11590  0306  1283               	bcf	3,5	;RP0=0, select bank0
 11591  0307  1303               	bcf	3,6	;RP1=0, select bank0
 11592  0308  00A6               	movwf	__div_to_l_@f2+2
 11593  0309  1683               	bsf	3,5	;RP0=1, select bank1
 11594  030A  1303               	bcf	3,6	;RP1=0, select bank1
 11595  030B  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 11596  030C  1283               	bcf	3,5	;RP0=0, select bank0
 11597  030D  1303               	bcf	3,6	;RP1=0, select bank0
 11598  030E  00A5               	movwf	__div_to_l_@f2+1
 11599  030F  1683               	bsf	3,5	;RP0=1, select bank1
 11600  0310  1303               	bcf	3,6	;RP1=0, select bank1
 11601  0311  0841               	movf	sprintf@tmpval^(0+128),w
 11602  0312  1283               	bcf	3,5	;RP0=0, select bank0
 11603  0313  1303               	bcf	3,6	;RP1=0, select bank0
 11604  0314  00A4               	movwf	__div_to_l_@f2
 11605  0315  120A  158A  207E  120A  118A  	fcall	__div_to_l_
 11606  031A  1283               	bcf	3,5	;RP0=0, select bank0
 11607  031B  1303               	bcf	3,6	;RP1=0, select bank0
 11608  031C  0823               	movf	?__div_to_l_+3,w
 11609  031D  1683               	bsf	3,5	;RP0=1, select bank1
 11610  031E  1303               	bcf	3,6	;RP1=0, select bank1
 11611  031F  00BC               	movwf	(sprintf@val+3)^(0+128)
 11612  0320  1283               	bcf	3,5	;RP0=0, select bank0
 11613  0321  1303               	bcf	3,6	;RP1=0, select bank0
 11614  0322  0822               	movf	?__div_to_l_+2,w
 11615  0323  1683               	bsf	3,5	;RP0=1, select bank1
 11616  0324  1303               	bcf	3,6	;RP1=0, select bank1
 11617  0325  00BB               	movwf	(sprintf@val+2)^(0+128)
 11618  0326  1283               	bcf	3,5	;RP0=0, select bank0
 11619  0327  1303               	bcf	3,6	;RP1=0, select bank0
 11620  0328  0821               	movf	?__div_to_l_+1,w
 11621  0329  1683               	bsf	3,5	;RP0=1, select bank1
 11622  032A  1303               	bcf	3,6	;RP1=0, select bank1
 11623  032B  00BA               	movwf	(sprintf@val+1)^(0+128)
 11624  032C  1283               	bcf	3,5	;RP0=0, select bank0
 11625  032D  1303               	bcf	3,6	;RP1=0, select bank0
 11626  032E  0820               	movf	?__div_to_l_,w
 11627  032F  1683               	bsf	3,5	;RP0=1, select bank1
 11628  0330  1303               	bcf	3,6	;RP1=0, select bank1
 11629  0331  00B9               	movwf	sprintf@val^(0+128)
 11630  0332                     l4643:
 11631                           
 11632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 11633  0332  3000               	movlw	0
 11634  0333  00CA               	movwf	(sprintf@fval+3)^(0+128)
 11635  0334  3000               	movlw	0
 11636  0335  00C9               	movwf	(sprintf@fval+2)^(0+128)
 11637  0336  3000               	movlw	0
 11638  0337  00C8               	movwf	(sprintf@fval+1)^(0+128)
 11639  0338  3000               	movlw	0
 11640  0339  00C7               	movwf	sprintf@fval^(0+128)
 11641                           
 11642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 11643  033A  2BA1               	goto	l4651
 11644  033B                     l4645:
 11645                           
 11646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 11647  033B  1683               	bsf	3,5	;RP0=1, select bank1
 11648  033C  1303               	bcf	3,6	;RP1=0, select bank1
 11649  033D  084A               	movf	(sprintf@fval+3)^(0+128),w
 11650  033E  1283               	bcf	3,5	;RP0=0, select bank0
 11651  033F  1303               	bcf	3,6	;RP1=0, select bank0
 11652  0340  00DB               	movwf	___fltol@f1+3
 11653  0341  1683               	bsf	3,5	;RP0=1, select bank1
 11654  0342  1303               	bcf	3,6	;RP1=0, select bank1
 11655  0343  0849               	movf	(sprintf@fval+2)^(0+128),w
 11656  0344  1283               	bcf	3,5	;RP0=0, select bank0
 11657  0345  1303               	bcf	3,6	;RP1=0, select bank0
 11658  0346  00DA               	movwf	___fltol@f1+2
 11659  0347  1683               	bsf	3,5	;RP0=1, select bank1
 11660  0348  1303               	bcf	3,6	;RP1=0, select bank1
 11661  0349  0848               	movf	(sprintf@fval+1)^(0+128),w
 11662  034A  1283               	bcf	3,5	;RP0=0, select bank0
 11663  034B  1303               	bcf	3,6	;RP1=0, select bank0
 11664  034C  00D9               	movwf	___fltol@f1+1
 11665  034D  1683               	bsf	3,5	;RP0=1, select bank1
 11666  034E  1303               	bcf	3,6	;RP1=0, select bank1
 11667  034F  0847               	movf	sprintf@fval^(0+128),w
 11668  0350  1283               	bcf	3,5	;RP0=0, select bank0
 11669  0351  1303               	bcf	3,6	;RP1=0, select bank0
 11670  0352  00D8               	movwf	___fltol@f1
 11671  0353  120A  158A  2002  120A  118A  	fcall	___fltol
 11672  0358  1283               	bcf	3,5	;RP0=0, select bank0
 11673  0359  1303               	bcf	3,6	;RP1=0, select bank0
 11674  035A  085B               	movf	?___fltol+3,w
 11675  035B  1683               	bsf	3,5	;RP0=1, select bank1
 11676  035C  1303               	bcf	3,6	;RP1=0, select bank1
 11677  035D  00BC               	movwf	(sprintf@val+3)^(0+128)
 11678  035E  1283               	bcf	3,5	;RP0=0, select bank0
 11679  035F  1303               	bcf	3,6	;RP1=0, select bank0
 11680  0360  085A               	movf	?___fltol+2,w
 11681  0361  1683               	bsf	3,5	;RP0=1, select bank1
 11682  0362  1303               	bcf	3,6	;RP1=0, select bank1
 11683  0363  00BB               	movwf	(sprintf@val+2)^(0+128)
 11684  0364  1283               	bcf	3,5	;RP0=0, select bank0
 11685  0365  1303               	bcf	3,6	;RP1=0, select bank0
 11686  0366  0859               	movf	?___fltol+1,w
 11687  0367  1683               	bsf	3,5	;RP0=1, select bank1
 11688  0368  1303               	bcf	3,6	;RP1=0, select bank1
 11689  0369  00BA               	movwf	(sprintf@val+1)^(0+128)
 11690  036A  1283               	bcf	3,5	;RP0=0, select bank0
 11691  036B  1303               	bcf	3,6	;RP1=0, select bank0
 11692  036C  0858               	movf	?___fltol,w
 11693  036D  1683               	bsf	3,5	;RP0=1, select bank1
 11694  036E  1303               	bcf	3,6	;RP1=0, select bank1
 11695  036F  00B9               	movwf	sprintf@val^(0+128)
 11696  0370                     l4647:
 11697                           
 11698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 11699  0370  083C               	movf	(sprintf@val+3)^(0+128),w
 11700  0371  00F6               	movwf	___xxtofl@val+3
 11701  0372  083B               	movf	(sprintf@val+2)^(0+128),w
 11702  0373  00F5               	movwf	___xxtofl@val+2
 11703  0374  083A               	movf	(sprintf@val+1)^(0+128),w
 11704  0375  00F4               	movwf	___xxtofl@val+1
 11705  0376  0839               	movf	sprintf@val^(0+128),w
 11706  0377  00F3               	movwf	___xxtofl@val
 11707  0378  3000               	movlw	0
 11708  0379  160A  158A  2687  120A  118A  	fcall	___xxtofl
 11709  037E  0876               	movf	?___xxtofl+3,w
 11710  037F  1683               	bsf	3,5	;RP0=1, select bank1
 11711  0380  1303               	bcf	3,6	;RP1=0, select bank1
 11712  0381  00A3               	movwf	(___flsub@a+3)^(0+128)
 11713  0382  0875               	movf	?___xxtofl+2,w
 11714  0383  00A2               	movwf	(___flsub@a+2)^(0+128)
 11715  0384  0874               	movf	?___xxtofl+1,w
 11716  0385  00A1               	movwf	(___flsub@a+1)^(0+128)
 11717  0386  0873               	movf	?___xxtofl,w
 11718  0387  00A0               	movwf	___flsub@a^(0+128)
 11719  0388  084A               	movf	(sprintf@fval+3)^(0+128),w
 11720  0389  00A7               	movwf	(___flsub@b+3)^(0+128)
 11721  038A  0849               	movf	(sprintf@fval+2)^(0+128),w
 11722  038B  00A6               	movwf	(___flsub@b+2)^(0+128)
 11723  038C  0848               	movf	(sprintf@fval+1)^(0+128),w
 11724  038D  00A5               	movwf	(___flsub@b+1)^(0+128)
 11725  038E  0847               	movf	sprintf@fval^(0+128),w
 11726  038F  00A4               	movwf	___flsub@b^(0+128)
 11727  0390  160A  158A  21B6  120A  118A  	fcall	___flsub
 11728  0395  1683               	bsf	3,5	;RP0=1, select bank1
 11729  0396  1303               	bcf	3,6	;RP1=0, select bank1
 11730  0397  0823               	movf	(?___flsub+3)^(0+128),w
 11731  0398  00CA               	movwf	(sprintf@fval+3)^(0+128)
 11732  0399  0822               	movf	(?___flsub+2)^(0+128),w
 11733  039A  00C9               	movwf	(sprintf@fval+2)^(0+128)
 11734  039B  0821               	movf	(?___flsub+1)^(0+128),w
 11735  039C  00C8               	movwf	(sprintf@fval+1)^(0+128)
 11736  039D  0820               	movf	?___flsub^(0+128),w
 11737  039E  00C7               	movwf	sprintf@fval^(0+128)
 11738  039F                     l4649:
 11739                           
 11740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 11741  039F  01C5               	clrf	sprintf@eexp^(0+128)
 11742  03A0  01C6               	clrf	(sprintf@eexp+1)^(0+128)
 11743  03A1                     l4651:
 11744                           
 11745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 11746  03A1  01CD               	clrf	sprintf@c^(0+128)
 11747  03A2  0ACD               	incf	sprintf@c^(0+128),f
 11748  03A3                     l4657:
 11749                           
 11750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 11751  03A3  084D               	movf	sprintf@c^(0+128),w
 11752  03A4  00AF               	movwf	??_sprintf^(0+128)
 11753  03A5  3001               	movlw	1
 11754  03A6                     u7685:
 11755  03A6  1003               	clrc
 11756  03A7  0DAF               	rlf	??_sprintf^(0+128),f
 11757  03A8  3EFF               	addlw	-1
 11758  03A9  1D03               	skipz
 11759  03AA  2BA6               	goto	u7685
 11760  03AB  1003               	clrc
 11761  03AC  0D2F               	rlf	??_sprintf^(0+128),w
 11762  03AD  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11763  03AE  0084               	movwf	4
 11764  03AF  160A  158A  200A  120A  118A  	fcall	stringdir
 11765  03B4  00B0               	movwf	(??_sprintf+1)^(0+128)
 11766  03B5  160A  158A  200A  120A  118A  	fcall	stringdir
 11767  03BA  00B1               	movwf	((??_sprintf+1)^(0+128)+1)
 11768  03BB  160A  158A  200A  120A  118A  	fcall	stringdir
 11769  03C0  00B2               	movwf	((??_sprintf+1)^(0+128)+2)
 11770  03C1  160A  158A  200A  120A  118A  	fcall	stringdir
 11771  03C6  00B3               	movwf	((??_sprintf+1)^(0+128)+3)
 11772  03C7  0833               	movf	(??_sprintf+4)^(0+128),w
 11773  03C8  023C               	subwf	(sprintf@val+3)^(0+128),w
 11774  03C9  1D03               	skipz
 11775  03CA  2BD5               	goto	u7695
 11776  03CB  0832               	movf	(??_sprintf+3)^(0+128),w
 11777  03CC  023B               	subwf	(sprintf@val+2)^(0+128),w
 11778  03CD  1D03               	skipz
 11779  03CE  2BD5               	goto	u7695
 11780  03CF  0831               	movf	(??_sprintf+2)^(0+128),w
 11781  03D0  023A               	subwf	(sprintf@val+1)^(0+128),w
 11782  03D1  1D03               	skipz
 11783  03D2  2BD5               	goto	u7695
 11784  03D3  0830               	movf	(??_sprintf+1)^(0+128),w
 11785  03D4  0239               	subwf	sprintf@val^(0+128),w
 11786  03D5                     u7695:
 11787  03D5  1803               	skipnc
 11788  03D6  2BD8               	goto	u7691
 11789  03D7  2BD9               	goto	u7690
 11790  03D8                     u7691:
 11791  03D8  2BDA               	goto	l4661
 11792  03D9                     u7690:
 11793  03D9  2BE4               	goto	l4663
 11794  03DA                     l4661:
 11795  03DA  3001               	movlw	1
 11796  03DB  00AF               	movwf	??_sprintf^(0+128)
 11797  03DC  082F               	movf	??_sprintf^(0+128),w
 11798  03DD  07CD               	addwf	sprintf@c^(0+128),f
 11799  03DE  300A               	movlw	10
 11800  03DF  064D               	xorwf	sprintf@c^(0+128),w
 11801  03E0  1D03               	btfss	3,2
 11802  03E1  2BE3               	goto	u7701
 11803  03E2  2BE4               	goto	u7700
 11804  03E3                     u7701:
 11805  03E3  2BA3               	goto	l4657
 11806  03E4                     u7700:
 11807  03E4                     l4663:
 11808                           
 11809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 11810  03E4  084D               	movf	sprintf@c^(0+128),w
 11811  03E5  074B               	addwf	sprintf@prec^(0+128),w
 11812  03E6  00AF               	movwf	??_sprintf^(0+128)
 11813  03E7  084C               	movf	(sprintf@prec+1)^(0+128),w
 11814  03E8  1803               	skipnc
 11815  03E9  0A4C               	incf	(sprintf@prec+1)^(0+128),w
 11816  03EA  00B0               	movwf	(??_sprintf^(0+128)+1)
 11817  03EB  0845               	movf	sprintf@eexp^(0+128),w
 11818  03EC  072F               	addwf	??_sprintf^(0+128),w
 11819  03ED  00B1               	movwf	(??_sprintf+2)^(0+128)
 11820  03EE  0846               	movf	(sprintf@eexp+1)^(0+128),w
 11821  03EF  1803               	skipnc
 11822  03F0  0A46               	incf	(sprintf@eexp+1)^(0+128),w
 11823  03F1  0730               	addwf	(??_sprintf+1)^(0+128),w
 11824  03F2  00B2               	movwf	(??_sprintf+3)^(0+128)
 11825  03F3  0831               	movf	(??_sprintf+2)^(0+128),w
 11826  03F4  02BF               	subwf	sprintf@width^(0+128),f
 11827  03F5  0832               	movf	(??_sprintf+3)^(0+128),w
 11828  03F6  1C03               	skipc
 11829  03F7  03C0               	decf	(sprintf@width+1)^(0+128),f
 11830  03F8  02C0               	subwf	(sprintf@width+1)^(0+128),f
 11831                           
 11832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 11833  03F9  084B               	movf	sprintf@prec^(0+128),w
 11834  03FA  044C               	iorwf	(sprintf@prec+1)^(0+128),w
 11835  03FB  1903               	btfsc	3,2
 11836  03FC  2BFE               	goto	u7711
 11837  03FD  2BFF               	goto	u7710
 11838  03FE                     u7711:
 11839  03FE  2C05               	goto	l4667
 11840  03FF                     u7710:
 11841  03FF                     l4665:
 11842                           
 11843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 11844  03FF  30FF               	movlw	255
 11845  0400  07BF               	addwf	sprintf@width^(0+128),f
 11846  0401  1803               	skipnc
 11847  0402  0AC0               	incf	(sprintf@width+1)^(0+128),f
 11848  0403  30FF               	movlw	255
 11849  0404  07C0               	addwf	(sprintf@width+1)^(0+128),f
 11850  0405                     l4667:
 11851                           
 11852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 11853  0405  3003               	movlw	3
 11854  0406  053D               	andwf	sprintf@flag^(0+128),w
 11855  0407  00AF               	movwf	??_sprintf^(0+128)
 11856  0408  3000               	movlw	0
 11857  0409  053E               	andwf	(sprintf@flag+1)^(0+128),w
 11858  040A  00B0               	movwf	(??_sprintf+1)^(0+128)
 11859  040B  082F               	movf	??_sprintf^(0+128),w
 11860  040C  0430               	iorwf	(??_sprintf^(0+128)+1),w
 11861  040D  1903               	btfsc	3,2
 11862  040E  2C10               	goto	u7721
 11863  040F  2C11               	goto	u7720
 11864  0410                     u7721:
 11865  0410  2C2A               	goto	l4677
 11866  0411                     u7720:
 11867  0411                     l4669:
 11868                           
 11869                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 11870  0411  30FF               	movlw	255
 11871  0412  07BF               	addwf	sprintf@width^(0+128),f
 11872  0413  1803               	skipnc
 11873  0414  0AC0               	incf	(sprintf@width+1)^(0+128),f
 11874  0415  30FF               	movlw	255
 11875  0416  07C0               	addwf	(sprintf@width+1)^(0+128),f
 11876  0417  2C2A               	goto	l4677
 11877  0418                     l4671:
 11878                           
 11879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 11880  0418  3020               	movlw	32
 11881  0419  1683               	bsf	3,5	;RP0=1, select bank1
 11882  041A  1303               	bcf	3,6	;RP1=0, select bank1
 11883  041B  00AF               	movwf	??_sprintf^(0+128)
 11884  041C  0828               	movf	sprintf@sp^(0+128),w
 11885  041D  0084               	movwf	4
 11886  041E  1783               	bsf	3,7
 11887  041F  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 11888  0420  1383               	bcf	3,7
 11889  0421  082F               	movf	??_sprintf^(0+128),w
 11890  0422  0080               	movwf	0
 11891  0423                     l4673:
 11892  0423  3001               	movlw	1
 11893  0424  07A8               	addwf	sprintf@sp^(0+128),f
 11894  0425  1803               	skipnc
 11895  0426  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 11896  0427  3000               	movlw	0
 11897  0428  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 11898  0429  2C11               	goto	l4669
 11899  042A                     l4677:
 11900                           
 11901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 11902  042A  0840               	movf	(sprintf@width+1)^(0+128),w
 11903  042B  3A80               	xorlw	128
 11904  042C  00FF               	movwf	btemp+1
 11905  042D  3080               	movlw	128
 11906  042E  027F               	subwf	btemp+1,w
 11907  042F  1D03               	skipz
 11908  0430  2C33               	goto	u7735
 11909  0431  3001               	movlw	1
 11910  0432  023F               	subwf	sprintf@width^(0+128),w
 11911  0433                     u7735:
 11912  0433  1803               	skipnc
 11913  0434  2C36               	goto	u7731
 11914  0435  2C37               	goto	u7730
 11915  0436                     u7731:
 11916  0436  2C18               	goto	l4671
 11917  0437                     u7730:
 11918  0437                     l4679:
 11919                           
 11920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 11921  0437  3003               	movlw	3
 11922  0438  1683               	bsf	3,5	;RP0=1, select bank1
 11923  0439  1303               	bcf	3,6	;RP1=0, select bank1
 11924  043A  053D               	andwf	sprintf@flag^(0+128),w
 11925  043B  00AF               	movwf	??_sprintf^(0+128)
 11926  043C  3000               	movlw	0
 11927  043D  053E               	andwf	(sprintf@flag+1)^(0+128),w
 11928  043E  00B0               	movwf	(??_sprintf+1)^(0+128)
 11929  043F  082F               	movf	??_sprintf^(0+128),w
 11930  0440  0430               	iorwf	(??_sprintf^(0+128)+1),w
 11931  0441  1903               	btfsc	3,2
 11932  0442  2C44               	goto	u7741
 11933  0443  2C45               	goto	u7740
 11934  0444                     u7741:
 11935  0444  2CFA               	goto	l4693
 11936  0445                     u7740:
 11937  0445                     l4681:
 11938                           
 11939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 11940  0445  302D               	movlw	45
 11941  0446  00AF               	movwf	??_sprintf^(0+128)
 11942  0447  0828               	movf	sprintf@sp^(0+128),w
 11943  0448  0084               	movwf	4
 11944  0449  1783               	bsf	3,7
 11945  044A  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 11946  044B  1383               	bcf	3,7
 11947  044C  082F               	movf	??_sprintf^(0+128),w
 11948  044D  0080               	movwf	0
 11949  044E                     l4683:
 11950  044E  3001               	movlw	1
 11951  044F  07A8               	addwf	sprintf@sp^(0+128),f
 11952  0450  1803               	skipnc
 11953  0451  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 11954  0452  3000               	movlw	0
 11955  0453  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 11956  0454  2CFA               	goto	l4693
 11957  0455                     l4685:
 11958                           
 11959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 11960  0455  084D               	movf	sprintf@c^(0+128),w
 11961  0456  00AF               	movwf	??_sprintf^(0+128)
 11962  0457  3001               	movlw	1
 11963  0458                     u7755:
 11964  0458  1003               	clrc
 11965  0459  0DAF               	rlf	??_sprintf^(0+128),f
 11966  045A  3EFF               	addlw	-1
 11967  045B  1D03               	skipz
 11968  045C  2C58               	goto	u7755
 11969  045D  1003               	clrc
 11970  045E  0D2F               	rlf	??_sprintf^(0+128),w
 11971  045F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11972  0460  0084               	movwf	4
 11973  0461  160A  158A  200A  120A  118A  	fcall	stringdir
 11974  0466  1283               	bcf	3,5	;RP0=0, select bank0
 11975  0467  1303               	bcf	3,6	;RP1=0, select bank0
 11976  0468  00A0               	movwf	___lldiv@divisor
 11977  0469  160A  158A  200A  120A  118A  	fcall	stringdir
 11978  046E  00A1               	movwf	___lldiv@divisor+1
 11979  046F  160A  158A  200A  120A  118A  	fcall	stringdir
 11980  0474  00A2               	movwf	___lldiv@divisor+2
 11981  0475  160A  158A  200A  120A  118A  	fcall	stringdir
 11982  047A  00A3               	movwf	___lldiv@divisor+3
 11983  047B  1683               	bsf	3,5	;RP0=1, select bank1
 11984  047C  1303               	bcf	3,6	;RP1=0, select bank1
 11985  047D  083C               	movf	(sprintf@val+3)^(0+128),w
 11986  047E  1283               	bcf	3,5	;RP0=0, select bank0
 11987  047F  1303               	bcf	3,6	;RP1=0, select bank0
 11988  0480  00A7               	movwf	___lldiv@dividend+3
 11989  0481  1683               	bsf	3,5	;RP0=1, select bank1
 11990  0482  1303               	bcf	3,6	;RP1=0, select bank1
 11991  0483  083B               	movf	(sprintf@val+2)^(0+128),w
 11992  0484  1283               	bcf	3,5	;RP0=0, select bank0
 11993  0485  1303               	bcf	3,6	;RP1=0, select bank0
 11994  0486  00A6               	movwf	___lldiv@dividend+2
 11995  0487  1683               	bsf	3,5	;RP0=1, select bank1
 11996  0488  1303               	bcf	3,6	;RP1=0, select bank1
 11997  0489  083A               	movf	(sprintf@val+1)^(0+128),w
 11998  048A  1283               	bcf	3,5	;RP0=0, select bank0
 11999  048B  1303               	bcf	3,6	;RP1=0, select bank0
 12000  048C  00A5               	movwf	___lldiv@dividend+1
 12001  048D  1683               	bsf	3,5	;RP0=1, select bank1
 12002  048E  1303               	bcf	3,6	;RP1=0, select bank1
 12003  048F  0839               	movf	sprintf@val^(0+128),w
 12004  0490  1283               	bcf	3,5	;RP0=0, select bank0
 12005  0491  1303               	bcf	3,6	;RP1=0, select bank0
 12006  0492  00A4               	movwf	___lldiv@dividend
 12007  0493  160A  158A  2379  120A  118A  	fcall	___lldiv
 12008  0498  1283               	bcf	3,5	;RP0=0, select bank0
 12009  0499  1303               	bcf	3,6	;RP1=0, select bank0
 12010  049A  0823               	movf	?___lldiv+3,w
 12011  049B  1683               	bsf	3,5	;RP0=1, select bank1
 12012  049C  1303               	bcf	3,6	;RP1=0, select bank1
 12013  049D  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 12014  049E  1283               	bcf	3,5	;RP0=0, select bank0
 12015  049F  1303               	bcf	3,6	;RP1=0, select bank0
 12016  04A0  0822               	movf	?___lldiv+2,w
 12017  04A1  1683               	bsf	3,5	;RP0=1, select bank1
 12018  04A2  1303               	bcf	3,6	;RP1=0, select bank1
 12019  04A3  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 12020  04A4  1283               	bcf	3,5	;RP0=0, select bank0
 12021  04A5  1303               	bcf	3,6	;RP1=0, select bank0
 12022  04A6  0821               	movf	?___lldiv+1,w
 12023  04A7  1683               	bsf	3,5	;RP0=1, select bank1
 12024  04A8  1303               	bcf	3,6	;RP1=0, select bank1
 12025  04A9  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 12026  04AA  1283               	bcf	3,5	;RP0=0, select bank0
 12027  04AB  1303               	bcf	3,6	;RP1=0, select bank0
 12028  04AC  0820               	movf	?___lldiv,w
 12029  04AD  1683               	bsf	3,5	;RP0=1, select bank1
 12030  04AE  1303               	bcf	3,6	;RP1=0, select bank1
 12031  04AF  00C1               	movwf	sprintf@tmpval^(0+128)
 12032  04B0                     l4687:
 12033                           
 12034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 12035  04B0  3000               	movlw	0
 12036  04B1  1283               	bcf	3,5	;RP0=0, select bank0
 12037  04B2  1303               	bcf	3,6	;RP1=0, select bank0
 12038  04B3  00A3               	movwf	___llmod@divisor+3
 12039  04B4  3000               	movlw	0
 12040  04B5  00A2               	movwf	___llmod@divisor+2
 12041  04B6  3000               	movlw	0
 12042  04B7  00A1               	movwf	___llmod@divisor+1
 12043  04B8  300A               	movlw	10
 12044  04B9  00A0               	movwf	___llmod@divisor
 12045  04BA  1683               	bsf	3,5	;RP0=1, select bank1
 12046  04BB  1303               	bcf	3,6	;RP1=0, select bank1
 12047  04BC  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 12048  04BD  1283               	bcf	3,5	;RP0=0, select bank0
 12049  04BE  1303               	bcf	3,6	;RP1=0, select bank0
 12050  04BF  00A7               	movwf	___llmod@dividend+3
 12051  04C0  1683               	bsf	3,5	;RP0=1, select bank1
 12052  04C1  1303               	bcf	3,6	;RP1=0, select bank1
 12053  04C2  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 12054  04C3  1283               	bcf	3,5	;RP0=0, select bank0
 12055  04C4  1303               	bcf	3,6	;RP1=0, select bank0
 12056  04C5  00A6               	movwf	___llmod@dividend+2
 12057  04C6  1683               	bsf	3,5	;RP0=1, select bank1
 12058  04C7  1303               	bcf	3,6	;RP1=0, select bank1
 12059  04C8  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 12060  04C9  1283               	bcf	3,5	;RP0=0, select bank0
 12061  04CA  1303               	bcf	3,6	;RP1=0, select bank0
 12062  04CB  00A5               	movwf	___llmod@dividend+1
 12063  04CC  1683               	bsf	3,5	;RP0=1, select bank1
 12064  04CD  1303               	bcf	3,6	;RP1=0, select bank1
 12065  04CE  0841               	movf	sprintf@tmpval^(0+128),w
 12066  04CF  1283               	bcf	3,5	;RP0=0, select bank0
 12067  04D0  1303               	bcf	3,6	;RP1=0, select bank0
 12068  04D1  00A4               	movwf	___llmod@dividend
 12069  04D2  160A  158A  2206  120A  118A  	fcall	___llmod
 12070  04D7  1283               	bcf	3,5	;RP0=0, select bank0
 12071  04D8  1303               	bcf	3,6	;RP1=0, select bank0
 12072  04D9  0823               	movf	?___llmod+3,w
 12073  04DA  1683               	bsf	3,5	;RP0=1, select bank1
 12074  04DB  1303               	bcf	3,6	;RP1=0, select bank1
 12075  04DC  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 12076  04DD  1283               	bcf	3,5	;RP0=0, select bank0
 12077  04DE  1303               	bcf	3,6	;RP1=0, select bank0
 12078  04DF  0822               	movf	?___llmod+2,w
 12079  04E0  1683               	bsf	3,5	;RP0=1, select bank1
 12080  04E1  1303               	bcf	3,6	;RP1=0, select bank1
 12081  04E2  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 12082  04E3  1283               	bcf	3,5	;RP0=0, select bank0
 12083  04E4  1303               	bcf	3,6	;RP1=0, select bank0
 12084  04E5  0821               	movf	?___llmod+1,w
 12085  04E6  1683               	bsf	3,5	;RP0=1, select bank1
 12086  04E7  1303               	bcf	3,6	;RP1=0, select bank1
 12087  04E8  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 12088  04E9  1283               	bcf	3,5	;RP0=0, select bank0
 12089  04EA  1303               	bcf	3,6	;RP1=0, select bank0
 12090  04EB  0820               	movf	?___llmod,w
 12091  04EC  1683               	bsf	3,5	;RP0=1, select bank1
 12092  04ED  1303               	bcf	3,6	;RP1=0, select bank1
 12093  04EE  00C1               	movwf	sprintf@tmpval^(0+128)
 12094  04EF                     l4689:
 12095                           
 12096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 12097  04EF  0841               	movf	sprintf@tmpval^(0+128),w
 12098  04F0  3E30               	addlw	48
 12099  04F1  00AF               	movwf	??_sprintf^(0+128)
 12100  04F2  0828               	movf	sprintf@sp^(0+128),w
 12101  04F3  0084               	movwf	4
 12102  04F4  1783               	bsf	3,7
 12103  04F5  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 12104  04F6  1383               	bcf	3,7
 12105  04F7  082F               	movf	??_sprintf^(0+128),w
 12106  04F8  0080               	movwf	0
 12107  04F9  2C4E               	goto	l4683
 12108  04FA                     l4693:
 12109                           
 12110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 12111  04FA  3001               	movlw	1
 12112  04FB  02CD               	subwf	sprintf@c^(0+128),f
 12113  04FC  0A4D               	incf	sprintf@c^(0+128),w
 12114  04FD  1D03               	btfss	3,2
 12115  04FE  2D00               	goto	u7761
 12116  04FF  2D01               	goto	u7760
 12117  0500                     u7761:
 12118  0500  2C55               	goto	l4685
 12119  0501                     u7760:
 12120  0501  2D19               	goto	l4701
 12121  0502                     l4695:
 12122                           
 12123                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 12124  0502  3030               	movlw	48
 12125  0503  1683               	bsf	3,5	;RP0=1, select bank1
 12126  0504  1303               	bcf	3,6	;RP1=0, select bank1
 12127  0505  00AF               	movwf	??_sprintf^(0+128)
 12128  0506  0828               	movf	sprintf@sp^(0+128),w
 12129  0507  0084               	movwf	4
 12130  0508  1783               	bsf	3,7
 12131  0509  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 12132  050A  1383               	bcf	3,7
 12133  050B  082F               	movf	??_sprintf^(0+128),w
 12134  050C  0080               	movwf	0
 12135  050D                     l4697:
 12136  050D  3001               	movlw	1
 12137  050E  07A8               	addwf	sprintf@sp^(0+128),f
 12138  050F  1803               	skipnc
 12139  0510  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 12140  0511  3000               	movlw	0
 12141  0512  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 12142  0513                     l4699:
 12143                           
 12144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 12145  0513  30FF               	movlw	255
 12146  0514  07C5               	addwf	sprintf@eexp^(0+128),f
 12147  0515  1803               	skipnc
 12148  0516  0AC6               	incf	(sprintf@eexp+1)^(0+128),f
 12149  0517  30FF               	movlw	255
 12150  0518  07C6               	addwf	(sprintf@eexp+1)^(0+128),f
 12151  0519                     l4701:
 12152                           
 12153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 12154  0519  0846               	movf	(sprintf@eexp+1)^(0+128),w
 12155  051A  3A80               	xorlw	128
 12156  051B  00FF               	movwf	btemp+1
 12157  051C  3080               	movlw	128
 12158  051D  027F               	subwf	btemp+1,w
 12159  051E  1D03               	skipz
 12160  051F  2D22               	goto	u7775
 12161  0520  3001               	movlw	1
 12162  0521  0245               	subwf	sprintf@eexp^(0+128),w
 12163  0522                     u7775:
 12164  0522  1803               	skipnc
 12165  0523  2D25               	goto	u7771
 12166  0524  2D26               	goto	u7770
 12167  0525                     u7771:
 12168  0525  2D02               	goto	l4695
 12169  0526                     u7770:
 12170  0526                     l4703:
 12171                           
 12172                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 12173  0526  1683               	bsf	3,5	;RP0=1, select bank1
 12174  0527  1303               	bcf	3,6	;RP1=0, select bank1
 12175  0528  084C               	movf	(sprintf@prec+1)^(0+128),w
 12176  0529  3A80               	xorlw	128
 12177  052A  00FF               	movwf	btemp+1
 12178  052B  3080               	movlw	128
 12179  052C  027F               	subwf	btemp+1,w
 12180  052D  1D03               	skipz
 12181  052E  2D31               	goto	u7785
 12182  052F  3009               	movlw	9
 12183  0530  024B               	subwf	sprintf@prec^(0+128),w
 12184  0531                     u7785:
 12185  0531  1C03               	skipc
 12186  0532  2D34               	goto	u7781
 12187  0533  2D35               	goto	u7780
 12188  0534                     u7781:
 12189  0534  2D3C               	goto	l4707
 12190  0535                     u7780:
 12191  0535                     l4705:
 12192                           
 12193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 12194  0535  3008               	movlw	8
 12195  0536  1683               	bsf	3,5	;RP0=1, select bank1
 12196  0537  1303               	bcf	3,6	;RP1=0, select bank1
 12197  0538  00AF               	movwf	??_sprintf^(0+128)
 12198  0539  082F               	movf	??_sprintf^(0+128),w
 12199  053A  00CD               	movwf	sprintf@c^(0+128)
 12200  053B  2D42               	goto	l413
 12201  053C                     l4707:
 12202                           
 12203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 12204  053C  1683               	bsf	3,5	;RP0=1, select bank1
 12205  053D  1303               	bcf	3,6	;RP1=0, select bank1
 12206  053E  084B               	movf	sprintf@prec^(0+128),w
 12207  053F  00AF               	movwf	??_sprintf^(0+128)
 12208  0540  082F               	movf	??_sprintf^(0+128),w
 12209  0541  00CD               	movwf	sprintf@c^(0+128)
 12210  0542                     l413:
 12211                           
 12212                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 12213  0542  084D               	movf	sprintf@c^(0+128),w
 12214  0543  00AF               	movwf	??_sprintf^(0+128)
 12215  0544  01B0               	clrf	(??_sprintf^(0+128)+1)
 12216  0545  082F               	movf	??_sprintf^(0+128),w
 12217  0546  02CB               	subwf	sprintf@prec^(0+128),f
 12218  0547  0830               	movf	(??_sprintf+1)^(0+128),w
 12219  0548  1C03               	skipc
 12220  0549  03CC               	decf	(sprintf@prec+1)^(0+128),f
 12221  054A  02CC               	subwf	(sprintf@prec+1)^(0+128),f
 12222  054B                     l4709:
 12223                           
 12224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 12225  054B  084D               	movf	sprintf@c^(0+128),w
 12226  054C  1903               	btfsc	3,2
 12227  054D  2D4F               	goto	u7791
 12228  054E  2D50               	goto	u7790
 12229  054F                     u7791:
 12230  054F  2D5F               	goto	l4715
 12231  0550                     u7790:
 12232  0550                     l4711:
 12233                           
 12234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 12235  0550  302E               	movlw	46
 12236  0551  00AF               	movwf	??_sprintf^(0+128)
 12237  0552  0828               	movf	sprintf@sp^(0+128),w
 12238  0553  0084               	movwf	4
 12239  0554  1783               	bsf	3,7
 12240  0555  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 12241  0556  1383               	bcf	3,7
 12242  0557  082F               	movf	??_sprintf^(0+128),w
 12243  0558  0080               	movwf	0
 12244  0559                     l4713:
 12245  0559  3001               	movlw	1
 12246  055A  07A8               	addwf	sprintf@sp^(0+128),f
 12247  055B  1803               	skipnc
 12248  055C  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 12249  055D  3000               	movlw	0
 12250  055E  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 12251  055F                     l4715:
 12252                           
 12253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 12254  055F  084D               	movf	sprintf@c^(0+128),w
 12255  0560  120A  158A  249D  120A  118A  	fcall	_scale
 12256  0565  1283               	bcf	3,5	;RP0=0, select bank0
 12257  0566  1303               	bcf	3,6	;RP1=0, select bank0
 12258  0567  0848               	movf	?_scale+3,w
 12259  0568  1683               	bsf	3,5	;RP0=1, select bank1
 12260  0569  1303               	bcf	3,6	;RP1=0, select bank1
 12261  056A  00B7               	movwf	(_sprintf$1236+3)^(0+128)
 12262  056B  1283               	bcf	3,5	;RP0=0, select bank0
 12263  056C  1303               	bcf	3,6	;RP1=0, select bank0
 12264  056D  0847               	movf	?_scale+2,w
 12265  056E  1683               	bsf	3,5	;RP0=1, select bank1
 12266  056F  1303               	bcf	3,6	;RP1=0, select bank1
 12267  0570  00B6               	movwf	(_sprintf$1236+2)^(0+128)
 12268  0571  1283               	bcf	3,5	;RP0=0, select bank0
 12269  0572  1303               	bcf	3,6	;RP1=0, select bank0
 12270  0573  0846               	movf	?_scale+1,w
 12271  0574  1683               	bsf	3,5	;RP0=1, select bank1
 12272  0575  1303               	bcf	3,6	;RP1=0, select bank1
 12273  0576  00B5               	movwf	(_sprintf$1236+1)^(0+128)
 12274  0577  1283               	bcf	3,5	;RP0=0, select bank0
 12275  0578  1303               	bcf	3,6	;RP1=0, select bank0
 12276  0579  0845               	movf	?_scale,w
 12277  057A  1683               	bsf	3,5	;RP0=1, select bank1
 12278  057B  1303               	bcf	3,6	;RP1=0, select bank1
 12279  057C  00B4               	movwf	_sprintf$1236^(0+128)
 12280                           
 12281                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 12282  057D  0837               	movf	(_sprintf$1236+3)^(0+128),w
 12283  057E  1283               	bcf	3,5	;RP0=0, select bank0
 12284  057F  1303               	bcf	3,6	;RP1=0, select bank0
 12285  0580  00B2               	movwf	___flmul@a+3
 12286  0581  1683               	bsf	3,5	;RP0=1, select bank1
 12287  0582  1303               	bcf	3,6	;RP1=0, select bank1
 12288  0583  0836               	movf	(_sprintf$1236+2)^(0+128),w
 12289  0584  1283               	bcf	3,5	;RP0=0, select bank0
 12290  0585  1303               	bcf	3,6	;RP1=0, select bank0
 12291  0586  00B1               	movwf	___flmul@a+2
 12292  0587  1683               	bsf	3,5	;RP0=1, select bank1
 12293  0588  1303               	bcf	3,6	;RP1=0, select bank1
 12294  0589  0835               	movf	(_sprintf$1236+1)^(0+128),w
 12295  058A  1283               	bcf	3,5	;RP0=0, select bank0
 12296  058B  1303               	bcf	3,6	;RP1=0, select bank0
 12297  058C  00B0               	movwf	___flmul@a+1
 12298  058D  1683               	bsf	3,5	;RP0=1, select bank1
 12299  058E  1303               	bcf	3,6	;RP1=0, select bank1
 12300  058F  0834               	movf	_sprintf$1236^(0+128),w
 12301  0590  1283               	bcf	3,5	;RP0=0, select bank0
 12302  0591  1303               	bcf	3,6	;RP1=0, select bank0
 12303  0592  00AF               	movwf	___flmul@a
 12304  0593  1683               	bsf	3,5	;RP0=1, select bank1
 12305  0594  1303               	bcf	3,6	;RP1=0, select bank1
 12306  0595  084A               	movf	(sprintf@fval+3)^(0+128),w
 12307  0596  1283               	bcf	3,5	;RP0=0, select bank0
 12308  0597  1303               	bcf	3,6	;RP1=0, select bank0
 12309  0598  00AE               	movwf	___flmul@b+3
 12310  0599  1683               	bsf	3,5	;RP0=1, select bank1
 12311  059A  1303               	bcf	3,6	;RP1=0, select bank1
 12312  059B  0849               	movf	(sprintf@fval+2)^(0+128),w
 12313  059C  1283               	bcf	3,5	;RP0=0, select bank0
 12314  059D  1303               	bcf	3,6	;RP1=0, select bank0
 12315  059E  00AD               	movwf	___flmul@b+2
 12316  059F  1683               	bsf	3,5	;RP0=1, select bank1
 12317  05A0  1303               	bcf	3,6	;RP1=0, select bank1
 12318  05A1  0848               	movf	(sprintf@fval+1)^(0+128),w
 12319  05A2  1283               	bcf	3,5	;RP0=0, select bank0
 12320  05A3  1303               	bcf	3,6	;RP1=0, select bank0
 12321  05A4  00AC               	movwf	___flmul@b+1
 12322  05A5  1683               	bsf	3,5	;RP0=1, select bank1
 12323  05A6  1303               	bcf	3,6	;RP1=0, select bank1
 12324  05A7  0847               	movf	sprintf@fval^(0+128),w
 12325  05A8  1283               	bcf	3,5	;RP0=0, select bank0
 12326  05A9  1303               	bcf	3,6	;RP1=0, select bank0
 12327  05AA  00AB               	movwf	___flmul@b
 12328  05AB  120A  158A  213C  120A  118A  	fcall	___flmul
 12329  05B0  1283               	bcf	3,5	;RP0=0, select bank0
 12330  05B1  1303               	bcf	3,6	;RP1=0, select bank0
 12331  05B2  082E               	movf	?___flmul+3,w
 12332  05B3  00DB               	movwf	___fltol@f1+3
 12333  05B4  082D               	movf	?___flmul+2,w
 12334  05B5  00DA               	movwf	___fltol@f1+2
 12335  05B6  082C               	movf	?___flmul+1,w
 12336  05B7  00D9               	movwf	___fltol@f1+1
 12337  05B8  082B               	movf	?___flmul,w
 12338  05B9  00D8               	movwf	___fltol@f1
 12339  05BA  120A  158A  2002  120A  118A  	fcall	___fltol
 12340  05BF  1283               	bcf	3,5	;RP0=0, select bank0
 12341  05C0  1303               	bcf	3,6	;RP1=0, select bank0
 12342  05C1  085B               	movf	?___fltol+3,w
 12343  05C2  1683               	bsf	3,5	;RP0=1, select bank1
 12344  05C3  1303               	bcf	3,6	;RP1=0, select bank1
 12345  05C4  00BC               	movwf	(sprintf@val+3)^(0+128)
 12346  05C5  1283               	bcf	3,5	;RP0=0, select bank0
 12347  05C6  1303               	bcf	3,6	;RP1=0, select bank0
 12348  05C7  085A               	movf	?___fltol+2,w
 12349  05C8  1683               	bsf	3,5	;RP0=1, select bank1
 12350  05C9  1303               	bcf	3,6	;RP1=0, select bank1
 12351  05CA  00BB               	movwf	(sprintf@val+2)^(0+128)
 12352  05CB  1283               	bcf	3,5	;RP0=0, select bank0
 12353  05CC  1303               	bcf	3,6	;RP1=0, select bank0
 12354  05CD  0859               	movf	?___fltol+1,w
 12355  05CE  1683               	bsf	3,5	;RP0=1, select bank1
 12356  05CF  1303               	bcf	3,6	;RP1=0, select bank1
 12357  05D0  00BA               	movwf	(sprintf@val+1)^(0+128)
 12358  05D1  1283               	bcf	3,5	;RP0=0, select bank0
 12359  05D2  1303               	bcf	3,6	;RP1=0, select bank0
 12360  05D3  0858               	movf	?___fltol,w
 12361  05D4  1683               	bsf	3,5	;RP0=1, select bank1
 12362  05D5  1303               	bcf	3,6	;RP1=0, select bank1
 12363  05D6  00B9               	movwf	sprintf@val^(0+128)
 12364                           
 12365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 12366  05D7  2EDD               	goto	l4727
 12367  05D8                     l4717:
 12368                           
 12369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 12370  05D8  084D               	movf	sprintf@c^(0+128),w
 12371  05D9  00AF               	movwf	??_sprintf^(0+128)
 12372  05DA  3001               	movlw	1
 12373  05DB                     u7805:
 12374  05DB  1003               	clrc
 12375  05DC  0DAF               	rlf	??_sprintf^(0+128),f
 12376  05DD  3EFF               	addlw	-1
 12377  05DE  1D03               	skipz
 12378  05DF  2DDB               	goto	u7805
 12379  05E0  1003               	clrc
 12380  05E1  0D2F               	rlf	??_sprintf^(0+128),w
 12381  05E2  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 12382  05E3  0084               	movwf	4
 12383  05E4  160A  158A  200A  120A  118A  	fcall	stringdir
 12384  05E9  1283               	bcf	3,5	;RP0=0, select bank0
 12385  05EA  1303               	bcf	3,6	;RP1=0, select bank0
 12386  05EB  00A0               	movwf	___lldiv@divisor
 12387  05EC  160A  158A  200A  120A  118A  	fcall	stringdir
 12388  05F1  00A1               	movwf	___lldiv@divisor+1
 12389  05F2  160A  158A  200A  120A  118A  	fcall	stringdir
 12390  05F7  00A2               	movwf	___lldiv@divisor+2
 12391  05F8  160A  158A  200A  120A  118A  	fcall	stringdir
 12392  05FD  00A3               	movwf	___lldiv@divisor+3
 12393  05FE  1683               	bsf	3,5	;RP0=1, select bank1
 12394  05FF  1303               	bcf	3,6	;RP1=0, select bank1
 12395  0600  083C               	movf	(sprintf@val+3)^(0+128),w
 12396  0601  1283               	bcf	3,5	;RP0=0, select bank0
 12397  0602  1303               	bcf	3,6	;RP1=0, select bank0
 12398  0603  00A7               	movwf	___lldiv@dividend+3
 12399  0604  1683               	bsf	3,5	;RP0=1, select bank1
 12400  0605  1303               	bcf	3,6	;RP1=0, select bank1
 12401  0606  083B               	movf	(sprintf@val+2)^(0+128),w
 12402  0607  1283               	bcf	3,5	;RP0=0, select bank0
 12403  0608  1303               	bcf	3,6	;RP1=0, select bank0
 12404  0609  00A6               	movwf	___lldiv@dividend+2
 12405  060A  1683               	bsf	3,5	;RP0=1, select bank1
 12406  060B  1303               	bcf	3,6	;RP1=0, select bank1
 12407  060C  083A               	movf	(sprintf@val+1)^(0+128),w
 12408  060D  1283               	bcf	3,5	;RP0=0, select bank0
 12409  060E  1303               	bcf	3,6	;RP1=0, select bank0
 12410  060F  00A5               	movwf	___lldiv@dividend+1
 12411  0610  1683               	bsf	3,5	;RP0=1, select bank1
 12412  0611  1303               	bcf	3,6	;RP1=0, select bank1
 12413  0612  0839               	movf	sprintf@val^(0+128),w
 12414  0613  1283               	bcf	3,5	;RP0=0, select bank0
 12415  0614  1303               	bcf	3,6	;RP1=0, select bank0
 12416  0615  00A4               	movwf	___lldiv@dividend
 12417  0616  160A  158A  2379  120A  118A  	fcall	___lldiv
 12418  061B  1283               	bcf	3,5	;RP0=0, select bank0
 12419  061C  1303               	bcf	3,6	;RP1=0, select bank0
 12420  061D  0823               	movf	?___lldiv+3,w
 12421  061E  1683               	bsf	3,5	;RP0=1, select bank1
 12422  061F  1303               	bcf	3,6	;RP1=0, select bank1
 12423  0620  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 12424  0621  1283               	bcf	3,5	;RP0=0, select bank0
 12425  0622  1303               	bcf	3,6	;RP1=0, select bank0
 12426  0623  0822               	movf	?___lldiv+2,w
 12427  0624  1683               	bsf	3,5	;RP0=1, select bank1
 12428  0625  1303               	bcf	3,6	;RP1=0, select bank1
 12429  0626  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 12430  0627  1283               	bcf	3,5	;RP0=0, select bank0
 12431  0628  1303               	bcf	3,6	;RP1=0, select bank0
 12432  0629  0821               	movf	?___lldiv+1,w
 12433  062A  1683               	bsf	3,5	;RP0=1, select bank1
 12434  062B  1303               	bcf	3,6	;RP1=0, select bank1
 12435  062C  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 12436  062D  1283               	bcf	3,5	;RP0=0, select bank0
 12437  062E  1303               	bcf	3,6	;RP1=0, select bank0
 12438  062F  0820               	movf	?___lldiv,w
 12439  0630  1683               	bsf	3,5	;RP0=1, select bank1
 12440  0631  1303               	bcf	3,6	;RP1=0, select bank1
 12441  0632  00C1               	movwf	sprintf@tmpval^(0+128)
 12442  0633                     l4719:
 12443                           
 12444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 12445  0633  3000               	movlw	0
 12446  0634  1283               	bcf	3,5	;RP0=0, select bank0
 12447  0635  1303               	bcf	3,6	;RP1=0, select bank0
 12448  0636  00A3               	movwf	___llmod@divisor+3
 12449  0637  3000               	movlw	0
 12450  0638  00A2               	movwf	___llmod@divisor+2
 12451  0639  3000               	movlw	0
 12452  063A  00A1               	movwf	___llmod@divisor+1
 12453  063B  300A               	movlw	10
 12454  063C  00A0               	movwf	___llmod@divisor
 12455  063D  1683               	bsf	3,5	;RP0=1, select bank1
 12456  063E  1303               	bcf	3,6	;RP1=0, select bank1
 12457  063F  0844               	movf	(sprintf@tmpval+3)^(0+128),w
 12458  0640  1283               	bcf	3,5	;RP0=0, select bank0
 12459  0641  1303               	bcf	3,6	;RP1=0, select bank0
 12460  0642  00A7               	movwf	___llmod@dividend+3
 12461  0643  1683               	bsf	3,5	;RP0=1, select bank1
 12462  0644  1303               	bcf	3,6	;RP1=0, select bank1
 12463  0645  0843               	movf	(sprintf@tmpval+2)^(0+128),w
 12464  0646  1283               	bcf	3,5	;RP0=0, select bank0
 12465  0647  1303               	bcf	3,6	;RP1=0, select bank0
 12466  0648  00A6               	movwf	___llmod@dividend+2
 12467  0649  1683               	bsf	3,5	;RP0=1, select bank1
 12468  064A  1303               	bcf	3,6	;RP1=0, select bank1
 12469  064B  0842               	movf	(sprintf@tmpval+1)^(0+128),w
 12470  064C  1283               	bcf	3,5	;RP0=0, select bank0
 12471  064D  1303               	bcf	3,6	;RP1=0, select bank0
 12472  064E  00A5               	movwf	___llmod@dividend+1
 12473  064F  1683               	bsf	3,5	;RP0=1, select bank1
 12474  0650  1303               	bcf	3,6	;RP1=0, select bank1
 12475  0651  0841               	movf	sprintf@tmpval^(0+128),w
 12476  0652  1283               	bcf	3,5	;RP0=0, select bank0
 12477  0653  1303               	bcf	3,6	;RP1=0, select bank0
 12478  0654  00A4               	movwf	___llmod@dividend
 12479  0655  160A  158A  2206  120A  118A  	fcall	___llmod
 12480  065A  1283               	bcf	3,5	;RP0=0, select bank0
 12481  065B  1303               	bcf	3,6	;RP1=0, select bank0
 12482  065C  0823               	movf	?___llmod+3,w
 12483  065D  1683               	bsf	3,5	;RP0=1, select bank1
 12484  065E  1303               	bcf	3,6	;RP1=0, select bank1
 12485  065F  00C4               	movwf	(sprintf@tmpval+3)^(0+128)
 12486  0660  1283               	bcf	3,5	;RP0=0, select bank0
 12487  0661  1303               	bcf	3,6	;RP1=0, select bank0
 12488  0662  0822               	movf	?___llmod+2,w
 12489  0663  1683               	bsf	3,5	;RP0=1, select bank1
 12490  0664  1303               	bcf	3,6	;RP1=0, select bank1
 12491  0665  00C3               	movwf	(sprintf@tmpval+2)^(0+128)
 12492  0666  1283               	bcf	3,5	;RP0=0, select bank0
 12493  0667  1303               	bcf	3,6	;RP1=0, select bank0
 12494  0668  0821               	movf	?___llmod+1,w
 12495  0669  1683               	bsf	3,5	;RP0=1, select bank1
 12496  066A  1303               	bcf	3,6	;RP1=0, select bank1
 12497  066B  00C2               	movwf	(sprintf@tmpval+1)^(0+128)
 12498  066C  1283               	bcf	3,5	;RP0=0, select bank0
 12499  066D  1303               	bcf	3,6	;RP1=0, select bank0
 12500  066E  0820               	movf	?___llmod,w
 12501  066F  1683               	bsf	3,5	;RP0=1, select bank1
 12502  0670  1303               	bcf	3,6	;RP1=0, select bank1
 12503  0671  00C1               	movwf	sprintf@tmpval^(0+128)
 12504  0672                     l4721:
 12505                           
 12506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 12507  0672  0841               	movf	sprintf@tmpval^(0+128),w
 12508  0673  3E30               	addlw	48
 12509  0674  00AF               	movwf	??_sprintf^(0+128)
 12510  0675  0828               	movf	sprintf@sp^(0+128),w
 12511  0676  0084               	movwf	4
 12512  0677  1783               	bsf	3,7
 12513  0678  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 12514  0679  1383               	bcf	3,7
 12515  067A  082F               	movf	??_sprintf^(0+128),w
 12516  067B  0080               	movwf	0
 12517  067C                     l4723:
 12518  067C  3001               	movlw	1
 12519  067D  07A8               	addwf	sprintf@sp^(0+128),f
 12520  067E  1803               	skipnc
 12521  067F  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 12522  0680  3000               	movlw	0
 12523  0681  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 12524  0682                     l4725:
 12525                           
 12526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 12527  0682  084D               	movf	sprintf@c^(0+128),w
 12528  0683  00AF               	movwf	??_sprintf^(0+128)
 12529  0684  3001               	movlw	1
 12530  0685                     u7815:
 12531  0685  1003               	clrc
 12532  0686  0DAF               	rlf	??_sprintf^(0+128),f
 12533  0687  3EFF               	addlw	-1
 12534  0688  1D03               	skipz
 12535  0689  2E85               	goto	u7815
 12536  068A  1003               	clrc
 12537  068B  0D2F               	rlf	??_sprintf^(0+128),w
 12538  068C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 12539  068D  0084               	movwf	4
 12540  068E  160A  158A  200A  120A  118A  	fcall	stringdir
 12541  0693  1283               	bcf	3,5	;RP0=0, select bank0
 12542  0694  1303               	bcf	3,6	;RP1=0, select bank0
 12543  0695  00A0               	movwf	___llmod@divisor
 12544  0696  160A  158A  200A  120A  118A  	fcall	stringdir
 12545  069B  00A1               	movwf	___llmod@divisor+1
 12546  069C  160A  158A  200A  120A  118A  	fcall	stringdir
 12547  06A1  00A2               	movwf	___llmod@divisor+2
 12548  06A2  160A  158A  200A  120A  118A  	fcall	stringdir
 12549  06A7  00A3               	movwf	___llmod@divisor+3
 12550  06A8  1683               	bsf	3,5	;RP0=1, select bank1
 12551  06A9  1303               	bcf	3,6	;RP1=0, select bank1
 12552  06AA  083C               	movf	(sprintf@val+3)^(0+128),w
 12553  06AB  1283               	bcf	3,5	;RP0=0, select bank0
 12554  06AC  1303               	bcf	3,6	;RP1=0, select bank0
 12555  06AD  00A7               	movwf	___llmod@dividend+3
 12556  06AE  1683               	bsf	3,5	;RP0=1, select bank1
 12557  06AF  1303               	bcf	3,6	;RP1=0, select bank1
 12558  06B0  083B               	movf	(sprintf@val+2)^(0+128),w
 12559  06B1  1283               	bcf	3,5	;RP0=0, select bank0
 12560  06B2  1303               	bcf	3,6	;RP1=0, select bank0
 12561  06B3  00A6               	movwf	___llmod@dividend+2
 12562  06B4  1683               	bsf	3,5	;RP0=1, select bank1
 12563  06B5  1303               	bcf	3,6	;RP1=0, select bank1
 12564  06B6  083A               	movf	(sprintf@val+1)^(0+128),w
 12565  06B7  1283               	bcf	3,5	;RP0=0, select bank0
 12566  06B8  1303               	bcf	3,6	;RP1=0, select bank0
 12567  06B9  00A5               	movwf	___llmod@dividend+1
 12568  06BA  1683               	bsf	3,5	;RP0=1, select bank1
 12569  06BB  1303               	bcf	3,6	;RP1=0, select bank1
 12570  06BC  0839               	movf	sprintf@val^(0+128),w
 12571  06BD  1283               	bcf	3,5	;RP0=0, select bank0
 12572  06BE  1303               	bcf	3,6	;RP1=0, select bank0
 12573  06BF  00A4               	movwf	___llmod@dividend
 12574  06C0  160A  158A  2206  120A  118A  	fcall	___llmod
 12575  06C5  1283               	bcf	3,5	;RP0=0, select bank0
 12576  06C6  1303               	bcf	3,6	;RP1=0, select bank0
 12577  06C7  0823               	movf	?___llmod+3,w
 12578  06C8  1683               	bsf	3,5	;RP0=1, select bank1
 12579  06C9  1303               	bcf	3,6	;RP1=0, select bank1
 12580  06CA  00BC               	movwf	(sprintf@val+3)^(0+128)
 12581  06CB  1283               	bcf	3,5	;RP0=0, select bank0
 12582  06CC  1303               	bcf	3,6	;RP1=0, select bank0
 12583  06CD  0822               	movf	?___llmod+2,w
 12584  06CE  1683               	bsf	3,5	;RP0=1, select bank1
 12585  06CF  1303               	bcf	3,6	;RP1=0, select bank1
 12586  06D0  00BB               	movwf	(sprintf@val+2)^(0+128)
 12587  06D1  1283               	bcf	3,5	;RP0=0, select bank0
 12588  06D2  1303               	bcf	3,6	;RP1=0, select bank0
 12589  06D3  0821               	movf	?___llmod+1,w
 12590  06D4  1683               	bsf	3,5	;RP0=1, select bank1
 12591  06D5  1303               	bcf	3,6	;RP1=0, select bank1
 12592  06D6  00BA               	movwf	(sprintf@val+1)^(0+128)
 12593  06D7  1283               	bcf	3,5	;RP0=0, select bank0
 12594  06D8  1303               	bcf	3,6	;RP1=0, select bank0
 12595  06D9  0820               	movf	?___llmod,w
 12596  06DA  1683               	bsf	3,5	;RP0=1, select bank1
 12597  06DB  1303               	bcf	3,6	;RP1=0, select bank1
 12598  06DC  00B9               	movwf	sprintf@val^(0+128)
 12599  06DD                     l4727:
 12600                           
 12601                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 12602  06DD  3001               	movlw	1
 12603  06DE  02CD               	subwf	sprintf@c^(0+128),f
 12604  06DF  0A4D               	incf	sprintf@c^(0+128),w
 12605  06E0  1D03               	btfss	3,2
 12606  06E1  2EE3               	goto	u7821
 12607  06E2  2EE4               	goto	u7820
 12608  06E3                     u7821:
 12609  06E3  2DD8               	goto	l4717
 12610  06E4                     u7820:
 12611  06E4  2EFA               	goto	l4735
 12612  06E5                     l4729:
 12613                           
 12614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 12615  06E5  3030               	movlw	48
 12616  06E6  00AF               	movwf	??_sprintf^(0+128)
 12617  06E7  0828               	movf	sprintf@sp^(0+128),w
 12618  06E8  0084               	movwf	4
 12619  06E9  1783               	bsf	3,7
 12620  06EA  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 12621  06EB  1383               	bcf	3,7
 12622  06EC  082F               	movf	??_sprintf^(0+128),w
 12623  06ED  0080               	movwf	0
 12624  06EE                     l4731:
 12625  06EE  3001               	movlw	1
 12626  06EF  07A8               	addwf	sprintf@sp^(0+128),f
 12627  06F0  1803               	skipnc
 12628  06F1  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 12629  06F2  3000               	movlw	0
 12630  06F3  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 12631  06F4                     l4733:
 12632                           
 12633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 12634  06F4  30FF               	movlw	255
 12635  06F5  07CB               	addwf	sprintf@prec^(0+128),f
 12636  06F6  1803               	skipnc
 12637  06F7  0ACC               	incf	(sprintf@prec+1)^(0+128),f
 12638  06F8  30FF               	movlw	255
 12639  06F9  07CC               	addwf	(sprintf@prec+1)^(0+128),f
 12640  06FA                     l4735:
 12641                           
 12642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 12643  06FA  084B               	movf	sprintf@prec^(0+128),w
 12644  06FB  044C               	iorwf	(sprintf@prec+1)^(0+128),w
 12645  06FC  1D03               	btfss	3,2
 12646  06FD  2EFF               	goto	u7831
 12647  06FE  2F00               	goto	u7830
 12648  06FF                     u7831:
 12649  06FF  2EE5               	goto	l4729
 12650  0700                     u7830:
 12651  0700  2FCC               	goto	l4783
 12652  0701                     l4737:
 12653                           
 12654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 12655  0701  084B               	movf	sprintf@prec^(0+128),w
 12656  0702  044C               	iorwf	(sprintf@prec+1)^(0+128),w
 12657  0703  1D03               	btfss	3,2
 12658  0704  2F06               	goto	u7841
 12659  0705  2F07               	goto	u7840
 12660  0706                     u7841:
 12661  0706  2F15               	goto	l421
 12662  0707                     u7840:
 12663  0707                     l4739:
 12664  0707  083C               	movf	(sprintf@val+3)^(0+128),w
 12665  0708  043B               	iorwf	(sprintf@val+2)^(0+128),w
 12666  0709  043A               	iorwf	(sprintf@val+1)^(0+128),w
 12667  070A  0439               	iorwf	sprintf@val^(0+128),w
 12668  070B  1D03               	skipz
 12669  070C  2F0E               	goto	u7851
 12670  070D  2F0F               	goto	u7850
 12671  070E                     u7851:
 12672  070E  2F15               	goto	l421
 12673  070F                     u7850:
 12674  070F                     l4741:
 12675                           
 12676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 12677  070F  3001               	movlw	1
 12678  0710  07CB               	addwf	sprintf@prec^(0+128),f
 12679  0711  1803               	skipnc
 12680  0712  0ACC               	incf	(sprintf@prec+1)^(0+128),f
 12681  0713  3000               	movlw	0
 12682  0714  07CC               	addwf	(sprintf@prec+1)^(0+128),f
 12683  0715                     l421:
 12684                           
 12685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 12686  0715  084C               	movf	(sprintf@prec+1)^(0+128),w
 12687  0716  3A80               	xorlw	128
 12688  0717  3C80               	sublw	128
 12689  0718  1D03               	skipz
 12690  0719  2F1C               	goto	u7865
 12691  071A  084B               	movf	sprintf@prec^(0+128),w
 12692  071B  024D               	subwf	sprintf@c^(0+128),w
 12693  071C                     u7865:
 12694  071C  1803               	skipnc
 12695  071D  2F1F               	goto	u7861
 12696  071E  2F20               	goto	u7860
 12697  071F                     u7861:
 12698  071F  2F27               	goto	l4745
 12699  0720                     u7860:
 12700  0720                     l4743:
 12701                           
 12702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 12703  0720  1683               	bsf	3,5	;RP0=1, select bank1
 12704  0721  1303               	bcf	3,6	;RP1=0, select bank1
 12705  0722  084B               	movf	sprintf@prec^(0+128),w
 12706  0723  00AF               	movwf	??_sprintf^(0+128)
 12707  0724  082F               	movf	??_sprintf^(0+128),w
 12708  0725  00CD               	movwf	sprintf@c^(0+128)
 12709  0726  2F3F               	goto	l4749
 12710  0727                     l4745:
 12711  0727  1683               	bsf	3,5	;RP0=1, select bank1
 12712  0728  1303               	bcf	3,6	;RP1=0, select bank1
 12713  0729  084C               	movf	(sprintf@prec+1)^(0+128),w
 12714  072A  3A80               	xorlw	128
 12715  072B  00AF               	movwf	??_sprintf^(0+128)
 12716  072C  3080               	movlw	128
 12717  072D  022F               	subwf	??_sprintf^(0+128),w
 12718  072E  1D03               	skipz
 12719  072F  2F32               	goto	u7875
 12720  0730  084D               	movf	sprintf@c^(0+128),w
 12721  0731  024B               	subwf	sprintf@prec^(0+128),w
 12722  0732                     u7875:
 12723  0732  1803               	skipnc
 12724  0733  2F35               	goto	u7871
 12725  0734  2F36               	goto	u7870
 12726  0735                     u7871:
 12727  0735  2F3F               	goto	l4749
 12728  0736                     u7870:
 12729  0736                     l4747:
 12730                           
 12731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 12732  0736  1683               	bsf	3,5	;RP0=1, select bank1
 12733  0737  1303               	bcf	3,6	;RP1=0, select bank1
 12734  0738  084D               	movf	sprintf@c^(0+128),w
 12735  0739  00AF               	movwf	??_sprintf^(0+128)
 12736  073A  01B0               	clrf	(??_sprintf^(0+128)+1)
 12737  073B  082F               	movf	??_sprintf^(0+128),w
 12738  073C  00CB               	movwf	sprintf@prec^(0+128)
 12739  073D  0830               	movf	(??_sprintf+1)^(0+128),w
 12740  073E  00CC               	movwf	(sprintf@prec+1)^(0+128)
 12741  073F                     l4749:
 12742                           
 12743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 12744  073F  1683               	bsf	3,5	;RP0=1, select bank1
 12745  0740  1303               	bcf	3,6	;RP1=0, select bank1
 12746  0741  083F               	movf	sprintf@width^(0+128),w
 12747  0742  0440               	iorwf	(sprintf@width+1)^(0+128),w
 12748  0743  1903               	btfsc	3,2
 12749  0744  2F46               	goto	u7881
 12750  0745  2F47               	goto	u7880
 12751  0746                     u7881:
 12752  0746  2F59               	goto	l4755
 12753  0747                     u7880:
 12754  0747                     l4751:
 12755  0747  3003               	movlw	3
 12756  0748  053D               	andwf	sprintf@flag^(0+128),w
 12757  0749  00AF               	movwf	??_sprintf^(0+128)
 12758  074A  3000               	movlw	0
 12759  074B  053E               	andwf	(sprintf@flag+1)^(0+128),w
 12760  074C  00B0               	movwf	(??_sprintf+1)^(0+128)
 12761  074D  082F               	movf	??_sprintf^(0+128),w
 12762  074E  0430               	iorwf	(??_sprintf^(0+128)+1),w
 12763  074F  1903               	btfsc	3,2
 12764  0750  2F52               	goto	u7891
 12765  0751  2F53               	goto	u7890
 12766  0752                     u7891:
 12767  0752  2F59               	goto	l4755
 12768  0753                     u7890:
 12769  0753                     l4753:
 12770                           
 12771                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 12772  0753  30FF               	movlw	255
 12773  0754  07BF               	addwf	sprintf@width^(0+128),f
 12774  0755  1803               	skipnc
 12775  0756  0AC0               	incf	(sprintf@width+1)^(0+128),f
 12776  0757  30FF               	movlw	255
 12777  0758  07C0               	addwf	(sprintf@width+1)^(0+128),f
 12778  0759                     l4755:
 12779                           
 12780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 12781  0759  1F3E               	btfss	(sprintf@flag+1)^(0+128),6
 12782  075A  2F5C               	goto	u7901
 12783  075B  2F5D               	goto	u7900
 12784  075C                     u7901:
 12785  075C  2F78               	goto	l4763
 12786  075D                     u7900:
 12787  075D                     l4757:
 12788                           
 12789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 12790  075D  084C               	movf	(sprintf@prec+1)^(0+128),w
 12791  075E  3A80               	xorlw	128
 12792  075F  00AF               	movwf	??_sprintf^(0+128)
 12793  0760  0840               	movf	(sprintf@width+1)^(0+128),w
 12794  0761  3A80               	xorlw	128
 12795  0762  022F               	subwf	??_sprintf^(0+128),w
 12796  0763  1D03               	skipz
 12797  0764  2F67               	goto	u7915
 12798  0765  083F               	movf	sprintf@width^(0+128),w
 12799  0766  024B               	subwf	sprintf@prec^(0+128),w
 12800  0767                     u7915:
 12801  0767  1803               	skipnc
 12802  0768  2F6A               	goto	u7911
 12803  0769  2F6B               	goto	u7910
 12804  076A                     u7911:
 12805  076A  2F74               	goto	l4761
 12806  076B                     u7910:
 12807  076B                     l4759:
 12808                           
 12809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 12810  076B  1683               	bsf	3,5	;RP0=1, select bank1
 12811  076C  1303               	bcf	3,6	;RP1=0, select bank1
 12812  076D  084B               	movf	sprintf@prec^(0+128),w
 12813  076E  02BF               	subwf	sprintf@width^(0+128),f
 12814  076F  084C               	movf	(sprintf@prec+1)^(0+128),w
 12815  0770  1C03               	skipc
 12816  0771  03C0               	decf	(sprintf@width+1)^(0+128),f
 12817  0772  02C0               	subwf	(sprintf@width+1)^(0+128),f
 12818  0773  2F78               	goto	l4763
 12819  0774                     l4761:
 12820                           
 12821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 12822  0774  1683               	bsf	3,5	;RP0=1, select bank1
 12823  0775  1303               	bcf	3,6	;RP1=0, select bank1
 12824  0776  01BF               	clrf	sprintf@width^(0+128)
 12825  0777  01C0               	clrf	(sprintf@width+1)^(0+128)
 12826  0778                     l4763:
 12827                           
 12828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 12829  0778  0840               	movf	(sprintf@width+1)^(0+128),w
 12830  0779  3A80               	xorlw	128
 12831  077A  3C80               	sublw	128
 12832  077B  1D03               	skipz
 12833  077C  2F7F               	goto	u7925
 12834  077D  083F               	movf	sprintf@width^(0+128),w
 12835  077E  024D               	subwf	sprintf@c^(0+128),w
 12836  077F                     u7925:
 12837  077F  1803               	skipnc
 12838  0780  2F82               	goto	u7921
 12839  0781  2F83               	goto	u7920
 12840  0782                     u7921:
 12841  0782  2F8F               	goto	l4767
 12842  0783                     u7920:
 12843  0783                     l4765:
 12844                           
 12845                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 12846  0783  1683               	bsf	3,5	;RP0=1, select bank1
 12847  0784  1303               	bcf	3,6	;RP1=0, select bank1
 12848  0785  084D               	movf	sprintf@c^(0+128),w
 12849  0786  00AF               	movwf	??_sprintf^(0+128)
 12850  0787  01B0               	clrf	(??_sprintf^(0+128)+1)
 12851  0788  082F               	movf	??_sprintf^(0+128),w
 12852  0789  02BF               	subwf	sprintf@width^(0+128),f
 12853  078A  0830               	movf	(??_sprintf+1)^(0+128),w
 12854  078B  1C03               	skipc
 12855  078C  03C0               	decf	(sprintf@width+1)^(0+128),f
 12856  078D  02C0               	subwf	(sprintf@width+1)^(0+128),f
 12857  078E  2F93               	goto	l4769
 12858  078F                     l4767:
 12859                           
 12860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 12861  078F  1683               	bsf	3,5	;RP0=1, select bank1
 12862  0790  1303               	bcf	3,6	;RP1=0, select bank1
 12863  0791  01BF               	clrf	sprintf@width^(0+128)
 12864  0792  01C0               	clrf	(sprintf@width+1)^(0+128)
 12865  0793                     l4769:
 12866                           
 12867                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 12868  0793  083F               	movf	sprintf@width^(0+128),w
 12869  0794  0440               	iorwf	(sprintf@width+1)^(0+128),w
 12870  0795  1903               	btfsc	3,2
 12871  0796  2F98               	goto	u7931
 12872  0797  2F99               	goto	u7930
 12873  0798                     u7931:
 12874  0798  2FB4               	goto	l4777
 12875  0799                     u7930:
 12876  0799                     l4771:
 12877                           
 12878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 12879  0799  3020               	movlw	32
 12880  079A  00AF               	movwf	??_sprintf^(0+128)
 12881  079B  0828               	movf	sprintf@sp^(0+128),w
 12882  079C  0084               	movwf	4
 12883  079D  1783               	bsf	3,7
 12884  079E  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 12885  079F  1383               	bcf	3,7
 12886  07A0  082F               	movf	??_sprintf^(0+128),w
 12887  07A1  0080               	movwf	0
 12888  07A2                     l4773:
 12889  07A2  3001               	movlw	1
 12890  07A3  07A8               	addwf	sprintf@sp^(0+128),f
 12891  07A4  1803               	skipnc
 12892  07A5  0AA9               	incf	(sprintf@sp+1)^(0+128),f
 12893  07A6  3000               	movlw	0
 12894  07A7  07A9               	addwf	(sprintf@sp+1)^(0+128),f
 12895  07A8                     l4775:
 12896  07A8  30FF               	movlw	255
 12897  07A9  07BF               	addwf	sprintf@width^(0+128),f
 12898  07AA  1803               	skipnc
 12899  07AB  0AC0               	incf	(sprintf@width+1)^(0+128),f
 12900  07AC  30FF               	movlw	255
 12901  07AD  07C0               	addwf	(sprintf@width+1)^(0+128),f
 12902  07AE  083F               	movf	sprintf@width^(0+128),w
 12903  07AF  0440               	iorwf	(sprintf@width+1)^(0+128),w
 12904  07B0  1D03               	btfss	3,2
 12905  07B1  2FB3               	goto	u7941
 12906  07B2  2FB4               	goto	u7940
 12907  07B3                     u7941:
 12908  07B3  2F99               	goto	l4771
 12909  07B4                     u7940:
 12910  07B4                     l4777:
 12911                           
 12912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 12913  07B4  3003               	movlw	3
 12914  07B5  053D               	andwf	sprintf@flag^(0+128),w
 12915  07B6  00AF               	movwf	??_sprintf^(0+128)
 12916  07B7  3000               	movlw	0
 12917  07B8  053E               	andwf	(sprintf@flag+1)^(0+128),w
 12918  07B9  00B0               	movwf	(??_sprintf+1)^(0+128)
 12919  07BA  082F               	movf	??_sprintf^(0+128),w
 12920  07BB  0430               	iorwf	(??_sprintf^(0+128)+1),w
 12921  07BC  1903               	btfsc	3,2
 12922  07BD  2FBF               	goto	u7951
 12923  07BE  2FC0               	goto	u7950
 12924  07BF                     u7951:
 12925  07BF  2FCC               	goto	l4783
 12926  07C0                     u7950:
 12927  07C0                     l4779:
 12928                           
 12929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 12930  07C0  302D               	movlw	45
 12931  07C1  00AF               	movwf	??_sprintf^(0+128)
 12932  07C2  0828               	movf	sprintf@sp^(0+128),w
 12933  07C3  0084               	movwf	4
 12934  07C4  1783               	bsf	3,7
 12935  07C5  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 12936  07C6  1383               	bcf	3,7
 12937  07C7  082F               	movf	??_sprintf^(0+128),w
 12938  07C8  0080               	movwf	0
 12939  07C9  160A  118A  2D11   	goto	l4535
 12940  07CC                     l4783:
 12941                           
 12942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 12943  07CC  3001               	movlw	1
 12944  07CD  07AA               	addwf	sprintf@f^(0+128),f
 12945  07CE  30FF               	movlw	-1
 12946  07CF  072A               	addwf	sprintf@f^(0+128),w
 12947  07D0  0084               	movwf	4
 12948  07D1  160A  158A  200A  120A  118A  	fcall	stringdir
 12949  07D6  00AF               	movwf	??_sprintf^(0+128)
 12950  07D7  082F               	movf	??_sprintf^(0+128),w
 12951  07D8  00CD               	movwf	sprintf@c^(0+128)
 12952  07D9  084D               	movf	sprintf@c^(0+128),w
 12953  07DA  1D03               	btfss	3,2
 12954  07DB  2FDD               	goto	u7961
 12955  07DC  2FE0               	goto	u7960
 12956  07DD                     u7961:
 12957  07DD  160A  118A  2D02   	goto	l4531
 12958  07E0                     u7960:
 12959  07E0                     l4785:
 12960                           
 12961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 12962  07E0  0828               	movf	sprintf@sp^(0+128),w
 12963  07E1  0084               	movwf	4
 12964  07E2  1783               	bsf	3,7
 12965  07E3  1C29               	btfss	(sprintf@sp+1)^(0+128),0
 12966  07E4  1383               	bcf	3,7
 12967  07E5  0180               	clrf	0
 12968  07E6                     l436:
 12969  07E6  0008               	return
 12970  07E7                     __end_of_sprintf:

Data Sizes:
    Strings     20
    Constant    144
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     80      80
    BANK1            80     46      78
    BANK3            96      0      16
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_7(CODE[6]), STR_6(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> data2(BANK3[16]), data1(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), data2(BANK3[16]), data1(BANK1[16]), 

    data2	PTR unsigned char [8] size(2) Largest target is 40
		 -> dpowers(CODE[40]), ?_sprintf(BANK1[2]), 

    data1	PTR unsigned char [8] size(2) Largest target is 40
		 -> dpowers(CODE[40]), ?_sprintf(BANK1[2]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _titulos_LCD->_Lcd_Set_Cursor
    _titulos_LCD->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _setup->_initOsc
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwmod
    ___lwdiv->___lwmod
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    ___flmul->___awmod
    ___flmul->___lwmod

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_float_to_string
    _titulos_LCD->_Lcd_Write_String
    _sprintf->___fladd
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _ADC_channel2->___fldiv
    _ADC_channel1->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _float_to_string->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   53594
                                             78 BANK0      2     2      0
                       _ADC_channel1
                       _ADC_channel2
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _USART_Init
                _USART_Init_BaudRate
                    _float_to_string
                              _setup
                        _titulos_LCD
 ---------------------------------------------------------------------------------
 (1) _titulos_LCD                                          1     1      0    1706
                                              5 BANK0      1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     822
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     884
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _float_to_string                                      1     1      0   36287
                                             77 BANK0      1     1      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    36      7   36287
                                              8 BANK1     38    31      7
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    8544
                                             37 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1513
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1705
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    6600
                                             37 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     772
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     781
                                              1 BANK0      8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     634
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     676
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     772
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     601
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             56 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             57 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _USART_Init_BaudRate                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_channel2                                         4     4      0    6890
                                             63 BANK0      4     4      0
                         _ADC_Config
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _ADC_channel1                                         4     4      0    6890
                                             63 BANK0      4     4      0
                         _ADC_Config
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4697
                                             11 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             37 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Config                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_channel1
     _ADC_Config
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _ADC_channel2
     _ADC_Config
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _USART_Init
   _USART_Init_BaudRate
   _float_to_string
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
   _setup
     _initOsc
   _titulos_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      B9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2E      4E       7       97.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      10       9       16.7%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      B9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 11 23:51:31 2021

                ___fldiv@aexp 005E                  ___fldiv@bexp 005D                             pc 0002  
                ___fldiv@sign 0056                            l96 1CB3                  ___awdiv@sign 0028  
                          fsr 0004           ___wmul@multiplicand 0075           __size_of_ADC_Config 00BC  
         __Umul8_16@word_mpld 0022                           l102 1D26                           l111 0171  
                         l120 1AB9                           l121 1B11                           l210 1DE9  
                         l130 1B12                           l122 1ABF                           l114 1020  
                         l211 1DF0                           l123 1AC5                           l220 1E2F  
                         l212 1DF7                           l108 1093                           l124 1ACB  
                         l221 1E36                           l213 1DFE                           l205 1DCD  
                         l125 1AD1                           l222 1E3D                           l214 1E05  
                         l126 1AD7                           l223 1E86                           l215 1E0C  
                         l207 1DD4                           l143 1965                           l127 1ADD  
                         l216 1E13                           l208 1DDB                           l128 1AE3  
                         l217 1E1A                           l209 1DE2                           l241 1004  
                         l129 1AE9                           l161 0022                           l218 1E21  
                         l146 0060                           l219 1E28                           l149 18CF  
                         l421 0715                           l413 0542                           l238 0070  
                         l158 0197                           l167 1915                           l440 008C  
                         l353 0FFF                           l442 00A6                           l610 093B  
                         l346 022F                           l611 08A0                           l436 07E6  
                         l621 092E                           l614 08FE                           l606 1AB6  
                         l631 1D45                           l375 15C3                           l801 14CA  
                         l626 1984                           l634 1DB1                           l810 14F8  
                         l650 0868                           l627 19A0                           l635 1DCA  
                         l643 087D                           l628 19B5                           l476 1BE0  
                         l813 1A05                           l653 087D                           l661 1FC2  
                         l823 10F0                           l639 007B                           l920 1F0C  
                         l825 1270                           l921 1F18                           l913 1EF0  
                         l809 14EC                           l657 1FFF                           l593 1C49  
                         l658 1F71                           l746 00EC                           l907 1EAB  
                         l771 137B                           l780 14F8                           l668 1FF2  
                         l756 0128                           l845 1254                           l909 1F42  
                         l773 1352                           l847 1264                           l839 11E2  
                         l863 0C9C                           l767 12D4                           l927 013A  
                         l792 146A                           l696 1A5B                           l882 0048  
                         l875 0C90                           l884 005A                           l788 1446  
                         l869 0C08                           l798 148C                           _ISR 0000  
                         _VAL 00DC                           fsr0 0004                           indf 0000  
                ___awmod@sign 0021                  ___flmul@aexp 003D                  ___flmul@bexp 003E  
                 _titulos_LCD 1C4A                  ___flmul@sign 0038                  ___flmul@temp 0043  
                ___flmul@prod 003F                          ?_ISR 0070                  ___fltol@exp1 0062  
                        l3001 0C12                          l3011 0C50                          l3003 0C20  
                        l3021 0C84                          l3013 0C5B                          l3005 0C24  
                        l3023 0C88                          l3015 0C6A                          l3007 0C3D  
                        l3111 012B                          l3025 0C89                          l3017 0C74  
                        l3009 0C43                          l3113 0131                          l3027 0C94  
                        l3019 0C76                          l3115 0137                          l3117 0139  
                        l3109 012A                          l4101 1C40                          l3311 082D  
                        l3303 0802                          l4103 1C45                          l4111 1A63  
                        l4201 18CC                          l3313 082E                          l3305 080F  
                        l4121 1A79                          l4113 1A68                          l3315 0836  
                        l4131 1A95                          l4123 1A7C                          l4115 1A6A  
                        l4107 1A5C                          l4211 001F                          l4203 000E  
                        l4061 005C                          l2701 127E                          l3333 085D  
                        l3325 0844                          l3317 0838                          l3309 0818  
                        l4301 1FBC                          l4221 013B                          l4213 0026  
                        l4141 1AB2                          l4133 1A9B                          l4125 1A83  
                        l4117 1A6E                          l4109 1A5F                          l4205 0011  
                        l2551 0035                          l2711 1295                          l2703 1282  
                        l3335 086D                          l3319 083C                          l3327 0856  
                        l4303 1FC6                          l4311 1FE0                          l4151 00B4  
                        l4223 0141                          l4215 002C                          l4071 1BEF  
                        l4063 1BE1                          l4135 1AA2                          l4127 1A87  
                        l4119 1A73                          l4231 0CA0                          l4207 0017  
                        l3441 1E85                          l3433 1E44                          l2561 0056  
                        l2553 0037                          l2801 138D                          l2721 12AB  
                        l2713 1296                          l2705 1283                          l3361 19BA  
                        l3337 0872                          l4401 1BBA                          l4161 00DA  
                        l4153 00BB                          l4145 00A7                          l4081 1C04  
                        l4073 1BF3                          l4065 1BE4                          l4129 1A8B  
                        l4137 1AA8                          l4233 0CA4                          l4209 001A  
                        l3435 1E7E                          l2555 003E                          l2811 13B7  
                        l2803 13A4                          l2731 12BC                          l2723 12AC  
                        l2707 1288                          l2715 1298                          l4403 1BC8  
                        l4323 087E                          l4163 00DB                          l4155 00BF  
                        l4147 00AB                          l4171 00ED                          l4227 01EC  
                        l4091 1C27                          l4083 1C07                          l4075 1BF8  
                        l4067 1BE8                          l4139 1AAD                          l4243 0D97  
                        l4235 0CA6                          l3437 1E81                          l3429 1DCC  
                        l2557 0042                          l2901 0953                          l4501 1F35  
                        l4421 19B4                          l4413 1966                          l2821 13E0  
                        l2813 13BB                          l2805 13A8                          l2741 12DA  
                        l2733 12C1                          l2725 12B2                          l2717 12A0  
                        l2709 128D                          l4405 1BC9                          l4341 08BC  
                        l4325 088B                          l4317 1FE7                          l4309 1FCE  
                        l4165 00E2                          l4157 00C3                          l4149 00B1  
                        l4181 0107                          l4173 00F3                          l4093 1C2D  
                        l4085 1C0E                          l4077 1BFC                          l4069 1BED  
                        l4261 0F44                          l4245 0D9E                          l4237 0CAD  
                        l4253 0E53                          l3439 1E84                          l2559 0051  
                        l2911 096F                          l2903 0958                          l4503 1F39  
                        l4415 197C                          l4431 1D61                          l3295 0071  
                        l2831 144E                          l2823 141E                          l2815 13BC  
                        l2807 13AC                          l2751 12EE                          l2743 12DE  
                        l2735 12C9                          l2727 12B6                          l2719 12A5  
                        l3359 19B6                          l4407 1BD2                          l4351 08EF  
                        l4343 08C5                          l4335 08A1                          l4319 1FF7  
                        l4271 1F43                          l4159 00D4                          l4167 00E8  
                        l4183 0111                          l4175 00F8                          l4095 1C2E  
                        l4087 1C12                          l4079 1BFE                          l4263 0F4B  
                        l4255 0E5A                          l3711 1AB8                          l4511 017A  
                        l3801 1191                          l3721 1094                          l2921 0984  
                        l2913 0975                          l2905 0960                          l4505 1F3A  
                        l4193 18B7                          l4417 1998                          l4441 1DC9  
                        l4433 1D65                          l4425 1D27                          l3297 0079  
                        l2841 1469                          l2833 1453                          l2825 1424  
                        l2817 13C5                          l2809 13B5                          l2761 1302  
                        l2753 12F2                          l2745 12E2                          l2737 12CA  
                        l2729 12B7                          l4409 1BD8                          l4361 090A  
                        l4353 08F8                          l4345 08CE                          l4337 08A9  
                        l4329 0894                          l4273 1F56                          l4185 0117  
                        l4177 00FF                          l4097 1C35                          l4089 1C16  
                        l4249 0E26                          l4601 169C                          l4513 017F  
                        l4521 18D0                          l3811 11AE                          l3803 1195  
                        l3731 10AB                          l3723 109B                          l2931 09A0  
                        l2923 098C                          l2915 0979                          l2907 0962  
                        l4195 18BA                          l4419 19B2                          l4435 1D89  
                        l4427 1D3D                          l3299 007B                          l2843 146E  
                        l2851 147A                          l2827 1429                          l2819 13CA  
                        l2771 1316                          l2763 1306                          l2755 12F6  
                        l2747 12E6                          l2739 12CC                          l4451 1A20  
                        l4371 0933                          l4355 0902                          l4363 091C  
                        l4347 08E0                          l4339 08BA                          l4291 1F92  
                        l4283 1F72                          l4187 011E                          l4179 0103  
                        l4099 1C3B                          l4267 0FD3                          l4611 1733  
                        l4603 16BF                          l4531 1502                          l3715 1AEF  
                        l4515 0186                          l4523 18D5                          l3821 11C6  
                        l3813 11B2                          l3805 119B                          l3741 10C3  
                        l3733 10B0                          l3725 10A1                          l2941 09E3  
                        l2925 098E                          l2917 097A                          l2909 096A  
                        l4197 18C0                          l4437 1D8D                          l4429 1D59  
                        l2845 1471                          l2837 145C                          l2829 1438  
                        l2853 147E                          l2781 1356                          l2773 131A  
                        l2765 130A                          l2757 12FA                          l2749 12EA  
                        l4453 1A24                          l4461 1A53                          l4445 1A06  
                        l4381 0093                          l4349 08EE                          l4293 1F9B  
                        l4285 1F78                          l4277 1F5F                          l4189 0124  
                        l4701 0519                          l4621 17A3                          l4613 175A  
                        l4605 16C3                          l4541 152C                          l4533 1508  
                        l4517 018C                          l4509 0175                          l4525 18F1  
                        l3831 11E7                          l3823 11C7                          l3815 11B3  
                        l3807 11A3                          l3751 10D8                          l3743 10C8  
                        l3735 10B8                          l3727 10A5                          l2951 0A6C  
                        l2943 09FF                          l2935 09A9                          l2927 0996  
                        l2919 097F                          l4471 1EA3                          l4199 18C3  
                        l4439 1DC7                          l2871 14C6                          l2863 1491  
                        l2855 147F                          l2847 1473                          l2839 1465  
                        l2791 136F                          l2783 135F                          l2767 130E  
                        l2759 12FE                          l2775 131E                          l4391 1B8B  
                        l4455 1A36                          l4447 1A10                          l4383 009A  
                        l4375 007C                          l4295 1FA9                          l4287 1F87  
                        l4711 0550                          l4703 0526                          l4631 028F  
                        l4623 17EA                          l4615 1763                          l4607 16C9  
                        l4543 1530                          l4551 156C                          l4535 1511  
                        l4519 0191                          l4527 18F9                          l3833 11EC  
                        l3841 121D                          l3825 11CB                          l3817 11BC  
                        l3809 11A5                          l3761 10F8                          l3753 10DD  
                        l3745 10CE                          l3737 10B9                          l3729 10A6  
                        l2961 0ADF                          l2953 0A7C                          l2945 0A2B  
                        l2937 09B9                          l2929 099B                          l4481 1ECE  
                        l4473 1EB3                          l4465 1E8A                          l4801 193C  
                        l2881 14E2                          l2873 14CF                          l2865 1496  
                        l2857 1483                          l2849 1478                          l2785 1361  
                        l2793 1373                          l2777 131F                          l2769 1312  
                        l2697 1271                          l4393 1B8E                          l4457 1A44  
                        l4449 1A13                          l4385 00A0                          l4377 0080  
                        l4369 0923                          l4297 1FB3                          l4289 1F89  
                        l4721 0672                          l4713 0559                          l4705 0535  
                        l4633 02B8                          l4625 0230                          l4617 178C  
                        l4609 16E8                          l4561 1597                          l4553 157A  
                        l4545 1545                          l4537 1518                          l4529 14F9  
                        l3851 1253                          l3843 122A                          l3835 11FA  
                        l3827 11DF                          l3819 11C2                          l3771 1116  
                        l3763 1104                          l3755 10E5                          l3747 10D2  
                        l3739 10BB                          l2971 0B8C                          l2963 0AFC  
                        l2955 0A99                          l2947 0A47                          l2939 09C6  
                        l2891 093C                          l4491 1F02                          l4483 1ED5  
                        l4467 1E8F                          l2883 14E6                          l2875 14D4  
                        l2867 14A4                          l2859 1489                          l2795 137F  
                        l2787 1365                          l2779 1336                          l2699 1278  
                        l4395 1B9B                          l4459 1A4D                          l4379 0084  
                        l4299 1FB4                          l4731 06EE                          l4723 067C  
                        l4715 055F                          l4707 053C                          l4651 03A1  
                        l4643 0332                          l4635 02C1                          l4627 0259  
                        l4619 1794                          l4563 15AA                          l4555 157B  
                        l4547 1558                          l4539 151C                          l4811 1C80  
                        l4803 1C4A                          l3853 125A                          l3845 1238  
                        l3837 11FE                          l3781 1141                          l3765 1108  
                        l3757 10E6                          l3749 10D3                          l2981 0BD8  
                        l2973 0BB4                          l2965 0B29                          l2957 0AA9  
                        l2949 0A63                          l2893 0943                          l4493 1F06  
                        l4485 1ED9                          l4477 1EBC                          l4469 1E93  
                        l4821 1CC4                          l2885 14E8                          l2877 14DC  
                        l2869 14A8                          l2797 1384                          l2789 1366  
                        l4397 1B9F                          l4389 1B79                          l4741 070F  
                        l4733 06F4                          l4725 0682                          l4717 05D8  
                        l4709 054B                          l4661 03DA                          l4637 02C9  
                        l4629 0280                          l4645 033B                          l4581 15F7  
                        l4573 15C5                          l4565 15AE                          l4557 157F  
                        l4549 155C                          l4813 1C95                          l4805 1C56  
                        l3855 125E                          l3847 1247                          l3839 1217  
                        l3791 1166                          l3783 1149                          l3775 111F  
                        l3759 10E8                          l2991 0BED                          l2983 0BD9  
                        l2975 0BBD                          l2967 0B39                          l2959 0AC6  
                        l2895 0949                          l4495 1F10                          l4487 1EE7  
                        l4479 1EC1                          l4823 1CC8                          l4831 1031  
                        l2887 14F3                          l2879 14E1                          l4399 1BA8  
                        l4751 0747                          l4743 0720                          l4735 06FA  
                        l4719 0633                          l4727 06DD                          l4671 0418  
                        l4663 03E4                          l4647 0370                          l4639 02E7  
                        l4591 164D                          l4583 1605                          l4575 15E1  
                        l4559 1582                          l4567 15BF                          l3871 1014  
                        l3863 1005                          l4815 1C9E                          l4807 1C5F  
                        l3857 1260                          l3849 124B                          l3793 1167  
                        l3785 114B                          l3777 1131                          l3769 1111  
                        l2993 0BF1                          l2985 0BE2                          l2977 0BCB  
                        l2969 0B66                          l2897 094D                          l4497 1F1A  
                        l4489 1EF7                          l4825 1D21                          l4817 1CB4  
                        l4833 1035                          l2889 14F7                          l4761 0774  
                        l4753 0753                          l4745 0727                          l4729 06E5  
                        l4681 0445                          l4673 0423                          l4665 03FF  
                        l4657 03A3                          l4649 039F                          l4593 1651  
                        l4585 1609                          l4577 15EF                          l4737 0701  
                        l4569 15C1                          l3881 1019                          l3873 1015  
                        l3865 100B                          l4809 1C74                          l4841 1B18  
                        l3787 1150                          l3795 1170                          l3779 1139  
                        l2995 0C05                          l2979 0BD4                          l2987 0BE8  
                        l2899 094E                          l4499 1F30                          l4819 1CBA  
                        l4835 108E                          l4827 1021                          l3891 0061  
                        l4771 0799                          l4763 0778                          l4755 0759  
                        l4747 0736                          l4739 0707                          l4683 044E  
                        l4667 0405                          l4595 1678                          l4587 1630  
                        l4579 15F3                          l3883 101C                          l3875 1016  
                        l3867 100F                          l4851 1B31                          l4843 1B1D  
                        l3797 1182                          l3789 1162                          l2989 0BEC  
                        l4829 1027                          l3893 006F                          l4773 07A2  
                        l4765 0783                          l4757 075D                          l4749 073F  
                        l4685 0455                          l4693 04FA                          l4669 0411  
                        l4677 042A                          l4597 1683                          l4589 1649  
                        l4837 013B                          l4933 1AF7                          l3885 101D  
                        l3877 1017                          l3869 1010                          l4861 1B57  
                        l4853 1B3B                          l4845 1B22                          l3799 1183  
                        l2999 0C0D                          l3895 1000                          l4775 07A8  
                        l4767 078F                          l4759 076B                          l4695 0502  
                        l4687 04B0                          l4679 0437                          l4599 1689  
                        l4935 15D9                          l4783 07CC                          l3887 101E  
                        l3879 1018                          l4863 1B60                          l4855 1B40  
                        l4847 1B27                          l4839 1B13                          l4937 1E4C  
                        l4793 1916                          l4777 07B4                          l4769 0793  
                        l4697 050D                          l4689 04EF                          l4785 07E0  
                        l3889 101F                          l4865 1B6C                          l4857 1B4A  
                        l4849 1B2C                          l4795 191C                          l4779 07C0  
                        l4699 0513                          l4859 1B4F                          l4797 1926  
                        l4799 1936                          STR_1 18A6                          STR_2 18AA  
                        STR_3 18AE                          STR_4 18B2                          STR_5 18B2  
                        STR_6 18A0                          STR_7 18A0                          u4000 0984  
                        u4001 0983                          u4010 099B                          u4011 099A  
                        u3140 0042                          u4020 09A0                          u3141 0041  
                        u4021 099F                          u4111 0AEE                          u4031 09F1  
                        u3160 0056                          u4200 0BD8                          u4112 0AF5  
                        u4032 09F8                          u3161 0055                          u4201 0BD7  
                        u4121 0B1B                          u4113 0AFC                          u4105 0AC8  
                        u4041 0A0D                          u4033 09FF                          u4122 0B22  
                        u4042 0A14                          u3155 0049                          u4131 0B48  
                        u4123 0B29                          u4051 0A39                          u4043 0A1B  
                        u4300 0C6A                          u4220 0BEC                          u4140 0B72  
                        u4132 0B4F                          u4052 0A40                          u3500 1288  
                        u5100 0843                          u4301 0C69                          u4221 0BEB  
                        u4133 0B56                          u4061 0A55                          u4053 0A47  
                        u3501 1287                          u5101 0842                          u4310 0C88  
                        u4230 0BF1                          u4062 0A5C                          u3510 128D  
                        u4311 0C87                          u4231 0BF0                          u4215 0BDB  
                        u4151 0B7E                          u4063 0A63                          u3511 128C  
                        u6000 1166                          u4240 0C05                          u4160 0B9A  
                        u4152 0B85                          u3600 1342                          u3520 12AB  
                        u5120 0855                          u6001 1165                          u4305 0C66  
                        u4241 0C04                          u4153 0B8C                          u4145 0B6D  
                        u4081 0A8B                          u3521 12AA                          u5121 0854  
                        u4250 0C0C                          u4082 0A92                          u3610 1356  
                        u3530 12B6                          u5130 085C                          u4251 0C0B  
                        u4171 0BA6                          u4091 0AB8                          u4083 0A99  
                        u4075 0A65                          u3611 1355                          u3531 12B5  
                        u5131 085B                          u5115 0845                          u6100 11DF  
                        u6020 1182                          u4260 0C12                          u4172 0BAD  
                        u4092 0ABF                          u5060 0079                          u3700 13BB  
                        u3620 1365                          u3540 12BC                          u6101 11DE  
                        u6021 1181                          u4261 0C11                          u4173 0BB4  
                        u4165 0B95                          u4093 0AC6                          u5061 0078  
                        u3701 13BA                          u3621 1364                          u3541 12BB  
                        u6110 11E6                          u6030 119B                          u4270 0C24  
                        u3550 12C1                          u5150 086D                          u5070 080F  
                        u6111 11E5                          u6031 119A                          u6015 1169  
                        u4271 0C23                          u3551 12C0                          u5151 086C  
                        u5071 080E                          u6120 11EC                          u6040 11A3  
                        u4280 0C33                          u3800 146E                          u3720 13E0  
                        u3640 137B                          u3560 12DA                          u5160 0872  
                        u5080 0826                          u7000 091B                          u6121 11EB  
                        u6041 11A2                          u6025 117E                          u4185 0BB6  
                        u3801 146D                          u3721 13DF                          u3641 137A  
                        u3561 12D9                          u5161 0871                          u5145 085F  
                        u7001 091A                          u6130 11FE                          u4290 0C50  
                        u3810 1478                          u3650 137F                          u3570 12DE  
                        u3490 1282                          u5090 083C                          u7010 0922  
                        u6210 1BE8                          u6131 11FD                          u4291 0C4F  
                        u4195 0BCD                          u3811 1477                          u3731 13F7  
                        u3723 13DC                          u3715 13BE                          u3651 137E  
                        u3635 1368                          u3571 12DD                          u3491 1281  
                        u5091 083B                          u7011 0921                          u6211 1BE7  
                        u6140 120D                          u6060 11B2                          u3900 14CF  
                        u3820 147E                          u3740 140B                          u3732 13F8  
                        u3660 1384                          u3580 1336                          u7100 1B9F  
                        u6300 1C40                          u6220 1BF3                          u6061 11B1  
                        u4285 0C2E                          u3901 14CE                          u3821 147D  
                        u3741 140C                          u3733 13FD                          u3661 1383  
                        u3581 1335                          u5085 0821                          u7101 1B9E  
                        u6301 1C3F                          u6221 1BF2                          u6150 122A  
                        u3910 14D4                          u3830 1483                          u3750 1429  
                        u3742 1411                          u3734 13FE                          u3590 1341  
                        u7030 0933                          u6230 1C04                          u6310 1A63  
                        u6151 1229                          u6055 11A7                          u4295 0C4C  
                        u3911 14D3                          u3831 1482                          u3751 1428  
                        u3743 1412                          u3735 1403                          u3671 1396  
                        u3591 133F                          u7031 0932                          u6231 1C03  
                        u6311 1A62                          u6160 1247                          u6080 11C6  
                        u7200 1D65                          u3920 14E1                          u3840 1489  
                        u3760 144E                          u3736 1404                          u3680 13A8  
                        u3672 139D                          u7120 1BBA                          u7040 0084  
                        u6400 00B1                          u6320 1A6E                          u6161 1246  
                        u6145 1208                          u6081 11C5                          u7201 1D64  
                        u3921 14E0                          u3841 1488                          u3761 144D  
                        u3681 13A7                          u3673 13A4                          u3585 1332  
                        u7121 1BB9                          u7041 0083                          u7025 0925  
                        u6401 00B0                          u6321 1A6D                          u6170 125E  
                        u6090 11CB                          u3930 14E6                          u3850 1490  
                        u3770 1453                          u3690 13AC                          u4570 0131  
                        u6250 1C16                          u6330 1A79                          u6171 125D  
                        u6155 1226                          u6091 11CA                          u6075 11B5  
                        u7211 1D74                          u3931 14E5                          u3851 148F  
                        u3771 1452                          u3691 13AB                          u7115 1BA1  
                        u4571 0130                          u6251 1C15                          u6331 1A78  
                        u7220 1D8D                          u7212 1D75                          u3940 14F7  
                        u3860 1496                          u7140 1BD8                          u7300 1A53  
                        u6420 00C3                          u6500 0111                          u4580 0137  
                        u6165 1243                          u7221 1D8C                          u7213 1D7A  
                        u3941 14F6                          u3861 1495                          u7141 1BD7  
                        u7125 1BB6                          u7301 1A52                          u6421 00C2  
                        u6501 0110                          u4581 0136                          u6245 1C08  
                        u3950 094D                          u7310 1E8F                          u7150 197C  
                        u7214 1D7B                          u3870 14A8                          u3790 1469  
                        u7070 00A0                          u6270 1C27                          u6350 1A8B  
                        u3951 094C                          u7311 1E8E                          u7151 197B  
                        u7231 1D9C                          u7215 1D80                          u3871 14A7  
                        u3791 1468                          u7135 1BCA                          u7071 009F  
                        u7055 008D                          u6415 00B5                          u6271 1C26  
                        u6351 1A8A                          u8007 1B46                          u3960 0953  
                        u7400 1F0C                          u7320 1E93                          u7160 1998  
                        u7240 1DC7                          u7232 1D9D                          u7216 1D81  
                        u3880 14B7                          u7080 1B8B                          u6440 00D4  
                        u6520 0124                          u6360 1A95                          u3961 0952  
                        u7401 1F0B                          u7321 1E92                          u7161 1997  
                        u7241 1DC6                          u7233 1DA2                          u3785 145E  
                        u7081 1B8A                          u7065 0094                          u6441 00D3  
                        u6521 0123                          u6505 010D                          u6265 1C17  
                        u6361 1A94                          u6345 1A7D                          u8017 001C  
                        u3970 0958                          u7410 1F10                          u7330 1EB3  
                        u7170 19B2                          u7234 1DA3                          u3890 14C6  
                        u7250 1A10                          u6530 002C                          u6290 1C3B  
                        u6610 0CA4                          u3971 0957                          u7411 1F0F  
                        u7331 1EB2                          u8027 1922                          u7171 19B1  
                        u7235 1DA8                          u3891 14C5                          u7251 1A0F  
                        u6435 00C4                          u6515 0118                          u6531 002B  
                        u6291 1C3A                          u6275 1C23                          u6611 0CA3  
                        u5900 10AB                          u3980 0979                          u7420 1F25  
                        u7236 1DA9                          u7180 1D3D                          u6460 00E8  
                        u6380 1AA8                          u6700 0E5A                          u6620 0CAD  
                        u7500 1508                          i1l85 002B                          u5901 10AA  
                        u3981 0978                          u8037 1932                          u7245 1DC3  
                        u7181 1D3C                          u3885 14B2                          u6461 00E7  
                        u6445 00D0                          u6605 01F7                          u6285 1C2F  
                        u6381 1AA7                          u6365 1A91                          u6701 0E59  
                        u6621 0CAC                          u7501 1507                          u5910 10B0  
                        u3990 097F                          u7430 1F35                          u7350 1ED4  
                        u7190 1D59                          u7270 1A24                          u6470 00F3  
                        u6390 1AAD                          u7510 152C                          u5911 10AF  
                        u3991 097E                          u7431 1F34                          u7351 1ED3  
                        u8047 1942                          u7175 19AE                          u7191 1D58  
                        u7095 1B90                          u7271 1A23                          u6455 00DC  
                        u6471 00F2                          u6391 1AAC                          u6375 1A9C  
                        u7511 152B                          u5920 10D2                          u7440 1F39  
                        u7280 1A36                          u7600 175A                          u7520 156C  
                        u5921 10D1                          u7441 1F38                          u7425 1F20  
                        u7345 1EC6                          u8057 18C7                          u7281 1A35  
                        u7265 1A15                          u6545 0049                          u7601 1759  
                        u7521 156B                          u5930 10D8                          u7370 1EF6  
                        u6810 1FA9                          u6490 0107                          u6570 0141  
                        u7610 178C                          u7530 157A                          u7450 017A  
                        u5931 10D7                          u7371 1EF5                          u8067 102D  
                        u6811 1FA8                          u6491 0106                          u6571 0140  
                        u6555 00A5                          u6715 0E7C                          u6635 0CCF  
                        u7611 178B                          u7531 1579                          u7451 0179  
                        u5940 10DD                          u6900 1FF7                          u6740 0F4B  
                        u6660 0D9E                          u7700 03E4                          u7620 17A3  
                        u7540 15BE                          u7460 018C                          u5941 10DC  
                        u7365 1EE8                          u8077 1CC0                          u7285 1A32  
                        u6901 1FF6                          u6805 1F94                          u6485 00F9  
                        u6565 00FA                          u6741 0F4A                          u6725 0EB8  
                        u6661 0D9D                          u6645 0D0B                          u7701 03E3  
                        u7621 17A2                          u7541 15BD                          u7461 018B  
                        u5950 10F8                          u7390 1F06                          u6910 088B  
                        u6830 1FC2                          u7710 03FF                          u7630 0230  
                        u7550 15EF                          u7470 18DF                          u5951 10F7  
                        u7391 1F05                          u7295 1A45                          u6911 088A  
                        u6831 1FC1                          u6815 1FA5                          u6735 0F03  
                        u6655 0D56                          u7711 03FE                          u7631 17FA  
                        u7551 15EC                          u5960 1116                          u6920 089F  
                        u6840 1FC6                          u7720 0411                          u7640 0259  
                        u7560 15F3                          u7480 1903                          u5961 1115  
                        u7385 1EFB                          u6921 089E                          u6841 1FC5  
                        u6825 1FB5                          u6585 015E                          u7721 0410  
                        u7641 0258                          u7625 179F                          u7561 15F2  
                        u5970 1150                          u5890 10A5                          u6850 1FCD  
                        u7730 0437                          u7650 0280                          u7570 1630  
                        u7490 1915                          u5971 114F                          u5891 10A4  
                        u6851 1FCC                          u6595 01AB                          u6755 0F5E  
                        u6675 0DB1                          u7731 0436                          u7651 027F  
                        u7635 17F5                          u7571 162F                          u7491 1914  
                        u6940 08E0                          u6780 1F56                          u7900 075D  
                        u7820 06E4                          u7740 0445                          u7660 028F  
                        u7580 1678                          u6941 08DF                          u6781 1F55  
                        u6765 0F9A                          u6685 0DED                          u7901 075C  
                        u7821 06E3                          u7805 05DB                          u7741 0444  
                        u7661 028E                          u7581 1677                          u6870 1FDF  
                        u6790 1F70                          u7910 076B                          u7830 0700  
                        u7670 02B8                          u7590 16C3                          u6935 08C7  
                        u6871 1FDE                          u6791 1F6F                          u6775 0FD6  
                        u6695 0E29                          u7911 076A                          u7831 06FF  
                        u7815 0685                          u7735 0433                          u7671 02B7  
                        u7591 16C2                          u6960 08FE                          u6880 1FE6  
                        u7920 0783                          u7840 0707                          u7760 0501  
                        u5985 1152                          u6961 08FD                          u6945 08DC  
                        u6881 1FE5                          u6865 1FCF                          u7921 0782  
                        u7841 0706                          u7761 0500                          u7665 028B  
                        u6970 0902                          u7930 0799                          u7850 070F  
                        u7770 0526                          u7690 03D9                          u5995 115B  
                        u6971 0901                          u6955 08F1                          u7931 0798  
                        u7915 0767                          u7851 070E                          u7771 0525  
                        u7755 0458                          u7691 03D8                          u6980 0909  
                        u7940 07B4                          u7860 0720                          u7780 0535  
                        u6981 0908                          u7941 07B3                          u7925 077F  
                        u7861 071F                          u7781 0534                          u7685 03A6  
                        u7950 07C0                          u7870 0736                          u7790 0550  
                        u6895 1FE9                          u7951 07BF                          u7871 0735  
                        u7791 054F                          u7775 0522                          u7695 03D5  
                        u7960 07E0                          u7880 0747                          u7961 07DD  
                        u7881 0746                          u7865 071C                          u7785 0531  
                        u7970 1D26                          u7890 0753                          u7971 1D25  
                        u6995 090B                          u7891 0752                          u7875 0732  
                        u7980 1093                          u7981 1092                          u7997 1B37  
           ?_Lcd_Write_String 0076                          _main 1B13                          btemp 007E  
                        start 0008            ??_Lcd_Write_String 0020               ___fldiv@new_exp 0057  
                _sprintf$1236 00B4               __end_of_Lcd_Cmd 18D0                         ??_ISR 0070  
               ___fltol@sign1 0061               __end_of___fladd 14F9                         ?_main 0070  
             __end_of___fldiv 1271               __end_of___awdiv 1C4A               __end_of___flneg 007C  
             __end_of___awmod 1AB7               __end_of___flmul 0C9D               __end_of___flsub 1A06  
             __end_of___fltol 087E                         _ANSEL 0188               __end_of___lldiv 1BE1  
             ___awdiv@divisor 0022               __end_of___llmod 1A5C               __end_of___lwdiv 00ED  
             __end_of___lwmod 0129               ___awdiv@counter 0027                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
     __size_of_Lcd_Set_Cursor 0026                         _TRISA 0085                         _TRISB 0086  
                       _TRISD 0088                         _TRISE 0089                         _TXREG 0019  
            ADC_Config@AN_num 0075                         _data1 00DE                         _data2 0190  
             __end_of_dpowers 18A0               __end_of_initOsc 1B13                         _scale 0C9D  
             __end_of_isdigit 013B                         _setup 1005                         pclath 000A  
                       status 0003                         wtemp0 007E               __end_of_sprintf 07E7  
                 ?_USART_Init 0070              __end_of_Lcd_Init 1966         __size_of_ADC_channel1 0073  
       __size_of_ADC_channel2 0073              __end_of_Lcd_Port 0061               __initialization 07E7  
                __end_of_main 1B79                        ??_main 006E          __size_of__tdiv_to_l_ 00BD  
                      _ADCON1 009F              ___llmod@dividend 0024                        ?_scale 0045  
                      _ADRESH 001E                        _ADRESL 009E                   initOsc@IRCF 0075  
            ___awdiv@dividend 0024           _USART_Init_BaudRate 1000                        ?_setup 0070  
                      _ANSELH 0189                        i1l2411 0014                        i1l2403 0000  
                      i1l2413 0016                        i1l2405 0006                        i1l2415 001A  
                      i1l2407 000C                        i1l2417 0020                        i1l2409 0011  
                      i1l2419 002A                  ??_ADC_Config 0073                  _ADC_channel1 1CB4  
                _ADC_channel2 1021                        u310_20 0020                        u310_21 001F  
                      u311_20 0026                        u311_21 0024                        u312_20 0027  
                      u307_20 0006                        u307_21 0005                        u308_20 000C  
                      u308_21 000B                        u309_20 0011                        u309_21 0010  
                   ??_Lcd_Cmd 0074                        _S1_val 00D2                        _S2_val 00CE  
     __size_of_Lcd_Write_Char 0016              __end_of___xxtofl 1F43              __end_of__powers_ 1844  
                      ___flge 1D27                        ___fleq 1966                     ??___fladd 0061  
                      ___wmul 007C                     ??___fldiv 004D                     ??___awdiv 0026  
                   ??___flneg 0077                     ??___awmod 0077                     ??___flmul 0033  
        ?_USART_Init_BaudRate 0070                     ??___flsub 0078                     ??___fltol 005C  
                   ??___lldiv 0073                     ??___llmod 0073                     ??___lwdiv 0025  
                   ??___lwmod 0077                        _fround 0023              ___awdiv@quotient 0029  
             ___awmod@divisor 0073               ___awmod@counter 0020            __end_of_ADC_Config 1E87  
             _float_to_string 013B                     ??_initOsc 0073                     ??_isdigit 0073  
          __size_of__Umul8_16 0029                        saved_w 007E           __size_of_USART_Init 0010  
                   ??_sprintf 00AF               Lcd_Set_Cursor@a 0021               Lcd_Set_Cursor@b 0077  
                  ___flge@ff1 0020                    ___flge@ff2 0024                  ___xxtofl@arg 0026  
                ___xxtofl@exp 0025                  ___xxtofl@val 0073                    ___fleq@ff1 0020  
                  ___fleq@ff2 0024       __end_of__initialization 07FC                    ___flneg@f1 0073  
                  ___fltol@f1 0058                __pcstackCOMMON 0070         ??_USART_Init_BaudRate 0073  
               __end_of_scale 1000                 __end_of_setup 1021                _Lcd_Set_Cursor 0172  
                  __div_to_l_ 087E                  ?_titulos_LCD 0070                     ?_Lcd_Init 0070  
                   ?_Lcd_Port 0070               __div_to_l_@exp1 002D               __div_to_l_@cntr 002C  
                     ??_scale 0049               __div_to_l_@quot 0028                  sprintf@width 00BF  
                     ??_setup 0076                    __pbssBANK1 00CE                    __pbssBANK3 0190  
               __div_to_l_@f1 0020                 __div_to_l_@f2 0024             __end_of__Umul8_16 005B  
                  __pmaintext 1B13                       ?___flge 0020                       ?___fleq 0020  
                     ?___wmul 0073       __end_of_float_to_string 0172                    __pintentry 0000  
                     ?_fround 0045     __size_of_Lcd_Write_String 0046        __end_of_Lcd_Set_Cursor 0198  
                   ?___xxtofl 0073                       _S3_cont 007A                    ??_Lcd_Init 0020  
                  ??_Lcd_Port 0073                    __stringtab 1800                    _cont_usart 0078  
              _Lcd_Write_Char 000D                       _Lcd_Cmd 18B6                  ??_USART_Init 0073  
           __end_of__npowers_ 1878                    _scale$1235 0053               __size_of___flge 00A4  
             __size_of___fleq 0050                       ___fladd 1271                       ___fldiv 1094  
                     ___awdiv 1BE1                       ___flneg 0071                       ___awmod 1A5C  
                     ___flmul 093C                       ___flsub 19B6                       ___fltol 0802  
                     ___lldiv 1B79               __size_of___wmul 002B                       ___llmod 1A06  
                     ___lwdiv 00A7                       ___lwmod 00ED               __size_of_fround 020D  
             ?_Lcd_Set_Cursor 0077                       __ptext1 1C4A                       __ptext2 18D0  
                     __ptext3 000D                       __ptext4 0172                       __ptext5 1005  
                     __ptext6 1AB7                       __ptext7 013B                       __ptext8 14F9  
                     __ptext9 0C9D                  __size_of_ISR 0032                   ?__div_to_l_ 0020  
                     _dpowers 1878                       _initOsc 1AB7                       _isdigit 0129  
                  ??___xxtofl 0020              ___awmod@dividend 0075            __end_of_USART_Init 0071  
                     _sprintf 14F9                       clrloop0 0199        __end_of_Lcd_Write_Char 0023  
        end_of_initialization 07FC               ___lldiv@divisor 0020               ___lldiv@counter 002C  
                   _RCSTAbits 0018                       psplit$0 130035                     Lcd_Port@a 0073  
              __tdiv_to_l_@f1 0020                __tdiv_to_l_@f2 0024              ?_float_to_string 0070  
               ??__tdiv_to_l_ 0073                     _PORTEbits 0009                   ___fladd@grs 006C  
               ___xxtofl@sign 0024                     _TRISCbits 0087                   ___fldiv@grs 0059  
                 ___fldiv@rem 0052          __size_of_titulos_LCD 006A               ?_Lcd_Write_Char 0070  
           Lcd_Write_String@a 0076             Lcd_Write_String@i 0023                   ___flmul@grs 0039  
                   _TXSTAbits 0098           __size_of__div_to_l_ 00BE                __end_of___flge 1DCB  
              __end_of___fleq 19B6                __end_of___wmul 00A7              _Lcd_Write_String 18D0  
              __end_of_fround 0230           start_initialization 07E7                   __end_of_ISR 0032  
         __end_of__tdiv_to_l_ 2000             __size_of_Lcd_Init 0050             pnum$text8_split_1 0035  
           __size_of_Lcd_Port 0006               ___llmod@divisor 0020   __end_of_USART_Init_BaudRate 1005  
             ___llmod@counter 0074                      ??___flge 0073                      ??___fleq 0073  
                    ??___wmul 0077                     __Umul8_16 0032               Lcd_Write_Char@a 0075  
                    ??_fround 0049                 sprintf@tmpval 00C1                     ___fladd@a 005D  
                   ___fladd@b 0059                    fround@prec 0058                     ___fldiv@a 0045  
                   ___fldiv@b 0049                     ___flmul@a 002F                     ___flmul@b 002B  
                 __pbssCOMMON 0078                     ___flsub@a 00A0                     ___flsub@b 00A4  
                   ___latbits 0002                 __pcstackBANK0 0020                 __pcstackBANK1 00A0  
           __size_of___xxtofl 00BC                  _isdigit$1038 0073                      ?_Lcd_Cmd 0070  
                 sprintf@flag 00BD                   sprintf@eexp 00C5                   sprintf@fval 00C7  
                 sprintf@prec 00CB              ___lwdiv@dividend 0023              ??_Lcd_Set_Cursor 0020  
                    ?___fladd 0059                      ?___fldiv 0045                      ?___awdiv 0022  
                    ?___flneg 0073                      ?___awmod 0073                      ?___flmul 002B  
                    ?___flsub 00A0                      ?___fltol 0058                      ?___lldiv 0020  
                    ?___llmod 0020                     __npowers_ 1844                    ?__Umul8_16 0073  
                    ?___lwdiv 0021                      ?___lwmod 0073                     __pstrings 1800  
                 __tdiv_to_l_ 1F43                  ??__div_to_l_ 0073                      ?_initOsc 0070  
                    ?_isdigit 0070              ___lwdiv@quotient 0027                      ?_sprintf 00A8  
              __size_of_scale 0363                __size_of_setup 001C                 ?_ADC_channel1 0070  
               ?_ADC_channel2 0070             interrupt_function 0000                ___wmul@product 0020  
                   clear_ram0 0198                      _PIE1bits 008C                      Lcd_Cmd@a 0076  
                    _PIR1bits 000C            __end_of__div_to_l_ 093C                      _VAL_SWAP 00DA  
                  _ADCON0bits 001F                   __stringbase 180F             ___wmul@multiplier 0073  
            ??_Lcd_Write_Char 0074                      _Lcd_Init 1916                      _Lcd_Port 005B  
              ??_ADC_channel1 005F                ??_ADC_channel2 005F                    _ADC_Config 1DCB  
    __end_of_Lcd_Write_String 1916              __size_of_Lcd_Cmd 001A                   ??__Umul8_16 0075  
            __size_of___fladd 0288              __size_of___fldiv 01DD              __size_of___awdiv 0069  
            __size_of___flneg 000B              __size_of___awmod 005B              __size_of___flmul 0361  
            __size_of___flsub 0050              __size_of___fltol 007C              __size_of___lldiv 0068  
            __size_of___llmod 0056              __size_of___lwdiv 0046              __size_of___lwmod 003C  
                 _fround$1233 0054                   _fround$1234 0050            __end_of__stringtab 1810  
                  sprintf@val 00B9                      ___xxtofl 1E87                 ??_titulos_LCD 0025  
            __size_of_initOsc 005C      __size_of_float_to_string 0037              __size_of_isdigit 0012  
             ___lwdiv@divisor 0021               ___lwdiv@counter 0026                      __ptext10 1A5C  
                    __ptext11 1BE1                      __ptext20 1B79                      __ptext12 0129  
                    __ptext21 0802                      __ptext13 0023                      __ptext30 18B6  
                    __ptext22 19B6                      __ptext14 00ED                      __ptext31 005B  
                    __ptext23 1271                      __ptext15 00A7                      __ptext32 1021  
                    __ptext24 0071                      __ptext16 1F43                      __ptext33 1CB4  
                    __ptext25 1D27                      __ptext17 087E                      __ptext34 1E87  
                    __ptext26 1966                      __ptext18 007C                      __ptext35 093C  
                    __ptext27 1000                      __ptext19 1A06                      __ptext36 0032  
                    __ptext28 0061                      __ptext37 1094                      __ptext29 1916  
                    __ptext38 1DCB                      __ptext39 0000                      __powers_ 1810  
                 _eusart_flag 0079              __size_of_sprintf F2EE                 __size_of_main 0066  
                   pnum$text8 0013                    _INTCONbits 000B                   _VAL_NIBBLE1 00D8  
                 _VAL_NIBBLE2 00D6                      isdigit@c 0074                      scale@scl 0057  
                    intlevel1 0000                     sprintf@ap 00B8              __tdiv_to_l_@exp1 002D  
            __tdiv_to_l_@cntr 002C                     sprintf@sp 00A8                   ?_ADC_Config 0070  
         __end_of_titulos_LCD 1CB4              __tdiv_to_l_@quot 0028              ___lwmod@dividend 0075  
            ___lldiv@dividend 0024                     stringcode 180A                    _OSCCONbits 008F  
__size_of_USART_Init_BaudRate 0005          __end_of_ADC_channel1 1D27          __end_of_ADC_channel2 1094  
          Lcd_Set_Cursor@temp 0022                  ?__tdiv_to_l_ 0020        __Umul8_16@multiplicand 0073  
                    sprintf@c 00CD                      sprintf@f 00AA              ___lldiv@quotient 0028  
             ___lwmod@divisor 0073               ___lwmod@counter 0020                      stringdir 180A  
                    stringtab 1800                 ___fladd@signs 0069             ??_float_to_string 006D  
                ___fladd@aexp 006A                  ___fladd@bexp 006B          __Umul8_16@multiplier 0024  
                  _USART_Init 0061             __Umul8_16@product 0020  
