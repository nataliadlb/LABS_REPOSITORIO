

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 11 14:09:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  0105                     	;# 
   150  0107                     	;# 
   151  0108                     	;# 
   152  0109                     	;# 
   153  010C                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0185                     	;# 
   159  0187                     	;# 
   160  0188                     	;# 
   161  0189                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  0105                     	;# 
   228  0107                     	;# 
   229  0108                     	;# 
   230  0109                     	;# 
   231  010C                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  0185                     	;# 
   237  0187                     	;# 
   238  0188                     	;# 
   239  0189                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001D                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0086                     	;# 
   280  0087                     	;# 
   281  0088                     	;# 
   282  0089                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  0105                     	;# 
   306  0107                     	;# 
   307  0108                     	;# 
   308  0109                     	;# 
   309  010C                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  0185                     	;# 
   315  0187                     	;# 
   316  0188                     	;# 
   317  0189                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  000E                     	;# 
   336  000F                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0014                     	;# 
   342  0015                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0017                     	;# 
   346  0018                     	;# 
   347  0019                     	;# 
   348  001A                     	;# 
   349  001B                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001D                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  0081                     	;# 
   356  0085                     	;# 
   357  0086                     	;# 
   358  0087                     	;# 
   359  0088                     	;# 
   360  0089                     	;# 
   361  008C                     	;# 
   362  008D                     	;# 
   363  008E                     	;# 
   364  008F                     	;# 
   365  0090                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0095                     	;# 
   373  0096                     	;# 
   374  0097                     	;# 
   375  0098                     	;# 
   376  0099                     	;# 
   377  009A                     	;# 
   378  009B                     	;# 
   379  009C                     	;# 
   380  009D                     	;# 
   381  009E                     	;# 
   382  009F                     	;# 
   383  0105                     	;# 
   384  0107                     	;# 
   385  0108                     	;# 
   386  0109                     	;# 
   387  010C                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  010F                     	;# 
   392  0185                     	;# 
   393  0187                     	;# 
   394  0188                     	;# 
   395  0189                     	;# 
   396  018C                     	;# 
   397  018D                     	;# 
   398  0000                     	;# 
   399  0001                     	;# 
   400  0002                     	;# 
   401  0003                     	;# 
   402  0004                     	;# 
   403  0005                     	;# 
   404  0006                     	;# 
   405  0007                     	;# 
   406  0008                     	;# 
   407  0009                     	;# 
   408  000A                     	;# 
   409  000B                     	;# 
   410  000C                     	;# 
   411  000D                     	;# 
   412  000E                     	;# 
   413  000E                     	;# 
   414  000F                     	;# 
   415  0010                     	;# 
   416  0011                     	;# 
   417  0012                     	;# 
   418  0013                     	;# 
   419  0014                     	;# 
   420  0015                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  001D                     	;# 
   431  001E                     	;# 
   432  001F                     	;# 
   433  0081                     	;# 
   434  0085                     	;# 
   435  0086                     	;# 
   436  0087                     	;# 
   437  0088                     	;# 
   438  0089                     	;# 
   439  008C                     	;# 
   440  008D                     	;# 
   441  008E                     	;# 
   442  008F                     	;# 
   443  0090                     	;# 
   444  0091                     	;# 
   445  0092                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0093                     	;# 
   449  0094                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  009F                     	;# 
   461  0105                     	;# 
   462  0107                     	;# 
   463  0108                     	;# 
   464  0109                     	;# 
   465  010C                     	;# 
   466  010C                     	;# 
   467  010D                     	;# 
   468  010E                     	;# 
   469  010F                     	;# 
   470  0185                     	;# 
   471  0187                     	;# 
   472  0188                     	;# 
   473  0189                     	;# 
   474  018C                     	;# 
   475  018D                     	;# 
   476                           
   477                           	psect	strings
   478  1800                     __pstrings:
   479  1800                     stringtab:
   480  1800                     __stringtab:
   481  1800                     stringcode:	
   482                           ;	String table - string pointers are 1 byte each
   483                           
   484  1800                     stringdir:
   485  1800  3018               	movlw	high stringdir
   486  1801  008A               	movwf	10
   487  1802  0804               	movf	4,w
   488  1803  0A84               	incf	4,f
   489  1804  0782               	addwf	2,f
   490  1805                     __stringbase:
   491  1805  3400               	retlw	0
   492  1806                     __end_of__stringtab:
   493  1806                     __powers_:
   494  1806  3400               	retlw	0
   495  1807  3400               	retlw	0
   496  1808  3480               	retlw	128
   497  1809  343F               	retlw	63
   498  180A  3400               	retlw	0
   499  180B  3400               	retlw	0
   500  180C  3420               	retlw	32
   501  180D  3441               	retlw	65
   502  180E  3400               	retlw	0
   503  180F  3400               	retlw	0
   504  1810  34C8               	retlw	200
   505  1811  3442               	retlw	66
   506  1812  3400               	retlw	0
   507  1813  3400               	retlw	0
   508  1814  347A               	retlw	122
   509  1815  3444               	retlw	68
   510  1816  3400               	retlw	0
   511  1817  3440               	retlw	64
   512  1818  341C               	retlw	28
   513  1819  3446               	retlw	70
   514  181A  3400               	retlw	0
   515  181B  3450               	retlw	80
   516  181C  34C3               	retlw	195
   517  181D  3447               	retlw	71
   518  181E  3400               	retlw	0
   519  181F  3424               	retlw	36
   520  1820  3474               	retlw	116
   521  1821  3449               	retlw	73
   522  1822  3480               	retlw	128
   523  1823  3496               	retlw	150
   524  1824  3418               	retlw	24
   525  1825  344B               	retlw	75
   526  1826  3420               	retlw	32
   527  1827  34BC               	retlw	188
   528  1828  34BE               	retlw	190
   529  1829  344C               	retlw	76
   530  182A  3428               	retlw	40
   531  182B  346B               	retlw	107
   532  182C  346E               	retlw	110
   533  182D  344E               	retlw	78
   534  182E  34F9               	retlw	249
   535  182F  3402               	retlw	2
   536  1830  3415               	retlw	21
   537  1831  3450               	retlw	80
   538  1832  34EC               	retlw	236
   539  1833  3478               	retlw	120
   540  1834  34AD               	retlw	173
   541  1835  3460               	retlw	96
   542  1836  34CA               	retlw	202
   543  1837  34F2               	retlw	242
   544  1838  3449               	retlw	73
   545  1839  3471               	retlw	113
   546  183A                     __end_of__powers_:
   547  183A                     __npowers_:
   548  183A  3400               	retlw	0
   549  183B  3400               	retlw	0
   550  183C  3480               	retlw	128
   551  183D  343F               	retlw	63
   552  183E  34CD               	retlw	205
   553  183F  34CC               	retlw	204
   554  1840  34CC               	retlw	204
   555  1841  343D               	retlw	61
   556  1842  340A               	retlw	10
   557  1843  34D7               	retlw	215
   558  1844  3423               	retlw	35
   559  1845  343C               	retlw	60
   560  1846  346F               	retlw	111
   561  1847  3412               	retlw	18
   562  1848  3483               	retlw	131
   563  1849  343A               	retlw	58
   564  184A  3417               	retlw	23
   565  184B  34B7               	retlw	183
   566  184C  34D1               	retlw	209
   567  184D  3438               	retlw	56
   568  184E  34AC               	retlw	172
   569  184F  34C5               	retlw	197
   570  1850  3427               	retlw	39
   571  1851  3437               	retlw	55
   572  1852  34BD               	retlw	189
   573  1853  3437               	retlw	55
   574  1854  3486               	retlw	134
   575  1855  3435               	retlw	53
   576  1856  3495               	retlw	149
   577  1857  34BF               	retlw	191
   578  1858  34D6               	retlw	214
   579  1859  3433               	retlw	51
   580  185A  3477               	retlw	119
   581  185B  34CC               	retlw	204
   582  185C  342B               	retlw	43
   583  185D  3432               	retlw	50
   584  185E  345F               	retlw	95
   585  185F  3470               	retlw	112
   586  1860  3489               	retlw	137
   587  1861  3430               	retlw	48
   588  1862  34FF               	retlw	255
   589  1863  34E6               	retlw	230
   590  1864  34DB               	retlw	219
   591  1865  342E               	retlw	46
   592  1866  3408               	retlw	8
   593  1867  34E5               	retlw	229
   594  1868  343C               	retlw	60
   595  1869  341E               	retlw	30
   596  186A  3460               	retlw	96
   597  186B  3442               	retlw	66
   598  186C  34A2               	retlw	162
   599  186D  340D               	retlw	13
   600  186E                     __end_of__npowers_:
   601  186E                     _dpowers:
   602  186E  3401               	retlw	1
   603  186F  3400               	retlw	0
   604  1870  3400               	retlw	0
   605  1871  3400               	retlw	0
   606  1872  340A               	retlw	10
   607  1873  3400               	retlw	0
   608  1874  3400               	retlw	0
   609  1875  3400               	retlw	0
   610  1876  3464               	retlw	100
   611  1877  3400               	retlw	0
   612  1878  3400               	retlw	0
   613  1879  3400               	retlw	0
   614  187A  34E8               	retlw	232
   615  187B  3403               	retlw	3
   616  187C  3400               	retlw	0
   617  187D  3400               	retlw	0
   618  187E  3410               	retlw	16
   619  187F  3427               	retlw	39
   620  1880  3400               	retlw	0
   621  1881  3400               	retlw	0
   622  1882  34A0               	retlw	160
   623  1883  3486               	retlw	134
   624  1884  3401               	retlw	1
   625  1885  3400               	retlw	0
   626  1886  3440               	retlw	64
   627  1887  3442               	retlw	66
   628  1888  340F               	retlw	15
   629  1889  3400               	retlw	0
   630  188A  3480               	retlw	128
   631  188B  3496               	retlw	150
   632  188C  3498               	retlw	152
   633  188D  3400               	retlw	0
   634  188E  3400               	retlw	0
   635  188F  34E1               	retlw	225
   636  1890  34F5               	retlw	245
   637  1891  3405               	retlw	5
   638  1892  3400               	retlw	0
   639  1893  34CA               	retlw	202
   640  1894  349A               	retlw	154
   641  1895  343B               	retlw	59
   642  1896                     __end_of_dpowers:
   643  0009                     _PORTEbits	set	9
   644  0009                     _PORTE	set	9
   645  0008                     _PORTD	set	8
   646  0007                     _PORTC	set	7
   647  0006                     _PORTB	set	6
   648  0005                     _PORTA	set	5
   649  001E                     _ADRESH	set	30
   650  001F                     _ADCON0bits	set	31
   651  009F                     _ADCON1	set	159
   652  009E                     _ADRESL	set	158
   653  008F                     _OSCCONbits	set	143
   654  0089                     _TRISE	set	137
   655  0088                     _TRISD	set	136
   656  0087                     _TRISC	set	135
   657  0086                     _TRISB	set	134
   658  0085                     _TRISA	set	133
   659  0189                     _ANSELH	set	393
   660  0188                     _ANSEL	set	392
   661  1896                     STR_6:
   662  1896  3425               	retlw	37	;'%'
   663  1897  3431               	retlw	49	;'1'
   664  1898  342E               	retlw	46	;'.'
   665  1899  3432               	retlw	50	;'2'
   666  189A  3466               	retlw	102	;'f'
   667  189B  3420               	retlw	32	;' '
   668  189C  3400               	retlw	0
   669  189D                     STR_7:
   670  189D  3425               	retlw	37	;'%'
   671  189E  3431               	retlw	49	;'1'
   672  189F  342E               	retlw	46	;'.'
   673  18A0  3432               	retlw	50	;'2'
   674  18A1  3466               	retlw	102	;'f'
   675  18A2  3400               	retlw	0
   676  18A3                     STR_1:
   677  18A3  3453               	retlw	83	;'S'
   678  18A4  3431               	retlw	49	;'1'
   679  18A5  343A               	retlw	58	;':'
   680  18A6  3400               	retlw	0
   681  18A7                     STR_2:
   682  18A7  3453               	retlw	83	;'S'
   683  18A8  3432               	retlw	50	;'2'
   684  18A9  343A               	retlw	58	;':'
   685  18AA  3400               	retlw	0
   686  18AB                     STR_3:
   687  18AB  3453               	retlw	83	;'S'
   688  18AC  3433               	retlw	51	;'3'
   689  18AD  343A               	retlw	58	;':'
   690  18AE  3400               	retlw	0
   691  18AF                     STR_4:
   692  18AF  3456               	retlw	86	;'V'
   693  18B0  3400               	retlw	0
   694  18AF                     
   695                           	psect	cinit
   696  07F0                     start_initialization:	
   697                           ; #config settings
   698                           
   699  07F0                     __initialization:
   700                           
   701                           ; Clear objects allocated to BANK0
   702  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   703  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   704  07F2  01EF               	clrf	__pbssBANK0& (0+127)
   705                           
   706                           ; Clear objects allocated to BANK1
   707  07F3  1383               	bcf	3,7	;select IRP bank0
   708  07F4  30C7               	movlw	low __pbssBANK1
   709  07F5  0084               	movwf	4
   710  07F6  30E7               	movlw	low (__pbssBANK1+32)
   711  07F7  120A  118A  2004  120A  118A  	fcall	clear_ram0
   712  07FC                     end_of_initialization:	
   713                           ;End of C runtime variable initialization code
   714                           
   715  07FC                     __end_of__initialization:
   716  07FC  0183               	clrf	3
   717  07FD  160A  158A  2AB1   	ljmp	_main	;jump to C main() function
   718                           
   719                           	psect	bssBANK0
   720  006F                     __pbssBANK0:
   721  006F                     _S3_cont:
   722  006F                     	ds	1
   723                           
   724                           	psect	bssBANK1
   725  00C7                     __pbssBANK1:
   726  00C7                     _S2_val:
   727  00C7                     	ds	4
   728  00CB                     _S1_val:
   729  00CB                     	ds	4
   730  00CF                     _VAL_NIBBLE2:
   731  00CF                     	ds	2
   732  00D1                     _VAL_NIBBLE1:
   733  00D1                     	ds	2
   734  00D3                     _VAL_SWAP:
   735  00D3                     	ds	2
   736  00D5                     _VAL:
   737  00D5                     	ds	2
   738  00D7                     _data2:
   739  00D7                     	ds	8
   740  00DF                     _data1:
   741  00DF                     	ds	8
   742                           
   743                           	psect	clrtext
   744  0004                     clear_ram0:	
   745                           ;	Called with FSR containing the base address, and
   746                           ;	W with the last address+1
   747                           
   748  0004  0064               	clrwdt	;clear the watchdog before getting into this loop
   749  0005                     clrloop0:
   750  0005  0180               	clrf	0	;clear RAM location pointed to by FSR
   751  0006  0A84               	incf	4,f	;increment pointer
   752  0007  0604               	xorwf	4,w	;XOR with final address
   753  0008  1903               	btfsc	3,2	;have we reached the end yet?
   754  0009  3400               	retlw	0	;all done for this memory range, return
   755  000A  0604               	xorwf	4,w	;XOR again to restore value
   756  000B  2805               	goto	clrloop0	;do the next byte
   757                           
   758                           	psect	cstackBANK1
   759  00A0                     __pcstackBANK1:
   760  00A0                     ?_sprintf:
   761  00A0                     sprintf@f:	
   762                           ; 2 bytes @ 0x0
   763                           
   764                           
   765                           ; 1 bytes @ 0x0
   766  00A0                     	ds	5
   767  00A5                     ??_sprintf:
   768                           
   769                           ; 1 bytes @ 0x5
   770  00A5                     	ds	5
   771  00AA                     _sprintf$1003:
   772                           
   773                           ; 4 bytes @ 0xA
   774  00AA                     	ds	4
   775  00AE                     sprintf@ap:
   776                           
   777                           ; 1 bytes @ 0xE
   778  00AE                     	ds	1
   779  00AF                     sprintf@val:
   780                           
   781                           ; 4 bytes @ 0xF
   782  00AF                     	ds	4
   783  00B3                     sprintf@flag:
   784                           
   785                           ; 2 bytes @ 0x13
   786  00B3                     	ds	2
   787  00B5                     sprintf@width:
   788                           
   789                           ; 2 bytes @ 0x15
   790  00B5                     	ds	2
   791  00B7                     sprintf@tmpval:
   792                           
   793                           ; 4 bytes @ 0x17
   794  00B7                     	ds	4
   795  00BB                     sprintf@eexp:
   796                           
   797                           ; 2 bytes @ 0x1B
   798  00BB                     	ds	2
   799  00BD                     sprintf@fval:
   800                           
   801                           ; 4 bytes @ 0x1D
   802  00BD                     	ds	4
   803  00C1                     sprintf@sp:
   804                           
   805                           ; 1 bytes @ 0x21
   806  00C1                     	ds	1
   807  00C2                     sprintf@prec:
   808                           
   809                           ; 2 bytes @ 0x22
   810  00C2                     	ds	2
   811  00C4                     sprintf@c:
   812                           
   813                           ; 1 bytes @ 0x24
   814  00C4                     	ds	1
   815  00C5                     ??_main:
   816                           
   817                           ; 1 bytes @ 0x25
   818  00C5                     	ds	2
   819                           
   820                           	psect	cstackCOMMON
   821  0070                     __pcstackCOMMON:
   822  0070                     ?_isdigit:
   823  0070                     ?___fleq:	
   824                           ; 1 bit 
   825                           
   826  0070                     ?___flge:	
   827                           ; 1 bit 
   828                           
   829  0070                     ?_setup:	
   830                           ; 1 bit 
   831                           
   832  0070                     ?_Lcd_Init:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ?_titulos_LCD:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ?_ADC_channel1:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ?_ADC_channel2:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_float_to_string:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ?_Lcd_Write_String:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ?_ADC_Config:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ??_ADC_Config:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?_initOsc:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ??_initOsc:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_Lcd_Port:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ??_Lcd_Port:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_Lcd_Cmd:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ??_isdigit:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_main:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ?_Lcd_Write_Char:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0070                     ?__Umul8_16:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0070                     ?___wmul:	
   884                           ; 2 bytes @ 0x0
   885                           
   886  0070                     ?___awmod:	
   887                           ; 2 bytes @ 0x0
   888                           
   889  0070                     ?___lwmod:	
   890                           ; 2 bytes @ 0x0
   891                           
   892  0070                     ?__tdiv_to_l_:	
   893                           ; 2 bytes @ 0x0
   894                           
   895  0070                     ?__div_to_l_:	
   896                           ; 4 bytes @ 0x0
   897                           
   898  0070                     ?___lldiv:	
   899                           ; 4 bytes @ 0x0
   900                           
   901  0070                     ?___flneg:	
   902                           ; 4 bytes @ 0x0
   903                           
   904  0070                     ?___llmod:	
   905                           ; 4 bytes @ 0x0
   906                           
   907  0070                     ?___xxtofl:	
   908                           ; 4 bytes @ 0x0
   909                           
   910  0070                     Lcd_Port@a:	
   911                           ; 4 bytes @ 0x0
   912                           
   913  0070                     __Umul8_16@multiplicand:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0070                     _isdigit$811:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0070                     ___wmul@multiplier:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0070                     ___awmod@divisor:	
   923                           ; 2 bytes @ 0x0
   924                           
   925  0070                     ___lwmod@divisor:	
   926                           ; 2 bytes @ 0x0
   927                           
   928  0070                     ___lldiv@divisor:	
   929                           ; 2 bytes @ 0x0
   930                           
   931  0070                     __div_to_l_@f1:	
   932                           ; 4 bytes @ 0x0
   933                           
   934  0070                     ___fleq@ff1:	
   935                           ; 4 bytes @ 0x0
   936                           
   937  0070                     ___flge@ff1:	
   938                           ; 4 bytes @ 0x0
   939                           
   940  0070                     ___flneg@f1:	
   941                           ; 4 bytes @ 0x0
   942                           
   943  0070                     __tdiv_to_l_@f1:	
   944                           ; 4 bytes @ 0x0
   945                           
   946  0070                     ___llmod@divisor:	
   947                           ; 4 bytes @ 0x0
   948                           
   949  0070                     ___xxtofl@val:	
   950                           ; 4 bytes @ 0x0
   951                           
   952                           
   953                           ; 4 bytes @ 0x0
   954  0070                     	ds	1
   955  0071                     ??_Lcd_Cmd:
   956  0071                     ??_Lcd_Write_Char:	
   957                           ; 1 bytes @ 0x1
   958                           
   959  0071                     isdigit@c:	
   960                           ; 1 bytes @ 0x1
   961                           
   962                           
   963                           ; 1 bytes @ 0x1
   964  0071                     	ds	1
   965  0072                     ??__Umul8_16:
   966  0072                     initOsc@IRCF:	
   967                           ; 1 bytes @ 0x2
   968                           
   969  0072                     Lcd_Write_Char@a:	
   970                           ; 1 bytes @ 0x2
   971                           
   972  0072                     ADC_Config@AN_num:	
   973                           ; 1 bytes @ 0x2
   974                           
   975  0072                     ___wmul@multiplicand:	
   976                           ; 1 bytes @ 0x2
   977                           
   978  0072                     ___awmod@dividend:	
   979                           ; 2 bytes @ 0x2
   980                           
   981  0072                     ___lwmod@dividend:	
   982                           ; 2 bytes @ 0x2
   983                           
   984                           
   985                           ; 2 bytes @ 0x2
   986  0072                     	ds	1
   987  0073                     ??_setup:
   988  0073                     ??_Lcd_Write_String:	
   989                           ; 1 bytes @ 0x3
   990                           
   991  0073                     Lcd_Cmd@a:	
   992                           ; 1 bytes @ 0x3
   993                           
   994  0073                     Lcd_Write_String@i:	
   995                           ; 1 bytes @ 0x3
   996                           
   997                           
   998                           ; 2 bytes @ 0x3
   999  0073                     	ds	1
  1000  0074                     ??_Lcd_Init:
  1001  0074                     ?_Lcd_Set_Cursor:	
  1002                           ; 1 bytes @ 0x4
  1003                           
  1004  0074                     ??___wmul:	
  1005                           ; 1 bytes @ 0x4
  1006                           
  1007  0074                     ??___awmod:	
  1008                           ; 1 bytes @ 0x4
  1009                           
  1010  0074                     ??___flneg:	
  1011                           ; 1 bytes @ 0x4
  1012                           
  1013  0074                     ??___lwmod:	
  1014                           ; 1 bytes @ 0x4
  1015                           
  1016  0074                     ??___xxtofl:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019  0074                     Lcd_Set_Cursor@b:	
  1020                           ; 1 bytes @ 0x4
  1021                           
  1022  0074                     ___wmul@product:	
  1023                           ; 1 bytes @ 0x4
  1024                           
  1025  0074                     __Umul8_16@product:	
  1026                           ; 2 bytes @ 0x4
  1027                           
  1028  0074                     ___lldiv@dividend:	
  1029                           ; 2 bytes @ 0x4
  1030                           
  1031  0074                     __div_to_l_@f2:	
  1032                           ; 4 bytes @ 0x4
  1033                           
  1034  0074                     ___fleq@ff2:	
  1035                           ; 4 bytes @ 0x4
  1036                           
  1037  0074                     ___flge@ff2:	
  1038                           ; 4 bytes @ 0x4
  1039                           
  1040  0074                     __tdiv_to_l_@f2:	
  1041                           ; 4 bytes @ 0x4
  1042                           
  1043  0074                     ___llmod@dividend:	
  1044                           ; 4 bytes @ 0x4
  1045                           
  1046                           
  1047                           ; 4 bytes @ 0x4
  1048  0074                     	ds	1
  1049  0075                     ??_Lcd_Set_Cursor:
  1050  0075                     Lcd_Write_String@a:	
  1051                           ; 1 bytes @ 0x5
  1052                           
  1053  0075                     ___awmod@counter:	
  1054                           ; 1 bytes @ 0x5
  1055                           
  1056  0075                     ___lwmod@counter:	
  1057                           ; 1 bytes @ 0x5
  1058                           
  1059                           
  1060                           ; 1 bytes @ 0x5
  1061  0075                     	ds	1
  1062  0076                     ?___lwdiv:
  1063  0076                     Lcd_Set_Cursor@a:	
  1064                           ; 2 bytes @ 0x6
  1065                           
  1066  0076                     ___awmod@sign:	
  1067                           ; 1 bytes @ 0x6
  1068                           
  1069  0076                     ___lwdiv@divisor:	
  1070                           ; 1 bytes @ 0x6
  1071                           
  1072  0076                     __Umul8_16@word_mpld:	
  1073                           ; 2 bytes @ 0x6
  1074                           
  1075                           
  1076                           ; 2 bytes @ 0x6
  1077  0076                     	ds	1
  1078  0077                     ?___awdiv:
  1079  0077                     Lcd_Set_Cursor@temp:	
  1080                           ; 2 bytes @ 0x7
  1081                           
  1082  0077                     ___awdiv@divisor:	
  1083                           ; 1 bytes @ 0x7
  1084                           
  1085                           
  1086                           ; 2 bytes @ 0x7
  1087  0077                     	ds	1
  1088  0078                     ??_titulos_LCD:
  1089  0078                     ??__tdiv_to_l_:	
  1090                           ; 1 bytes @ 0x8
  1091                           
  1092  0078                     ??__div_to_l_:	
  1093                           ; 1 bytes @ 0x8
  1094                           
  1095  0078                     ??___lldiv:	
  1096                           ; 1 bytes @ 0x8
  1097                           
  1098  0078                     ??___fleq:	
  1099                           ; 1 bytes @ 0x8
  1100                           
  1101  0078                     ??___flge:	
  1102                           ; 1 bytes @ 0x8
  1103                           
  1104  0078                     ??___llmod:	
  1105                           ; 1 bytes @ 0x8
  1106                           
  1107  0078                     __Umul8_16@multiplier:	
  1108                           ; 1 bytes @ 0x8
  1109                           
  1110  0078                     ___xxtofl@sign:	
  1111                           ; 1 bytes @ 0x8
  1112                           
  1113  0078                     ___lwdiv@dividend:	
  1114                           ; 1 bytes @ 0x8
  1115                           
  1116                           
  1117                           ; 2 bytes @ 0x8
  1118  0078                     	ds	1
  1119  0079                     ___llmod@counter:
  1120  0079                     ___xxtofl@exp:	
  1121                           ; 1 bytes @ 0x9
  1122                           
  1123  0079                     ___awdiv@dividend:	
  1124                           ; 1 bytes @ 0x9
  1125                           
  1126  0079                     ___lldiv@quotient:	
  1127                           ; 2 bytes @ 0x9
  1128                           
  1129                           
  1130                           ; 4 bytes @ 0x9
  1131  0079                     	ds	1
  1132  007A                     ??___lwdiv:
  1133  007A                     ___xxtofl@arg:	
  1134                           ; 1 bytes @ 0xA
  1135                           
  1136                           
  1137                           ; 4 bytes @ 0xA
  1138  007A                     	ds	1
  1139  007B                     ??___awdiv:
  1140  007B                     ___lwdiv@quotient:	
  1141                           ; 1 bytes @ 0xB
  1142                           
  1143                           
  1144                           ; 2 bytes @ 0xB
  1145  007B                     	ds	2
  1146  007D                     ___lldiv@counter:
  1147  007D                     ___lwdiv@counter:	
  1148                           ; 1 bytes @ 0xD
  1149                           
  1150                           
  1151                           ; 1 bytes @ 0xD
  1152  007D                     	ds	1
  1153  007E                     ??___flsub:
  1154                           
  1155                           	psect	cstackBANK0
  1156  0020                     __pcstackBANK0:	
  1157                           ; 1 bytes @ 0xE
  1158                           
  1159  0020                     ___awdiv@counter:
  1160  0020                     __div_to_l_@quot:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0020                     __tdiv_to_l_@quot:	
  1164                           ; 4 bytes @ 0x0
  1165                           
  1166                           
  1167                           ; 4 bytes @ 0x0
  1168  0020                     	ds	1
  1169  0021                     ___awdiv@sign:
  1170                           
  1171                           ; 1 bytes @ 0x1
  1172  0021                     	ds	1
  1173  0022                     ___awdiv@quotient:
  1174                           
  1175                           ; 2 bytes @ 0x2
  1176  0022                     	ds	2
  1177  0024                     ?___flmul:
  1178  0024                     __div_to_l_@cntr:	
  1179                           ; 4 bytes @ 0x4
  1180                           
  1181  0024                     __tdiv_to_l_@cntr:	
  1182                           ; 1 bytes @ 0x4
  1183                           
  1184  0024                     ___flmul@b:	
  1185                           ; 1 bytes @ 0x4
  1186                           
  1187                           
  1188                           ; 4 bytes @ 0x4
  1189  0024                     	ds	1
  1190  0025                     __div_to_l_@exp1:
  1191  0025                     __tdiv_to_l_@exp1:	
  1192                           ; 1 bytes @ 0x5
  1193                           
  1194                           
  1195                           ; 1 bytes @ 0x5
  1196  0025                     	ds	3
  1197  0028                     ___flmul@a:
  1198                           
  1199                           ; 4 bytes @ 0x8
  1200  0028                     	ds	4
  1201  002C                     ??___flmul:
  1202                           
  1203                           ; 1 bytes @ 0xC
  1204  002C                     	ds	5
  1205  0031                     ___flmul@sign:
  1206                           
  1207                           ; 1 bytes @ 0x11
  1208  0031                     	ds	1
  1209  0032                     ___flmul@grs:
  1210                           
  1211                           ; 4 bytes @ 0x12
  1212  0032                     	ds	4
  1213  0036                     ___flmul@aexp:
  1214                           
  1215                           ; 1 bytes @ 0x16
  1216  0036                     	ds	1
  1217  0037                     ___flmul@bexp:
  1218                           
  1219                           ; 1 bytes @ 0x17
  1220  0037                     	ds	1
  1221  0038                     ___flmul@prod:
  1222                           
  1223                           ; 4 bytes @ 0x18
  1224  0038                     	ds	4
  1225  003C                     ___flmul@temp:
  1226                           
  1227                           ; 2 bytes @ 0x1C
  1228  003C                     	ds	2
  1229  003E                     ?_fround:
  1230  003E                     ?_scale:	
  1231                           ; 4 bytes @ 0x1E
  1232                           
  1233  003E                     ?___fldiv:	
  1234                           ; 4 bytes @ 0x1E
  1235                           
  1236  003E                     ___fldiv@a:	
  1237                           ; 4 bytes @ 0x1E
  1238                           
  1239                           
  1240                           ; 4 bytes @ 0x1E
  1241  003E                     	ds	4
  1242  0042                     ??_fround:
  1243  0042                     ??_scale:	
  1244                           ; 1 bytes @ 0x22
  1245                           
  1246  0042                     ___fldiv@b:	
  1247                           ; 1 bytes @ 0x22
  1248                           
  1249                           
  1250                           ; 4 bytes @ 0x22
  1251  0042                     	ds	4
  1252  0046                     ??___fldiv:
  1253                           
  1254                           ; 1 bytes @ 0x26
  1255  0046                     	ds	3
  1256  0049                     _fround$1001:
  1257                           
  1258                           ; 4 bytes @ 0x29
  1259  0049                     	ds	2
  1260  004B                     ___fldiv@rem:
  1261                           
  1262                           ; 4 bytes @ 0x2B
  1263  004B                     	ds	1
  1264  004C                     _scale$1002:
  1265                           
  1266                           ; 4 bytes @ 0x2C
  1267  004C                     	ds	1
  1268  004D                     _fround$1000:
  1269                           
  1270                           ; 4 bytes @ 0x2D
  1271  004D                     	ds	2
  1272  004F                     ___fldiv@sign:
  1273                           
  1274                           ; 1 bytes @ 0x2F
  1275  004F                     	ds	1
  1276  0050                     scale@scl:
  1277  0050                     ___fldiv@new_exp:	
  1278                           ; 1 bytes @ 0x30
  1279                           
  1280                           
  1281                           ; 2 bytes @ 0x30
  1282  0050                     	ds	1
  1283  0051                     ?___fltol:
  1284  0051                     fround@prec:	
  1285                           ; 4 bytes @ 0x31
  1286                           
  1287  0051                     ___fltol@f1:	
  1288                           ; 1 bytes @ 0x31
  1289                           
  1290                           
  1291                           ; 4 bytes @ 0x31
  1292  0051                     	ds	1
  1293  0052                     ?___fladd:
  1294  0052                     ___fladd@b:	
  1295                           ; 4 bytes @ 0x32
  1296                           
  1297  0052                     ___fldiv@grs:	
  1298                           ; 4 bytes @ 0x32
  1299                           
  1300                           
  1301                           ; 4 bytes @ 0x32
  1302  0052                     	ds	3
  1303  0055                     ??___fltol:
  1304                           
  1305                           ; 1 bytes @ 0x35
  1306  0055                     	ds	1
  1307  0056                     ___fldiv@bexp:
  1308  0056                     ___fladd@a:	
  1309                           ; 1 bytes @ 0x36
  1310                           
  1311                           
  1312                           ; 4 bytes @ 0x36
  1313  0056                     	ds	1
  1314  0057                     ___fldiv@aexp:
  1315                           
  1316                           ; 1 bytes @ 0x37
  1317  0057                     	ds	1
  1318  0058                     ??_ADC_channel1:
  1319  0058                     ??_ADC_channel2:	
  1320                           ; 1 bytes @ 0x38
  1321                           
  1322                           
  1323                           ; 1 bytes @ 0x38
  1324  0058                     	ds	2
  1325  005A                     ??___fladd:
  1326  005A                     ___fltol@sign1:	
  1327                           ; 1 bytes @ 0x3A
  1328                           
  1329                           
  1330                           ; 1 bytes @ 0x3A
  1331  005A                     	ds	1
  1332  005B                     ___fltol@exp1:
  1333                           
  1334                           ; 1 bytes @ 0x3B
  1335  005B                     	ds	7
  1336  0062                     ___fladd@signs:
  1337                           
  1338                           ; 1 bytes @ 0x42
  1339  0062                     	ds	1
  1340  0063                     ___fladd@aexp:
  1341                           
  1342                           ; 1 bytes @ 0x43
  1343  0063                     	ds	1
  1344  0064                     ___fladd@bexp:
  1345                           
  1346                           ; 1 bytes @ 0x44
  1347  0064                     	ds	1
  1348  0065                     ___fladd@grs:
  1349                           
  1350                           ; 1 bytes @ 0x45
  1351  0065                     	ds	1
  1352  0066                     ?___flsub:
  1353  0066                     ___flsub@a:	
  1354                           ; 4 bytes @ 0x46
  1355                           
  1356                           
  1357                           ; 4 bytes @ 0x46
  1358  0066                     	ds	4
  1359  006A                     ___flsub@b:
  1360                           
  1361                           ; 4 bytes @ 0x4A
  1362  006A                     	ds	4
  1363  006E                     ??_float_to_string:
  1364                           
  1365                           ; 1 bytes @ 0x4E
  1366  006E                     	ds	1
  1367                           
  1368                           	psect	maintext
  1369  1AB1                     __pmaintext:	
  1370 ;;
  1371 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1372 ;;
  1373 ;; *************** function _main *****************
  1374 ;; Defined at:
  1375 ;;		line 93 in file "pseudocodigo_lab3.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : B00/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1389 ;;      Params:         0       0       0       0       0
  1390 ;;      Locals:         0       0       0       0       0
  1391 ;;      Temps:          0       0       2       0       0
  1392 ;;      Totals:         0       0       2       0       0
  1393 ;;Total ram usage:        2 bytes
  1394 ;; Hardware stack levels required when called:    5
  1395 ;; This function calls:
  1396 ;;		_ADC_channel1
  1397 ;;		_ADC_channel2
  1398 ;;		_Lcd_Init
  1399 ;;		_float_to_string
  1400 ;;		_setup
  1401 ;;		_titulos_LCD
  1402 ;; This function is called by:
  1403 ;;		Startup code after reset
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           
  1408                           ;psect for function _main
  1409  1AB1                     _main:
  1410  1AB1                     l3769:	
  1411                           ;incstack = 0
  1412                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1413                           
  1414                           
  1415                           ;pseudocodigo_lab3.c: 94:     setup();
  1416  1AB1  160A  158A  21B0  160A  158A  	fcall	_setup
  1417  1AB6                     l3771:
  1418                           
  1419                           ;pseudocodigo_lab3.c: 95:     Lcd_Init();
  1420  1AB6  160A  158A  2365  160A  158A  	fcall	_Lcd_Init
  1421  1ABB                     l3773:
  1422                           
  1423                           ;pseudocodigo_lab3.c: 96:     titulos_LCD();
  1424  1ABB  160A  158A  23FE  160A  158A  	fcall	_titulos_LCD
  1425  1AC0                     l3775:
  1426                           
  1427                           ;pseudocodigo_lab3.c: 104:         ADC_channel1();
  1428  1AC0  160A  158A  25BE  160A  158A  	fcall	_ADC_channel1
  1429  1AC5                     l3777:
  1430                           
  1431                           ;pseudocodigo_lab3.c: 105:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1432  1AC5  3003               	movlw	3
  1433  1AC6  1683               	bsf	3,5	;RP0=1, select bank1
  1434  1AC7  1303               	bcf	3,6	;RP1=0, select bank1
  1435  1AC8  00C6               	movwf	(??_main^(0+128)+1)
  1436  1AC9  3097               	movlw	151
  1437  1ACA  00C5               	movwf	??_main^(0+128)
  1438  1ACB                     u6117:
  1439  1ACB  0BC5               	decfsz	??_main^(0+128),f
  1440  1ACC  2ACB               	goto	u6117
  1441  1ACD  0BC6               	decfsz	(??_main^(0+128)+1),f
  1442  1ACE  2ACB               	goto	u6117
  1443  1ACF                     l3779:
  1444                           
  1445                           ;pseudocodigo_lab3.c: 106:         ADC_channel2();
  1446  1ACF  160A  158A  2631  160A  158A  	fcall	_ADC_channel2
  1447  1AD4                     l3781:
  1448                           
  1449                           ;pseudocodigo_lab3.c: 107:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1450  1AD4  3003               	movlw	3
  1451  1AD5  1683               	bsf	3,5	;RP0=1, select bank1
  1452  1AD6  1303               	bcf	3,6	;RP1=0, select bank1
  1453  1AD7  00C6               	movwf	(??_main^(0+128)+1)
  1454  1AD8  3097               	movlw	151
  1455  1AD9  00C5               	movwf	??_main^(0+128)
  1456  1ADA                     u6127:
  1457  1ADA  0BC5               	decfsz	??_main^(0+128),f
  1458  1ADB  2ADA               	goto	u6127
  1459  1ADC  0BC6               	decfsz	(??_main^(0+128)+1),f
  1460  1ADD  2ADA               	goto	u6127
  1461  1ADE                     l3783:
  1462                           
  1463                           ;pseudocodigo_lab3.c: 109:         float_to_string();
  1464  1ADE  160A  158A  2284  160A  158A  	fcall	_float_to_string
  1465  1AE3  2AC0               	goto	l3775
  1466  1AE4  120A  118A  2800   	ljmp	start
  1467  1AE7                     __end_of_main:
  1468                           
  1469                           	psect	text1
  1470  1BFE                     __ptext1:	
  1471 ;; *************** function _titulos_LCD *****************
  1472 ;; Defined at:
  1473 ;;		line 128 in file "pseudocodigo_lab3.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1487 ;;      Params:         0       0       0       0       0
  1488 ;;      Locals:         0       0       0       0       0
  1489 ;;      Temps:          1       0       0       0       0
  1490 ;;      Totals:         1       0       0       0       0
  1491 ;;Total ram usage:        1 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; Hardware stack levels required when called:    3
  1494 ;; This function calls:
  1495 ;;		_Lcd_Set_Cursor
  1496 ;;		_Lcd_Write_String
  1497 ;; This function is called by:
  1498 ;;		_main
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           
  1503                           ;psect for function _titulos_LCD
  1504  1BFE                     _titulos_LCD:
  1505  1BFE                     l3733:	
  1506                           ;incstack = 0
  1507                           ; Regs used in _titulos_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1508                           
  1509                           
  1510                           ;pseudocodigo_lab3.c: 130:         Lcd_Set_Cursor(1,2);
  1511  1BFE  3002               	movlw	2
  1512  1BFF  00F8               	movwf	??_titulos_LCD
  1513  1C00  0878               	movf	??_titulos_LCD,w
  1514  1C01  00F4               	movwf	Lcd_Set_Cursor@b
  1515  1C02  3001               	movlw	1
  1516  1C03  160A  158A  21EF  160A  158A  	fcall	_Lcd_Set_Cursor
  1517  1C08                     l3735:
  1518                           
  1519                           ;pseudocodigo_lab3.c: 131:         Lcd_Write_String("S1:");
  1520  1C08  309E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1521  1C09  160A  158A  2238  160A  158A  	fcall	_Lcd_Write_String
  1522  1C0E                     l3737:
  1523                           
  1524                           ;pseudocodigo_lab3.c: 132:         Lcd_Set_Cursor(1,8);
  1525  1C0E  3008               	movlw	8
  1526  1C0F  00F8               	movwf	??_titulos_LCD
  1527  1C10  0878               	movf	??_titulos_LCD,w
  1528  1C11  00F4               	movwf	Lcd_Set_Cursor@b
  1529  1C12  3001               	movlw	1
  1530  1C13  160A  158A  21EF  160A  158A  	fcall	_Lcd_Set_Cursor
  1531                           
  1532                           ;pseudocodigo_lab3.c: 133:         Lcd_Write_String("S2:");
  1533  1C18  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1534  1C19  160A  158A  2238  160A  158A  	fcall	_Lcd_Write_String
  1535  1C1E                     l3739:
  1536                           
  1537                           ;pseudocodigo_lab3.c: 134:         Lcd_Set_Cursor(1,13);
  1538  1C1E  300D               	movlw	13
  1539  1C1F  00F8               	movwf	??_titulos_LCD
  1540  1C20  0878               	movf	??_titulos_LCD,w
  1541  1C21  00F4               	movwf	Lcd_Set_Cursor@b
  1542  1C22  3001               	movlw	1
  1543  1C23  160A  158A  21EF  160A  158A  	fcall	_Lcd_Set_Cursor
  1544  1C28                     l3741:
  1545                           
  1546                           ;pseudocodigo_lab3.c: 135:         Lcd_Write_String("S3:");
  1547  1C28  30A6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1548  1C29  160A  158A  2238  160A  158A  	fcall	_Lcd_Write_String
  1549                           
  1550                           ;pseudocodigo_lab3.c: 136:         Lcd_Set_Cursor(2,5);
  1551  1C2E  3005               	movlw	5
  1552  1C2F  00F8               	movwf	??_titulos_LCD
  1553  1C30  0878               	movf	??_titulos_LCD,w
  1554  1C31  00F4               	movwf	Lcd_Set_Cursor@b
  1555  1C32  3002               	movlw	2
  1556  1C33  160A  158A  21EF  160A  158A  	fcall	_Lcd_Set_Cursor
  1557  1C38                     l3743:
  1558                           
  1559                           ;pseudocodigo_lab3.c: 137:         Lcd_Write_String("V");
  1560  1C38  30AA               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1561  1C39  160A  158A  2238  160A  158A  	fcall	_Lcd_Write_String
  1562  1C3E                     l3745:
  1563                           
  1564                           ;pseudocodigo_lab3.c: 138:         Lcd_Set_Cursor(2,11);
  1565  1C3E  300B               	movlw	11
  1566  1C3F  00F8               	movwf	??_titulos_LCD
  1567  1C40  0878               	movf	??_titulos_LCD,w
  1568  1C41  00F4               	movwf	Lcd_Set_Cursor@b
  1569  1C42  3002               	movlw	2
  1570  1C43  160A  158A  21EF  160A  158A  	fcall	_Lcd_Set_Cursor
  1571                           
  1572                           ;pseudocodigo_lab3.c: 139:         Lcd_Write_String("V");
  1573  1C48  30AA               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1574  1C49  160A  158A  2238  160A  158A  	fcall	_Lcd_Write_String
  1575  1C4E                     l73:
  1576  1C4E  0008               	return
  1577  1C4F                     __end_of_titulos_LCD:
  1578                           
  1579                           	psect	text2
  1580  1A38                     __ptext2:	
  1581 ;; *************** function _Lcd_Write_String *****************
  1582 ;; Defined at:
  1583 ;;		line 70 in file "LCD.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  a               1    wreg     PTR unsigned char 
  1586 ;;		 -> STR_5(2), STR_4(2), STR_3(4), STR_2(4), 
  1587 ;;		 -> STR_1(4), 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  a               1    5[COMMON] PTR unsigned char 
  1590 ;;		 -> STR_5(2), STR_4(2), STR_3(4), STR_2(4), 
  1591 ;;		 -> STR_1(4), 
  1592 ;;  i               2    3[COMMON] int 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1602 ;;      Params:         0       0       0       0       0
  1603 ;;      Locals:         3       0       0       0       0
  1604 ;;      Temps:          0       0       0       0       0
  1605 ;;      Totals:         3       0       0       0       0
  1606 ;;Total ram usage:        3 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    2
  1609 ;; This function calls:
  1610 ;;		_Lcd_Write_Char
  1611 ;; This function is called by:
  1612 ;;		_titulos_LCD
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           
  1617                           ;psect for function _Lcd_Write_String
  1618  1A38                     _Lcd_Write_String:
  1619                           
  1620                           ;incstack = 0
  1621                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1622                           ;Lcd_Write_String@a stored from wreg
  1623  1A38  00F5               	movwf	Lcd_Write_String@a
  1624  1A39                     l3303:
  1625                           
  1626                           ;LCD.c: 71:  int i;;LCD.c: 72:  for(i=0;a[i]!='\0';i++)
  1627  1A39  01F3               	clrf	Lcd_Write_String@i
  1628  1A3A  01F4               	clrf	Lcd_Write_String@i+1
  1629  1A3B  2A4F               	goto	l3309
  1630  1A3C                     l3305:
  1631                           
  1632                           ;LCD.c: 73:     Lcd_Write_Char(a[i]);
  1633  1A3C  0873               	movf	Lcd_Write_String@i,w
  1634  1A3D  0775               	addwf	Lcd_Write_String@a,w
  1635  1A3E  0084               	movwf	4
  1636  1A3F  160A  158A  2000  160A  158A  	fcall	stringdir
  1637  1A44  160A  118A  2001  160A  158A  	fcall	_Lcd_Write_Char
  1638  1A49                     l3307:
  1639  1A49  3001               	movlw	1
  1640  1A4A  07F3               	addwf	Lcd_Write_String@i,f
  1641  1A4B  1803               	skipnc
  1642  1A4C  0AF4               	incf	Lcd_Write_String@i+1,f
  1643  1A4D  3000               	movlw	0
  1644  1A4E  07F4               	addwf	Lcd_Write_String@i+1,f
  1645  1A4F                     l3309:
  1646  1A4F  0873               	movf	Lcd_Write_String@i,w
  1647  1A50  0775               	addwf	Lcd_Write_String@a,w
  1648  1A51  0084               	movwf	4
  1649  1A52  160A  158A  2000  160A  158A  	fcall	stringdir
  1650  1A57  3A00               	xorlw	0
  1651  1A58  1D03               	skipz
  1652  1A59  2A5B               	goto	u5311
  1653  1A5A  2A5C               	goto	u5310
  1654  1A5B                     u5311:
  1655  1A5B  2A3C               	goto	l3305
  1656  1A5C                     u5310:
  1657  1A5C                     l144:
  1658  1A5C  0008               	return
  1659  1A5D                     __end_of_Lcd_Write_String:
  1660                           
  1661                           	psect	text3
  1662  1001                     __ptext3:	
  1663 ;; *************** function _Lcd_Write_Char *****************
  1664 ;; Defined at:
  1665 ;;		line 61 in file "LCD.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  a               1    wreg     unsigned char 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  a               1    2[COMMON] unsigned char 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, pclath, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1679 ;;      Params:         0       0       0       0       0
  1680 ;;      Locals:         1       0       0       0       0
  1681 ;;      Temps:          1       0       0       0       0
  1682 ;;      Totals:         2       0       0       0       0
  1683 ;;Total ram usage:        2 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    1
  1686 ;; This function calls:
  1687 ;;		_Lcd_Port
  1688 ;; This function is called by:
  1689 ;;		_Lcd_Write_String
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           
  1694                           ;psect for function _Lcd_Write_Char
  1695  1001                     _Lcd_Write_Char:
  1696                           
  1697                           ;incstack = 0
  1698                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1699                           ;Lcd_Write_Char@a stored from wreg
  1700  1001  00F2               	movwf	Lcd_Write_Char@a
  1701  1002                     l1459:
  1702                           
  1703                           ;LCD.c: 62:    PORTEbits.RE0 = 1;
  1704  1002  1283               	bcf	3,5	;RP0=0, select bank0
  1705  1003  1303               	bcf	3,6	;RP1=0, select bank0
  1706  1004  1409               	bsf	9,0	;volatile
  1707  1005                     l1461:
  1708                           
  1709                           ;LCD.c: 63:    Lcd_Port(a);
  1710  1005  0872               	movf	Lcd_Write_Char@a,w
  1711  1006  120A  158A  2000  160A  118A  	fcall	_Lcd_Port
  1712  100B                     l1463:
  1713                           
  1714                           ;LCD.c: 64:    PORTEbits.RE2 = 1;
  1715  100B  1283               	bcf	3,5	;RP0=0, select bank0
  1716  100C  1303               	bcf	3,6	;RP1=0, select bank0
  1717  100D  1509               	bsf	9,2	;volatile
  1718  100E                     l1465:
  1719                           
  1720                           ;LCD.c: 65:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1721  100E  301A               	movlw	26
  1722  100F  00F1               	movwf	??_Lcd_Write_Char
  1723  1010                     u6137:
  1724  1010  0BF1               	decfsz	??_Lcd_Write_Char,f
  1725  1011  2810               	goto	u6137
  1726  1012  0000               	nop
  1727  1013                     l1467:
  1728                           
  1729                           ;LCD.c: 66:    PORTEbits.RE2 = 0;
  1730  1013  1283               	bcf	3,5	;RP0=0, select bank0
  1731  1014  1303               	bcf	3,6	;RP1=0, select bank0
  1732  1015  1109               	bcf	9,2	;volatile
  1733  1016                     l138:
  1734  1016  0008               	return
  1735  1017                     __end_of_Lcd_Write_Char:
  1736                           
  1737                           	psect	text4
  1738  19EF                     __ptext4:	
  1739 ;; *************** function _Lcd_Set_Cursor *****************
  1740 ;; Defined at:
  1741 ;;		line 48 in file "LCD.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  a               1    wreg     unsigned char 
  1744 ;;  b               1    4[COMMON] unsigned char 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  a               1    6[COMMON] unsigned char 
  1747 ;;  temp            1    7[COMMON] unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0, pclath, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1757 ;;      Params:         1       0       0       0       0
  1758 ;;      Locals:         2       0       0       0       0
  1759 ;;      Temps:          1       0       0       0       0
  1760 ;;      Totals:         4       0       0       0       0
  1761 ;;Total ram usage:        4 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    2
  1764 ;; This function calls:
  1765 ;;		_Lcd_Cmd
  1766 ;; This function is called by:
  1767 ;;		_titulos_LCD
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           
  1772                           ;psect for function _Lcd_Set_Cursor
  1773  19EF                     _Lcd_Set_Cursor:
  1774                           
  1775                           ;incstack = 0
  1776                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1777                           ;Lcd_Set_Cursor@a stored from wreg
  1778  19EF  00F6               	movwf	Lcd_Set_Cursor@a
  1779  19F0                     l3291:
  1780                           
  1781                           ;LCD.c: 49:  char temp;;LCD.c: 50:  if(a == 1){
  1782  19F0  0376               	decf	Lcd_Set_Cursor@a,w
  1783  19F1  1D03               	btfss	3,2
  1784  19F2  29F4               	goto	u5291
  1785  19F3  29F5               	goto	u5290
  1786  19F4                     u5291:
  1787  19F4  2A01               	goto	l3297
  1788  19F5                     u5290:
  1789  19F5                     l3293:
  1790                           
  1791                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  1792  19F5  0874               	movf	Lcd_Set_Cursor@b,w
  1793  19F6  3E7F               	addlw	127
  1794  19F7  00F5               	movwf	??_Lcd_Set_Cursor
  1795  19F8  0875               	movf	??_Lcd_Set_Cursor,w
  1796  19F9  00F7               	movwf	Lcd_Set_Cursor@temp
  1797  19FA                     l3295:
  1798                           
  1799                           ;LCD.c: 52:         Lcd_Cmd(temp);
  1800  19FA  0877               	movf	Lcd_Set_Cursor@temp,w
  1801  19FB  160A  158A  2196  160A  158A  	fcall	_Lcd_Cmd
  1802                           
  1803                           ;LCD.c: 53:  }
  1804  1A00  2A12               	goto	l135
  1805  1A01                     l3297:
  1806  1A01  3002               	movlw	2
  1807  1A02  0676               	xorwf	Lcd_Set_Cursor@a,w
  1808  1A03  1D03               	btfss	3,2
  1809  1A04  2A06               	goto	u5301
  1810  1A05  2A07               	goto	u5300
  1811  1A06                     u5301:
  1812  1A06  2A12               	goto	l135
  1813  1A07                     u5300:
  1814  1A07                     l3299:
  1815                           
  1816                           ;LCD.c: 55:   temp = 0xC0 + b - 1;
  1817  1A07  0874               	movf	Lcd_Set_Cursor@b,w
  1818  1A08  3EBF               	addlw	191
  1819  1A09  00F5               	movwf	??_Lcd_Set_Cursor
  1820  1A0A  0875               	movf	??_Lcd_Set_Cursor,w
  1821  1A0B  00F7               	movwf	Lcd_Set_Cursor@temp
  1822  1A0C                     l3301:
  1823                           
  1824                           ;LCD.c: 56:   Lcd_Cmd(temp);
  1825  1A0C  0877               	movf	Lcd_Set_Cursor@temp,w
  1826  1A0D  160A  158A  2196  160A  158A  	fcall	_Lcd_Cmd
  1827  1A12                     l135:
  1828  1A12  0008               	return
  1829  1A13                     __end_of_Lcd_Set_Cursor:
  1830                           
  1831                           	psect	text5
  1832  19B0                     __ptext5:	
  1833 ;; *************** function _setup *****************
  1834 ;; Defined at:
  1835 ;;		line 175 in file "pseudocodigo_lab3.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;		None
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      void 
  1842 ;; Registers used:
  1843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1849 ;;      Params:         0       0       0       0       0
  1850 ;;      Locals:         0       0       0       0       0
  1851 ;;      Temps:          0       0       0       0       0
  1852 ;;      Totals:         0       0       0       0       0
  1853 ;;Total ram usage:        0 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    1
  1856 ;; This function calls:
  1857 ;;		_initOsc
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           
  1864                           ;psect for function _setup
  1865  19B0                     _setup:
  1866  19B0                     l2277:	
  1867                           ;incstack = 0
  1868                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1869                           
  1870                           
  1871                           ;pseudocodigo_lab3.c: 176:     initOsc(0b00000110);
  1872  19B0  3006               	movlw	6
  1873  19B1  160A  158A  24FC  160A  158A  	fcall	_initOsc
  1874  19B6                     l2279:
  1875                           
  1876                           ;pseudocodigo_lab3.c: 177:     ANSEL = 0b00000011;
  1877  19B6  3003               	movlw	3
  1878  19B7  1683               	bsf	3,5	;RP0=1, select bank3
  1879  19B8  1703               	bsf	3,6	;RP1=1, select bank3
  1880  19B9  0088               	movwf	8	;volatile
  1881  19BA                     l2281:
  1882                           
  1883                           ;pseudocodigo_lab3.c: 178:     ANSELH = 0;
  1884  19BA  0189               	clrf	9	;volatile
  1885  19BB                     l2283:
  1886                           
  1887                           ;pseudocodigo_lab3.c: 179:     TRISA = 0b00000011;
  1888  19BB  3003               	movlw	3
  1889  19BC  1683               	bsf	3,5	;RP0=1, select bank1
  1890  19BD  1303               	bcf	3,6	;RP1=0, select bank1
  1891  19BE  0085               	movwf	5	;volatile
  1892  19BF                     l2285:
  1893                           
  1894                           ;pseudocodigo_lab3.c: 180:     TRISB = 0;
  1895  19BF  0186               	clrf	6	;volatile
  1896  19C0                     l2287:
  1897                           
  1898                           ;pseudocodigo_lab3.c: 181:     TRISC = 0;
  1899  19C0  0187               	clrf	7	;volatile
  1900  19C1                     l2289:
  1901                           
  1902                           ;pseudocodigo_lab3.c: 182:     TRISD = 0;
  1903  19C1  0188               	clrf	8	;volatile
  1904  19C2                     l2291:
  1905                           
  1906                           ;pseudocodigo_lab3.c: 183:     TRISE = 0;
  1907  19C2  0189               	clrf	9	;volatile
  1908  19C3                     l2293:
  1909                           
  1910                           ;pseudocodigo_lab3.c: 184:     PORTA = 0;
  1911  19C3  1283               	bcf	3,5	;RP0=0, select bank0
  1912  19C4  1303               	bcf	3,6	;RP1=0, select bank0
  1913  19C5  0185               	clrf	5	;volatile
  1914  19C6                     l2295:
  1915                           
  1916                           ;pseudocodigo_lab3.c: 185:     PORTB = 0;
  1917  19C6  0186               	clrf	6	;volatile
  1918  19C7                     l2297:
  1919                           
  1920                           ;pseudocodigo_lab3.c: 186:     PORTC = 0;
  1921  19C7  0187               	clrf	7	;volatile
  1922  19C8                     l2299:
  1923                           
  1924                           ;pseudocodigo_lab3.c: 187:     PORTD = 0;
  1925  19C8  0188               	clrf	8	;volatile
  1926  19C9                     l2301:
  1927                           
  1928                           ;pseudocodigo_lab3.c: 188:     PORTE = 0;
  1929  19C9  0189               	clrf	9	;volatile
  1930  19CA                     l91:
  1931  19CA  0008               	return
  1932  19CB                     __end_of_setup:
  1933                           
  1934                           	psect	text6
  1935  1CFC                     __ptext6:	
  1936 ;; *************** function _initOsc *****************
  1937 ;; Defined at:
  1938 ;;		line 3 in file "Oscilador.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  IRCF            1    wreg     unsigned char 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  IRCF            1    2[COMMON] unsigned char 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1952 ;;      Params:         0       0       0       0       0
  1953 ;;      Locals:         1       0       0       0       0
  1954 ;;      Temps:          2       0       0       0       0
  1955 ;;      Totals:         3       0       0       0       0
  1956 ;;Total ram usage:        3 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_setup
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           
  1966                           ;psect for function _initOsc
  1967  1CFC                     _initOsc:
  1968                           
  1969                           ;incstack = 0
  1970                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1971                           ;initOsc@IRCF stored from wreg
  1972  1CFC  00F2               	movwf	initOsc@IRCF
  1973  1CFD                     l2125:
  1974                           
  1975                           ;Oscilador.c: 5:     switch(IRCF){
  1976  1CFD  2D34               	goto	l2129
  1977  1CFE                     l97:	
  1978                           ;Oscilador.c: 6:         case 0:
  1979                           
  1980                           
  1981                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  1982  1CFE  1683               	bsf	3,5	;RP0=1, select bank1
  1983  1CFF  1303               	bcf	3,6	;RP1=0, select bank1
  1984  1D00  130F               	bcf	15,6	;volatile
  1985                           
  1986                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  1987  1D01  128F               	bcf	15,5	;volatile
  1988                           
  1989                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  1990  1D02  120F               	bcf	15,4	;volatile
  1991                           
  1992                           ;Oscilador.c: 10:             break;
  1993  1D03  2D56               	goto	l98
  1994  1D04                     l99:	
  1995                           ;Oscilador.c: 11:          case 1:
  1996                           
  1997                           
  1998                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  1999  1D04  1683               	bsf	3,5	;RP0=1, select bank1
  2000  1D05  1303               	bcf	3,6	;RP1=0, select bank1
  2001  1D06  130F               	bcf	15,6	;volatile
  2002                           
  2003                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  2004  1D07  128F               	bcf	15,5	;volatile
  2005                           
  2006                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  2007  1D08  160F               	bsf	15,4	;volatile
  2008                           
  2009                           ;Oscilador.c: 15:             break;
  2010  1D09  2D56               	goto	l98
  2011  1D0A                     l100:	
  2012                           ;Oscilador.c: 16:         case 2:
  2013                           
  2014                           
  2015                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  2016  1D0A  1683               	bsf	3,5	;RP0=1, select bank1
  2017  1D0B  1303               	bcf	3,6	;RP1=0, select bank1
  2018  1D0C  130F               	bcf	15,6	;volatile
  2019                           
  2020                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  2021  1D0D  168F               	bsf	15,5	;volatile
  2022                           
  2023                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  2024  1D0E  120F               	bcf	15,4	;volatile
  2025                           
  2026                           ;Oscilador.c: 20:             break;
  2027  1D0F  2D56               	goto	l98
  2028  1D10                     l101:	
  2029                           ;Oscilador.c: 21:         case 3:
  2030                           
  2031                           
  2032                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  2033  1D10  1683               	bsf	3,5	;RP0=1, select bank1
  2034  1D11  1303               	bcf	3,6	;RP1=0, select bank1
  2035  1D12  130F               	bcf	15,6	;volatile
  2036                           
  2037                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  2038  1D13  168F               	bsf	15,5	;volatile
  2039                           
  2040                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  2041  1D14  160F               	bsf	15,4	;volatile
  2042                           
  2043                           ;Oscilador.c: 25:             break;
  2044  1D15  2D56               	goto	l98
  2045  1D16                     l102:	
  2046                           ;Oscilador.c: 26:         case 4:
  2047                           
  2048                           
  2049                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  2050  1D16  1683               	bsf	3,5	;RP0=1, select bank1
  2051  1D17  1303               	bcf	3,6	;RP1=0, select bank1
  2052  1D18  170F               	bsf	15,6	;volatile
  2053                           
  2054                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  2055  1D19  128F               	bcf	15,5	;volatile
  2056                           
  2057                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  2058  1D1A  120F               	bcf	15,4	;volatile
  2059                           
  2060                           ;Oscilador.c: 30:             break;
  2061  1D1B  2D56               	goto	l98
  2062  1D1C                     l103:	
  2063                           ;Oscilador.c: 31:         case 5:
  2064                           
  2065                           
  2066                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  2067  1D1C  1683               	bsf	3,5	;RP0=1, select bank1
  2068  1D1D  1303               	bcf	3,6	;RP1=0, select bank1
  2069  1D1E  170F               	bsf	15,6	;volatile
  2070                           
  2071                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  2072  1D1F  128F               	bcf	15,5	;volatile
  2073                           
  2074                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  2075  1D20  160F               	bsf	15,4	;volatile
  2076                           
  2077                           ;Oscilador.c: 35:             break;
  2078  1D21  2D56               	goto	l98
  2079  1D22                     l104:	
  2080                           ;Oscilador.c: 36:         case 6:
  2081                           
  2082                           
  2083                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  2084  1D22  1683               	bsf	3,5	;RP0=1, select bank1
  2085  1D23  1303               	bcf	3,6	;RP1=0, select bank1
  2086  1D24  170F               	bsf	15,6	;volatile
  2087                           
  2088                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  2089  1D25  168F               	bsf	15,5	;volatile
  2090                           
  2091                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  2092  1D26  120F               	bcf	15,4	;volatile
  2093                           
  2094                           ;Oscilador.c: 40:             break;
  2095  1D27  2D56               	goto	l98
  2096  1D28                     l105:	
  2097                           ;Oscilador.c: 41:         case 7:
  2098                           
  2099                           
  2100                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  2101  1D28  1683               	bsf	3,5	;RP0=1, select bank1
  2102  1D29  1303               	bcf	3,6	;RP1=0, select bank1
  2103  1D2A  170F               	bsf	15,6	;volatile
  2104                           
  2105                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  2106  1D2B  168F               	bsf	15,5	;volatile
  2107                           
  2108                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  2109  1D2C  160F               	bsf	15,4	;volatile
  2110                           
  2111                           ;Oscilador.c: 45:             break;
  2112  1D2D  2D56               	goto	l98
  2113  1D2E                     l106:	
  2114                           ;Oscilador.c: 46:         default:
  2115                           
  2116                           
  2117                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  2118  1D2E  1683               	bsf	3,5	;RP0=1, select bank1
  2119  1D2F  1303               	bcf	3,6	;RP1=0, select bank1
  2120  1D30  170F               	bsf	15,6	;volatile
  2121                           
  2122                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  2123  1D31  168F               	bsf	15,5	;volatile
  2124                           
  2125                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  2126  1D32  120F               	bcf	15,4	;volatile
  2127                           
  2128                           ;Oscilador.c: 50:             break;
  2129  1D33  2D56               	goto	l98
  2130  1D34                     l2129:
  2131  1D34  0872               	movf	initOsc@IRCF,w
  2132  1D35  00F0               	movwf	??_initOsc
  2133  1D36  01F1               	clrf	??_initOsc+1
  2134                           
  2135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2136                           ; Switch size 1, requested type "simple"
  2137                           ; Number of cases is 1, Range of values is 0 to 0
  2138                           ; switch strategies available:
  2139                           ; Name         Instructions Cycles
  2140                           ; simple_byte            4     3 (average)
  2141                           ; direct_byte           11     8 (fixed)
  2142                           ; jumptable            260     6 (fixed)
  2143                           ;	Chosen strategy is simple_byte
  2144  1D37  0871               	movf	??_initOsc+1,w
  2145  1D38  3A00               	xorlw	0	; case 0
  2146  1D39  1903               	skipnz
  2147  1D3A  2D3C               	goto	l3871
  2148  1D3B  2D2E               	goto	l106
  2149  1D3C                     l3871:
  2150                           
  2151                           ; Switch size 1, requested type "simple"
  2152                           ; Number of cases is 8, Range of values is 0 to 7
  2153                           ; switch strategies available:
  2154                           ; Name         Instructions Cycles
  2155                           ; simple_byte           25    13 (average)
  2156                           ; direct_byte           32     8 (fixed)
  2157                           ; jumptable            260     6 (fixed)
  2158                           ;	Chosen strategy is simple_byte
  2159  1D3C  0870               	movf	??_initOsc,w
  2160  1D3D  3A00               	xorlw	0	; case 0
  2161  1D3E  1903               	skipnz
  2162  1D3F  2CFE               	goto	l97
  2163  1D40  3A01               	xorlw	1	; case 1
  2164  1D41  1903               	skipnz
  2165  1D42  2D04               	goto	l99
  2166  1D43  3A03               	xorlw	3	; case 2
  2167  1D44  1903               	skipnz
  2168  1D45  2D0A               	goto	l100
  2169  1D46  3A01               	xorlw	1	; case 3
  2170  1D47  1903               	skipnz
  2171  1D48  2D10               	goto	l101
  2172  1D49  3A07               	xorlw	7	; case 4
  2173  1D4A  1903               	skipnz
  2174  1D4B  2D16               	goto	l102
  2175  1D4C  3A01               	xorlw	1	; case 5
  2176  1D4D  1903               	skipnz
  2177  1D4E  2D1C               	goto	l103
  2178  1D4F  3A03               	xorlw	3	; case 6
  2179  1D50  1903               	skipnz
  2180  1D51  2D22               	goto	l104
  2181  1D52  3A01               	xorlw	1	; case 7
  2182  1D53  1903               	skipnz
  2183  1D54  2D28               	goto	l105
  2184  1D55  2D2E               	goto	l106
  2185  1D56                     l98:
  2186                           
  2187                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  2188  1D56  140F               	bsf	15,0	;volatile
  2189  1D57                     l107:
  2190  1D57  0008               	return
  2191  1D58                     __end_of_initOsc:
  2192                           
  2193                           	psect	text7
  2194  1A84                     __ptext7:	
  2195 ;; *************** function _float_to_string *****************
  2196 ;; Defined at:
  2197 ;;		line 160 in file "pseudocodigo_lab3.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2211 ;;      Params:         0       0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0
  2213 ;;      Temps:          0       1       0       0       0
  2214 ;;      Totals:         0       1       0       0       0
  2215 ;;Total ram usage:        1 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    4
  2218 ;; This function calls:
  2219 ;;		_sprintf
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           
  2226                           ;psect for function _float_to_string
  2227  1A84                     _float_to_string:
  2228  1A84                     l3767:	
  2229                           ;incstack = 0
  2230                           ; Regs used in _float_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2231                           
  2232                           
  2233                           ;pseudocodigo_lab3.c: 161:     sprintf(data1, "%1.2f ",S1_val);
  2234  1A84  3091               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2235  1A85  1283               	bcf	3,5	;RP0=0, select bank0
  2236  1A86  1303               	bcf	3,6	;RP1=0, select bank0
  2237  1A87  00EE               	movwf	??_float_to_string
  2238  1A88  086E               	movf	??_float_to_string,w
  2239  1A89  1683               	bsf	3,5	;RP0=1, select bank1
  2240  1A8A  1303               	bcf	3,6	;RP1=0, select bank1
  2241  1A8B  00A0               	movwf	sprintf@f^(0+128)
  2242  1A8C  084E               	movf	(_S1_val+3)^(0+128),w
  2243  1A8D  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2244  1A8E  084D               	movf	(_S1_val+2)^(0+128),w
  2245  1A8F  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2246  1A90  084C               	movf	(_S1_val+1)^(0+128),w
  2247  1A91  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2248  1A92  084B               	movf	_S1_val^(0+128),w
  2249  1A93  00A1               	movwf	(?_sprintf^(0+128)+1)
  2250  1A94  30DF               	movlw	(low (_data1| 0))& (0+255)
  2251  1A95  120A  118A  2075  160A  158A  	fcall	_sprintf
  2252                           
  2253                           ;pseudocodigo_lab3.c: 162:     sprintf(data2, "%1.2f", S2_val);
  2254  1A9A  3098               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2255  1A9B  1283               	bcf	3,5	;RP0=0, select bank0
  2256  1A9C  1303               	bcf	3,6	;RP1=0, select bank0
  2257  1A9D  00EE               	movwf	??_float_to_string
  2258  1A9E  086E               	movf	??_float_to_string,w
  2259  1A9F  1683               	bsf	3,5	;RP0=1, select bank1
  2260  1AA0  1303               	bcf	3,6	;RP1=0, select bank1
  2261  1AA1  00A0               	movwf	sprintf@f^(0+128)
  2262  1AA2  084A               	movf	(_S2_val+3)^(0+128),w
  2263  1AA3  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2264  1AA4  0849               	movf	(_S2_val+2)^(0+128),w
  2265  1AA5  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2266  1AA6  0848               	movf	(_S2_val+1)^(0+128),w
  2267  1AA7  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2268  1AA8  0847               	movf	_S2_val^(0+128),w
  2269  1AA9  00A1               	movwf	(?_sprintf^(0+128)+1)
  2270  1AAA  30D7               	movlw	(low (_data2| 0))& (0+255)
  2271  1AAB  120A  118A  2075  160A  158A  	fcall	_sprintf
  2272  1AB0                     l88:
  2273  1AB0  0008               	return
  2274  1AB1                     __end_of_float_to_string:
  2275                           
  2276                           	psect	text8
  2277  0075                     __ptext8:	
  2278 ;; *************** function _sprintf *****************
  2279 ;; Defined at:
  2280 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  sp              1    wreg     PTR unsigned char 
  2283 ;;		 -> data2(8), data1(8), 
  2284 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2285 ;;		 -> STR_7(6), STR_6(7), 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  2288 ;;		 -> data2(8), data1(8), 
  2289 ;;  fval            4   29[BANK1 ] PTR unsigned char 
  2290 ;;  tmpval          4   23[BANK1 ] struct .
  2291 ;;  val             4   15[BANK1 ] unsigned long 
  2292 ;;  prec            2   34[BANK1 ] int 
  2293 ;;  eexp            2   27[BANK1 ] int 
  2294 ;;  width           2   21[BANK1 ] int 
  2295 ;;  flag            2   19[BANK1 ] unsigned short 
  2296 ;;  cp              2    0        PTR const unsigned char 
  2297 ;;  len             2    0        unsigned int 
  2298 ;;  c               1   36[BANK1 ] unsigned char 
  2299 ;;  ap              1   14[BANK1 ] PTR void [1]
  2300 ;;		 -> ?_sprintf(2), 
  2301 ;;  d               1    0        unsigned char 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  2    0[BANK1 ] int 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2311 ;;      Params:         0       0       5       0       0
  2312 ;;      Locals:         0       0      27       0       0
  2313 ;;      Temps:          0       0       5       0       0
  2314 ;;      Totals:         0       0      37       0       0
  2315 ;;Total ram usage:       37 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    3
  2318 ;; This function calls:
  2319 ;;		___awdiv
  2320 ;;		___fladd
  2321 ;;		___fleq
  2322 ;;		___flge
  2323 ;;		___flmul
  2324 ;;		___flneg
  2325 ;;		___flsub
  2326 ;;		___fltol
  2327 ;;		___lldiv
  2328 ;;		___llmod
  2329 ;;		___wmul
  2330 ;;		___xxtofl
  2331 ;;		__div_to_l_
  2332 ;;		__tdiv_to_l_
  2333 ;;		_fround
  2334 ;;		_isdigit
  2335 ;;		_scale
  2336 ;; This function is called by:
  2337 ;;		_float_to_string
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           
  2342                           ;psect for function _sprintf
  2343  0075                     _sprintf:
  2344                           
  2345                           ;incstack = 0
  2346                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2347                           ;sprintf@sp stored from wreg
  2348  0075  1683               	bsf	3,5	;RP0=1, select bank1
  2349  0076  1303               	bcf	3,6	;RP1=0, select bank1
  2350  0077  00C1               	movwf	sprintf@sp^(0+128)
  2351  0078                     l3329:
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2354  0078  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2355  0079  00A5               	movwf	??_sprintf^(0+128)
  2356  007A  0825               	movf	??_sprintf^(0+128),w
  2357  007B  00AE               	movwf	sprintf@ap^(0+128)
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2360  007C  2FD9               	goto	l3579
  2361  007D                     l3331:
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2364  007D  3025               	movlw	37
  2365  007E  0644               	xorwf	sprintf@c^(0+128),w
  2366  007F  1903               	btfsc	3,2
  2367  0080  2882               	goto	u5321
  2368  0081  2883               	goto	u5320
  2369  0082                     u5321:
  2370  0082  288F               	goto	l3337
  2371  0083                     u5320:
  2372  0083                     l3333:
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2375  0083  0844               	movf	sprintf@c^(0+128),w
  2376  0084  00A5               	movwf	??_sprintf^(0+128)
  2377  0085  0841               	movf	sprintf@sp^(0+128),w
  2378  0086  0084               	movwf	4
  2379  0087  0825               	movf	??_sprintf^(0+128),w
  2380  0088  1383               	bcf	3,7	;select IRP bank0
  2381  0089  0080               	movwf	0
  2382  008A                     l3335:
  2383  008A  3001               	movlw	1
  2384  008B  00A5               	movwf	??_sprintf^(0+128)
  2385  008C  0825               	movf	??_sprintf^(0+128),w
  2386  008D  07C1               	addwf	sprintf@sp^(0+128),f
  2387                           
  2388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2389  008E  2FD9               	goto	l3579
  2390  008F                     l3337:
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2393  008F  01B5               	clrf	sprintf@width^(0+128)
  2394  0090  01B6               	clrf	(sprintf@width+1)^(0+128)
  2395                           
  2396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2397  0091  01B3               	clrf	sprintf@flag^(0+128)
  2398  0092  01B4               	clrf	(sprintf@flag+1)^(0+128)
  2399  0093                     l3339:
  2400                           
  2401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2402  0093  0820               	movf	sprintf@f^(0+128),w
  2403  0094  0084               	movwf	4
  2404  0095  160A  158A  2000  120A  118A  	fcall	stringdir
  2405  009A  160A  158A  2184  120A  118A  	fcall	_isdigit
  2406  009F  1C03               	btfss	3,0
  2407  00A0  28A2               	goto	u5331
  2408  00A1  28A3               	goto	u5330
  2409  00A2                     u5331:
  2410  00A2  28E3               	goto	l3351
  2411  00A3                     u5330:
  2412  00A3                     l3341:
  2413                           
  2414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2415  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  2416  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  2417  00A5  01B5               	clrf	sprintf@width^(0+128)
  2418  00A6  01B6               	clrf	(sprintf@width+1)^(0+128)
  2419  00A7                     l3343:
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2422  00A7  300A               	movlw	10
  2423  00A8  00F0               	movwf	___wmul@multiplier
  2424  00A9  3000               	movlw	0
  2425  00AA  00F1               	movwf	___wmul@multiplier+1
  2426  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  2427  00AC  1303               	bcf	3,6	;RP1=0, select bank1
  2428  00AD  0836               	movf	(sprintf@width+1)^(0+128),w
  2429  00AE  00F3               	movwf	___wmul@multiplicand+1
  2430  00AF  0835               	movf	sprintf@width^(0+128),w
  2431  00B0  00F2               	movwf	___wmul@multiplicand
  2432  00B1  160A  158A  2213  120A  118A  	fcall	___wmul
  2433  00B6  0871               	movf	?___wmul+1,w
  2434  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  2435  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  2436  00B9  00B6               	movwf	(sprintf@width+1)^(0+128)
  2437  00BA  0870               	movf	?___wmul,w
  2438  00BB  00B5               	movwf	sprintf@width^(0+128)
  2439  00BC                     l3345:
  2440                           
  2441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2442  00BC  0820               	movf	sprintf@f^(0+128),w
  2443  00BD  0084               	movwf	4
  2444  00BE  160A  158A  2000  120A  118A  	fcall	stringdir
  2445  00C3  3ED0               	addlw	208
  2446  00C4  00A5               	movwf	??_sprintf^(0+128)
  2447  00C5  30FF               	movlw	255
  2448  00C6  1803               	skipnc
  2449  00C7  3000               	movlw	0
  2450  00C8  00A6               	movwf	(??_sprintf^(0+128)+1)
  2451  00C9  0825               	movf	??_sprintf^(0+128),w
  2452  00CA  07B5               	addwf	sprintf@width^(0+128),f
  2453  00CB  1803               	skipnc
  2454  00CC  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2455  00CD  0826               	movf	(??_sprintf+1)^(0+128),w
  2456  00CE  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2457  00CF                     l3347:
  2458  00CF  3001               	movlw	1
  2459  00D0  00A5               	movwf	??_sprintf^(0+128)
  2460  00D1  0825               	movf	??_sprintf^(0+128),w
  2461  00D2  07A0               	addwf	sprintf@f^(0+128),f
  2462  00D3                     l3349:
  2463                           
  2464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2465  00D3  0820               	movf	sprintf@f^(0+128),w
  2466  00D4  0084               	movwf	4
  2467  00D5  160A  158A  2000  120A  118A  	fcall	stringdir
  2468  00DA  160A  158A  2184  120A  118A  	fcall	_isdigit
  2469  00DF  1803               	btfsc	3,0
  2470  00E0  28E2               	goto	u5341
  2471  00E1  28E3               	goto	u5340
  2472  00E2                     u5341:
  2473  00E2  28A7               	goto	l3343
  2474  00E3                     u5340:
  2475  00E3                     l3351:
  2476                           
  2477                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2478  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  2479  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  2480  00E5  0820               	movf	sprintf@f^(0+128),w
  2481  00E6  0084               	movwf	4
  2482  00E7  160A  158A  2000  120A  118A  	fcall	stringdir
  2483  00EC  3A2E               	xorlw	46
  2484  00ED  1D03               	skipz
  2485  00EE  28F0               	goto	u5351
  2486  00EF  28F1               	goto	u5350
  2487  00F0                     u5351:
  2488  00F0  2936               	goto	l3367
  2489  00F1                     u5350:
  2490  00F1                     l3353:
  2491                           
  2492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2493  00F1  1734               	bsf	(sprintf@flag^(0+128)+1),6
  2494  00F2                     l3355:
  2495                           
  2496                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2497  00F2  3001               	movlw	1
  2498  00F3  00A5               	movwf	??_sprintf^(0+128)
  2499  00F4  0825               	movf	??_sprintf^(0+128),w
  2500  00F5  07A0               	addwf	sprintf@f^(0+128),f
  2501  00F6                     l3357:
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2504  00F6  01C2               	clrf	sprintf@prec^(0+128)
  2505  00F7  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2506                           
  2507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2508  00F8  2925               	goto	l3365
  2509  00F9                     l3359:
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2512  00F9  300A               	movlw	10
  2513  00FA  00F0               	movwf	___wmul@multiplier
  2514  00FB  3000               	movlw	0
  2515  00FC  00F1               	movwf	___wmul@multiplier+1
  2516  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  2517  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  2518  00FF  0843               	movf	(sprintf@prec+1)^(0+128),w
  2519  0100  00F3               	movwf	___wmul@multiplicand+1
  2520  0101  0842               	movf	sprintf@prec^(0+128),w
  2521  0102  00F2               	movwf	___wmul@multiplicand
  2522  0103  160A  158A  2213  120A  118A  	fcall	___wmul
  2523  0108  0871               	movf	?___wmul+1,w
  2524  0109  1683               	bsf	3,5	;RP0=1, select bank1
  2525  010A  1303               	bcf	3,6	;RP1=0, select bank1
  2526  010B  00C3               	movwf	(sprintf@prec+1)^(0+128)
  2527  010C  0870               	movf	?___wmul,w
  2528  010D  00C2               	movwf	sprintf@prec^(0+128)
  2529  010E                     l3361:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2532  010E  0820               	movf	sprintf@f^(0+128),w
  2533  010F  0084               	movwf	4
  2534  0110  160A  158A  2000  120A  118A  	fcall	stringdir
  2535  0115  3ED0               	addlw	208
  2536  0116  00A5               	movwf	??_sprintf^(0+128)
  2537  0117  30FF               	movlw	255
  2538  0118  1803               	skipnc
  2539  0119  3000               	movlw	0
  2540  011A  00A6               	movwf	(??_sprintf^(0+128)+1)
  2541  011B  0825               	movf	??_sprintf^(0+128),w
  2542  011C  07C2               	addwf	sprintf@prec^(0+128),f
  2543  011D  1803               	skipnc
  2544  011E  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  2545  011F  0826               	movf	(??_sprintf+1)^(0+128),w
  2546  0120  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  2547  0121                     l3363:
  2548  0121  3001               	movlw	1
  2549  0122  00A5               	movwf	??_sprintf^(0+128)
  2550  0123  0825               	movf	??_sprintf^(0+128),w
  2551  0124  07A0               	addwf	sprintf@f^(0+128),f
  2552  0125                     l3365:
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2555  0125  0820               	movf	sprintf@f^(0+128),w
  2556  0126  0084               	movwf	4
  2557  0127  160A  158A  2000  120A  118A  	fcall	stringdir
  2558  012C  160A  158A  2184  120A  118A  	fcall	_isdigit
  2559  0131  1803               	btfsc	3,0
  2560  0132  2934               	goto	u5361
  2561  0133  2935               	goto	u5360
  2562  0134                     u5361:
  2563  0134  28F9               	goto	l3359
  2564  0135                     u5360:
  2565  0135  293C               	goto	l3373
  2566  0136                     l3367:
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2569  0136  01C2               	clrf	sprintf@prec^(0+128)
  2570  0137  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2571  0138                     l3369:
  2572                           
  2573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2574  0138  1634               	bsf	(sprintf@flag^(0+128)+1),4
  2575  0139  293C               	goto	l3373
  2576  013A                     l331:	
  2577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2578                           
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2581  013A  1534               	bsf	(sprintf@flag^(0+128)+1),2
  2582                           
  2583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2584  013B  2958               	goto	l3375
  2585  013C                     l3373:
  2586  013C  3001               	movlw	1
  2587  013D  1683               	bsf	3,5	;RP0=1, select bank1
  2588  013E  1303               	bcf	3,6	;RP1=0, select bank1
  2589  013F  07A0               	addwf	sprintf@f^(0+128),f
  2590  0140  30FF               	movlw	-1
  2591  0141  0720               	addwf	sprintf@f^(0+128),w
  2592  0142  0084               	movwf	4
  2593  0143  160A  158A  2000  120A  118A  	fcall	stringdir
  2594  0148  00C4               	movwf	sprintf@c^(0+128)
  2595  0149  00A5               	movwf	??_sprintf^(0+128)
  2596  014A  01A6               	clrf	(??_sprintf^(0+128)+1)
  2597                           
  2598                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2599                           ; Switch size 1, requested type "simple"
  2600                           ; Number of cases is 1, Range of values is 0 to 0
  2601                           ; switch strategies available:
  2602                           ; Name         Instructions Cycles
  2603                           ; simple_byte            4     3 (average)
  2604                           ; direct_byte           11     8 (fixed)
  2605                           ; jumptable            260     6 (fixed)
  2606                           ;	Chosen strategy is simple_byte
  2607  014B  0826               	movf	(??_sprintf+1)^(0+128),w
  2608  014C  3A00               	xorlw	0	; case 0
  2609  014D  1903               	skipnz
  2610  014E  2950               	goto	l3873
  2611  014F  2FD9               	goto	l3579
  2612  0150                     l3873:
  2613                           
  2614                           ; Switch size 1, requested type "simple"
  2615                           ; Number of cases is 2, Range of values is 0 to 102
  2616                           ; switch strategies available:
  2617                           ; Name         Instructions Cycles
  2618                           ; simple_byte            7     4 (average)
  2619                           ; jumptable            260     6 (fixed)
  2620                           ;	Chosen strategy is simple_byte
  2621  0150  0825               	movf	??_sprintf^(0+128),w
  2622  0151  3A00               	xorlw	0	; case 0
  2623  0152  1903               	skipnz
  2624  0153  2FEB               	goto	l3581
  2625  0154  3A66               	xorlw	102	; case 102
  2626  0155  1903               	skipnz
  2627  0156  293A               	goto	l331
  2628  0157  2FD9               	goto	l3579
  2629  0158                     l3375:
  2630                           
  2631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2632  0158  3000               	movlw	0
  2633  0159  0533               	andwf	sprintf@flag^(0+128),w
  2634  015A  00A5               	movwf	??_sprintf^(0+128)
  2635  015B  3007               	movlw	7
  2636  015C  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2637  015D  00A6               	movwf	(??_sprintf+1)^(0+128)
  2638  015E  0825               	movf	??_sprintf^(0+128),w
  2639  015F  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2640  0160  1903               	btfsc	3,2
  2641  0161  2963               	goto	u5371
  2642  0162  2964               	goto	u5370
  2643  0163                     u5371:
  2644  0163  2F16               	goto	l3533
  2645  0164                     u5370:
  2646  0164                     l3377:
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2649  0164  1E34               	btfss	(sprintf@flag+1)^(0+128),4
  2650  0165  2967               	goto	u5381
  2651  0166  2968               	goto	u5380
  2652  0167                     u5381:
  2653  0167  296C               	goto	l3381
  2654  0168                     u5380:
  2655  0168                     l3379:
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2658  0168  3006               	movlw	6
  2659  0169  00C2               	movwf	sprintf@prec^(0+128)
  2660  016A  3000               	movlw	0
  2661  016B  00C3               	movwf	(sprintf@prec^(0+128)+1)
  2662  016C                     l3381:
  2663                           
  2664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2665  016C  082E               	movf	sprintf@ap^(0+128),w
  2666  016D  0084               	movwf	4
  2667  016E  1383               	bcf	3,7	;select IRP bank0
  2668  016F  0800               	movf	0,w
  2669  0170  00BD               	movwf	sprintf@fval^(0+128)
  2670  0171  0A84               	incf	4,f
  2671  0172  0800               	movf	0,w
  2672  0173  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2673  0174  0A84               	incf	4,f
  2674  0175  0800               	movf	0,w
  2675  0176  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2676  0177  0A84               	incf	4,f
  2677  0178  0800               	movf	0,w
  2678  0179  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2679  017A                     l3383:
  2680  017A  3004               	movlw	4
  2681  017B  00A5               	movwf	??_sprintf^(0+128)
  2682  017C  0825               	movf	??_sprintf^(0+128),w
  2683  017D  07AE               	addwf	sprintf@ap^(0+128),f
  2684  017E                     l3385:
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2687  017E  0840               	movf	(sprintf@fval+3)^(0+128),w
  2688  017F  00F3               	movwf	___flge@ff1+3
  2689  0180  083F               	movf	(sprintf@fval+2)^(0+128),w
  2690  0181  00F2               	movwf	___flge@ff1+2
  2691  0182  083E               	movf	(sprintf@fval+1)^(0+128),w
  2692  0183  00F1               	movwf	___flge@ff1+1
  2693  0184  083D               	movf	sprintf@fval^(0+128),w
  2694  0185  00F0               	movwf	___flge@ff1
  2695  0186  3000               	movlw	0
  2696  0187  00F7               	movwf	___flge@ff2+3
  2697  0188  3000               	movlw	0
  2698  0189  00F6               	movwf	___flge@ff2+2
  2699  018A  3000               	movlw	0
  2700  018B  00F5               	movwf	___flge@ff2+1
  2701  018C  3000               	movlw	0
  2702  018D  00F4               	movwf	___flge@ff2
  2703  018E  160A  158A  26A4  120A  118A  	fcall	___flge
  2704  0193  1803               	btfsc	3,0
  2705  0194  2996               	goto	u5391
  2706  0195  2997               	goto	u5390
  2707  0196                     u5391:
  2708  0196  29B4               	goto	l3391
  2709  0197                     u5390:
  2710  0197                     l3387:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2713  0197  1683               	bsf	3,5	;RP0=1, select bank1
  2714  0198  1303               	bcf	3,6	;RP1=0, select bank1
  2715  0199  0840               	movf	(sprintf@fval+3)^(0+128),w
  2716  019A  00F3               	movwf	___flneg@f1+3
  2717  019B  083F               	movf	(sprintf@fval+2)^(0+128),w
  2718  019C  00F2               	movwf	___flneg@f1+2
  2719  019D  083E               	movf	(sprintf@fval+1)^(0+128),w
  2720  019E  00F1               	movwf	___flneg@f1+1
  2721  019F  083D               	movf	sprintf@fval^(0+128),w
  2722  01A0  00F0               	movwf	___flneg@f1
  2723  01A1  160A  158A  2179  120A  118A  	fcall	___flneg
  2724  01A6  0873               	movf	?___flneg+3,w
  2725  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  2726  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  2727  01A9  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2728  01AA  0872               	movf	?___flneg+2,w
  2729  01AB  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2730  01AC  0871               	movf	?___flneg+1,w
  2731  01AD  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2732  01AE  0870               	movf	?___flneg,w
  2733  01AF  00BD               	movwf	sprintf@fval^(0+128)
  2734  01B0                     l3389:
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2737  01B0  3003               	movlw	3
  2738  01B1  04B3               	iorwf	sprintf@flag^(0+128),f
  2739  01B2  3000               	movlw	0
  2740  01B3  04B4               	iorwf	(sprintf@flag+1)^(0+128),f
  2741  01B4                     l3391:
  2742                           
  2743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2744  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  2745  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  2746  01B6  01BB               	clrf	sprintf@eexp^(0+128)
  2747  01B7  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  2748  01B8                     l3393:
  2749                           
  2750                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2751  01B8  0840               	movf	(sprintf@fval+3)^(0+128),w
  2752  01B9  00F3               	movwf	___fleq@ff1+3
  2753  01BA  083F               	movf	(sprintf@fval+2)^(0+128),w
  2754  01BB  00F2               	movwf	___fleq@ff1+2
  2755  01BC  083E               	movf	(sprintf@fval+1)^(0+128),w
  2756  01BD  00F1               	movwf	___fleq@ff1+1
  2757  01BE  083D               	movf	sprintf@fval^(0+128),w
  2758  01BF  00F0               	movwf	___fleq@ff1
  2759  01C0  3000               	movlw	0
  2760  01C1  00F7               	movwf	___fleq@ff2+3
  2761  01C2  3000               	movlw	0
  2762  01C3  00F6               	movwf	___fleq@ff2+2
  2763  01C4  3000               	movlw	0
  2764  01C5  00F5               	movwf	___fleq@ff2+1
  2765  01C6  3000               	movlw	0
  2766  01C7  00F4               	movwf	___fleq@ff2
  2767  01C8  160A  158A  23B0  120A  118A  	fcall	___fleq
  2768  01CD  1803               	btfsc	3,0
  2769  01CE  29D0               	goto	u5401
  2770  01CF  29D1               	goto	u5400
  2771  01D0                     u5401:
  2772  01D0  2AC1               	goto	l3419
  2773  01D1                     u5400:
  2774  01D1                     l3395:
  2775                           
  2776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2777  01D1  1003               	clrc
  2778  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2779  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2780  01D4  0D3F               	rlf	(sprintf@fval+2)^(0+128),w
  2781  01D5  0D40               	rlf	(sprintf@fval+3)^(0+128),w
  2782  01D6  3E82               	addlw	130
  2783  01D7  00BB               	movwf	sprintf@eexp^(0+128)
  2784  01D8  30FF               	movlw	255
  2785  01D9  1803               	skipnc
  2786  01DA  3000               	movlw	0
  2787  01DB  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  2788  01DC                     l3397:
  2789                           
  2790                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2791  01DC  30FF               	movlw	255
  2792  01DD  07BB               	addwf	sprintf@eexp^(0+128),f
  2793  01DE  1803               	skipnc
  2794  01DF  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2795  01E0  30FF               	movlw	255
  2796  01E1  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2797  01E2                     l3399:
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2800  01E2  3003               	movlw	3
  2801  01E3  00F0               	movwf	___wmul@multiplier
  2802  01E4  3000               	movlw	0
  2803  01E5  00F1               	movwf	___wmul@multiplier+1
  2804  01E6  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2805  01E7  00F3               	movwf	___wmul@multiplicand+1
  2806  01E8  083B               	movf	sprintf@eexp^(0+128),w
  2807  01E9  00F2               	movwf	___wmul@multiplicand
  2808  01EA  160A  158A  2213  120A  118A  	fcall	___wmul
  2809  01EF  0871               	movf	?___wmul+1,w
  2810  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  2811  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  2812  01F2  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2813  01F3  0870               	movf	?___wmul,w
  2814  01F4  00BB               	movwf	sprintf@eexp^(0+128)
  2815  01F5                     l3401:
  2816                           
  2817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2818  01F5  300A               	movlw	10
  2819  01F6  00F7               	movwf	___awdiv@divisor
  2820  01F7  3000               	movlw	0
  2821  01F8  00F8               	movwf	___awdiv@divisor+1
  2822  01F9  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2823  01FA  00FA               	movwf	___awdiv@dividend+1
  2824  01FB  083B               	movf	sprintf@eexp^(0+128),w
  2825  01FC  00F9               	movwf	___awdiv@dividend
  2826  01FD  120A  118A  200C  120A  118A  	fcall	___awdiv
  2827  0202  0878               	movf	?___awdiv+1,w
  2828  0203  1683               	bsf	3,5	;RP0=1, select bank1
  2829  0204  1303               	bcf	3,6	;RP1=0, select bank1
  2830  0205  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2831  0206  0877               	movf	?___awdiv,w
  2832  0207  00BB               	movwf	sprintf@eexp^(0+128)
  2833  0208                     l3403:
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2836  0208  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  2837  0209  2A0B               	goto	u5411
  2838  020A  2A0C               	goto	u5410
  2839  020B                     u5411:
  2840  020B  2A12               	goto	l3407
  2841  020C                     u5410:
  2842  020C                     l3405:
  2843                           
  2844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2845  020C  30FF               	movlw	255
  2846  020D  07BB               	addwf	sprintf@eexp^(0+128),f
  2847  020E  1803               	skipnc
  2848  020F  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2849  0210  30FF               	movlw	255
  2850  0211  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2851  0212                     l3407:
  2852                           
  2853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2854  0212  033B               	decf	sprintf@eexp^(0+128),w
  2855  0213  3AFF               	xorlw	255
  2856  0214  120A  158A  2140  120A  118A  	fcall	_scale
  2857  0219  1283               	bcf	3,5	;RP0=0, select bank0
  2858  021A  1303               	bcf	3,6	;RP1=0, select bank0
  2859  021B  0841               	movf	?_scale+3,w
  2860  021C  1683               	bsf	3,5	;RP0=1, select bank1
  2861  021D  1303               	bcf	3,6	;RP1=0, select bank1
  2862  021E  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2863  021F  1283               	bcf	3,5	;RP0=0, select bank0
  2864  0220  1303               	bcf	3,6	;RP1=0, select bank0
  2865  0221  0840               	movf	?_scale+2,w
  2866  0222  1683               	bsf	3,5	;RP0=1, select bank1
  2867  0223  1303               	bcf	3,6	;RP1=0, select bank1
  2868  0224  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2869  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0226  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0227  083F               	movf	?_scale+1,w
  2872  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2873  0229  1303               	bcf	3,6	;RP1=0, select bank1
  2874  022A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2875  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2876  022C  1303               	bcf	3,6	;RP1=0, select bank0
  2877  022D  083E               	movf	?_scale,w
  2878  022E  1683               	bsf	3,5	;RP0=1, select bank1
  2879  022F  1303               	bcf	3,6	;RP1=0, select bank1
  2880  0230  00B7               	movwf	sprintf@tmpval^(0+128)
  2881  0231                     l3409:
  2882                           
  2883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2884  0231  0840               	movf	(sprintf@fval+3)^(0+128),w
  2885  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2886  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2887  0234  00A7               	movwf	___flmul@b+3
  2888  0235  1683               	bsf	3,5	;RP0=1, select bank1
  2889  0236  1303               	bcf	3,6	;RP1=0, select bank1
  2890  0237  083F               	movf	(sprintf@fval+2)^(0+128),w
  2891  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2892  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2893  023A  00A6               	movwf	___flmul@b+2
  2894  023B  1683               	bsf	3,5	;RP0=1, select bank1
  2895  023C  1303               	bcf	3,6	;RP1=0, select bank1
  2896  023D  083E               	movf	(sprintf@fval+1)^(0+128),w
  2897  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2898  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2899  0240  00A5               	movwf	___flmul@b+1
  2900  0241  1683               	bsf	3,5	;RP0=1, select bank1
  2901  0242  1303               	bcf	3,6	;RP1=0, select bank1
  2902  0243  083D               	movf	sprintf@fval^(0+128),w
  2903  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2904  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2905  0246  00A4               	movwf	___flmul@b
  2906  0247  1683               	bsf	3,5	;RP0=1, select bank1
  2907  0248  1303               	bcf	3,6	;RP1=0, select bank1
  2908  0249  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2909  024A  1283               	bcf	3,5	;RP0=0, select bank0
  2910  024B  1303               	bcf	3,6	;RP1=0, select bank0
  2911  024C  00AB               	movwf	___flmul@a+3
  2912  024D  1683               	bsf	3,5	;RP0=1, select bank1
  2913  024E  1303               	bcf	3,6	;RP1=0, select bank1
  2914  024F  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2915  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2916  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2917  0252  00AA               	movwf	___flmul@a+2
  2918  0253  1683               	bsf	3,5	;RP0=1, select bank1
  2919  0254  1303               	bcf	3,6	;RP1=0, select bank1
  2920  0255  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2921  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0257  1303               	bcf	3,6	;RP1=0, select bank0
  2923  0258  00A9               	movwf	___flmul@a+1
  2924  0259  1683               	bsf	3,5	;RP0=1, select bank1
  2925  025A  1303               	bcf	3,6	;RP1=0, select bank1
  2926  025B  0837               	movf	sprintf@tmpval^(0+128),w
  2927  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2928  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2929  025E  00A8               	movwf	___flmul@a
  2930  025F  120A  158A  249F  120A  118A  	fcall	___flmul
  2931  0264  1283               	bcf	3,5	;RP0=0, select bank0
  2932  0265  1303               	bcf	3,6	;RP1=0, select bank0
  2933  0266  0827               	movf	?___flmul+3,w
  2934  0267  1683               	bsf	3,5	;RP0=1, select bank1
  2935  0268  1303               	bcf	3,6	;RP1=0, select bank1
  2936  0269  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2937  026A  1283               	bcf	3,5	;RP0=0, select bank0
  2938  026B  1303               	bcf	3,6	;RP1=0, select bank0
  2939  026C  0826               	movf	?___flmul+2,w
  2940  026D  1683               	bsf	3,5	;RP0=1, select bank1
  2941  026E  1303               	bcf	3,6	;RP1=0, select bank1
  2942  026F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2943  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0271  1303               	bcf	3,6	;RP1=0, select bank0
  2945  0272  0825               	movf	?___flmul+1,w
  2946  0273  1683               	bsf	3,5	;RP0=1, select bank1
  2947  0274  1303               	bcf	3,6	;RP1=0, select bank1
  2948  0275  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2949  0276  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0277  1303               	bcf	3,6	;RP1=0, select bank0
  2951  0278  0824               	movf	?___flmul,w
  2952  0279  1683               	bsf	3,5	;RP0=1, select bank1
  2953  027A  1303               	bcf	3,6	;RP1=0, select bank1
  2954  027B  00B7               	movwf	sprintf@tmpval^(0+128)
  2955  027C                     l3411:
  2956                           
  2957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2958  027C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2959  027D  00F3               	movwf	___flge@ff1+3
  2960  027E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2961  027F  00F2               	movwf	___flge@ff1+2
  2962  0280  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2963  0281  00F1               	movwf	___flge@ff1+1
  2964  0282  0837               	movf	sprintf@tmpval^(0+128),w
  2965  0283  00F0               	movwf	___flge@ff1
  2966  0284  303F               	movlw	63
  2967  0285  00F7               	movwf	___flge@ff2+3
  2968  0286  3080               	movlw	128
  2969  0287  00F6               	movwf	___flge@ff2+2
  2970  0288  3000               	movlw	0
  2971  0289  00F5               	movwf	___flge@ff2+1
  2972  028A  3000               	movlw	0
  2973  028B  00F4               	movwf	___flge@ff2
  2974  028C  160A  158A  26A4  120A  118A  	fcall	___flge
  2975  0291  1803               	btfsc	3,0
  2976  0292  2A94               	goto	u5421
  2977  0293  2A95               	goto	u5420
  2978  0294                     u5421:
  2979  0294  2A9E               	goto	l3415
  2980  0295                     u5420:
  2981  0295                     l3413:
  2982                           
  2983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2984  0295  30FF               	movlw	255
  2985  0296  1683               	bsf	3,5	;RP0=1, select bank1
  2986  0297  1303               	bcf	3,6	;RP1=0, select bank1
  2987  0298  07BB               	addwf	sprintf@eexp^(0+128),f
  2988  0299  1803               	skipnc
  2989  029A  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2990  029B  30FF               	movlw	255
  2991  029C  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2992  029D  2AC1               	goto	l3419
  2993  029E                     l3415:
  2994  029E  1683               	bsf	3,5	;RP0=1, select bank1
  2995  029F  1303               	bcf	3,6	;RP1=0, select bank1
  2996  02A0  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2997  02A1  00F3               	movwf	___flge@ff1+3
  2998  02A2  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2999  02A3  00F2               	movwf	___flge@ff1+2
  3000  02A4  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3001  02A5  00F1               	movwf	___flge@ff1+1
  3002  02A6  0837               	movf	sprintf@tmpval^(0+128),w
  3003  02A7  00F0               	movwf	___flge@ff1
  3004  02A8  3041               	movlw	65
  3005  02A9  00F7               	movwf	___flge@ff2+3
  3006  02AA  3020               	movlw	32
  3007  02AB  00F6               	movwf	___flge@ff2+2
  3008  02AC  3000               	movlw	0
  3009  02AD  00F5               	movwf	___flge@ff2+1
  3010  02AE  3000               	movlw	0
  3011  02AF  00F4               	movwf	___flge@ff2
  3012  02B0  160A  158A  26A4  120A  118A  	fcall	___flge
  3013  02B5  1C03               	btfss	3,0
  3014  02B6  2AB8               	goto	u5431
  3015  02B7  2AB9               	goto	u5430
  3016  02B8                     u5431:
  3017  02B8  2AC1               	goto	l3419
  3018  02B9                     u5430:
  3019  02B9                     l3417:
  3020                           
  3021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3022  02B9  3001               	movlw	1
  3023  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  3024  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  3025  02BC  07BB               	addwf	sprintf@eexp^(0+128),f
  3026  02BD  1803               	skipnc
  3027  02BE  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3028  02BF  3000               	movlw	0
  3029  02C0  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3030  02C1                     l3419:
  3031                           
  3032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3033  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  3034  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  3035  02C3  0843               	movf	(sprintf@prec+1)^(0+128),w
  3036  02C4  3A80               	xorlw	128
  3037  02C5  00FF               	movwf	btemp+1
  3038  02C6  3080               	movlw	128
  3039  02C7  027F               	subwf	btemp+1,w
  3040  02C8  1D03               	skipz
  3041  02C9  2ACC               	goto	u5445
  3042  02CA  300D               	movlw	13
  3043  02CB  0242               	subwf	sprintf@prec^(0+128),w
  3044  02CC                     u5445:
  3045  02CC  1803               	skipnc
  3046  02CD  2ACF               	goto	u5441
  3047  02CE  2AD0               	goto	u5440
  3048  02CF                     u5441:
  3049  02CF  2B17               	goto	l3423
  3050  02D0                     u5440:
  3051  02D0                     l3421:
  3052                           
  3053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3054  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  3055  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  3056  02D2  0842               	movf	sprintf@prec^(0+128),w
  3057  02D3  160A  118A  236D  120A  118A  	fcall	_fround
  3058  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  3059  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  3060  02DA  0841               	movf	?_fround+3,w
  3061  02DB  00D5               	movwf	___fladd@b+3
  3062  02DC  0840               	movf	?_fround+2,w
  3063  02DD  00D4               	movwf	___fladd@b+2
  3064  02DE  083F               	movf	?_fround+1,w
  3065  02DF  00D3               	movwf	___fladd@b+1
  3066  02E0  083E               	movf	?_fround,w
  3067  02E1  00D2               	movwf	___fladd@b
  3068  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  3069  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  3070  02E4  0840               	movf	(sprintf@fval+3)^(0+128),w
  3071  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  3072  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  3073  02E7  00D9               	movwf	___fladd@a+3
  3074  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  3075  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  3076  02EA  083F               	movf	(sprintf@fval+2)^(0+128),w
  3077  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  3078  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  3079  02ED  00D8               	movwf	___fladd@a+2
  3080  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  3081  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  3082  02F0  083E               	movf	(sprintf@fval+1)^(0+128),w
  3083  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  3084  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  3085  02F3  00D7               	movwf	___fladd@a+1
  3086  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  3087  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  3088  02F6  083D               	movf	sprintf@fval^(0+128),w
  3089  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  3090  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  3091  02F9  00D6               	movwf	___fladd@a
  3092  02FA  160A  118A  2578  120A  118A  	fcall	___fladd
  3093  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0300  1303               	bcf	3,6	;RP1=0, select bank0
  3095  0301  0855               	movf	?___fladd+3,w
  3096  0302  1683               	bsf	3,5	;RP0=1, select bank1
  3097  0303  1303               	bcf	3,6	;RP1=0, select bank1
  3098  0304  00C0               	movwf	(sprintf@fval+3)^(0+128)
  3099  0305  1283               	bcf	3,5	;RP0=0, select bank0
  3100  0306  1303               	bcf	3,6	;RP1=0, select bank0
  3101  0307  0854               	movf	?___fladd+2,w
  3102  0308  1683               	bsf	3,5	;RP0=1, select bank1
  3103  0309  1303               	bcf	3,6	;RP1=0, select bank1
  3104  030A  00BF               	movwf	(sprintf@fval+2)^(0+128)
  3105  030B  1283               	bcf	3,5	;RP0=0, select bank0
  3106  030C  1303               	bcf	3,6	;RP1=0, select bank0
  3107  030D  0853               	movf	?___fladd+1,w
  3108  030E  1683               	bsf	3,5	;RP0=1, select bank1
  3109  030F  1303               	bcf	3,6	;RP1=0, select bank1
  3110  0310  00BE               	movwf	(sprintf@fval+1)^(0+128)
  3111  0311  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0312  1303               	bcf	3,6	;RP1=0, select bank0
  3113  0313  0852               	movf	?___fladd,w
  3114  0314  1683               	bsf	3,5	;RP0=1, select bank1
  3115  0315  1303               	bcf	3,6	;RP1=0, select bank1
  3116  0316  00BD               	movwf	sprintf@fval^(0+128)
  3117  0317                     l3423:
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3120  0317  1683               	bsf	3,5	;RP0=1, select bank1
  3121  0318  1303               	bcf	3,6	;RP1=0, select bank1
  3122  0319  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3123  031A  3A80               	xorlw	128
  3124  031B  00FF               	movwf	btemp+1
  3125  031C  3080               	movlw	128
  3126  031D  027F               	subwf	btemp+1,w
  3127  031E  1D03               	skipz
  3128  031F  2B22               	goto	u5455
  3129  0320  300A               	movlw	10
  3130  0321  023B               	subwf	sprintf@eexp^(0+128),w
  3131  0322                     u5455:
  3132  0322  1803               	skipnc
  3133  0323  2B25               	goto	u5451
  3134  0324  2B26               	goto	u5450
  3135  0325                     u5451:
  3136  0325  2B77               	goto	l3431
  3137  0326                     u5450:
  3138  0326                     l3425:
  3139  0326  1683               	bsf	3,5	;RP0=1, select bank1
  3140  0327  1303               	bcf	3,6	;RP1=0, select bank1
  3141  0328  0840               	movf	(sprintf@fval+3)^(0+128),w
  3142  0329  00F3               	movwf	___fleq@ff1+3
  3143  032A  083F               	movf	(sprintf@fval+2)^(0+128),w
  3144  032B  00F2               	movwf	___fleq@ff1+2
  3145  032C  083E               	movf	(sprintf@fval+1)^(0+128),w
  3146  032D  00F1               	movwf	___fleq@ff1+1
  3147  032E  083D               	movf	sprintf@fval^(0+128),w
  3148  032F  00F0               	movwf	___fleq@ff1
  3149  0330  3000               	movlw	0
  3150  0331  00F7               	movwf	___fleq@ff2+3
  3151  0332  3000               	movlw	0
  3152  0333  00F6               	movwf	___fleq@ff2+2
  3153  0334  3000               	movlw	0
  3154  0335  00F5               	movwf	___fleq@ff2+1
  3155  0336  3000               	movlw	0
  3156  0337  00F4               	movwf	___fleq@ff2
  3157  0338  160A  158A  23B0  120A  118A  	fcall	___fleq
  3158  033D  1803               	btfsc	3,0
  3159  033E  2B40               	goto	u5461
  3160  033F  2B41               	goto	u5460
  3161  0340                     u5461:
  3162  0340  2BE9               	goto	l3445
  3163  0341                     u5460:
  3164  0341                     l3427:
  3165  0341  1683               	bsf	3,5	;RP0=1, select bank1
  3166  0342  1303               	bcf	3,6	;RP1=0, select bank1
  3167  0343  0840               	movf	(sprintf@fval+3)^(0+128),w
  3168  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0346  00D4               	movwf	___fltol@f1+3
  3171  0347  1683               	bsf	3,5	;RP0=1, select bank1
  3172  0348  1303               	bcf	3,6	;RP1=0, select bank1
  3173  0349  083F               	movf	(sprintf@fval+2)^(0+128),w
  3174  034A  1283               	bcf	3,5	;RP0=0, select bank0
  3175  034B  1303               	bcf	3,6	;RP1=0, select bank0
  3176  034C  00D3               	movwf	___fltol@f1+2
  3177  034D  1683               	bsf	3,5	;RP0=1, select bank1
  3178  034E  1303               	bcf	3,6	;RP1=0, select bank1
  3179  034F  083E               	movf	(sprintf@fval+1)^(0+128),w
  3180  0350  1283               	bcf	3,5	;RP0=0, select bank0
  3181  0351  1303               	bcf	3,6	;RP1=0, select bank0
  3182  0352  00D2               	movwf	___fltol@f1+1
  3183  0353  1683               	bsf	3,5	;RP0=1, select bank1
  3184  0354  1303               	bcf	3,6	;RP1=0, select bank1
  3185  0355  083D               	movf	sprintf@fval^(0+128),w
  3186  0356  1283               	bcf	3,5	;RP0=0, select bank0
  3187  0357  1303               	bcf	3,6	;RP1=0, select bank0
  3188  0358  00D1               	movwf	___fltol@f1
  3189  0359  120A  158A  2006  120A  118A  	fcall	___fltol
  3190  035E  1283               	bcf	3,5	;RP0=0, select bank0
  3191  035F  1303               	bcf	3,6	;RP1=0, select bank0
  3192  0360  0854               	movf	?___fltol+3,w
  3193  0361  0453               	iorwf	?___fltol+2,w
  3194  0362  0452               	iorwf	?___fltol+1,w
  3195  0363  0451               	iorwf	?___fltol,w
  3196  0364  1D03               	skipz
  3197  0365  2B67               	goto	u5471
  3198  0366  2B68               	goto	u5470
  3199  0367                     u5471:
  3200  0367  2BE9               	goto	l3445
  3201  0368                     u5470:
  3202  0368                     l3429:
  3203  0368  1683               	bsf	3,5	;RP0=1, select bank1
  3204  0369  1303               	bcf	3,6	;RP1=0, select bank1
  3205  036A  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3206  036B  3A80               	xorlw	128
  3207  036C  00FF               	movwf	btemp+1
  3208  036D  3080               	movlw	128
  3209  036E  027F               	subwf	btemp+1,w
  3210  036F  1D03               	skipz
  3211  0370  2B73               	goto	u5485
  3212  0371  3002               	movlw	2
  3213  0372  023B               	subwf	sprintf@eexp^(0+128),w
  3214  0373                     u5485:
  3215  0373  1C03               	skipc
  3216  0374  2B76               	goto	u5481
  3217  0375  2B77               	goto	u5480
  3218  0376                     u5481:
  3219  0376  2BE9               	goto	l3445
  3220  0377                     u5480:
  3221  0377                     l3431:
  3222                           
  3223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3224  0377  1683               	bsf	3,5	;RP0=1, select bank1
  3225  0378  1303               	bcf	3,6	;RP1=0, select bank1
  3226  0379  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3227  037A  00F3               	movwf	___flge@ff1+3
  3228  037B  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3229  037C  00F2               	movwf	___flge@ff1+2
  3230  037D  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3231  037E  00F1               	movwf	___flge@ff1+1
  3232  037F  0837               	movf	sprintf@tmpval^(0+128),w
  3233  0380  00F0               	movwf	___flge@ff1
  3234  0381  3040               	movlw	64
  3235  0382  00F7               	movwf	___flge@ff2+3
  3236  0383  3089               	movlw	137
  3237  0384  00F6               	movwf	___flge@ff2+2
  3238  0385  3070               	movlw	112
  3239  0386  00F5               	movwf	___flge@ff2+1
  3240  0387  305F               	movlw	95
  3241  0388  00F4               	movwf	___flge@ff2
  3242  0389  160A  158A  26A4  120A  118A  	fcall	___flge
  3243  038E  1803               	btfsc	3,0
  3244  038F  2B91               	goto	u5491
  3245  0390  2B92               	goto	u5490
  3246  0391                     u5491:
  3247  0391  2B9B               	goto	l3435
  3248  0392                     u5490:
  3249  0392                     l3433:
  3250                           
  3251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3252  0392  30F7               	movlw	247
  3253  0393  1683               	bsf	3,5	;RP0=1, select bank1
  3254  0394  1303               	bcf	3,6	;RP1=0, select bank1
  3255  0395  07BB               	addwf	sprintf@eexp^(0+128),f
  3256  0396  1803               	skipnc
  3257  0397  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3258  0398  30FF               	movlw	255
  3259  0399  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3260                           
  3261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3262  039A  2BA3               	goto	l3437
  3263  039B                     l3435:
  3264                           
  3265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3266  039B  30F8               	movlw	248
  3267  039C  1683               	bsf	3,5	;RP0=1, select bank1
  3268  039D  1303               	bcf	3,6	;RP1=0, select bank1
  3269  039E  07BB               	addwf	sprintf@eexp^(0+128),f
  3270  039F  1803               	skipnc
  3271  03A0  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3272  03A1  30FF               	movlw	255
  3273  03A2  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3274  03A3                     l3437:
  3275                           
  3276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3277  03A3  083B               	movf	sprintf@eexp^(0+128),w
  3278  03A4  120A  158A  2140  120A  118A  	fcall	_scale
  3279  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  3280  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  3281  03AB  0841               	movf	?_scale+3,w
  3282  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  3283  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  3284  03AE  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3285  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  3286  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  3287  03B1  0840               	movf	?_scale+2,w
  3288  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  3289  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  3290  03B4  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3291  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  3292  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  3293  03B7  083F               	movf	?_scale+1,w
  3294  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  3295  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  3296  03BA  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3297  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  3298  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  3299  03BD  083E               	movf	?_scale,w
  3300  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  3301  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  3302  03C0  00B7               	movwf	sprintf@tmpval^(0+128)
  3303  03C1                     l3439:
  3304  03C1  0840               	movf	(sprintf@fval+3)^(0+128),w
  3305  03C2  00F3               	movwf	__div_to_l_@f1+3
  3306  03C3  083F               	movf	(sprintf@fval+2)^(0+128),w
  3307  03C4  00F2               	movwf	__div_to_l_@f1+2
  3308  03C5  083E               	movf	(sprintf@fval+1)^(0+128),w
  3309  03C6  00F1               	movwf	__div_to_l_@f1+1
  3310  03C7  083D               	movf	sprintf@fval^(0+128),w
  3311  03C8  00F0               	movwf	__div_to_l_@f1
  3312  03C9  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3313  03CA  00F7               	movwf	__div_to_l_@f2+3
  3314  03CB  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3315  03CC  00F6               	movwf	__div_to_l_@f2+2
  3316  03CD  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3317  03CE  00F5               	movwf	__div_to_l_@f2+1
  3318  03CF  0837               	movf	sprintf@tmpval^(0+128),w
  3319  03D0  00F4               	movwf	__div_to_l_@f2
  3320  03D1  120A  158A  2082  120A  118A  	fcall	__div_to_l_
  3321  03D6  0873               	movf	?__div_to_l_+3,w
  3322  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  3323  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  3324  03D9  00B2               	movwf	(sprintf@val+3)^(0+128)
  3325  03DA  0872               	movf	?__div_to_l_+2,w
  3326  03DB  00B1               	movwf	(sprintf@val+2)^(0+128)
  3327  03DC  0871               	movf	?__div_to_l_+1,w
  3328  03DD  00B0               	movwf	(sprintf@val+1)^(0+128)
  3329  03DE  0870               	movf	?__div_to_l_,w
  3330  03DF  00AF               	movwf	sprintf@val^(0+128)
  3331  03E0                     l3443:
  3332                           
  3333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3334  03E0  3000               	movlw	0
  3335  03E1  00C0               	movwf	(sprintf@fval+3)^(0+128)
  3336  03E2  3000               	movlw	0
  3337  03E3  00BF               	movwf	(sprintf@fval+2)^(0+128)
  3338  03E4  3000               	movlw	0
  3339  03E5  00BE               	movwf	(sprintf@fval+1)^(0+128)
  3340  03E6  3000               	movlw	0
  3341  03E7  00BD               	movwf	sprintf@fval^(0+128)
  3342                           
  3343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3344  03E8  2C6D               	goto	l3451
  3345  03E9                     l3445:
  3346                           
  3347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3348  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  3349  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  3350  03EB  0840               	movf	(sprintf@fval+3)^(0+128),w
  3351  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  3352  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  3353  03EE  00D4               	movwf	___fltol@f1+3
  3354  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  3355  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  3356  03F1  083F               	movf	(sprintf@fval+2)^(0+128),w
  3357  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  3358  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  3359  03F4  00D3               	movwf	___fltol@f1+2
  3360  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  3361  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  3362  03F7  083E               	movf	(sprintf@fval+1)^(0+128),w
  3363  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  3364  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  3365  03FA  00D2               	movwf	___fltol@f1+1
  3366  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  3367  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  3368  03FD  083D               	movf	sprintf@fval^(0+128),w
  3369  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3370  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3371  0400  00D1               	movwf	___fltol@f1
  3372  0401  120A  158A  2006  120A  118A  	fcall	___fltol
  3373  0406  1283               	bcf	3,5	;RP0=0, select bank0
  3374  0407  1303               	bcf	3,6	;RP1=0, select bank0
  3375  0408  0854               	movf	?___fltol+3,w
  3376  0409  1683               	bsf	3,5	;RP0=1, select bank1
  3377  040A  1303               	bcf	3,6	;RP1=0, select bank1
  3378  040B  00B2               	movwf	(sprintf@val+3)^(0+128)
  3379  040C  1283               	bcf	3,5	;RP0=0, select bank0
  3380  040D  1303               	bcf	3,6	;RP1=0, select bank0
  3381  040E  0853               	movf	?___fltol+2,w
  3382  040F  1683               	bsf	3,5	;RP0=1, select bank1
  3383  0410  1303               	bcf	3,6	;RP1=0, select bank1
  3384  0411  00B1               	movwf	(sprintf@val+2)^(0+128)
  3385  0412  1283               	bcf	3,5	;RP0=0, select bank0
  3386  0413  1303               	bcf	3,6	;RP1=0, select bank0
  3387  0414  0852               	movf	?___fltol+1,w
  3388  0415  1683               	bsf	3,5	;RP0=1, select bank1
  3389  0416  1303               	bcf	3,6	;RP1=0, select bank1
  3390  0417  00B0               	movwf	(sprintf@val+1)^(0+128)
  3391  0418  1283               	bcf	3,5	;RP0=0, select bank0
  3392  0419  1303               	bcf	3,6	;RP1=0, select bank0
  3393  041A  0851               	movf	?___fltol,w
  3394  041B  1683               	bsf	3,5	;RP0=1, select bank1
  3395  041C  1303               	bcf	3,6	;RP1=0, select bank1
  3396  041D  00AF               	movwf	sprintf@val^(0+128)
  3397  041E                     l3447:
  3398                           
  3399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3400  041E  0832               	movf	(sprintf@val+3)^(0+128),w
  3401  041F  00F3               	movwf	___xxtofl@val+3
  3402  0420  0831               	movf	(sprintf@val+2)^(0+128),w
  3403  0421  00F2               	movwf	___xxtofl@val+2
  3404  0422  0830               	movf	(sprintf@val+1)^(0+128),w
  3405  0423  00F1               	movwf	___xxtofl@val+1
  3406  0424  082F               	movf	sprintf@val^(0+128),w
  3407  0425  00F0               	movwf	___xxtofl@val
  3408  0426  3000               	movlw	0
  3409  0427  160A  158A  2746  120A  118A  	fcall	___xxtofl
  3410  042C  0873               	movf	?___xxtofl+3,w
  3411  042D  1283               	bcf	3,5	;RP0=0, select bank0
  3412  042E  1303               	bcf	3,6	;RP1=0, select bank0
  3413  042F  00E9               	movwf	___flsub@a+3
  3414  0430  0872               	movf	?___xxtofl+2,w
  3415  0431  00E8               	movwf	___flsub@a+2
  3416  0432  0871               	movf	?___xxtofl+1,w
  3417  0433  00E7               	movwf	___flsub@a+1
  3418  0434  0870               	movf	?___xxtofl,w
  3419  0435  00E6               	movwf	___flsub@a
  3420  0436  1683               	bsf	3,5	;RP0=1, select bank1
  3421  0437  1303               	bcf	3,6	;RP1=0, select bank1
  3422  0438  0840               	movf	(sprintf@fval+3)^(0+128),w
  3423  0439  1283               	bcf	3,5	;RP0=0, select bank0
  3424  043A  1303               	bcf	3,6	;RP1=0, select bank0
  3425  043B  00ED               	movwf	___flsub@b+3
  3426  043C  1683               	bsf	3,5	;RP0=1, select bank1
  3427  043D  1303               	bcf	3,6	;RP1=0, select bank1
  3428  043E  083F               	movf	(sprintf@fval+2)^(0+128),w
  3429  043F  1283               	bcf	3,5	;RP0=0, select bank0
  3430  0440  1303               	bcf	3,6	;RP1=0, select bank0
  3431  0441  00EC               	movwf	___flsub@b+2
  3432  0442  1683               	bsf	3,5	;RP0=1, select bank1
  3433  0443  1303               	bcf	3,6	;RP1=0, select bank1
  3434  0444  083E               	movf	(sprintf@fval+1)^(0+128),w
  3435  0445  1283               	bcf	3,5	;RP0=0, select bank0
  3436  0446  1303               	bcf	3,6	;RP1=0, select bank0
  3437  0447  00EB               	movwf	___flsub@b+1
  3438  0448  1683               	bsf	3,5	;RP0=1, select bank1
  3439  0449  1303               	bcf	3,6	;RP1=0, select bank1
  3440  044A  083D               	movf	sprintf@fval^(0+128),w
  3441  044B  1283               	bcf	3,5	;RP0=0, select bank0
  3442  044C  1303               	bcf	3,6	;RP1=0, select bank0
  3443  044D  00EA               	movwf	___flsub@b
  3444  044E  160A  158A  21CB  120A  118A  	fcall	___flsub
  3445  0453  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0454  1303               	bcf	3,6	;RP1=0, select bank0
  3447  0455  0869               	movf	?___flsub+3,w
  3448  0456  1683               	bsf	3,5	;RP0=1, select bank1
  3449  0457  1303               	bcf	3,6	;RP1=0, select bank1
  3450  0458  00C0               	movwf	(sprintf@fval+3)^(0+128)
  3451  0459  1283               	bcf	3,5	;RP0=0, select bank0
  3452  045A  1303               	bcf	3,6	;RP1=0, select bank0
  3453  045B  0868               	movf	?___flsub+2,w
  3454  045C  1683               	bsf	3,5	;RP0=1, select bank1
  3455  045D  1303               	bcf	3,6	;RP1=0, select bank1
  3456  045E  00BF               	movwf	(sprintf@fval+2)^(0+128)
  3457  045F  1283               	bcf	3,5	;RP0=0, select bank0
  3458  0460  1303               	bcf	3,6	;RP1=0, select bank0
  3459  0461  0867               	movf	?___flsub+1,w
  3460  0462  1683               	bsf	3,5	;RP0=1, select bank1
  3461  0463  1303               	bcf	3,6	;RP1=0, select bank1
  3462  0464  00BE               	movwf	(sprintf@fval+1)^(0+128)
  3463  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3465  0467  0866               	movf	?___flsub,w
  3466  0468  1683               	bsf	3,5	;RP0=1, select bank1
  3467  0469  1303               	bcf	3,6	;RP1=0, select bank1
  3468  046A  00BD               	movwf	sprintf@fval^(0+128)
  3469  046B                     l3449:
  3470                           
  3471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3472  046B  01BB               	clrf	sprintf@eexp^(0+128)
  3473  046C  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  3474  046D                     l3451:
  3475                           
  3476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3477  046D  01C4               	clrf	sprintf@c^(0+128)
  3478  046E  0AC4               	incf	sprintf@c^(0+128),f
  3479  046F                     l3457:
  3480                           
  3481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3482  046F  0844               	movf	sprintf@c^(0+128),w
  3483  0470  00A5               	movwf	??_sprintf^(0+128)
  3484  0471  3001               	movlw	1
  3485  0472                     u5505:
  3486  0472  1003               	clrc
  3487  0473  0DA5               	rlf	??_sprintf^(0+128),f
  3488  0474  3EFF               	addlw	-1
  3489  0475  1D03               	skipz
  3490  0476  2C72               	goto	u5505
  3491  0477  1003               	clrc
  3492  0478  0D25               	rlf	??_sprintf^(0+128),w
  3493  0479  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3494  047A  0084               	movwf	4
  3495  047B  160A  158A  2000  120A  118A  	fcall	stringdir
  3496  0480  00A6               	movwf	(??_sprintf+1)^(0+128)
  3497  0481  160A  158A  2000  120A  118A  	fcall	stringdir
  3498  0486  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3499  0487  160A  158A  2000  120A  118A  	fcall	stringdir
  3500  048C  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3501  048D  160A  158A  2000  120A  118A  	fcall	stringdir
  3502  0492  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3503  0493  0829               	movf	(??_sprintf+4)^(0+128),w
  3504  0494  0232               	subwf	(sprintf@val+3)^(0+128),w
  3505  0495  1D03               	skipz
  3506  0496  2CA1               	goto	u5515
  3507  0497  0828               	movf	(??_sprintf+3)^(0+128),w
  3508  0498  0231               	subwf	(sprintf@val+2)^(0+128),w
  3509  0499  1D03               	skipz
  3510  049A  2CA1               	goto	u5515
  3511  049B  0827               	movf	(??_sprintf+2)^(0+128),w
  3512  049C  0230               	subwf	(sprintf@val+1)^(0+128),w
  3513  049D  1D03               	skipz
  3514  049E  2CA1               	goto	u5515
  3515  049F  0826               	movf	(??_sprintf+1)^(0+128),w
  3516  04A0  022F               	subwf	sprintf@val^(0+128),w
  3517  04A1                     u5515:
  3518  04A1  1803               	skipnc
  3519  04A2  2CA4               	goto	u5511
  3520  04A3  2CA5               	goto	u5510
  3521  04A4                     u5511:
  3522  04A4  2CA6               	goto	l3461
  3523  04A5                     u5510:
  3524  04A5  2CB0               	goto	l3463
  3525  04A6                     l3461:
  3526  04A6  3001               	movlw	1
  3527  04A7  00A5               	movwf	??_sprintf^(0+128)
  3528  04A8  0825               	movf	??_sprintf^(0+128),w
  3529  04A9  07C4               	addwf	sprintf@c^(0+128),f
  3530  04AA  300A               	movlw	10
  3531  04AB  0644               	xorwf	sprintf@c^(0+128),w
  3532  04AC  1D03               	btfss	3,2
  3533  04AD  2CAF               	goto	u5521
  3534  04AE  2CB0               	goto	u5520
  3535  04AF                     u5521:
  3536  04AF  2C6F               	goto	l3457
  3537  04B0                     u5520:
  3538  04B0                     l3463:
  3539                           
  3540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  3541  04B0  0844               	movf	sprintf@c^(0+128),w
  3542  04B1  0742               	addwf	sprintf@prec^(0+128),w
  3543  04B2  00A5               	movwf	??_sprintf^(0+128)
  3544  04B3  0843               	movf	(sprintf@prec+1)^(0+128),w
  3545  04B4  1803               	skipnc
  3546  04B5  0A43               	incf	(sprintf@prec+1)^(0+128),w
  3547  04B6  00A6               	movwf	(??_sprintf^(0+128)+1)
  3548  04B7  083B               	movf	sprintf@eexp^(0+128),w
  3549  04B8  0725               	addwf	??_sprintf^(0+128),w
  3550  04B9  00A7               	movwf	(??_sprintf+2)^(0+128)
  3551  04BA  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3552  04BB  1803               	skipnc
  3553  04BC  0A3C               	incf	(sprintf@eexp+1)^(0+128),w
  3554  04BD  0726               	addwf	(??_sprintf+1)^(0+128),w
  3555  04BE  00A8               	movwf	(??_sprintf+3)^(0+128)
  3556  04BF  0827               	movf	(??_sprintf+2)^(0+128),w
  3557  04C0  02B5               	subwf	sprintf@width^(0+128),f
  3558  04C1  0828               	movf	(??_sprintf+3)^(0+128),w
  3559  04C2  1C03               	skipc
  3560  04C3  03B6               	decf	(sprintf@width+1)^(0+128),f
  3561  04C4  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3562                           
  3563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  3564  04C5  0842               	movf	sprintf@prec^(0+128),w
  3565  04C6  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3566  04C7  1903               	btfsc	3,2
  3567  04C8  2CCA               	goto	u5531
  3568  04C9  2CCB               	goto	u5530
  3569  04CA                     u5531:
  3570  04CA  2CD1               	goto	l3467
  3571  04CB                     u5530:
  3572  04CB                     l3465:
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  3575  04CB  30FF               	movlw	255
  3576  04CC  07B5               	addwf	sprintf@width^(0+128),f
  3577  04CD  1803               	skipnc
  3578  04CE  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3579  04CF  30FF               	movlw	255
  3580  04D0  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3581  04D1                     l3467:
  3582                           
  3583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  3584  04D1  3003               	movlw	3
  3585  04D2  0533               	andwf	sprintf@flag^(0+128),w
  3586  04D3  00A5               	movwf	??_sprintf^(0+128)
  3587  04D4  3000               	movlw	0
  3588  04D5  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3589  04D6  00A6               	movwf	(??_sprintf+1)^(0+128)
  3590  04D7  0825               	movf	??_sprintf^(0+128),w
  3591  04D8  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3592  04D9  1903               	btfsc	3,2
  3593  04DA  2CDC               	goto	u5541
  3594  04DB  2CDD               	goto	u5540
  3595  04DC                     u5541:
  3596  04DC  2CF2               	goto	l3477
  3597  04DD                     u5540:
  3598  04DD                     l3469:
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  3601  04DD  30FF               	movlw	255
  3602  04DE  07B5               	addwf	sprintf@width^(0+128),f
  3603  04DF  1803               	skipnc
  3604  04E0  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3605  04E1  30FF               	movlw	255
  3606  04E2  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3607  04E3  2CF2               	goto	l3477
  3608  04E4                     l3471:
  3609                           
  3610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  3611  04E4  3020               	movlw	32
  3612  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  3613  04E6  1303               	bcf	3,6	;RP1=0, select bank1
  3614  04E7  00A5               	movwf	??_sprintf^(0+128)
  3615  04E8  0841               	movf	sprintf@sp^(0+128),w
  3616  04E9  0084               	movwf	4
  3617  04EA  0825               	movf	??_sprintf^(0+128),w
  3618  04EB  1383               	bcf	3,7	;select IRP bank0
  3619  04EC  0080               	movwf	0
  3620  04ED                     l3473:
  3621  04ED  3001               	movlw	1
  3622  04EE  00A5               	movwf	??_sprintf^(0+128)
  3623  04EF  0825               	movf	??_sprintf^(0+128),w
  3624  04F0  07C1               	addwf	sprintf@sp^(0+128),f
  3625  04F1  2CDD               	goto	l3469
  3626  04F2                     l3477:
  3627                           
  3628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  3629  04F2  0836               	movf	(sprintf@width+1)^(0+128),w
  3630  04F3  3A80               	xorlw	128
  3631  04F4  00FF               	movwf	btemp+1
  3632  04F5  3080               	movlw	128
  3633  04F6  027F               	subwf	btemp+1,w
  3634  04F7  1D03               	skipz
  3635  04F8  2CFB               	goto	u5555
  3636  04F9  3001               	movlw	1
  3637  04FA  0235               	subwf	sprintf@width^(0+128),w
  3638  04FB                     u5555:
  3639  04FB  1803               	skipnc
  3640  04FC  2CFE               	goto	u5551
  3641  04FD  2CFF               	goto	u5550
  3642  04FE                     u5551:
  3643  04FE  2CE4               	goto	l3471
  3644  04FF                     u5550:
  3645  04FF                     l3479:
  3646                           
  3647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  3648  04FF  3003               	movlw	3
  3649  0500  1683               	bsf	3,5	;RP0=1, select bank1
  3650  0501  1303               	bcf	3,6	;RP1=0, select bank1
  3651  0502  0533               	andwf	sprintf@flag^(0+128),w
  3652  0503  00A5               	movwf	??_sprintf^(0+128)
  3653  0504  3000               	movlw	0
  3654  0505  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3655  0506  00A6               	movwf	(??_sprintf+1)^(0+128)
  3656  0507  0825               	movf	??_sprintf^(0+128),w
  3657  0508  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3658  0509  1903               	btfsc	3,2
  3659  050A  2D0C               	goto	u5561
  3660  050B  2D0D               	goto	u5560
  3661  050C                     u5561:
  3662  050C  2D7F               	goto	l362
  3663  050D                     u5560:
  3664  050D                     l3481:
  3665                           
  3666                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3667  050D  302D               	movlw	45
  3668  050E  00A5               	movwf	??_sprintf^(0+128)
  3669  050F  0841               	movf	sprintf@sp^(0+128),w
  3670  0510  0084               	movwf	4
  3671  0511  0825               	movf	??_sprintf^(0+128),w
  3672  0512  1383               	bcf	3,7	;select IRP bank0
  3673  0513  0080               	movwf	0
  3674  0514                     l3483:
  3675  0514  3001               	movlw	1
  3676  0515  00A5               	movwf	??_sprintf^(0+128)
  3677  0516  0825               	movf	??_sprintf^(0+128),w
  3678  0517  07C1               	addwf	sprintf@sp^(0+128),f
  3679  0518  2D7F               	goto	l362
  3680  0519                     l3485:
  3681                           
  3682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3683  0519  0844               	movf	sprintf@c^(0+128),w
  3684  051A  00A5               	movwf	??_sprintf^(0+128)
  3685  051B  3001               	movlw	1
  3686  051C                     u5575:
  3687  051C  1003               	clrc
  3688  051D  0DA5               	rlf	??_sprintf^(0+128),f
  3689  051E  3EFF               	addlw	-1
  3690  051F  1D03               	skipz
  3691  0520  2D1C               	goto	u5575
  3692  0521  1003               	clrc
  3693  0522  0D25               	rlf	??_sprintf^(0+128),w
  3694  0523  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3695  0524  0084               	movwf	4
  3696  0525  160A  158A  2000  120A  118A  	fcall	stringdir
  3697  052A  00F0               	movwf	___lldiv@divisor
  3698  052B  160A  158A  2000  120A  118A  	fcall	stringdir
  3699  0530  00F1               	movwf	___lldiv@divisor+1
  3700  0531  160A  158A  2000  120A  118A  	fcall	stringdir
  3701  0536  00F2               	movwf	___lldiv@divisor+2
  3702  0537  160A  158A  2000  120A  118A  	fcall	stringdir
  3703  053C  00F3               	movwf	___lldiv@divisor+3
  3704  053D  0832               	movf	(sprintf@val+3)^(0+128),w
  3705  053E  00F7               	movwf	___lldiv@dividend+3
  3706  053F  0831               	movf	(sprintf@val+2)^(0+128),w
  3707  0540  00F6               	movwf	___lldiv@dividend+2
  3708  0541  0830               	movf	(sprintf@val+1)^(0+128),w
  3709  0542  00F5               	movwf	___lldiv@dividend+1
  3710  0543  082F               	movf	sprintf@val^(0+128),w
  3711  0544  00F4               	movwf	___lldiv@dividend
  3712  0545  160A  158A  2558  120A  118A  	fcall	___lldiv
  3713  054A  0873               	movf	?___lldiv+3,w
  3714  054B  1683               	bsf	3,5	;RP0=1, select bank1
  3715  054C  1303               	bcf	3,6	;RP1=0, select bank1
  3716  054D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3717  054E  0872               	movf	?___lldiv+2,w
  3718  054F  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3719  0550  0871               	movf	?___lldiv+1,w
  3720  0551  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3721  0552  0870               	movf	?___lldiv,w
  3722  0553  00B7               	movwf	sprintf@tmpval^(0+128)
  3723  0554                     l3487:
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3726  0554  3000               	movlw	0
  3727  0555  00F3               	movwf	___llmod@divisor+3
  3728  0556  3000               	movlw	0
  3729  0557  00F2               	movwf	___llmod@divisor+2
  3730  0558  3000               	movlw	0
  3731  0559  00F1               	movwf	___llmod@divisor+1
  3732  055A  300A               	movlw	10
  3733  055B  00F0               	movwf	___llmod@divisor
  3734  055C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3735  055D  00F7               	movwf	___llmod@dividend+3
  3736  055E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3737  055F  00F6               	movwf	___llmod@dividend+2
  3738  0560  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3739  0561  00F5               	movwf	___llmod@dividend+1
  3740  0562  0837               	movf	sprintf@tmpval^(0+128),w
  3741  0563  00F4               	movwf	___llmod@dividend
  3742  0564  160A  158A  244F  120A  118A  	fcall	___llmod
  3743  0569  0873               	movf	?___llmod+3,w
  3744  056A  1683               	bsf	3,5	;RP0=1, select bank1
  3745  056B  1303               	bcf	3,6	;RP1=0, select bank1
  3746  056C  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3747  056D  0872               	movf	?___llmod+2,w
  3748  056E  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3749  056F  0871               	movf	?___llmod+1,w
  3750  0570  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3751  0571  0870               	movf	?___llmod,w
  3752  0572  00B7               	movwf	sprintf@tmpval^(0+128)
  3753  0573                     l3489:
  3754                           
  3755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3756  0573  0837               	movf	sprintf@tmpval^(0+128),w
  3757  0574  3E30               	addlw	48
  3758  0575  00A5               	movwf	??_sprintf^(0+128)
  3759  0576  0841               	movf	sprintf@sp^(0+128),w
  3760  0577  0084               	movwf	4
  3761  0578  0825               	movf	??_sprintf^(0+128),w
  3762  0579  1383               	bcf	3,7	;select IRP bank0
  3763  057A  0080               	movwf	0
  3764  057B  3001               	movlw	1
  3765  057C  00A5               	movwf	??_sprintf^(0+128)
  3766  057D  0825               	movf	??_sprintf^(0+128),w
  3767  057E  07C1               	addwf	sprintf@sp^(0+128),f
  3768  057F                     l362:	
  3769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3770                           
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3773  057F  3001               	movlw	1
  3774  0580  02C4               	subwf	sprintf@c^(0+128),f
  3775  0581  0A44               	incf	sprintf@c^(0+128),w
  3776  0582  1D03               	btfss	3,2
  3777  0583  2D85               	goto	u5581
  3778  0584  2D86               	goto	u5580
  3779  0585                     u5581:
  3780  0585  2D19               	goto	l3485
  3781  0586                     u5580:
  3782  0586  2D9A               	goto	l3497
  3783  0587                     l3491:
  3784                           
  3785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3786  0587  3030               	movlw	48
  3787  0588  1683               	bsf	3,5	;RP0=1, select bank1
  3788  0589  1303               	bcf	3,6	;RP1=0, select bank1
  3789  058A  00A5               	movwf	??_sprintf^(0+128)
  3790  058B  0841               	movf	sprintf@sp^(0+128),w
  3791  058C  0084               	movwf	4
  3792  058D  0825               	movf	??_sprintf^(0+128),w
  3793  058E  1383               	bcf	3,7	;select IRP bank0
  3794  058F  0080               	movwf	0
  3795  0590                     l3493:
  3796  0590  3001               	movlw	1
  3797  0591  00A5               	movwf	??_sprintf^(0+128)
  3798  0592  0825               	movf	??_sprintf^(0+128),w
  3799  0593  07C1               	addwf	sprintf@sp^(0+128),f
  3800  0594                     l3495:
  3801                           
  3802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3803  0594  30FF               	movlw	255
  3804  0595  07BB               	addwf	sprintf@eexp^(0+128),f
  3805  0596  1803               	skipnc
  3806  0597  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3807  0598  30FF               	movlw	255
  3808  0599  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3809  059A                     l3497:
  3810                           
  3811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3812  059A  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3813  059B  3A80               	xorlw	128
  3814  059C  00FF               	movwf	btemp+1
  3815  059D  3080               	movlw	128
  3816  059E  027F               	subwf	btemp+1,w
  3817  059F  1D03               	skipz
  3818  05A0  2DA3               	goto	u5595
  3819  05A1  3001               	movlw	1
  3820  05A2  023B               	subwf	sprintf@eexp^(0+128),w
  3821  05A3                     u5595:
  3822  05A3  1803               	skipnc
  3823  05A4  2DA6               	goto	u5591
  3824  05A5  2DA7               	goto	u5590
  3825  05A6                     u5591:
  3826  05A6  2D87               	goto	l3491
  3827  05A7                     u5590:
  3828  05A7                     l3499:
  3829                           
  3830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3831  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  3832  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  3833  05A9  0843               	movf	(sprintf@prec+1)^(0+128),w
  3834  05AA  3A80               	xorlw	128
  3835  05AB  00FF               	movwf	btemp+1
  3836  05AC  3080               	movlw	128
  3837  05AD  027F               	subwf	btemp+1,w
  3838  05AE  1D03               	skipz
  3839  05AF  2DB2               	goto	u5605
  3840  05B0  3009               	movlw	9
  3841  05B1  0242               	subwf	sprintf@prec^(0+128),w
  3842  05B2                     u5605:
  3843  05B2  1C03               	skipc
  3844  05B3  2DB5               	goto	u5601
  3845  05B4  2DB6               	goto	u5600
  3846  05B5                     u5601:
  3847  05B5  2DBD               	goto	l3503
  3848  05B6                     u5600:
  3849  05B6                     l3501:
  3850                           
  3851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3852  05B6  3008               	movlw	8
  3853  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  3854  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  3855  05B9  00A5               	movwf	??_sprintf^(0+128)
  3856  05BA  0825               	movf	??_sprintf^(0+128),w
  3857  05BB  00C4               	movwf	sprintf@c^(0+128)
  3858  05BC  2DC3               	goto	l369
  3859  05BD                     l3503:
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3862  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  3863  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  3864  05BF  0842               	movf	sprintf@prec^(0+128),w
  3865  05C0  00A5               	movwf	??_sprintf^(0+128)
  3866  05C1  0825               	movf	??_sprintf^(0+128),w
  3867  05C2  00C4               	movwf	sprintf@c^(0+128)
  3868  05C3                     l369:
  3869                           
  3870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3871  05C3  0844               	movf	sprintf@c^(0+128),w
  3872  05C4  00A5               	movwf	??_sprintf^(0+128)
  3873  05C5  01A6               	clrf	(??_sprintf^(0+128)+1)
  3874  05C6  0825               	movf	??_sprintf^(0+128),w
  3875  05C7  02C2               	subwf	sprintf@prec^(0+128),f
  3876  05C8  0826               	movf	(??_sprintf+1)^(0+128),w
  3877  05C9  1C03               	skipc
  3878  05CA  03C3               	decf	(sprintf@prec+1)^(0+128),f
  3879  05CB  02C3               	subwf	(sprintf@prec+1)^(0+128),f
  3880  05CC                     l3505:
  3881                           
  3882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3883  05CC  0844               	movf	sprintf@c^(0+128),w
  3884  05CD  1903               	btfsc	3,2
  3885  05CE  2DD0               	goto	u5611
  3886  05CF  2DD1               	goto	u5610
  3887  05D0                     u5611:
  3888  05D0  2DDC               	goto	l3511
  3889  05D1                     u5610:
  3890  05D1                     l3507:
  3891                           
  3892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3893  05D1  302E               	movlw	46
  3894  05D2  00A5               	movwf	??_sprintf^(0+128)
  3895  05D3  0841               	movf	sprintf@sp^(0+128),w
  3896  05D4  0084               	movwf	4
  3897  05D5  0825               	movf	??_sprintf^(0+128),w
  3898  05D6  1383               	bcf	3,7	;select IRP bank0
  3899  05D7  0080               	movwf	0
  3900  05D8                     l3509:
  3901  05D8  3001               	movlw	1
  3902  05D9  00A5               	movwf	??_sprintf^(0+128)
  3903  05DA  0825               	movf	??_sprintf^(0+128),w
  3904  05DB  07C1               	addwf	sprintf@sp^(0+128),f
  3905  05DC                     l3511:
  3906                           
  3907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3908  05DC  0844               	movf	sprintf@c^(0+128),w
  3909  05DD  120A  158A  2140  120A  118A  	fcall	_scale
  3910  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3911  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  3912  05E4  0841               	movf	?_scale+3,w
  3913  05E5  1683               	bsf	3,5	;RP0=1, select bank1
  3914  05E6  1303               	bcf	3,6	;RP1=0, select bank1
  3915  05E7  00AD               	movwf	(_sprintf$1003+3)^(0+128)
  3916  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  3917  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  3918  05EA  0840               	movf	?_scale+2,w
  3919  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  3920  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  3921  05ED  00AC               	movwf	(_sprintf$1003+2)^(0+128)
  3922  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  3923  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  3924  05F0  083F               	movf	?_scale+1,w
  3925  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  3926  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  3927  05F3  00AB               	movwf	(_sprintf$1003+1)^(0+128)
  3928  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  3929  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  3930  05F6  083E               	movf	?_scale,w
  3931  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  3932  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  3933  05F9  00AA               	movwf	_sprintf$1003^(0+128)
  3934  05FA                     l3513:
  3935                           
  3936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3937  05FA  082D               	movf	(_sprintf$1003+3)^(0+128),w
  3938  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  3939  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  3940  05FD  00AB               	movwf	___flmul@a+3
  3941  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  3942  05FF  1303               	bcf	3,6	;RP1=0, select bank1
  3943  0600  082C               	movf	(_sprintf$1003+2)^(0+128),w
  3944  0601  1283               	bcf	3,5	;RP0=0, select bank0
  3945  0602  1303               	bcf	3,6	;RP1=0, select bank0
  3946  0603  00AA               	movwf	___flmul@a+2
  3947  0604  1683               	bsf	3,5	;RP0=1, select bank1
  3948  0605  1303               	bcf	3,6	;RP1=0, select bank1
  3949  0606  082B               	movf	(_sprintf$1003+1)^(0+128),w
  3950  0607  1283               	bcf	3,5	;RP0=0, select bank0
  3951  0608  1303               	bcf	3,6	;RP1=0, select bank0
  3952  0609  00A9               	movwf	___flmul@a+1
  3953  060A  1683               	bsf	3,5	;RP0=1, select bank1
  3954  060B  1303               	bcf	3,6	;RP1=0, select bank1
  3955  060C  082A               	movf	_sprintf$1003^(0+128),w
  3956  060D  1283               	bcf	3,5	;RP0=0, select bank0
  3957  060E  1303               	bcf	3,6	;RP1=0, select bank0
  3958  060F  00A8               	movwf	___flmul@a
  3959  0610  1683               	bsf	3,5	;RP0=1, select bank1
  3960  0611  1303               	bcf	3,6	;RP1=0, select bank1
  3961  0612  0840               	movf	(sprintf@fval+3)^(0+128),w
  3962  0613  1283               	bcf	3,5	;RP0=0, select bank0
  3963  0614  1303               	bcf	3,6	;RP1=0, select bank0
  3964  0615  00A7               	movwf	___flmul@b+3
  3965  0616  1683               	bsf	3,5	;RP0=1, select bank1
  3966  0617  1303               	bcf	3,6	;RP1=0, select bank1
  3967  0618  083F               	movf	(sprintf@fval+2)^(0+128),w
  3968  0619  1283               	bcf	3,5	;RP0=0, select bank0
  3969  061A  1303               	bcf	3,6	;RP1=0, select bank0
  3970  061B  00A6               	movwf	___flmul@b+2
  3971  061C  1683               	bsf	3,5	;RP0=1, select bank1
  3972  061D  1303               	bcf	3,6	;RP1=0, select bank1
  3973  061E  083E               	movf	(sprintf@fval+1)^(0+128),w
  3974  061F  1283               	bcf	3,5	;RP0=0, select bank0
  3975  0620  1303               	bcf	3,6	;RP1=0, select bank0
  3976  0621  00A5               	movwf	___flmul@b+1
  3977  0622  1683               	bsf	3,5	;RP0=1, select bank1
  3978  0623  1303               	bcf	3,6	;RP1=0, select bank1
  3979  0624  083D               	movf	sprintf@fval^(0+128),w
  3980  0625  1283               	bcf	3,5	;RP0=0, select bank0
  3981  0626  1303               	bcf	3,6	;RP1=0, select bank0
  3982  0627  00A4               	movwf	___flmul@b
  3983  0628  120A  158A  249F  120A  118A  	fcall	___flmul
  3984  062D  1283               	bcf	3,5	;RP0=0, select bank0
  3985  062E  1303               	bcf	3,6	;RP1=0, select bank0
  3986  062F  0827               	movf	?___flmul+3,w
  3987  0630  00D4               	movwf	___fltol@f1+3
  3988  0631  0826               	movf	?___flmul+2,w
  3989  0632  00D3               	movwf	___fltol@f1+2
  3990  0633  0825               	movf	?___flmul+1,w
  3991  0634  00D2               	movwf	___fltol@f1+1
  3992  0635  0824               	movf	?___flmul,w
  3993  0636  00D1               	movwf	___fltol@f1
  3994  0637  120A  158A  2006  120A  118A  	fcall	___fltol
  3995  063C  1283               	bcf	3,5	;RP0=0, select bank0
  3996  063D  1303               	bcf	3,6	;RP1=0, select bank0
  3997  063E  0854               	movf	?___fltol+3,w
  3998  063F  1683               	bsf	3,5	;RP0=1, select bank1
  3999  0640  1303               	bcf	3,6	;RP1=0, select bank1
  4000  0641  00B2               	movwf	(sprintf@val+3)^(0+128)
  4001  0642  1283               	bcf	3,5	;RP0=0, select bank0
  4002  0643  1303               	bcf	3,6	;RP1=0, select bank0
  4003  0644  0853               	movf	?___fltol+2,w
  4004  0645  1683               	bsf	3,5	;RP0=1, select bank1
  4005  0646  1303               	bcf	3,6	;RP1=0, select bank1
  4006  0647  00B1               	movwf	(sprintf@val+2)^(0+128)
  4007  0648  1283               	bcf	3,5	;RP0=0, select bank0
  4008  0649  1303               	bcf	3,6	;RP1=0, select bank0
  4009  064A  0852               	movf	?___fltol+1,w
  4010  064B  1683               	bsf	3,5	;RP0=1, select bank1
  4011  064C  1303               	bcf	3,6	;RP1=0, select bank1
  4012  064D  00B0               	movwf	(sprintf@val+1)^(0+128)
  4013  064E  1283               	bcf	3,5	;RP0=0, select bank0
  4014  064F  1303               	bcf	3,6	;RP1=0, select bank0
  4015  0650  0851               	movf	?___fltol,w
  4016  0651  1683               	bsf	3,5	;RP0=1, select bank1
  4017  0652  1303               	bcf	3,6	;RP1=0, select bank1
  4018  0653  00AF               	movwf	sprintf@val^(0+128)
  4019                           
  4020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4021  0654  2EF6               	goto	l3523
  4022  0655                     l3515:
  4023                           
  4024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  4025  0655  0844               	movf	sprintf@c^(0+128),w
  4026  0656  00A5               	movwf	??_sprintf^(0+128)
  4027  0657  3001               	movlw	1
  4028  0658                     u5625:
  4029  0658  1003               	clrc
  4030  0659  0DA5               	rlf	??_sprintf^(0+128),f
  4031  065A  3EFF               	addlw	-1
  4032  065B  1D03               	skipz
  4033  065C  2E58               	goto	u5625
  4034  065D  1003               	clrc
  4035  065E  0D25               	rlf	??_sprintf^(0+128),w
  4036  065F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4037  0660  0084               	movwf	4
  4038  0661  160A  158A  2000  120A  118A  	fcall	stringdir
  4039  0666  00F0               	movwf	___lldiv@divisor
  4040  0667  160A  158A  2000  120A  118A  	fcall	stringdir
  4041  066C  00F1               	movwf	___lldiv@divisor+1
  4042  066D  160A  158A  2000  120A  118A  	fcall	stringdir
  4043  0672  00F2               	movwf	___lldiv@divisor+2
  4044  0673  160A  158A  2000  120A  118A  	fcall	stringdir
  4045  0678  00F3               	movwf	___lldiv@divisor+3
  4046  0679  0832               	movf	(sprintf@val+3)^(0+128),w
  4047  067A  00F7               	movwf	___lldiv@dividend+3
  4048  067B  0831               	movf	(sprintf@val+2)^(0+128),w
  4049  067C  00F6               	movwf	___lldiv@dividend+2
  4050  067D  0830               	movf	(sprintf@val+1)^(0+128),w
  4051  067E  00F5               	movwf	___lldiv@dividend+1
  4052  067F  082F               	movf	sprintf@val^(0+128),w
  4053  0680  00F4               	movwf	___lldiv@dividend
  4054  0681  160A  158A  2558  120A  118A  	fcall	___lldiv
  4055  0686  0873               	movf	?___lldiv+3,w
  4056  0687  1683               	bsf	3,5	;RP0=1, select bank1
  4057  0688  1303               	bcf	3,6	;RP1=0, select bank1
  4058  0689  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4059  068A  0872               	movf	?___lldiv+2,w
  4060  068B  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4061  068C  0871               	movf	?___lldiv+1,w
  4062  068D  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4063  068E  0870               	movf	?___lldiv,w
  4064  068F  00B7               	movwf	sprintf@tmpval^(0+128)
  4065  0690                     l3517:
  4066                           
  4067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  4068  0690  3000               	movlw	0
  4069  0691  00F3               	movwf	___llmod@divisor+3
  4070  0692  3000               	movlw	0
  4071  0693  00F2               	movwf	___llmod@divisor+2
  4072  0694  3000               	movlw	0
  4073  0695  00F1               	movwf	___llmod@divisor+1
  4074  0696  300A               	movlw	10
  4075  0697  00F0               	movwf	___llmod@divisor
  4076  0698  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  4077  0699  00F7               	movwf	___llmod@dividend+3
  4078  069A  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  4079  069B  00F6               	movwf	___llmod@dividend+2
  4080  069C  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  4081  069D  00F5               	movwf	___llmod@dividend+1
  4082  069E  0837               	movf	sprintf@tmpval^(0+128),w
  4083  069F  00F4               	movwf	___llmod@dividend
  4084  06A0  160A  158A  244F  120A  118A  	fcall	___llmod
  4085  06A5  0873               	movf	?___llmod+3,w
  4086  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  4087  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  4088  06A8  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4089  06A9  0872               	movf	?___llmod+2,w
  4090  06AA  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4091  06AB  0871               	movf	?___llmod+1,w
  4092  06AC  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4093  06AD  0870               	movf	?___llmod,w
  4094  06AE  00B7               	movwf	sprintf@tmpval^(0+128)
  4095  06AF                     l3519:
  4096                           
  4097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  4098  06AF  0837               	movf	sprintf@tmpval^(0+128),w
  4099  06B0  3E30               	addlw	48
  4100  06B1  00A5               	movwf	??_sprintf^(0+128)
  4101  06B2  0841               	movf	sprintf@sp^(0+128),w
  4102  06B3  0084               	movwf	4
  4103  06B4  0825               	movf	??_sprintf^(0+128),w
  4104  06B5  1383               	bcf	3,7	;select IRP bank0
  4105  06B6  0080               	movwf	0
  4106  06B7  3001               	movlw	1
  4107  06B8  00A5               	movwf	??_sprintf^(0+128)
  4108  06B9  0825               	movf	??_sprintf^(0+128),w
  4109  06BA  07C1               	addwf	sprintf@sp^(0+128),f
  4110  06BB                     l3521:
  4111                           
  4112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  4113  06BB  0844               	movf	sprintf@c^(0+128),w
  4114  06BC  00A5               	movwf	??_sprintf^(0+128)
  4115  06BD  3001               	movlw	1
  4116  06BE                     u5635:
  4117  06BE  1003               	clrc
  4118  06BF  0DA5               	rlf	??_sprintf^(0+128),f
  4119  06C0  3EFF               	addlw	-1
  4120  06C1  1D03               	skipz
  4121  06C2  2EBE               	goto	u5635
  4122  06C3  1003               	clrc
  4123  06C4  0D25               	rlf	??_sprintf^(0+128),w
  4124  06C5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4125  06C6  0084               	movwf	4
  4126  06C7  160A  158A  2000  120A  118A  	fcall	stringdir
  4127  06CC  00F0               	movwf	___llmod@divisor
  4128  06CD  160A  158A  2000  120A  118A  	fcall	stringdir
  4129  06D2  00F1               	movwf	___llmod@divisor+1
  4130  06D3  160A  158A  2000  120A  118A  	fcall	stringdir
  4131  06D8  00F2               	movwf	___llmod@divisor+2
  4132  06D9  160A  158A  2000  120A  118A  	fcall	stringdir
  4133  06DE  00F3               	movwf	___llmod@divisor+3
  4134  06DF  0832               	movf	(sprintf@val+3)^(0+128),w
  4135  06E0  00F7               	movwf	___llmod@dividend+3
  4136  06E1  0831               	movf	(sprintf@val+2)^(0+128),w
  4137  06E2  00F6               	movwf	___llmod@dividend+2
  4138  06E3  0830               	movf	(sprintf@val+1)^(0+128),w
  4139  06E4  00F5               	movwf	___llmod@dividend+1
  4140  06E5  082F               	movf	sprintf@val^(0+128),w
  4141  06E6  00F4               	movwf	___llmod@dividend
  4142  06E7  160A  158A  244F  120A  118A  	fcall	___llmod
  4143  06EC  0873               	movf	?___llmod+3,w
  4144  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  4145  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  4146  06EF  00B2               	movwf	(sprintf@val+3)^(0+128)
  4147  06F0  0872               	movf	?___llmod+2,w
  4148  06F1  00B1               	movwf	(sprintf@val+2)^(0+128)
  4149  06F2  0871               	movf	?___llmod+1,w
  4150  06F3  00B0               	movwf	(sprintf@val+1)^(0+128)
  4151  06F4  0870               	movf	?___llmod,w
  4152  06F5  00AF               	movwf	sprintf@val^(0+128)
  4153  06F6                     l3523:
  4154                           
  4155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4156  06F6  3001               	movlw	1
  4157  06F7  02C4               	subwf	sprintf@c^(0+128),f
  4158  06F8  0A44               	incf	sprintf@c^(0+128),w
  4159  06F9  1D03               	btfss	3,2
  4160  06FA  2EFC               	goto	u5641
  4161  06FB  2EFD               	goto	u5640
  4162  06FC                     u5641:
  4163  06FC  2E55               	goto	l3515
  4164  06FD                     u5640:
  4165  06FD  2F0F               	goto	l3531
  4166  06FE                     l3525:
  4167                           
  4168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  4169  06FE  3030               	movlw	48
  4170  06FF  00A5               	movwf	??_sprintf^(0+128)
  4171  0700  0841               	movf	sprintf@sp^(0+128),w
  4172  0701  0084               	movwf	4
  4173  0702  0825               	movf	??_sprintf^(0+128),w
  4174  0703  1383               	bcf	3,7	;select IRP bank0
  4175  0704  0080               	movwf	0
  4176  0705                     l3527:
  4177  0705  3001               	movlw	1
  4178  0706  00A5               	movwf	??_sprintf^(0+128)
  4179  0707  0825               	movf	??_sprintf^(0+128),w
  4180  0708  07C1               	addwf	sprintf@sp^(0+128),f
  4181  0709                     l3529:
  4182                           
  4183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  4184  0709  30FF               	movlw	255
  4185  070A  07C2               	addwf	sprintf@prec^(0+128),f
  4186  070B  1803               	skipnc
  4187  070C  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  4188  070D  30FF               	movlw	255
  4189  070E  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  4190  070F                     l3531:
  4191                           
  4192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  4193  070F  0842               	movf	sprintf@prec^(0+128),w
  4194  0710  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  4195  0711  1D03               	btfss	3,2
  4196  0712  2F14               	goto	u5651
  4197  0713  2F15               	goto	u5650
  4198  0714                     u5651:
  4199  0714  2EFE               	goto	l3525
  4200  0715                     u5650:
  4201  0715  2FD9               	goto	l3579
  4202  0716                     l3533:
  4203                           
  4204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  4205  0716  0842               	movf	sprintf@prec^(0+128),w
  4206  0717  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  4207  0718  1D03               	btfss	3,2
  4208  0719  2F1B               	goto	u5661
  4209  071A  2F1C               	goto	u5660
  4210  071B                     u5661:
  4211  071B  2F2A               	goto	l377
  4212  071C                     u5660:
  4213  071C                     l3535:
  4214  071C  0832               	movf	(sprintf@val+3)^(0+128),w
  4215  071D  0431               	iorwf	(sprintf@val+2)^(0+128),w
  4216  071E  0430               	iorwf	(sprintf@val+1)^(0+128),w
  4217  071F  042F               	iorwf	sprintf@val^(0+128),w
  4218  0720  1D03               	skipz
  4219  0721  2F23               	goto	u5671
  4220  0722  2F24               	goto	u5670
  4221  0723                     u5671:
  4222  0723  2F2A               	goto	l377
  4223  0724                     u5670:
  4224  0724                     l3537:
  4225                           
  4226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4227  0724  3001               	movlw	1
  4228  0725  07C2               	addwf	sprintf@prec^(0+128),f
  4229  0726  1803               	skipnc
  4230  0727  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  4231  0728  3000               	movlw	0
  4232  0729  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  4233  072A                     l377:
  4234                           
  4235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4236  072A  0843               	movf	(sprintf@prec+1)^(0+128),w
  4237  072B  3A80               	xorlw	128
  4238  072C  3C80               	sublw	128
  4239  072D  1D03               	skipz
  4240  072E  2F31               	goto	u5685
  4241  072F  0842               	movf	sprintf@prec^(0+128),w
  4242  0730  0244               	subwf	sprintf@c^(0+128),w
  4243  0731                     u5685:
  4244  0731  1803               	skipnc
  4245  0732  2F34               	goto	u5681
  4246  0733  2F35               	goto	u5680
  4247  0734                     u5681:
  4248  0734  2F3C               	goto	l3541
  4249  0735                     u5680:
  4250  0735                     l3539:
  4251                           
  4252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  4253  0735  1683               	bsf	3,5	;RP0=1, select bank1
  4254  0736  1303               	bcf	3,6	;RP1=0, select bank1
  4255  0737  0842               	movf	sprintf@prec^(0+128),w
  4256  0738  00A5               	movwf	??_sprintf^(0+128)
  4257  0739  0825               	movf	??_sprintf^(0+128),w
  4258  073A  00C4               	movwf	sprintf@c^(0+128)
  4259  073B  2F54               	goto	l3545
  4260  073C                     l3541:
  4261  073C  1683               	bsf	3,5	;RP0=1, select bank1
  4262  073D  1303               	bcf	3,6	;RP1=0, select bank1
  4263  073E  0843               	movf	(sprintf@prec+1)^(0+128),w
  4264  073F  3A80               	xorlw	128
  4265  0740  00A5               	movwf	??_sprintf^(0+128)
  4266  0741  3080               	movlw	128
  4267  0742  0225               	subwf	??_sprintf^(0+128),w
  4268  0743  1D03               	skipz
  4269  0744  2F47               	goto	u5695
  4270  0745  0844               	movf	sprintf@c^(0+128),w
  4271  0746  0242               	subwf	sprintf@prec^(0+128),w
  4272  0747                     u5695:
  4273  0747  1803               	skipnc
  4274  0748  2F4A               	goto	u5691
  4275  0749  2F4B               	goto	u5690
  4276  074A                     u5691:
  4277  074A  2F54               	goto	l3545
  4278  074B                     u5690:
  4279  074B                     l3543:
  4280                           
  4281                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  4282  074B  1683               	bsf	3,5	;RP0=1, select bank1
  4283  074C  1303               	bcf	3,6	;RP1=0, select bank1
  4284  074D  0844               	movf	sprintf@c^(0+128),w
  4285  074E  00A5               	movwf	??_sprintf^(0+128)
  4286  074F  01A6               	clrf	(??_sprintf^(0+128)+1)
  4287  0750  0825               	movf	??_sprintf^(0+128),w
  4288  0751  00C2               	movwf	sprintf@prec^(0+128)
  4289  0752  0826               	movf	(??_sprintf+1)^(0+128),w
  4290  0753  00C3               	movwf	(sprintf@prec+1)^(0+128)
  4291  0754                     l3545:
  4292                           
  4293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  4294  0754  1683               	bsf	3,5	;RP0=1, select bank1
  4295  0755  1303               	bcf	3,6	;RP1=0, select bank1
  4296  0756  0835               	movf	sprintf@width^(0+128),w
  4297  0757  0436               	iorwf	(sprintf@width+1)^(0+128),w
  4298  0758  1903               	btfsc	3,2
  4299  0759  2F5B               	goto	u5701
  4300  075A  2F5C               	goto	u5700
  4301  075B                     u5701:
  4302  075B  2F6E               	goto	l3551
  4303  075C                     u5700:
  4304  075C                     l3547:
  4305  075C  3003               	movlw	3
  4306  075D  0533               	andwf	sprintf@flag^(0+128),w
  4307  075E  00A5               	movwf	??_sprintf^(0+128)
  4308  075F  3000               	movlw	0
  4309  0760  0534               	andwf	(sprintf@flag+1)^(0+128),w
  4310  0761  00A6               	movwf	(??_sprintf+1)^(0+128)
  4311  0762  0825               	movf	??_sprintf^(0+128),w
  4312  0763  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4313  0764  1903               	btfsc	3,2
  4314  0765  2F67               	goto	u5711
  4315  0766  2F68               	goto	u5710
  4316  0767                     u5711:
  4317  0767  2F6E               	goto	l3551
  4318  0768                     u5710:
  4319  0768                     l3549:
  4320                           
  4321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  4322  0768  30FF               	movlw	255
  4323  0769  07B5               	addwf	sprintf@width^(0+128),f
  4324  076A  1803               	skipnc
  4325  076B  0AB6               	incf	(sprintf@width+1)^(0+128),f
  4326  076C  30FF               	movlw	255
  4327  076D  07B6               	addwf	(sprintf@width+1)^(0+128),f
  4328  076E                     l3551:
  4329                           
  4330                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  4331  076E  1F34               	btfss	(sprintf@flag+1)^(0+128),6
  4332  076F  2F71               	goto	u5721
  4333  0770  2F72               	goto	u5720
  4334  0771                     u5721:
  4335  0771  2F8D               	goto	l3559
  4336  0772                     u5720:
  4337  0772                     l3553:
  4338                           
  4339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  4340  0772  0843               	movf	(sprintf@prec+1)^(0+128),w
  4341  0773  3A80               	xorlw	128
  4342  0774  00A5               	movwf	??_sprintf^(0+128)
  4343  0775  0836               	movf	(sprintf@width+1)^(0+128),w
  4344  0776  3A80               	xorlw	128
  4345  0777  0225               	subwf	??_sprintf^(0+128),w
  4346  0778  1D03               	skipz
  4347  0779  2F7C               	goto	u5735
  4348  077A  0835               	movf	sprintf@width^(0+128),w
  4349  077B  0242               	subwf	sprintf@prec^(0+128),w
  4350  077C                     u5735:
  4351  077C  1803               	skipnc
  4352  077D  2F7F               	goto	u5731
  4353  077E  2F80               	goto	u5730
  4354  077F                     u5731:
  4355  077F  2F89               	goto	l3557
  4356  0780                     u5730:
  4357  0780                     l3555:
  4358                           
  4359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  4360  0780  1683               	bsf	3,5	;RP0=1, select bank1
  4361  0781  1303               	bcf	3,6	;RP1=0, select bank1
  4362  0782  0842               	movf	sprintf@prec^(0+128),w
  4363  0783  02B5               	subwf	sprintf@width^(0+128),f
  4364  0784  0843               	movf	(sprintf@prec+1)^(0+128),w
  4365  0785  1C03               	skipc
  4366  0786  03B6               	decf	(sprintf@width+1)^(0+128),f
  4367  0787  02B6               	subwf	(sprintf@width+1)^(0+128),f
  4368  0788  2F8D               	goto	l3559
  4369  0789                     l3557:
  4370                           
  4371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  4372  0789  1683               	bsf	3,5	;RP0=1, select bank1
  4373  078A  1303               	bcf	3,6	;RP1=0, select bank1
  4374  078B  01B5               	clrf	sprintf@width^(0+128)
  4375  078C  01B6               	clrf	(sprintf@width+1)^(0+128)
  4376  078D                     l3559:
  4377                           
  4378                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  4379  078D  0836               	movf	(sprintf@width+1)^(0+128),w
  4380  078E  3A80               	xorlw	128
  4381  078F  3C80               	sublw	128
  4382  0790  1D03               	skipz
  4383  0791  2F94               	goto	u5745
  4384  0792  0835               	movf	sprintf@width^(0+128),w
  4385  0793  0244               	subwf	sprintf@c^(0+128),w
  4386  0794                     u5745:
  4387  0794  1803               	skipnc
  4388  0795  2F97               	goto	u5741
  4389  0796  2F98               	goto	u5740
  4390  0797                     u5741:
  4391  0797  2FA4               	goto	l3563
  4392  0798                     u5740:
  4393  0798                     l3561:
  4394                           
  4395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  4396  0798  1683               	bsf	3,5	;RP0=1, select bank1
  4397  0799  1303               	bcf	3,6	;RP1=0, select bank1
  4398  079A  0844               	movf	sprintf@c^(0+128),w
  4399  079B  00A5               	movwf	??_sprintf^(0+128)
  4400  079C  01A6               	clrf	(??_sprintf^(0+128)+1)
  4401  079D  0825               	movf	??_sprintf^(0+128),w
  4402  079E  02B5               	subwf	sprintf@width^(0+128),f
  4403  079F  0826               	movf	(??_sprintf+1)^(0+128),w
  4404  07A0  1C03               	skipc
  4405  07A1  03B6               	decf	(sprintf@width+1)^(0+128),f
  4406  07A2  02B6               	subwf	(sprintf@width+1)^(0+128),f
  4407  07A3  2FA8               	goto	l3565
  4408  07A4                     l3563:
  4409                           
  4410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  4411  07A4  1683               	bsf	3,5	;RP0=1, select bank1
  4412  07A5  1303               	bcf	3,6	;RP1=0, select bank1
  4413  07A6  01B5               	clrf	sprintf@width^(0+128)
  4414  07A7  01B6               	clrf	(sprintf@width+1)^(0+128)
  4415  07A8                     l3565:
  4416                           
  4417                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  4418  07A8  0835               	movf	sprintf@width^(0+128),w
  4419  07A9  0436               	iorwf	(sprintf@width+1)^(0+128),w
  4420  07AA  1903               	btfsc	3,2
  4421  07AB  2FAD               	goto	u5751
  4422  07AC  2FAE               	goto	u5750
  4423  07AD                     u5751:
  4424  07AD  2FC5               	goto	l3573
  4425  07AE                     u5750:
  4426  07AE                     l3567:
  4427                           
  4428                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  4429  07AE  3020               	movlw	32
  4430  07AF  00A5               	movwf	??_sprintf^(0+128)
  4431  07B0  0841               	movf	sprintf@sp^(0+128),w
  4432  07B1  0084               	movwf	4
  4433  07B2  0825               	movf	??_sprintf^(0+128),w
  4434  07B3  1383               	bcf	3,7	;select IRP bank0
  4435  07B4  0080               	movwf	0
  4436  07B5                     l3569:
  4437  07B5  3001               	movlw	1
  4438  07B6  00A5               	movwf	??_sprintf^(0+128)
  4439  07B7  0825               	movf	??_sprintf^(0+128),w
  4440  07B8  07C1               	addwf	sprintf@sp^(0+128),f
  4441  07B9                     l3571:
  4442  07B9  30FF               	movlw	255
  4443  07BA  07B5               	addwf	sprintf@width^(0+128),f
  4444  07BB  1803               	skipnc
  4445  07BC  0AB6               	incf	(sprintf@width+1)^(0+128),f
  4446  07BD  30FF               	movlw	255
  4447  07BE  07B6               	addwf	(sprintf@width+1)^(0+128),f
  4448  07BF  0835               	movf	sprintf@width^(0+128),w
  4449  07C0  0436               	iorwf	(sprintf@width+1)^(0+128),w
  4450  07C1  1D03               	btfss	3,2
  4451  07C2  2FC4               	goto	u5761
  4452  07C3  2FC5               	goto	u5760
  4453  07C4                     u5761:
  4454  07C4  2FAE               	goto	l3567
  4455  07C5                     u5760:
  4456  07C5                     l3573:
  4457                           
  4458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  4459  07C5  3003               	movlw	3
  4460  07C6  0533               	andwf	sprintf@flag^(0+128),w
  4461  07C7  00A5               	movwf	??_sprintf^(0+128)
  4462  07C8  3000               	movlw	0
  4463  07C9  0534               	andwf	(sprintf@flag+1)^(0+128),w
  4464  07CA  00A6               	movwf	(??_sprintf+1)^(0+128)
  4465  07CB  0825               	movf	??_sprintf^(0+128),w
  4466  07CC  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4467  07CD  1903               	btfsc	3,2
  4468  07CE  2FD0               	goto	u5771
  4469  07CF  2FD1               	goto	u5770
  4470  07D0                     u5771:
  4471  07D0  2FD9               	goto	l3579
  4472  07D1                     u5770:
  4473  07D1                     l3575:
  4474                           
  4475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4476  07D1  302D               	movlw	45
  4477  07D2  00A5               	movwf	??_sprintf^(0+128)
  4478  07D3  0841               	movf	sprintf@sp^(0+128),w
  4479  07D4  0084               	movwf	4
  4480  07D5  0825               	movf	??_sprintf^(0+128),w
  4481  07D6  1383               	bcf	3,7	;select IRP bank0
  4482  07D7  0080               	movwf	0
  4483  07D8  288A               	goto	l3335
  4484  07D9                     l3579:
  4485                           
  4486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4487  07D9  3001               	movlw	1
  4488  07DA  07A0               	addwf	sprintf@f^(0+128),f
  4489  07DB  30FF               	movlw	-1
  4490  07DC  0720               	addwf	sprintf@f^(0+128),w
  4491  07DD  0084               	movwf	4
  4492  07DE  160A  158A  2000  120A  118A  	fcall	stringdir
  4493  07E3  00A5               	movwf	??_sprintf^(0+128)
  4494  07E4  0825               	movf	??_sprintf^(0+128),w
  4495  07E5  00C4               	movwf	sprintf@c^(0+128)
  4496  07E6  0844               	movf	sprintf@c^(0+128),w
  4497  07E7  1D03               	btfss	3,2
  4498  07E8  2FEA               	goto	u5781
  4499  07E9  2FEB               	goto	u5780
  4500  07EA                     u5781:
  4501  07EA  287D               	goto	l3331
  4502  07EB                     u5780:
  4503  07EB                     l3581:
  4504                           
  4505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4506  07EB  0841               	movf	sprintf@sp^(0+128),w
  4507  07EC  0084               	movwf	4
  4508  07ED  1383               	bcf	3,7	;select IRP bank0
  4509  07EE  0180               	clrf	0
  4510  07EF                     l392:
  4511  07EF  0008               	return
  4512  07F0                     __end_of_sprintf:
  4513                           
  4514                           	psect	text9
  4515  0940                     __ptext9:	
  4516 ;; *************** function _scale *****************
  4517 ;; Defined at:
  4518 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;  scl             1    wreg     char 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  scl             1   48[BANK0 ] char 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  4   30[BANK0 ] char 
  4525 ;; Registers used:
  4526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4532 ;;      Params:         0       4       0       0       0
  4533 ;;      Locals:         0       5       0       0       0
  4534 ;;      Temps:          0      10       0       0       0
  4535 ;;      Totals:         0      19       0       0       0
  4536 ;;Total ram usage:       19 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:    2
  4539 ;; This function calls:
  4540 ;;		___awdiv
  4541 ;;		___awmod
  4542 ;;		___flmul
  4543 ;; This function is called by:
  4544 ;;		_sprintf
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           
  4549                           ;psect for function _scale
  4550  0940                     _scale:
  4551                           
  4552                           ;incstack = 0
  4553                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4554                           ;scale@scl stored from wreg
  4555  0940  1283               	bcf	3,5	;RP0=0, select bank0
  4556  0941  1303               	bcf	3,6	;RP1=0, select bank0
  4557  0942  00D0               	movwf	scale@scl
  4558  0943                     l2951:
  4559                           
  4560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4561  0943  1FD0               	btfss	scale@scl,7
  4562  0944  2946               	goto	u4321
  4563  0945  2947               	goto	u4320
  4564  0946                     u4321:
  4565  0946  2AF4               	goto	l2973
  4566  0947                     u4320:
  4567  0947                     l2953:
  4568                           
  4569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4570  0947  09D0               	comf	scale@scl,f
  4571  0948  0AD0               	incf	scale@scl,f
  4572  0949                     l2955:
  4573                           
  4574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4575  0949  0850               	movf	scale@scl,w
  4576  094A  3A80               	xorlw	128
  4577  094B  3E12               	addlw	-238
  4578  094C  1C03               	skipc
  4579  094D  294F               	goto	u4331
  4580  094E  2950               	goto	u4330
  4581  094F                     u4331:
  4582  094F  2A38               	goto	l2963
  4583  0950                     u4330:
  4584  0950                     l2957:
  4585                           
  4586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4587  0950  300A               	movlw	10
  4588  0951  00F7               	movwf	___awdiv@divisor
  4589  0952  3000               	movlw	0
  4590  0953  00F8               	movwf	___awdiv@divisor+1
  4591  0954  0850               	movf	scale@scl,w
  4592  0955  00F2               	movwf	___awmod@dividend
  4593  0956  01F3               	clrf	___awmod@dividend+1
  4594  0957  1BF2               	btfsc	___awmod@dividend,7
  4595  0958  03F3               	decf	___awmod@dividend+1,f
  4596  0959  3064               	movlw	100
  4597  095A  00F0               	movwf	___awmod@divisor
  4598  095B  3000               	movlw	0
  4599  095C  00F1               	movwf	___awmod@divisor+1
  4600  095D  160A  158A  24A3  120A  158A  	fcall	___awmod
  4601  0962  0871               	movf	?___awmod+1,w
  4602  0963  00FA               	movwf	___awdiv@dividend+1
  4603  0964  0870               	movf	?___awmod,w
  4604  0965  00F9               	movwf	___awdiv@dividend
  4605  0966  120A  118A  200C  120A  158A  	fcall	___awdiv
  4606  096B  0877               	movf	?___awdiv,w
  4607  096C  1283               	bcf	3,5	;RP0=0, select bank0
  4608  096D  1303               	bcf	3,6	;RP1=0, select bank0
  4609  096E  00C2               	movwf	??_scale
  4610  096F  3001               	movlw	1
  4611  0970                     u4345:
  4612  0970  1003               	clrc
  4613  0971  0DC2               	rlf	??_scale,f
  4614  0972  3EFF               	addlw	-1
  4615  0973  1D03               	skipz
  4616  0974  2970               	goto	u4345
  4617  0975  1003               	clrc
  4618  0976  0D42               	rlf	??_scale,w
  4619  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4620  0978  0084               	movwf	4
  4621  0979  160A  158A  2000  120A  158A  	fcall	stringdir
  4622  097E  00C3               	movwf	??_scale+1
  4623  097F  160A  158A  2000  120A  158A  	fcall	stringdir
  4624  0984  00C4               	movwf	??_scale+2
  4625  0985  160A  158A  2000  120A  158A  	fcall	stringdir
  4626  098A  00C5               	movwf	??_scale+3
  4627  098B  160A  158A  2000  120A  158A  	fcall	stringdir
  4628  0990  00C6               	movwf	??_scale+4
  4629  0991  0846               	movf	??_scale+4,w
  4630  0992  00A7               	movwf	___flmul@b+3
  4631  0993  0845               	movf	??_scale+3,w
  4632  0994  00A6               	movwf	___flmul@b+2
  4633  0995  0844               	movf	??_scale+2,w
  4634  0996  00A5               	movwf	___flmul@b+1
  4635  0997  0843               	movf	??_scale+1,w
  4636  0998  00A4               	movwf	___flmul@b
  4637  0999  3064               	movlw	100
  4638  099A  00F7               	movwf	___awdiv@divisor
  4639  099B  3000               	movlw	0
  4640  099C  00F8               	movwf	___awdiv@divisor+1
  4641  099D  0850               	movf	scale@scl,w
  4642  099E  00F9               	movwf	___awdiv@dividend
  4643  099F  01FA               	clrf	___awdiv@dividend+1
  4644  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4645  09A1  03FA               	decf	___awdiv@dividend+1,f
  4646  09A2  120A  118A  200C  120A  158A  	fcall	___awdiv
  4647  09A7  0877               	movf	?___awdiv,w
  4648  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4649  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4650  09AA  00C7               	movwf	??_scale+5
  4651  09AB  3001               	movlw	1
  4652  09AC                     u4355:
  4653  09AC  1003               	clrc
  4654  09AD  0DC7               	rlf	??_scale+5,f
  4655  09AE  3EFF               	addlw	-1
  4656  09AF  1D03               	skipz
  4657  09B0  29AC               	goto	u4355
  4658  09B1  1003               	clrc
  4659  09B2  0D47               	rlf	??_scale+5,w
  4660  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4661  09B4  0084               	movwf	4
  4662  09B5  160A  158A  2000  120A  158A  	fcall	stringdir
  4663  09BA  00C8               	movwf	??_scale+6
  4664  09BB  160A  158A  2000  120A  158A  	fcall	stringdir
  4665  09C0  00C9               	movwf	??_scale+7
  4666  09C1  160A  158A  2000  120A  158A  	fcall	stringdir
  4667  09C6  00CA               	movwf	??_scale+8
  4668  09C7  160A  158A  2000  120A  158A  	fcall	stringdir
  4669  09CC  00CB               	movwf	??_scale+9
  4670  09CD  084B               	movf	??_scale+9,w
  4671  09CE  00AB               	movwf	___flmul@a+3
  4672  09CF  084A               	movf	??_scale+8,w
  4673  09D0  00AA               	movwf	___flmul@a+2
  4674  09D1  0849               	movf	??_scale+7,w
  4675  09D2  00A9               	movwf	___flmul@a+1
  4676  09D3  0848               	movf	??_scale+6,w
  4677  09D4  00A8               	movwf	___flmul@a
  4678  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4679  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4680  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4681  09DC  0827               	movf	?___flmul+3,w
  4682  09DD  00CF               	movwf	_scale$1002+3
  4683  09DE  0826               	movf	?___flmul+2,w
  4684  09DF  00CE               	movwf	_scale$1002+2
  4685  09E0  0825               	movf	?___flmul+1,w
  4686  09E1  00CD               	movwf	_scale$1002+1
  4687  09E2  0824               	movf	?___flmul,w
  4688  09E3  00CC               	movwf	_scale$1002
  4689                           
  4690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4691  09E4  300A               	movlw	10
  4692  09E5  00F0               	movwf	___awmod@divisor
  4693  09E6  3000               	movlw	0
  4694  09E7  00F1               	movwf	___awmod@divisor+1
  4695  09E8  0850               	movf	scale@scl,w
  4696  09E9  00F2               	movwf	___awmod@dividend
  4697  09EA  01F3               	clrf	___awmod@dividend+1
  4698  09EB  1BF2               	btfsc	___awmod@dividend,7
  4699  09EC  03F3               	decf	___awmod@dividend+1,f
  4700  09ED  160A  158A  24A3  120A  158A  	fcall	___awmod
  4701  09F2  0870               	movf	?___awmod,w
  4702  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4703  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4704  09F5  00C2               	movwf	??_scale
  4705  09F6  3001               	movlw	1
  4706  09F7                     u4365:
  4707  09F7  1003               	clrc
  4708  09F8  0DC2               	rlf	??_scale,f
  4709  09F9  3EFF               	addlw	-1
  4710  09FA  1D03               	skipz
  4711  09FB  29F7               	goto	u4365
  4712  09FC  1003               	clrc
  4713  09FD  0D42               	rlf	??_scale,w
  4714  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4715  09FF  0084               	movwf	4
  4716  0A00  160A  158A  2000  120A  158A  	fcall	stringdir
  4717  0A05  00C3               	movwf	??_scale+1
  4718  0A06  160A  158A  2000  120A  158A  	fcall	stringdir
  4719  0A0B  00C4               	movwf	??_scale+2
  4720  0A0C  160A  158A  2000  120A  158A  	fcall	stringdir
  4721  0A11  00C5               	movwf	??_scale+3
  4722  0A12  160A  158A  2000  120A  158A  	fcall	stringdir
  4723  0A17  00C6               	movwf	??_scale+4
  4724  0A18  0846               	movf	??_scale+4,w
  4725  0A19  00A7               	movwf	___flmul@b+3
  4726  0A1A  0845               	movf	??_scale+3,w
  4727  0A1B  00A6               	movwf	___flmul@b+2
  4728  0A1C  0844               	movf	??_scale+2,w
  4729  0A1D  00A5               	movwf	___flmul@b+1
  4730  0A1E  0843               	movf	??_scale+1,w
  4731  0A1F  00A4               	movwf	___flmul@b
  4732  0A20  084F               	movf	_scale$1002+3,w
  4733  0A21  00AB               	movwf	___flmul@a+3
  4734  0A22  084E               	movf	_scale$1002+2,w
  4735  0A23  00AA               	movwf	___flmul@a+2
  4736  0A24  084D               	movf	_scale$1002+1,w
  4737  0A25  00A9               	movwf	___flmul@a+1
  4738  0A26  084C               	movf	_scale$1002,w
  4739  0A27  00A8               	movwf	___flmul@a
  4740  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4741  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4742  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4743  0A2F  0827               	movf	?___flmul+3,w
  4744  0A30  00C1               	movwf	?_scale+3
  4745  0A31  0826               	movf	?___flmul+2,w
  4746  0A32  00C0               	movwf	?_scale+2
  4747  0A33  0825               	movf	?___flmul+1,w
  4748  0A34  00BF               	movwf	?_scale+1
  4749  0A35  0824               	movf	?___flmul,w
  4750  0A36  00BE               	movwf	?_scale
  4751  0A37  2C9E               	goto	l309
  4752  0A38                     l2963:
  4753  0A38  0850               	movf	scale@scl,w
  4754  0A39  3A80               	xorlw	128
  4755  0A3A  3E75               	addlw	-139
  4756  0A3B  1C03               	skipc
  4757  0A3C  2A3E               	goto	u4371
  4758  0A3D  2A3F               	goto	u4370
  4759  0A3E                     u4371:
  4760  0A3E  2AC7               	goto	l2969
  4761  0A3F                     u4370:
  4762  0A3F                     l2965:
  4763                           
  4764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4765  0A3F  300A               	movlw	10
  4766  0A40  00F0               	movwf	___awmod@divisor
  4767  0A41  3000               	movlw	0
  4768  0A42  00F1               	movwf	___awmod@divisor+1
  4769  0A43  0850               	movf	scale@scl,w
  4770  0A44  00F2               	movwf	___awmod@dividend
  4771  0A45  01F3               	clrf	___awmod@dividend+1
  4772  0A46  1BF2               	btfsc	___awmod@dividend,7
  4773  0A47  03F3               	decf	___awmod@dividend+1,f
  4774  0A48  160A  158A  24A3  120A  158A  	fcall	___awmod
  4775  0A4D  0870               	movf	?___awmod,w
  4776  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4777  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4778  0A50  00C2               	movwf	??_scale
  4779  0A51  3001               	movlw	1
  4780  0A52                     u4385:
  4781  0A52  1003               	clrc
  4782  0A53  0DC2               	rlf	??_scale,f
  4783  0A54  3EFF               	addlw	-1
  4784  0A55  1D03               	skipz
  4785  0A56  2A52               	goto	u4385
  4786  0A57  1003               	clrc
  4787  0A58  0D42               	rlf	??_scale,w
  4788  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4789  0A5A  0084               	movwf	4
  4790  0A5B  160A  158A  2000  120A  158A  	fcall	stringdir
  4791  0A60  00C3               	movwf	??_scale+1
  4792  0A61  160A  158A  2000  120A  158A  	fcall	stringdir
  4793  0A66  00C4               	movwf	??_scale+2
  4794  0A67  160A  158A  2000  120A  158A  	fcall	stringdir
  4795  0A6C  00C5               	movwf	??_scale+3
  4796  0A6D  160A  158A  2000  120A  158A  	fcall	stringdir
  4797  0A72  00C6               	movwf	??_scale+4
  4798  0A73  0846               	movf	??_scale+4,w
  4799  0A74  00A7               	movwf	___flmul@b+3
  4800  0A75  0845               	movf	??_scale+3,w
  4801  0A76  00A6               	movwf	___flmul@b+2
  4802  0A77  0844               	movf	??_scale+2,w
  4803  0A78  00A5               	movwf	___flmul@b+1
  4804  0A79  0843               	movf	??_scale+1,w
  4805  0A7A  00A4               	movwf	___flmul@b
  4806  0A7B  300A               	movlw	10
  4807  0A7C  00F7               	movwf	___awdiv@divisor
  4808  0A7D  3000               	movlw	0
  4809  0A7E  00F8               	movwf	___awdiv@divisor+1
  4810  0A7F  0850               	movf	scale@scl,w
  4811  0A80  00F9               	movwf	___awdiv@dividend
  4812  0A81  01FA               	clrf	___awdiv@dividend+1
  4813  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4814  0A83  03FA               	decf	___awdiv@dividend+1,f
  4815  0A84  120A  118A  200C  120A  158A  	fcall	___awdiv
  4816  0A89  0877               	movf	?___awdiv,w
  4817  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4818  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4819  0A8C  00C7               	movwf	??_scale+5
  4820  0A8D  3001               	movlw	1
  4821  0A8E                     u4395:
  4822  0A8E  1003               	clrc
  4823  0A8F  0DC7               	rlf	??_scale+5,f
  4824  0A90  3EFF               	addlw	-1
  4825  0A91  1D03               	skipz
  4826  0A92  2A8E               	goto	u4395
  4827  0A93  1003               	clrc
  4828  0A94  0D47               	rlf	??_scale+5,w
  4829  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4830  0A96  0084               	movwf	4
  4831  0A97  160A  158A  2000  120A  158A  	fcall	stringdir
  4832  0A9C  00C8               	movwf	??_scale+6
  4833  0A9D  160A  158A  2000  120A  158A  	fcall	stringdir
  4834  0AA2  00C9               	movwf	??_scale+7
  4835  0AA3  160A  158A  2000  120A  158A  	fcall	stringdir
  4836  0AA8  00CA               	movwf	??_scale+8
  4837  0AA9  160A  158A  2000  120A  158A  	fcall	stringdir
  4838  0AAE  00CB               	movwf	??_scale+9
  4839  0AAF  084B               	movf	??_scale+9,w
  4840  0AB0  00AB               	movwf	___flmul@a+3
  4841  0AB1  084A               	movf	??_scale+8,w
  4842  0AB2  00AA               	movwf	___flmul@a+2
  4843  0AB3  0849               	movf	??_scale+7,w
  4844  0AB4  00A9               	movwf	___flmul@a+1
  4845  0AB5  0848               	movf	??_scale+6,w
  4846  0AB6  00A8               	movwf	___flmul@a
  4847  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4848  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4849  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4850  0ABE  0827               	movf	?___flmul+3,w
  4851  0ABF  00C1               	movwf	?_scale+3
  4852  0AC0  0826               	movf	?___flmul+2,w
  4853  0AC1  00C0               	movwf	?_scale+2
  4854  0AC2  0825               	movf	?___flmul+1,w
  4855  0AC3  00BF               	movwf	?_scale+1
  4856  0AC4  0824               	movf	?___flmul,w
  4857  0AC5  00BE               	movwf	?_scale
  4858  0AC6  2C9E               	goto	l309
  4859  0AC7                     l2969:
  4860                           
  4861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4862  0AC7  0850               	movf	scale@scl,w
  4863  0AC8  00C2               	movwf	??_scale
  4864  0AC9  3001               	movlw	1
  4865  0ACA                     u4405:
  4866  0ACA  1003               	clrc
  4867  0ACB  0DC2               	rlf	??_scale,f
  4868  0ACC  3EFF               	addlw	-1
  4869  0ACD  1D03               	skipz
  4870  0ACE  2ACA               	goto	u4405
  4871  0ACF  1003               	clrc
  4872  0AD0  0D42               	rlf	??_scale,w
  4873  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4874  0AD2  0084               	movwf	4
  4875  0AD3  160A  158A  2000  120A  158A  	fcall	stringdir
  4876  0AD8  00C3               	movwf	??_scale+1
  4877  0AD9  160A  158A  2000  120A  158A  	fcall	stringdir
  4878  0ADE  00C4               	movwf	??_scale+2
  4879  0ADF  160A  158A  2000  120A  158A  	fcall	stringdir
  4880  0AE4  00C5               	movwf	??_scale+3
  4881  0AE5  160A  158A  2000  120A  158A  	fcall	stringdir
  4882  0AEA  00C6               	movwf	??_scale+4
  4883  0AEB  0846               	movf	??_scale+4,w
  4884  0AEC  00C1               	movwf	?_scale+3
  4885  0AED  0845               	movf	??_scale+3,w
  4886  0AEE  00C0               	movwf	?_scale+2
  4887  0AEF  0844               	movf	??_scale+2,w
  4888  0AF0  00BF               	movwf	?_scale+1
  4889  0AF1  0843               	movf	??_scale+1,w
  4890  0AF2  00BE               	movwf	?_scale
  4891  0AF3  2C9E               	goto	l309
  4892  0AF4                     l2973:
  4893                           
  4894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4895  0AF4  0850               	movf	scale@scl,w
  4896  0AF5  3A80               	xorlw	128
  4897  0AF6  3E12               	addlw	-238
  4898  0AF7  1C03               	skipc
  4899  0AF8  2AFA               	goto	u4411
  4900  0AF9  2AFB               	goto	u4410
  4901  0AFA                     u4411:
  4902  0AFA  2BE3               	goto	l2981
  4903  0AFB                     u4410:
  4904  0AFB                     l2975:
  4905                           
  4906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4907  0AFB  300A               	movlw	10
  4908  0AFC  00F7               	movwf	___awdiv@divisor
  4909  0AFD  3000               	movlw	0
  4910  0AFE  00F8               	movwf	___awdiv@divisor+1
  4911  0AFF  0850               	movf	scale@scl,w
  4912  0B00  00F2               	movwf	___awmod@dividend
  4913  0B01  01F3               	clrf	___awmod@dividend+1
  4914  0B02  1BF2               	btfsc	___awmod@dividend,7
  4915  0B03  03F3               	decf	___awmod@dividend+1,f
  4916  0B04  3064               	movlw	100
  4917  0B05  00F0               	movwf	___awmod@divisor
  4918  0B06  3000               	movlw	0
  4919  0B07  00F1               	movwf	___awmod@divisor+1
  4920  0B08  160A  158A  24A3  120A  158A  	fcall	___awmod
  4921  0B0D  0871               	movf	?___awmod+1,w
  4922  0B0E  00FA               	movwf	___awdiv@dividend+1
  4923  0B0F  0870               	movf	?___awmod,w
  4924  0B10  00F9               	movwf	___awdiv@dividend
  4925  0B11  120A  118A  200C  120A  158A  	fcall	___awdiv
  4926  0B16  0877               	movf	?___awdiv,w
  4927  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4928  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4929  0B19  00C2               	movwf	??_scale
  4930  0B1A  3001               	movlw	1
  4931  0B1B                     u4425:
  4932  0B1B  1003               	clrc
  4933  0B1C  0DC2               	rlf	??_scale,f
  4934  0B1D  3EFF               	addlw	-1
  4935  0B1E  1D03               	skipz
  4936  0B1F  2B1B               	goto	u4425
  4937  0B20  1003               	clrc
  4938  0B21  0D42               	rlf	??_scale,w
  4939  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4940  0B23  0084               	movwf	4
  4941  0B24  160A  158A  2000  120A  158A  	fcall	stringdir
  4942  0B29  00C3               	movwf	??_scale+1
  4943  0B2A  160A  158A  2000  120A  158A  	fcall	stringdir
  4944  0B2F  00C4               	movwf	??_scale+2
  4945  0B30  160A  158A  2000  120A  158A  	fcall	stringdir
  4946  0B35  00C5               	movwf	??_scale+3
  4947  0B36  160A  158A  2000  120A  158A  	fcall	stringdir
  4948  0B3B  00C6               	movwf	??_scale+4
  4949  0B3C  0846               	movf	??_scale+4,w
  4950  0B3D  00A7               	movwf	___flmul@b+3
  4951  0B3E  0845               	movf	??_scale+3,w
  4952  0B3F  00A6               	movwf	___flmul@b+2
  4953  0B40  0844               	movf	??_scale+2,w
  4954  0B41  00A5               	movwf	___flmul@b+1
  4955  0B42  0843               	movf	??_scale+1,w
  4956  0B43  00A4               	movwf	___flmul@b
  4957  0B44  3064               	movlw	100
  4958  0B45  00F7               	movwf	___awdiv@divisor
  4959  0B46  3000               	movlw	0
  4960  0B47  00F8               	movwf	___awdiv@divisor+1
  4961  0B48  0850               	movf	scale@scl,w
  4962  0B49  00F9               	movwf	___awdiv@dividend
  4963  0B4A  01FA               	clrf	___awdiv@dividend+1
  4964  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4965  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4966  0B4D  120A  118A  200C  120A  158A  	fcall	___awdiv
  4967  0B52  0877               	movf	?___awdiv,w
  4968  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4969  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4970  0B55  00C7               	movwf	??_scale+5
  4971  0B56  3001               	movlw	1
  4972  0B57                     u4435:
  4973  0B57  1003               	clrc
  4974  0B58  0DC7               	rlf	??_scale+5,f
  4975  0B59  3EFF               	addlw	-1
  4976  0B5A  1D03               	skipz
  4977  0B5B  2B57               	goto	u4435
  4978  0B5C  1003               	clrc
  4979  0B5D  0D47               	rlf	??_scale+5,w
  4980  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4981  0B5F  0084               	movwf	4
  4982  0B60  160A  158A  2000  120A  158A  	fcall	stringdir
  4983  0B65  00C8               	movwf	??_scale+6
  4984  0B66  160A  158A  2000  120A  158A  	fcall	stringdir
  4985  0B6B  00C9               	movwf	??_scale+7
  4986  0B6C  160A  158A  2000  120A  158A  	fcall	stringdir
  4987  0B71  00CA               	movwf	??_scale+8
  4988  0B72  160A  158A  2000  120A  158A  	fcall	stringdir
  4989  0B77  00CB               	movwf	??_scale+9
  4990  0B78  084B               	movf	??_scale+9,w
  4991  0B79  00AB               	movwf	___flmul@a+3
  4992  0B7A  084A               	movf	??_scale+8,w
  4993  0B7B  00AA               	movwf	___flmul@a+2
  4994  0B7C  0849               	movf	??_scale+7,w
  4995  0B7D  00A9               	movwf	___flmul@a+1
  4996  0B7E  0848               	movf	??_scale+6,w
  4997  0B7F  00A8               	movwf	___flmul@a
  4998  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4999  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  5000  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  5001  0B87  0827               	movf	?___flmul+3,w
  5002  0B88  00CF               	movwf	_scale$1002+3
  5003  0B89  0826               	movf	?___flmul+2,w
  5004  0B8A  00CE               	movwf	_scale$1002+2
  5005  0B8B  0825               	movf	?___flmul+1,w
  5006  0B8C  00CD               	movwf	_scale$1002+1
  5007  0B8D  0824               	movf	?___flmul,w
  5008  0B8E  00CC               	movwf	_scale$1002
  5009                           
  5010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  5011  0B8F  300A               	movlw	10
  5012  0B90  00F0               	movwf	___awmod@divisor
  5013  0B91  3000               	movlw	0
  5014  0B92  00F1               	movwf	___awmod@divisor+1
  5015  0B93  0850               	movf	scale@scl,w
  5016  0B94  00F2               	movwf	___awmod@dividend
  5017  0B95  01F3               	clrf	___awmod@dividend+1
  5018  0B96  1BF2               	btfsc	___awmod@dividend,7
  5019  0B97  03F3               	decf	___awmod@dividend+1,f
  5020  0B98  160A  158A  24A3  120A  158A  	fcall	___awmod
  5021  0B9D  0870               	movf	?___awmod,w
  5022  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  5023  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  5024  0BA0  00C2               	movwf	??_scale
  5025  0BA1  3001               	movlw	1
  5026  0BA2                     u4445:
  5027  0BA2  1003               	clrc
  5028  0BA3  0DC2               	rlf	??_scale,f
  5029  0BA4  3EFF               	addlw	-1
  5030  0BA5  1D03               	skipz
  5031  0BA6  2BA2               	goto	u4445
  5032  0BA7  1003               	clrc
  5033  0BA8  0D42               	rlf	??_scale,w
  5034  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5035  0BAA  0084               	movwf	4
  5036  0BAB  160A  158A  2000  120A  158A  	fcall	stringdir
  5037  0BB0  00C3               	movwf	??_scale+1
  5038  0BB1  160A  158A  2000  120A  158A  	fcall	stringdir
  5039  0BB6  00C4               	movwf	??_scale+2
  5040  0BB7  160A  158A  2000  120A  158A  	fcall	stringdir
  5041  0BBC  00C5               	movwf	??_scale+3
  5042  0BBD  160A  158A  2000  120A  158A  	fcall	stringdir
  5043  0BC2  00C6               	movwf	??_scale+4
  5044  0BC3  0846               	movf	??_scale+4,w
  5045  0BC4  00A7               	movwf	___flmul@b+3
  5046  0BC5  0845               	movf	??_scale+3,w
  5047  0BC6  00A6               	movwf	___flmul@b+2
  5048  0BC7  0844               	movf	??_scale+2,w
  5049  0BC8  00A5               	movwf	___flmul@b+1
  5050  0BC9  0843               	movf	??_scale+1,w
  5051  0BCA  00A4               	movwf	___flmul@b
  5052  0BCB  084F               	movf	_scale$1002+3,w
  5053  0BCC  00AB               	movwf	___flmul@a+3
  5054  0BCD  084E               	movf	_scale$1002+2,w
  5055  0BCE  00AA               	movwf	___flmul@a+2
  5056  0BCF  084D               	movf	_scale$1002+1,w
  5057  0BD0  00A9               	movwf	___flmul@a+1
  5058  0BD1  084C               	movf	_scale$1002,w
  5059  0BD2  00A8               	movwf	___flmul@a
  5060  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  5061  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  5062  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  5063  0BDA  0827               	movf	?___flmul+3,w
  5064  0BDB  00C1               	movwf	?_scale+3
  5065  0BDC  0826               	movf	?___flmul+2,w
  5066  0BDD  00C0               	movwf	?_scale+2
  5067  0BDE  0825               	movf	?___flmul+1,w
  5068  0BDF  00BF               	movwf	?_scale+1
  5069  0BE0  0824               	movf	?___flmul,w
  5070  0BE1  00BE               	movwf	?_scale
  5071  0BE2  2C9E               	goto	l309
  5072  0BE3                     l2981:
  5073  0BE3  0850               	movf	scale@scl,w
  5074  0BE4  3A80               	xorlw	128
  5075  0BE5  3E75               	addlw	-139
  5076  0BE6  1C03               	skipc
  5077  0BE7  2BE9               	goto	u4451
  5078  0BE8  2BEA               	goto	u4450
  5079  0BE9                     u4451:
  5080  0BE9  2C72               	goto	l2987
  5081  0BEA                     u4450:
  5082  0BEA                     l2983:
  5083                           
  5084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  5085  0BEA  300A               	movlw	10
  5086  0BEB  00F0               	movwf	___awmod@divisor
  5087  0BEC  3000               	movlw	0
  5088  0BED  00F1               	movwf	___awmod@divisor+1
  5089  0BEE  0850               	movf	scale@scl,w
  5090  0BEF  00F2               	movwf	___awmod@dividend
  5091  0BF0  01F3               	clrf	___awmod@dividend+1
  5092  0BF1  1BF2               	btfsc	___awmod@dividend,7
  5093  0BF2  03F3               	decf	___awmod@dividend+1,f
  5094  0BF3  160A  158A  24A3  120A  158A  	fcall	___awmod
  5095  0BF8  0870               	movf	?___awmod,w
  5096  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  5097  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  5098  0BFB  00C2               	movwf	??_scale
  5099  0BFC  3001               	movlw	1
  5100  0BFD                     u4465:
  5101  0BFD  1003               	clrc
  5102  0BFE  0DC2               	rlf	??_scale,f
  5103  0BFF  3EFF               	addlw	-1
  5104  0C00  1D03               	skipz
  5105  0C01  2BFD               	goto	u4465
  5106  0C02  1003               	clrc
  5107  0C03  0D42               	rlf	??_scale,w
  5108  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5109  0C05  0084               	movwf	4
  5110  0C06  160A  158A  2000  120A  158A  	fcall	stringdir
  5111  0C0B  00C3               	movwf	??_scale+1
  5112  0C0C  160A  158A  2000  120A  158A  	fcall	stringdir
  5113  0C11  00C4               	movwf	??_scale+2
  5114  0C12  160A  158A  2000  120A  158A  	fcall	stringdir
  5115  0C17  00C5               	movwf	??_scale+3
  5116  0C18  160A  158A  2000  120A  158A  	fcall	stringdir
  5117  0C1D  00C6               	movwf	??_scale+4
  5118  0C1E  0846               	movf	??_scale+4,w
  5119  0C1F  00A7               	movwf	___flmul@b+3
  5120  0C20  0845               	movf	??_scale+3,w
  5121  0C21  00A6               	movwf	___flmul@b+2
  5122  0C22  0844               	movf	??_scale+2,w
  5123  0C23  00A5               	movwf	___flmul@b+1
  5124  0C24  0843               	movf	??_scale+1,w
  5125  0C25  00A4               	movwf	___flmul@b
  5126  0C26  300A               	movlw	10
  5127  0C27  00F7               	movwf	___awdiv@divisor
  5128  0C28  3000               	movlw	0
  5129  0C29  00F8               	movwf	___awdiv@divisor+1
  5130  0C2A  0850               	movf	scale@scl,w
  5131  0C2B  00F9               	movwf	___awdiv@dividend
  5132  0C2C  01FA               	clrf	___awdiv@dividend+1
  5133  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  5134  0C2E  03FA               	decf	___awdiv@dividend+1,f
  5135  0C2F  120A  118A  200C  120A  158A  	fcall	___awdiv
  5136  0C34  0877               	movf	?___awdiv,w
  5137  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  5138  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  5139  0C37  00C7               	movwf	??_scale+5
  5140  0C38  3001               	movlw	1
  5141  0C39                     u4475:
  5142  0C39  1003               	clrc
  5143  0C3A  0DC7               	rlf	??_scale+5,f
  5144  0C3B  3EFF               	addlw	-1
  5145  0C3C  1D03               	skipz
  5146  0C3D  2C39               	goto	u4475
  5147  0C3E  1003               	clrc
  5148  0C3F  0D47               	rlf	??_scale+5,w
  5149  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5150  0C41  0084               	movwf	4
  5151  0C42  160A  158A  2000  120A  158A  	fcall	stringdir
  5152  0C47  00C8               	movwf	??_scale+6
  5153  0C48  160A  158A  2000  120A  158A  	fcall	stringdir
  5154  0C4D  00C9               	movwf	??_scale+7
  5155  0C4E  160A  158A  2000  120A  158A  	fcall	stringdir
  5156  0C53  00CA               	movwf	??_scale+8
  5157  0C54  160A  158A  2000  120A  158A  	fcall	stringdir
  5158  0C59  00CB               	movwf	??_scale+9
  5159  0C5A  084B               	movf	??_scale+9,w
  5160  0C5B  00AB               	movwf	___flmul@a+3
  5161  0C5C  084A               	movf	??_scale+8,w
  5162  0C5D  00AA               	movwf	___flmul@a+2
  5163  0C5E  0849               	movf	??_scale+7,w
  5164  0C5F  00A9               	movwf	___flmul@a+1
  5165  0C60  0848               	movf	??_scale+6,w
  5166  0C61  00A8               	movwf	___flmul@a
  5167  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  5168  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  5169  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  5170  0C69  0827               	movf	?___flmul+3,w
  5171  0C6A  00C1               	movwf	?_scale+3
  5172  0C6B  0826               	movf	?___flmul+2,w
  5173  0C6C  00C0               	movwf	?_scale+2
  5174  0C6D  0825               	movf	?___flmul+1,w
  5175  0C6E  00BF               	movwf	?_scale+1
  5176  0C6F  0824               	movf	?___flmul,w
  5177  0C70  00BE               	movwf	?_scale
  5178  0C71  2C9E               	goto	l309
  5179  0C72                     l2987:
  5180                           
  5181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  5182  0C72  0850               	movf	scale@scl,w
  5183  0C73  00C2               	movwf	??_scale
  5184  0C74  3001               	movlw	1
  5185  0C75                     u4485:
  5186  0C75  1003               	clrc
  5187  0C76  0DC2               	rlf	??_scale,f
  5188  0C77  3EFF               	addlw	-1
  5189  0C78  1D03               	skipz
  5190  0C79  2C75               	goto	u4485
  5191  0C7A  1003               	clrc
  5192  0C7B  0D42               	rlf	??_scale,w
  5193  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5194  0C7D  0084               	movwf	4
  5195  0C7E  160A  158A  2000  120A  158A  	fcall	stringdir
  5196  0C83  00C3               	movwf	??_scale+1
  5197  0C84  160A  158A  2000  120A  158A  	fcall	stringdir
  5198  0C89  00C4               	movwf	??_scale+2
  5199  0C8A  160A  158A  2000  120A  158A  	fcall	stringdir
  5200  0C8F  00C5               	movwf	??_scale+3
  5201  0C90  160A  158A  2000  120A  158A  	fcall	stringdir
  5202  0C95  00C6               	movwf	??_scale+4
  5203  0C96  0846               	movf	??_scale+4,w
  5204  0C97  00C1               	movwf	?_scale+3
  5205  0C98  0845               	movf	??_scale+3,w
  5206  0C99  00C0               	movwf	?_scale+2
  5207  0C9A  0844               	movf	??_scale+2,w
  5208  0C9B  00BF               	movwf	?_scale+1
  5209  0C9C  0843               	movf	??_scale+1,w
  5210  0C9D  00BE               	movwf	?_scale
  5211  0C9E                     l309:
  5212  0C9E  0008               	return
  5213  0C9F                     __end_of_scale:
  5214                           
  5215                           	psect	text10
  5216  1CA3                     __ptext10:	
  5217 ;; *************** function ___awmod *****************
  5218 ;; Defined at:
  5219 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;  divisor         2    0[COMMON] int 
  5222 ;;  dividend        2    2[COMMON] int 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  sign            1    6[COMMON] unsigned char 
  5225 ;;  counter         1    5[COMMON] unsigned char 
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  2    0[COMMON] int 
  5228 ;; Registers used:
  5229 ;;		wreg, status,2, status,0
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5235 ;;      Params:         4       0       0       0       0
  5236 ;;      Locals:         2       0       0       0       0
  5237 ;;      Temps:          1       0       0       0       0
  5238 ;;      Totals:         7       0       0       0       0
  5239 ;;Total ram usage:        7 bytes
  5240 ;; Hardware stack levels used:    1
  5241 ;; This function calls:
  5242 ;;		Nothing
  5243 ;; This function is called by:
  5244 ;;		_scale
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           
  5249                           ;psect for function ___awmod
  5250  1CA3                     ___awmod:
  5251  1CA3                     l2513:	
  5252                           ;incstack = 0
  5253                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5254                           
  5255  1CA3  01F6               	clrf	___awmod@sign
  5256  1CA4                     l2515:
  5257  1CA4  1FF3               	btfss	___awmod@dividend+1,7
  5258  1CA5  2CA7               	goto	u3191
  5259  1CA6  2CA8               	goto	u3190
  5260  1CA7                     u3191:
  5261  1CA7  2CAF               	goto	l2521
  5262  1CA8                     u3190:
  5263  1CA8                     l2517:
  5264  1CA8  09F2               	comf	___awmod@dividend,f
  5265  1CA9  09F3               	comf	___awmod@dividend+1,f
  5266  1CAA  0AF2               	incf	___awmod@dividend,f
  5267  1CAB  1903               	skipnz
  5268  1CAC  0AF3               	incf	___awmod@dividend+1,f
  5269  1CAD                     l2519:
  5270  1CAD  01F6               	clrf	___awmod@sign
  5271  1CAE  0AF6               	incf	___awmod@sign,f
  5272  1CAF                     l2521:
  5273  1CAF  1FF1               	btfss	___awmod@divisor+1,7
  5274  1CB0  2CB2               	goto	u3201
  5275  1CB1  2CB3               	goto	u3200
  5276  1CB2                     u3201:
  5277  1CB2  2CB8               	goto	l2525
  5278  1CB3                     u3200:
  5279  1CB3                     l2523:
  5280  1CB3  09F0               	comf	___awmod@divisor,f
  5281  1CB4  09F1               	comf	___awmod@divisor+1,f
  5282  1CB5  0AF0               	incf	___awmod@divisor,f
  5283  1CB6  1903               	skipnz
  5284  1CB7  0AF1               	incf	___awmod@divisor+1,f
  5285  1CB8                     l2525:
  5286  1CB8  0870               	movf	___awmod@divisor,w
  5287  1CB9  0471               	iorwf	___awmod@divisor+1,w
  5288  1CBA  1903               	btfsc	3,2
  5289  1CBB  2CBD               	goto	u3211
  5290  1CBC  2CBE               	goto	u3210
  5291  1CBD                     u3211:
  5292  1CBD  2CED               	goto	l2543
  5293  1CBE                     u3210:
  5294  1CBE                     l2527:
  5295  1CBE  01F5               	clrf	___awmod@counter
  5296  1CBF  0AF5               	incf	___awmod@counter,f
  5297  1CC0  2CCC               	goto	l2533
  5298  1CC1                     l2529:
  5299  1CC1  3001               	movlw	1
  5300  1CC2                     u3225:
  5301  1CC2  1003               	clrc
  5302  1CC3  0DF0               	rlf	___awmod@divisor,f
  5303  1CC4  0DF1               	rlf	___awmod@divisor+1,f
  5304  1CC5  3EFF               	addlw	-1
  5305  1CC6  1D03               	skipz
  5306  1CC7  2CC2               	goto	u3225
  5307  1CC8                     l2531:
  5308  1CC8  3001               	movlw	1
  5309  1CC9  00F4               	movwf	??___awmod
  5310  1CCA  0874               	movf	??___awmod,w
  5311  1CCB  07F5               	addwf	___awmod@counter,f
  5312  1CCC                     l2533:
  5313  1CCC  1FF1               	btfss	___awmod@divisor+1,7
  5314  1CCD  2CCF               	goto	u3231
  5315  1CCE  2CD0               	goto	u3230
  5316  1CCF                     u3231:
  5317  1CCF  2CC1               	goto	l2529
  5318  1CD0                     u3230:
  5319  1CD0                     l2535:
  5320  1CD0  0871               	movf	___awmod@divisor+1,w
  5321  1CD1  0273               	subwf	___awmod@dividend+1,w
  5322  1CD2  1D03               	skipz
  5323  1CD3  2CD6               	goto	u3245
  5324  1CD4  0870               	movf	___awmod@divisor,w
  5325  1CD5  0272               	subwf	___awmod@dividend,w
  5326  1CD6                     u3245:
  5327  1CD6  1C03               	skipc
  5328  1CD7  2CD9               	goto	u3241
  5329  1CD8  2CDA               	goto	u3240
  5330  1CD9                     u3241:
  5331  1CD9  2CE0               	goto	l2539
  5332  1CDA                     u3240:
  5333  1CDA                     l2537:
  5334  1CDA  0870               	movf	___awmod@divisor,w
  5335  1CDB  02F2               	subwf	___awmod@dividend,f
  5336  1CDC  0871               	movf	___awmod@divisor+1,w
  5337  1CDD  1C03               	skipc
  5338  1CDE  03F3               	decf	___awmod@dividend+1,f
  5339  1CDF  02F3               	subwf	___awmod@dividend+1,f
  5340  1CE0                     l2539:
  5341  1CE0  3001               	movlw	1
  5342  1CE1                     u3255:
  5343  1CE1  1003               	clrc
  5344  1CE2  0CF1               	rrf	___awmod@divisor+1,f
  5345  1CE3  0CF0               	rrf	___awmod@divisor,f
  5346  1CE4  3EFF               	addlw	-1
  5347  1CE5  1D03               	skipz
  5348  1CE6  2CE1               	goto	u3255
  5349  1CE7                     l2541:
  5350  1CE7  3001               	movlw	1
  5351  1CE8  02F5               	subwf	___awmod@counter,f
  5352  1CE9  1D03               	btfss	3,2
  5353  1CEA  2CEC               	goto	u3261
  5354  1CEB  2CED               	goto	u3260
  5355  1CEC                     u3261:
  5356  1CEC  2CD0               	goto	l2535
  5357  1CED                     u3260:
  5358  1CED                     l2543:
  5359  1CED  0876               	movf	___awmod@sign,w
  5360  1CEE  1903               	btfsc	3,2
  5361  1CEF  2CF1               	goto	u3271
  5362  1CF0  2CF2               	goto	u3270
  5363  1CF1                     u3271:
  5364  1CF1  2CF7               	goto	l2547
  5365  1CF2                     u3270:
  5366  1CF2                     l2545:
  5367  1CF2  09F2               	comf	___awmod@dividend,f
  5368  1CF3  09F3               	comf	___awmod@dividend+1,f
  5369  1CF4  0AF2               	incf	___awmod@dividend,f
  5370  1CF5  1903               	skipnz
  5371  1CF6  0AF3               	incf	___awmod@dividend+1,f
  5372  1CF7                     l2547:
  5373  1CF7  0873               	movf	___awmod@dividend+1,w
  5374  1CF8  00F1               	movwf	?___awmod+1
  5375  1CF9  0872               	movf	___awmod@dividend,w
  5376  1CFA  00F0               	movwf	?___awmod
  5377  1CFB                     l562:
  5378  1CFB  0008               	return
  5379  1CFC                     __end_of___awmod:
  5380                           
  5381                           	psect	text11
  5382  000C                     __ptext11:	
  5383 ;; *************** function ___awdiv *****************
  5384 ;; Defined at:
  5385 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;  divisor         2    7[COMMON] int 
  5388 ;;  dividend        2    9[COMMON] int 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;  quotient        2    2[BANK0 ] int 
  5391 ;;  sign            1    1[BANK0 ] unsigned char 
  5392 ;;  counter         1    0[BANK0 ] unsigned char 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  2    7[COMMON] int 
  5395 ;; Registers used:
  5396 ;;		wreg, status,2, status,0
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5402 ;;      Params:         4       0       0       0       0
  5403 ;;      Locals:         0       4       0       0       0
  5404 ;;      Temps:          1       0       0       0       0
  5405 ;;      Totals:         5       4       0       0       0
  5406 ;;Total ram usage:        9 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; This function calls:
  5409 ;;		Nothing
  5410 ;; This function is called by:
  5411 ;;		_scale
  5412 ;;		_sprintf
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           
  5417                           ;psect for function ___awdiv
  5418  000C                     ___awdiv:
  5419  000C                     l2469:	
  5420                           ;incstack = 0
  5421                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5422                           
  5423  000C  1283               	bcf	3,5	;RP0=0, select bank0
  5424  000D  1303               	bcf	3,6	;RP1=0, select bank0
  5425  000E  01A1               	clrf	___awdiv@sign
  5426  000F                     l2471:
  5427  000F  1FF8               	btfss	___awdiv@divisor+1,7
  5428  0010  2812               	goto	u3091
  5429  0011  2813               	goto	u3090
  5430  0012                     u3091:
  5431  0012  281A               	goto	l2477
  5432  0013                     u3090:
  5433  0013                     l2473:
  5434  0013  09F7               	comf	___awdiv@divisor,f
  5435  0014  09F8               	comf	___awdiv@divisor+1,f
  5436  0015  0AF7               	incf	___awdiv@divisor,f
  5437  0016  1903               	skipnz
  5438  0017  0AF8               	incf	___awdiv@divisor+1,f
  5439  0018                     l2475:
  5440  0018  01A1               	clrf	___awdiv@sign
  5441  0019  0AA1               	incf	___awdiv@sign,f
  5442  001A                     l2477:
  5443  001A  1FFA               	btfss	___awdiv@dividend+1,7
  5444  001B  281D               	goto	u3101
  5445  001C  281E               	goto	u3100
  5446  001D                     u3101:
  5447  001D  2827               	goto	l2483
  5448  001E                     u3100:
  5449  001E                     l2479:
  5450  001E  09F9               	comf	___awdiv@dividend,f
  5451  001F  09FA               	comf	___awdiv@dividend+1,f
  5452  0020  0AF9               	incf	___awdiv@dividend,f
  5453  0021  1903               	skipnz
  5454  0022  0AFA               	incf	___awdiv@dividend+1,f
  5455  0023                     l2481:
  5456  0023  3001               	movlw	1
  5457  0024  00FB               	movwf	??___awdiv
  5458  0025  087B               	movf	??___awdiv,w
  5459  0026  06A1               	xorwf	___awdiv@sign,f
  5460  0027                     l2483:
  5461  0027  01A2               	clrf	___awdiv@quotient
  5462  0028  01A3               	clrf	___awdiv@quotient+1
  5463  0029                     l2485:
  5464  0029  0877               	movf	___awdiv@divisor,w
  5465  002A  0478               	iorwf	___awdiv@divisor+1,w
  5466  002B  1903               	btfsc	3,2
  5467  002C  282E               	goto	u3111
  5468  002D  282F               	goto	u3110
  5469  002E                     u3111:
  5470  002E  2866               	goto	l2505
  5471  002F                     u3110:
  5472  002F                     l2487:
  5473  002F  01A0               	clrf	___awdiv@counter
  5474  0030  0AA0               	incf	___awdiv@counter,f
  5475  0031  283D               	goto	l2493
  5476  0032                     l2489:
  5477  0032  3001               	movlw	1
  5478  0033                     u3125:
  5479  0033  1003               	clrc
  5480  0034  0DF7               	rlf	___awdiv@divisor,f
  5481  0035  0DF8               	rlf	___awdiv@divisor+1,f
  5482  0036  3EFF               	addlw	-1
  5483  0037  1D03               	skipz
  5484  0038  2833               	goto	u3125
  5485  0039                     l2491:
  5486  0039  3001               	movlw	1
  5487  003A  00FB               	movwf	??___awdiv
  5488  003B  087B               	movf	??___awdiv,w
  5489  003C  07A0               	addwf	___awdiv@counter,f
  5490  003D                     l2493:
  5491  003D  1FF8               	btfss	___awdiv@divisor+1,7
  5492  003E  2840               	goto	u3131
  5493  003F  2841               	goto	u3130
  5494  0040                     u3131:
  5495  0040  2832               	goto	l2489
  5496  0041                     u3130:
  5497  0041                     l2495:
  5498  0041  3001               	movlw	1
  5499  0042                     u3145:
  5500  0042  1003               	clrc
  5501  0043  0DA2               	rlf	___awdiv@quotient,f
  5502  0044  0DA3               	rlf	___awdiv@quotient+1,f
  5503  0045  3EFF               	addlw	-1
  5504  0046  1D03               	skipz
  5505  0047  2842               	goto	u3145
  5506  0048  0878               	movf	___awdiv@divisor+1,w
  5507  0049  027A               	subwf	___awdiv@dividend+1,w
  5508  004A  1D03               	skipz
  5509  004B  284E               	goto	u3155
  5510  004C  0877               	movf	___awdiv@divisor,w
  5511  004D  0279               	subwf	___awdiv@dividend,w
  5512  004E                     u3155:
  5513  004E  1C03               	skipc
  5514  004F  2851               	goto	u3151
  5515  0050  2852               	goto	u3150
  5516  0051                     u3151:
  5517  0051  2859               	goto	l2501
  5518  0052                     u3150:
  5519  0052                     l2497:
  5520  0052  0877               	movf	___awdiv@divisor,w
  5521  0053  02F9               	subwf	___awdiv@dividend,f
  5522  0054  0878               	movf	___awdiv@divisor+1,w
  5523  0055  1C03               	skipc
  5524  0056  03FA               	decf	___awdiv@dividend+1,f
  5525  0057  02FA               	subwf	___awdiv@dividend+1,f
  5526  0058                     l2499:
  5527  0058  1422               	bsf	___awdiv@quotient,0
  5528  0059                     l2501:
  5529  0059  3001               	movlw	1
  5530  005A                     u3165:
  5531  005A  1003               	clrc
  5532  005B  0CF8               	rrf	___awdiv@divisor+1,f
  5533  005C  0CF7               	rrf	___awdiv@divisor,f
  5534  005D  3EFF               	addlw	-1
  5535  005E  1D03               	skipz
  5536  005F  285A               	goto	u3165
  5537  0060                     l2503:
  5538  0060  3001               	movlw	1
  5539  0061  02A0               	subwf	___awdiv@counter,f
  5540  0062  1D03               	btfss	3,2
  5541  0063  2865               	goto	u3171
  5542  0064  2866               	goto	u3170
  5543  0065                     u3171:
  5544  0065  2841               	goto	l2495
  5545  0066                     u3170:
  5546  0066                     l2505:
  5547  0066  0821               	movf	___awdiv@sign,w
  5548  0067  1903               	btfsc	3,2
  5549  0068  286A               	goto	u3181
  5550  0069  286B               	goto	u3180
  5551  006A                     u3181:
  5552  006A  2870               	goto	l2509
  5553  006B                     u3180:
  5554  006B                     l2507:
  5555  006B  09A2               	comf	___awdiv@quotient,f
  5556  006C  09A3               	comf	___awdiv@quotient+1,f
  5557  006D  0AA2               	incf	___awdiv@quotient,f
  5558  006E  1903               	skipnz
  5559  006F  0AA3               	incf	___awdiv@quotient+1,f
  5560  0070                     l2509:
  5561  0070  0823               	movf	___awdiv@quotient+1,w
  5562  0071  00F8               	movwf	?___awdiv+1
  5563  0072  0822               	movf	___awdiv@quotient,w
  5564  0073  00F7               	movwf	?___awdiv
  5565  0074                     l549:
  5566  0074  0008               	return
  5567  0075                     __end_of___awdiv:
  5568                           
  5569                           	psect	text12
  5570  1984                     __ptext12:	
  5571 ;; *************** function _isdigit *****************
  5572 ;; Defined at:
  5573 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  c               1    wreg     unsigned char 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  c               1    1[COMMON] unsigned char 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;		None               void
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, status,0
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5587 ;;      Params:         0       0       0       0       0
  5588 ;;      Locals:         2       0       0       0       0
  5589 ;;      Temps:          0       0       0       0       0
  5590 ;;      Totals:         2       0       0       0       0
  5591 ;;Total ram usage:        2 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_sprintf
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           
  5601                           ;psect for function _isdigit
  5602  1984                     _isdigit:
  5603                           
  5604                           ;incstack = 0
  5605                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5606                           ;isdigit@c stored from wreg
  5607  1984  00F1               	movwf	isdigit@c
  5608  1985                     l2991:
  5609  1985  01F0               	clrf	_isdigit$811
  5610  1986                     l2993:
  5611  1986  303A               	movlw	58
  5612  1987  0271               	subwf	isdigit@c,w
  5613  1988  1803               	skipnc
  5614  1989  298B               	goto	u4491
  5615  198A  298C               	goto	u4490
  5616  198B                     u4491:
  5617  198B  2994               	goto	l2999
  5618  198C                     u4490:
  5619  198C                     l2995:
  5620  198C  3030               	movlw	48
  5621  198D  0271               	subwf	isdigit@c,w
  5622  198E  1C03               	skipc
  5623  198F  2991               	goto	u4501
  5624  1990  2992               	goto	u4500
  5625  1991                     u4501:
  5626  1991  2994               	goto	l2999
  5627  1992                     u4500:
  5628  1992                     l2997:
  5629  1992  01F0               	clrf	_isdigit$811
  5630  1993  0AF0               	incf	_isdigit$811,f
  5631  1994                     l2999:
  5632  1994  0C70               	rrf	_isdigit$811,w
  5633  1995                     l883:
  5634  1995  0008               	return
  5635  1996                     __end_of_isdigit:
  5636                           
  5637                           	psect	text13
  5638  136D                     __ptext13:	
  5639 ;; *************** function _fround *****************
  5640 ;; Defined at:
  5641 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  prec            1    wreg     unsigned char 
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;  prec            1   49[BANK0 ] unsigned char 
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  4   30[BANK0 ] unsigned char 
  5648 ;; Registers used:
  5649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5655 ;;      Params:         0       4       0       0       0
  5656 ;;      Locals:         0       9       0       0       0
  5657 ;;      Temps:          0       7       0       0       0
  5658 ;;      Totals:         0      20       0       0       0
  5659 ;;Total ram usage:       20 bytes
  5660 ;; Hardware stack levels used:    1
  5661 ;; Hardware stack levels required when called:    2
  5662 ;; This function calls:
  5663 ;;		___flmul
  5664 ;;		___lwdiv
  5665 ;;		___lwmod
  5666 ;; This function is called by:
  5667 ;;		_sprintf
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           
  5672                           ;psect for function _fround
  5673  136D                     _fround:
  5674                           
  5675                           ;incstack = 0
  5676                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5677                           ;fround@prec stored from wreg
  5678  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5679  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5680  136F  00D1               	movwf	fround@prec
  5681  1370                     l2933:
  5682                           
  5683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5684  1370  306E               	movlw	110
  5685  1371  0251               	subwf	fround@prec,w
  5686  1372  1C03               	skipc
  5687  1373  2B75               	goto	u4241
  5688  1374  2B76               	goto	u4240
  5689  1375                     u4241:
  5690  1375  2C83               	goto	l2941
  5691  1376                     u4240:
  5692  1376                     l2935:
  5693                           
  5694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5695  1376  303F               	movlw	63
  5696  1377  00A7               	movwf	___flmul@b+3
  5697  1378  3000               	movlw	0
  5698  1379  00A6               	movwf	___flmul@b+2
  5699  137A  3000               	movlw	0
  5700  137B  00A5               	movwf	___flmul@b+1
  5701  137C  3000               	movlw	0
  5702  137D  00A4               	movwf	___flmul@b
  5703  137E  3064               	movlw	100
  5704  137F  00F6               	movwf	___lwdiv@divisor
  5705  1380  3000               	movlw	0
  5706  1381  00F7               	movwf	___lwdiv@divisor+1
  5707  1382  0851               	movf	fround@prec,w
  5708  1383  00C2               	movwf	??_fround
  5709  1384  01C3               	clrf	??_fround+1
  5710  1385  0842               	movf	??_fround,w
  5711  1386  00F8               	movwf	___lwdiv@dividend
  5712  1387  0843               	movf	??_fround+1,w
  5713  1388  00F9               	movwf	___lwdiv@dividend+1
  5714  1389  160A  158A  2321  160A  118A  	fcall	___lwdiv
  5715  138E  0876               	movf	?___lwdiv,w
  5716  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5717  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5718  1391  00C4               	movwf	??_fround+2
  5719  1392  3001               	movlw	1
  5720  1393                     u4255:
  5721  1393  1003               	clrc
  5722  1394  0DC4               	rlf	??_fround+2,f
  5723  1395  3EFF               	addlw	-1
  5724  1396  1D03               	skipz
  5725  1397  2B93               	goto	u4255
  5726  1398  1003               	clrc
  5727  1399  0D44               	rlf	??_fround+2,w
  5728  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5729  139B  0084               	movwf	4
  5730  139C  160A  158A  2000  160A  118A  	fcall	stringdir
  5731  13A1  00C5               	movwf	??_fround+3
  5732  13A2  160A  158A  2000  160A  118A  	fcall	stringdir
  5733  13A7  00C6               	movwf	??_fround+4
  5734  13A8  160A  158A  2000  160A  118A  	fcall	stringdir
  5735  13AD  00C7               	movwf	??_fround+5
  5736  13AE  160A  158A  2000  160A  118A  	fcall	stringdir
  5737  13B3  00C8               	movwf	??_fround+6
  5738  13B4  0848               	movf	??_fround+6,w
  5739  13B5  00AB               	movwf	___flmul@a+3
  5740  13B6  0847               	movf	??_fround+5,w
  5741  13B7  00AA               	movwf	___flmul@a+2
  5742  13B8  0846               	movf	??_fround+4,w
  5743  13B9  00A9               	movwf	___flmul@a+1
  5744  13BA  0845               	movf	??_fround+3,w
  5745  13BB  00A8               	movwf	___flmul@a
  5746  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5747  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5748  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5749  13C3  0827               	movf	?___flmul+3,w
  5750  13C4  00D0               	movwf	_fround$1000+3
  5751  13C5  0826               	movf	?___flmul+2,w
  5752  13C6  00CF               	movwf	_fround$1000+2
  5753  13C7  0825               	movf	?___flmul+1,w
  5754  13C8  00CE               	movwf	_fround$1000+1
  5755  13C9  0824               	movf	?___flmul,w
  5756  13CA  00CD               	movwf	_fround$1000
  5757                           
  5758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5759  13CB  300A               	movlw	10
  5760  13CC  00F6               	movwf	___lwdiv@divisor
  5761  13CD  3000               	movlw	0
  5762  13CE  00F7               	movwf	___lwdiv@divisor+1
  5763  13CF  0851               	movf	fround@prec,w
  5764  13D0  00C2               	movwf	??_fround
  5765  13D1  01C3               	clrf	??_fround+1
  5766  13D2  0842               	movf	??_fround,w
  5767  13D3  00F2               	movwf	___lwmod@dividend
  5768  13D4  0843               	movf	??_fround+1,w
  5769  13D5  00F3               	movwf	___lwmod@dividend+1
  5770  13D6  3064               	movlw	100
  5771  13D7  00F0               	movwf	___lwmod@divisor
  5772  13D8  3000               	movlw	0
  5773  13D9  00F1               	movwf	___lwmod@divisor+1
  5774  13DA  160A  158A  22E7  160A  118A  	fcall	___lwmod
  5775  13DF  0871               	movf	?___lwmod+1,w
  5776  13E0  00F9               	movwf	___lwdiv@dividend+1
  5777  13E1  0870               	movf	?___lwmod,w
  5778  13E2  00F8               	movwf	___lwdiv@dividend
  5779  13E3  160A  158A  2321  160A  118A  	fcall	___lwdiv
  5780  13E8  0876               	movf	?___lwdiv,w
  5781  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5782  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5783  13EB  00C4               	movwf	??_fround+2
  5784  13EC  3001               	movlw	1
  5785  13ED                     u4265:
  5786  13ED  1003               	clrc
  5787  13EE  0DC4               	rlf	??_fround+2,f
  5788  13EF  3EFF               	addlw	-1
  5789  13F0  1D03               	skipz
  5790  13F1  2BED               	goto	u4265
  5791  13F2  1003               	clrc
  5792  13F3  0D44               	rlf	??_fround+2,w
  5793  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5794  13F5  0084               	movwf	4
  5795  13F6  160A  158A  2000  160A  118A  	fcall	stringdir
  5796  13FB  00C5               	movwf	??_fround+3
  5797  13FC  160A  158A  2000  160A  118A  	fcall	stringdir
  5798  1401  00C6               	movwf	??_fround+4
  5799  1402  160A  158A  2000  160A  118A  	fcall	stringdir
  5800  1407  00C7               	movwf	??_fround+5
  5801  1408  160A  158A  2000  160A  118A  	fcall	stringdir
  5802  140D  00C8               	movwf	??_fround+6
  5803  140E  0848               	movf	??_fround+6,w
  5804  140F  00A7               	movwf	___flmul@b+3
  5805  1410  0847               	movf	??_fround+5,w
  5806  1411  00A6               	movwf	___flmul@b+2
  5807  1412  0846               	movf	??_fround+4,w
  5808  1413  00A5               	movwf	___flmul@b+1
  5809  1414  0845               	movf	??_fround+3,w
  5810  1415  00A4               	movwf	___flmul@b
  5811  1416  0850               	movf	_fround$1000+3,w
  5812  1417  00AB               	movwf	___flmul@a+3
  5813  1418  084F               	movf	_fround$1000+2,w
  5814  1419  00AA               	movwf	___flmul@a+2
  5815  141A  084E               	movf	_fround$1000+1,w
  5816  141B  00A9               	movwf	___flmul@a+1
  5817  141C  084D               	movf	_fround$1000,w
  5818  141D  00A8               	movwf	___flmul@a
  5819  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5820  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5821  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5822  1425  0827               	movf	?___flmul+3,w
  5823  1426  00CC               	movwf	_fround$1001+3
  5824  1427  0826               	movf	?___flmul+2,w
  5825  1428  00CB               	movwf	_fround$1001+2
  5826  1429  0825               	movf	?___flmul+1,w
  5827  142A  00CA               	movwf	_fround$1001+1
  5828  142B  0824               	movf	?___flmul,w
  5829  142C  00C9               	movwf	_fround$1001
  5830                           
  5831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5832  142D  300A               	movlw	10
  5833  142E  00F0               	movwf	___lwmod@divisor
  5834  142F  3000               	movlw	0
  5835  1430  00F1               	movwf	___lwmod@divisor+1
  5836  1431  0851               	movf	fround@prec,w
  5837  1432  00C2               	movwf	??_fround
  5838  1433  01C3               	clrf	??_fround+1
  5839  1434  0842               	movf	??_fround,w
  5840  1435  00F2               	movwf	___lwmod@dividend
  5841  1436  0843               	movf	??_fround+1,w
  5842  1437  00F3               	movwf	___lwmod@dividend+1
  5843  1438  160A  158A  22E7  160A  118A  	fcall	___lwmod
  5844  143D  0870               	movf	?___lwmod,w
  5845  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5846  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5847  1440  00C4               	movwf	??_fround+2
  5848  1441  3001               	movlw	1
  5849  1442                     u4275:
  5850  1442  1003               	clrc
  5851  1443  0DC4               	rlf	??_fround+2,f
  5852  1444  3EFF               	addlw	-1
  5853  1445  1D03               	skipz
  5854  1446  2C42               	goto	u4275
  5855  1447  1003               	clrc
  5856  1448  0D44               	rlf	??_fround+2,w
  5857  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5858  144A  0084               	movwf	4
  5859  144B  160A  158A  2000  160A  118A  	fcall	stringdir
  5860  1450  00C5               	movwf	??_fround+3
  5861  1451  160A  158A  2000  160A  118A  	fcall	stringdir
  5862  1456  00C6               	movwf	??_fround+4
  5863  1457  160A  158A  2000  160A  118A  	fcall	stringdir
  5864  145C  00C7               	movwf	??_fround+5
  5865  145D  160A  158A  2000  160A  118A  	fcall	stringdir
  5866  1462  00C8               	movwf	??_fround+6
  5867  1463  0848               	movf	??_fround+6,w
  5868  1464  00A7               	movwf	___flmul@b+3
  5869  1465  0847               	movf	??_fround+5,w
  5870  1466  00A6               	movwf	___flmul@b+2
  5871  1467  0846               	movf	??_fround+4,w
  5872  1468  00A5               	movwf	___flmul@b+1
  5873  1469  0845               	movf	??_fround+3,w
  5874  146A  00A4               	movwf	___flmul@b
  5875  146B  084C               	movf	_fround$1001+3,w
  5876  146C  00AB               	movwf	___flmul@a+3
  5877  146D  084B               	movf	_fround$1001+2,w
  5878  146E  00AA               	movwf	___flmul@a+2
  5879  146F  084A               	movf	_fround$1001+1,w
  5880  1470  00A9               	movwf	___flmul@a+1
  5881  1471  0849               	movf	_fround$1001,w
  5882  1472  00A8               	movwf	___flmul@a
  5883  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5884  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5885  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5886  147A  0827               	movf	?___flmul+3,w
  5887  147B  00C1               	movwf	?_fround+3
  5888  147C  0826               	movf	?___flmul+2,w
  5889  147D  00C0               	movwf	?_fround+2
  5890  147E  0825               	movf	?___flmul+1,w
  5891  147F  00BF               	movwf	?_fround+1
  5892  1480  0824               	movf	?___flmul,w
  5893  1481  00BE               	movwf	?_fround
  5894  1482  2D77               	goto	l302
  5895  1483                     l2941:
  5896  1483  300B               	movlw	11
  5897  1484  0251               	subwf	fround@prec,w
  5898  1485  1C03               	skipc
  5899  1486  2C88               	goto	u4281
  5900  1487  2C89               	goto	u4280
  5901  1488                     u4281:
  5902  1488  2D34               	goto	l2947
  5903  1489                     u4280:
  5904  1489                     l2943:
  5905                           
  5906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5907  1489  303F               	movlw	63
  5908  148A  00A7               	movwf	___flmul@b+3
  5909  148B  3000               	movlw	0
  5910  148C  00A6               	movwf	___flmul@b+2
  5911  148D  3000               	movlw	0
  5912  148E  00A5               	movwf	___flmul@b+1
  5913  148F  3000               	movlw	0
  5914  1490  00A4               	movwf	___flmul@b
  5915  1491  300A               	movlw	10
  5916  1492  00F6               	movwf	___lwdiv@divisor
  5917  1493  3000               	movlw	0
  5918  1494  00F7               	movwf	___lwdiv@divisor+1
  5919  1495  0851               	movf	fround@prec,w
  5920  1496  00C2               	movwf	??_fround
  5921  1497  01C3               	clrf	??_fround+1
  5922  1498  0842               	movf	??_fround,w
  5923  1499  00F8               	movwf	___lwdiv@dividend
  5924  149A  0843               	movf	??_fround+1,w
  5925  149B  00F9               	movwf	___lwdiv@dividend+1
  5926  149C  160A  158A  2321  160A  118A  	fcall	___lwdiv
  5927  14A1  0876               	movf	?___lwdiv,w
  5928  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5929  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5930  14A4  00C4               	movwf	??_fround+2
  5931  14A5  3001               	movlw	1
  5932  14A6                     u4295:
  5933  14A6  1003               	clrc
  5934  14A7  0DC4               	rlf	??_fround+2,f
  5935  14A8  3EFF               	addlw	-1
  5936  14A9  1D03               	skipz
  5937  14AA  2CA6               	goto	u4295
  5938  14AB  1003               	clrc
  5939  14AC  0D44               	rlf	??_fround+2,w
  5940  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5941  14AE  0084               	movwf	4
  5942  14AF  160A  158A  2000  160A  118A  	fcall	stringdir
  5943  14B4  00C5               	movwf	??_fround+3
  5944  14B5  160A  158A  2000  160A  118A  	fcall	stringdir
  5945  14BA  00C6               	movwf	??_fround+4
  5946  14BB  160A  158A  2000  160A  118A  	fcall	stringdir
  5947  14C0  00C7               	movwf	??_fround+5
  5948  14C1  160A  158A  2000  160A  118A  	fcall	stringdir
  5949  14C6  00C8               	movwf	??_fround+6
  5950  14C7  0848               	movf	??_fround+6,w
  5951  14C8  00AB               	movwf	___flmul@a+3
  5952  14C9  0847               	movf	??_fround+5,w
  5953  14CA  00AA               	movwf	___flmul@a+2
  5954  14CB  0846               	movf	??_fround+4,w
  5955  14CC  00A9               	movwf	___flmul@a+1
  5956  14CD  0845               	movf	??_fround+3,w
  5957  14CE  00A8               	movwf	___flmul@a
  5958  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5959  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5960  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5961  14D6  0827               	movf	?___flmul+3,w
  5962  14D7  00D0               	movwf	_fround$1000+3
  5963  14D8  0826               	movf	?___flmul+2,w
  5964  14D9  00CF               	movwf	_fround$1000+2
  5965  14DA  0825               	movf	?___flmul+1,w
  5966  14DB  00CE               	movwf	_fround$1000+1
  5967  14DC  0824               	movf	?___flmul,w
  5968  14DD  00CD               	movwf	_fround$1000
  5969                           
  5970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5971  14DE  300A               	movlw	10
  5972  14DF  00F0               	movwf	___lwmod@divisor
  5973  14E0  3000               	movlw	0
  5974  14E1  00F1               	movwf	___lwmod@divisor+1
  5975  14E2  0851               	movf	fround@prec,w
  5976  14E3  00C2               	movwf	??_fround
  5977  14E4  01C3               	clrf	??_fround+1
  5978  14E5  0842               	movf	??_fround,w
  5979  14E6  00F2               	movwf	___lwmod@dividend
  5980  14E7  0843               	movf	??_fround+1,w
  5981  14E8  00F3               	movwf	___lwmod@dividend+1
  5982  14E9  160A  158A  22E7  160A  118A  	fcall	___lwmod
  5983  14EE  0870               	movf	?___lwmod,w
  5984  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5985  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5986  14F1  00C4               	movwf	??_fround+2
  5987  14F2  3001               	movlw	1
  5988  14F3                     u4305:
  5989  14F3  1003               	clrc
  5990  14F4  0DC4               	rlf	??_fround+2,f
  5991  14F5  3EFF               	addlw	-1
  5992  14F6  1D03               	skipz
  5993  14F7  2CF3               	goto	u4305
  5994  14F8  1003               	clrc
  5995  14F9  0D44               	rlf	??_fround+2,w
  5996  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5997  14FB  0084               	movwf	4
  5998  14FC  160A  158A  2000  160A  118A  	fcall	stringdir
  5999  1501  00C5               	movwf	??_fround+3
  6000  1502  160A  158A  2000  160A  118A  	fcall	stringdir
  6001  1507  00C6               	movwf	??_fround+4
  6002  1508  160A  158A  2000  160A  118A  	fcall	stringdir
  6003  150D  00C7               	movwf	??_fround+5
  6004  150E  160A  158A  2000  160A  118A  	fcall	stringdir
  6005  1513  00C8               	movwf	??_fround+6
  6006  1514  0848               	movf	??_fround+6,w
  6007  1515  00A7               	movwf	___flmul@b+3
  6008  1516  0847               	movf	??_fround+5,w
  6009  1517  00A6               	movwf	___flmul@b+2
  6010  1518  0846               	movf	??_fround+4,w
  6011  1519  00A5               	movwf	___flmul@b+1
  6012  151A  0845               	movf	??_fround+3,w
  6013  151B  00A4               	movwf	___flmul@b
  6014  151C  0850               	movf	_fround$1000+3,w
  6015  151D  00AB               	movwf	___flmul@a+3
  6016  151E  084F               	movf	_fround$1000+2,w
  6017  151F  00AA               	movwf	___flmul@a+2
  6018  1520  084E               	movf	_fround$1000+1,w
  6019  1521  00A9               	movwf	___flmul@a+1
  6020  1522  084D               	movf	_fround$1000,w
  6021  1523  00A8               	movwf	___flmul@a
  6022  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  6023  1529  1283               	bcf	3,5	;RP0=0, select bank0
  6024  152A  1303               	bcf	3,6	;RP1=0, select bank0
  6025  152B  0827               	movf	?___flmul+3,w
  6026  152C  00C1               	movwf	?_fround+3
  6027  152D  0826               	movf	?___flmul+2,w
  6028  152E  00C0               	movwf	?_fround+2
  6029  152F  0825               	movf	?___flmul+1,w
  6030  1530  00BF               	movwf	?_fround+1
  6031  1531  0824               	movf	?___flmul,w
  6032  1532  00BE               	movwf	?_fround
  6033  1533  2D77               	goto	l302
  6034  1534                     l2947:
  6035                           
  6036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  6037  1534  303F               	movlw	63
  6038  1535  00A7               	movwf	___flmul@b+3
  6039  1536  3000               	movlw	0
  6040  1537  00A6               	movwf	___flmul@b+2
  6041  1538  3000               	movlw	0
  6042  1539  00A5               	movwf	___flmul@b+1
  6043  153A  3000               	movlw	0
  6044  153B  00A4               	movwf	___flmul@b
  6045  153C  0851               	movf	fround@prec,w
  6046  153D  00C2               	movwf	??_fround
  6047  153E  3001               	movlw	1
  6048  153F                     u4315:
  6049  153F  1003               	clrc
  6050  1540  0DC2               	rlf	??_fround,f
  6051  1541  3EFF               	addlw	-1
  6052  1542  1D03               	skipz
  6053  1543  2D3F               	goto	u4315
  6054  1544  1003               	clrc
  6055  1545  0D42               	rlf	??_fround,w
  6056  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6057  1547  0084               	movwf	4
  6058  1548  160A  158A  2000  160A  118A  	fcall	stringdir
  6059  154D  00C3               	movwf	??_fround+1
  6060  154E  160A  158A  2000  160A  118A  	fcall	stringdir
  6061  1553  00C4               	movwf	??_fround+2
  6062  1554  160A  158A  2000  160A  118A  	fcall	stringdir
  6063  1559  00C5               	movwf	??_fround+3
  6064  155A  160A  158A  2000  160A  118A  	fcall	stringdir
  6065  155F  00C6               	movwf	??_fround+4
  6066  1560  0846               	movf	??_fround+4,w
  6067  1561  00AB               	movwf	___flmul@a+3
  6068  1562  0845               	movf	??_fround+3,w
  6069  1563  00AA               	movwf	___flmul@a+2
  6070  1564  0844               	movf	??_fround+2,w
  6071  1565  00A9               	movwf	___flmul@a+1
  6072  1566  0843               	movf	??_fround+1,w
  6073  1567  00A8               	movwf	___flmul@a
  6074  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  6075  156D  1283               	bcf	3,5	;RP0=0, select bank0
  6076  156E  1303               	bcf	3,6	;RP1=0, select bank0
  6077  156F  0827               	movf	?___flmul+3,w
  6078  1570  00C1               	movwf	?_fround+3
  6079  1571  0826               	movf	?___flmul+2,w
  6080  1572  00C0               	movwf	?_fround+2
  6081  1573  0825               	movf	?___flmul+1,w
  6082  1574  00BF               	movwf	?_fround+1
  6083  1575  0824               	movf	?___flmul,w
  6084  1576  00BE               	movwf	?_fround
  6085  1577                     l302:
  6086  1577  0008               	return
  6087  1578                     __end_of_fround:
  6088                           
  6089                           	psect	text14
  6090  1AE7                     __ptext14:	
  6091 ;; *************** function ___lwmod *****************
  6092 ;; Defined at:
  6093 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  divisor         2    0[COMMON] unsigned int 
  6096 ;;  dividend        2    2[COMMON] unsigned int 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  counter         1    5[COMMON] unsigned char 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  2    0[COMMON] unsigned int 
  6101 ;; Registers used:
  6102 ;;		wreg, status,2, status,0
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6108 ;;      Params:         4       0       0       0       0
  6109 ;;      Locals:         1       0       0       0       0
  6110 ;;      Temps:          1       0       0       0       0
  6111 ;;      Totals:         6       0       0       0       0
  6112 ;;Total ram usage:        6 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; This function calls:
  6115 ;;		Nothing
  6116 ;; This function is called by:
  6117 ;;		_fround
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           
  6122                           ;psect for function ___lwmod
  6123  1AE7                     ___lwmod:
  6124  1AE7                     l2577:	
  6125                           ;incstack = 0
  6126                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6127                           
  6128  1AE7  0870               	movf	___lwmod@divisor,w
  6129  1AE8  0471               	iorwf	___lwmod@divisor+1,w
  6130  1AE9  1903               	btfsc	3,2
  6131  1AEA  2AEC               	goto	u3351
  6132  1AEB  2AED               	goto	u3350
  6133  1AEC                     u3351:
  6134  1AEC  2B1C               	goto	l2595
  6135  1AED                     u3350:
  6136  1AED                     l2579:
  6137  1AED  01F5               	clrf	___lwmod@counter
  6138  1AEE  0AF5               	incf	___lwmod@counter,f
  6139  1AEF  2AFB               	goto	l2585
  6140  1AF0                     l2581:
  6141  1AF0  3001               	movlw	1
  6142  1AF1                     u3365:
  6143  1AF1  1003               	clrc
  6144  1AF2  0DF0               	rlf	___lwmod@divisor,f
  6145  1AF3  0DF1               	rlf	___lwmod@divisor+1,f
  6146  1AF4  3EFF               	addlw	-1
  6147  1AF5  1D03               	skipz
  6148  1AF6  2AF1               	goto	u3365
  6149  1AF7                     l2583:
  6150  1AF7  3001               	movlw	1
  6151  1AF8  00F4               	movwf	??___lwmod
  6152  1AF9  0874               	movf	??___lwmod,w
  6153  1AFA  07F5               	addwf	___lwmod@counter,f
  6154  1AFB                     l2585:
  6155  1AFB  1FF1               	btfss	___lwmod@divisor+1,7
  6156  1AFC  2AFE               	goto	u3371
  6157  1AFD  2AFF               	goto	u3370
  6158  1AFE                     u3371:
  6159  1AFE  2AF0               	goto	l2581
  6160  1AFF                     u3370:
  6161  1AFF                     l2587:
  6162  1AFF  0871               	movf	___lwmod@divisor+1,w
  6163  1B00  0273               	subwf	___lwmod@dividend+1,w
  6164  1B01  1D03               	skipz
  6165  1B02  2B05               	goto	u3385
  6166  1B03  0870               	movf	___lwmod@divisor,w
  6167  1B04  0272               	subwf	___lwmod@dividend,w
  6168  1B05                     u3385:
  6169  1B05  1C03               	skipc
  6170  1B06  2B08               	goto	u3381
  6171  1B07  2B09               	goto	u3380
  6172  1B08                     u3381:
  6173  1B08  2B0F               	goto	l2591
  6174  1B09                     u3380:
  6175  1B09                     l2589:
  6176  1B09  0870               	movf	___lwmod@divisor,w
  6177  1B0A  02F2               	subwf	___lwmod@dividend,f
  6178  1B0B  0871               	movf	___lwmod@divisor+1,w
  6179  1B0C  1C03               	skipc
  6180  1B0D  03F3               	decf	___lwmod@dividend+1,f
  6181  1B0E  02F3               	subwf	___lwmod@dividend+1,f
  6182  1B0F                     l2591:
  6183  1B0F  3001               	movlw	1
  6184  1B10                     u3395:
  6185  1B10  1003               	clrc
  6186  1B11  0CF1               	rrf	___lwmod@divisor+1,f
  6187  1B12  0CF0               	rrf	___lwmod@divisor,f
  6188  1B13  3EFF               	addlw	-1
  6189  1B14  1D03               	skipz
  6190  1B15  2B10               	goto	u3395
  6191  1B16                     l2593:
  6192  1B16  3001               	movlw	1
  6193  1B17  02F5               	subwf	___lwmod@counter,f
  6194  1B18  1D03               	btfss	3,2
  6195  1B19  2B1B               	goto	u3401
  6196  1B1A  2B1C               	goto	u3400
  6197  1B1B                     u3401:
  6198  1B1B  2AFF               	goto	l2587
  6199  1B1C                     u3400:
  6200  1B1C                     l2595:
  6201  1B1C  0873               	movf	___lwmod@dividend+1,w
  6202  1B1D  00F1               	movwf	?___lwmod+1
  6203  1B1E  0872               	movf	___lwmod@dividend,w
  6204  1B1F  00F0               	movwf	?___lwmod
  6205  1B20                     l712:
  6206  1B20  0008               	return
  6207  1B21                     __end_of___lwmod:
  6208                           
  6209                           	psect	text15
  6210  1B21                     __ptext15:	
  6211 ;; *************** function ___lwdiv *****************
  6212 ;; Defined at:
  6213 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  divisor         2    6[COMMON] unsigned int 
  6216 ;;  dividend        2    8[COMMON] unsigned int 
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;  quotient        2   11[COMMON] unsigned int 
  6219 ;;  counter         1   13[COMMON] unsigned char 
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  2    6[COMMON] unsigned int 
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, status,0
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6229 ;;      Params:         4       0       0       0       0
  6230 ;;      Locals:         3       0       0       0       0
  6231 ;;      Temps:          1       0       0       0       0
  6232 ;;      Totals:         8       0       0       0       0
  6233 ;;Total ram usage:        8 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; This function calls:
  6236 ;;		Nothing
  6237 ;; This function is called by:
  6238 ;;		_fround
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           
  6243                           ;psect for function ___lwdiv
  6244  1B21                     ___lwdiv:
  6245  1B21                     l2551:	
  6246                           ;incstack = 0
  6247                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6248                           
  6249  1B21  01FB               	clrf	___lwdiv@quotient
  6250  1B22  01FC               	clrf	___lwdiv@quotient+1
  6251  1B23                     l2553:
  6252  1B23  0876               	movf	___lwdiv@divisor,w
  6253  1B24  0477               	iorwf	___lwdiv@divisor+1,w
  6254  1B25  1903               	btfsc	3,2
  6255  1B26  2B28               	goto	u3281
  6256  1B27  2B29               	goto	u3280
  6257  1B28                     u3281:
  6258  1B28  2B60               	goto	l2573
  6259  1B29                     u3280:
  6260  1B29                     l2555:
  6261  1B29  01FD               	clrf	___lwdiv@counter
  6262  1B2A  0AFD               	incf	___lwdiv@counter,f
  6263  1B2B  2B37               	goto	l2561
  6264  1B2C                     l2557:
  6265  1B2C  3001               	movlw	1
  6266  1B2D                     u3295:
  6267  1B2D  1003               	clrc
  6268  1B2E  0DF6               	rlf	___lwdiv@divisor,f
  6269  1B2F  0DF7               	rlf	___lwdiv@divisor+1,f
  6270  1B30  3EFF               	addlw	-1
  6271  1B31  1D03               	skipz
  6272  1B32  2B2D               	goto	u3295
  6273  1B33                     l2559:
  6274  1B33  3001               	movlw	1
  6275  1B34  00FA               	movwf	??___lwdiv
  6276  1B35  087A               	movf	??___lwdiv,w
  6277  1B36  07FD               	addwf	___lwdiv@counter,f
  6278  1B37                     l2561:
  6279  1B37  1FF7               	btfss	___lwdiv@divisor+1,7
  6280  1B38  2B3A               	goto	u3301
  6281  1B39  2B3B               	goto	u3300
  6282  1B3A                     u3301:
  6283  1B3A  2B2C               	goto	l2557
  6284  1B3B                     u3300:
  6285  1B3B                     l2563:
  6286  1B3B  3001               	movlw	1
  6287  1B3C                     u3315:
  6288  1B3C  1003               	clrc
  6289  1B3D  0DFB               	rlf	___lwdiv@quotient,f
  6290  1B3E  0DFC               	rlf	___lwdiv@quotient+1,f
  6291  1B3F  3EFF               	addlw	-1
  6292  1B40  1D03               	skipz
  6293  1B41  2B3C               	goto	u3315
  6294  1B42  0877               	movf	___lwdiv@divisor+1,w
  6295  1B43  0279               	subwf	___lwdiv@dividend+1,w
  6296  1B44  1D03               	skipz
  6297  1B45  2B48               	goto	u3325
  6298  1B46  0876               	movf	___lwdiv@divisor,w
  6299  1B47  0278               	subwf	___lwdiv@dividend,w
  6300  1B48                     u3325:
  6301  1B48  1C03               	skipc
  6302  1B49  2B4B               	goto	u3321
  6303  1B4A  2B4C               	goto	u3320
  6304  1B4B                     u3321:
  6305  1B4B  2B53               	goto	l2569
  6306  1B4C                     u3320:
  6307  1B4C                     l2565:
  6308  1B4C  0876               	movf	___lwdiv@divisor,w
  6309  1B4D  02F8               	subwf	___lwdiv@dividend,f
  6310  1B4E  0877               	movf	___lwdiv@divisor+1,w
  6311  1B4F  1C03               	skipc
  6312  1B50  03F9               	decf	___lwdiv@dividend+1,f
  6313  1B51  02F9               	subwf	___lwdiv@dividend+1,f
  6314  1B52                     l2567:
  6315  1B52  147B               	bsf	___lwdiv@quotient,0
  6316  1B53                     l2569:
  6317  1B53  3001               	movlw	1
  6318  1B54                     u3335:
  6319  1B54  1003               	clrc
  6320  1B55  0CF7               	rrf	___lwdiv@divisor+1,f
  6321  1B56  0CF6               	rrf	___lwdiv@divisor,f
  6322  1B57  3EFF               	addlw	-1
  6323  1B58  1D03               	skipz
  6324  1B59  2B54               	goto	u3335
  6325  1B5A                     l2571:
  6326  1B5A  3001               	movlw	1
  6327  1B5B  02FD               	subwf	___lwdiv@counter,f
  6328  1B5C  1D03               	btfss	3,2
  6329  1B5D  2B5F               	goto	u3341
  6330  1B5E  2B60               	goto	u3340
  6331  1B5F                     u3341:
  6332  1B5F  2B3B               	goto	l2563
  6333  1B60                     u3340:
  6334  1B60                     l2573:
  6335  1B60  087C               	movf	___lwdiv@quotient+1,w
  6336  1B61  00F7               	movwf	?___lwdiv+1
  6337  1B62  087B               	movf	___lwdiv@quotient,w
  6338  1B63  00F6               	movwf	?___lwdiv
  6339  1B64                     l702:
  6340  1B64  0008               	return
  6341  1B65                     __end_of___lwdiv:
  6342                           
  6343                           	psect	text16
  6344  10D3                     __ptext16:	
  6345 ;; *************** function __tdiv_to_l_ *****************
  6346 ;; Defined at:
  6347 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  f1              4    0[COMMON] float 
  6350 ;;  f2              4    4[COMMON] float 
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;  quot            4    0[BANK0 ] unsigned long 
  6353 ;;  exp1            1    5[BANK0 ] unsigned char 
  6354 ;;  cntr            1    4[BANK0 ] unsigned char 
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  4    0[COMMON] unsigned long 
  6357 ;; Registers used:
  6358 ;;		wreg, status,2, status,0
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6364 ;;      Params:         8       0       0       0       0
  6365 ;;      Locals:         0       6       0       0       0
  6366 ;;      Temps:          4       0       0       0       0
  6367 ;;      Totals:        12       6       0       0       0
  6368 ;;Total ram usage:       18 bytes
  6369 ;; Hardware stack levels used:    1
  6370 ;; This function calls:
  6371 ;;		Nothing
  6372 ;; This function is called by:
  6373 ;;		_sprintf
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           
  6378                           ;psect for function __tdiv_to_l_
  6379  10D3                     __tdiv_to_l_:
  6380  10D3                     l3003:	
  6381                           ;incstack = 0
  6382                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6383                           
  6384  10D3  0870               	movf	__tdiv_to_l_@f1,w
  6385  10D4  00F8               	movwf	??__tdiv_to_l_
  6386  10D5  0871               	movf	__tdiv_to_l_@f1+1,w
  6387  10D6  00F9               	movwf	??__tdiv_to_l_+1
  6388  10D7  0872               	movf	__tdiv_to_l_@f1+2,w
  6389  10D8  00FA               	movwf	??__tdiv_to_l_+2
  6390  10D9  1003               	clrc
  6391  10DA  0D79               	rlf	??__tdiv_to_l_+1,w
  6392  10DB  0D7A               	rlf	??__tdiv_to_l_+2,w
  6393  10DC  00FB               	movwf	??__tdiv_to_l_+3
  6394  10DD  087B               	movf	??__tdiv_to_l_+3,w
  6395  10DE  1283               	bcf	3,5	;RP0=0, select bank0
  6396  10DF  1303               	bcf	3,6	;RP1=0, select bank0
  6397  10E0  00A5               	movwf	__tdiv_to_l_@exp1
  6398  10E1  0825               	movf	__tdiv_to_l_@exp1,w
  6399  10E2  1D03               	btfss	3,2
  6400  10E3  28E5               	goto	u4511
  6401  10E4  28E6               	goto	u4510
  6402  10E5                     u4511:
  6403  10E5  28EF               	goto	l3009
  6404  10E6                     u4510:
  6405  10E6                     l3005:
  6406  10E6  3000               	movlw	0
  6407  10E7  00F3               	movwf	?__tdiv_to_l_+3
  6408  10E8  3000               	movlw	0
  6409  10E9  00F2               	movwf	?__tdiv_to_l_+2
  6410  10EA  3000               	movlw	0
  6411  10EB  00F1               	movwf	?__tdiv_to_l_+1
  6412  10EC  3000               	movlw	0
  6413  10ED  00F0               	movwf	?__tdiv_to_l_
  6414  10EE  298F               	goto	l613
  6415  10EF                     l3009:
  6416  10EF  0874               	movf	__tdiv_to_l_@f2,w
  6417  10F0  00F8               	movwf	??__tdiv_to_l_
  6418  10F1  0875               	movf	__tdiv_to_l_@f2+1,w
  6419  10F2  00F9               	movwf	??__tdiv_to_l_+1
  6420  10F3  0876               	movf	__tdiv_to_l_@f2+2,w
  6421  10F4  00FA               	movwf	??__tdiv_to_l_+2
  6422  10F5  1003               	clrc
  6423  10F6  0D79               	rlf	??__tdiv_to_l_+1,w
  6424  10F7  0D7A               	rlf	??__tdiv_to_l_+2,w
  6425  10F8  00FB               	movwf	??__tdiv_to_l_+3
  6426  10F9  087B               	movf	??__tdiv_to_l_+3,w
  6427  10FA  00A4               	movwf	__tdiv_to_l_@cntr
  6428  10FB  0824               	movf	__tdiv_to_l_@cntr,w
  6429  10FC  1D03               	btfss	3,2
  6430  10FD  28FF               	goto	u4521
  6431  10FE  2900               	goto	u4520
  6432  10FF                     u4521:
  6433  10FF  2901               	goto	l614
  6434  1100                     u4520:
  6435  1100  28E6               	goto	l3005
  6436  1101                     l614:
  6437  1101  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6438  1102                     l3015:
  6439  1102  30FF               	movlw	255
  6440  1103  05F0               	andwf	__tdiv_to_l_@f1,f
  6441  1104  30FF               	movlw	255
  6442  1105  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6443  1106  3000               	movlw	0
  6444  1107  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6445  1108                     l3017:
  6446  1108  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6447  1109  30FF               	movlw	255
  6448  110A  05F4               	andwf	__tdiv_to_l_@f2,f
  6449  110B  30FF               	movlw	255
  6450  110C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6451  110D  3000               	movlw	0
  6452  110E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6453  110F  3000               	movlw	0
  6454  1110  00A3               	movwf	__tdiv_to_l_@quot+3
  6455  1111  3000               	movlw	0
  6456  1112  00A2               	movwf	__tdiv_to_l_@quot+2
  6457  1113  3000               	movlw	0
  6458  1114  00A1               	movwf	__tdiv_to_l_@quot+1
  6459  1115  3000               	movlw	0
  6460  1116  00A0               	movwf	__tdiv_to_l_@quot
  6461  1117                     l3019:
  6462  1117  307F               	movlw	127
  6463  1118  02A5               	subwf	__tdiv_to_l_@exp1,f
  6464  1119                     l3021:
  6465  1119  3098               	movlw	152
  6466  111A  0724               	addwf	__tdiv_to_l_@cntr,w
  6467  111B  00F8               	movwf	??__tdiv_to_l_
  6468  111C  0878               	movf	??__tdiv_to_l_,w
  6469  111D  02A5               	subwf	__tdiv_to_l_@exp1,f
  6470  111E  3018               	movlw	24
  6471  111F  00F8               	movwf	??__tdiv_to_l_
  6472  1120  0878               	movf	??__tdiv_to_l_,w
  6473  1121  00A4               	movwf	__tdiv_to_l_@cntr
  6474  1122                     l3023:
  6475  1122  3001               	movlw	1
  6476  1123  00F8               	movwf	??__tdiv_to_l_
  6477  1124                     u4535:
  6478  1124  1003               	clrc
  6479  1125  0DA0               	rlf	__tdiv_to_l_@quot,f
  6480  1126  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6481  1127  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6482  1128  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6483  1129  0BF8               	decfsz	??__tdiv_to_l_,f
  6484  112A  2924               	goto	u4535
  6485  112B                     l3025:
  6486  112B  0876               	movf	__tdiv_to_l_@f2+2,w
  6487  112C  0272               	subwf	__tdiv_to_l_@f1+2,w
  6488  112D  1D03               	skipz
  6489  112E  2935               	goto	u4545
  6490  112F  0875               	movf	__tdiv_to_l_@f2+1,w
  6491  1130  0271               	subwf	__tdiv_to_l_@f1+1,w
  6492  1131  1D03               	skipz
  6493  1132  2935               	goto	u4545
  6494  1133  0874               	movf	__tdiv_to_l_@f2,w
  6495  1134  0270               	subwf	__tdiv_to_l_@f1,w
  6496  1135                     u4545:
  6497  1135  1C03               	skipc
  6498  1136  2938               	goto	u4541
  6499  1137  2939               	goto	u4540
  6500  1138                     u4541:
  6501  1138  2944               	goto	l3031
  6502  1139                     u4540:
  6503  1139                     l3027:
  6504  1139  0874               	movf	__tdiv_to_l_@f2,w
  6505  113A  02F0               	subwf	__tdiv_to_l_@f1,f
  6506  113B  0875               	movf	__tdiv_to_l_@f2+1,w
  6507  113C  1C03               	skipc
  6508  113D  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6509  113E  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6510  113F  0876               	movf	__tdiv_to_l_@f2+2,w
  6511  1140  1C03               	skipc
  6512  1141  0A76               	incf	__tdiv_to_l_@f2+2,w
  6513  1142  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6514  1143                     l3029:
  6515  1143  1420               	bsf	__tdiv_to_l_@quot,0
  6516  1144                     l3031:
  6517  1144  3001               	movlw	1
  6518  1145                     u4555:
  6519  1145  1003               	clrc
  6520  1146  0DF0               	rlf	__tdiv_to_l_@f1,f
  6521  1147  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6522  1148  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6523  1149  3EFF               	addlw	-1
  6524  114A  1D03               	skipz
  6525  114B  2945               	goto	u4555
  6526  114C                     l3033:
  6527  114C  3001               	movlw	1
  6528  114D  02A4               	subwf	__tdiv_to_l_@cntr,f
  6529  114E  1D03               	btfss	3,2
  6530  114F  2951               	goto	u4561
  6531  1150  2952               	goto	u4560
  6532  1151                     u4561:
  6533  1151  2922               	goto	l3023
  6534  1152                     u4560:
  6535  1152                     l617:
  6536  1152  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6537  1153  2955               	goto	u4571
  6538  1154  2956               	goto	u4570
  6539  1155                     u4571:
  6540  1155  2970               	goto	l3043
  6541  1156                     u4570:
  6542  1156                     l3035:
  6543  1156  0825               	movf	__tdiv_to_l_@exp1,w
  6544  1157  3A80               	xorlw	128
  6545  1158  3E97               	addlw	151
  6546  1159  1803               	skipnc
  6547  115A  295C               	goto	u4581
  6548  115B  295D               	goto	u4580
  6549  115C                     u4581:
  6550  115C  295E               	goto	l3041
  6551  115D                     u4580:
  6552  115D  28E6               	goto	l3005
  6553  115E                     l3041:
  6554  115E  3001               	movlw	1
  6555  115F                     u4595:
  6556  115F  1003               	clrc
  6557  1160  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6558  1161  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6559  1162  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6560  1163  0CA0               	rrf	__tdiv_to_l_@quot,f
  6561  1164  3EFF               	addlw	-1
  6562  1165  1D03               	skipz
  6563  1166  295F               	goto	u4595
  6564  1167  3001               	movlw	1
  6565  1168  00F8               	movwf	??__tdiv_to_l_
  6566  1169  0878               	movf	??__tdiv_to_l_,w
  6567  116A  07A5               	addwf	__tdiv_to_l_@exp1,f
  6568  116B  1D03               	btfss	3,2
  6569  116C  296E               	goto	u4601
  6570  116D  296F               	goto	u4600
  6571  116E                     u4601:
  6572  116E  295E               	goto	l3041
  6573  116F                     u4600:
  6574  116F  2987               	goto	l3051
  6575  1170                     l3043:
  6576  1170  3018               	movlw	24
  6577  1171  0225               	subwf	__tdiv_to_l_@exp1,w
  6578  1172  1C03               	skipc
  6579  1173  2975               	goto	u4611
  6580  1174  2976               	goto	u4610
  6581  1175                     u4611:
  6582  1175  2982               	goto	l624
  6583  1176                     u4610:
  6584  1176  28E6               	goto	l3005
  6585  1177                     l3049:
  6586  1177  3001               	movlw	1
  6587  1178  00F8               	movwf	??__tdiv_to_l_
  6588  1179                     u4625:
  6589  1179  1003               	clrc
  6590  117A  0DA0               	rlf	__tdiv_to_l_@quot,f
  6591  117B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6592  117C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6593  117D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6594  117E  0BF8               	decfsz	??__tdiv_to_l_,f
  6595  117F  2979               	goto	u4625
  6596  1180  3001               	movlw	1
  6597  1181  02A5               	subwf	__tdiv_to_l_@exp1,f
  6598  1182                     l624:
  6599  1182  0825               	movf	__tdiv_to_l_@exp1,w
  6600  1183  1D03               	btfss	3,2
  6601  1184  2986               	goto	u4631
  6602  1185  2987               	goto	u4630
  6603  1186                     u4631:
  6604  1186  2977               	goto	l3049
  6605  1187                     u4630:
  6606  1187                     l3051:
  6607  1187  0823               	movf	__tdiv_to_l_@quot+3,w
  6608  1188  00F3               	movwf	?__tdiv_to_l_+3
  6609  1189  0822               	movf	__tdiv_to_l_@quot+2,w
  6610  118A  00F2               	movwf	?__tdiv_to_l_+2
  6611  118B  0821               	movf	__tdiv_to_l_@quot+1,w
  6612  118C  00F1               	movwf	?__tdiv_to_l_+1
  6613  118D  0820               	movf	__tdiv_to_l_@quot,w
  6614  118E  00F0               	movwf	?__tdiv_to_l_
  6615  118F                     l613:
  6616  118F  0008               	return
  6617  1190                     __end_of__tdiv_to_l_:
  6618                           
  6619                           	psect	text17
  6620  0882                     __ptext17:	
  6621 ;; *************** function __div_to_l_ *****************
  6622 ;; Defined at:
  6623 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;  f1              4    0[COMMON] unsigned long 
  6626 ;;  f2              4    4[COMMON] unsigned long 
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;  quot            4    0[BANK0 ] unsigned long 
  6629 ;;  exp1            1    5[BANK0 ] unsigned char 
  6630 ;;  cntr            1    4[BANK0 ] unsigned char 
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  4    0[COMMON] unsigned long 
  6633 ;; Registers used:
  6634 ;;		wreg, status,2, status,0
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6640 ;;      Params:         8       0       0       0       0
  6641 ;;      Locals:         0       6       0       0       0
  6642 ;;      Temps:          1       0       0       0       0
  6643 ;;      Totals:         9       6       0       0       0
  6644 ;;Total ram usage:       15 bytes
  6645 ;; Hardware stack levels used:    1
  6646 ;; This function calls:
  6647 ;;		Nothing
  6648 ;; This function is called by:
  6649 ;;		_sprintf
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           
  6654                           ;psect for function __div_to_l_
  6655  0882                     __div_to_l_:
  6656  0882                     l3055:	
  6657                           ;incstack = 0
  6658                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6659                           
  6660  0882  1003               	clrc
  6661  0883  0D72               	rlf	__div_to_l_@f1+2,w
  6662  0884  0D73               	rlf	__div_to_l_@f1+3,w
  6663  0885  00F8               	movwf	??__div_to_l_
  6664  0886  0878               	movf	??__div_to_l_,w
  6665  0887  1283               	bcf	3,5	;RP0=0, select bank0
  6666  0888  1303               	bcf	3,6	;RP1=0, select bank0
  6667  0889  00A5               	movwf	__div_to_l_@exp1
  6668  088A  0825               	movf	__div_to_l_@exp1,w
  6669  088B  1D03               	btfss	3,2
  6670  088C  288E               	goto	u4641
  6671  088D  288F               	goto	u4640
  6672  088E                     u4641:
  6673  088E  2898               	goto	l3061
  6674  088F                     u4640:
  6675  088F                     l3057:
  6676  088F  3000               	movlw	0
  6677  0890  00F3               	movwf	?__div_to_l_+3
  6678  0891  3000               	movlw	0
  6679  0892  00F2               	movwf	?__div_to_l_+2
  6680  0893  3000               	movlw	0
  6681  0894  00F1               	movwf	?__div_to_l_+1
  6682  0895  3000               	movlw	0
  6683  0896  00F0               	movwf	?__div_to_l_
  6684  0897  293F               	goto	l566
  6685  0898                     l3061:
  6686  0898  1003               	clrc
  6687  0899  0D76               	rlf	__div_to_l_@f2+2,w
  6688  089A  0D77               	rlf	__div_to_l_@f2+3,w
  6689  089B  00F8               	movwf	??__div_to_l_
  6690  089C  0878               	movf	??__div_to_l_,w
  6691  089D  00A4               	movwf	__div_to_l_@cntr
  6692  089E  0824               	movf	__div_to_l_@cntr,w
  6693  089F  1D03               	btfss	3,2
  6694  08A0  28A2               	goto	u4651
  6695  08A1  28A3               	goto	u4650
  6696  08A2                     u4651:
  6697  08A2  28A4               	goto	l567
  6698  08A3                     u4650:
  6699  08A3  288F               	goto	l3057
  6700  08A4                     l567:
  6701  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  6702  08A5                     l3067:
  6703  08A5  30FF               	movlw	255
  6704  08A6  05F0               	andwf	__div_to_l_@f1,f
  6705  08A7  30FF               	movlw	255
  6706  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  6707  08A9  30FF               	movlw	255
  6708  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  6709  08AB  3000               	movlw	0
  6710  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  6711  08AD                     l3069:
  6712  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  6713  08AE  30FF               	movlw	255
  6714  08AF  05F4               	andwf	__div_to_l_@f2,f
  6715  08B0  30FF               	movlw	255
  6716  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  6717  08B2  30FF               	movlw	255
  6718  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  6719  08B4  3000               	movlw	0
  6720  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  6721  08B6  3000               	movlw	0
  6722  08B7  00A3               	movwf	__div_to_l_@quot+3
  6723  08B8  3000               	movlw	0
  6724  08B9  00A2               	movwf	__div_to_l_@quot+2
  6725  08BA  3000               	movlw	0
  6726  08BB  00A1               	movwf	__div_to_l_@quot+1
  6727  08BC  3000               	movlw	0
  6728  08BD  00A0               	movwf	__div_to_l_@quot
  6729  08BE                     l3071:
  6730  08BE  307F               	movlw	127
  6731  08BF  02A5               	subwf	__div_to_l_@exp1,f
  6732  08C0                     l3073:
  6733  08C0  30A0               	movlw	160
  6734  08C1  0724               	addwf	__div_to_l_@cntr,w
  6735  08C2  00F8               	movwf	??__div_to_l_
  6736  08C3  0878               	movf	??__div_to_l_,w
  6737  08C4  02A5               	subwf	__div_to_l_@exp1,f
  6738  08C5  3020               	movlw	32
  6739  08C6  00F8               	movwf	??__div_to_l_
  6740  08C7  0878               	movf	??__div_to_l_,w
  6741  08C8  00A4               	movwf	__div_to_l_@cntr
  6742  08C9                     l3075:
  6743  08C9  3001               	movlw	1
  6744  08CA  00F8               	movwf	??__div_to_l_
  6745  08CB                     u4665:
  6746  08CB  1003               	clrc
  6747  08CC  0DA0               	rlf	__div_to_l_@quot,f
  6748  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  6749  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  6750  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  6751  08D0  0BF8               	decfsz	??__div_to_l_,f
  6752  08D1  28CB               	goto	u4665
  6753  08D2                     l3077:
  6754  08D2  0877               	movf	__div_to_l_@f2+3,w
  6755  08D3  0273               	subwf	__div_to_l_@f1+3,w
  6756  08D4  1D03               	skipz
  6757  08D5  28E0               	goto	u4675
  6758  08D6  0876               	movf	__div_to_l_@f2+2,w
  6759  08D7  0272               	subwf	__div_to_l_@f1+2,w
  6760  08D8  1D03               	skipz
  6761  08D9  28E0               	goto	u4675
  6762  08DA  0875               	movf	__div_to_l_@f2+1,w
  6763  08DB  0271               	subwf	__div_to_l_@f1+1,w
  6764  08DC  1D03               	skipz
  6765  08DD  28E0               	goto	u4675
  6766  08DE  0874               	movf	__div_to_l_@f2,w
  6767  08DF  0270               	subwf	__div_to_l_@f1,w
  6768  08E0                     u4675:
  6769  08E0  1C03               	skipc
  6770  08E1  28E3               	goto	u4671
  6771  08E2  28E4               	goto	u4670
  6772  08E3                     u4671:
  6773  08E3  28F3               	goto	l3083
  6774  08E4                     u4670:
  6775  08E4                     l3079:
  6776  08E4  0874               	movf	__div_to_l_@f2,w
  6777  08E5  02F0               	subwf	__div_to_l_@f1,f
  6778  08E6  0875               	movf	__div_to_l_@f2+1,w
  6779  08E7  1C03               	skipc
  6780  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  6781  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  6782  08EA  0876               	movf	__div_to_l_@f2+2,w
  6783  08EB  1C03               	skipc
  6784  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  6785  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  6786  08EE  0877               	movf	__div_to_l_@f2+3,w
  6787  08EF  1C03               	skipc
  6788  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  6789  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  6790  08F2                     l3081:
  6791  08F2  1420               	bsf	__div_to_l_@quot,0
  6792  08F3                     l3083:
  6793  08F3  3001               	movlw	1
  6794  08F4  00F8               	movwf	??__div_to_l_
  6795  08F5                     u4685:
  6796  08F5  1003               	clrc
  6797  08F6  0DF0               	rlf	__div_to_l_@f1,f
  6798  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  6799  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  6800  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  6801  08FA  0BF8               	decfsz	??__div_to_l_,f
  6802  08FB  28F5               	goto	u4685
  6803  08FC                     l3085:
  6804  08FC  3001               	movlw	1
  6805  08FD  02A4               	subwf	__div_to_l_@cntr,f
  6806  08FE  1D03               	btfss	3,2
  6807  08FF  2901               	goto	u4691
  6808  0900  2902               	goto	u4690
  6809  0901                     u4691:
  6810  0901  28C9               	goto	l3075
  6811  0902                     u4690:
  6812  0902                     l570:
  6813  0902  1FA5               	btfss	__div_to_l_@exp1,7
  6814  0903  2905               	goto	u4701
  6815  0904  2906               	goto	u4700
  6816  0905                     u4701:
  6817  0905  2920               	goto	l3095
  6818  0906                     u4700:
  6819  0906                     l3087:
  6820  0906  0825               	movf	__div_to_l_@exp1,w
  6821  0907  3A80               	xorlw	128
  6822  0908  3E9F               	addlw	159
  6823  0909  1803               	skipnc
  6824  090A  290C               	goto	u4711
  6825  090B  290D               	goto	u4710
  6826  090C                     u4711:
  6827  090C  290E               	goto	l3093
  6828  090D                     u4710:
  6829  090D  288F               	goto	l3057
  6830  090E                     l3093:
  6831  090E  3001               	movlw	1
  6832  090F                     u4725:
  6833  090F  1003               	clrc
  6834  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  6835  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  6836  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  6837  0913  0CA0               	rrf	__div_to_l_@quot,f
  6838  0914  3EFF               	addlw	-1
  6839  0915  1D03               	skipz
  6840  0916  290F               	goto	u4725
  6841  0917  3001               	movlw	1
  6842  0918  00F8               	movwf	??__div_to_l_
  6843  0919  0878               	movf	??__div_to_l_,w
  6844  091A  07A5               	addwf	__div_to_l_@exp1,f
  6845  091B  1D03               	btfss	3,2
  6846  091C  291E               	goto	u4731
  6847  091D  291F               	goto	u4730
  6848  091E                     u4731:
  6849  091E  290E               	goto	l3093
  6850  091F                     u4730:
  6851  091F  2937               	goto	l3103
  6852  0920                     l3095:
  6853  0920  3020               	movlw	32
  6854  0921  0225               	subwf	__div_to_l_@exp1,w
  6855  0922  1C03               	skipc
  6856  0923  2925               	goto	u4741
  6857  0924  2926               	goto	u4740
  6858  0925                     u4741:
  6859  0925  2932               	goto	l577
  6860  0926                     u4740:
  6861  0926  288F               	goto	l3057
  6862  0927                     l3101:
  6863  0927  3001               	movlw	1
  6864  0928  00F8               	movwf	??__div_to_l_
  6865  0929                     u4755:
  6866  0929  1003               	clrc
  6867  092A  0DA0               	rlf	__div_to_l_@quot,f
  6868  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  6869  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  6870  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  6871  092E  0BF8               	decfsz	??__div_to_l_,f
  6872  092F  2929               	goto	u4755
  6873  0930  3001               	movlw	1
  6874  0931  02A5               	subwf	__div_to_l_@exp1,f
  6875  0932                     l577:
  6876  0932  0825               	movf	__div_to_l_@exp1,w
  6877  0933  1D03               	btfss	3,2
  6878  0934  2936               	goto	u4761
  6879  0935  2937               	goto	u4760
  6880  0936                     u4761:
  6881  0936  2927               	goto	l3101
  6882  0937                     u4760:
  6883  0937                     l3103:
  6884  0937  0823               	movf	__div_to_l_@quot+3,w
  6885  0938  00F3               	movwf	?__div_to_l_+3
  6886  0939  0822               	movf	__div_to_l_@quot+2,w
  6887  093A  00F2               	movwf	?__div_to_l_+2
  6888  093B  0821               	movf	__div_to_l_@quot+1,w
  6889  093C  00F1               	movwf	?__div_to_l_+1
  6890  093D  0820               	movf	__div_to_l_@quot,w
  6891  093E  00F0               	movwf	?__div_to_l_
  6892  093F                     l566:
  6893  093F  0008               	return
  6894  0940                     __end_of__div_to_l_:
  6895                           
  6896                           	psect	text18
  6897  1A13                     __ptext18:	
  6898 ;; *************** function ___wmul *****************
  6899 ;; Defined at:
  6900 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;  multiplier      2    0[COMMON] unsigned int 
  6903 ;;  multiplicand    2    2[COMMON] unsigned int 
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;  product         2    4[COMMON] unsigned int 
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  2    0[COMMON] unsigned int 
  6908 ;; Registers used:
  6909 ;;		wreg, status,2, status,0
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6915 ;;      Params:         4       0       0       0       0
  6916 ;;      Locals:         2       0       0       0       0
  6917 ;;      Temps:          0       0       0       0       0
  6918 ;;      Totals:         6       0       0       0       0
  6919 ;;Total ram usage:        6 bytes
  6920 ;; Hardware stack levels used:    1
  6921 ;; This function calls:
  6922 ;;		Nothing
  6923 ;; This function is called by:
  6924 ;;		_sprintf
  6925 ;; This function uses a non-reentrant model
  6926 ;;
  6927                           
  6928                           
  6929                           ;psect for function ___wmul
  6930  1A13                     ___wmul:
  6931  1A13                     l3107:	
  6932                           ;incstack = 0
  6933                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6934                           
  6935  1A13  01F4               	clrf	___wmul@product
  6936  1A14  01F5               	clrf	___wmul@product+1
  6937  1A15                     l3109:
  6938  1A15  1C70               	btfss	___wmul@multiplier,0
  6939  1A16  2A18               	goto	u4771
  6940  1A17  2A19               	goto	u4770
  6941  1A18                     u4771:
  6942  1A18  2A1F               	goto	l396
  6943  1A19                     u4770:
  6944  1A19                     l3111:
  6945  1A19  0872               	movf	___wmul@multiplicand,w
  6946  1A1A  07F4               	addwf	___wmul@product,f
  6947  1A1B  1803               	skipnc
  6948  1A1C  0AF5               	incf	___wmul@product+1,f
  6949  1A1D  0873               	movf	___wmul@multiplicand+1,w
  6950  1A1E  07F5               	addwf	___wmul@product+1,f
  6951  1A1F                     l396:
  6952  1A1F  3001               	movlw	1
  6953  1A20                     u4785:
  6954  1A20  1003               	clrc
  6955  1A21  0DF2               	rlf	___wmul@multiplicand,f
  6956  1A22  0DF3               	rlf	___wmul@multiplicand+1,f
  6957  1A23  3EFF               	addlw	-1
  6958  1A24  1D03               	skipz
  6959  1A25  2A20               	goto	u4785
  6960  1A26                     l3113:
  6961  1A26  3001               	movlw	1
  6962  1A27                     u4795:
  6963  1A27  1003               	clrc
  6964  1A28  0CF1               	rrf	___wmul@multiplier+1,f
  6965  1A29  0CF0               	rrf	___wmul@multiplier,f
  6966  1A2A  3EFF               	addlw	-1
  6967  1A2B  1D03               	skipz
  6968  1A2C  2A27               	goto	u4795
  6969  1A2D                     l3115:
  6970  1A2D  0870               	movf	___wmul@multiplier,w
  6971  1A2E  0471               	iorwf	___wmul@multiplier+1,w
  6972  1A2F  1D03               	btfss	3,2
  6973  1A30  2A32               	goto	u4801
  6974  1A31  2A33               	goto	u4800
  6975  1A32                     u4801:
  6976  1A32  2A15               	goto	l3109
  6977  1A33                     u4800:
  6978  1A33                     l3117:
  6979  1A33  0875               	movf	___wmul@product+1,w
  6980  1A34  00F1               	movwf	?___wmul+1
  6981  1A35  0874               	movf	___wmul@product,w
  6982  1A36  00F0               	movwf	?___wmul
  6983  1A37                     l398:
  6984  1A37  0008               	return
  6985  1A38                     __end_of___wmul:
  6986                           
  6987                           	psect	text19
  6988  1C4F                     __ptext19:	
  6989 ;; *************** function ___llmod *****************
  6990 ;; Defined at:
  6991 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  divisor         4    0[COMMON] unsigned long 
  6994 ;;  dividend        4    4[COMMON] unsigned long 
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;  counter         1    9[COMMON] unsigned char 
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  4    0[COMMON] unsigned long 
  6999 ;; Registers used:
  7000 ;;		wreg, status,2, status,0
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7006 ;;      Params:         8       0       0       0       0
  7007 ;;      Locals:         1       0       0       0       0
  7008 ;;      Temps:          1       0       0       0       0
  7009 ;;      Totals:        10       0       0       0       0
  7010 ;;Total ram usage:       10 bytes
  7011 ;; Hardware stack levels used:    1
  7012 ;; This function calls:
  7013 ;;		Nothing
  7014 ;; This function is called by:
  7015 ;;		_sprintf
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019                           
  7020                           ;psect for function ___llmod
  7021  1C4F                     ___llmod:
  7022  1C4F                     l3221:	
  7023                           ;incstack = 0
  7024                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7025                           
  7026  1C4F  0873               	movf	___llmod@divisor+3,w
  7027  1C50  0472               	iorwf	___llmod@divisor+2,w
  7028  1C51  0471               	iorwf	___llmod@divisor+1,w
  7029  1C52  0470               	iorwf	___llmod@divisor,w
  7030  1C53  1903               	skipnz
  7031  1C54  2C56               	goto	u5091
  7032  1C55  2C57               	goto	u5090
  7033  1C56                     u5091:
  7034  1C56  2C9A               	goto	l3237
  7035  1C57                     u5090:
  7036  1C57                     l3223:
  7037  1C57  01F9               	clrf	___llmod@counter
  7038  1C58  0AF9               	incf	___llmod@counter,f
  7039  1C59  2C67               	goto	l3227
  7040  1C5A                     l3225:
  7041  1C5A  3001               	movlw	1
  7042  1C5B  00F8               	movwf	??___llmod
  7043  1C5C                     u5105:
  7044  1C5C  1003               	clrc
  7045  1C5D  0DF0               	rlf	___llmod@divisor,f
  7046  1C5E  0DF1               	rlf	___llmod@divisor+1,f
  7047  1C5F  0DF2               	rlf	___llmod@divisor+2,f
  7048  1C60  0DF3               	rlf	___llmod@divisor+3,f
  7049  1C61  0BF8               	decfsz	??___llmod,f
  7050  1C62  2C5C               	goto	u5105
  7051  1C63  3001               	movlw	1
  7052  1C64  00F8               	movwf	??___llmod
  7053  1C65  0878               	movf	??___llmod,w
  7054  1C66  07F9               	addwf	___llmod@counter,f
  7055  1C67                     l3227:
  7056  1C67  1FF3               	btfss	___llmod@divisor+3,7
  7057  1C68  2C6A               	goto	u5111
  7058  1C69  2C6B               	goto	u5110
  7059  1C6A                     u5111:
  7060  1C6A  2C5A               	goto	l3225
  7061  1C6B                     u5110:
  7062  1C6B                     l3229:
  7063  1C6B  0873               	movf	___llmod@divisor+3,w
  7064  1C6C  0277               	subwf	___llmod@dividend+3,w
  7065  1C6D  1D03               	skipz
  7066  1C6E  2C79               	goto	u5125
  7067  1C6F  0872               	movf	___llmod@divisor+2,w
  7068  1C70  0276               	subwf	___llmod@dividend+2,w
  7069  1C71  1D03               	skipz
  7070  1C72  2C79               	goto	u5125
  7071  1C73  0871               	movf	___llmod@divisor+1,w
  7072  1C74  0275               	subwf	___llmod@dividend+1,w
  7073  1C75  1D03               	skipz
  7074  1C76  2C79               	goto	u5125
  7075  1C77  0870               	movf	___llmod@divisor,w
  7076  1C78  0274               	subwf	___llmod@dividend,w
  7077  1C79                     u5125:
  7078  1C79  1C03               	skipc
  7079  1C7A  2C7C               	goto	u5121
  7080  1C7B  2C7D               	goto	u5120
  7081  1C7C                     u5121:
  7082  1C7C  2C8B               	goto	l3233
  7083  1C7D                     u5120:
  7084  1C7D                     l3231:
  7085  1C7D  0870               	movf	___llmod@divisor,w
  7086  1C7E  02F4               	subwf	___llmod@dividend,f
  7087  1C7F  0871               	movf	___llmod@divisor+1,w
  7088  1C80  1C03               	skipc
  7089  1C81  0F71               	incfsz	___llmod@divisor+1,w
  7090  1C82  02F5               	subwf	___llmod@dividend+1,f
  7091  1C83  0872               	movf	___llmod@divisor+2,w
  7092  1C84  1C03               	skipc
  7093  1C85  0F72               	incfsz	___llmod@divisor+2,w
  7094  1C86  02F6               	subwf	___llmod@dividend+2,f
  7095  1C87  0873               	movf	___llmod@divisor+3,w
  7096  1C88  1C03               	skipc
  7097  1C89  0F73               	incfsz	___llmod@divisor+3,w
  7098  1C8A  02F7               	subwf	___llmod@dividend+3,f
  7099  1C8B                     l3233:
  7100  1C8B  3001               	movlw	1
  7101  1C8C                     u5135:
  7102  1C8C  1003               	clrc
  7103  1C8D  0CF3               	rrf	___llmod@divisor+3,f
  7104  1C8E  0CF2               	rrf	___llmod@divisor+2,f
  7105  1C8F  0CF1               	rrf	___llmod@divisor+1,f
  7106  1C90  0CF0               	rrf	___llmod@divisor,f
  7107  1C91  3EFF               	addlw	-1
  7108  1C92  1D03               	skipz
  7109  1C93  2C8C               	goto	u5135
  7110  1C94                     l3235:
  7111  1C94  3001               	movlw	1
  7112  1C95  02F9               	subwf	___llmod@counter,f
  7113  1C96  1D03               	btfss	3,2
  7114  1C97  2C99               	goto	u5141
  7115  1C98  2C9A               	goto	u5140
  7116  1C99                     u5141:
  7117  1C99  2C6B               	goto	l3229
  7118  1C9A                     u5140:
  7119  1C9A                     l3237:
  7120  1C9A  0877               	movf	___llmod@dividend+3,w
  7121  1C9B  00F3               	movwf	?___llmod+3
  7122  1C9C  0876               	movf	___llmod@dividend+2,w
  7123  1C9D  00F2               	movwf	?___llmod+2
  7124  1C9E  0875               	movf	___llmod@dividend+1,w
  7125  1C9F  00F1               	movwf	?___llmod+1
  7126  1CA0  0874               	movf	___llmod@dividend,w
  7127  1CA1  00F0               	movwf	?___llmod
  7128  1CA2                     l652:
  7129  1CA2  0008               	return
  7130  1CA3                     __end_of___llmod:
  7131                           
  7132                           	psect	text20
  7133  1D58                     __ptext20:	
  7134 ;; *************** function ___lldiv *****************
  7135 ;; Defined at:
  7136 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;  divisor         4    0[COMMON] unsigned long 
  7139 ;;  dividend        4    4[COMMON] unsigned long 
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;  quotient        4    9[COMMON] unsigned long 
  7142 ;;  counter         1   13[COMMON] unsigned char 
  7143 ;; Return value:  Size  Location     Type
  7144 ;;                  4    0[COMMON] unsigned long 
  7145 ;; Registers used:
  7146 ;;		wreg, status,2, status,0
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7152 ;;      Params:         8       0       0       0       0
  7153 ;;      Locals:         5       0       0       0       0
  7154 ;;      Temps:          1       0       0       0       0
  7155 ;;      Totals:        14       0       0       0       0
  7156 ;;Total ram usage:       14 bytes
  7157 ;; Hardware stack levels used:    1
  7158 ;; This function calls:
  7159 ;;		Nothing
  7160 ;; This function is called by:
  7161 ;;		_sprintf
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           
  7166                           ;psect for function ___lldiv
  7167  1D58                     ___lldiv:
  7168  1D58                     l3121:	
  7169                           ;incstack = 0
  7170                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7171                           
  7172  1D58  3000               	movlw	0
  7173  1D59  00FC               	movwf	___lldiv@quotient+3
  7174  1D5A  3000               	movlw	0
  7175  1D5B  00FB               	movwf	___lldiv@quotient+2
  7176  1D5C  3000               	movlw	0
  7177  1D5D  00FA               	movwf	___lldiv@quotient+1
  7178  1D5E  3000               	movlw	0
  7179  1D5F  00F9               	movwf	___lldiv@quotient
  7180  1D60  0873               	movf	___lldiv@divisor+3,w
  7181  1D61  0472               	iorwf	___lldiv@divisor+2,w
  7182  1D62  0471               	iorwf	___lldiv@divisor+1,w
  7183  1D63  0470               	iorwf	___lldiv@divisor,w
  7184  1D64  1903               	skipnz
  7185  1D65  2D67               	goto	u4811
  7186  1D66  2D68               	goto	u4810
  7187  1D67                     u4811:
  7188  1D67  2DB5               	goto	l3141
  7189  1D68                     u4810:
  7190  1D68                     l3123:
  7191  1D68  01FD               	clrf	___lldiv@counter
  7192  1D69  0AFD               	incf	___lldiv@counter,f
  7193  1D6A  2D78               	goto	l3127
  7194  1D6B                     l3125:
  7195  1D6B  3001               	movlw	1
  7196  1D6C  00F8               	movwf	??___lldiv
  7197  1D6D                     u4825:
  7198  1D6D  1003               	clrc
  7199  1D6E  0DF0               	rlf	___lldiv@divisor,f
  7200  1D6F  0DF1               	rlf	___lldiv@divisor+1,f
  7201  1D70  0DF2               	rlf	___lldiv@divisor+2,f
  7202  1D71  0DF3               	rlf	___lldiv@divisor+3,f
  7203  1D72  0BF8               	decfsz	??___lldiv,f
  7204  1D73  2D6D               	goto	u4825
  7205  1D74  3001               	movlw	1
  7206  1D75  00F8               	movwf	??___lldiv
  7207  1D76  0878               	movf	??___lldiv,w
  7208  1D77  07FD               	addwf	___lldiv@counter,f
  7209  1D78                     l3127:
  7210  1D78  1FF3               	btfss	___lldiv@divisor+3,7
  7211  1D79  2D7B               	goto	u4831
  7212  1D7A  2D7C               	goto	u4830
  7213  1D7B                     u4831:
  7214  1D7B  2D6B               	goto	l3125
  7215  1D7C                     u4830:
  7216  1D7C                     l3129:
  7217  1D7C  3001               	movlw	1
  7218  1D7D  00F8               	movwf	??___lldiv
  7219  1D7E                     u4845:
  7220  1D7E  1003               	clrc
  7221  1D7F  0DF9               	rlf	___lldiv@quotient,f
  7222  1D80  0DFA               	rlf	___lldiv@quotient+1,f
  7223  1D81  0DFB               	rlf	___lldiv@quotient+2,f
  7224  1D82  0DFC               	rlf	___lldiv@quotient+3,f
  7225  1D83  0BF8               	decfsz	??___lldiv,f
  7226  1D84  2D7E               	goto	u4845
  7227  1D85                     l3131:
  7228  1D85  0873               	movf	___lldiv@divisor+3,w
  7229  1D86  0277               	subwf	___lldiv@dividend+3,w
  7230  1D87  1D03               	skipz
  7231  1D88  2D93               	goto	u4855
  7232  1D89  0872               	movf	___lldiv@divisor+2,w
  7233  1D8A  0276               	subwf	___lldiv@dividend+2,w
  7234  1D8B  1D03               	skipz
  7235  1D8C  2D93               	goto	u4855
  7236  1D8D  0871               	movf	___lldiv@divisor+1,w
  7237  1D8E  0275               	subwf	___lldiv@dividend+1,w
  7238  1D8F  1D03               	skipz
  7239  1D90  2D93               	goto	u4855
  7240  1D91  0870               	movf	___lldiv@divisor,w
  7241  1D92  0274               	subwf	___lldiv@dividend,w
  7242  1D93                     u4855:
  7243  1D93  1C03               	skipc
  7244  1D94  2D96               	goto	u4851
  7245  1D95  2D97               	goto	u4850
  7246  1D96                     u4851:
  7247  1D96  2DA6               	goto	l3137
  7248  1D97                     u4850:
  7249  1D97                     l3133:
  7250  1D97  0870               	movf	___lldiv@divisor,w
  7251  1D98  02F4               	subwf	___lldiv@dividend,f
  7252  1D99  0871               	movf	___lldiv@divisor+1,w
  7253  1D9A  1C03               	skipc
  7254  1D9B  0F71               	incfsz	___lldiv@divisor+1,w
  7255  1D9C  02F5               	subwf	___lldiv@dividend+1,f
  7256  1D9D  0872               	movf	___lldiv@divisor+2,w
  7257  1D9E  1C03               	skipc
  7258  1D9F  0F72               	incfsz	___lldiv@divisor+2,w
  7259  1DA0  02F6               	subwf	___lldiv@dividend+2,f
  7260  1DA1  0873               	movf	___lldiv@divisor+3,w
  7261  1DA2  1C03               	skipc
  7262  1DA3  0F73               	incfsz	___lldiv@divisor+3,w
  7263  1DA4  02F7               	subwf	___lldiv@dividend+3,f
  7264  1DA5                     l3135:
  7265  1DA5  1479               	bsf	___lldiv@quotient,0
  7266  1DA6                     l3137:
  7267  1DA6  3001               	movlw	1
  7268  1DA7                     u4865:
  7269  1DA7  1003               	clrc
  7270  1DA8  0CF3               	rrf	___lldiv@divisor+3,f
  7271  1DA9  0CF2               	rrf	___lldiv@divisor+2,f
  7272  1DAA  0CF1               	rrf	___lldiv@divisor+1,f
  7273  1DAB  0CF0               	rrf	___lldiv@divisor,f
  7274  1DAC  3EFF               	addlw	-1
  7275  1DAD  1D03               	skipz
  7276  1DAE  2DA7               	goto	u4865
  7277  1DAF                     l3139:
  7278  1DAF  3001               	movlw	1
  7279  1DB0  02FD               	subwf	___lldiv@counter,f
  7280  1DB1  1D03               	btfss	3,2
  7281  1DB2  2DB4               	goto	u4871
  7282  1DB3  2DB5               	goto	u4870
  7283  1DB4                     u4871:
  7284  1DB4  2D7C               	goto	l3129
  7285  1DB5                     u4870:
  7286  1DB5                     l3141:
  7287  1DB5  087C               	movf	___lldiv@quotient+3,w
  7288  1DB6  00F3               	movwf	?___lldiv+3
  7289  1DB7  087B               	movf	___lldiv@quotient+2,w
  7290  1DB8  00F2               	movwf	?___lldiv+2
  7291  1DB9  087A               	movf	___lldiv@quotient+1,w
  7292  1DBA  00F1               	movwf	?___lldiv+1
  7293  1DBB  0879               	movf	___lldiv@quotient,w
  7294  1DBC  00F0               	movwf	?___lldiv
  7295  1DBD                     l432:
  7296  1DBD  0008               	return
  7297  1DBE                     __end_of___lldiv:
  7298                           
  7299                           	psect	text21
  7300  0806                     __ptext21:	
  7301 ;; *************** function ___fltol *****************
  7302 ;; Defined at:
  7303 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7304 ;; Parameters:    Size  Location     Type
  7305 ;;  f1              4   49[BANK0 ] unsigned long 
  7306 ;; Auto vars:     Size  Location     Type
  7307 ;;  exp1            1   59[BANK0 ] unsigned char 
  7308 ;;  sign1           1   58[BANK0 ] unsigned char 
  7309 ;; Return value:  Size  Location     Type
  7310 ;;                  4   49[BANK0 ] long 
  7311 ;; Registers used:
  7312 ;;		wreg, status,2, status,0
  7313 ;; Tracked objects:
  7314 ;;		On entry : 0/0
  7315 ;;		On exit  : 0/0
  7316 ;;		Unchanged: 0/0
  7317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7318 ;;      Params:         0       4       0       0       0
  7319 ;;      Locals:         0       2       0       0       0
  7320 ;;      Temps:          0       5       0       0       0
  7321 ;;      Totals:         0      11       0       0       0
  7322 ;;Total ram usage:       11 bytes
  7323 ;; Hardware stack levels used:    1
  7324 ;; This function calls:
  7325 ;;		Nothing
  7326 ;; This function is called by:
  7327 ;;		_sprintf
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331                           
  7332                           ;psect for function ___fltol
  7333  0806                     ___fltol:
  7334  0806                     l3185:	
  7335                           ;incstack = 0
  7336                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7337                           
  7338  0806  1003               	clrc
  7339  0807  1283               	bcf	3,5	;RP0=0, select bank0
  7340  0808  1303               	bcf	3,6	;RP1=0, select bank0
  7341  0809  0D53               	rlf	___fltol@f1+2,w
  7342  080A  0D54               	rlf	___fltol@f1+3,w
  7343  080B  00D5               	movwf	??___fltol
  7344  080C  0855               	movf	??___fltol,w
  7345  080D  00DB               	movwf	___fltol@exp1
  7346  080E  085B               	movf	___fltol@exp1,w
  7347  080F  1D03               	btfss	3,2
  7348  0810  2812               	goto	u4991
  7349  0811  2813               	goto	u4990
  7350  0812                     u4991:
  7351  0812  281C               	goto	l3191
  7352  0813                     u4990:
  7353  0813                     l3187:
  7354  0813  3000               	movlw	0
  7355  0814  00D4               	movwf	?___fltol+3
  7356  0815  3000               	movlw	0
  7357  0816  00D3               	movwf	?___fltol+2
  7358  0817  3000               	movlw	0
  7359  0818  00D2               	movwf	?___fltol+1
  7360  0819  3000               	movlw	0
  7361  081A  00D1               	movwf	?___fltol
  7362  081B  2881               	goto	l599
  7363  081C                     l3191:
  7364  081C  0851               	movf	___fltol@f1,w
  7365  081D  00D5               	movwf	??___fltol
  7366  081E  0852               	movf	___fltol@f1+1,w
  7367  081F  00D6               	movwf	??___fltol+1
  7368  0820  0853               	movf	___fltol@f1+2,w
  7369  0821  00D7               	movwf	??___fltol+2
  7370  0822  0854               	movf	___fltol@f1+3,w
  7371  0823  00D8               	movwf	??___fltol+3
  7372  0824  301F               	movlw	31
  7373  0825                     u5005:
  7374  0825  1003               	clrc
  7375  0826  0CD8               	rrf	??___fltol+3,f
  7376  0827  0CD7               	rrf	??___fltol+2,f
  7377  0828  0CD6               	rrf	??___fltol+1,f
  7378  0829  0CD5               	rrf	??___fltol,f
  7379  082A                     u5000:
  7380  082A  3EFF               	addlw	-1
  7381  082B  1D03               	skipz
  7382  082C  2825               	goto	u5005
  7383  082D  0855               	movf	??___fltol,w
  7384  082E  00D9               	movwf	??___fltol+4
  7385  082F  0859               	movf	??___fltol+4,w
  7386  0830  00DA               	movwf	___fltol@sign1
  7387  0831                     l3193:
  7388  0831  17D3               	bsf	___fltol@f1+2,7
  7389  0832                     l3195:
  7390  0832  30FF               	movlw	255
  7391  0833  05D1               	andwf	___fltol@f1,f
  7392  0834  30FF               	movlw	255
  7393  0835  05D2               	andwf	___fltol@f1+1,f
  7394  0836  30FF               	movlw	255
  7395  0837  05D3               	andwf	___fltol@f1+2,f
  7396  0838  3000               	movlw	0
  7397  0839  05D4               	andwf	___fltol@f1+3,f
  7398  083A                     l3197:
  7399  083A  3096               	movlw	150
  7400  083B  02DB               	subwf	___fltol@exp1,f
  7401  083C                     l3199:
  7402  083C  1FDB               	btfss	___fltol@exp1,7
  7403  083D  283F               	goto	u5011
  7404  083E  2840               	goto	u5010
  7405  083F                     u5011:
  7406  083F  285A               	goto	l3209
  7407  0840                     u5010:
  7408  0840                     l3201:
  7409  0840  085B               	movf	___fltol@exp1,w
  7410  0841  3A80               	xorlw	128
  7411  0842  3E97               	addlw	151
  7412  0843  1803               	skipnc
  7413  0844  2846               	goto	u5021
  7414  0845  2847               	goto	u5020
  7415  0846                     u5021:
  7416  0846  2848               	goto	l3207
  7417  0847                     u5020:
  7418  0847  2813               	goto	l3187
  7419  0848                     l3207:
  7420  0848  3001               	movlw	1
  7421  0849                     u5035:
  7422  0849  1003               	clrc
  7423  084A  0CD4               	rrf	___fltol@f1+3,f
  7424  084B  0CD3               	rrf	___fltol@f1+2,f
  7425  084C  0CD2               	rrf	___fltol@f1+1,f
  7426  084D  0CD1               	rrf	___fltol@f1,f
  7427  084E  3EFF               	addlw	-1
  7428  084F  1D03               	skipz
  7429  0850  2849               	goto	u5035
  7430  0851  3001               	movlw	1
  7431  0852  00D5               	movwf	??___fltol
  7432  0853  0855               	movf	??___fltol,w
  7433  0854  07DB               	addwf	___fltol@exp1,f
  7434  0855  1D03               	btfss	3,2
  7435  0856  2858               	goto	u5041
  7436  0857  2859               	goto	u5040
  7437  0858                     u5041:
  7438  0858  2848               	goto	l3207
  7439  0859                     u5040:
  7440  0859  2871               	goto	l3217
  7441  085A                     l3209:
  7442  085A  3020               	movlw	32
  7443  085B  025B               	subwf	___fltol@exp1,w
  7444  085C  1C03               	skipc
  7445  085D  285F               	goto	u5051
  7446  085E  2860               	goto	u5050
  7447  085F                     u5051:
  7448  085F  286C               	goto	l606
  7449  0860                     u5050:
  7450  0860  2813               	goto	l3187
  7451  0861                     l3215:
  7452  0861  3001               	movlw	1
  7453  0862  00D5               	movwf	??___fltol
  7454  0863                     u5065:
  7455  0863  1003               	clrc
  7456  0864  0DD1               	rlf	___fltol@f1,f
  7457  0865  0DD2               	rlf	___fltol@f1+1,f
  7458  0866  0DD3               	rlf	___fltol@f1+2,f
  7459  0867  0DD4               	rlf	___fltol@f1+3,f
  7460  0868  0BD5               	decfsz	??___fltol,f
  7461  0869  2863               	goto	u5065
  7462  086A  3001               	movlw	1
  7463  086B  02DB               	subwf	___fltol@exp1,f
  7464  086C                     l606:
  7465  086C  085B               	movf	___fltol@exp1,w
  7466  086D  1D03               	btfss	3,2
  7467  086E  2870               	goto	u5071
  7468  086F  2871               	goto	u5070
  7469  0870                     u5071:
  7470  0870  2861               	goto	l3215
  7471  0871                     u5070:
  7472  0871                     l3217:
  7473  0871  085A               	movf	___fltol@sign1,w
  7474  0872  1903               	btfsc	3,2
  7475  0873  2875               	goto	u5081
  7476  0874  2876               	goto	u5080
  7477  0875                     u5081:
  7478  0875  2881               	goto	l609
  7479  0876                     u5080:
  7480  0876                     l3219:
  7481  0876  09D1               	comf	___fltol@f1,f
  7482  0877  09D2               	comf	___fltol@f1+1,f
  7483  0878  09D3               	comf	___fltol@f1+2,f
  7484  0879  09D4               	comf	___fltol@f1+3,f
  7485  087A  0AD1               	incf	___fltol@f1,f
  7486  087B  1903               	skipnz
  7487  087C  0AD2               	incf	___fltol@f1+1,f
  7488  087D  1903               	skipnz
  7489  087E  0AD3               	incf	___fltol@f1+2,f
  7490  087F  1903               	skipnz
  7491  0880  0AD4               	incf	___fltol@f1+3,f
  7492  0881                     l609:
  7493  0881                     l599:
  7494  0881  0008               	return
  7495  0882                     __end_of___fltol:
  7496                           
  7497                           	psect	text22
  7498  19CB                     __ptext22:	
  7499 ;; *************** function ___flsub *****************
  7500 ;; Defined at:
  7501 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;  a               4   70[BANK0 ] long 
  7504 ;;  b               4   74[BANK0 ] long 
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;		None
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  4   70[BANK0 ] long 
  7509 ;; Registers used:
  7510 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7516 ;;      Params:         0       8       0       0       0
  7517 ;;      Locals:         0       0       0       0       0
  7518 ;;      Temps:          0       0       0       0       0
  7519 ;;      Totals:         0       8       0       0       0
  7520 ;;Total ram usage:        8 bytes
  7521 ;; Hardware stack levels used:    1
  7522 ;; Hardware stack levels required when called:    1
  7523 ;; This function calls:
  7524 ;;		___fladd
  7525 ;; This function is called by:
  7526 ;;		_sprintf
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           
  7531                           ;psect for function ___flsub
  7532  19CB                     ___flsub:
  7533  19CB                     l3241:	
  7534                           ;incstack = 0
  7535                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7536                           
  7537  19CB  3080               	movlw	128
  7538  19CC  1283               	bcf	3,5	;RP0=0, select bank0
  7539  19CD  1303               	bcf	3,6	;RP1=0, select bank0
  7540  19CE  06E9               	xorwf	___flsub@a+3,f
  7541  19CF                     l3243:
  7542  19CF  086D               	movf	___flsub@b+3,w
  7543  19D0  00D5               	movwf	___fladd@b+3
  7544  19D1  086C               	movf	___flsub@b+2,w
  7545  19D2  00D4               	movwf	___fladd@b+2
  7546  19D3  086B               	movf	___flsub@b+1,w
  7547  19D4  00D3               	movwf	___fladd@b+1
  7548  19D5  086A               	movf	___flsub@b,w
  7549  19D6  00D2               	movwf	___fladd@b
  7550  19D7  0869               	movf	___flsub@a+3,w
  7551  19D8  00D9               	movwf	___fladd@a+3
  7552  19D9  0868               	movf	___flsub@a+2,w
  7553  19DA  00D8               	movwf	___fladd@a+2
  7554  19DB  0867               	movf	___flsub@a+1,w
  7555  19DC  00D7               	movwf	___fladd@a+1
  7556  19DD  0866               	movf	___flsub@a,w
  7557  19DE  00D6               	movwf	___fladd@a
  7558  19DF  160A  118A  2578  160A  158A  	fcall	___fladd
  7559  19E4  1283               	bcf	3,5	;RP0=0, select bank0
  7560  19E5  1303               	bcf	3,6	;RP1=0, select bank0
  7561  19E6  0855               	movf	?___fladd+3,w
  7562  19E7  00E9               	movwf	?___flsub+3
  7563  19E8  0854               	movf	?___fladd+2,w
  7564  19E9  00E8               	movwf	?___flsub+2
  7565  19EA  0853               	movf	?___fladd+1,w
  7566  19EB  00E7               	movwf	?___flsub+1
  7567  19EC  0852               	movf	?___fladd,w
  7568  19ED  00E6               	movwf	?___flsub
  7569  19EE                     l769:
  7570  19EE  0008               	return
  7571  19EF                     __end_of___flsub:
  7572                           
  7573                           	psect	text23
  7574  1578                     __ptext23:	
  7575 ;; *************** function ___fladd *****************
  7576 ;; Defined at:
  7577 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;  b               4   50[BANK0 ] long 
  7580 ;;  a               4   54[BANK0 ] long 
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;  grs             1   69[BANK0 ] unsigned char 
  7583 ;;  bexp            1   68[BANK0 ] unsigned char 
  7584 ;;  aexp            1   67[BANK0 ] unsigned char 
  7585 ;;  signs           1   66[BANK0 ] unsigned char 
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  4   50[BANK0 ] unsigned char 
  7588 ;; Registers used:
  7589 ;;		wreg, status,2, status,0, btemp+1
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7595 ;;      Params:         0       8       0       0       0
  7596 ;;      Locals:         0       4       0       0       0
  7597 ;;      Temps:          0       8       0       0       0
  7598 ;;      Totals:         0      20       0       0       0
  7599 ;;Total ram usage:       20 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; This function calls:
  7602 ;;		Nothing
  7603 ;; This function is called by:
  7604 ;;		_sprintf
  7605 ;;		___flsub
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           
  7610                           ;psect for function ___fladd
  7611  1578                     ___fladd:
  7612  1578                     l2599:	
  7613                           ;incstack = 0
  7614                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7615                           
  7616  1578  1283               	bcf	3,5	;RP0=0, select bank0
  7617  1579  1303               	bcf	3,6	;RP1=0, select bank0
  7618  157A  0855               	movf	___fladd@b+3,w
  7619  157B  3980               	andlw	128
  7620  157C  00DA               	movwf	??___fladd
  7621  157D  085A               	movf	??___fladd,w
  7622  157E  00E2               	movwf	___fladd@signs
  7623  157F                     l2601:
  7624  157F  0855               	movf	___fladd@b+3,w
  7625  1580  00DA               	movwf	??___fladd
  7626  1581  075A               	addwf	??___fladd,w
  7627  1582  00DB               	movwf	??___fladd+1
  7628  1583  085B               	movf	??___fladd+1,w
  7629  1584  00E4               	movwf	___fladd@bexp
  7630  1585                     l2603:
  7631  1585  1FD4               	btfss	___fladd@b+2,7
  7632  1586  2D88               	goto	u3411
  7633  1587  2D89               	goto	u3410
  7634  1588                     u3411:
  7635  1588  2D8A               	goto	l2607
  7636  1589                     u3410:
  7637  1589                     l2605:
  7638  1589  1464               	bsf	___fladd@bexp,0
  7639  158A                     l2607:
  7640  158A  0864               	movf	___fladd@bexp,w
  7641  158B  1903               	btfsc	3,2
  7642  158C  2D8E               	goto	u3421
  7643  158D  2D8F               	goto	u3420
  7644  158E                     u3421:
  7645  158E  2D9F               	goto	l2617
  7646  158F                     u3420:
  7647  158F                     l2609:
  7648  158F  0A64               	incf	___fladd@bexp,w
  7649  1590  1D03               	btfss	3,2
  7650  1591  2D93               	goto	u3431
  7651  1592  2D94               	goto	u3430
  7652  1593                     u3431:
  7653  1593  2D9C               	goto	l2613
  7654  1594                     u3430:
  7655  1594                     l2611:
  7656  1594  3000               	movlw	0
  7657  1595  00D5               	movwf	___fladd@b+3
  7658  1596  3000               	movlw	0
  7659  1597  00D4               	movwf	___fladd@b+2
  7660  1598  3000               	movlw	0
  7661  1599  00D3               	movwf	___fladd@b+1
  7662  159A  3000               	movlw	0
  7663  159B  00D2               	movwf	___fladd@b
  7664  159C                     l2613:
  7665  159C  17D4               	bsf	___fladd@b+2,7
  7666  159D                     l2615:
  7667  159D  01D5               	clrf	___fladd@b+3
  7668  159E  2DA7               	goto	l2619
  7669  159F                     l2617:
  7670  159F  3000               	movlw	0
  7671  15A0  00D5               	movwf	___fladd@b+3
  7672  15A1  3000               	movlw	0
  7673  15A2  00D4               	movwf	___fladd@b+2
  7674  15A3  3000               	movlw	0
  7675  15A4  00D3               	movwf	___fladd@b+1
  7676  15A5  3000               	movlw	0
  7677  15A6  00D2               	movwf	___fladd@b
  7678  15A7                     l2619:
  7679  15A7  0859               	movf	___fladd@a+3,w
  7680  15A8  3980               	andlw	128
  7681  15A9  00DA               	movwf	??___fladd
  7682  15AA  085A               	movf	??___fladd,w
  7683  15AB  00E3               	movwf	___fladd@aexp
  7684  15AC                     l2621:
  7685  15AC  0863               	movf	___fladd@aexp,w
  7686  15AD  0662               	xorwf	___fladd@signs,w
  7687  15AE  1903               	skipnz
  7688  15AF  2DB1               	goto	u3441
  7689  15B0  2DB2               	goto	u3440
  7690  15B1                     u3441:
  7691  15B1  2DB3               	goto	l2625
  7692  15B2                     u3440:
  7693  15B2                     l2623:
  7694  15B2  1762               	bsf	___fladd@signs,6
  7695  15B3                     l2625:
  7696  15B3  0859               	movf	___fladd@a+3,w
  7697  15B4  00DA               	movwf	??___fladd
  7698  15B5  075A               	addwf	??___fladd,w
  7699  15B6  00DB               	movwf	??___fladd+1
  7700  15B7  085B               	movf	??___fladd+1,w
  7701  15B8  00E3               	movwf	___fladd@aexp
  7702  15B9                     l2627:
  7703  15B9  1FD8               	btfss	___fladd@a+2,7
  7704  15BA  2DBC               	goto	u3451
  7705  15BB  2DBD               	goto	u3450
  7706  15BC                     u3451:
  7707  15BC  2DBE               	goto	l2631
  7708  15BD                     u3450:
  7709  15BD                     l2629:
  7710  15BD  1463               	bsf	___fladd@aexp,0
  7711  15BE                     l2631:
  7712  15BE  0863               	movf	___fladd@aexp,w
  7713  15BF  1903               	btfsc	3,2
  7714  15C0  2DC2               	goto	u3461
  7715  15C1  2DC3               	goto	u3460
  7716  15C2                     u3461:
  7717  15C2  2DD3               	goto	l2641
  7718  15C3                     u3460:
  7719  15C3                     l2633:
  7720  15C3  0A63               	incf	___fladd@aexp,w
  7721  15C4  1D03               	btfss	3,2
  7722  15C5  2DC7               	goto	u3471
  7723  15C6  2DC8               	goto	u3470
  7724  15C7                     u3471:
  7725  15C7  2DD0               	goto	l2637
  7726  15C8                     u3470:
  7727  15C8                     l2635:
  7728  15C8  3000               	movlw	0
  7729  15C9  00D9               	movwf	___fladd@a+3
  7730  15CA  3000               	movlw	0
  7731  15CB  00D8               	movwf	___fladd@a+2
  7732  15CC  3000               	movlw	0
  7733  15CD  00D7               	movwf	___fladd@a+1
  7734  15CE  3000               	movlw	0
  7735  15CF  00D6               	movwf	___fladd@a
  7736  15D0                     l2637:
  7737  15D0  17D8               	bsf	___fladd@a+2,7
  7738  15D1                     l2639:
  7739  15D1  01D9               	clrf	___fladd@a+3
  7740  15D2  2DDB               	goto	l723
  7741  15D3                     l2641:
  7742  15D3  3000               	movlw	0
  7743  15D4  00D9               	movwf	___fladd@a+3
  7744  15D5  3000               	movlw	0
  7745  15D6  00D8               	movwf	___fladd@a+2
  7746  15D7  3000               	movlw	0
  7747  15D8  00D7               	movwf	___fladd@a+1
  7748  15D9  3000               	movlw	0
  7749  15DA  00D6               	movwf	___fladd@a
  7750  15DB                     l723:
  7751  15DB  0864               	movf	___fladd@bexp,w
  7752  15DC  0263               	subwf	___fladd@aexp,w
  7753  15DD  1803               	skipnc
  7754  15DE  2DE0               	goto	u3481
  7755  15DF  2DE1               	goto	u3480
  7756  15E0                     u3481:
  7757  15E0  2E25               	goto	l2677
  7758  15E1                     u3480:
  7759  15E1                     l2643:
  7760  15E1  1F62               	btfss	___fladd@signs,6
  7761  15E2  2DE4               	goto	u3491
  7762  15E3  2DE5               	goto	u3490
  7763  15E4                     u3491:
  7764  15E4  2DE9               	goto	l2647
  7765  15E5                     u3490:
  7766  15E5                     l2645:
  7767  15E5  3080               	movlw	128
  7768  15E6  00DA               	movwf	??___fladd
  7769  15E7  085A               	movf	??___fladd,w
  7770  15E8  06E2               	xorwf	___fladd@signs,f
  7771  15E9                     l2647:
  7772  15E9  0864               	movf	___fladd@bexp,w
  7773  15EA  00DA               	movwf	??___fladd
  7774  15EB  085A               	movf	??___fladd,w
  7775  15EC  00E5               	movwf	___fladd@grs
  7776  15ED                     l2649:
  7777  15ED  0863               	movf	___fladd@aexp,w
  7778  15EE  00DA               	movwf	??___fladd
  7779  15EF  085A               	movf	??___fladd,w
  7780  15F0  00E4               	movwf	___fladd@bexp
  7781  15F1                     l2651:
  7782  15F1  0865               	movf	___fladd@grs,w
  7783  15F2  00DA               	movwf	??___fladd
  7784  15F3  085A               	movf	??___fladd,w
  7785  15F4  00E3               	movwf	___fladd@aexp
  7786  15F5                     l2653:
  7787  15F5  0852               	movf	___fladd@b,w
  7788  15F6  00DA               	movwf	??___fladd
  7789  15F7  085A               	movf	??___fladd,w
  7790  15F8  00E5               	movwf	___fladd@grs
  7791  15F9                     l2655:
  7792  15F9  0856               	movf	___fladd@a,w
  7793  15FA  00DA               	movwf	??___fladd
  7794  15FB  085A               	movf	??___fladd,w
  7795  15FC  00D2               	movwf	___fladd@b
  7796  15FD                     l2657:
  7797  15FD  0865               	movf	___fladd@grs,w
  7798  15FE  00DA               	movwf	??___fladd
  7799  15FF  085A               	movf	??___fladd,w
  7800  1600  00D6               	movwf	___fladd@a
  7801  1601                     l2659:
  7802  1601  0853               	movf	___fladd@b+1,w
  7803  1602  00DA               	movwf	??___fladd
  7804  1603  085A               	movf	??___fladd,w
  7805  1604  00E5               	movwf	___fladd@grs
  7806  1605                     l2661:
  7807  1605  0857               	movf	___fladd@a+1,w
  7808  1606  00DA               	movwf	??___fladd
  7809  1607  085A               	movf	??___fladd,w
  7810  1608  00D3               	movwf	___fladd@b+1
  7811  1609                     l2663:
  7812  1609  0865               	movf	___fladd@grs,w
  7813  160A  00DA               	movwf	??___fladd
  7814  160B  085A               	movf	??___fladd,w
  7815  160C  00D7               	movwf	___fladd@a+1
  7816  160D                     l2665:
  7817  160D  0854               	movf	___fladd@b+2,w
  7818  160E  00DA               	movwf	??___fladd
  7819  160F  085A               	movf	??___fladd,w
  7820  1610  00E5               	movwf	___fladd@grs
  7821  1611                     l2667:
  7822  1611  0858               	movf	___fladd@a+2,w
  7823  1612  00DA               	movwf	??___fladd
  7824  1613  085A               	movf	??___fladd,w
  7825  1614  00D4               	movwf	___fladd@b+2
  7826  1615                     l2669:
  7827  1615  0865               	movf	___fladd@grs,w
  7828  1616  00DA               	movwf	??___fladd
  7829  1617  085A               	movf	??___fladd,w
  7830  1618  00D8               	movwf	___fladd@a+2
  7831  1619                     l2671:
  7832  1619  0855               	movf	___fladd@b+3,w
  7833  161A  00DA               	movwf	??___fladd
  7834  161B  085A               	movf	??___fladd,w
  7835  161C  00E5               	movwf	___fladd@grs
  7836  161D                     l2673:
  7837  161D  0859               	movf	___fladd@a+3,w
  7838  161E  00DA               	movwf	??___fladd
  7839  161F  085A               	movf	??___fladd,w
  7840  1620  00D5               	movwf	___fladd@b+3
  7841  1621                     l2675:
  7842  1621  0865               	movf	___fladd@grs,w
  7843  1622  00DA               	movwf	??___fladd
  7844  1623  085A               	movf	??___fladd,w
  7845  1624  00D9               	movwf	___fladd@a+3
  7846  1625                     l2677:
  7847  1625  01E5               	clrf	___fladd@grs
  7848  1626                     l2679:
  7849  1626  0863               	movf	___fladd@aexp,w
  7850  1627  00DA               	movwf	??___fladd
  7851  1628  01DB               	clrf	??___fladd+1
  7852  1629  085B               	movf	??___fladd+1,w
  7853  162A  00DD               	movwf	??___fladd+3
  7854  162B  0864               	movf	___fladd@bexp,w
  7855  162C  025A               	subwf	??___fladd,w
  7856  162D  00DC               	movwf	??___fladd+2
  7857  162E  1C03               	skipc
  7858  162F  03DD               	decf	??___fladd+3,f
  7859  1630  085D               	movf	??___fladd+3,w
  7860  1631  3A80               	xorlw	128
  7861  1632  00FF               	movwf	btemp+1
  7862  1633  3080               	movlw	128
  7863  1634  027F               	subwf	btemp+1,w
  7864  1635  1D03               	skipz
  7865  1636  2E39               	goto	u3505
  7866  1637  301A               	movlw	26
  7867  1638  025C               	subwf	??___fladd+2,w
  7868  1639                     u3505:
  7869  1639  1C03               	skipc
  7870  163A  2E3C               	goto	u3501
  7871  163B  2E3D               	goto	u3500
  7872  163C                     u3501:
  7873  163C  2E7A               	goto	l2695
  7874  163D                     u3500:
  7875  163D                     l2681:
  7876  163D  1283               	bcf	3,5	;RP0=0, select bank0
  7877  163E  1303               	bcf	3,6	;RP1=0, select bank0
  7878  163F  0855               	movf	___fladd@b+3,w
  7879  1640  0454               	iorwf	___fladd@b+2,w
  7880  1641  0453               	iorwf	___fladd@b+1,w
  7881  1642  0452               	iorwf	___fladd@b,w
  7882  1643  1D03               	skipz
  7883  1644  2E46               	goto	u3511
  7884  1645  2E48               	goto	u3510
  7885  1646                     u3511:
  7886  1646  3001               	movlw	1
  7887  1647  2E49               	goto	u3520
  7888  1648                     u3510:
  7889  1648  3000               	movlw	0
  7890  1649                     u3520:
  7891  1649  00DA               	movwf	??___fladd
  7892  164A  085A               	movf	??___fladd,w
  7893  164B  00E5               	movwf	___fladd@grs
  7894  164C  3000               	movlw	0
  7895  164D  00D5               	movwf	___fladd@b+3
  7896  164E  3000               	movlw	0
  7897  164F  00D4               	movwf	___fladd@b+2
  7898  1650  3000               	movlw	0
  7899  1651  00D3               	movwf	___fladd@b+1
  7900  1652  3000               	movlw	0
  7901  1653  00D2               	movwf	___fladd@b
  7902  1654  0863               	movf	___fladd@aexp,w
  7903  1655  00DA               	movwf	??___fladd
  7904  1656  085A               	movf	??___fladd,w
  7905  1657  00E4               	movwf	___fladd@bexp
  7906  1658  2E82               	goto	l727
  7907  1659                     l729:
  7908  1659  1C65               	btfss	___fladd@grs,0
  7909  165A  2E5C               	goto	u3531
  7910  165B  2E5D               	goto	u3530
  7911  165C                     u3531:
  7912  165C  2E66               	goto	l2685
  7913  165D                     u3530:
  7914  165D                     l2683:
  7915  165D  0865               	movf	___fladd@grs,w
  7916  165E  00DA               	movwf	??___fladd
  7917  165F  1003               	clrc
  7918  1660  0C5A               	rrf	??___fladd,w
  7919  1661  3801               	iorlw	1
  7920  1662  00DB               	movwf	??___fladd+1
  7921  1663  085B               	movf	??___fladd+1,w
  7922  1664  00E5               	movwf	___fladd@grs
  7923  1665  2E68               	goto	l2687
  7924  1666                     l2685:
  7925  1666  1003               	clrc
  7926  1667  0CE5               	rrf	___fladd@grs,f
  7927  1668                     l2687:
  7928  1668  1C52               	btfss	___fladd@b,0
  7929  1669  2E6B               	goto	u3541
  7930  166A  2E6C               	goto	u3540
  7931  166B                     u3541:
  7932  166B  2E6D               	goto	l2691
  7933  166C                     u3540:
  7934  166C                     l2689:
  7935  166C  17E5               	bsf	___fladd@grs,7
  7936  166D                     l2691:
  7937  166D  3001               	movlw	1
  7938  166E  00DA               	movwf	??___fladd
  7939  166F                     u3555:
  7940  166F  0D55               	rlf	___fladd@b+3,w
  7941  1670  0CD5               	rrf	___fladd@b+3,f
  7942  1671  0CD4               	rrf	___fladd@b+2,f
  7943  1672  0CD3               	rrf	___fladd@b+1,f
  7944  1673  0CD2               	rrf	___fladd@b,f
  7945  1674  0BDA               	decfsz	??___fladd& (0+127),f
  7946  1675  2E6F               	goto	u3555
  7947  1676                     l2693:
  7948  1676  3001               	movlw	1
  7949  1677  00DA               	movwf	??___fladd
  7950  1678  085A               	movf	??___fladd,w
  7951  1679  07E4               	addwf	___fladd@bexp,f
  7952  167A                     l2695:
  7953  167A  1283               	bcf	3,5	;RP0=0, select bank0
  7954  167B  1303               	bcf	3,6	;RP1=0, select bank0
  7955  167C  0863               	movf	___fladd@aexp,w
  7956  167D  0264               	subwf	___fladd@bexp,w
  7957  167E  1C03               	skipc
  7958  167F  2E81               	goto	u3561
  7959  1680  2E82               	goto	u3560
  7960  1681                     u3561:
  7961  1681  2E59               	goto	l729
  7962  1682                     u3560:
  7963  1682                     l727:
  7964  1682  1B62               	btfsc	___fladd@signs,6
  7965  1683  2E85               	goto	u3571
  7966  1684  2E86               	goto	u3570
  7967  1685                     u3571:
  7968  1685  2ED1               	goto	l2721
  7969  1686                     u3570:
  7970  1686                     l2697:
  7971  1686  0864               	movf	___fladd@bexp,w
  7972  1687  1D03               	btfss	3,2
  7973  1688  2E8A               	goto	u3581
  7974  1689  2E8B               	goto	u3580
  7975  168A                     u3581:
  7976  168A  2E94               	goto	l2703
  7977  168B                     u3580:
  7978  168B                     l2699:
  7979  168B  3000               	movlw	0
  7980  168C  00D5               	movwf	?___fladd+3
  7981  168D  3000               	movlw	0
  7982  168E  00D4               	movwf	?___fladd+2
  7983  168F  3000               	movlw	0
  7984  1690  00D3               	movwf	?___fladd+1
  7985  1691  3000               	movlw	0
  7986  1692  00D2               	movwf	?___fladd
  7987  1693  2FFF               	goto	l736
  7988  1694                     l2703:
  7989  1694  0856               	movf	___fladd@a,w
  7990  1695  07D2               	addwf	___fladd@b,f
  7991  1696  0857               	movf	___fladd@a+1,w
  7992  1697  1103               	clrz
  7993  1698  1803               	skipnc
  7994  1699  3E01               	addlw	1
  7995  169A  1903               	skipnz
  7996  169B  2E9D               	goto	u3591
  7997  169C  07D3               	addwf	___fladd@b+1,f
  7998  169D                     u3591:
  7999  169D  0858               	movf	___fladd@a+2,w
  8000  169E  1103               	clrz
  8001  169F  1803               	skipnc
  8002  16A0  3E01               	addlw	1
  8003  16A1  1903               	skipnz
  8004  16A2  2EA4               	goto	u3592
  8005  16A3  07D4               	addwf	___fladd@b+2,f
  8006  16A4                     u3592:
  8007  16A4  0859               	movf	___fladd@a+3,w
  8008  16A5  1103               	clrz
  8009  16A6  1803               	skipnc
  8010  16A7  3E01               	addlw	1
  8011  16A8  1903               	skipnz
  8012  16A9  2EAB               	goto	u3593
  8013  16AA  07D5               	addwf	___fladd@b+3,f
  8014  16AB                     u3593:
  8015  16AB                     l2705:
  8016  16AB  1C55               	btfss	___fladd@b+3,0
  8017  16AC  2EAE               	goto	u3601
  8018  16AD  2EAF               	goto	u3600
  8019  16AE                     u3601:
  8020  16AE  2F85               	goto	l2755
  8021  16AF                     u3600:
  8022  16AF                     l2707:
  8023  16AF  1C65               	btfss	___fladd@grs,0
  8024  16B0  2EB2               	goto	u3611
  8025  16B1  2EB3               	goto	u3610
  8026  16B2                     u3611:
  8027  16B2  2EBC               	goto	l2711
  8028  16B3                     u3610:
  8029  16B3                     l2709:
  8030  16B3  0865               	movf	___fladd@grs,w
  8031  16B4  00DA               	movwf	??___fladd
  8032  16B5  1003               	clrc
  8033  16B6  0C5A               	rrf	??___fladd,w
  8034  16B7  3801               	iorlw	1
  8035  16B8  00DB               	movwf	??___fladd+1
  8036  16B9  085B               	movf	??___fladd+1,w
  8037  16BA  00E5               	movwf	___fladd@grs
  8038  16BB  2EBE               	goto	l2713
  8039  16BC                     l2711:
  8040  16BC  1003               	clrc
  8041  16BD  0CE5               	rrf	___fladd@grs,f
  8042  16BE                     l2713:
  8043  16BE  1C52               	btfss	___fladd@b,0
  8044  16BF  2EC1               	goto	u3621
  8045  16C0  2EC2               	goto	u3620
  8046  16C1                     u3621:
  8047  16C1  2EC3               	goto	l2717
  8048  16C2                     u3620:
  8049  16C2                     l2715:
  8050  16C2  17E5               	bsf	___fladd@grs,7
  8051  16C3                     l2717:
  8052  16C3  3001               	movlw	1
  8053  16C4  00DA               	movwf	??___fladd
  8054  16C5                     u3635:
  8055  16C5  0D55               	rlf	___fladd@b+3,w
  8056  16C6  0CD5               	rrf	___fladd@b+3,f
  8057  16C7  0CD4               	rrf	___fladd@b+2,f
  8058  16C8  0CD3               	rrf	___fladd@b+1,f
  8059  16C9  0CD2               	rrf	___fladd@b,f
  8060  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  8061  16CB  2EC5               	goto	u3635
  8062  16CC                     l2719:
  8063  16CC  3001               	movlw	1
  8064  16CD  00DA               	movwf	??___fladd
  8065  16CE  085A               	movf	??___fladd,w
  8066  16CF  07E4               	addwf	___fladd@bexp,f
  8067  16D0  2F85               	goto	l2755
  8068  16D1                     l2721:
  8069  16D1  0855               	movf	___fladd@b+3,w
  8070  16D2  3A80               	xorlw	128
  8071  16D3  00FF               	movwf	btemp+1
  8072  16D4  0859               	movf	___fladd@a+3,w
  8073  16D5  3A80               	xorlw	128
  8074  16D6  027F               	subwf	btemp+1,w
  8075  16D7  1D03               	skipz
  8076  16D8  2EE3               	goto	u3643
  8077  16D9  0858               	movf	___fladd@a+2,w
  8078  16DA  0254               	subwf	___fladd@b+2,w
  8079  16DB  1D03               	skipz
  8080  16DC  2EE3               	goto	u3643
  8081  16DD  0857               	movf	___fladd@a+1,w
  8082  16DE  0253               	subwf	___fladd@b+1,w
  8083  16DF  1D03               	skipz
  8084  16E0  2EE3               	goto	u3643
  8085  16E1  0856               	movf	___fladd@a,w
  8086  16E2  0252               	subwf	___fladd@b,w
  8087  16E3                     u3643:
  8088  16E3  1803               	skipnc
  8089  16E4  2EE6               	goto	u3641
  8090  16E5  2EE7               	goto	u3640
  8091  16E6                     u3641:
  8092  16E6  2F3F               	goto	l2731
  8093  16E7                     u3640:
  8094  16E7                     l2723:
  8095  16E7  30FF               	movlw	255
  8096  16E8  00DA               	movwf	??___fladd
  8097  16E9  30FF               	movlw	255
  8098  16EA  00DB               	movwf	??___fladd+1
  8099  16EB  30FF               	movlw	255
  8100  16EC  00DC               	movwf	??___fladd+2
  8101  16ED  30FF               	movlw	255
  8102  16EE  00DD               	movwf	??___fladd+3
  8103  16EF  0856               	movf	___fladd@a,w
  8104  16F0  00DE               	movwf	??___fladd+4
  8105  16F1  0857               	movf	___fladd@a+1,w
  8106  16F2  00DF               	movwf	??___fladd+5
  8107  16F3  0858               	movf	___fladd@a+2,w
  8108  16F4  00E0               	movwf	??___fladd+6
  8109  16F5  0859               	movf	___fladd@a+3,w
  8110  16F6  00E1               	movwf	??___fladd+7
  8111  16F7  0852               	movf	___fladd@b,w
  8112  16F8  02DE               	subwf	??___fladd+4,f
  8113  16F9  0853               	movf	___fladd@b+1,w
  8114  16FA  1C03               	skipc
  8115  16FB  0F53               	incfsz	___fladd@b+1,w
  8116  16FC  2EFE               	goto	u3651
  8117  16FD  2EFF               	goto	u3652
  8118  16FE                     u3651:
  8119  16FE  02DF               	subwf	??___fladd+5,f
  8120  16FF                     u3652:
  8121  16FF  0854               	movf	___fladd@b+2,w
  8122  1700  1C03               	skipc
  8123  1701  0F54               	incfsz	___fladd@b+2,w
  8124  1702  2F04               	goto	u3653
  8125  1703  2F05               	goto	u3654
  8126  1704                     u3653:
  8127  1704  02E0               	subwf	??___fladd+6,f
  8128  1705                     u3654:
  8129  1705  0855               	movf	___fladd@b+3,w
  8130  1706  1C03               	skipc
  8131  1707  0F55               	incfsz	___fladd@b+3,w
  8132  1708  2F0A               	goto	u3655
  8133  1709  2F0B               	goto	u3656
  8134  170A                     u3655:
  8135  170A  02E1               	subwf	??___fladd+7,f
  8136  170B                     u3656:
  8137  170B  085E               	movf	??___fladd+4,w
  8138  170C  07DA               	addwf	??___fladd,f
  8139  170D  085F               	movf	??___fladd+5,w
  8140  170E  1803               	skipnc
  8141  170F  0F5F               	incfsz	??___fladd+5,w
  8142  1710  2F12               	goto	u3660
  8143  1711  2F13               	goto	u3661
  8144  1712                     u3660:
  8145  1712  07DB               	addwf	??___fladd+1,f
  8146  1713                     u3661:
  8147  1713  0860               	movf	??___fladd+6,w
  8148  1714  1803               	skipnc
  8149  1715  0F60               	incfsz	??___fladd+6,w
  8150  1716  2F18               	goto	u3662
  8151  1717  2F19               	goto	u3663
  8152  1718                     u3662:
  8153  1718  07DC               	addwf	??___fladd+2,f
  8154  1719                     u3663:
  8155  1719  0861               	movf	??___fladd+7,w
  8156  171A  1803               	skipnc
  8157  171B  0A61               	incf	??___fladd+7,w
  8158  171C  07DD               	addwf	??___fladd+3,f
  8159  171D  085D               	movf	??___fladd+3,w
  8160  171E  00D5               	movwf	___fladd@b+3
  8161  171F  085C               	movf	??___fladd+2,w
  8162  1720  00D4               	movwf	___fladd@b+2
  8163  1721  085B               	movf	??___fladd+1,w
  8164  1722  00D3               	movwf	___fladd@b+1
  8165  1723  085A               	movf	??___fladd,w
  8166  1724  00D2               	movwf	___fladd@b
  8167  1725                     l2725:
  8168  1725  3080               	movlw	128
  8169  1726  00DA               	movwf	??___fladd
  8170  1727  085A               	movf	??___fladd,w
  8171  1728  06E2               	xorwf	___fladd@signs,f
  8172  1729  09E5               	comf	___fladd@grs,f
  8173  172A  0AE5               	incf	___fladd@grs,f
  8174  172B                     l2727:
  8175  172B  0865               	movf	___fladd@grs,w
  8176  172C  1D03               	btfss	3,2
  8177  172D  2F2F               	goto	u3671
  8178  172E  2F30               	goto	u3670
  8179  172F                     u3671:
  8180  172F  2F4D               	goto	l744
  8181  1730                     u3670:
  8182  1730                     l2729:
  8183  1730  3001               	movlw	1
  8184  1731  07D2               	addwf	___fladd@b,f
  8185  1732  3000               	movlw	0
  8186  1733  1803               	skipnc
  8187  1734  3001               	movlw	1
  8188  1735  07D3               	addwf	___fladd@b+1,f
  8189  1736  3000               	movlw	0
  8190  1737  1803               	skipnc
  8191  1738  3001               	movlw	1
  8192  1739  07D4               	addwf	___fladd@b+2,f
  8193  173A  3000               	movlw	0
  8194  173B  1803               	skipnc
  8195  173C  3001               	movlw	1
  8196  173D  07D5               	addwf	___fladd@b+3,f
  8197  173E  2F4D               	goto	l744
  8198  173F                     l2731:
  8199  173F  0856               	movf	___fladd@a,w
  8200  1740  02D2               	subwf	___fladd@b,f
  8201  1741  0857               	movf	___fladd@a+1,w
  8202  1742  1C03               	skipc
  8203  1743  0F57               	incfsz	___fladd@a+1,w
  8204  1744  02D3               	subwf	___fladd@b+1,f
  8205  1745  0858               	movf	___fladd@a+2,w
  8206  1746  1C03               	skipc
  8207  1747  0F58               	incfsz	___fladd@a+2,w
  8208  1748  02D4               	subwf	___fladd@b+2,f
  8209  1749  0859               	movf	___fladd@a+3,w
  8210  174A  1C03               	skipc
  8211  174B  0F59               	incfsz	___fladd@a+3,w
  8212  174C  02D5               	subwf	___fladd@b+3,f
  8213  174D                     l744:
  8214  174D  0855               	movf	___fladd@b+3,w
  8215  174E  0454               	iorwf	___fladd@b+2,w
  8216  174F  0453               	iorwf	___fladd@b+1,w
  8217  1750  0452               	iorwf	___fladd@b,w
  8218  1751  1D03               	skipz
  8219  1752  2F54               	goto	u3681
  8220  1753  2F55               	goto	u3680
  8221  1754                     u3681:
  8222  1754  2F81               	goto	l2753
  8223  1755                     u3680:
  8224  1755                     l2733:
  8225  1755  0865               	movf	___fladd@grs,w
  8226  1756  1D03               	btfss	3,2
  8227  1757  2F59               	goto	u3691
  8228  1758  2F5A               	goto	u3690
  8229  1759                     u3691:
  8230  1759  2F81               	goto	l2753
  8231  175A                     u3690:
  8232  175A                     l2735:
  8233  175A  3000               	movlw	0
  8234  175B  00D5               	movwf	?___fladd+3
  8235  175C  3000               	movlw	0
  8236  175D  00D4               	movwf	?___fladd+2
  8237  175E  3000               	movlw	0
  8238  175F  00D3               	movwf	?___fladd+1
  8239  1760  3000               	movlw	0
  8240  1761  00D2               	movwf	?___fladd
  8241  1762  2FFF               	goto	l736
  8242  1763                     l2739:
  8243  1763  3001               	movlw	1
  8244  1764  00DA               	movwf	??___fladd
  8245  1765                     u3705:
  8246  1765  1003               	clrc
  8247  1766  0DD2               	rlf	___fladd@b,f
  8248  1767  0DD3               	rlf	___fladd@b+1,f
  8249  1768  0DD4               	rlf	___fladd@b+2,f
  8250  1769  0DD5               	rlf	___fladd@b+3,f
  8251  176A  0BDA               	decfsz	??___fladd,f
  8252  176B  2F65               	goto	u3705
  8253  176C                     l2741:
  8254  176C  1FE5               	btfss	___fladd@grs,7
  8255  176D  2F6F               	goto	u3711
  8256  176E  2F70               	goto	u3710
  8257  176F                     u3711:
  8258  176F  2F71               	goto	l748
  8259  1770                     u3710:
  8260  1770                     l2743:
  8261  1770  1452               	bsf	___fladd@b,0
  8262  1771                     l748:
  8263  1771  1C65               	btfss	___fladd@grs,0
  8264  1772  2F74               	goto	u3721
  8265  1773  2F75               	goto	u3720
  8266  1774                     u3721:
  8267  1774  2F78               	goto	l2747
  8268  1775                     u3720:
  8269  1775                     l2745:
  8270  1775  1403               	setc
  8271  1776  0DE5               	rlf	___fladd@grs,f
  8272  1777  2F7A               	goto	l2749
  8273  1778                     l2747:
  8274  1778  1003               	clrc
  8275  1779  0DE5               	rlf	___fladd@grs,f
  8276  177A                     l2749:
  8277  177A  0864               	movf	___fladd@bexp,w
  8278  177B  1903               	btfsc	3,2
  8279  177C  2F7E               	goto	u3731
  8280  177D  2F7F               	goto	u3730
  8281  177E                     u3731:
  8282  177E  2F81               	goto	l2753
  8283  177F                     u3730:
  8284  177F                     l2751:
  8285  177F  3001               	movlw	1
  8286  1780  02E4               	subwf	___fladd@bexp,f
  8287  1781                     l2753:
  8288  1781  1FD4               	btfss	___fladd@b+2,7
  8289  1782  2F84               	goto	u3741
  8290  1783  2F85               	goto	u3740
  8291  1784                     u3741:
  8292  1784  2F63               	goto	l2739
  8293  1785                     u3740:
  8294  1785                     l2755:
  8295  1785  01E3               	clrf	___fladd@aexp
  8296  1786                     l2757:
  8297  1786  1FE5               	btfss	___fladd@grs,7
  8298  1787  2F89               	goto	u3751
  8299  1788  2F8A               	goto	u3750
  8300  1789                     u3751:
  8301  1789  2F98               	goto	l2765
  8302  178A                     u3750:
  8303  178A                     l2759:
  8304  178A  0865               	movf	___fladd@grs,w
  8305  178B  397F               	andlw	127
  8306  178C  1903               	btfsc	3,2
  8307  178D  2F8F               	goto	u3761
  8308  178E  2F90               	goto	u3760
  8309  178F                     u3761:
  8310  178F  2F93               	goto	l754
  8311  1790                     u3760:
  8312  1790                     l2761:
  8313  1790  01E3               	clrf	___fladd@aexp
  8314  1791  0AE3               	incf	___fladd@aexp,f
  8315  1792  2F98               	goto	l2765
  8316  1793                     l754:
  8317  1793  1C52               	btfss	___fladd@b,0
  8318  1794  2F96               	goto	u3771
  8319  1795  2F97               	goto	u3770
  8320  1796                     u3771:
  8321  1796  2F98               	goto	l2765
  8322  1797                     u3770:
  8323  1797  2F90               	goto	l2761
  8324  1798                     l2765:
  8325  1798  0863               	movf	___fladd@aexp,w
  8326  1799  1903               	btfsc	3,2
  8327  179A  2F9C               	goto	u3781
  8328  179B  2F9D               	goto	u3780
  8329  179C                     u3781:
  8330  179C  2FD1               	goto	l757
  8331  179D                     u3780:
  8332  179D                     l2767:
  8333  179D  3001               	movlw	1
  8334  179E  07D2               	addwf	___fladd@b,f
  8335  179F  3000               	movlw	0
  8336  17A0  1803               	skipnc
  8337  17A1  3001               	movlw	1
  8338  17A2  07D3               	addwf	___fladd@b+1,f
  8339  17A3  3000               	movlw	0
  8340  17A4  1803               	skipnc
  8341  17A5  3001               	movlw	1
  8342  17A6  07D4               	addwf	___fladd@b+2,f
  8343  17A7  3000               	movlw	0
  8344  17A8  1803               	skipnc
  8345  17A9  3001               	movlw	1
  8346  17AA  07D5               	addwf	___fladd@b+3,f
  8347  17AB                     l2769:
  8348  17AB  1C55               	btfss	___fladd@b+3,0
  8349  17AC  2FAE               	goto	u3791
  8350  17AD  2FAF               	goto	u3790
  8351  17AE                     u3791:
  8352  17AE  2FD1               	goto	l757
  8353  17AF                     u3790:
  8354  17AF                     l2771:
  8355  17AF  0852               	movf	___fladd@b,w
  8356  17B0  00DA               	movwf	??___fladd
  8357  17B1  0853               	movf	___fladd@b+1,w
  8358  17B2  00DB               	movwf	??___fladd+1
  8359  17B3  0854               	movf	___fladd@b+2,w
  8360  17B4  00DC               	movwf	??___fladd+2
  8361  17B5  0855               	movf	___fladd@b+3,w
  8362  17B6  00DD               	movwf	??___fladd+3
  8363  17B7  3001               	movlw	1
  8364  17B8  00DE               	movwf	??___fladd+4
  8365  17B9                     u3805:
  8366  17B9  0D5D               	rlf	??___fladd+3,w
  8367  17BA  0CDD               	rrf	??___fladd+3,f
  8368  17BB  0CDC               	rrf	??___fladd+2,f
  8369  17BC  0CDB               	rrf	??___fladd+1,f
  8370  17BD  0CDA               	rrf	??___fladd,f
  8371  17BE                     u3800:
  8372  17BE  0BDE               	decfsz	??___fladd+4,f
  8373  17BF  2FB9               	goto	u3805
  8374  17C0  085D               	movf	??___fladd+3,w
  8375  17C1  00D5               	movwf	___fladd@b+3
  8376  17C2  085C               	movf	??___fladd+2,w
  8377  17C3  00D4               	movwf	___fladd@b+2
  8378  17C4  085B               	movf	??___fladd+1,w
  8379  17C5  00D3               	movwf	___fladd@b+1
  8380  17C6  085A               	movf	??___fladd,w
  8381  17C7  00D2               	movwf	___fladd@b
  8382  17C8  0A64               	incf	___fladd@bexp,w
  8383  17C9  1903               	btfsc	3,2
  8384  17CA  2FCC               	goto	u3811
  8385  17CB  2FCD               	goto	u3810
  8386  17CC                     u3811:
  8387  17CC  2FD1               	goto	l757
  8388  17CD                     u3810:
  8389  17CD                     l2773:
  8390  17CD  3001               	movlw	1
  8391  17CE  00DA               	movwf	??___fladd
  8392  17CF  085A               	movf	??___fladd,w
  8393  17D0  07E4               	addwf	___fladd@bexp,f
  8394  17D1                     l757:
  8395  17D1  0A64               	incf	___fladd@bexp,w
  8396  17D2  1903               	btfsc	3,2
  8397  17D3  2FD5               	goto	u3821
  8398  17D4  2FD6               	goto	u3820
  8399  17D5                     u3821:
  8400  17D5  2FDB               	goto	l2777
  8401  17D6                     u3820:
  8402  17D6                     l2775:
  8403  17D6  0864               	movf	___fladd@bexp,w
  8404  17D7  1D03               	btfss	3,2
  8405  17D8  2FDA               	goto	u3831
  8406  17D9  2FDB               	goto	u3830
  8407  17DA                     u3831:
  8408  17DA  2FE9               	goto	l2783
  8409  17DB                     u3830:
  8410  17DB                     l2777:
  8411  17DB  3000               	movlw	0
  8412  17DC  00D5               	movwf	___fladd@b+3
  8413  17DD  3000               	movlw	0
  8414  17DE  00D4               	movwf	___fladd@b+2
  8415  17DF  3000               	movlw	0
  8416  17E0  00D3               	movwf	___fladd@b+1
  8417  17E1  3000               	movlw	0
  8418  17E2  00D2               	movwf	___fladd@b
  8419  17E3                     l2779:
  8420  17E3  0864               	movf	___fladd@bexp,w
  8421  17E4  1D03               	btfss	3,2
  8422  17E5  2FE7               	goto	u3841
  8423  17E6  2FE8               	goto	u3840
  8424  17E7                     u3841:
  8425  17E7  2FE9               	goto	l2783
  8426  17E8                     u3840:
  8427  17E8                     l2781:
  8428  17E8  01E2               	clrf	___fladd@signs
  8429  17E9                     l2783:
  8430  17E9  1C64               	btfss	___fladd@bexp,0
  8431  17EA  2FEC               	goto	u3851
  8432  17EB  2FED               	goto	u3850
  8433  17EC                     u3851:
  8434  17EC  2FEF               	goto	l2787
  8435  17ED                     u3850:
  8436  17ED                     l2785:
  8437  17ED  17D4               	bsf	___fladd@b+2,7
  8438  17EE  2FF3               	goto	l765
  8439  17EF                     l2787:
  8440  17EF  307F               	movlw	127
  8441  17F0  00DA               	movwf	??___fladd
  8442  17F1  085A               	movf	??___fladd,w
  8443  17F2  05D4               	andwf	___fladd@b+2,f
  8444  17F3                     l765:
  8445  17F3  0864               	movf	___fladd@bexp,w
  8446  17F4  00DA               	movwf	??___fladd
  8447  17F5  1003               	clrc
  8448  17F6  0C5A               	rrf	??___fladd,w
  8449  17F7  00DB               	movwf	??___fladd+1
  8450  17F8  085B               	movf	??___fladd+1,w
  8451  17F9  00D5               	movwf	___fladd@b+3
  8452  17FA                     l2789:
  8453  17FA  1FE2               	btfss	___fladd@signs,7
  8454  17FB  2FFD               	goto	u3861
  8455  17FC  2FFE               	goto	u3860
  8456  17FD                     u3861:
  8457  17FD  2FFF               	goto	l766
  8458  17FE                     u3860:
  8459  17FE                     l2791:
  8460  17FE  17D5               	bsf	___fladd@b+3,7
  8461  17FF                     l766:
  8462  17FF                     l736:
  8463  17FF  0008               	return
  8464  1800                     __end_of___fladd:
  8465                           
  8466                           	psect	text24
  8467  1979                     __ptext24:	
  8468 ;; *************** function ___flneg *****************
  8469 ;; Defined at:
  8470 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8471 ;; Parameters:    Size  Location     Type
  8472 ;;  f1              4    0[COMMON] unsigned char 
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;		None
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  4    0[COMMON] unsigned char 
  8477 ;; Registers used:
  8478 ;;		wreg
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8484 ;;      Params:         4       0       0       0       0
  8485 ;;      Locals:         0       0       0       0       0
  8486 ;;      Temps:          0       0       0       0       0
  8487 ;;      Totals:         4       0       0       0       0
  8488 ;;Total ram usage:        4 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; This function calls:
  8491 ;;		Nothing
  8492 ;; This function is called by:
  8493 ;;		_sprintf
  8494 ;; This function uses a non-reentrant model
  8495 ;;
  8496                           
  8497                           
  8498                           ;psect for function ___flneg
  8499  1979                     ___flneg:
  8500  1979                     l3177:	
  8501                           ;incstack = 0
  8502                           ; Regs used in ___flneg: [wreg]
  8503                           
  8504  1979  0873               	movf	___flneg@f1+3,w
  8505  197A  0472               	iorwf	___flneg@f1+2,w
  8506  197B  0471               	iorwf	___flneg@f1+1,w
  8507  197C  0470               	iorwf	___flneg@f1,w
  8508  197D  1903               	skipnz
  8509  197E  2980               	goto	u4981
  8510  197F  2981               	goto	u4980
  8511  1980                     u4981:
  8512  1980  2983               	goto	l3181
  8513  1981                     u4980:
  8514  1981                     l3179:
  8515  1981  3080               	movlw	128
  8516  1982  06F3               	xorwf	___flneg@f1+3,f
  8517  1983                     l3181:
  8518  1983                     l595:
  8519  1983  0008               	return
  8520  1984                     __end_of___flneg:
  8521                           
  8522                           	psect	text25
  8523  1EA4                     __ptext25:	
  8524 ;; *************** function ___flge *****************
  8525 ;; Defined at:
  8526 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;  ff1             4    0[COMMON] unsigned char 
  8529 ;;  ff2             4    4[COMMON] unsigned char 
  8530 ;; Auto vars:     Size  Location     Type
  8531 ;;		None
  8532 ;; Return value:  Size  Location     Type
  8533 ;;		None               void
  8534 ;; Registers used:
  8535 ;;		wreg, status,2, status,0
  8536 ;; Tracked objects:
  8537 ;;		On entry : 0/0
  8538 ;;		On exit  : 0/0
  8539 ;;		Unchanged: 0/0
  8540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8541 ;;      Params:         8       0       0       0       0
  8542 ;;      Locals:         0       0       0       0       0
  8543 ;;      Temps:          4       0       0       0       0
  8544 ;;      Totals:        12       0       0       0       0
  8545 ;;Total ram usage:       12 bytes
  8546 ;; Hardware stack levels used:    1
  8547 ;; This function calls:
  8548 ;;		Nothing
  8549 ;; This function is called by:
  8550 ;;		_sprintf
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554                           
  8555                           ;psect for function ___flge
  8556  1EA4                     ___flge:
  8557  1EA4                     l3157:	
  8558                           ;incstack = 0
  8559                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8560                           
  8561  1EA4  3000               	movlw	0
  8562  1EA5  0570               	andwf	___flge@ff1,w
  8563  1EA6  00F8               	movwf	??___flge
  8564  1EA7  3000               	movlw	0
  8565  1EA8  0571               	andwf	___flge@ff1+1,w
  8566  1EA9  00F9               	movwf	??___flge+1
  8567  1EAA  3080               	movlw	128
  8568  1EAB  0572               	andwf	___flge@ff1+2,w
  8569  1EAC  00FA               	movwf	??___flge+2
  8570  1EAD  307F               	movlw	127
  8571  1EAE  0573               	andwf	___flge@ff1+3,w
  8572  1EAF  00FB               	movwf	??___flge+3
  8573  1EB0  087B               	movf	??___flge+3,w
  8574  1EB1  047A               	iorwf	??___flge+2,w
  8575  1EB2  0479               	iorwf	??___flge+1,w
  8576  1EB3  0478               	iorwf	??___flge,w
  8577  1EB4  1D03               	skipz
  8578  1EB5  2EB7               	goto	u4911
  8579  1EB6  2EB8               	goto	u4910
  8580  1EB7                     u4911:
  8581  1EB7  2EC0               	goto	l587
  8582  1EB8                     u4910:
  8583  1EB8                     l3159:
  8584  1EB8  3000               	movlw	0
  8585  1EB9  00F3               	movwf	___flge@ff1+3
  8586  1EBA  3000               	movlw	0
  8587  1EBB  00F2               	movwf	___flge@ff1+2
  8588  1EBC  3000               	movlw	0
  8589  1EBD  00F1               	movwf	___flge@ff1+1
  8590  1EBE  3000               	movlw	0
  8591  1EBF  00F0               	movwf	___flge@ff1
  8592  1EC0                     l587:
  8593  1EC0  3000               	movlw	0
  8594  1EC1  0574               	andwf	___flge@ff2,w
  8595  1EC2  00F8               	movwf	??___flge
  8596  1EC3  3000               	movlw	0
  8597  1EC4  0575               	andwf	___flge@ff2+1,w
  8598  1EC5  00F9               	movwf	??___flge+1
  8599  1EC6  3080               	movlw	128
  8600  1EC7  0576               	andwf	___flge@ff2+2,w
  8601  1EC8  00FA               	movwf	??___flge+2
  8602  1EC9  307F               	movlw	127
  8603  1ECA  0577               	andwf	___flge@ff2+3,w
  8604  1ECB  00FB               	movwf	??___flge+3
  8605  1ECC  087B               	movf	??___flge+3,w
  8606  1ECD  047A               	iorwf	??___flge+2,w
  8607  1ECE  0479               	iorwf	??___flge+1,w
  8608  1ECF  0478               	iorwf	??___flge,w
  8609  1ED0  1D03               	skipz
  8610  1ED1  2ED3               	goto	u4921
  8611  1ED2  2ED4               	goto	u4920
  8612  1ED3                     u4921:
  8613  1ED3  2EDC               	goto	l3163
  8614  1ED4                     u4920:
  8615  1ED4                     l3161:
  8616  1ED4  3000               	movlw	0
  8617  1ED5  00F7               	movwf	___flge@ff2+3
  8618  1ED6  3000               	movlw	0
  8619  1ED7  00F6               	movwf	___flge@ff2+2
  8620  1ED8  3000               	movlw	0
  8621  1ED9  00F5               	movwf	___flge@ff2+1
  8622  1EDA  3000               	movlw	0
  8623  1EDB  00F4               	movwf	___flge@ff2
  8624  1EDC                     l3163:
  8625  1EDC  1FF3               	btfss	___flge@ff1+3,7
  8626  1EDD  2EDF               	goto	u4931
  8627  1EDE  2EE0               	goto	u4930
  8628  1EDF                     u4931:
  8629  1EDF  2F04               	goto	l3167
  8630  1EE0                     u4930:
  8631  1EE0                     l3165:
  8632  1EE0  3000               	movlw	0
  8633  1EE1  00F8               	movwf	??___flge
  8634  1EE2  3000               	movlw	0
  8635  1EE3  00F9               	movwf	??___flge+1
  8636  1EE4  3000               	movlw	0
  8637  1EE5  00FA               	movwf	??___flge+2
  8638  1EE6  3080               	movlw	128
  8639  1EE7  00FB               	movwf	??___flge+3
  8640  1EE8  0870               	movf	___flge@ff1,w
  8641  1EE9  02F8               	subwf	??___flge,f
  8642  1EEA  0871               	movf	___flge@ff1+1,w
  8643  1EEB  1C03               	skipc
  8644  1EEC  0F71               	incfsz	___flge@ff1+1,w
  8645  1EED  2EEF               	goto	u4941
  8646  1EEE  2EF0               	goto	u4942
  8647  1EEF                     u4941:
  8648  1EEF  02F9               	subwf	??___flge+1,f
  8649  1EF0                     u4942:
  8650  1EF0  0872               	movf	___flge@ff1+2,w
  8651  1EF1  1C03               	skipc
  8652  1EF2  0F72               	incfsz	___flge@ff1+2,w
  8653  1EF3  2EF5               	goto	u4943
  8654  1EF4  2EF6               	goto	u4944
  8655  1EF5                     u4943:
  8656  1EF5  02FA               	subwf	??___flge+2,f
  8657  1EF6                     u4944:
  8658  1EF6  0873               	movf	___flge@ff1+3,w
  8659  1EF7  1C03               	skipc
  8660  1EF8  0F73               	incfsz	___flge@ff1+3,w
  8661  1EF9  2EFB               	goto	u4945
  8662  1EFA  2EFC               	goto	u4946
  8663  1EFB                     u4945:
  8664  1EFB  02FB               	subwf	??___flge+3,f
  8665  1EFC                     u4946:
  8666  1EFC  087B               	movf	??___flge+3,w
  8667  1EFD  00F3               	movwf	___flge@ff1+3
  8668  1EFE  087A               	movf	??___flge+2,w
  8669  1EFF  00F2               	movwf	___flge@ff1+2
  8670  1F00  0879               	movf	??___flge+1,w
  8671  1F01  00F1               	movwf	___flge@ff1+1
  8672  1F02  0878               	movf	??___flge,w
  8673  1F03  00F0               	movwf	___flge@ff1
  8674  1F04                     l3167:
  8675  1F04  1FF7               	btfss	___flge@ff2+3,7
  8676  1F05  2F07               	goto	u4951
  8677  1F06  2F08               	goto	u4950
  8678  1F07                     u4951:
  8679  1F07  2F2C               	goto	l590
  8680  1F08                     u4950:
  8681  1F08                     l3169:
  8682  1F08  3000               	movlw	0
  8683  1F09  00F8               	movwf	??___flge
  8684  1F0A  3000               	movlw	0
  8685  1F0B  00F9               	movwf	??___flge+1
  8686  1F0C  3000               	movlw	0
  8687  1F0D  00FA               	movwf	??___flge+2
  8688  1F0E  3080               	movlw	128
  8689  1F0F  00FB               	movwf	??___flge+3
  8690  1F10  0874               	movf	___flge@ff2,w
  8691  1F11  02F8               	subwf	??___flge,f
  8692  1F12  0875               	movf	___flge@ff2+1,w
  8693  1F13  1C03               	skipc
  8694  1F14  0F75               	incfsz	___flge@ff2+1,w
  8695  1F15  2F17               	goto	u4961
  8696  1F16  2F18               	goto	u4962
  8697  1F17                     u4961:
  8698  1F17  02F9               	subwf	??___flge+1,f
  8699  1F18                     u4962:
  8700  1F18  0876               	movf	___flge@ff2+2,w
  8701  1F19  1C03               	skipc
  8702  1F1A  0F76               	incfsz	___flge@ff2+2,w
  8703  1F1B  2F1D               	goto	u4963
  8704  1F1C  2F1E               	goto	u4964
  8705  1F1D                     u4963:
  8706  1F1D  02FA               	subwf	??___flge+2,f
  8707  1F1E                     u4964:
  8708  1F1E  0877               	movf	___flge@ff2+3,w
  8709  1F1F  1C03               	skipc
  8710  1F20  0F77               	incfsz	___flge@ff2+3,w
  8711  1F21  2F23               	goto	u4965
  8712  1F22  2F24               	goto	u4966
  8713  1F23                     u4965:
  8714  1F23  02FB               	subwf	??___flge+3,f
  8715  1F24                     u4966:
  8716  1F24  087B               	movf	??___flge+3,w
  8717  1F25  00F7               	movwf	___flge@ff2+3
  8718  1F26  087A               	movf	??___flge+2,w
  8719  1F27  00F6               	movwf	___flge@ff2+2
  8720  1F28  0879               	movf	??___flge+1,w
  8721  1F29  00F5               	movwf	___flge@ff2+1
  8722  1F2A  0878               	movf	??___flge,w
  8723  1F2B  00F4               	movwf	___flge@ff2
  8724  1F2C                     l590:
  8725  1F2C  3080               	movlw	128
  8726  1F2D  06F3               	xorwf	___flge@ff1+3,f
  8727  1F2E  3080               	movlw	128
  8728  1F2F  06F7               	xorwf	___flge@ff2+3,f
  8729  1F30  0877               	movf	___flge@ff2+3,w
  8730  1F31  0273               	subwf	___flge@ff1+3,w
  8731  1F32  1D03               	skipz
  8732  1F33  2F3E               	goto	u4975
  8733  1F34  0876               	movf	___flge@ff2+2,w
  8734  1F35  0272               	subwf	___flge@ff1+2,w
  8735  1F36  1D03               	skipz
  8736  1F37  2F3E               	goto	u4975
  8737  1F38  0875               	movf	___flge@ff2+1,w
  8738  1F39  0271               	subwf	___flge@ff1+1,w
  8739  1F3A  1D03               	skipz
  8740  1F3B  2F3E               	goto	u4975
  8741  1F3C  0874               	movf	___flge@ff2,w
  8742  1F3D  0270               	subwf	___flge@ff1,w
  8743  1F3E                     u4975:
  8744  1F3E  1803               	skipnc
  8745  1F3F  2F41               	goto	u4971
  8746  1F40  2F42               	goto	u4970
  8747  1F41                     u4971:
  8748  1F41  2F44               	goto	l3173
  8749  1F42                     u4970:
  8750  1F42                     l3171:
  8751  1F42  1003               	clrc
  8752  1F43  2F45               	goto	l591
  8753  1F44                     l3173:
  8754  1F44  1403               	setc
  8755  1F45                     l591:
  8756  1F45  0008               	return
  8757  1F46                     __end_of___flge:
  8758                           
  8759                           	psect	text26
  8760  1BB0                     __ptext26:	
  8761 ;; *************** function ___fleq *****************
  8762 ;; Defined at:
  8763 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8764 ;; Parameters:    Size  Location     Type
  8765 ;;  ff1             4    0[COMMON] unsigned char 
  8766 ;;  ff2             4    4[COMMON] unsigned char 
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;		None
  8769 ;; Return value:  Size  Location     Type
  8770 ;;		None               void
  8771 ;; Registers used:
  8772 ;;		wreg, status,2, status,0
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8778 ;;      Params:         8       0       0       0       0
  8779 ;;      Locals:         0       0       0       0       0
  8780 ;;      Temps:          4       0       0       0       0
  8781 ;;      Totals:        12       0       0       0       0
  8782 ;;Total ram usage:       12 bytes
  8783 ;; Hardware stack levels used:    1
  8784 ;; This function calls:
  8785 ;;		Nothing
  8786 ;; This function is called by:
  8787 ;;		_sprintf
  8788 ;; This function uses a non-reentrant model
  8789 ;;
  8790                           
  8791                           
  8792                           ;psect for function ___fleq
  8793  1BB0                     ___fleq:
  8794  1BB0                     l3145:	
  8795                           ;incstack = 0
  8796                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8797                           
  8798  1BB0  3000               	movlw	0
  8799  1BB1  0570               	andwf	___fleq@ff1,w
  8800  1BB2  00F8               	movwf	??___fleq
  8801  1BB3  3000               	movlw	0
  8802  1BB4  0571               	andwf	___fleq@ff1+1,w
  8803  1BB5  00F9               	movwf	??___fleq+1
  8804  1BB6  3080               	movlw	128
  8805  1BB7  0572               	andwf	___fleq@ff1+2,w
  8806  1BB8  00FA               	movwf	??___fleq+2
  8807  1BB9  307F               	movlw	127
  8808  1BBA  0573               	andwf	___fleq@ff1+3,w
  8809  1BBB  00FB               	movwf	??___fleq+3
  8810  1BBC  087B               	movf	??___fleq+3,w
  8811  1BBD  047A               	iorwf	??___fleq+2,w
  8812  1BBE  0479               	iorwf	??___fleq+1,w
  8813  1BBF  0478               	iorwf	??___fleq,w
  8814  1BC0  1D03               	skipz
  8815  1BC1  2BC3               	goto	u4881
  8816  1BC2  2BC4               	goto	u4880
  8817  1BC3                     u4881:
  8818  1BC3  2BCC               	goto	l582
  8819  1BC4                     u4880:
  8820  1BC4                     l3147:
  8821  1BC4  3000               	movlw	0
  8822  1BC5  00F3               	movwf	___fleq@ff1+3
  8823  1BC6  3000               	movlw	0
  8824  1BC7  00F2               	movwf	___fleq@ff1+2
  8825  1BC8  3000               	movlw	0
  8826  1BC9  00F1               	movwf	___fleq@ff1+1
  8827  1BCA  3000               	movlw	0
  8828  1BCB  00F0               	movwf	___fleq@ff1
  8829  1BCC                     l582:
  8830  1BCC  3000               	movlw	0
  8831  1BCD  0574               	andwf	___fleq@ff2,w
  8832  1BCE  00F8               	movwf	??___fleq
  8833  1BCF  3000               	movlw	0
  8834  1BD0  0575               	andwf	___fleq@ff2+1,w
  8835  1BD1  00F9               	movwf	??___fleq+1
  8836  1BD2  3080               	movlw	128
  8837  1BD3  0576               	andwf	___fleq@ff2+2,w
  8838  1BD4  00FA               	movwf	??___fleq+2
  8839  1BD5  307F               	movlw	127
  8840  1BD6  0577               	andwf	___fleq@ff2+3,w
  8841  1BD7  00FB               	movwf	??___fleq+3
  8842  1BD8  087B               	movf	??___fleq+3,w
  8843  1BD9  047A               	iorwf	??___fleq+2,w
  8844  1BDA  0479               	iorwf	??___fleq+1,w
  8845  1BDB  0478               	iorwf	??___fleq,w
  8846  1BDC  1D03               	skipz
  8847  1BDD  2BDF               	goto	u4891
  8848  1BDE  2BE0               	goto	u4890
  8849  1BDF                     u4891:
  8850  1BDF  2BE8               	goto	l583
  8851  1BE0                     u4890:
  8852  1BE0                     l3149:
  8853  1BE0  3000               	movlw	0
  8854  1BE1  00F7               	movwf	___fleq@ff2+3
  8855  1BE2  3000               	movlw	0
  8856  1BE3  00F6               	movwf	___fleq@ff2+2
  8857  1BE4  3000               	movlw	0
  8858  1BE5  00F5               	movwf	___fleq@ff2+1
  8859  1BE6  3000               	movlw	0
  8860  1BE7  00F4               	movwf	___fleq@ff2
  8861  1BE8                     l583:
  8862  1BE8  0877               	movf	___fleq@ff2+3,w
  8863  1BE9  0673               	xorwf	___fleq@ff1+3,w
  8864  1BEA  1D03               	skipz
  8865  1BEB  2BF6               	goto	u4905
  8866  1BEC  0876               	movf	___fleq@ff2+2,w
  8867  1BED  0672               	xorwf	___fleq@ff1+2,w
  8868  1BEE  1D03               	skipz
  8869  1BEF  2BF6               	goto	u4905
  8870  1BF0  0875               	movf	___fleq@ff2+1,w
  8871  1BF1  0671               	xorwf	___fleq@ff1+1,w
  8872  1BF2  1D03               	skipz
  8873  1BF3  2BF6               	goto	u4905
  8874  1BF4  0874               	movf	___fleq@ff2,w
  8875  1BF5  0670               	xorwf	___fleq@ff1,w
  8876  1BF6                     u4905:
  8877  1BF6  1903               	skipnz
  8878  1BF7  2BF9               	goto	u4901
  8879  1BF8  2BFA               	goto	u4900
  8880  1BF9                     u4901:
  8881  1BF9  2BFC               	goto	l3153
  8882  1BFA                     u4900:
  8883  1BFA                     l3151:
  8884  1BFA  1003               	clrc
  8885  1BFB  2BFD               	goto	l584
  8886  1BFC                     l3153:
  8887  1BFC  1403               	setc
  8888  1BFD                     l584:
  8889  1BFD  0008               	return
  8890  1BFE                     __end_of___fleq:
  8891                           
  8892                           	psect	text27
  8893  1B65                     __ptext27:	
  8894 ;; *************** function _Lcd_Init *****************
  8895 ;; Defined at:
  8896 ;;		line 14 in file "LCD.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;		None
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;		None
  8901 ;; Return value:  Size  Location     Type
  8902 ;;                  1    wreg      void 
  8903 ;; Registers used:
  8904 ;;		wreg, status,2, status,0, pclath, cstack
  8905 ;; Tracked objects:
  8906 ;;		On entry : 0/0
  8907 ;;		On exit  : 0/0
  8908 ;;		Unchanged: 0/0
  8909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8910 ;;      Params:         0       0       0       0       0
  8911 ;;      Locals:         0       0       0       0       0
  8912 ;;      Temps:          2       0       0       0       0
  8913 ;;      Totals:         2       0       0       0       0
  8914 ;;Total ram usage:        2 bytes
  8915 ;; Hardware stack levels used:    1
  8916 ;; Hardware stack levels required when called:    2
  8917 ;; This function calls:
  8918 ;;		_Lcd_Cmd
  8919 ;;		_Lcd_Port
  8920 ;; This function is called by:
  8921 ;;		_main
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           
  8925                           
  8926                           ;psect for function _Lcd_Init
  8927  1B65                     _Lcd_Init:
  8928  1B65                     l2303:	
  8929                           ;incstack = 0
  8930                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  8931                           
  8932                           
  8933                           ;LCD.c: 15:   Lcd_Port(0x00);
  8934  1B65  3000               	movlw	0
  8935  1B66  120A  158A  2000  160A  158A  	fcall	_Lcd_Port
  8936  1B6B                     l2305:
  8937                           
  8938                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  8939  1B6B  3034               	movlw	52
  8940  1B6C  00F5               	movwf	??_Lcd_Init+1
  8941  1B6D  30F1               	movlw	241
  8942  1B6E  00F4               	movwf	??_Lcd_Init
  8943  1B6F                     u6147:
  8944  1B6F  0BF4               	decfsz	??_Lcd_Init,f
  8945  1B70  2B6F               	goto	u6147
  8946  1B71  0BF5               	decfsz	??_Lcd_Init+1,f
  8947  1B72  2B6F               	goto	u6147
  8948  1B73  2B74               	nop2
  8949  1B74                     l2307:
  8950                           
  8951                           ;LCD.c: 17:   Lcd_Cmd(0x030);
  8952  1B74  3030               	movlw	48
  8953  1B75  160A  158A  2196  160A  158A  	fcall	_Lcd_Cmd
  8954                           
  8955                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  8956  1B7A  300D               	movlw	13
  8957  1B7B  00F5               	movwf	??_Lcd_Init+1
  8958  1B7C  30FB               	movlw	251
  8959  1B7D  00F4               	movwf	??_Lcd_Init
  8960  1B7E                     u6157:
  8961  1B7E  0BF4               	decfsz	??_Lcd_Init,f
  8962  1B7F  2B7E               	goto	u6157
  8963  1B80  0BF5               	decfsz	??_Lcd_Init+1,f
  8964  1B81  2B7E               	goto	u6157
  8965  1B82  2B83               	nop2
  8966  1B83                     l2309:
  8967                           
  8968                           ;LCD.c: 19:   Lcd_Cmd(0x030);
  8969  1B83  3030               	movlw	48
  8970  1B84  160A  158A  2196  160A  158A  	fcall	_Lcd_Cmd
  8971  1B89                     l2311:
  8972                           
  8973                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  8974  1B89  301D               	movlw	29
  8975  1B8A  00F5               	movwf	??_Lcd_Init+1
  8976  1B8B  3091               	movlw	145
  8977  1B8C  00F4               	movwf	??_Lcd_Init
  8978  1B8D                     u6167:
  8979  1B8D  0BF4               	decfsz	??_Lcd_Init,f
  8980  1B8E  2B8D               	goto	u6167
  8981  1B8F  0BF5               	decfsz	??_Lcd_Init+1,f
  8982  1B90  2B8D               	goto	u6167
  8983                           
  8984                           ;LCD.c: 21:   Lcd_Cmd(0x030);
  8985  1B91  3030               	movlw	48
  8986  1B92  160A  158A  2196  160A  158A  	fcall	_Lcd_Cmd
  8987                           
  8988                           ;LCD.c: 22:   Lcd_Cmd(0x038);
  8989  1B97  3038               	movlw	56
  8990  1B98  160A  158A  2196  160A  158A  	fcall	_Lcd_Cmd
  8991                           
  8992                           ;LCD.c: 23:   Lcd_Cmd(0x00C);
  8993  1B9D  300C               	movlw	12
  8994  1B9E  160A  158A  2196  160A  158A  	fcall	_Lcd_Cmd
  8995                           
  8996                           ;LCD.c: 24:   Lcd_Cmd(0x001);
  8997  1BA3  3001               	movlw	1
  8998  1BA4  160A  158A  2196  160A  158A  	fcall	_Lcd_Cmd
  8999                           
  9000                           ;LCD.c: 25:   Lcd_Cmd(0x006);
  9001  1BA9  3006               	movlw	6
  9002  1BAA  160A  158A  2196  160A  158A  	fcall	_Lcd_Cmd
  9003  1BAF                     l120:
  9004  1BAF  0008               	return
  9005  1BB0                     __end_of_Lcd_Init:
  9006                           
  9007                           	psect	text28
  9008  1996                     __ptext28:	
  9009 ;; *************** function _Lcd_Cmd *****************
  9010 ;; Defined at:
  9011 ;;		line 33 in file "LCD.c"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;  a               1    wreg     unsigned char 
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;  a               1    3[COMMON] unsigned char 
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  1    wreg      void 
  9018 ;; Registers used:
  9019 ;;		wreg, status,2, status,0, pclath, cstack
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9025 ;;      Params:         0       0       0       0       0
  9026 ;;      Locals:         1       0       0       0       0
  9027 ;;      Temps:          2       0       0       0       0
  9028 ;;      Totals:         3       0       0       0       0
  9029 ;;Total ram usage:        3 bytes
  9030 ;; Hardware stack levels used:    1
  9031 ;; Hardware stack levels required when called:    1
  9032 ;; This function calls:
  9033 ;;		_Lcd_Port
  9034 ;; This function is called by:
  9035 ;;		_Lcd_Init
  9036 ;;		_Lcd_Set_Cursor
  9037 ;;		_Lcd_Clear
  9038 ;;		_Lcd_Shift_Right
  9039 ;;		_Lcd_Shift_Left
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043                           
  9044                           ;psect for function _Lcd_Cmd
  9045  1996                     _Lcd_Cmd:
  9046                           
  9047                           ;incstack = 0
  9048                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9049                           ;Lcd_Cmd@a stored from wreg
  9050  1996  00F3               	movwf	Lcd_Cmd@a
  9051  1997                     l1449:
  9052                           
  9053                           ;LCD.c: 34:  PORTEbits.RE0 = 0;
  9054  1997  1283               	bcf	3,5	;RP0=0, select bank0
  9055  1998  1303               	bcf	3,6	;RP1=0, select bank0
  9056  1999  1009               	bcf	9,0	;volatile
  9057  199A                     l1451:
  9058                           
  9059                           ;LCD.c: 35:  Lcd_Port(a);
  9060  199A  0873               	movf	Lcd_Cmd@a,w
  9061  199B  120A  158A  2000  160A  158A  	fcall	_Lcd_Port
  9062  19A0                     l1453:
  9063                           
  9064                           ;LCD.c: 36:  PORTEbits.RE2 = 1;
  9065  19A0  1283               	bcf	3,5	;RP0=0, select bank0
  9066  19A1  1303               	bcf	3,6	;RP1=0, select bank0
  9067  19A2  1509               	bsf	9,2	;volatile
  9068  19A3                     l1455:
  9069                           
  9070                           ;LCD.c: 37:         _delay((unsigned long)((4)*(8000000/4000.0)));
  9071  19A3  300B               	movlw	11
  9072  19A4  00F2               	movwf	??_Lcd_Cmd+1
  9073  19A5  3062               	movlw	98
  9074  19A6  00F1               	movwf	??_Lcd_Cmd
  9075  19A7                     u6177:
  9076  19A7  0BF1               	decfsz	??_Lcd_Cmd,f
  9077  19A8  29A7               	goto	u6177
  9078  19A9  0BF2               	decfsz	??_Lcd_Cmd+1,f
  9079  19AA  29A7               	goto	u6177
  9080  19AB  0000               	nop
  9081  19AC                     l1457:
  9082                           
  9083                           ;LCD.c: 38:         PORTEbits.RE2 = 0;
  9084  19AC  1283               	bcf	3,5	;RP0=0, select bank0
  9085  19AD  1303               	bcf	3,6	;RP1=0, select bank0
  9086  19AE  1109               	bcf	9,2	;volatile
  9087  19AF                     l126:
  9088  19AF  0008               	return
  9089  19B0                     __end_of_Lcd_Cmd:
  9090                           
  9091                           	psect	text29
  9092  0800                     __ptext29:	
  9093 ;; *************** function _Lcd_Port *****************
  9094 ;; Defined at:
  9095 ;;		line 29 in file "LCD.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;  a               1    wreg     unsigned char 
  9098 ;; Auto vars:     Size  Location     Type
  9099 ;;  a               1    0[COMMON] unsigned char 
  9100 ;; Return value:  Size  Location     Type
  9101 ;;                  1    wreg      void 
  9102 ;; Registers used:
  9103 ;;		wreg
  9104 ;; Tracked objects:
  9105 ;;		On entry : 0/0
  9106 ;;		On exit  : 0/0
  9107 ;;		Unchanged: 0/0
  9108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9109 ;;      Params:         0       0       0       0       0
  9110 ;;      Locals:         1       0       0       0       0
  9111 ;;      Temps:          0       0       0       0       0
  9112 ;;      Totals:         1       0       0       0       0
  9113 ;;Total ram usage:        1 bytes
  9114 ;; Hardware stack levels used:    1
  9115 ;; This function calls:
  9116 ;;		Nothing
  9117 ;; This function is called by:
  9118 ;;		_Lcd_Init
  9119 ;;		_Lcd_Cmd
  9120 ;;		_Lcd_Write_Char
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           
  9125                           ;psect for function _Lcd_Port
  9126  0800                     _Lcd_Port:
  9127                           
  9128                           ;incstack = 0
  9129                           ; Regs used in _Lcd_Port: [wreg]
  9130                           ;Lcd_Port@a stored from wreg
  9131  0800  00F0               	movwf	Lcd_Port@a
  9132  0801                     l983:
  9133                           
  9134                           ;LCD.c: 30:     PORTD = a;
  9135  0801  0870               	movf	Lcd_Port@a,w
  9136  0802  1283               	bcf	3,5	;RP0=0, select bank0
  9137  0803  1303               	bcf	3,6	;RP1=0, select bank0
  9138  0804  0088               	movwf	8	;volatile
  9139  0805                     l123:
  9140  0805  0008               	return
  9141  0806                     __end_of_Lcd_Port:
  9142                           
  9143                           	psect	text30
  9144  1E31                     __ptext30:	
  9145 ;; *************** function _ADC_channel2 *****************
  9146 ;; Defined at:
  9147 ;;		line 151 in file "pseudocodigo_lab3.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;		None
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;		None
  9152 ;; Return value:  Size  Location     Type
  9153 ;;                  1    wreg      void 
  9154 ;; Registers used:
  9155 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9156 ;; Tracked objects:
  9157 ;;		On entry : 0/0
  9158 ;;		On exit  : 0/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9161 ;;      Params:         0       0       0       0       0
  9162 ;;      Locals:         0       0       0       0       0
  9163 ;;      Temps:          0       4       0       0       0
  9164 ;;      Totals:         0       4       0       0       0
  9165 ;;Total ram usage:        4 bytes
  9166 ;; Hardware stack levels used:    1
  9167 ;; Hardware stack levels required when called:    2
  9168 ;; This function calls:
  9169 ;;		_ADC_Config
  9170 ;;		___fldiv
  9171 ;;		___flmul
  9172 ;;		___xxtofl
  9173 ;; This function is called by:
  9174 ;;		_main
  9175 ;; This function uses a non-reentrant model
  9176 ;;
  9177                           
  9178                           
  9179                           ;psect for function _ADC_channel2
  9180  1E31                     _ADC_channel2:
  9181  1E31                     l3757:	
  9182                           ;incstack = 0
  9183                           ; Regs used in _ADC_channel2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9184                           
  9185                           
  9186                           ;pseudocodigo_lab3.c: 152:     ADC_Config (1);
  9187  1E31  3001               	movlw	1
  9188  1E32  160A  118A  2017  160A  158A  	fcall	_ADC_Config
  9189  1E37                     l3759:
  9190                           
  9191                           ;pseudocodigo_lab3.c: 153:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9192  1E37  3003               	movlw	3
  9193  1E38  1283               	bcf	3,5	;RP0=0, select bank0
  9194  1E39  1303               	bcf	3,6	;RP1=0, select bank0
  9195  1E3A  00D9               	movwf	??_ADC_channel2+1
  9196  1E3B  3097               	movlw	151
  9197  1E3C  00D8               	movwf	??_ADC_channel2
  9198  1E3D                     u6187:
  9199  1E3D  0BD8               	decfsz	??_ADC_channel2,f
  9200  1E3E  2E3D               	goto	u6187
  9201  1E3F  0BD9               	decfsz	??_ADC_channel2+1,f
  9202  1E40  2E3D               	goto	u6187
  9203  1E41                     l3761:
  9204                           
  9205                           ;pseudocodigo_lab3.c: 154:     ADCON0bits.GO = 1;
  9206  1E41  1283               	bcf	3,5	;RP0=0, select bank0
  9207  1E42  1303               	bcf	3,6	;RP1=0, select bank0
  9208  1E43  149F               	bsf	31,1	;volatile
  9209                           
  9210                           ;pseudocodigo_lab3.c: 155:     while (ADCON0bits.GO == 1) {
  9211  1E44  2E9E               	goto	l3765
  9212  1E45                     l3763:
  9213                           
  9214                           ;pseudocodigo_lab3.c: 156:         S2_val = ((ADRESH * 5.0) / 255);
  9215  1E45  3043               	movlw	67
  9216  1E46  00C1               	movwf	___fldiv@a+3
  9217  1E47  307F               	movlw	127
  9218  1E48  00C0               	movwf	___fldiv@a+2
  9219  1E49  3000               	movlw	0
  9220  1E4A  00BF               	movwf	___fldiv@a+1
  9221  1E4B  3000               	movlw	0
  9222  1E4C  00BE               	movwf	___fldiv@a
  9223  1E4D  3040               	movlw	64
  9224  1E4E  00A7               	movwf	___flmul@b+3
  9225  1E4F  30A0               	movlw	160
  9226  1E50  00A6               	movwf	___flmul@b+2
  9227  1E51  3000               	movlw	0
  9228  1E52  00A5               	movwf	___flmul@b+1
  9229  1E53  3000               	movlw	0
  9230  1E54  00A4               	movwf	___flmul@b
  9231  1E55  081E               	movf	30,w	;volatile
  9232  1E56  00D8               	movwf	??_ADC_channel2
  9233  1E57  01D9               	clrf	??_ADC_channel2+1
  9234  1E58  01DA               	clrf	??_ADC_channel2+2
  9235  1E59  01DB               	clrf	??_ADC_channel2+3
  9236  1E5A  085B               	movf	??_ADC_channel2+3,w
  9237  1E5B  00F3               	movwf	___xxtofl@val+3
  9238  1E5C  085A               	movf	??_ADC_channel2+2,w
  9239  1E5D  00F2               	movwf	___xxtofl@val+2
  9240  1E5E  0859               	movf	??_ADC_channel2+1,w
  9241  1E5F  00F1               	movwf	___xxtofl@val+1
  9242  1E60  0858               	movf	??_ADC_channel2,w
  9243  1E61  00F0               	movwf	___xxtofl@val
  9244  1E62  3001               	movlw	1
  9245  1E63  160A  158A  2746  160A  158A  	fcall	___xxtofl
  9246  1E68  0873               	movf	?___xxtofl+3,w
  9247  1E69  1283               	bcf	3,5	;RP0=0, select bank0
  9248  1E6A  1303               	bcf	3,6	;RP1=0, select bank0
  9249  1E6B  00AB               	movwf	___flmul@a+3
  9250  1E6C  0872               	movf	?___xxtofl+2,w
  9251  1E6D  00AA               	movwf	___flmul@a+2
  9252  1E6E  0871               	movf	?___xxtofl+1,w
  9253  1E6F  00A9               	movwf	___flmul@a+1
  9254  1E70  0870               	movf	?___xxtofl,w
  9255  1E71  00A8               	movwf	___flmul@a
  9256  1E72  120A  158A  249F  160A  158A  	fcall	___flmul
  9257  1E77  1283               	bcf	3,5	;RP0=0, select bank0
  9258  1E78  1303               	bcf	3,6	;RP1=0, select bank0
  9259  1E79  0827               	movf	?___flmul+3,w
  9260  1E7A  00C5               	movwf	___fldiv@b+3
  9261  1E7B  0826               	movf	?___flmul+2,w
  9262  1E7C  00C4               	movwf	___fldiv@b+2
  9263  1E7D  0825               	movf	?___flmul+1,w
  9264  1E7E  00C3               	movwf	___fldiv@b+1
  9265  1E7F  0824               	movf	?___flmul,w
  9266  1E80  00C2               	movwf	___fldiv@b
  9267  1E81  160A  118A  2190  160A  158A  	fcall	___fldiv
  9268  1E86  1283               	bcf	3,5	;RP0=0, select bank0
  9269  1E87  1303               	bcf	3,6	;RP1=0, select bank0
  9270  1E88  0841               	movf	?___fldiv+3,w
  9271  1E89  1683               	bsf	3,5	;RP0=1, select bank1
  9272  1E8A  1303               	bcf	3,6	;RP1=0, select bank1
  9273  1E8B  00CA               	movwf	(_S2_val+3)^(0+128)
  9274  1E8C  1283               	bcf	3,5	;RP0=0, select bank0
  9275  1E8D  1303               	bcf	3,6	;RP1=0, select bank0
  9276  1E8E  0840               	movf	?___fldiv+2,w
  9277  1E8F  1683               	bsf	3,5	;RP0=1, select bank1
  9278  1E90  1303               	bcf	3,6	;RP1=0, select bank1
  9279  1E91  00C9               	movwf	(_S2_val+2)^(0+128)
  9280  1E92  1283               	bcf	3,5	;RP0=0, select bank0
  9281  1E93  1303               	bcf	3,6	;RP1=0, select bank0
  9282  1E94  083F               	movf	?___fldiv+1,w
  9283  1E95  1683               	bsf	3,5	;RP0=1, select bank1
  9284  1E96  1303               	bcf	3,6	;RP1=0, select bank1
  9285  1E97  00C8               	movwf	(_S2_val+1)^(0+128)
  9286  1E98  1283               	bcf	3,5	;RP0=0, select bank0
  9287  1E99  1303               	bcf	3,6	;RP1=0, select bank0
  9288  1E9A  083E               	movf	?___fldiv,w
  9289  1E9B  1683               	bsf	3,5	;RP0=1, select bank1
  9290  1E9C  1303               	bcf	3,6	;RP1=0, select bank1
  9291  1E9D  00C7               	movwf	_S2_val^(0+128)
  9292  1E9E                     l3765:
  9293                           
  9294                           ;pseudocodigo_lab3.c: 155:     while (ADCON0bits.GO == 1) {
  9295  1E9E  1283               	bcf	3,5	;RP0=0, select bank0
  9296  1E9F  189F               	btfsc	31,1	;volatile
  9297  1EA0  2EA2               	goto	u6091
  9298  1EA1  2EA3               	goto	u6090
  9299  1EA2                     u6091:
  9300  1EA2  2E45               	goto	l3763
  9301  1EA3                     u6090:
  9302  1EA3                     l85:
  9303  1EA3  0008               	return
  9304  1EA4                     __end_of_ADC_channel2:
  9305                           
  9306                           	psect	text31
  9307  1DBE                     __ptext31:	
  9308 ;; *************** function _ADC_channel1 *****************
  9309 ;; Defined at:
  9310 ;;		line 142 in file "pseudocodigo_lab3.c"
  9311 ;; Parameters:    Size  Location     Type
  9312 ;;		None
  9313 ;; Auto vars:     Size  Location     Type
  9314 ;;		None
  9315 ;; Return value:  Size  Location     Type
  9316 ;;                  1    wreg      void 
  9317 ;; Registers used:
  9318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9319 ;; Tracked objects:
  9320 ;;		On entry : 0/0
  9321 ;;		On exit  : 0/0
  9322 ;;		Unchanged: 0/0
  9323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9324 ;;      Params:         0       0       0       0       0
  9325 ;;      Locals:         0       0       0       0       0
  9326 ;;      Temps:          0       4       0       0       0
  9327 ;;      Totals:         0       4       0       0       0
  9328 ;;Total ram usage:        4 bytes
  9329 ;; Hardware stack levels used:    1
  9330 ;; Hardware stack levels required when called:    2
  9331 ;; This function calls:
  9332 ;;		_ADC_Config
  9333 ;;		___fldiv
  9334 ;;		___flmul
  9335 ;;		___xxtofl
  9336 ;; This function is called by:
  9337 ;;		_main
  9338 ;; This function uses a non-reentrant model
  9339 ;;
  9340                           
  9341                           
  9342                           ;psect for function _ADC_channel1
  9343  1DBE                     _ADC_channel1:
  9344  1DBE                     l3747:	
  9345                           ;incstack = 0
  9346                           ; Regs used in _ADC_channel1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9347                           
  9348                           
  9349                           ;pseudocodigo_lab3.c: 143:     ADC_Config (0);
  9350  1DBE  3000               	movlw	0
  9351  1DBF  160A  118A  2017  160A  158A  	fcall	_ADC_Config
  9352  1DC4                     l3749:
  9353                           
  9354                           ;pseudocodigo_lab3.c: 144:     _delay((unsigned long)((1)*(8000000/4000.0)));
  9355  1DC4  3003               	movlw	3
  9356  1DC5  1283               	bcf	3,5	;RP0=0, select bank0
  9357  1DC6  1303               	bcf	3,6	;RP1=0, select bank0
  9358  1DC7  00D9               	movwf	??_ADC_channel1+1
  9359  1DC8  3097               	movlw	151
  9360  1DC9  00D8               	movwf	??_ADC_channel1
  9361  1DCA                     u6197:
  9362  1DCA  0BD8               	decfsz	??_ADC_channel1,f
  9363  1DCB  2DCA               	goto	u6197
  9364  1DCC  0BD9               	decfsz	??_ADC_channel1+1,f
  9365  1DCD  2DCA               	goto	u6197
  9366  1DCE                     l3751:
  9367                           
  9368                           ;pseudocodigo_lab3.c: 145:     ADCON0bits.GO = 1;
  9369  1DCE  1283               	bcf	3,5	;RP0=0, select bank0
  9370  1DCF  1303               	bcf	3,6	;RP1=0, select bank0
  9371  1DD0  149F               	bsf	31,1	;volatile
  9372                           
  9373                           ;pseudocodigo_lab3.c: 146:     while (ADCON0bits.GO == 1) {
  9374  1DD1  2E2B               	goto	l3755
  9375  1DD2                     l3753:
  9376                           
  9377                           ;pseudocodigo_lab3.c: 147:         S1_val = ((ADRESH * 5.0) / 255);
  9378  1DD2  3043               	movlw	67
  9379  1DD3  00C1               	movwf	___fldiv@a+3
  9380  1DD4  307F               	movlw	127
  9381  1DD5  00C0               	movwf	___fldiv@a+2
  9382  1DD6  3000               	movlw	0
  9383  1DD7  00BF               	movwf	___fldiv@a+1
  9384  1DD8  3000               	movlw	0
  9385  1DD9  00BE               	movwf	___fldiv@a
  9386  1DDA  3040               	movlw	64
  9387  1DDB  00A7               	movwf	___flmul@b+3
  9388  1DDC  30A0               	movlw	160
  9389  1DDD  00A6               	movwf	___flmul@b+2
  9390  1DDE  3000               	movlw	0
  9391  1DDF  00A5               	movwf	___flmul@b+1
  9392  1DE0  3000               	movlw	0
  9393  1DE1  00A4               	movwf	___flmul@b
  9394  1DE2  081E               	movf	30,w	;volatile
  9395  1DE3  00D8               	movwf	??_ADC_channel1
  9396  1DE4  01D9               	clrf	??_ADC_channel1+1
  9397  1DE5  01DA               	clrf	??_ADC_channel1+2
  9398  1DE6  01DB               	clrf	??_ADC_channel1+3
  9399  1DE7  085B               	movf	??_ADC_channel1+3,w
  9400  1DE8  00F3               	movwf	___xxtofl@val+3
  9401  1DE9  085A               	movf	??_ADC_channel1+2,w
  9402  1DEA  00F2               	movwf	___xxtofl@val+2
  9403  1DEB  0859               	movf	??_ADC_channel1+1,w
  9404  1DEC  00F1               	movwf	___xxtofl@val+1
  9405  1DED  0858               	movf	??_ADC_channel1,w
  9406  1DEE  00F0               	movwf	___xxtofl@val
  9407  1DEF  3001               	movlw	1
  9408  1DF0  160A  158A  2746  160A  158A  	fcall	___xxtofl
  9409  1DF5  0873               	movf	?___xxtofl+3,w
  9410  1DF6  1283               	bcf	3,5	;RP0=0, select bank0
  9411  1DF7  1303               	bcf	3,6	;RP1=0, select bank0
  9412  1DF8  00AB               	movwf	___flmul@a+3
  9413  1DF9  0872               	movf	?___xxtofl+2,w
  9414  1DFA  00AA               	movwf	___flmul@a+2
  9415  1DFB  0871               	movf	?___xxtofl+1,w
  9416  1DFC  00A9               	movwf	___flmul@a+1
  9417  1DFD  0870               	movf	?___xxtofl,w
  9418  1DFE  00A8               	movwf	___flmul@a
  9419  1DFF  120A  158A  249F  160A  158A  	fcall	___flmul
  9420  1E04  1283               	bcf	3,5	;RP0=0, select bank0
  9421  1E05  1303               	bcf	3,6	;RP1=0, select bank0
  9422  1E06  0827               	movf	?___flmul+3,w
  9423  1E07  00C5               	movwf	___fldiv@b+3
  9424  1E08  0826               	movf	?___flmul+2,w
  9425  1E09  00C4               	movwf	___fldiv@b+2
  9426  1E0A  0825               	movf	?___flmul+1,w
  9427  1E0B  00C3               	movwf	___fldiv@b+1
  9428  1E0C  0824               	movf	?___flmul,w
  9429  1E0D  00C2               	movwf	___fldiv@b
  9430  1E0E  160A  118A  2190  160A  158A  	fcall	___fldiv
  9431  1E13  1283               	bcf	3,5	;RP0=0, select bank0
  9432  1E14  1303               	bcf	3,6	;RP1=0, select bank0
  9433  1E15  0841               	movf	?___fldiv+3,w
  9434  1E16  1683               	bsf	3,5	;RP0=1, select bank1
  9435  1E17  1303               	bcf	3,6	;RP1=0, select bank1
  9436  1E18  00CE               	movwf	(_S1_val+3)^(0+128)
  9437  1E19  1283               	bcf	3,5	;RP0=0, select bank0
  9438  1E1A  1303               	bcf	3,6	;RP1=0, select bank0
  9439  1E1B  0840               	movf	?___fldiv+2,w
  9440  1E1C  1683               	bsf	3,5	;RP0=1, select bank1
  9441  1E1D  1303               	bcf	3,6	;RP1=0, select bank1
  9442  1E1E  00CD               	movwf	(_S1_val+2)^(0+128)
  9443  1E1F  1283               	bcf	3,5	;RP0=0, select bank0
  9444  1E20  1303               	bcf	3,6	;RP1=0, select bank0
  9445  1E21  083F               	movf	?___fldiv+1,w
  9446  1E22  1683               	bsf	3,5	;RP0=1, select bank1
  9447  1E23  1303               	bcf	3,6	;RP1=0, select bank1
  9448  1E24  00CC               	movwf	(_S1_val+1)^(0+128)
  9449  1E25  1283               	bcf	3,5	;RP0=0, select bank0
  9450  1E26  1303               	bcf	3,6	;RP1=0, select bank0
  9451  1E27  083E               	movf	?___fldiv,w
  9452  1E28  1683               	bsf	3,5	;RP0=1, select bank1
  9453  1E29  1303               	bcf	3,6	;RP1=0, select bank1
  9454  1E2A  00CB               	movwf	_S1_val^(0+128)
  9455  1E2B                     l3755:
  9456                           
  9457                           ;pseudocodigo_lab3.c: 146:     while (ADCON0bits.GO == 1) {
  9458  1E2B  1283               	bcf	3,5	;RP0=0, select bank0
  9459  1E2C  189F               	btfsc	31,1	;volatile
  9460  1E2D  2E2F               	goto	u6081
  9461  1E2E  2E30               	goto	u6080
  9462  1E2F                     u6081:
  9463  1E2F  2DD2               	goto	l3753
  9464  1E30                     u6080:
  9465  1E30                     l79:
  9466  1E30  0008               	return
  9467  1E31                     __end_of_ADC_channel1:
  9468                           
  9469                           	psect	text32
  9470  1F46                     __ptext32:	
  9471 ;; *************** function ___xxtofl *****************
  9472 ;; Defined at:
  9473 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;  sign            1    wreg     unsigned char 
  9476 ;;  val             4    0[COMMON] long 
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;  sign            1    8[COMMON] unsigned char 
  9479 ;;  arg             4   10[COMMON] unsigned long 
  9480 ;;  exp             1    9[COMMON] unsigned char 
  9481 ;; Return value:  Size  Location     Type
  9482 ;;                  4    0[COMMON] unsigned char 
  9483 ;; Registers used:
  9484 ;;		wreg, status,2, status,0
  9485 ;; Tracked objects:
  9486 ;;		On entry : 0/0
  9487 ;;		On exit  : 0/0
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9490 ;;      Params:         4       0       0       0       0
  9491 ;;      Locals:         6       0       0       0       0
  9492 ;;      Temps:          4       0       0       0       0
  9493 ;;      Totals:        14       0       0       0       0
  9494 ;;Total ram usage:       14 bytes
  9495 ;; Hardware stack levels used:    1
  9496 ;; This function calls:
  9497 ;;		Nothing
  9498 ;; This function is called by:
  9499 ;;		_ADC_channel1
  9500 ;;		_ADC_channel2
  9501 ;;		_sprintf
  9502 ;; This function uses a non-reentrant model
  9503 ;;
  9504                           
  9505                           
  9506                           ;psect for function ___xxtofl
  9507  1F46                     ___xxtofl:
  9508                           
  9509                           ;incstack = 0
  9510                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9511                           ;___xxtofl@sign stored from wreg
  9512  1F46  00F8               	movwf	___xxtofl@sign
  9513  1F47                     l3247:
  9514  1F47  0878               	movf	___xxtofl@sign,w
  9515  1F48  1903               	btfsc	3,2
  9516  1F49  2F4B               	goto	u5151
  9517  1F4A  2F4C               	goto	u5150
  9518  1F4B                     u5151:
  9519  1F4B  2F60               	goto	l3253
  9520  1F4C                     u5150:
  9521  1F4C                     l3249:
  9522  1F4C  1FF3               	btfss	___xxtofl@val+3,7
  9523  1F4D  2F4F               	goto	u5161
  9524  1F4E  2F50               	goto	u5160
  9525  1F4F                     u5161:
  9526  1F4F  2F60               	goto	l3253
  9527  1F50                     u5160:
  9528  1F50                     l3251:
  9529  1F50  0970               	comf	___xxtofl@val,w
  9530  1F51  00FA               	movwf	___xxtofl@arg
  9531  1F52  0971               	comf	___xxtofl@val+1,w
  9532  1F53  00FB               	movwf	___xxtofl@arg+1
  9533  1F54  0972               	comf	___xxtofl@val+2,w
  9534  1F55  00FC               	movwf	___xxtofl@arg+2
  9535  1F56  0973               	comf	___xxtofl@val+3,w
  9536  1F57  00FD               	movwf	___xxtofl@arg+3
  9537  1F58  0AFA               	incf	___xxtofl@arg,f
  9538  1F59  1903               	skipnz
  9539  1F5A  0AFB               	incf	___xxtofl@arg+1,f
  9540  1F5B  1903               	skipnz
  9541  1F5C  0AFC               	incf	___xxtofl@arg+2,f
  9542  1F5D  1903               	skipnz
  9543  1F5E  0AFD               	incf	___xxtofl@arg+3,f
  9544  1F5F  2F68               	goto	l863
  9545  1F60                     l3253:
  9546  1F60  0873               	movf	___xxtofl@val+3,w
  9547  1F61  00FD               	movwf	___xxtofl@arg+3
  9548  1F62  0872               	movf	___xxtofl@val+2,w
  9549  1F63  00FC               	movwf	___xxtofl@arg+2
  9550  1F64  0871               	movf	___xxtofl@val+1,w
  9551  1F65  00FB               	movwf	___xxtofl@arg+1
  9552  1F66  0870               	movf	___xxtofl@val,w
  9553  1F67  00FA               	movwf	___xxtofl@arg
  9554  1F68                     l863:
  9555  1F68  0873               	movf	___xxtofl@val+3,w
  9556  1F69  0472               	iorwf	___xxtofl@val+2,w
  9557  1F6A  0471               	iorwf	___xxtofl@val+1,w
  9558  1F6B  0470               	iorwf	___xxtofl@val,w
  9559  1F6C  1D03               	skipz
  9560  1F6D  2F6F               	goto	u5171
  9561  1F6E  2F70               	goto	u5170
  9562  1F6F                     u5171:
  9563  1F6F  2F79               	goto	l3259
  9564  1F70                     u5170:
  9565  1F70                     l3255:
  9566  1F70  3000               	movlw	0
  9567  1F71  00F3               	movwf	?___xxtofl+3
  9568  1F72  3000               	movlw	0
  9569  1F73  00F2               	movwf	?___xxtofl+2
  9570  1F74  3000               	movlw	0
  9571  1F75  00F1               	movwf	?___xxtofl+1
  9572  1F76  3000               	movlw	0
  9573  1F77  00F0               	movwf	?___xxtofl
  9574  1F78  2FFF               	goto	l865
  9575  1F79                     l3259:
  9576  1F79  3096               	movlw	150
  9577  1F7A  00F4               	movwf	??___xxtofl
  9578  1F7B  0874               	movf	??___xxtofl,w
  9579  1F7C  00F9               	movwf	___xxtofl@exp
  9580  1F7D  2F8B               	goto	l3263
  9581  1F7E                     l3261:
  9582  1F7E  3001               	movlw	1
  9583  1F7F  00F4               	movwf	??___xxtofl
  9584  1F80  0874               	movf	??___xxtofl,w
  9585  1F81  07F9               	addwf	___xxtofl@exp,f
  9586  1F82  3001               	movlw	1
  9587  1F83                     u5185:
  9588  1F83  1003               	clrc
  9589  1F84  0CFD               	rrf	___xxtofl@arg+3,f
  9590  1F85  0CFC               	rrf	___xxtofl@arg+2,f
  9591  1F86  0CFB               	rrf	___xxtofl@arg+1,f
  9592  1F87  0CFA               	rrf	___xxtofl@arg,f
  9593  1F88  3EFF               	addlw	-1
  9594  1F89  1D03               	skipz
  9595  1F8A  2F83               	goto	u5185
  9596  1F8B                     l3263:
  9597  1F8B  30FE               	movlw	254
  9598  1F8C  057D               	andwf	___xxtofl@arg+3,w
  9599  1F8D  1D03               	btfss	3,2
  9600  1F8E  2F90               	goto	u5191
  9601  1F8F  2F91               	goto	u5190
  9602  1F90                     u5191:
  9603  1F90  2F7E               	goto	l3261
  9604  1F91                     u5190:
  9605  1F91  2FAD               	goto	l869
  9606  1F92                     l3265:
  9607  1F92  3001               	movlw	1
  9608  1F93  00F4               	movwf	??___xxtofl
  9609  1F94  0874               	movf	??___xxtofl,w
  9610  1F95  07F9               	addwf	___xxtofl@exp,f
  9611  1F96                     l3267:
  9612  1F96  3001               	movlw	1
  9613  1F97  07FA               	addwf	___xxtofl@arg,f
  9614  1F98  3000               	movlw	0
  9615  1F99  1803               	skipnc
  9616  1F9A  3001               	movlw	1
  9617  1F9B  07FB               	addwf	___xxtofl@arg+1,f
  9618  1F9C  3000               	movlw	0
  9619  1F9D  1803               	skipnc
  9620  1F9E  3001               	movlw	1
  9621  1F9F  07FC               	addwf	___xxtofl@arg+2,f
  9622  1FA0  3000               	movlw	0
  9623  1FA1  1803               	skipnc
  9624  1FA2  3001               	movlw	1
  9625  1FA3  07FD               	addwf	___xxtofl@arg+3,f
  9626  1FA4                     l3269:
  9627  1FA4  3001               	movlw	1
  9628  1FA5                     u5205:
  9629  1FA5  1003               	clrc
  9630  1FA6  0CFD               	rrf	___xxtofl@arg+3,f
  9631  1FA7  0CFC               	rrf	___xxtofl@arg+2,f
  9632  1FA8  0CFB               	rrf	___xxtofl@arg+1,f
  9633  1FA9  0CFA               	rrf	___xxtofl@arg,f
  9634  1FAA  3EFF               	addlw	-1
  9635  1FAB  1D03               	skipz
  9636  1FAC  2FA5               	goto	u5205
  9637  1FAD                     l869:
  9638  1FAD  30FF               	movlw	255
  9639  1FAE  057D               	andwf	___xxtofl@arg+3,w
  9640  1FAF  1D03               	btfss	3,2
  9641  1FB0  2FB2               	goto	u5211
  9642  1FB1  2FB3               	goto	u5210
  9643  1FB2                     u5211:
  9644  1FB2  2F92               	goto	l3265
  9645  1FB3                     u5210:
  9646  1FB3  2FBF               	goto	l3273
  9647  1FB4                     l3271:
  9648  1FB4  3001               	movlw	1
  9649  1FB5  02F9               	subwf	___xxtofl@exp,f
  9650  1FB6  3001               	movlw	1
  9651  1FB7  00F4               	movwf	??___xxtofl
  9652  1FB8                     u5225:
  9653  1FB8  1003               	clrc
  9654  1FB9  0DFA               	rlf	___xxtofl@arg,f
  9655  1FBA  0DFB               	rlf	___xxtofl@arg+1,f
  9656  1FBB  0DFC               	rlf	___xxtofl@arg+2,f
  9657  1FBC  0DFD               	rlf	___xxtofl@arg+3,f
  9658  1FBD  0BF4               	decfsz	??___xxtofl,f
  9659  1FBE  2FB8               	goto	u5225
  9660  1FBF                     l3273:
  9661  1FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  9662  1FC0  2FC2               	goto	u5231
  9663  1FC1  2FC3               	goto	u5230
  9664  1FC2                     u5231:
  9665  1FC2  2FC9               	goto	l876
  9666  1FC3                     u5230:
  9667  1FC3                     l3275:
  9668  1FC3  3002               	movlw	2
  9669  1FC4  0279               	subwf	___xxtofl@exp,w
  9670  1FC5  1803               	skipnc
  9671  1FC6  2FC8               	goto	u5241
  9672  1FC7  2FC9               	goto	u5240
  9673  1FC8                     u5241:
  9674  1FC8  2FB4               	goto	l3271
  9675  1FC9                     u5240:
  9676  1FC9                     l876:
  9677  1FC9  1879               	btfsc	___xxtofl@exp,0
  9678  1FCA  2FCC               	goto	u5251
  9679  1FCB  2FCD               	goto	u5250
  9680  1FCC                     u5251:
  9681  1FCC  2FD5               	goto	l877
  9682  1FCD                     u5250:
  9683  1FCD                     l3277:
  9684  1FCD  30FF               	movlw	255
  9685  1FCE  05FA               	andwf	___xxtofl@arg,f
  9686  1FCF  30FF               	movlw	255
  9687  1FD0  05FB               	andwf	___xxtofl@arg+1,f
  9688  1FD1  307F               	movlw	127
  9689  1FD2  05FC               	andwf	___xxtofl@arg+2,f
  9690  1FD3  30FF               	movlw	255
  9691  1FD4  05FD               	andwf	___xxtofl@arg+3,f
  9692  1FD5                     l877:
  9693  1FD5  1003               	clrc
  9694  1FD6  0CF9               	rrf	___xxtofl@exp,f
  9695  1FD7                     l3279:
  9696  1FD7  0879               	movf	___xxtofl@exp,w
  9697  1FD8  00F4               	movwf	??___xxtofl
  9698  1FD9  01F5               	clrf	??___xxtofl+1
  9699  1FDA  01F6               	clrf	??___xxtofl+2
  9700  1FDB  01F7               	clrf	??___xxtofl+3
  9701  1FDC  3018               	movlw	24
  9702  1FDD                     u5265:
  9703  1FDD  1003               	clrc
  9704  1FDE  0DF4               	rlf	??___xxtofl,f
  9705  1FDF  0DF5               	rlf	??___xxtofl+1,f
  9706  1FE0  0DF6               	rlf	??___xxtofl+2,f
  9707  1FE1  0DF7               	rlf	??___xxtofl+3,f
  9708  1FE2                     u5260:
  9709  1FE2  3EFF               	addlw	-1
  9710  1FE3  1D03               	skipz
  9711  1FE4  2FDD               	goto	u5265
  9712  1FE5  0874               	movf	??___xxtofl,w
  9713  1FE6  04FA               	iorwf	___xxtofl@arg,f
  9714  1FE7  0875               	movf	??___xxtofl+1,w
  9715  1FE8  04FB               	iorwf	___xxtofl@arg+1,f
  9716  1FE9  0876               	movf	??___xxtofl+2,w
  9717  1FEA  04FC               	iorwf	___xxtofl@arg+2,f
  9718  1FEB  0877               	movf	??___xxtofl+3,w
  9719  1FEC  04FD               	iorwf	___xxtofl@arg+3,f
  9720  1FED                     l3281:
  9721  1FED  0878               	movf	___xxtofl@sign,w
  9722  1FEE  1903               	btfsc	3,2
  9723  1FEF  2FF1               	goto	u5271
  9724  1FF0  2FF2               	goto	u5270
  9725  1FF1                     u5271:
  9726  1FF1  2FF7               	goto	l3287
  9727  1FF2                     u5270:
  9728  1FF2                     l3283:
  9729  1FF2  1FF3               	btfss	___xxtofl@val+3,7
  9730  1FF3  2FF5               	goto	u5281
  9731  1FF4  2FF6               	goto	u5280
  9732  1FF5                     u5281:
  9733  1FF5  2FF7               	goto	l3287
  9734  1FF6                     u5280:
  9735  1FF6                     l3285:
  9736  1FF6  17FD               	bsf	___xxtofl@arg+3,7
  9737  1FF7                     l3287:
  9738  1FF7  087D               	movf	___xxtofl@arg+3,w
  9739  1FF8  00F3               	movwf	?___xxtofl+3
  9740  1FF9  087C               	movf	___xxtofl@arg+2,w
  9741  1FFA  00F2               	movwf	?___xxtofl+2
  9742  1FFB  087B               	movf	___xxtofl@arg+1,w
  9743  1FFC  00F1               	movwf	?___xxtofl+1
  9744  1FFD  087A               	movf	___xxtofl@arg,w
  9745  1FFE  00F0               	movwf	?___xxtofl
  9746  1FFF                     l865:
  9747  1FFF  0008               	return
  9748  2000                     __end_of___xxtofl:
  9749                           
  9750                           	psect	text33
  9751  0C9F                     __ptext33:	
  9752 ;; *************** function ___flmul *****************
  9753 ;; Defined at:
  9754 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;  b               4    4[BANK0 ] unsigned char 
  9757 ;;  a               4    8[BANK0 ] unsigned char 
  9758 ;; Auto vars:     Size  Location     Type
  9759 ;;  prod            4   24[BANK0 ] struct .
  9760 ;;  grs             4   18[BANK0 ] unsigned long 
  9761 ;;  temp            2   28[BANK0 ] struct .
  9762 ;;  bexp            1   23[BANK0 ] unsigned char 
  9763 ;;  aexp            1   22[BANK0 ] unsigned char 
  9764 ;;  sign            1   17[BANK0 ] unsigned char 
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  4    4[BANK0 ] unsigned char 
  9767 ;; Registers used:
  9768 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9774 ;;      Params:         0       8       0       0       0
  9775 ;;      Locals:         0      13       0       0       0
  9776 ;;      Temps:          0       5       0       0       0
  9777 ;;      Totals:         0      26       0       0       0
  9778 ;;Total ram usage:       26 bytes
  9779 ;; Hardware stack levels used:    1
  9780 ;; Hardware stack levels required when called:    1
  9781 ;; This function calls:
  9782 ;;		__Umul8_16
  9783 ;; This function is called by:
  9784 ;;		_ADC_channel1
  9785 ;;		_ADC_channel2
  9786 ;;		_fround
  9787 ;;		_scale
  9788 ;;		_sprintf
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           
  9793                           ;psect for function ___flmul
  9794  0C9F                     ___flmul:
  9795  0C9F                     l2793:	
  9796                           ;incstack = 0
  9797                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9798                           
  9799  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  9800  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  9801  0CA1  0827               	movf	___flmul@b+3,w
  9802  0CA2  3980               	andlw	128
  9803  0CA3  00AC               	movwf	??___flmul
  9804  0CA4  082C               	movf	??___flmul,w
  9805  0CA5  00B1               	movwf	___flmul@sign
  9806  0CA6                     l2795:
  9807  0CA6  0827               	movf	___flmul@b+3,w
  9808  0CA7  00AC               	movwf	??___flmul
  9809  0CA8  072C               	addwf	??___flmul,w
  9810  0CA9  00AD               	movwf	??___flmul+1
  9811  0CAA  082D               	movf	??___flmul+1,w
  9812  0CAB  00B7               	movwf	___flmul@bexp
  9813  0CAC                     l2797:
  9814  0CAC  1FA6               	btfss	___flmul@b+2,7
  9815  0CAD  2CAF               	goto	u3871
  9816  0CAE  2CB0               	goto	u3870
  9817  0CAF                     u3871:
  9818  0CAF  2CB1               	goto	l2801
  9819  0CB0                     u3870:
  9820  0CB0                     l2799:
  9821  0CB0  1437               	bsf	___flmul@bexp,0
  9822  0CB1                     l2801:
  9823  0CB1  0837               	movf	___flmul@bexp,w
  9824  0CB2  1903               	btfsc	3,2
  9825  0CB3  2CB5               	goto	u3881
  9826  0CB4  2CB6               	goto	u3880
  9827  0CB5                     u3881:
  9828  0CB5  2CC5               	goto	l2809
  9829  0CB6                     u3880:
  9830  0CB6                     l2803:
  9831  0CB6  0A37               	incf	___flmul@bexp,w
  9832  0CB7  1D03               	btfss	3,2
  9833  0CB8  2CBA               	goto	u3891
  9834  0CB9  2CBB               	goto	u3890
  9835  0CBA                     u3891:
  9836  0CBA  2CC3               	goto	l2807
  9837  0CBB                     u3890:
  9838  0CBB                     l2805:
  9839  0CBB  3000               	movlw	0
  9840  0CBC  00A7               	movwf	___flmul@b+3
  9841  0CBD  3000               	movlw	0
  9842  0CBE  00A6               	movwf	___flmul@b+2
  9843  0CBF  3000               	movlw	0
  9844  0CC0  00A5               	movwf	___flmul@b+1
  9845  0CC1  3000               	movlw	0
  9846  0CC2  00A4               	movwf	___flmul@b
  9847  0CC3                     l2807:
  9848  0CC3  17A6               	bsf	___flmul@b+2,7
  9849  0CC4  2CCD               	goto	l2811
  9850  0CC5                     l2809:
  9851  0CC5  3000               	movlw	0
  9852  0CC6  00A7               	movwf	___flmul@b+3
  9853  0CC7  3000               	movlw	0
  9854  0CC8  00A6               	movwf	___flmul@b+2
  9855  0CC9  3000               	movlw	0
  9856  0CCA  00A5               	movwf	___flmul@b+1
  9857  0CCB  3000               	movlw	0
  9858  0CCC  00A4               	movwf	___flmul@b
  9859  0CCD                     l2811:
  9860  0CCD  082B               	movf	___flmul@a+3,w
  9861  0CCE  3980               	andlw	128
  9862  0CCF  00AC               	movwf	??___flmul
  9863  0CD0  082C               	movf	??___flmul,w
  9864  0CD1  06B1               	xorwf	___flmul@sign,f
  9865  0CD2                     l2813:
  9866  0CD2  082B               	movf	___flmul@a+3,w
  9867  0CD3  00AC               	movwf	??___flmul
  9868  0CD4  072C               	addwf	??___flmul,w
  9869  0CD5  00AD               	movwf	??___flmul+1
  9870  0CD6  082D               	movf	??___flmul+1,w
  9871  0CD7  00B6               	movwf	___flmul@aexp
  9872  0CD8                     l2815:
  9873  0CD8  1FAA               	btfss	___flmul@a+2,7
  9874  0CD9  2CDB               	goto	u3901
  9875  0CDA  2CDC               	goto	u3900
  9876  0CDB                     u3901:
  9877  0CDB  2CDD               	goto	l2819
  9878  0CDC                     u3900:
  9879  0CDC                     l2817:
  9880  0CDC  1436               	bsf	___flmul@aexp,0
  9881  0CDD                     l2819:
  9882  0CDD  0836               	movf	___flmul@aexp,w
  9883  0CDE  1903               	btfsc	3,2
  9884  0CDF  2CE1               	goto	u3911
  9885  0CE0  2CE2               	goto	u3910
  9886  0CE1                     u3911:
  9887  0CE1  2CF1               	goto	l2827
  9888  0CE2                     u3910:
  9889  0CE2                     l2821:
  9890  0CE2  0A36               	incf	___flmul@aexp,w
  9891  0CE3  1D03               	btfss	3,2
  9892  0CE4  2CE6               	goto	u3921
  9893  0CE5  2CE7               	goto	u3920
  9894  0CE6                     u3921:
  9895  0CE6  2CEF               	goto	l2825
  9896  0CE7                     u3920:
  9897  0CE7                     l2823:
  9898  0CE7  3000               	movlw	0
  9899  0CE8  00AB               	movwf	___flmul@a+3
  9900  0CE9  3000               	movlw	0
  9901  0CEA  00AA               	movwf	___flmul@a+2
  9902  0CEB  3000               	movlw	0
  9903  0CEC  00A9               	movwf	___flmul@a+1
  9904  0CED  3000               	movlw	0
  9905  0CEE  00A8               	movwf	___flmul@a
  9906  0CEF                     l2825:
  9907  0CEF  17AA               	bsf	___flmul@a+2,7
  9908  0CF0  2CF9               	goto	l2829
  9909  0CF1                     l2827:
  9910  0CF1  3000               	movlw	0
  9911  0CF2  00AB               	movwf	___flmul@a+3
  9912  0CF3  3000               	movlw	0
  9913  0CF4  00AA               	movwf	___flmul@a+2
  9914  0CF5  3000               	movlw	0
  9915  0CF6  00A9               	movwf	___flmul@a+1
  9916  0CF7  3000               	movlw	0
  9917  0CF8  00A8               	movwf	___flmul@a
  9918  0CF9                     l2829:
  9919  0CF9  0836               	movf	___flmul@aexp,w
  9920  0CFA  1903               	btfsc	3,2
  9921  0CFB  2CFD               	goto	u3931
  9922  0CFC  2CFE               	goto	u3930
  9923  0CFD                     u3931:
  9924  0CFD  2D03               	goto	l2833
  9925  0CFE                     u3930:
  9926  0CFE                     l2831:
  9927  0CFE  0837               	movf	___flmul@bexp,w
  9928  0CFF  1D03               	btfss	3,2
  9929  0D00  2D02               	goto	u3941
  9930  0D01  2D03               	goto	u3940
  9931  0D02                     u3941:
  9932  0D02  2D0C               	goto	l2837
  9933  0D03                     u3940:
  9934  0D03                     l2833:
  9935  0D03  3000               	movlw	0
  9936  0D04  00A7               	movwf	?___flmul+3
  9937  0D05  3000               	movlw	0
  9938  0D06  00A6               	movwf	?___flmul+2
  9939  0D07  3000               	movlw	0
  9940  0D08  00A5               	movwf	?___flmul+1
  9941  0D09  3000               	movlw	0
  9942  0D0A  00A4               	movwf	?___flmul
  9943  0D0B  2FFF               	goto	l819
  9944  0D0C                     l2837:
  9945  0D0C  0824               	movf	___flmul@b,w
  9946  0D0D  00AC               	movwf	??___flmul
  9947  0D0E  082C               	movf	??___flmul,w
  9948  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  9949  0D10  082A               	movf	___flmul@a+2,w
  9950  0D11  160A  158A  225D  120A  158A  	fcall	__Umul8_16
  9951  0D16  0871               	movf	?__Umul8_16+1,w
  9952  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  9953  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  9954  0D19  00BD               	movwf	___flmul@temp+1
  9955  0D1A  0870               	movf	?__Umul8_16,w
  9956  0D1B  00BC               	movwf	___flmul@temp
  9957  0D1C                     l2839:
  9958  0D1C  083C               	movf	___flmul@temp,w
  9959  0D1D  00AC               	movwf	??___flmul
  9960  0D1E  01AD               	clrf	??___flmul+1
  9961  0D1F  01AE               	clrf	??___flmul+2
  9962  0D20  01AF               	clrf	??___flmul+3
  9963  0D21  082F               	movf	??___flmul+3,w
  9964  0D22  00B5               	movwf	___flmul@grs+3
  9965  0D23  082E               	movf	??___flmul+2,w
  9966  0D24  00B4               	movwf	___flmul@grs+2
  9967  0D25  082D               	movf	??___flmul+1,w
  9968  0D26  00B3               	movwf	___flmul@grs+1
  9969  0D27  082C               	movf	??___flmul,w
  9970  0D28  00B2               	movwf	___flmul@grs
  9971  0D29                     l2841:
  9972  0D29  083D               	movf	___flmul@temp+1,w
  9973  0D2A  00AC               	movwf	??___flmul
  9974  0D2B  01AD               	clrf	??___flmul+1
  9975  0D2C  01AE               	clrf	??___flmul+2
  9976  0D2D  01AF               	clrf	??___flmul+3
  9977  0D2E  082F               	movf	??___flmul+3,w
  9978  0D2F  00BB               	movwf	___flmul@prod+3
  9979  0D30  082E               	movf	??___flmul+2,w
  9980  0D31  00BA               	movwf	___flmul@prod+2
  9981  0D32  082D               	movf	??___flmul+1,w
  9982  0D33  00B9               	movwf	___flmul@prod+1
  9983  0D34  082C               	movf	??___flmul,w
  9984  0D35  00B8               	movwf	___flmul@prod
  9985  0D36  0825               	movf	___flmul@b+1,w
  9986  0D37  00AC               	movwf	??___flmul
  9987  0D38  082C               	movf	??___flmul,w
  9988  0D39  00F0               	movwf	__Umul8_16@multiplicand
  9989  0D3A  0829               	movf	___flmul@a+1,w
  9990  0D3B  160A  158A  225D  120A  158A  	fcall	__Umul8_16
  9991  0D40  0871               	movf	?__Umul8_16+1,w
  9992  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  9993  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  9994  0D43  00BD               	movwf	___flmul@temp+1
  9995  0D44  0870               	movf	?__Umul8_16,w
  9996  0D45  00BC               	movwf	___flmul@temp
  9997  0D46                     l2843:
  9998  0D46  083C               	movf	___flmul@temp,w
  9999  0D47  00AC               	movwf	??___flmul
 10000  0D48  01AD               	clrf	??___flmul+1
 10001  0D49  01AE               	clrf	??___flmul+2
 10002  0D4A  01AF               	clrf	??___flmul+3
 10003  0D4B  082C               	movf	??___flmul,w
 10004  0D4C  07B2               	addwf	___flmul@grs,f
 10005  0D4D  082D               	movf	??___flmul+1,w
 10006  0D4E  1103               	clrz
 10007  0D4F  1803               	skipnc
 10008  0D50  3E01               	addlw	1
 10009  0D51  1903               	skipnz
 10010  0D52  2D54               	goto	u3951
 10011  0D53  07B3               	addwf	___flmul@grs+1,f
 10012  0D54                     u3951:
 10013  0D54  082E               	movf	??___flmul+2,w
 10014  0D55  1103               	clrz
 10015  0D56  1803               	skipnc
 10016  0D57  3E01               	addlw	1
 10017  0D58  1903               	skipnz
 10018  0D59  2D5B               	goto	u3952
 10019  0D5A  07B4               	addwf	___flmul@grs+2,f
 10020  0D5B                     u3952:
 10021  0D5B  082F               	movf	??___flmul+3,w
 10022  0D5C  1103               	clrz
 10023  0D5D  1803               	skipnc
 10024  0D5E  3E01               	addlw	1
 10025  0D5F  1903               	skipnz
 10026  0D60  2D62               	goto	u3953
 10027  0D61  07B5               	addwf	___flmul@grs+3,f
 10028  0D62                     u3953:
 10029  0D62                     l2845:
 10030  0D62  083D               	movf	___flmul@temp+1,w
 10031  0D63  00AC               	movwf	??___flmul
 10032  0D64  01AD               	clrf	??___flmul+1
 10033  0D65  01AE               	clrf	??___flmul+2
 10034  0D66  01AF               	clrf	??___flmul+3
 10035  0D67  082C               	movf	??___flmul,w
 10036  0D68  07B8               	addwf	___flmul@prod,f
 10037  0D69  082D               	movf	??___flmul+1,w
 10038  0D6A  1103               	clrz
 10039  0D6B  1803               	skipnc
 10040  0D6C  3E01               	addlw	1
 10041  0D6D  1903               	skipnz
 10042  0D6E  2D70               	goto	u3961
 10043  0D6F  07B9               	addwf	___flmul@prod+1,f
 10044  0D70                     u3961:
 10045  0D70  082E               	movf	??___flmul+2,w
 10046  0D71  1103               	clrz
 10047  0D72  1803               	skipnc
 10048  0D73  3E01               	addlw	1
 10049  0D74  1903               	skipnz
 10050  0D75  2D77               	goto	u3962
 10051  0D76  07BA               	addwf	___flmul@prod+2,f
 10052  0D77                     u3962:
 10053  0D77  082F               	movf	??___flmul+3,w
 10054  0D78  1103               	clrz
 10055  0D79  1803               	skipnc
 10056  0D7A  3E01               	addlw	1
 10057  0D7B  1903               	skipnz
 10058  0D7C  2D7E               	goto	u3963
 10059  0D7D  07BB               	addwf	___flmul@prod+3,f
 10060  0D7E                     u3963:
 10061  0D7E  0826               	movf	___flmul@b+2,w
 10062  0D7F  00AC               	movwf	??___flmul
 10063  0D80  082C               	movf	??___flmul,w
 10064  0D81  00F0               	movwf	__Umul8_16@multiplicand
 10065  0D82  0828               	movf	___flmul@a,w
 10066  0D83  160A  158A  225D  120A  158A  	fcall	__Umul8_16
 10067  0D88  0871               	movf	?__Umul8_16+1,w
 10068  0D89  1283               	bcf	3,5	;RP0=0, select bank0
 10069  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
 10070  0D8B  00BD               	movwf	___flmul@temp+1
 10071  0D8C  0870               	movf	?__Umul8_16,w
 10072  0D8D  00BC               	movwf	___flmul@temp
 10073  0D8E                     l2847:
 10074  0D8E  083C               	movf	___flmul@temp,w
 10075  0D8F  00AC               	movwf	??___flmul
 10076  0D90  01AD               	clrf	??___flmul+1
 10077  0D91  01AE               	clrf	??___flmul+2
 10078  0D92  01AF               	clrf	??___flmul+3
 10079  0D93  082C               	movf	??___flmul,w
 10080  0D94  07B2               	addwf	___flmul@grs,f
 10081  0D95  082D               	movf	??___flmul+1,w
 10082  0D96  1103               	clrz
 10083  0D97  1803               	skipnc
 10084  0D98  3E01               	addlw	1
 10085  0D99  1903               	skipnz
 10086  0D9A  2D9C               	goto	u3971
 10087  0D9B  07B3               	addwf	___flmul@grs+1,f
 10088  0D9C                     u3971:
 10089  0D9C  082E               	movf	??___flmul+2,w
 10090  0D9D  1103               	clrz
 10091  0D9E  1803               	skipnc
 10092  0D9F  3E01               	addlw	1
 10093  0DA0  1903               	skipnz
 10094  0DA1  2DA3               	goto	u3972
 10095  0DA2  07B4               	addwf	___flmul@grs+2,f
 10096  0DA3                     u3972:
 10097  0DA3  082F               	movf	??___flmul+3,w
 10098  0DA4  1103               	clrz
 10099  0DA5  1803               	skipnc
 10100  0DA6  3E01               	addlw	1
 10101  0DA7  1903               	skipnz
 10102  0DA8  2DAA               	goto	u3973
 10103  0DA9  07B5               	addwf	___flmul@grs+3,f
 10104  0DAA                     u3973:
 10105  0DAA                     l2849:
 10106  0DAA  083D               	movf	___flmul@temp+1,w
 10107  0DAB  00AC               	movwf	??___flmul
 10108  0DAC  01AD               	clrf	??___flmul+1
 10109  0DAD  01AE               	clrf	??___flmul+2
 10110  0DAE  01AF               	clrf	??___flmul+3
 10111  0DAF  082C               	movf	??___flmul,w
 10112  0DB0  07B8               	addwf	___flmul@prod,f
 10113  0DB1  082D               	movf	??___flmul+1,w
 10114  0DB2  1103               	clrz
 10115  0DB3  1803               	skipnc
 10116  0DB4  3E01               	addlw	1
 10117  0DB5  1903               	skipnz
 10118  0DB6  2DB8               	goto	u3981
 10119  0DB7  07B9               	addwf	___flmul@prod+1,f
 10120  0DB8                     u3981:
 10121  0DB8  082E               	movf	??___flmul+2,w
 10122  0DB9  1103               	clrz
 10123  0DBA  1803               	skipnc
 10124  0DBB  3E01               	addlw	1
 10125  0DBC  1903               	skipnz
 10126  0DBD  2DBF               	goto	u3982
 10127  0DBE  07BA               	addwf	___flmul@prod+2,f
 10128  0DBF                     u3982:
 10129  0DBF  082F               	movf	??___flmul+3,w
 10130  0DC0  1103               	clrz
 10131  0DC1  1803               	skipnc
 10132  0DC2  3E01               	addlw	1
 10133  0DC3  1903               	skipnz
 10134  0DC4  2DC6               	goto	u3983
 10135  0DC5  07BB               	addwf	___flmul@prod+3,f
 10136  0DC6                     u3983:
 10137  0DC6                     l2851:
 10138  0DC6  3008               	movlw	8
 10139  0DC7  00AC               	movwf	??___flmul
 10140  0DC8                     u3995:
 10141  0DC8  1003               	clrc
 10142  0DC9  0DB2               	rlf	___flmul@grs,f
 10143  0DCA  0DB3               	rlf	___flmul@grs+1,f
 10144  0DCB  0DB4               	rlf	___flmul@grs+2,f
 10145  0DCC  0DB5               	rlf	___flmul@grs+3,f
 10146  0DCD  0BAC               	decfsz	??___flmul,f
 10147  0DCE  2DC8               	goto	u3995
 10148  0DCF                     l2853:
 10149  0DCF  0825               	movf	___flmul@b+1,w
 10150  0DD0  00AC               	movwf	??___flmul
 10151  0DD1  082C               	movf	??___flmul,w
 10152  0DD2  00F0               	movwf	__Umul8_16@multiplicand
 10153  0DD3  0828               	movf	___flmul@a,w
 10154  0DD4  160A  158A  225D  120A  158A  	fcall	__Umul8_16
 10155  0DD9  0871               	movf	?__Umul8_16+1,w
 10156  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
 10157  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
 10158  0DDC  00BD               	movwf	___flmul@temp+1
 10159  0DDD  0870               	movf	?__Umul8_16,w
 10160  0DDE  00BC               	movwf	___flmul@temp
 10161  0DDF                     l2855:
 10162  0DDF  083C               	movf	___flmul@temp,w
 10163  0DE0  00AC               	movwf	??___flmul
 10164  0DE1  083D               	movf	___flmul@temp+1,w
 10165  0DE2  00AD               	movwf	??___flmul+1
 10166  0DE3  01AE               	clrf	??___flmul+2
 10167  0DE4  01AF               	clrf	??___flmul+3
 10168  0DE5  082C               	movf	??___flmul,w
 10169  0DE6  07B2               	addwf	___flmul@grs,f
 10170  0DE7  082D               	movf	??___flmul+1,w
 10171  0DE8  1103               	clrz
 10172  0DE9  1803               	skipnc
 10173  0DEA  3E01               	addlw	1
 10174  0DEB  1903               	skipnz
 10175  0DEC  2DEE               	goto	u4001
 10176  0DED  07B3               	addwf	___flmul@grs+1,f
 10177  0DEE                     u4001:
 10178  0DEE  082E               	movf	??___flmul+2,w
 10179  0DEF  1103               	clrz
 10180  0DF0  1803               	skipnc
 10181  0DF1  3E01               	addlw	1
 10182  0DF2  1903               	skipnz
 10183  0DF3  2DF5               	goto	u4002
 10184  0DF4  07B4               	addwf	___flmul@grs+2,f
 10185  0DF5                     u4002:
 10186  0DF5  082F               	movf	??___flmul+3,w
 10187  0DF6  1103               	clrz
 10188  0DF7  1803               	skipnc
 10189  0DF8  3E01               	addlw	1
 10190  0DF9  1903               	skipnz
 10191  0DFA  2DFC               	goto	u4003
 10192  0DFB  07B5               	addwf	___flmul@grs+3,f
 10193  0DFC                     u4003:
 10194  0DFC                     l2857:
 10195  0DFC  0824               	movf	___flmul@b,w
 10196  0DFD  00AC               	movwf	??___flmul
 10197  0DFE  082C               	movf	??___flmul,w
 10198  0DFF  00F0               	movwf	__Umul8_16@multiplicand
 10199  0E00  0829               	movf	___flmul@a+1,w
 10200  0E01  160A  158A  225D  120A  158A  	fcall	__Umul8_16
 10201  0E06  0871               	movf	?__Umul8_16+1,w
 10202  0E07  1283               	bcf	3,5	;RP0=0, select bank0
 10203  0E08  1303               	bcf	3,6	;RP1=0, select bank0
 10204  0E09  00BD               	movwf	___flmul@temp+1
 10205  0E0A  0870               	movf	?__Umul8_16,w
 10206  0E0B  00BC               	movwf	___flmul@temp
 10207  0E0C                     l2859:
 10208  0E0C  083C               	movf	___flmul@temp,w
 10209  0E0D  00AC               	movwf	??___flmul
 10210  0E0E  083D               	movf	___flmul@temp+1,w
 10211  0E0F  00AD               	movwf	??___flmul+1
 10212  0E10  01AE               	clrf	??___flmul+2
 10213  0E11  01AF               	clrf	??___flmul+3
 10214  0E12  082C               	movf	??___flmul,w
 10215  0E13  07B2               	addwf	___flmul@grs,f
 10216  0E14  082D               	movf	??___flmul+1,w
 10217  0E15  1103               	clrz
 10218  0E16  1803               	skipnc
 10219  0E17  3E01               	addlw	1
 10220  0E18  1903               	skipnz
 10221  0E19  2E1B               	goto	u4011
 10222  0E1A  07B3               	addwf	___flmul@grs+1,f
 10223  0E1B                     u4011:
 10224  0E1B  082E               	movf	??___flmul+2,w
 10225  0E1C  1103               	clrz
 10226  0E1D  1803               	skipnc
 10227  0E1E  3E01               	addlw	1
 10228  0E1F  1903               	skipnz
 10229  0E20  2E22               	goto	u4012
 10230  0E21  07B4               	addwf	___flmul@grs+2,f
 10231  0E22                     u4012:
 10232  0E22  082F               	movf	??___flmul+3,w
 10233  0E23  1103               	clrz
 10234  0E24  1803               	skipnc
 10235  0E25  3E01               	addlw	1
 10236  0E26  1903               	skipnz
 10237  0E27  2E29               	goto	u4013
 10238  0E28  07B5               	addwf	___flmul@grs+3,f
 10239  0E29                     u4013:
 10240  0E29                     l2861:
 10241  0E29  3008               	movlw	8
 10242  0E2A  00AC               	movwf	??___flmul
 10243  0E2B                     u4025:
 10244  0E2B  1003               	clrc
 10245  0E2C  0DB2               	rlf	___flmul@grs,f
 10246  0E2D  0DB3               	rlf	___flmul@grs+1,f
 10247  0E2E  0DB4               	rlf	___flmul@grs+2,f
 10248  0E2F  0DB5               	rlf	___flmul@grs+3,f
 10249  0E30  0BAC               	decfsz	??___flmul,f
 10250  0E31  2E2B               	goto	u4025
 10251  0E32  0824               	movf	___flmul@b,w
 10252  0E33  00AC               	movwf	??___flmul
 10253  0E34  082C               	movf	??___flmul,w
 10254  0E35  00F0               	movwf	__Umul8_16@multiplicand
 10255  0E36  0828               	movf	___flmul@a,w
 10256  0E37  160A  158A  225D  120A  158A  	fcall	__Umul8_16
 10257  0E3C  0871               	movf	?__Umul8_16+1,w
 10258  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
 10259  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
 10260  0E3F  00BD               	movwf	___flmul@temp+1
 10261  0E40  0870               	movf	?__Umul8_16,w
 10262  0E41  00BC               	movwf	___flmul@temp
 10263  0E42                     l2863:
 10264  0E42  083C               	movf	___flmul@temp,w
 10265  0E43  00AC               	movwf	??___flmul
 10266  0E44  083D               	movf	___flmul@temp+1,w
 10267  0E45  00AD               	movwf	??___flmul+1
 10268  0E46  01AE               	clrf	??___flmul+2
 10269  0E47  01AF               	clrf	??___flmul+3
 10270  0E48  082C               	movf	??___flmul,w
 10271  0E49  07B2               	addwf	___flmul@grs,f
 10272  0E4A  082D               	movf	??___flmul+1,w
 10273  0E4B  1103               	clrz
 10274  0E4C  1803               	skipnc
 10275  0E4D  3E01               	addlw	1
 10276  0E4E  1903               	skipnz
 10277  0E4F  2E51               	goto	u4031
 10278  0E50  07B3               	addwf	___flmul@grs+1,f
 10279  0E51                     u4031:
 10280  0E51  082E               	movf	??___flmul+2,w
 10281  0E52  1103               	clrz
 10282  0E53  1803               	skipnc
 10283  0E54  3E01               	addlw	1
 10284  0E55  1903               	skipnz
 10285  0E56  2E58               	goto	u4032
 10286  0E57  07B4               	addwf	___flmul@grs+2,f
 10287  0E58                     u4032:
 10288  0E58  082F               	movf	??___flmul+3,w
 10289  0E59  1103               	clrz
 10290  0E5A  1803               	skipnc
 10291  0E5B  3E01               	addlw	1
 10292  0E5C  1903               	skipnz
 10293  0E5D  2E5F               	goto	u4033
 10294  0E5E  07B5               	addwf	___flmul@grs+3,f
 10295  0E5F                     u4033:
 10296  0E5F                     l2865:
 10297  0E5F  0825               	movf	___flmul@b+1,w
 10298  0E60  00AC               	movwf	??___flmul
 10299  0E61  082C               	movf	??___flmul,w
 10300  0E62  00F0               	movwf	__Umul8_16@multiplicand
 10301  0E63  082A               	movf	___flmul@a+2,w
 10302  0E64  160A  158A  225D  120A  158A  	fcall	__Umul8_16
 10303  0E69  0871               	movf	?__Umul8_16+1,w
 10304  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
 10305  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
 10306  0E6C  00BD               	movwf	___flmul@temp+1
 10307  0E6D  0870               	movf	?__Umul8_16,w
 10308  0E6E  00BC               	movwf	___flmul@temp
 10309  0E6F  083C               	movf	___flmul@temp,w
 10310  0E70  00AC               	movwf	??___flmul
 10311  0E71  083D               	movf	___flmul@temp+1,w
 10312  0E72  00AD               	movwf	??___flmul+1
 10313  0E73  01AE               	clrf	??___flmul+2
 10314  0E74  01AF               	clrf	??___flmul+3
 10315  0E75  082C               	movf	??___flmul,w
 10316  0E76  07B8               	addwf	___flmul@prod,f
 10317  0E77  082D               	movf	??___flmul+1,w
 10318  0E78  1103               	clrz
 10319  0E79  1803               	skipnc
 10320  0E7A  3E01               	addlw	1
 10321  0E7B  1903               	skipnz
 10322  0E7C  2E7E               	goto	u4041
 10323  0E7D  07B9               	addwf	___flmul@prod+1,f
 10324  0E7E                     u4041:
 10325  0E7E  082E               	movf	??___flmul+2,w
 10326  0E7F  1103               	clrz
 10327  0E80  1803               	skipnc
 10328  0E81  3E01               	addlw	1
 10329  0E82  1903               	skipnz
 10330  0E83  2E85               	goto	u4042
 10331  0E84  07BA               	addwf	___flmul@prod+2,f
 10332  0E85                     u4042:
 10333  0E85  082F               	movf	??___flmul+3,w
 10334  0E86  1103               	clrz
 10335  0E87  1803               	skipnc
 10336  0E88  3E01               	addlw	1
 10337  0E89  1903               	skipnz
 10338  0E8A  2E8C               	goto	u4043
 10339  0E8B  07BB               	addwf	___flmul@prod+3,f
 10340  0E8C                     u4043:
 10341  0E8C                     l2867:
 10342  0E8C  0826               	movf	___flmul@b+2,w
 10343  0E8D  00AC               	movwf	??___flmul
 10344  0E8E  082C               	movf	??___flmul,w
 10345  0E8F  00F0               	movwf	__Umul8_16@multiplicand
 10346  0E90  0829               	movf	___flmul@a+1,w
 10347  0E91  160A  158A  225D  120A  158A  	fcall	__Umul8_16
 10348  0E96  0871               	movf	?__Umul8_16+1,w
 10349  0E97  1283               	bcf	3,5	;RP0=0, select bank0
 10350  0E98  1303               	bcf	3,6	;RP1=0, select bank0
 10351  0E99  00BD               	movwf	___flmul@temp+1
 10352  0E9A  0870               	movf	?__Umul8_16,w
 10353  0E9B  00BC               	movwf	___flmul@temp
 10354  0E9C                     l2869:
 10355  0E9C  083C               	movf	___flmul@temp,w
 10356  0E9D  00AC               	movwf	??___flmul
 10357  0E9E  083D               	movf	___flmul@temp+1,w
 10358  0E9F  00AD               	movwf	??___flmul+1
 10359  0EA0  01AE               	clrf	??___flmul+2
 10360  0EA1  01AF               	clrf	??___flmul+3
 10361  0EA2  082C               	movf	??___flmul,w
 10362  0EA3  07B8               	addwf	___flmul@prod,f
 10363  0EA4  082D               	movf	??___flmul+1,w
 10364  0EA5  1103               	clrz
 10365  0EA6  1803               	skipnc
 10366  0EA7  3E01               	addlw	1
 10367  0EA8  1903               	skipnz
 10368  0EA9  2EAB               	goto	u4051
 10369  0EAA  07B9               	addwf	___flmul@prod+1,f
 10370  0EAB                     u4051:
 10371  0EAB  082E               	movf	??___flmul+2,w
 10372  0EAC  1103               	clrz
 10373  0EAD  1803               	skipnc
 10374  0EAE  3E01               	addlw	1
 10375  0EAF  1903               	skipnz
 10376  0EB0  2EB2               	goto	u4052
 10377  0EB1  07BA               	addwf	___flmul@prod+2,f
 10378  0EB2                     u4052:
 10379  0EB2  082F               	movf	??___flmul+3,w
 10380  0EB3  1103               	clrz
 10381  0EB4  1803               	skipnc
 10382  0EB5  3E01               	addlw	1
 10383  0EB6  1903               	skipnz
 10384  0EB7  2EB9               	goto	u4053
 10385  0EB8  07BB               	addwf	___flmul@prod+3,f
 10386  0EB9                     u4053:
 10387  0EB9  0826               	movf	___flmul@b+2,w
 10388  0EBA  00AC               	movwf	??___flmul
 10389  0EBB  082C               	movf	??___flmul,w
 10390  0EBC  00F0               	movwf	__Umul8_16@multiplicand
 10391  0EBD  082A               	movf	___flmul@a+2,w
 10392  0EBE  160A  158A  225D  120A  158A  	fcall	__Umul8_16
 10393  0EC3  0871               	movf	?__Umul8_16+1,w
 10394  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
 10395  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
 10396  0EC6  00BD               	movwf	___flmul@temp+1
 10397  0EC7  0870               	movf	?__Umul8_16,w
 10398  0EC8  00BC               	movwf	___flmul@temp
 10399  0EC9                     l2871:
 10400  0EC9  083C               	movf	___flmul@temp,w
 10401  0ECA  00AC               	movwf	??___flmul
 10402  0ECB  083D               	movf	___flmul@temp+1,w
 10403  0ECC  00AD               	movwf	??___flmul+1
 10404  0ECD  01AE               	clrf	??___flmul+2
 10405  0ECE  01AF               	clrf	??___flmul+3
 10406  0ECF  3008               	movlw	8
 10407  0ED0                     u4065:
 10408  0ED0  1003               	clrc
 10409  0ED1  0DAC               	rlf	??___flmul,f
 10410  0ED2  0DAD               	rlf	??___flmul+1,f
 10411  0ED3  0DAE               	rlf	??___flmul+2,f
 10412  0ED4  0DAF               	rlf	??___flmul+3,f
 10413  0ED5                     u4060:
 10414  0ED5  3EFF               	addlw	-1
 10415  0ED6  1D03               	skipz
 10416  0ED7  2ED0               	goto	u4065
 10417  0ED8  082C               	movf	??___flmul,w
 10418  0ED9  07B8               	addwf	___flmul@prod,f
 10419  0EDA  082D               	movf	??___flmul+1,w
 10420  0EDB  1103               	clrz
 10421  0EDC  1803               	skipnc
 10422  0EDD  3E01               	addlw	1
 10423  0EDE  1903               	skipnz
 10424  0EDF  2EE1               	goto	u4071
 10425  0EE0  07B9               	addwf	___flmul@prod+1,f
 10426  0EE1                     u4071:
 10427  0EE1  082E               	movf	??___flmul+2,w
 10428  0EE2  1103               	clrz
 10429  0EE3  1803               	skipnc
 10430  0EE4  3E01               	addlw	1
 10431  0EE5  1903               	skipnz
 10432  0EE6  2EE8               	goto	u4072
 10433  0EE7  07BA               	addwf	___flmul@prod+2,f
 10434  0EE8                     u4072:
 10435  0EE8  082F               	movf	??___flmul+3,w
 10436  0EE9  1103               	clrz
 10437  0EEA  1803               	skipnc
 10438  0EEB  3E01               	addlw	1
 10439  0EEC  1903               	skipnz
 10440  0EED  2EEF               	goto	u4073
 10441  0EEE  07BB               	addwf	___flmul@prod+3,f
 10442  0EEF                     u4073:
 10443  0EEF                     l2873:
 10444  0EEF  0832               	movf	___flmul@grs,w
 10445  0EF0  00AC               	movwf	??___flmul
 10446  0EF1  0833               	movf	___flmul@grs+1,w
 10447  0EF2  00AD               	movwf	??___flmul+1
 10448  0EF3  0834               	movf	___flmul@grs+2,w
 10449  0EF4  00AE               	movwf	??___flmul+2
 10450  0EF5  0835               	movf	___flmul@grs+3,w
 10451  0EF6  00AF               	movwf	??___flmul+3
 10452  0EF7  3018               	movlw	24
 10453  0EF8                     u4085:
 10454  0EF8  1003               	clrc
 10455  0EF9  0CAF               	rrf	??___flmul+3,f
 10456  0EFA  0CAE               	rrf	??___flmul+2,f
 10457  0EFB  0CAD               	rrf	??___flmul+1,f
 10458  0EFC  0CAC               	rrf	??___flmul,f
 10459  0EFD                     u4080:
 10460  0EFD  3EFF               	addlw	-1
 10461  0EFE  1D03               	skipz
 10462  0EFF  2EF8               	goto	u4085
 10463  0F00  082C               	movf	??___flmul,w
 10464  0F01  07B8               	addwf	___flmul@prod,f
 10465  0F02  082D               	movf	??___flmul+1,w
 10466  0F03  1103               	clrz
 10467  0F04  1803               	skipnc
 10468  0F05  3E01               	addlw	1
 10469  0F06  1903               	skipnz
 10470  0F07  2F09               	goto	u4091
 10471  0F08  07B9               	addwf	___flmul@prod+1,f
 10472  0F09                     u4091:
 10473  0F09  082E               	movf	??___flmul+2,w
 10474  0F0A  1103               	clrz
 10475  0F0B  1803               	skipnc
 10476  0F0C  3E01               	addlw	1
 10477  0F0D  1903               	skipnz
 10478  0F0E  2F10               	goto	u4092
 10479  0F0F  07BA               	addwf	___flmul@prod+2,f
 10480  0F10                     u4092:
 10481  0F10  082F               	movf	??___flmul+3,w
 10482  0F11  1103               	clrz
 10483  0F12  1803               	skipnc
 10484  0F13  3E01               	addlw	1
 10485  0F14  1903               	skipnz
 10486  0F15  2F17               	goto	u4093
 10487  0F16  07BB               	addwf	___flmul@prod+3,f
 10488  0F17                     u4093:
 10489  0F17                     l2875:
 10490  0F17  3008               	movlw	8
 10491  0F18  00AC               	movwf	??___flmul
 10492  0F19                     u4105:
 10493  0F19  1003               	clrc
 10494  0F1A  0DB2               	rlf	___flmul@grs,f
 10495  0F1B  0DB3               	rlf	___flmul@grs+1,f
 10496  0F1C  0DB4               	rlf	___flmul@grs+2,f
 10497  0F1D  0DB5               	rlf	___flmul@grs+3,f
 10498  0F1E  0BAC               	decfsz	??___flmul,f
 10499  0F1F  2F19               	goto	u4105
 10500  0F20                     l2877:
 10501  0F20  0837               	movf	___flmul@bexp,w
 10502  0F21  0736               	addwf	___flmul@aexp,w
 10503  0F22  00AC               	movwf	??___flmul
 10504  0F23  01AD               	clrf	??___flmul+1
 10505  0F24  0DAD               	rlf	??___flmul+1,f
 10506  0F25  082C               	movf	??___flmul,w
 10507  0F26  3E82               	addlw	130
 10508  0F27  00BC               	movwf	___flmul@temp
 10509  0F28  082D               	movf	??___flmul+1,w
 10510  0F29  1803               	skipnc
 10511  0F2A  3E01               	addlw	1
 10512  0F2B  3EFF               	addlw	255
 10513  0F2C  00BD               	movwf	___flmul@temp+1
 10514  0F2D  2F4B               	goto	l2889
 10515  0F2E                     l2879:
 10516  0F2E  3001               	movlw	1
 10517  0F2F  00AC               	movwf	??___flmul
 10518  0F30                     u4115:
 10519  0F30  1003               	clrc
 10520  0F31  0DB8               	rlf	___flmul@prod,f
 10521  0F32  0DB9               	rlf	___flmul@prod+1,f
 10522  0F33  0DBA               	rlf	___flmul@prod+2,f
 10523  0F34  0DBB               	rlf	___flmul@prod+3,f
 10524  0F35  0BAC               	decfsz	??___flmul,f
 10525  0F36  2F30               	goto	u4115
 10526  0F37                     l2881:
 10527  0F37  1FB5               	btfss	___flmul@grs+3,7
 10528  0F38  2F3A               	goto	u4121
 10529  0F39  2F3B               	goto	u4120
 10530  0F3A                     u4121:
 10531  0F3A  2F3C               	goto	l2885
 10532  0F3B                     u4120:
 10533  0F3B                     l2883:
 10534  0F3B  1438               	bsf	___flmul@prod,0
 10535  0F3C                     l2885:
 10536  0F3C  3001               	movlw	1
 10537  0F3D  00AC               	movwf	??___flmul
 10538  0F3E                     u4135:
 10539  0F3E  1003               	clrc
 10540  0F3F  0DB2               	rlf	___flmul@grs,f
 10541  0F40  0DB3               	rlf	___flmul@grs+1,f
 10542  0F41  0DB4               	rlf	___flmul@grs+2,f
 10543  0F42  0DB5               	rlf	___flmul@grs+3,f
 10544  0F43  0BAC               	decfsz	??___flmul,f
 10545  0F44  2F3E               	goto	u4135
 10546  0F45                     l2887:
 10547  0F45  30FF               	movlw	255
 10548  0F46  07BC               	addwf	___flmul@temp,f
 10549  0F47  1803               	skipnc
 10550  0F48  0ABD               	incf	___flmul@temp+1,f
 10551  0F49  30FF               	movlw	255
 10552  0F4A  07BD               	addwf	___flmul@temp+1,f
 10553  0F4B                     l2889:
 10554  0F4B  1FBA               	btfss	___flmul@prod+2,7
 10555  0F4C  2F4E               	goto	u4141
 10556  0F4D  2F4F               	goto	u4140
 10557  0F4E                     u4141:
 10558  0F4E  2F2E               	goto	l2879
 10559  0F4F                     u4140:
 10560  0F4F                     l2891:
 10561  0F4F  01B6               	clrf	___flmul@aexp
 10562  0F50                     l2893:
 10563  0F50  1FB5               	btfss	___flmul@grs+3,7
 10564  0F51  2F53               	goto	u4151
 10565  0F52  2F54               	goto	u4150
 10566  0F53                     u4151:
 10567  0F53  2F70               	goto	l2901
 10568  0F54                     u4150:
 10569  0F54                     l2895:
 10570  0F54  30FF               	movlw	255
 10571  0F55  0532               	andwf	___flmul@grs,w
 10572  0F56  00AC               	movwf	??___flmul
 10573  0F57  30FF               	movlw	255
 10574  0F58  0533               	andwf	___flmul@grs+1,w
 10575  0F59  00AD               	movwf	??___flmul+1
 10576  0F5A  30FF               	movlw	255
 10577  0F5B  0534               	andwf	___flmul@grs+2,w
 10578  0F5C  00AE               	movwf	??___flmul+2
 10579  0F5D  307F               	movlw	127
 10580  0F5E  0535               	andwf	___flmul@grs+3,w
 10581  0F5F  00AF               	movwf	??___flmul+3
 10582  0F60  082F               	movf	??___flmul+3,w
 10583  0F61  042E               	iorwf	??___flmul+2,w
 10584  0F62  042D               	iorwf	??___flmul+1,w
 10585  0F63  042C               	iorwf	??___flmul,w
 10586  0F64  1903               	skipnz
 10587  0F65  2F67               	goto	u4161
 10588  0F66  2F68               	goto	u4160
 10589  0F67                     u4161:
 10590  0F67  2F6B               	goto	l825
 10591  0F68                     u4160:
 10592  0F68                     l2897:
 10593  0F68  01B6               	clrf	___flmul@aexp
 10594  0F69  0AB6               	incf	___flmul@aexp,f
 10595  0F6A  2F70               	goto	l2901
 10596  0F6B                     l825:
 10597  0F6B  1C38               	btfss	___flmul@prod,0
 10598  0F6C  2F6E               	goto	u4171
 10599  0F6D  2F6F               	goto	u4170
 10600  0F6E                     u4171:
 10601  0F6E  2F70               	goto	l2901
 10602  0F6F                     u4170:
 10603  0F6F  2F68               	goto	l2897
 10604  0F70                     l2901:
 10605  0F70  0836               	movf	___flmul@aexp,w
 10606  0F71  1903               	btfsc	3,2
 10607  0F72  2F74               	goto	u4181
 10608  0F73  2F75               	goto	u4180
 10609  0F74                     u4181:
 10610  0F74  2FA6               	goto	l2911
 10611  0F75                     u4180:
 10612  0F75                     l2903:
 10613  0F75  3001               	movlw	1
 10614  0F76  07B8               	addwf	___flmul@prod,f
 10615  0F77  3000               	movlw	0
 10616  0F78  1803               	skipnc
 10617  0F79  3001               	movlw	1
 10618  0F7A  07B9               	addwf	___flmul@prod+1,f
 10619  0F7B  3000               	movlw	0
 10620  0F7C  1803               	skipnc
 10621  0F7D  3001               	movlw	1
 10622  0F7E  07BA               	addwf	___flmul@prod+2,f
 10623  0F7F  3000               	movlw	0
 10624  0F80  1803               	skipnc
 10625  0F81  3001               	movlw	1
 10626  0F82  07BB               	addwf	___flmul@prod+3,f
 10627  0F83                     l2905:
 10628  0F83  1C3B               	btfss	___flmul@prod+3,0
 10629  0F84  2F86               	goto	u4191
 10630  0F85  2F87               	goto	u4190
 10631  0F86                     u4191:
 10632  0F86  2FA6               	goto	l2911
 10633  0F87                     u4190:
 10634  0F87                     l2907:
 10635  0F87  0838               	movf	___flmul@prod,w
 10636  0F88  00AC               	movwf	??___flmul
 10637  0F89  0839               	movf	___flmul@prod+1,w
 10638  0F8A  00AD               	movwf	??___flmul+1
 10639  0F8B  083A               	movf	___flmul@prod+2,w
 10640  0F8C  00AE               	movwf	??___flmul+2
 10641  0F8D  083B               	movf	___flmul@prod+3,w
 10642  0F8E  00AF               	movwf	??___flmul+3
 10643  0F8F  3001               	movlw	1
 10644  0F90  00B0               	movwf	??___flmul+4
 10645  0F91                     u4205:
 10646  0F91  0D2F               	rlf	??___flmul+3,w
 10647  0F92  0CAF               	rrf	??___flmul+3,f
 10648  0F93  0CAE               	rrf	??___flmul+2,f
 10649  0F94  0CAD               	rrf	??___flmul+1,f
 10650  0F95  0CAC               	rrf	??___flmul,f
 10651  0F96                     u4200:
 10652  0F96  0BB0               	decfsz	??___flmul+4,f
 10653  0F97  2F91               	goto	u4205
 10654  0F98  082F               	movf	??___flmul+3,w
 10655  0F99  00BB               	movwf	___flmul@prod+3
 10656  0F9A  082E               	movf	??___flmul+2,w
 10657  0F9B  00BA               	movwf	___flmul@prod+2
 10658  0F9C  082D               	movf	??___flmul+1,w
 10659  0F9D  00B9               	movwf	___flmul@prod+1
 10660  0F9E  082C               	movf	??___flmul,w
 10661  0F9F  00B8               	movwf	___flmul@prod
 10662  0FA0                     l2909:
 10663  0FA0  3001               	movlw	1
 10664  0FA1  07BC               	addwf	___flmul@temp,f
 10665  0FA2  1803               	skipnc
 10666  0FA3  0ABD               	incf	___flmul@temp+1,f
 10667  0FA4  3000               	movlw	0
 10668  0FA5  07BD               	addwf	___flmul@temp+1,f
 10669  0FA6                     l2911:
 10670  0FA6  083D               	movf	___flmul@temp+1,w
 10671  0FA7  3A80               	xorlw	128
 10672  0FA8  00FF               	movwf	btemp+1
 10673  0FA9  3080               	movlw	128
 10674  0FAA  027F               	subwf	btemp+1,w
 10675  0FAB  1D03               	skipz
 10676  0FAC  2FAF               	goto	u4215
 10677  0FAD  30FF               	movlw	255
 10678  0FAE  023C               	subwf	___flmul@temp,w
 10679  0FAF                     u4215:
 10680  0FAF  1C03               	skipc
 10681  0FB0  2FB2               	goto	u4211
 10682  0FB1  2FB3               	goto	u4210
 10683  0FB2                     u4211:
 10684  0FB2  2FBE               	goto	l2915
 10685  0FB3                     u4210:
 10686  0FB3                     l2913:
 10687  0FB3  307F               	movlw	127
 10688  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
 10689  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
 10690  0FB6  00BB               	movwf	___flmul@prod+3
 10691  0FB7  3080               	movlw	128
 10692  0FB8  00BA               	movwf	___flmul@prod+2
 10693  0FB9  3000               	movlw	0
 10694  0FBA  00B9               	movwf	___flmul@prod+1
 10695  0FBB  3000               	movlw	0
 10696  0FBC  00B8               	movwf	___flmul@prod
 10697  0FBD  2FF3               	goto	l831
 10698  0FBE                     l2915:
 10699  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
 10700  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
 10701  0FC0  083D               	movf	___flmul@temp+1,w
 10702  0FC1  3A80               	xorlw	128
 10703  0FC2  00FF               	movwf	btemp+1
 10704  0FC3  3080               	movlw	128
 10705  0FC4  027F               	subwf	btemp+1,w
 10706  0FC5  1D03               	skipz
 10707  0FC6  2FC9               	goto	u4225
 10708  0FC7  3001               	movlw	1
 10709  0FC8  023C               	subwf	___flmul@temp,w
 10710  0FC9                     u4225:
 10711  0FC9  1803               	skipnc
 10712  0FCA  2FCC               	goto	u4221
 10713  0FCB  2FCD               	goto	u4220
 10714  0FCC                     u4221:
 10715  0FCC  2FD9               	goto	l2921
 10716  0FCD                     u4220:
 10717  0FCD                     l2917:
 10718  0FCD  3000               	movlw	0
 10719  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
 10720  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
 10721  0FD0  00BB               	movwf	___flmul@prod+3
 10722  0FD1  3000               	movlw	0
 10723  0FD2  00BA               	movwf	___flmul@prod+2
 10724  0FD3  3000               	movlw	0
 10725  0FD4  00B9               	movwf	___flmul@prod+1
 10726  0FD5  3000               	movlw	0
 10727  0FD6  00B8               	movwf	___flmul@prod
 10728  0FD7                     l2919:
 10729  0FD7  01B1               	clrf	___flmul@sign
 10730  0FD8  2FF3               	goto	l831
 10731  0FD9                     l2921:
 10732  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
 10733  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
 10734  0FDB  083C               	movf	___flmul@temp,w
 10735  0FDC  00AC               	movwf	??___flmul
 10736  0FDD  082C               	movf	??___flmul,w
 10737  0FDE  00B7               	movwf	___flmul@bexp
 10738  0FDF  30FF               	movlw	255
 10739  0FE0  05B8               	andwf	___flmul@prod,f
 10740  0FE1  30FF               	movlw	255
 10741  0FE2  05B9               	andwf	___flmul@prod+1,f
 10742  0FE3  307F               	movlw	127
 10743  0FE4  05BA               	andwf	___flmul@prod+2,f
 10744  0FE5  3000               	movlw	0
 10745  0FE6  05BB               	andwf	___flmul@prod+3,f
 10746  0FE7                     l2923:
 10747  0FE7  1C37               	btfss	___flmul@bexp,0
 10748  0FE8  2FEA               	goto	u4231
 10749  0FE9  2FEB               	goto	u4230
 10750  0FEA                     u4231:
 10751  0FEA  2FEC               	goto	l2927
 10752  0FEB                     u4230:
 10753  0FEB                     l2925:
 10754  0FEB  17BA               	bsf	___flmul@prod+2,7
 10755  0FEC                     l2927:
 10756  0FEC  0837               	movf	___flmul@bexp,w
 10757  0FED  00AC               	movwf	??___flmul
 10758  0FEE  1003               	clrc
 10759  0FEF  0C2C               	rrf	??___flmul,w
 10760  0FF0  00AD               	movwf	??___flmul+1
 10761  0FF1  082D               	movf	??___flmul+1,w
 10762  0FF2  00BB               	movwf	___flmul@prod+3
 10763  0FF3                     l831:
 10764  0FF3  0831               	movf	___flmul@sign,w
 10765  0FF4  00AC               	movwf	??___flmul
 10766  0FF5  082C               	movf	??___flmul,w
 10767  0FF6  04BB               	iorwf	___flmul@prod+3,f
 10768  0FF7                     l2929:
 10769  0FF7  083B               	movf	___flmul@prod+3,w
 10770  0FF8  00A7               	movwf	?___flmul+3
 10771  0FF9  083A               	movf	___flmul@prod+2,w
 10772  0FFA  00A6               	movwf	?___flmul+2
 10773  0FFB  0839               	movf	___flmul@prod+1,w
 10774  0FFC  00A5               	movwf	?___flmul+1
 10775  0FFD  0838               	movf	___flmul@prod,w
 10776  0FFE  00A4               	movwf	?___flmul
 10777  0FFF                     l819:
 10778  0FFF  0008               	return
 10779  1000                     __end_of___flmul:
 10780                           
 10781                           	psect	text34
 10782  1A5D                     __ptext34:	
 10783 ;; *************** function __Umul8_16 *****************
 10784 ;; Defined at:
 10785 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
 10786 ;; Parameters:    Size  Location     Type
 10787 ;;  multiplier      1    wreg     unsigned char 
 10788 ;;  multiplicand    1    0[COMMON] unsigned char 
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;  multiplier      1    8[COMMON] unsigned char 
 10791 ;;  word_mpld       2    6[COMMON] unsigned int 
 10792 ;;  product         2    4[COMMON] unsigned int 
 10793 ;; Return value:  Size  Location     Type
 10794 ;;                  2    0[COMMON] unsigned int 
 10795 ;; Registers used:
 10796 ;;		wreg, status,2, status,0
 10797 ;; Tracked objects:
 10798 ;;		On entry : 0/0
 10799 ;;		On exit  : 0/0
 10800 ;;		Unchanged: 0/0
 10801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10802 ;;      Params:         2       0       0       0       0
 10803 ;;      Locals:         5       0       0       0       0
 10804 ;;      Temps:          2       0       0       0       0
 10805 ;;      Totals:         9       0       0       0       0
 10806 ;;Total ram usage:        9 bytes
 10807 ;; Hardware stack levels used:    1
 10808 ;; This function calls:
 10809 ;;		Nothing
 10810 ;; This function is called by:
 10811 ;;		___flmul
 10812 ;; This function uses a non-reentrant model
 10813 ;;
 10814                           
 10815                           
 10816                           ;psect for function __Umul8_16
 10817  1A5D                     __Umul8_16:
 10818                           
 10819                           ;incstack = 0
 10820                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10821                           ;__Umul8_16@multiplier stored from wreg
 10822  1A5D  00F8               	movwf	__Umul8_16@multiplier
 10823  1A5E                     l2455:
 10824  1A5E  01F4               	clrf	__Umul8_16@product
 10825  1A5F  01F5               	clrf	__Umul8_16@product+1
 10826  1A60                     l2457:
 10827  1A60  0870               	movf	__Umul8_16@multiplicand,w
 10828  1A61  00F2               	movwf	??__Umul8_16
 10829  1A62  01F3               	clrf	??__Umul8_16+1
 10830  1A63  0872               	movf	??__Umul8_16,w
 10831  1A64  00F6               	movwf	__Umul8_16@word_mpld
 10832  1A65  0873               	movf	??__Umul8_16+1,w
 10833  1A66  00F7               	movwf	__Umul8_16@word_mpld+1
 10834  1A67                     l2459:
 10835  1A67  1C78               	btfss	__Umul8_16@multiplier,0
 10836  1A68  2A6A               	goto	u3061
 10837  1A69  2A6B               	goto	u3060
 10838  1A6A                     u3061:
 10839  1A6A  2A71               	goto	l838
 10840  1A6B                     u3060:
 10841  1A6B                     l2461:
 10842  1A6B  0876               	movf	__Umul8_16@word_mpld,w
 10843  1A6C  07F4               	addwf	__Umul8_16@product,f
 10844  1A6D  1803               	skipnc
 10845  1A6E  0AF5               	incf	__Umul8_16@product+1,f
 10846  1A6F  0877               	movf	__Umul8_16@word_mpld+1,w
 10847  1A70  07F5               	addwf	__Umul8_16@product+1,f
 10848  1A71                     l838:
 10849  1A71  3001               	movlw	1
 10850  1A72                     u3075:
 10851  1A72  1003               	clrc
 10852  1A73  0DF6               	rlf	__Umul8_16@word_mpld,f
 10853  1A74  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10854  1A75  3EFF               	addlw	-1
 10855  1A76  1D03               	skipz
 10856  1A77  2A72               	goto	u3075
 10857  1A78  1003               	clrc
 10858  1A79  0CF8               	rrf	__Umul8_16@multiplier,f
 10859  1A7A                     l2463:
 10860  1A7A  0878               	movf	__Umul8_16@multiplier,w
 10861  1A7B  1D03               	btfss	3,2
 10862  1A7C  2A7E               	goto	u3081
 10863  1A7D  2A7F               	goto	u3080
 10864  1A7E                     u3081:
 10865  1A7E  2A67               	goto	l2459
 10866  1A7F                     u3080:
 10867  1A7F                     l2465:
 10868  1A7F  0875               	movf	__Umul8_16@product+1,w
 10869  1A80  00F1               	movwf	?__Umul8_16+1
 10870  1A81  0874               	movf	__Umul8_16@product,w
 10871  1A82  00F0               	movwf	?__Umul8_16
 10872  1A83                     l840:
 10873  1A83  0008               	return
 10874  1A84                     __end_of__Umul8_16:
 10875                           
 10876                           	psect	text35
 10877  1190                     __ptext35:	
 10878 ;; *************** function ___fldiv *****************
 10879 ;; Defined at:
 10880 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;  a               4   30[BANK0 ] unsigned int 
 10883 ;;  b               4   34[BANK0 ] unsigned int 
 10884 ;; Auto vars:     Size  Location     Type
 10885 ;;  grs             4   50[BANK0 ] unsigned long 
 10886 ;;  rem             4   43[BANK0 ] unsigned long 
 10887 ;;  new_exp         2   48[BANK0 ] int 
 10888 ;;  aexp            1   55[BANK0 ] unsigned char 
 10889 ;;  bexp            1   54[BANK0 ] unsigned char 
 10890 ;;  sign            1   47[BANK0 ] unsigned char 
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  4   30[BANK0 ] unsigned char 
 10893 ;; Registers used:
 10894 ;;		wreg, status,2, status,0, btemp+1
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10900 ;;      Params:         0       8       0       0       0
 10901 ;;      Locals:         0      13       0       0       0
 10902 ;;      Temps:          0       5       0       0       0
 10903 ;;      Totals:         0      26       0       0       0
 10904 ;;Total ram usage:       26 bytes
 10905 ;; Hardware stack levels used:    1
 10906 ;; This function calls:
 10907 ;;		Nothing
 10908 ;; This function is called by:
 10909 ;;		_ADC_channel1
 10910 ;;		_ADC_channel2
 10911 ;; This function uses a non-reentrant model
 10912 ;;
 10913                           
 10914                           
 10915                           ;psect for function ___fldiv
 10916  1190                     ___fldiv:
 10917  1190                     l3591:	
 10918                           ;incstack = 0
 10919                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
 10920                           
 10921  1190  1283               	bcf	3,5	;RP0=0, select bank0
 10922  1191  1303               	bcf	3,6	;RP1=0, select bank0
 10923  1192  0845               	movf	___fldiv@b+3,w
 10924  1193  3980               	andlw	128
 10925  1194  00C6               	movwf	??___fldiv
 10926  1195  0846               	movf	??___fldiv,w
 10927  1196  00CF               	movwf	___fldiv@sign
 10928  1197                     l3593:
 10929  1197  0845               	movf	___fldiv@b+3,w
 10930  1198  00C6               	movwf	??___fldiv
 10931  1199  0746               	addwf	??___fldiv,w
 10932  119A  00C7               	movwf	??___fldiv+1
 10933  119B  0847               	movf	??___fldiv+1,w
 10934  119C  00D6               	movwf	___fldiv@bexp
 10935  119D                     l3595:
 10936  119D  1FC4               	btfss	___fldiv@b+2,7
 10937  119E  29A0               	goto	u5791
 10938  119F  29A1               	goto	u5790
 10939  11A0                     u5791:
 10940  11A0  29A2               	goto	l3599
 10941  11A1                     u5790:
 10942  11A1                     l3597:
 10943  11A1  1456               	bsf	___fldiv@bexp,0
 10944  11A2                     l3599:
 10945  11A2  0856               	movf	___fldiv@bexp,w
 10946  11A3  1903               	btfsc	3,2
 10947  11A4  29A6               	goto	u5801
 10948  11A5  29A7               	goto	u5800
 10949  11A6                     u5801:
 10950  11A6  29B7               	goto	l3609
 10951  11A7                     u5800:
 10952  11A7                     l3601:
 10953  11A7  0A56               	incf	___fldiv@bexp,w
 10954  11A8  1D03               	btfss	3,2
 10955  11A9  29AB               	goto	u5811
 10956  11AA  29AC               	goto	u5810
 10957  11AB                     u5811:
 10958  11AB  29B4               	goto	l3605
 10959  11AC                     u5810:
 10960  11AC                     l3603:
 10961  11AC  3000               	movlw	0
 10962  11AD  00C5               	movwf	___fldiv@b+3
 10963  11AE  3000               	movlw	0
 10964  11AF  00C4               	movwf	___fldiv@b+2
 10965  11B0  3000               	movlw	0
 10966  11B1  00C3               	movwf	___fldiv@b+1
 10967  11B2  3000               	movlw	0
 10968  11B3  00C2               	movwf	___fldiv@b
 10969  11B4                     l3605:
 10970  11B4  17C4               	bsf	___fldiv@b+2,7
 10971  11B5                     l3607:
 10972  11B5  01C5               	clrf	___fldiv@b+3
 10973  11B6  29BF               	goto	l3611
 10974  11B7                     l3609:
 10975  11B7  3000               	movlw	0
 10976  11B8  00C5               	movwf	___fldiv@b+3
 10977  11B9  3000               	movlw	0
 10978  11BA  00C4               	movwf	___fldiv@b+2
 10979  11BB  3000               	movlw	0
 10980  11BC  00C3               	movwf	___fldiv@b+1
 10981  11BD  3000               	movlw	0
 10982  11BE  00C2               	movwf	___fldiv@b
 10983  11BF                     l3611:
 10984  11BF  0841               	movf	___fldiv@a+3,w
 10985  11C0  3980               	andlw	128
 10986  11C1  00C6               	movwf	??___fldiv
 10987  11C2  0846               	movf	??___fldiv,w
 10988  11C3  06CF               	xorwf	___fldiv@sign,f
 10989  11C4                     l3613:
 10990  11C4  0841               	movf	___fldiv@a+3,w
 10991  11C5  00C6               	movwf	??___fldiv
 10992  11C6  0746               	addwf	??___fldiv,w
 10993  11C7  00C7               	movwf	??___fldiv+1
 10994  11C8  0847               	movf	??___fldiv+1,w
 10995  11C9  00D7               	movwf	___fldiv@aexp
 10996  11CA                     l3615:
 10997  11CA  1FC0               	btfss	___fldiv@a+2,7
 10998  11CB  29CD               	goto	u5821
 10999  11CC  29CE               	goto	u5820
 11000  11CD                     u5821:
 11001  11CD  29CF               	goto	l3619
 11002  11CE                     u5820:
 11003  11CE                     l3617:
 11004  11CE  1457               	bsf	___fldiv@aexp,0
 11005  11CF                     l3619:
 11006  11CF  0857               	movf	___fldiv@aexp,w
 11007  11D0  1903               	btfsc	3,2
 11008  11D1  29D3               	goto	u5831
 11009  11D2  29D4               	goto	u5830
 11010  11D3                     u5831:
 11011  11D3  29E4               	goto	l3629
 11012  11D4                     u5830:
 11013  11D4                     l3621:
 11014  11D4  0A57               	incf	___fldiv@aexp,w
 11015  11D5  1D03               	btfss	3,2
 11016  11D6  29D8               	goto	u5841
 11017  11D7  29D9               	goto	u5840
 11018  11D8                     u5841:
 11019  11D8  29E1               	goto	l3625
 11020  11D9                     u5840:
 11021  11D9                     l3623:
 11022  11D9  3000               	movlw	0
 11023  11DA  00C1               	movwf	___fldiv@a+3
 11024  11DB  3000               	movlw	0
 11025  11DC  00C0               	movwf	___fldiv@a+2
 11026  11DD  3000               	movlw	0
 11027  11DE  00BF               	movwf	___fldiv@a+1
 11028  11DF  3000               	movlw	0
 11029  11E0  00BE               	movwf	___fldiv@a
 11030  11E1                     l3625:
 11031  11E1  17C0               	bsf	___fldiv@a+2,7
 11032  11E2                     l3627:
 11033  11E2  01C1               	clrf	___fldiv@a+3
 11034  11E3  29EC               	goto	l779
 11035  11E4                     l3629:
 11036  11E4  3000               	movlw	0
 11037  11E5  00C1               	movwf	___fldiv@a+3
 11038  11E6  3000               	movlw	0
 11039  11E7  00C0               	movwf	___fldiv@a+2
 11040  11E8  3000               	movlw	0
 11041  11E9  00BF               	movwf	___fldiv@a+1
 11042  11EA  3000               	movlw	0
 11043  11EB  00BE               	movwf	___fldiv@a
 11044  11EC                     l779:
 11045  11EC  0841               	movf	___fldiv@a+3,w
 11046  11ED  0440               	iorwf	___fldiv@a+2,w
 11047  11EE  043F               	iorwf	___fldiv@a+1,w
 11048  11EF  043E               	iorwf	___fldiv@a,w
 11049  11F0  1D03               	skipz
 11050  11F1  29F3               	goto	u5851
 11051  11F2  29F4               	goto	u5850
 11052  11F3                     u5851:
 11053  11F3  2A0D               	goto	l3639
 11054  11F4                     u5850:
 11055  11F4                     l3631:
 11056  11F4  3000               	movlw	0
 11057  11F5  00C5               	movwf	___fldiv@b+3
 11058  11F6  3000               	movlw	0
 11059  11F7  00C4               	movwf	___fldiv@b+2
 11060  11F8  3000               	movlw	0
 11061  11F9  00C3               	movwf	___fldiv@b+1
 11062  11FA  3000               	movlw	0
 11063  11FB  00C2               	movwf	___fldiv@b
 11064  11FC  3080               	movlw	128
 11065  11FD  04C4               	iorwf	___fldiv@b+2,f
 11066  11FE  307F               	movlw	127
 11067  11FF  04C5               	iorwf	___fldiv@b+3,f
 11068  1200                     l3633:
 11069  1200  084F               	movf	___fldiv@sign,w
 11070  1201  00C6               	movwf	??___fldiv
 11071  1202  0846               	movf	??___fldiv,w
 11072  1203  04C5               	iorwf	___fldiv@b+3,f
 11073  1204                     l3635:
 11074  1204  0845               	movf	___fldiv@b+3,w
 11075  1205  00C1               	movwf	?___fldiv+3
 11076  1206  0844               	movf	___fldiv@b+2,w
 11077  1207  00C0               	movwf	?___fldiv+2
 11078  1208  0843               	movf	___fldiv@b+1,w
 11079  1209  00BF               	movwf	?___fldiv+1
 11080  120A  0842               	movf	___fldiv@b,w
 11081  120B  00BE               	movwf	?___fldiv
 11082  120C  2B6C               	goto	l781
 11083  120D                     l3639:
 11084  120D  0856               	movf	___fldiv@bexp,w
 11085  120E  1D03               	btfss	3,2
 11086  120F  2A11               	goto	u5861
 11087  1210  2A12               	goto	u5860
 11088  1211                     u5861:
 11089  1211  2A1B               	goto	l3645
 11090  1212                     u5860:
 11091  1212                     l3641:
 11092  1212  3000               	movlw	0
 11093  1213  00C1               	movwf	?___fldiv+3
 11094  1214  3000               	movlw	0
 11095  1215  00C0               	movwf	?___fldiv+2
 11096  1216  3000               	movlw	0
 11097  1217  00BF               	movwf	?___fldiv+1
 11098  1218  3000               	movlw	0
 11099  1219  00BE               	movwf	?___fldiv
 11100  121A  2B6C               	goto	l781
 11101  121B                     l3645:
 11102  121B  0856               	movf	___fldiv@bexp,w
 11103  121C  00C6               	movwf	??___fldiv
 11104  121D  01C7               	clrf	??___fldiv+1
 11105  121E  0847               	movf	??___fldiv+1,w
 11106  121F  00C9               	movwf	??___fldiv+3
 11107  1220  0857               	movf	___fldiv@aexp,w
 11108  1221  0246               	subwf	??___fldiv,w
 11109  1222  00C8               	movwf	??___fldiv+2
 11110  1223  1C03               	skipc
 11111  1224  03C9               	decf	??___fldiv+3,f
 11112  1225  0848               	movf	??___fldiv+2,w
 11113  1226  3E7F               	addlw	127
 11114  1227  00D0               	movwf	___fldiv@new_exp
 11115  1228  0849               	movf	??___fldiv+3,w
 11116  1229  1803               	skipnc
 11117  122A  3E01               	addlw	1
 11118  122B  3E00               	addlw	0
 11119  122C  00D1               	movwf	___fldiv@new_exp+1
 11120  122D                     l3647:
 11121  122D  0845               	movf	___fldiv@b+3,w
 11122  122E  00CE               	movwf	___fldiv@rem+3
 11123  122F  0844               	movf	___fldiv@b+2,w
 11124  1230  00CD               	movwf	___fldiv@rem+2
 11125  1231  0843               	movf	___fldiv@b+1,w
 11126  1232  00CC               	movwf	___fldiv@rem+1
 11127  1233  0842               	movf	___fldiv@b,w
 11128  1234  00CB               	movwf	___fldiv@rem
 11129  1235                     l3649:
 11130  1235  3000               	movlw	0
 11131  1236  00C5               	movwf	___fldiv@b+3
 11132  1237  3000               	movlw	0
 11133  1238  00C4               	movwf	___fldiv@b+2
 11134  1239  3000               	movlw	0
 11135  123A  00C3               	movwf	___fldiv@b+1
 11136  123B  3000               	movlw	0
 11137  123C  00C2               	movwf	___fldiv@b
 11138  123D                     l3651:
 11139  123D  3000               	movlw	0
 11140  123E  00D5               	movwf	___fldiv@grs+3
 11141  123F  3000               	movlw	0
 11142  1240  00D4               	movwf	___fldiv@grs+2
 11143  1241  3000               	movlw	0
 11144  1242  00D3               	movwf	___fldiv@grs+1
 11145  1243  3000               	movlw	0
 11146  1244  00D2               	movwf	___fldiv@grs
 11147  1245                     l3653:
 11148  1245  01D7               	clrf	___fldiv@aexp
 11149  1246  2A91               	goto	l3673
 11150  1247                     l3655:
 11151  1247  0857               	movf	___fldiv@aexp,w
 11152  1248  1903               	btfsc	3,2
 11153  1249  2A4B               	goto	u5871
 11154  124A  2A4C               	goto	u5870
 11155  124B                     u5871:
 11156  124B  2A6C               	goto	l3665
 11157  124C                     u5870:
 11158  124C                     l3657:
 11159  124C  3001               	movlw	1
 11160  124D  00C6               	movwf	??___fldiv
 11161  124E                     u5885:
 11162  124E  1003               	clrc
 11163  124F  0DCB               	rlf	___fldiv@rem,f
 11164  1250  0DCC               	rlf	___fldiv@rem+1,f
 11165  1251  0DCD               	rlf	___fldiv@rem+2,f
 11166  1252  0DCE               	rlf	___fldiv@rem+3,f
 11167  1253  0BC6               	decfsz	??___fldiv,f
 11168  1254  2A4E               	goto	u5885
 11169  1255  3001               	movlw	1
 11170  1256  00C6               	movwf	??___fldiv
 11171  1257                     u5895:
 11172  1257  1003               	clrc
 11173  1258  0DC2               	rlf	___fldiv@b,f
 11174  1259  0DC3               	rlf	___fldiv@b+1,f
 11175  125A  0DC4               	rlf	___fldiv@b+2,f
 11176  125B  0DC5               	rlf	___fldiv@b+3,f
 11177  125C  0BC6               	decfsz	??___fldiv,f
 11178  125D  2A57               	goto	u5895
 11179  125E                     l3659:
 11180  125E  1FD5               	btfss	___fldiv@grs+3,7
 11181  125F  2A61               	goto	u5901
 11182  1260  2A62               	goto	u5900
 11183  1261                     u5901:
 11184  1261  2A63               	goto	l3663
 11185  1262                     u5900:
 11186  1262                     l3661:
 11187  1262  1442               	bsf	___fldiv@b,0
 11188  1263                     l3663:
 11189  1263  3001               	movlw	1
 11190  1264  00C6               	movwf	??___fldiv
 11191  1265                     u5915:
 11192  1265  1003               	clrc
 11193  1266  0DD2               	rlf	___fldiv@grs,f
 11194  1267  0DD3               	rlf	___fldiv@grs+1,f
 11195  1268  0DD4               	rlf	___fldiv@grs+2,f
 11196  1269  0DD5               	rlf	___fldiv@grs+3,f
 11197  126A  0BC6               	decfsz	??___fldiv,f
 11198  126B  2A65               	goto	u5915
 11199  126C                     l3665:
 11200  126C  0841               	movf	___fldiv@a+3,w
 11201  126D  024E               	subwf	___fldiv@rem+3,w
 11202  126E  1D03               	skipz
 11203  126F  2A7A               	goto	u5925
 11204  1270  0840               	movf	___fldiv@a+2,w
 11205  1271  024D               	subwf	___fldiv@rem+2,w
 11206  1272  1D03               	skipz
 11207  1273  2A7A               	goto	u5925
 11208  1274  083F               	movf	___fldiv@a+1,w
 11209  1275  024C               	subwf	___fldiv@rem+1,w
 11210  1276  1D03               	skipz
 11211  1277  2A7A               	goto	u5925
 11212  1278  083E               	movf	___fldiv@a,w
 11213  1279  024B               	subwf	___fldiv@rem,w
 11214  127A                     u5925:
 11215  127A  1C03               	skipc
 11216  127B  2A7D               	goto	u5921
 11217  127C  2A7E               	goto	u5920
 11218  127D                     u5921:
 11219  127D  2A8D               	goto	l3671
 11220  127E                     u5920:
 11221  127E                     l3667:
 11222  127E  1755               	bsf	___fldiv@grs+3,6
 11223  127F                     l3669:
 11224  127F  083E               	movf	___fldiv@a,w
 11225  1280  02CB               	subwf	___fldiv@rem,f
 11226  1281  083F               	movf	___fldiv@a+1,w
 11227  1282  1C03               	skipc
 11228  1283  0F3F               	incfsz	___fldiv@a+1,w
 11229  1284  02CC               	subwf	___fldiv@rem+1,f
 11230  1285  0840               	movf	___fldiv@a+2,w
 11231  1286  1C03               	skipc
 11232  1287  0F40               	incfsz	___fldiv@a+2,w
 11233  1288  02CD               	subwf	___fldiv@rem+2,f
 11234  1289  0841               	movf	___fldiv@a+3,w
 11235  128A  1C03               	skipc
 11236  128B  0F41               	incfsz	___fldiv@a+3,w
 11237  128C  02CE               	subwf	___fldiv@rem+3,f
 11238  128D                     l3671:
 11239  128D  3001               	movlw	1
 11240  128E  00C6               	movwf	??___fldiv
 11241  128F  0846               	movf	??___fldiv,w
 11242  1290  07D7               	addwf	___fldiv@aexp,f
 11243  1291                     l3673:
 11244  1291  301A               	movlw	26
 11245  1292  0257               	subwf	___fldiv@aexp,w
 11246  1293  1C03               	skipc
 11247  1294  2A96               	goto	u5931
 11248  1295  2A97               	goto	u5930
 11249  1296                     u5931:
 11250  1296  2A47               	goto	l3655
 11251  1297                     u5930:
 11252  1297                     l3675:
 11253  1297  084E               	movf	___fldiv@rem+3,w
 11254  1298  044D               	iorwf	___fldiv@rem+2,w
 11255  1299  044C               	iorwf	___fldiv@rem+1,w
 11256  129A  044B               	iorwf	___fldiv@rem,w
 11257  129B  1903               	skipnz
 11258  129C  2A9E               	goto	u5941
 11259  129D  2A9F               	goto	u5940
 11260  129E                     u5941:
 11261  129E  2ABE               	goto	l3689
 11262  129F                     u5940:
 11263  129F                     l3677:
 11264  129F  1452               	bsf	___fldiv@grs,0
 11265  12A0  2ABE               	goto	l3689
 11266  12A1                     l3679:
 11267  12A1  3001               	movlw	1
 11268  12A2  00C6               	movwf	??___fldiv
 11269  12A3                     u5955:
 11270  12A3  1003               	clrc
 11271  12A4  0DC2               	rlf	___fldiv@b,f
 11272  12A5  0DC3               	rlf	___fldiv@b+1,f
 11273  12A6  0DC4               	rlf	___fldiv@b+2,f
 11274  12A7  0DC5               	rlf	___fldiv@b+3,f
 11275  12A8  0BC6               	decfsz	??___fldiv,f
 11276  12A9  2AA3               	goto	u5955
 11277  12AA                     l3681:
 11278  12AA  1FD5               	btfss	___fldiv@grs+3,7
 11279  12AB  2AAD               	goto	u5961
 11280  12AC  2AAE               	goto	u5960
 11281  12AD                     u5961:
 11282  12AD  2AAF               	goto	l3685
 11283  12AE                     u5960:
 11284  12AE                     l3683:
 11285  12AE  1442               	bsf	___fldiv@b,0
 11286  12AF                     l3685:
 11287  12AF  3001               	movlw	1
 11288  12B0  00C6               	movwf	??___fldiv
 11289  12B1                     u5975:
 11290  12B1  1003               	clrc
 11291  12B2  0DD2               	rlf	___fldiv@grs,f
 11292  12B3  0DD3               	rlf	___fldiv@grs+1,f
 11293  12B4  0DD4               	rlf	___fldiv@grs+2,f
 11294  12B5  0DD5               	rlf	___fldiv@grs+3,f
 11295  12B6  0BC6               	decfsz	??___fldiv,f
 11296  12B7  2AB1               	goto	u5975
 11297  12B8                     l3687:
 11298  12B8  30FF               	movlw	255
 11299  12B9  07D0               	addwf	___fldiv@new_exp,f
 11300  12BA  1803               	skipnc
 11301  12BB  0AD1               	incf	___fldiv@new_exp+1,f
 11302  12BC  30FF               	movlw	255
 11303  12BD  07D1               	addwf	___fldiv@new_exp+1,f
 11304  12BE                     l3689:
 11305  12BE  1FC4               	btfss	___fldiv@b+2,7
 11306  12BF  2AC1               	goto	u5981
 11307  12C0  2AC2               	goto	u5980
 11308  12C1                     u5981:
 11309  12C1  2AA1               	goto	l3679
 11310  12C2                     u5980:
 11311  12C2                     l3691:
 11312  12C2  01D7               	clrf	___fldiv@aexp
 11313  12C3                     l3693:
 11314  12C3  1FD5               	btfss	___fldiv@grs+3,7
 11315  12C4  2AC6               	goto	u5991
 11316  12C5  2AC7               	goto	u5990
 11317  12C6                     u5991:
 11318  12C6  2AE3               	goto	l3701
 11319  12C7                     u5990:
 11320  12C7                     l3695:
 11321  12C7  30FF               	movlw	255
 11322  12C8  0552               	andwf	___fldiv@grs,w
 11323  12C9  00C6               	movwf	??___fldiv
 11324  12CA  30FF               	movlw	255
 11325  12CB  0553               	andwf	___fldiv@grs+1,w
 11326  12CC  00C7               	movwf	??___fldiv+1
 11327  12CD  30FF               	movlw	255
 11328  12CE  0554               	andwf	___fldiv@grs+2,w
 11329  12CF  00C8               	movwf	??___fldiv+2
 11330  12D0  307F               	movlw	127
 11331  12D1  0555               	andwf	___fldiv@grs+3,w
 11332  12D2  00C9               	movwf	??___fldiv+3
 11333  12D3  0849               	movf	??___fldiv+3,w
 11334  12D4  0448               	iorwf	??___fldiv+2,w
 11335  12D5  0447               	iorwf	??___fldiv+1,w
 11336  12D6  0446               	iorwf	??___fldiv,w
 11337  12D7  1903               	skipnz
 11338  12D8  2ADA               	goto	u6001
 11339  12D9  2ADB               	goto	u6000
 11340  12DA                     u6001:
 11341  12DA  2ADE               	goto	l795
 11342  12DB                     u6000:
 11343  12DB                     l3697:
 11344  12DB  01D7               	clrf	___fldiv@aexp
 11345  12DC  0AD7               	incf	___fldiv@aexp,f
 11346  12DD  2AE3               	goto	l3701
 11347  12DE                     l795:
 11348  12DE  1C42               	btfss	___fldiv@b,0
 11349  12DF  2AE1               	goto	u6011
 11350  12E0  2AE2               	goto	u6010
 11351  12E1                     u6011:
 11352  12E1  2AE3               	goto	l3701
 11353  12E2                     u6010:
 11354  12E2  2ADB               	goto	l3697
 11355  12E3                     l3701:
 11356  12E3  0857               	movf	___fldiv@aexp,w
 11357  12E4  1903               	btfsc	3,2
 11358  12E5  2AE7               	goto	u6021
 11359  12E6  2AE8               	goto	u6020
 11360  12E7                     u6021:
 11361  12E7  2B19               	goto	l3711
 11362  12E8                     u6020:
 11363  12E8                     l3703:
 11364  12E8  3001               	movlw	1
 11365  12E9  07C2               	addwf	___fldiv@b,f
 11366  12EA  3000               	movlw	0
 11367  12EB  1803               	skipnc
 11368  12EC  3001               	movlw	1
 11369  12ED  07C3               	addwf	___fldiv@b+1,f
 11370  12EE  3000               	movlw	0
 11371  12EF  1803               	skipnc
 11372  12F0  3001               	movlw	1
 11373  12F1  07C4               	addwf	___fldiv@b+2,f
 11374  12F2  3000               	movlw	0
 11375  12F3  1803               	skipnc
 11376  12F4  3001               	movlw	1
 11377  12F5  07C5               	addwf	___fldiv@b+3,f
 11378  12F6                     l3705:
 11379  12F6  1C45               	btfss	___fldiv@b+3,0
 11380  12F7  2AF9               	goto	u6031
 11381  12F8  2AFA               	goto	u6030
 11382  12F9                     u6031:
 11383  12F9  2B19               	goto	l3711
 11384  12FA                     u6030:
 11385  12FA                     l3707:
 11386  12FA  0842               	movf	___fldiv@b,w
 11387  12FB  00C6               	movwf	??___fldiv
 11388  12FC  0843               	movf	___fldiv@b+1,w
 11389  12FD  00C7               	movwf	??___fldiv+1
 11390  12FE  0844               	movf	___fldiv@b+2,w
 11391  12FF  00C8               	movwf	??___fldiv+2
 11392  1300  0845               	movf	___fldiv@b+3,w
 11393  1301  00C9               	movwf	??___fldiv+3
 11394  1302  3001               	movlw	1
 11395  1303  00CA               	movwf	??___fldiv+4
 11396  1304                     u6045:
 11397  1304  0D49               	rlf	??___fldiv+3,w
 11398  1305  0CC9               	rrf	??___fldiv+3,f
 11399  1306  0CC8               	rrf	??___fldiv+2,f
 11400  1307  0CC7               	rrf	??___fldiv+1,f
 11401  1308  0CC6               	rrf	??___fldiv,f
 11402  1309                     u6040:
 11403  1309  0BCA               	decfsz	??___fldiv+4,f
 11404  130A  2B04               	goto	u6045
 11405  130B  0849               	movf	??___fldiv+3,w
 11406  130C  00C5               	movwf	___fldiv@b+3
 11407  130D  0848               	movf	??___fldiv+2,w
 11408  130E  00C4               	movwf	___fldiv@b+2
 11409  130F  0847               	movf	??___fldiv+1,w
 11410  1310  00C3               	movwf	___fldiv@b+1
 11411  1311  0846               	movf	??___fldiv,w
 11412  1312  00C2               	movwf	___fldiv@b
 11413  1313                     l3709:
 11414  1313  3001               	movlw	1
 11415  1314  07D0               	addwf	___fldiv@new_exp,f
 11416  1315  1803               	skipnc
 11417  1316  0AD1               	incf	___fldiv@new_exp+1,f
 11418  1317  3000               	movlw	0
 11419  1318  07D1               	addwf	___fldiv@new_exp+1,f
 11420  1319                     l3711:
 11421  1319  0851               	movf	___fldiv@new_exp+1,w
 11422  131A  3A80               	xorlw	128
 11423  131B  00FF               	movwf	btemp+1
 11424  131C  3080               	movlw	128
 11425  131D  027F               	subwf	btemp+1,w
 11426  131E  1D03               	skipz
 11427  131F  2B22               	goto	u6055
 11428  1320  30FF               	movlw	255
 11429  1321  0250               	subwf	___fldiv@new_exp,w
 11430  1322                     u6055:
 11431  1322  1C03               	skipc
 11432  1323  2B25               	goto	u6051
 11433  1324  2B26               	goto	u6050
 11434  1325                     u6051:
 11435  1325  2B34               	goto	l3715
 11436  1326                     u6050:
 11437  1326                     l3713:
 11438  1326  30FF               	movlw	255
 11439  1327  1283               	bcf	3,5	;RP0=0, select bank0
 11440  1328  1303               	bcf	3,6	;RP1=0, select bank0
 11441  1329  00D0               	movwf	___fldiv@new_exp
 11442  132A  3000               	movlw	0
 11443  132B  00D1               	movwf	___fldiv@new_exp+1
 11444  132C  3000               	movlw	0
 11445  132D  00C5               	movwf	___fldiv@b+3
 11446  132E  3000               	movlw	0
 11447  132F  00C4               	movwf	___fldiv@b+2
 11448  1330  3000               	movlw	0
 11449  1331  00C3               	movwf	___fldiv@b+1
 11450  1332  3000               	movlw	0
 11451  1333  00C2               	movwf	___fldiv@b
 11452  1334                     l3715:
 11453  1334  1283               	bcf	3,5	;RP0=0, select bank0
 11454  1335  1303               	bcf	3,6	;RP1=0, select bank0
 11455  1336  0851               	movf	___fldiv@new_exp+1,w
 11456  1337  3A80               	xorlw	128
 11457  1338  00FF               	movwf	btemp+1
 11458  1339  3080               	movlw	128
 11459  133A  027F               	subwf	btemp+1,w
 11460  133B  1D03               	skipz
 11461  133C  2B3F               	goto	u6065
 11462  133D  3001               	movlw	1
 11463  133E  0250               	subwf	___fldiv@new_exp,w
 11464  133F                     u6065:
 11465  133F  1803               	skipnc
 11466  1340  2B42               	goto	u6061
 11467  1341  2B43               	goto	u6060
 11468  1342                     u6061:
 11469  1342  2B50               	goto	l801
 11470  1343                     u6060:
 11471  1343                     l3717:
 11472  1343  1283               	bcf	3,5	;RP0=0, select bank0
 11473  1344  1303               	bcf	3,6	;RP1=0, select bank0
 11474  1345  01D0               	clrf	___fldiv@new_exp
 11475  1346  01D1               	clrf	___fldiv@new_exp+1
 11476  1347                     l3719:
 11477  1347  3000               	movlw	0
 11478  1348  00C5               	movwf	___fldiv@b+3
 11479  1349  3000               	movlw	0
 11480  134A  00C4               	movwf	___fldiv@b+2
 11481  134B  3000               	movlw	0
 11482  134C  00C3               	movwf	___fldiv@b+1
 11483  134D  3000               	movlw	0
 11484  134E  00C2               	movwf	___fldiv@b
 11485  134F                     l3721:
 11486  134F  01CF               	clrf	___fldiv@sign
 11487  1350                     l801:
 11488  1350  1283               	bcf	3,5	;RP0=0, select bank0
 11489  1351  1303               	bcf	3,6	;RP1=0, select bank0
 11490  1352  0850               	movf	___fldiv@new_exp,w
 11491  1353  00C6               	movwf	??___fldiv
 11492  1354  0846               	movf	??___fldiv,w
 11493  1355  00D6               	movwf	___fldiv@bexp
 11494  1356                     l3723:
 11495  1356  1C56               	btfss	___fldiv@bexp,0
 11496  1357  2B59               	goto	u6071
 11497  1358  2B5A               	goto	u6070
 11498  1359                     u6071:
 11499  1359  2B5C               	goto	l3727
 11500  135A                     u6070:
 11501  135A                     l3725:
 11502  135A  17C4               	bsf	___fldiv@b+2,7
 11503  135B  2B60               	goto	l803
 11504  135C                     l3727:
 11505  135C  307F               	movlw	127
 11506  135D  00C6               	movwf	??___fldiv
 11507  135E  0846               	movf	??___fldiv,w
 11508  135F  05C4               	andwf	___fldiv@b+2,f
 11509  1360                     l803:
 11510  1360  0856               	movf	___fldiv@bexp,w
 11511  1361  00C6               	movwf	??___fldiv
 11512  1362  1003               	clrc
 11513  1363  0C46               	rrf	??___fldiv,w
 11514  1364  00C7               	movwf	??___fldiv+1
 11515  1365  0847               	movf	??___fldiv+1,w
 11516  1366  00C5               	movwf	___fldiv@b+3
 11517  1367  084F               	movf	___fldiv@sign,w
 11518  1368  00C6               	movwf	??___fldiv
 11519  1369  0846               	movf	??___fldiv,w
 11520  136A  04C5               	iorwf	___fldiv@b+3,f
 11521  136B  2A04               	goto	l3635
 11522  136C                     l781:
 11523  136C  0008               	return
 11524  136D                     __end_of___fldiv:
 11525                           
 11526                           	psect	text36
 11527  1017                     __ptext36:	
 11528 ;; *************** function _ADC_Config *****************
 11529 ;; Defined at:
 11530 ;;		line 31 in file "Config_ADC.c"
 11531 ;; Parameters:    Size  Location     Type
 11532 ;;  AN_num          1    wreg     unsigned char 
 11533 ;; Auto vars:     Size  Location     Type
 11534 ;;  AN_num          1    2[COMMON] unsigned char 
 11535 ;; Return value:  Size  Location     Type
 11536 ;;                  1    wreg      void 
 11537 ;; Registers used:
 11538 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11539 ;; Tracked objects:
 11540 ;;		On entry : 0/0
 11541 ;;		On exit  : 0/0
 11542 ;;		Unchanged: 0/0
 11543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11544 ;;      Params:         0       0       0       0       0
 11545 ;;      Locals:         1       0       0       0       0
 11546 ;;      Temps:          2       0       0       0       0
 11547 ;;      Totals:         3       0       0       0       0
 11548 ;;Total ram usage:        3 bytes
 11549 ;; Hardware stack levels used:    1
 11550 ;; This function calls:
 11551 ;;		Nothing
 11552 ;; This function is called by:
 11553 ;;		_ADC_channel1
 11554 ;;		_ADC_channel2
 11555 ;; This function uses a non-reentrant model
 11556 ;;
 11557                           
 11558                           
 11559                           ;psect for function _ADC_Config
 11560  1017                     _ADC_Config:
 11561                           
 11562                           ;incstack = 0
 11563                           ; Regs used in _ADC_Config: [wreg-fsr0h+status,2+status,0]
 11564                           ;ADC_Config@AN_num stored from wreg
 11565  1017  00F2               	movwf	ADC_Config@AN_num
 11566  1018                     l3311:
 11567                           
 11568                           ;Config_ADC.c: 33:     switch(AN_num){
 11569  1018  2890               	goto	l3315
 11570  1019                     l182:	
 11571                           ;Config_ADC.c: 34:         case 0:
 11572                           
 11573                           
 11574                           ;Config_ADC.c: 35:             ADCON0bits.CHS3 = 0;
 11575  1019  1283               	bcf	3,5	;RP0=0, select bank0
 11576  101A  1303               	bcf	3,6	;RP1=0, select bank0
 11577  101B  129F               	bcf	31,5	;volatile
 11578                           
 11579                           ;Config_ADC.c: 36:             ADCON0bits.CHS2 = 0;
 11580  101C  121F               	bcf	31,4	;volatile
 11581                           
 11582                           ;Config_ADC.c: 37:             ADCON0bits.CHS1 = 0;
 11583  101D  119F               	bcf	31,3	;volatile
 11584                           
 11585                           ;Config_ADC.c: 38:             ADCON0bits.CHS0 = 0;
 11586  101E  111F               	bcf	31,2	;volatile
 11587                           
 11588                           ;Config_ADC.c: 39:             break;
 11589  101F  28CA               	goto	l3317
 11590  1020                     l184:	
 11591                           ;Config_ADC.c: 40:         case 1:
 11592                           
 11593                           
 11594                           ;Config_ADC.c: 41:             ADCON0bits.CHS3 = 0;
 11595  1020  1283               	bcf	3,5	;RP0=0, select bank0
 11596  1021  1303               	bcf	3,6	;RP1=0, select bank0
 11597  1022  129F               	bcf	31,5	;volatile
 11598                           
 11599                           ;Config_ADC.c: 42:             ADCON0bits.CHS2 = 0;
 11600  1023  121F               	bcf	31,4	;volatile
 11601                           
 11602                           ;Config_ADC.c: 43:             ADCON0bits.CHS1 = 0;
 11603  1024  119F               	bcf	31,3	;volatile
 11604                           
 11605                           ;Config_ADC.c: 44:             ADCON0bits.CHS0 = 1;
 11606  1025  151F               	bsf	31,2	;volatile
 11607                           
 11608                           ;Config_ADC.c: 45:             break;
 11609  1026  28CA               	goto	l3317
 11610  1027                     l185:	
 11611                           ;Config_ADC.c: 46:         case 2:
 11612                           
 11613                           
 11614                           ;Config_ADC.c: 47:             ADCON0bits.CHS3 = 0;
 11615  1027  1283               	bcf	3,5	;RP0=0, select bank0
 11616  1028  1303               	bcf	3,6	;RP1=0, select bank0
 11617  1029  129F               	bcf	31,5	;volatile
 11618                           
 11619                           ;Config_ADC.c: 48:             ADCON0bits.CHS2 = 0;
 11620  102A  121F               	bcf	31,4	;volatile
 11621                           
 11622                           ;Config_ADC.c: 49:             ADCON0bits.CHS1 = 1;
 11623  102B  159F               	bsf	31,3	;volatile
 11624                           
 11625                           ;Config_ADC.c: 50:             ADCON0bits.CHS0 = 0;
 11626  102C  111F               	bcf	31,2	;volatile
 11627                           
 11628                           ;Config_ADC.c: 51:             break;
 11629  102D  28CA               	goto	l3317
 11630  102E                     l186:	
 11631                           ;Config_ADC.c: 52:         case 3:
 11632                           
 11633                           
 11634                           ;Config_ADC.c: 53:             ADCON0bits.CHS3 = 0;
 11635  102E  1283               	bcf	3,5	;RP0=0, select bank0
 11636  102F  1303               	bcf	3,6	;RP1=0, select bank0
 11637  1030  129F               	bcf	31,5	;volatile
 11638                           
 11639                           ;Config_ADC.c: 54:             ADCON0bits.CHS2 = 0;
 11640  1031  121F               	bcf	31,4	;volatile
 11641                           
 11642                           ;Config_ADC.c: 55:             ADCON0bits.CHS1 = 1;
 11643  1032  159F               	bsf	31,3	;volatile
 11644                           
 11645                           ;Config_ADC.c: 56:             ADCON0bits.CHS0 = 1;
 11646  1033  151F               	bsf	31,2	;volatile
 11647                           
 11648                           ;Config_ADC.c: 57:             break;
 11649  1034  28CA               	goto	l3317
 11650  1035                     l187:	
 11651                           ;Config_ADC.c: 58:         case 4:
 11652                           
 11653                           
 11654                           ;Config_ADC.c: 59:             ADCON0bits.CHS3 = 0;
 11655  1035  1283               	bcf	3,5	;RP0=0, select bank0
 11656  1036  1303               	bcf	3,6	;RP1=0, select bank0
 11657  1037  129F               	bcf	31,5	;volatile
 11658                           
 11659                           ;Config_ADC.c: 60:             ADCON0bits.CHS2 = 1;
 11660  1038  161F               	bsf	31,4	;volatile
 11661                           
 11662                           ;Config_ADC.c: 61:             ADCON0bits.CHS1 = 0;
 11663  1039  119F               	bcf	31,3	;volatile
 11664                           
 11665                           ;Config_ADC.c: 62:             ADCON0bits.CHS0 = 0;
 11666  103A  111F               	bcf	31,2	;volatile
 11667                           
 11668                           ;Config_ADC.c: 63:             break;
 11669  103B  28CA               	goto	l3317
 11670  103C                     l188:	
 11671                           ;Config_ADC.c: 64:         case 5:
 11672                           
 11673                           
 11674                           ;Config_ADC.c: 65:             ADCON0bits.CHS3 = 0;
 11675  103C  1283               	bcf	3,5	;RP0=0, select bank0
 11676  103D  1303               	bcf	3,6	;RP1=0, select bank0
 11677  103E  129F               	bcf	31,5	;volatile
 11678                           
 11679                           ;Config_ADC.c: 66:             ADCON0bits.CHS2 = 1;
 11680  103F  161F               	bsf	31,4	;volatile
 11681                           
 11682                           ;Config_ADC.c: 67:             ADCON0bits.CHS1 = 0;
 11683  1040  119F               	bcf	31,3	;volatile
 11684                           
 11685                           ;Config_ADC.c: 68:             ADCON0bits.CHS0 = 1;
 11686  1041  151F               	bsf	31,2	;volatile
 11687                           
 11688                           ;Config_ADC.c: 69:             break;
 11689  1042  28CA               	goto	l3317
 11690  1043                     l189:	
 11691                           ;Config_ADC.c: 70:         case 6:
 11692                           
 11693                           
 11694                           ;Config_ADC.c: 71:             ADCON0bits.CHS3 = 0;
 11695  1043  1283               	bcf	3,5	;RP0=0, select bank0
 11696  1044  1303               	bcf	3,6	;RP1=0, select bank0
 11697  1045  129F               	bcf	31,5	;volatile
 11698                           
 11699                           ;Config_ADC.c: 72:             ADCON0bits.CHS2 = 1;
 11700  1046  161F               	bsf	31,4	;volatile
 11701                           
 11702                           ;Config_ADC.c: 73:             ADCON0bits.CHS1 = 1;
 11703  1047  159F               	bsf	31,3	;volatile
 11704                           
 11705                           ;Config_ADC.c: 74:             ADCON0bits.CHS0 = 0;
 11706  1048  111F               	bcf	31,2	;volatile
 11707                           
 11708                           ;Config_ADC.c: 75:             break;
 11709  1049  28CA               	goto	l3317
 11710  104A                     l190:	
 11711                           ;Config_ADC.c: 76:         case 7:
 11712                           
 11713                           
 11714                           ;Config_ADC.c: 77:             ADCON0bits.CHS3 = 0;
 11715  104A  1283               	bcf	3,5	;RP0=0, select bank0
 11716  104B  1303               	bcf	3,6	;RP1=0, select bank0
 11717  104C  129F               	bcf	31,5	;volatile
 11718                           
 11719                           ;Config_ADC.c: 78:             ADCON0bits.CHS2 = 1;
 11720  104D  161F               	bsf	31,4	;volatile
 11721                           
 11722                           ;Config_ADC.c: 79:             ADCON0bits.CHS1 = 1;
 11723  104E  159F               	bsf	31,3	;volatile
 11724                           
 11725                           ;Config_ADC.c: 80:             ADCON0bits.CHS0 = 1;
 11726  104F  151F               	bsf	31,2	;volatile
 11727                           
 11728                           ;Config_ADC.c: 81:             break;
 11729  1050  28CA               	goto	l3317
 11730  1051                     l191:	
 11731                           ;Config_ADC.c: 82:         case 8:
 11732                           
 11733                           
 11734                           ;Config_ADC.c: 83:             ADCON0bits.CHS3 = 1;
 11735  1051  1283               	bcf	3,5	;RP0=0, select bank0
 11736  1052  1303               	bcf	3,6	;RP1=0, select bank0
 11737  1053  169F               	bsf	31,5	;volatile
 11738                           
 11739                           ;Config_ADC.c: 84:             ADCON0bits.CHS2 = 0;
 11740  1054  121F               	bcf	31,4	;volatile
 11741                           
 11742                           ;Config_ADC.c: 85:             ADCON0bits.CHS1 = 0;
 11743  1055  119F               	bcf	31,3	;volatile
 11744                           
 11745                           ;Config_ADC.c: 86:             ADCON0bits.CHS0 = 0;
 11746  1056  111F               	bcf	31,2	;volatile
 11747                           
 11748                           ;Config_ADC.c: 87:             break;
 11749  1057  28CA               	goto	l3317
 11750  1058                     l192:	
 11751                           ;Config_ADC.c: 88:         case 9:
 11752                           
 11753                           
 11754                           ;Config_ADC.c: 89:             ADCON0bits.CHS3 = 1;
 11755  1058  1283               	bcf	3,5	;RP0=0, select bank0
 11756  1059  1303               	bcf	3,6	;RP1=0, select bank0
 11757  105A  169F               	bsf	31,5	;volatile
 11758                           
 11759                           ;Config_ADC.c: 90:             ADCON0bits.CHS2 = 0;
 11760  105B  121F               	bcf	31,4	;volatile
 11761                           
 11762                           ;Config_ADC.c: 91:             ADCON0bits.CHS1 = 0;
 11763  105C  119F               	bcf	31,3	;volatile
 11764                           
 11765                           ;Config_ADC.c: 92:             ADCON0bits.CHS0 = 1;
 11766  105D  151F               	bsf	31,2	;volatile
 11767                           
 11768                           ;Config_ADC.c: 93:             break;
 11769  105E  28CA               	goto	l3317
 11770  105F                     l193:	
 11771                           ;Config_ADC.c: 94:         case 10:
 11772                           
 11773                           
 11774                           ;Config_ADC.c: 95:             ADCON0bits.CHS3 = 1;
 11775  105F  1283               	bcf	3,5	;RP0=0, select bank0
 11776  1060  1303               	bcf	3,6	;RP1=0, select bank0
 11777  1061  169F               	bsf	31,5	;volatile
 11778                           
 11779                           ;Config_ADC.c: 96:             ADCON0bits.CHS2 = 0;
 11780  1062  121F               	bcf	31,4	;volatile
 11781                           
 11782                           ;Config_ADC.c: 97:             ADCON0bits.CHS1 = 1;
 11783  1063  159F               	bsf	31,3	;volatile
 11784                           
 11785                           ;Config_ADC.c: 98:             ADCON0bits.CHS0 = 0;
 11786  1064  111F               	bcf	31,2	;volatile
 11787                           
 11788                           ;Config_ADC.c: 99:             break;
 11789  1065  28CA               	goto	l3317
 11790  1066                     l194:	
 11791                           ;Config_ADC.c: 100:         case 11:
 11792                           
 11793                           
 11794                           ;Config_ADC.c: 101:             ADCON0bits.CHS3 = 1;
 11795  1066  1283               	bcf	3,5	;RP0=0, select bank0
 11796  1067  1303               	bcf	3,6	;RP1=0, select bank0
 11797  1068  169F               	bsf	31,5	;volatile
 11798                           
 11799                           ;Config_ADC.c: 102:             ADCON0bits.CHS2 = 0;
 11800  1069  121F               	bcf	31,4	;volatile
 11801                           
 11802                           ;Config_ADC.c: 103:             ADCON0bits.CHS1 = 1;
 11803  106A  159F               	bsf	31,3	;volatile
 11804                           
 11805                           ;Config_ADC.c: 104:             ADCON0bits.CHS0 = 1;
 11806  106B  151F               	bsf	31,2	;volatile
 11807                           
 11808                           ;Config_ADC.c: 105:             break;
 11809  106C  28CA               	goto	l3317
 11810  106D                     l195:	
 11811                           ;Config_ADC.c: 106:         case 12:
 11812                           
 11813                           
 11814                           ;Config_ADC.c: 107:             ADCON0bits.CHS3 = 1;
 11815  106D  1283               	bcf	3,5	;RP0=0, select bank0
 11816  106E  1303               	bcf	3,6	;RP1=0, select bank0
 11817  106F  169F               	bsf	31,5	;volatile
 11818                           
 11819                           ;Config_ADC.c: 108:             ADCON0bits.CHS2 = 1;
 11820  1070  161F               	bsf	31,4	;volatile
 11821                           
 11822                           ;Config_ADC.c: 109:             ADCON0bits.CHS1 = 0;
 11823  1071  119F               	bcf	31,3	;volatile
 11824                           
 11825                           ;Config_ADC.c: 110:             ADCON0bits.CHS0 = 0;
 11826  1072  111F               	bcf	31,2	;volatile
 11827                           
 11828                           ;Config_ADC.c: 111:             break;
 11829  1073  28CA               	goto	l3317
 11830  1074                     l196:	
 11831                           ;Config_ADC.c: 112:         case 13:
 11832                           
 11833                           
 11834                           ;Config_ADC.c: 113:             ADCON0bits.CHS3 = 1;
 11835  1074  1283               	bcf	3,5	;RP0=0, select bank0
 11836  1075  1303               	bcf	3,6	;RP1=0, select bank0
 11837  1076  169F               	bsf	31,5	;volatile
 11838                           
 11839                           ;Config_ADC.c: 114:             ADCON0bits.CHS2 = 1;
 11840  1077  161F               	bsf	31,4	;volatile
 11841                           
 11842                           ;Config_ADC.c: 115:             ADCON0bits.CHS1 = 0;
 11843  1078  119F               	bcf	31,3	;volatile
 11844                           
 11845                           ;Config_ADC.c: 116:             ADCON0bits.CHS0 = 1;
 11846  1079  151F               	bsf	31,2	;volatile
 11847                           
 11848                           ;Config_ADC.c: 117:             break;
 11849  107A  28CA               	goto	l3317
 11850  107B                     l197:	
 11851                           ;Config_ADC.c: 118:         case 14:
 11852                           
 11853                           
 11854                           ;Config_ADC.c: 119:             ADCON0bits.CHS3 = 1;
 11855  107B  1283               	bcf	3,5	;RP0=0, select bank0
 11856  107C  1303               	bcf	3,6	;RP1=0, select bank0
 11857  107D  169F               	bsf	31,5	;volatile
 11858                           
 11859                           ;Config_ADC.c: 120:             ADCON0bits.CHS2 = 1;
 11860  107E  161F               	bsf	31,4	;volatile
 11861                           
 11862                           ;Config_ADC.c: 121:             ADCON0bits.CHS1 = 1;
 11863  107F  159F               	bsf	31,3	;volatile
 11864                           
 11865                           ;Config_ADC.c: 122:             ADCON0bits.CHS0 = 0;
 11866  1080  111F               	bcf	31,2	;volatile
 11867                           
 11868                           ;Config_ADC.c: 123:             break;
 11869  1081  28CA               	goto	l3317
 11870  1082                     l198:	
 11871                           ;Config_ADC.c: 124:         case 15:
 11872                           
 11873                           
 11874                           ;Config_ADC.c: 125:             ADCON0bits.CHS3 = 1;
 11875  1082  1283               	bcf	3,5	;RP0=0, select bank0
 11876  1083  1303               	bcf	3,6	;RP1=0, select bank0
 11877  1084  169F               	bsf	31,5	;volatile
 11878                           
 11879                           ;Config_ADC.c: 126:             ADCON0bits.CHS2 = 1;
 11880  1085  161F               	bsf	31,4	;volatile
 11881                           
 11882                           ;Config_ADC.c: 127:             ADCON0bits.CHS1 = 1;
 11883  1086  159F               	bsf	31,3	;volatile
 11884                           
 11885                           ;Config_ADC.c: 128:             ADCON0bits.CHS0 = 1;
 11886  1087  151F               	bsf	31,2	;volatile
 11887                           
 11888                           ;Config_ADC.c: 129:             break;
 11889  1088  28CA               	goto	l3317
 11890  1089                     l199:	
 11891                           ;Config_ADC.c: 130:         default:
 11892                           
 11893                           
 11894                           ;Config_ADC.c: 131:             ADCON0bits.CHS3 = 0;
 11895  1089  1283               	bcf	3,5	;RP0=0, select bank0
 11896  108A  1303               	bcf	3,6	;RP1=0, select bank0
 11897  108B  129F               	bcf	31,5	;volatile
 11898                           
 11899                           ;Config_ADC.c: 132:             ADCON0bits.CHS2 = 0;
 11900  108C  121F               	bcf	31,4	;volatile
 11901                           
 11902                           ;Config_ADC.c: 133:             ADCON0bits.CHS1 = 0;
 11903  108D  119F               	bcf	31,3	;volatile
 11904                           
 11905                           ;Config_ADC.c: 134:             ADCON0bits.CHS0 = 0;
 11906  108E  111F               	bcf	31,2	;volatile
 11907                           
 11908                           ;Config_ADC.c: 135:             break;
 11909  108F  28CA               	goto	l3317
 11910  1090                     l3315:
 11911  1090  0872               	movf	ADC_Config@AN_num,w
 11912  1091  00F0               	movwf	??_ADC_Config
 11913  1092  01F1               	clrf	??_ADC_Config+1
 11914                           
 11915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11916                           ; Switch size 1, requested type "simple"
 11917                           ; Number of cases is 1, Range of values is 0 to 0
 11918                           ; switch strategies available:
 11919                           ; Name         Instructions Cycles
 11920                           ; simple_byte            4     3 (average)
 11921                           ; direct_byte           11     8 (fixed)
 11922                           ; jumptable            260     6 (fixed)
 11923                           ;	Chosen strategy is simple_byte
 11924  1093  0871               	movf	??_ADC_Config+1,w
 11925  1094  3A00               	xorlw	0	; case 0
 11926  1095  1903               	skipnz
 11927  1096  2898               	goto	l3875
 11928  1097  2889               	goto	l199
 11929  1098                     l3875:
 11930                           
 11931                           ; Switch size 1, requested type "simple"
 11932                           ; Number of cases is 16, Range of values is 0 to 15
 11933                           ; switch strategies available:
 11934                           ; Name         Instructions Cycles
 11935                           ; simple_byte           49    25 (average)
 11936                           ; direct_byte           56     8 (fixed)
 11937                           ; jumptable            260     6 (fixed)
 11938                           ;	Chosen strategy is simple_byte
 11939  1098  0870               	movf	??_ADC_Config,w
 11940  1099  3A00               	xorlw	0	; case 0
 11941  109A  1903               	skipnz
 11942  109B  2819               	goto	l182
 11943  109C  3A01               	xorlw	1	; case 1
 11944  109D  1903               	skipnz
 11945  109E  2820               	goto	l184
 11946  109F  3A03               	xorlw	3	; case 2
 11947  10A0  1903               	skipnz
 11948  10A1  2827               	goto	l185
 11949  10A2  3A01               	xorlw	1	; case 3
 11950  10A3  1903               	skipnz
 11951  10A4  282E               	goto	l186
 11952  10A5  3A07               	xorlw	7	; case 4
 11953  10A6  1903               	skipnz
 11954  10A7  2835               	goto	l187
 11955  10A8  3A01               	xorlw	1	; case 5
 11956  10A9  1903               	skipnz
 11957  10AA  283C               	goto	l188
 11958  10AB  3A03               	xorlw	3	; case 6
 11959  10AC  1903               	skipnz
 11960  10AD  2843               	goto	l189
 11961  10AE  3A01               	xorlw	1	; case 7
 11962  10AF  1903               	skipnz
 11963  10B0  284A               	goto	l190
 11964  10B1  3A0F               	xorlw	15	; case 8
 11965  10B2  1903               	skipnz
 11966  10B3  2851               	goto	l191
 11967  10B4  3A01               	xorlw	1	; case 9
 11968  10B5  1903               	skipnz
 11969  10B6  2858               	goto	l192
 11970  10B7  3A03               	xorlw	3	; case 10
 11971  10B8  1903               	skipnz
 11972  10B9  285F               	goto	l193
 11973  10BA  3A01               	xorlw	1	; case 11
 11974  10BB  1903               	skipnz
 11975  10BC  2866               	goto	l194
 11976  10BD  3A07               	xorlw	7	; case 12
 11977  10BE  1903               	skipnz
 11978  10BF  286D               	goto	l195
 11979  10C0  3A01               	xorlw	1	; case 13
 11980  10C1  1903               	skipnz
 11981  10C2  2874               	goto	l196
 11982  10C3  3A03               	xorlw	3	; case 14
 11983  10C4  1903               	skipnz
 11984  10C5  287B               	goto	l197
 11985  10C6  3A01               	xorlw	1	; case 15
 11986  10C7  1903               	skipnz
 11987  10C8  2882               	goto	l198
 11988  10C9  2889               	goto	l199
 11989  10CA                     l3317:
 11990                           
 11991                           ;Config_ADC.c: 137:     ADCON1 = 0b00000000;
 11992  10CA  1683               	bsf	3,5	;RP0=1, select bank1
 11993  10CB  1303               	bcf	3,6	;RP1=0, select bank1
 11994  10CC  019F               	clrf	31	;volatile
 11995  10CD                     l3319:
 11996                           
 11997                           ;Config_ADC.c: 138:     ADCON0bits.ADCS1 = 1;
 11998  10CD  1283               	bcf	3,5	;RP0=0, select bank0
 11999  10CE  1303               	bcf	3,6	;RP1=0, select bank0
 12000  10CF  179F               	bsf	31,7	;volatile
 12001  10D0                     l3321:
 12002                           
 12003                           ;Config_ADC.c: 139:     ADCON0bits.ADCS0 = 0;
 12004  10D0  131F               	bcf	31,6	;volatile
 12005  10D1                     l3323:
 12006                           
 12007                           ;Config_ADC.c: 140:     ADCON0bits.ADON = 1;
 12008  10D1  141F               	bsf	31,0	;volatile
 12009  10D2                     l200:
 12010  10D2  0008               	return
 12011  10D3                     __end_of_ADC_Config:
 12012  007E                     btemp	set	126	;btemp
 12013  007E                     wtemp0	set	126
 12014                           
 12015                           	psect	config
 12016                           
 12017                           ;Config register CONFIG1 @ 0x2007
 12018                           ;	Oscillator Selection bits
 12019                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 12020                           ;	Watchdog Timer Enable bit
 12021                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 12022                           ;	Power-up Timer Enable bit
 12023                           ;	PWRTE = OFF, PWRT disabled
 12024                           ;	RE3/MCLR pin function select bit
 12025                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 12026                           ;	Code Protection bit
 12027                           ;	CP = OFF, Program memory code protection is disabled
 12028                           ;	Data Code Protection bit
 12029                           ;	CPD = OFF, Data memory code protection is disabled
 12030                           ;	Brown Out Reset Selection bits
 12031                           ;	BOREN = ON, BOR enabled
 12032                           ;	Internal External Switchover bit
 12033                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 12034                           ;	Fail-Safe Clock Monitor Enabled bit
 12035                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 12036                           ;	Low Voltage Programming Enable bit
 12037                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 12038                           ;	In-Circuit Debugger Mode bit
 12039                           ;	DEBUG = 0x1, unprogrammed default
 12040  2007                     	org	8199
 12041  2007  23D2               	dw	9170
 12042                           
 12043                           ;Config register CONFIG2 @ 0x2008
 12044                           ;	Brown-out Reset Selection bit
 12045                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 12046                           ;	Flash Program Memory Self Write Enable bits
 12047                           ;	WRT = OFF, Write protection off
 12048  2008                     	org	8200
 12049  2008  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    144
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     39      71
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_7(CODE[6]), STR_6(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> data2(BANK1[8]), data1(BANK1[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _titulos_LCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _setup->_initOsc
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flsub->___xxtofl
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _ADC_channel2->___xxtofl
    _ADC_channel1->___xxtofl
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    _main->_float_to_string
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _ADC_channel2->___fldiv
    _ADC_channel1->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _float_to_string->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   46546
                                             37 BANK1      2     2      0
                       _ADC_channel1
                       _ADC_channel2
                           _Lcd_Init
                    _float_to_string
                              _setup
                        _titulos_LCD
 ---------------------------------------------------------------------------------
 (1) _titulos_LCD                                          1     1      0     829
                                              8 COMMON     1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     285
                                              3 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      30
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     544
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _float_to_string                                      1     1      0   32269
                                             78 BANK0      1     1      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   32269
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      45
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      30
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_channel2                                         4     4      0    6694
                                             56 BANK0      4     4      0
                         _ADC_Config
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _ADC_channel1                                         4     4      0    6694
                                             56 BANK0      4     4      0
                         _ADC_Config
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Config                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_channel1
     _ADC_Config
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _ADC_channel2
     _ADC_Config
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _float_to_string
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
   _setup
     _initOsc
   _titulos_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      47       7       88.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A5      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 11 14:09:43 2021

             ___fldiv@aexp 0057               ___fldiv@bexp 0056                          pc 0002  
             ___fldiv@sign 004F                         l73 1C4E                         l91 19CA  
                       l85 1EA3                         l79 1E30                         l88 1AB0  
                       l97 1CFE                         l98 1D56                         l99 1D04  
             ___awdiv@sign 0021                         fsr 0004        ___wmul@multiplicand 0072  
      __size_of_ADC_Config 00BC        __Umul8_16@word_mpld 0076                        l100 1D0A  
                      l101 1D10                        l102 1D16                        l103 1D1C  
                      l200 10D2                        l120 1BAF                        l104 1D22  
                      l105 1D28                        l106 1D2E                        l123 0805  
                      l107 1D57                        l126 19AF                        l302 1577  
                      l135 1A12                        l144 1A5C                        l138 1016  
                      l331 013A                        l309 0C9E                        l190 104A  
                      l182 1019                        l191 1051                        l192 1058  
                      l184 1020                        l432 1DBD                        l193 105F  
                      l185 1027                        l194 1066                        l186 102E  
                      l362 057F                        l195 106D                        l187 1035  
                      l196 1074                        l188 103C                        l197 107B  
                      l189 1043                        l613 118F                        l198 1082  
                      l606 086C                        l614 1101                        l702 1B64  
                      l199 1089                        l624 1182                        l712 1B20  
                      l392 07EF                        l801 1350                        l609 0881  
                      l617 1152                        l377 072A                        l369 05C3  
                      l570 0902                        l562 1CFB                        l803 1360  
                      l723 15DB                        l652 1CA2                        l396 1A1F  
                      l549 0074                        l582 1BCC                        l590 1F2C  
                      l398 1A37                        l566 093F                        l831 0FF3  
                      l583 1BE8                        l591 1F45                        l727 1682  
                      l567 08A4                        l840 1A83                        l584 1BFD  
                      l744 174D                        l736 17FF                        l825 0F6B  
                      l729 1659                        l577 0932                        l754 1793  
                      l819 0FFF                        l587 1EC0                        l595 1983  
                      l748 1771                        l781 136C                        l765 17F3  
                      l757 17D1                        l838 1A71                        l766 17FF  
                      l863 1F68                        l599 0881                        l865 1FFF  
                      l769 19EE                        l795 12DE                        l779 11EC  
                      l883 1995                        l876 1FC9                        l877 1FD5  
                      l869 1FAD                        l983 0801                        _VAL 00D5  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
             ___flmul@aexp 0036               ___flmul@bexp 0037                _titulos_LCD 1BFE  
             ___flmul@sign 0031               ___flmul@temp 003C               ___flmul@prod 0038  
             ___fltol@exp1 005B                       l3003 10D3                       l3101 0927  
                     l3021 1119                       l3005 10E6                       l2125 1CFD  
                     l2301 19C9                       l2311 1B89                       l2303 1B65  
                     l3111 1A19                       l3103 0937                       l3031 1144  
                     l3023 1122                       l3015 1102                       l2305 1B6B  
                     l3201 0840                       l3121 1D58                       l3113 1A26  
                     l3041 115E                       l3033 114C                       l3025 112B  
                     l3017 1108                       l3009 10EF                       l2129 1D34  
                     l1451 199A                       l2307 1B74                       l3131 1D85  
                     l3123 1D68                       l3115 1A2D                       l3107 1A13  
                     l3051 1187                       l3035 1156                       l3043 1170  
                     l3027 1139                       l3019 1117                       l1453 19A0  
                     l2309 1B83                       l3133 1D97                       l3125 1D6B  
                     l3141 1DB5                       l3221 1C4F                       l3117 1A33  
                     l3109 1A15                       l3061 0898                       l3029 1143  
                     l2501 0059                       l3301 1A0C                       l1461 1005  
                     l3311 1018                       l1455 19A3                       l3151 1BFA  
                     l3215 0861                       l3207 0848                       l3135 1DA5  
                     l3127 1D78                       l3231 1C7D                       l3223 1C57  
                     l3071 08BE                       l3055 0882                       l2503 0060  
                     l1463 100B                       l3303 1A39                       l3321 10D0  
                     l1457 19AC                       l1449 1997                       l3153 1BFC  
                     l3145 1BB0                       l3161 1ED4                       l2601 157F  
                     l3241 19CB                       l3217 0871                       l3209 085A  
                     l3137 1DA6                       l3129 1D7C                       l3233 1C8B  
                     l3225 1C5A                       l3081 08F2                       l3073 08C0  
                     l3057 088F                       l3049 1177                       l2505 0066  
                     l2521 1CAF                       l2513 1CA3                       l3401 01F5  
                     l2281 19BA                       l1465 100E                       l3305 1A3C  
                     l3323 10D1                       l3315 1090                       l3251 1F50  
                     l3147 1BC4                       l3171 1F42                       l3163 1EDC  
                     l2611 1594                       l2603 1585                       l3243 19CF  
                     l3219 0876                       l3139 1DAF                       l3235 1C94  
                     l3227 1C67                       l3083 08F3                       l3075 08C9  
                     l3067 08A5                       l2507 006B                       l2531 1CC8  
                     l2523 1CB3                       l2515 1CA4                       l3411 027C  
                     l3403 0208                       l3331 007D                       l2291 19C2  
                     l2283 19BB                       l1467 1013                       l1459 1002  
                     l3307 1A49                       l3317 10CA                       l2461 1A6B  
                     l3261 1F7E                       l3253 1F60                       l3149 1BE0  
                     l3173 1F44                       l3165 1EE0                       l3157 1EA4  
                     l3181 1983                       l2621 15AC                       l2613 159C  
                     l2605 1589                       l3229 1C6B                       l3237 1C9A  
                     l3093 090E                       l3085 08FC                       l3077 08D2  
                     l3069 08AD                       l2509 0070                       l2541 1CE7  
                     l2533 1CCC                       l2525 1CB8                       l2517 1CA8  
                     l3501 05B6                       l3421 02D0                       l3413 0295  
                     l3405 020C                       l3341 00A3                       l3333 0083  
                     l2293 19C3                       l2285 19BF                       l2277 19B0  
                     l3309 1A4F                       l3319 10CD                       l2463 1A7A  
                     l2455 1A5E                       l3271 1FB4                       l3263 1F8B  
                     l3255 1F70                       l3247 1F47                       l3167 1F04  
                     l3159 1EB8                       l2711 16BC                       l2703 1694  
                     l2631 15BE                       l2623 15B2                       l2615 159D  
                     l2607 158A                       l3191 081C                       l3087 0906  
                     l3095 0920                       l3079 08E4                       l2551 1B21  
                     l2471 000F                       l2535 1CD0                       l2527 1CBE  
                     l2543 1CED                       l2519 1CAD                       l3511 05DC  
                     l3503 05BD                       l3431 0377                       l3423 0317  
                     l3415 029E                       l3407 0212                       l3343 00A7  
                     l3351 00E3                       l3335 008A                       l2295 19C6  
                     l2287 19C0                       l2279 19B6                       l3601 11A7  
                     l2465 1A7F                       l2457 1A60                       l2801 0CB1  
                     l3281 1FED                       l3273 1FBF                       l3265 1F92  
                     l3249 1F4C                       l3169 1F08                       l3177 1979  
                     l2713 16BE                       l2705 16AB                       l2721 16D1  
                     l2633 15C3                       l2641 15D3                       l2625 15B3  
                     l2609 158F                       l2617 159F                       l3193 0831  
                     l3185 0806                       l2561 1B37                       l2553 1B23  
                     l2481 0023                       l2473 0013                       l2545 1CF2  
                     l2537 1CDA                       l2529 1CC1                       l3521 06BB  
                     l3513 05FA                       l3505 05CC                       l3433 0392  
                     l3425 0326                       l3417 02B9                       l3409 0231  
                     l3361 010E                       l3353 00F1                       l3345 00BC  
                     l3337 008F                       l3329 0078                       l2297 19C7  
                     l2289 19C1                       l3611 11BF                       l3603 11AC  
                     l2459 1A67                       l2811 0CCD                       l2803 0CB6  
                     l3283 1FF2                       l3275 1FC3                       l3267 1F96  
                     l3259 1F79                       l3179 1981                       l2723 16E7  
                     l2731 173F                       l2715 16C2                       l2707 16AF  
                     l2651 15F1                       l2643 15E1                       l2635 15C8  
                     l2627 15B9                       l2619 15A7                       l3195 0832  
                     l3187 0813                       l2571 1B5A                       l2563 1B3B  
                     l2555 1B29                       l2491 0039                       l2483 0027  
                     l2475 0018                       l2547 1CF7                       l2539 1CE0  
                     l3531 070F                       l3515 0655                       l3523 06F6  
                     l3507 05D1                       l3451 046D                       l3443 03E0  
                     l3435 039B                       l3427 0341                       l3419 02C1  
                     l3363 0121                       l3355 00F2                       l3347 00CF  
                     l3339 0093                       l2299 19C8                       l3291 19F0  
                     l3701 12E3                       l3621 11D4                       l3613 11C4  
                     l3605 11B4                       l2901 0F70                       l2821 0CE2  
                     l2813 0CD2                       l2805 0CBB                       l3285 1FF6  
                     l3277 1FCD                       l3269 1FA4                       l2741 176C  
                     l2733 1755                       l2725 1725                       l2717 16C3  
                     l2709 16B3                       l2661 1605                       l2653 15F5  
                     l2645 15E5                       l2637 15D0                       l2629 15BD  
                     l3197 083A                       l2565 1B4C                       l2557 1B2C  
                     l2573 1B60                       l2581 1AF0                       l2493 003D  
                     l2485 0029                       l2477 001A                       l2469 000C  
                     l3541 073C                       l3525 06FE                       l3517 0690  
                     l3509 05D8                       l3461 04A6                       l3437 03A3  
                     l3429 0368                       l3445 03E9                       l3381 016C  
                     l3533 0716                       l3373 013C                       l3365 0125  
                     l3357 00F6                       l3349 00D3                       l3293 19F5  
                     l3703 12E8                       l3711 1319                       l3631 11F4  
                     l3623 11D9                       l3615 11CA                       l3607 11B5  
                     l2903 0F75                       l2911 0FA6                       l2831 0CFE  
                     l2823 0CE7                       l2815 0CD8                       l2807 0CC3  
                     l3287 1FF7                       l3279 1FD7                       l2751 177F  
                     l2743 1770                       l2735 175A                       l2727 172B  
                     l2719 16CC                       l2671 1619                       l2663 1609  
                     l2655 15F9                       l2647 15E9                       l2639 15D1  
                     l3199 083C                       l2567 1B52                       l2559 1B33  
                     l2591 1B0F                       l2583 1AF7                       l2495 0041  
                     l2487 002F                       l2479 001E                       l3551 076E  
                     l3543 074B                       l3535 071C                       l3527 0705  
                     l3519 06AF                       l3471 04E4                       l3463 04B0  
                     l3447 041E                       l3439 03C1                       l3391 01B4  
                     l3383 017A                       l3375 0158                       l3359 00F9  
                     l3367 0136                       l3295 19FA                       l3721 134F  
                     l3713 1326                       l3705 12F6                       l3641 1212  
                     l3633 1200                       l3625 11E1                       l3617 11CE  
                     l3609 11B7                       l2921 0FD9                       l2913 0FB3  
                     l2905 0F83                       l2841 0D29                       l2833 0D03  
                     l2825 0CEF                       l2817 0CDC                       l2809 0CC5  
                     l2761 1790                       l2745 1775                       l2753 1781  
                     l2729 1730                       l2681 163D                       l2673 161D  
                     l2665 160D                       l2657 15FD                       l2649 15ED  
                     l2569 1B53                       l2593 1B16                       l2585 1AFB  
                     l2577 1AE7                       l2497 0052                       l2489 0032  
                     l3561 0798                       l3553 0772                       l3545 0754  
                     l3537 0724                       l3529 0709                       l3481 050D  
                     l3473 04ED                       l3465 04CB                       l3457 046F  
                     l3449 046B                       l3393 01B8                       l3385 017E  
                     l3377 0164                       l3369 0138                       l3297 1A01  
                     l3723 1356                       l3715 1334                       l3707 12FA  
                     l3651 123D                       l3635 1204                       l3627 11E2  
                     l3619 11CF                       l2923 0FE7                       l2915 0FBE  
                     l2907 0F87                       l2851 0DC6                       l2843 0D46  
                     l2827 0CF1                       l2819 0CDD                       l2771 17AF  
                     l2747 1778                       l2739 1763                       l2755 1785  
                     l2691 166D                       l2683 165D                       l2675 1621  
                     l2667 1611                       l2659 1601                       l2587 1AFF  
                     l2579 1AED                       l2595 1B1C                       l2499 0058  
                     l3571 07B9                       l3563 07A4                       l3555 0780  
                     l3547 075C                       l3539 0735                       l3491 0587  
                     l3483 0514                       l3467 04D1                       l3395 01D1  
                     l3387 0197                       l3379 0168                       l3299 1A07  
                     l3725 135A                       l3717 1343                       l3709 1313  
                     l3661 1262                       l3653 1245                       l3645 121B  
                     l3629 11E4                       l2925 0FEB                       l2917 0FCD  
                     l2909 0FA0                       l2861 0E29                       l2853 0DCF  
                     l2845 0D62                       l2837 0D0C                       l2829 0CF9  
                     l2781 17E8                       l2773 17CD                       l2765 1798  
                     l2757 1786                       l2749 177A                       l2693 1676  
                     l2685 1666                       l2669 1615                       l2677 1625  
                     l2589 1B09                       l2941 1483                       l2933 1370  
                     l3573 07C5                       l3565 07A8                       l3557 0789  
                     l3549 0768                       l3493 0590                       l3485 0519  
                     l3469 04DD                       l3477 04F2                       l3397 01DC  
                     l3389 01B0                       l3581 07EB                       l3741 1C28  
                     l3733 1BFE                       l3727 135C                       l3719 1347  
                     l3671 128D                       l3663 1263                       l3655 1247  
                     l3647 122D                       l3639 120D                       l3591 1190  
                     l2927 0FEC                       l2919 0FD7                       l2871 0EC9  
                     l2863 0E42                       l2855 0DDF                       l2847 0D8E  
                     l2839 0D1C                       l3751 1DCE                       l2791 17FE  
                     l2783 17E9                       l2775 17D6                       l2767 179D  
                     l2759 178A                       l2687 1668                       l2695 167A  
                     l2679 1626                       l2599 1578                       l2943 1489  
                     l2935 1376                       l2951 0943                       l3575 07D1  
                     l3567 07AE                       l3559 078D                       l3495 0594  
                     l3487 0554                       l3479 04FF                       l3399 01E2  
                     l3743 1C38                       l3735 1C08                       l3681 12AA  
                     l3657 124C                       l3665 126C                       l3673 1291  
                     l3649 1235                       l3593 1197                       l2929 0FF7  
                     l2881 0F37                       l2873 0EEF                       l2865 0E5F  
                     l2857 0DFC                       l2849 0DAA                       l2793 0C9F  
                     l3753 1DD2                       l3761 1E41                       l2785 17ED  
                     l2777 17DB                       l2769 17AB                       l2697 1686  
                     l2689 166C                       l2953 0947                       l3569 07B5  
                     l3497 059A                       l3489 0573                       l3745 1C3E  
                     l3737 1C0E                       l3691 12C2                       l3683 12AE  
                     l3675 1297                       l3667 127E                       l3659 125E  
                     l3595 119D                       l2891 0F4F                       l2883 0F3B  
                     l2875 0F17                       l2867 0E8C                       l2859 0E0C  
                     l2795 0CA6                       l3755 1E2B                       l3747 1DBE  
                     l3763 1E45                       l2787 17EF                       l2779 17E3  
                     l2699 168B                       l2947 1534                       l2963 0A38  
                     l2955 0949                       l3499 05A7                       l3579 07D9  
                     l3739 1C1E                       l3771 1AB6                       l3693 12C3  
                     l3685 12AF                       l3677 129F                       l3669 127F  
                     l3597 11A1                       l2893 0F50                       l2885 0F3C  
                     l2877 0F20                       l2869 0E9C                       l2797 0CAC  
                     l3749 1DC4                       l3765 1E9E                       l3757 1E31  
                     l2789 17FA                       l2981 0BE3                       l2965 0A3F  
                     l2957 0950                       l2973 0AF4                       l3781 1AD4  
                     l3773 1ABB                       l3695 12C7                       l3687 12B8  
                     l3679 12A1                       l3599 11A2                       l2895 0F54  
                     l2887 0F45                       l2879 0F2E                       l2799 0CB0  
                     l3759 1E37                       l2991 1985                       l2983 0BEA  
                     l2975 0AFB                       l3767 1A84                       l3871 1D3C  
                     l3783 1ADE                       l3775 1AC0                       l3697 12DB  
                     l3689 12BE                       l2897 0F68                       l2889 0F4B  
                     l2993 1986                       l2969 0AC7                       l3873 0150  
                     l3777 1AC5                       l3769 1AB1                       l3875 1098  
                     l2995 198C                       l2987 0C72                       l3779 1ACF  
                     l2997 1992                       l2999 1994                       STR_1 18A3  
                     STR_2 18A7                       STR_3 18AB                       STR_4 18AF  
                     STR_5 18AF                       STR_6 1896                       STR_7 189D  
                     u3100 001E                       u3101 001D                       u3110 002F  
                     u3111 002E                       u3200 1CB3                       u4001 0DEE  
                     u3201 1CB2                       u4002 0DF5                       u3130 0041  
                     u3210 1CBE                       u4011 0E1B                       u4003 0DFC  
                     u3131 0040                       u3211 1CBD                       u3060 1A6B  
                     u4012 0E22                       u3300 1B3B                       u3061 1A6A  
                     u4013 0E29                       u3301 1B3A                       u3125 0033  
                     u3150 0052                       u3230 1CD0                       u4031 0E51  
                     u3151 0051                       u3231 1CCF                       u3080 1A7F  
                     u4200 0F96                       u4120 0F3B                       u4032 0E58  
                     u5000 082A                       u3320 1B4C                       u3400 1B1C  
                     u3240 1CDA                       u3081 1A7E                       u4121 0F3A  
                     u4105 0F19                       u4041 0E7E                       u4033 0E5F  
                     u4025 0E2B                       u3321 1B4B                       u3401 1B1B  
                     u3145 0042                       u3241 1CD9                       u3225 1CC2  
                     u4210 0FB3                       u4042 0E85                       u3410 1589  
                     u5010 0840                       u3170 0066                       u3090 0013  
                     u3075 1A72                       u4211 0FB2                       u4115 0F30  
                     u4051 0EAB                       u4043 0E8C                       u3411 1588  
                     u5011 083F                       u3315 1B3C                       u3171 0065  
                     u3155 004E                       u3091 0012                       u4220 0FCD  
                     u4140 0F4F                       u4060 0ED5                       u4052 0EB2  
                     u3500 163D                       u3420 158F                       u5020 0847  
                     u3340 1B60                       u3180 006B                       u3260 1CED  
                     u4221 0FCC                       u4205 0F91                       u4141 0F4E  
                     u4053 0EB9                       u3501 163C                       u3421 158E  
                     u5021 0846                       u5005 0825                       u3341 1B5F  
                     u3325 1B48                       u3181 006A                       u3165 005A  
                     u3261 1CEC                       u3245 1CD6                       u4230 0FEB  
                     u4150 0F54                       u3510 1648                       u3430 1594  
                     u5110 1C6B                       u3350 1AED                       u3270 1CF2  
                     u3190 1CA8                       u4231 0FEA                       u4215 0FAF  
                     u4151 0F53                       u4135 0F3E                       u4071 0EE1  
                     u3511 1646                       u3431 1593                       u5111 1C6A  
                     u3335 1B54                       u3351 1AEC                       u3271 1CF1  
                     u3255 1CE1                       u3191 1CA7                       u6000 12DB  
                     u4160 0F68                       u4080 0EFD                       u4072 0EE8  
                     u3600 16AF                       u3520 1649                       u3440 15B2  
                     u5040 0859                       u5120 1C7D                       u3280 1B29  
                     u4240 1376                       u4320 0947                       u6001 12DA  
                     u4225 0FC9                       u4161 0F67                       u4073 0EEF  
                     u4065 0ED0                       u3601 16AE                       u3505 1639  
                     u3441 15B1                       u5041 0858                       u5121 1C7C  
                     u5105 1C5C                       u3281 1B28                       u4305 14F3  
                     u4241 1375                       u4321 0946                       u6010 12E2  
                     u4170 0F6F                       u5210 1FB3                       u3610 16B3  
                     u3530 165D                       u3450 15BD                       u5050 0860  
                     u3370 1AFF                       u4410 0AFB                       u4330 0950  
                     u6011 12E1                       u4171 0F6E                       u4091 0F09  
                     u5211 1FB2                       u3611 16B2                       u3531 165C  
                     u3451 15BC                       u5051 085F                       u5035 0849  
                     u3371 1AFE                       u4315 153F                       u4411 0AFA  
                     u4331 094F                       u6020 12E8                       u4180 0F75  
                     u4092 0F10                       u3620 16C2                       u3540 166C  
                     u3460 15C3                       u5140 1C9A                       u3380 1B09  
                     u4500 1992                       u5300 1A07                       u6021 12E7  
                     u4181 0F74                       u4093 0F17                       u4085 0EF8  
                     u5205 1FA5                       u3621 16C1                       u3541 166B  
                     u3461 15C2                       u5141 1C99                       u5125 1C79  
                     u3381 1B08                       u3365 1AF1                       u4501 1991  
                     u4405 0ACA                       u5301 1A06                       u6030 12FA  
                     u4190 0F87                       u5230 1FC3                       u5150 1F4C  
                     u3710 1770                       u3470 15C8                       u5070 0871  
                     u4510 10E6                       u5310 1A5C                       u6031 12F9  
                     u4191 0F86                       u5231 1FC2                       u5151 1F4B  
                     u3711 176F                       u3471 15C7                       u5071 0870  
                     u5135 1C8C                       u4511 10E5                       u3295 1B2D  
                     u4255 1393                       u5311 1A5B                       u6040 1309  
                     u5240 1FC9                       u5160 1F50                       u3800 17BE  
                     u3720 1775                       u3640 16E7                       u3560 1682  
                     u3480 15E1                       u5080 0876                       u4600 116F  
                     u4520 1100                       u4280 1489                       u5400 01D1  
                     u5320 0083                       u5241 1FC8                       u5225 1FB8  
                     u5161 1F4F                       u3721 1774                       u3705 1765  
                     u3641 16E6                       u3561 1681                       u3481 15E0  
                     u5081 0875                       u5065 0863                       u4601 116E  
                     u4521 10FF                       u3385 1B05                       u4281 1488  
                     u4265 13ED                       u4425 0B1B                       u4345 0970  
                     u5401 01D0                       u5321 0082                       u6050 1326  
                     u5250 1FCD                       u5170 1F70                       u3810 17CD  
                     u3730 177F                       u3570 1686                       u3490 15E5  
                     u5090 1C57                       u4610 1176                       u4450 0BEA  
                     u4370 0A3F                       u5410 020C                       u5330 00A3  
                     u6051 1325                       u5251 1FCC                       u5171 1F6F  
                     u3811 17CC                       u3731 177E                       u3651 16FE  
                     u3643 16E3                       u3635 16C5                       u3571 1685  
                     u3555 166F                       u3491 15E4                       u5091 1C56  
                     u4611 1175                       u3395 1B10                       u4275 1442  
                     u4451 0BE9                       u4435 0B57                       u4371 0A3E  
                     u4355 09AC                       u5411 020B                       u5331 00A2  
                     u6060 1343                       u3900 0CDC                       u5260 1FE2  
                     u3820 17D6                       u3740 1785                       u3660 1712  
                     u3652 16FF                       u3580 168B                       u4700 0906  
                     u4540 1139                       u5420 0295                       u5340 00E3  
                     u6061 1342                       u6045 1304                       u3901 0CDB  
                     u3821 17D5                       u3805 17B9                       u3741 1784  
                     u3661 1713                       u3653 1704                       u3581 168A  
                     u4701 0905                       u4541 1138                       u4445 0BA2  
                     u4365 09F7                       u5421 0294                       u5341 00E2  
                     u6117 1ACB                       u6070 135A                       u3910 0CE2  
                     u5270 1FF2                       u5190 1F91                       u3830 17DB  
                     u3750 178A                       u3670 1730                       u3662 1718  
                     u3654 1705                       u4710 090D                       u4630 1187  
                     u5510 04A5                       u5430 02B9                       u5350 00F1  
                     u6071 1359                       u6055 1322                       u3911 0CE1  
                     u5271 1FF1                       u5191 1F90                       u3831 17DA  
                     u3751 1789                       u3671 172F                       u3663 1719  
                     u3655 170A                       u3591 169D                       u4711 090C  
                     u4631 1186                       u4535 1124                       u4295 14A6  
                     u5511 04A4                       u5431 02B8                       u5351 00F0  
                     u6127 1ADA                       u3920 0CE7                       u5280 1FF6  
                     u6080 1E30                       u3840 17E8                       u3760 1790  
                     u3680 1755                       u3656 170B                       u3592 16A4  
                     u4800 1A33                       u4640 088F                       u4560 1152  
                     u5600 05B6                       u5520 04B0                       u5440 02D0  
                     u5360 0135                       u6065 133F                       u3921 0CE6  
                     u5281 1FF5                       u5265 1FDD                       u5185 1F83  
                     u6081 1E2F                       u3841 17E7                       u3761 178F  
                     u3681 1754                       u3593 16AB                       u4801 1A32  
                     u4641 088E                       u4625 1179                       u4561 1151  
                     u4545 1135                       u4465 0BFD                       u4385 0A52  
                     u5601 05B5                       u5521 04AF                       u5505 0472  
                     u5441 02CF                       u5361 0134                       u6137 1010  
                     u3930 0CFE                       u6090 1EA3                       u3850 17ED  
                     u3770 1797                       u3690 175A                       u4810 1D68  
                     u4730 091F                       u4650 08A3                       u4570 1156  
                     u4490 198C                       u5610 05D1                       u5530 04CB  
                     u5450 0326                       u5370 0164                       u5290 19F5  
                     u3931 0CFD                       u6091 1EA2                       u6147 1B6F  
                     u3851 17EC                       u3771 1796                       u3691 1759  
                     u4811 1D67                       u4731 091E                       u4651 08A2  
                     u4571 1155                       u4555 1145                       u4491 198B  
                     u4475 0C39                       u4395 0A8E                       u5611 05D0  
                     u5531 04CA                       u5515 04A1                       u5451 0325  
                     u5371 0163                       u5291 19F4                       u3940 0D03  
                     u4900 1BFA                       u3860 17FE                       u3780 179D  
                     u4740 0926                       u4580 115D                       u5700 075C  
                     u5540 04DD                       u5460 0341                       u5380 0168  
                     u3941 0D02                       u6157 1B7E                       u4901 1BF9  
                     u3861 17FD                       u3781 179C                       u4741 0925  
                     u4725 090F                       u4581 115C                       u4485 0C75  
                     u5701 075B                       u5605 05B2                       u5541 04DC  
                     u5461 0340                       u5445 02CC                       u5381 0167  
                     u3870 0CB0                       u4910 1EB8                       u3790 17AF  
                     u4830 1D7C                       u4670 08E4                       u5710 0768  
                     u5550 04FF                       u5470 0368                       u5390 0197  
                     u3951 0D54                       u3871 0CAF                       u6167 1B8D  
                     u4911 1EB7                       u3791 17AE                       u4831 1D7B  
                     u4671 08E3                       u5711 0767                       u5551 04FE  
                     u5471 0367                       u5455 0322                       u5391 0196  
                     u5800 11A7                       u3952 0D5B                       u3880 0CB6  
                     u4920 1ED4                       u4760 0937                       u5720 0772  
                     u5640 06FD                       u5560 050D                       u5480 0377  
                     u5801 11A6                       u3961 0D70                       u3953 0D62  
                     u3881 0CB5                       u6177 19A7                       u4905 1BF6  
                     u4921 1ED3                       u4825 1D6D                       u4761 0936  
                     u4665 08CB                       u5721 0771                       u5641 06FC  
                     u5625 0658                       u5561 050C                       u5481 0376  
                     u5810 11AC                       u3962 0D77                       u3890 0CBB  
                     u4930 1EE0                       u4850 1D97                       u4770 1A19  
                     u4690 0902                       u5730 0780                       u5650 0715  
                     u5490 0392                       u5811 11AB                       u3971 0D9C  
                     u3963 0D7E                       u3891 0CBA                       u6187 1E3D  
                     u4931 1EDF                       u4851 1D96                       u4771 1A18  
                     u4755 0929                       u4691 0901                       u4675 08E0  
                     u4595 115F                       u5731 077F                       u5651 0714  
                     u5635 06BE                       u5555 04FB                       u5491 0391  
                     u5900 1262                       u5820 11CE                       u3972 0DA3  
                     u5740 0798                       u5660 071C                       u5580 0586  
                     u5901 1261                       u5821 11CD                       u3981 0DB8  
                     u3973 0DAA                       u6197 1DCA                       u4941 1EEF  
                     u4845 1D7E                       u4685 08F5                       u5741 0797  
                     u5661 071B                       u5581 0585                       u5485 0373  
                     u5830 11D4                       u3982 0DBF                       u4950 1F08  
                     u4942 1EF0                       u4870 1DB5                       u5750 07AE  
                     u5670 0724                       u5590 05A7                       u5831 11D3  
                     u3983 0DC6                       u4951 1F07                       u4943 1EF5  
                     u4871 1DB4                       u4855 1D93                       u5751 07AD  
                     u5735 077C                       u5671 0723                       u5591 05A6  
                     u5575 051C                       u5920 127E                       u5840 11D9  
                     u4880 1BC4                       u4944 1EF6                       u5760 07C5  
                     u5680 0735                       u5921 127D                       u5841 11D8  
                     u4881 1BC3                       u4961 1F17                       u4945 1EFB  
                     u4865 1DA7                       u4785 1A20                       u5761 07C4  
                     u5745 0794                       u5681 0734                       u5930 1297  
                     u5850 11F4                       u4890 1BE0                       u4970 1F42  
                     u4962 1F18                       u4946 1EFC                       u5770 07D1  
                     u5690 074B                       u5931 1296                       u5915 1265  
                     u5851 11F3                       u3995 0DC8                       u4891 1BDF  
                     u4971 1F41                       u4963 1F1D                       u4795 1A27  
                     u5771 07D0                       u5691 074A                       u5595 05A3  
                     u5940 129F                       u5860 1212                       u4964 1F1E  
                     u4980 1981                       u5780 07EB                       u5941 129E  
                     u5925 127A                       u5861 1211                       u4965 1F23  
                     u4981 1980                       u5781 07EA                       u5685 0731  
                     u5870 124C                       u5790 11A1                       u4966 1F24  
                     u4990 0813                       u5871 124B                       u5791 11A0  
                     u4975 1F3E                       u4991 0812                       u5695 0747  
                     u5960 12AE                       u5961 12AD                       u5955 12A3  
                     u5980 12C2                       u5981 12C1                       u5885 124E  
                     u5990 12C7                       u5991 12C6                       u5975 12B1  
                     u5895 1257          ?_Lcd_Write_String 0070                       _main 1AB1  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0073  
          ___fldiv@new_exp 0050               _sprintf$1003 00AA            __end_of_Lcd_Cmd 19B0  
            ___fltol@sign1 005A            __end_of___fladd 1800                      ?_main 0070  
          __end_of___fldiv 136D            __end_of___awdiv 0075            __end_of___flneg 1984  
          __end_of___awmod 1CFC            __end_of___flmul 1000            __end_of___flsub 19EF  
          __end_of___fltol 0882                      _ANSEL 0188            __end_of___lldiv 1DBE  
          ___awdiv@divisor 0077            __end_of___llmod 1CA3            __end_of___lwdiv 1B65  
          __end_of___lwmod 1B21            ___awdiv@counter 0020                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089           ADC_Config@AN_num 0072                      _data1 00DF  
                    _data2 00D7            __end_of_dpowers 1896            __end_of_initOsc 1D58  
                    _scale 0940            __end_of_isdigit 1996                      _setup 19B0  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 07F0           __end_of_Lcd_Init 1BB0      __size_of_ADC_channel1 0073  
    __size_of_ADC_channel2 0073           __end_of_Lcd_Port 0806            __initialization 07F0  
             __end_of_main 1AE7                     ??_main 00C5       __size_of__tdiv_to_l_ 00BD  
                   _ADCON1 009F           ___llmod@dividend 0074                     ?_scale 003E  
                   _ADRESH 001E                     _ADRESL 009E                initOsc@IRCF 0072  
         ___awdiv@dividend 0079                     ?_setup 0070                     _ANSELH 0189  
             ??_ADC_Config 0070               _ADC_channel1 1DBE               _ADC_channel2 1E31  
                ??_Lcd_Cmd 0071                     _S1_val 00CB                     _S2_val 00C7  
  __size_of_Lcd_Write_Char 0016           __end_of___xxtofl 2000           __end_of__powers_ 183A  
                   ___flge 1EA4                     ___fleq 1BB0                  ??___fladd 005A  
                   ___wmul 1A13                  ??___fldiv 0046                  ??___awdiv 007B  
                ??___flneg 0074                  ??___awmod 0074                  ??___flmul 002C  
                ??___flsub 007E                  ??___fltol 0055                  ??___lldiv 0078  
                ??___llmod 0078                  ??___lwdiv 007A                  ??___lwmod 0074  
                   _fround 136D           ___awdiv@quotient 0022            ___awmod@divisor 0070  
          ___awmod@counter 0075         __end_of_ADC_Config 10D3            _float_to_string 1A84  
                ??_initOsc 0070                  ??_isdigit 0070         __size_of__Umul8_16 0027  
                ??_sprintf 00A5            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074  
               ___flge@ff1 0070                 ___flge@ff2 0074               ___xxtofl@arg 007A  
             ___xxtofl@exp 0079               ___xxtofl@val 0070                 ___fleq@ff1 0070  
               ___fleq@ff2 0074    __end_of__initialization 07FC                 ___flneg@f1 0070  
               ___fltol@f1 0051             __pcstackCOMMON 0070              __end_of_scale 0C9F  
            __end_of_setup 19CB             _Lcd_Set_Cursor 19EF                 __div_to_l_ 0882  
             ?_titulos_LCD 0070                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 0025            __div_to_l_@cntr 0024                    ??_scale 0042  
          __div_to_l_@quot 0020               sprintf@width 00B5                    ??_setup 0073  
               __pbssBANK0 006F                 __pbssBANK1 00C7              __div_to_l_@f1 0070  
            __div_to_l_@f2 0074          __end_of__Umul8_16 1A84                 __pmaintext 1AB1  
                  ?___flge 0070                    ?___fleq 0070                    ?___wmul 0070  
  __end_of_float_to_string 1AB1                    ?_fround 003E  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 1A13                  ?___xxtofl 0070                    _S3_cont 006F  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 1800  
           _Lcd_Write_Char 1001                    _Lcd_Cmd 1996          __end_of__npowers_ 186E  
               _scale$1002 004C            __size_of___flge 00A2            __size_of___fleq 004E  
                  ___fladd 1578                    ___fldiv 1190                    ___awdiv 000C  
                  ___flneg 1979                    ___awmod 1CA3                    ___flmul 0C9F  
                  ___flsub 19CB                    ___fltol 0806                    ___lldiv 1D58  
          __size_of___wmul 0025                    ___llmod 1C4F                    ___lwdiv 1B21  
                  ___lwmod 1AE7            __size_of_fround 020B            ?_Lcd_Set_Cursor 0074  
                  __ptext1 1BFE                    __ptext2 1A38                    __ptext3 1001  
                  __ptext4 19EF                    __ptext5 19B0                    __ptext6 1CFC  
                  __ptext7 1A84                    __ptext8 0075                    __ptext9 0940  
              ?__div_to_l_ 0070                    _dpowers 186E                    _initOsc 1CFC  
                  _isdigit 1984                 ??___xxtofl 0074           ___awmod@dividend 0072  
                  _sprintf 0075                    clrloop0 0005     __end_of_Lcd_Write_Char 1017  
     end_of_initialization 07FC            ___lldiv@divisor 0070            ___lldiv@counter 007D  
                Lcd_Port@a 0070             __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074  
         ?_float_to_string 0070              ??__tdiv_to_l_ 0078                  _PORTEbits 0009  
              ___fladd@grs 0065              ___xxtofl@sign 0078                ___fldiv@grs 0052  
              ___fldiv@rem 004B       __size_of_titulos_LCD 0051            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0075          Lcd_Write_String@i 0073                ___flmul@grs 0032  
      __size_of__div_to_l_ 00BE             __end_of___flge 1F46             __end_of___fleq 1BFE  
           __end_of___wmul 1A38           _Lcd_Write_String 1A38             __end_of_fround 1578  
      start_initialization 07F0        __end_of__tdiv_to_l_ 1190          __size_of_Lcd_Init 004B  
        __size_of_Lcd_Port 0006            ___llmod@divisor 0070            ___llmod@counter 0079  
                 ??___flge 0078                   ??___fleq 0078                   ??___wmul 0074  
                __Umul8_16 1A5D            Lcd_Write_Char@a 0072                   ??_fround 0042  
            sprintf@tmpval 00B7                  ___fladd@a 0056                  ___fladd@b 0052  
               fround@prec 0051                  ___fldiv@a 003E                  ___fldiv@b 0042  
                ___flmul@a 0028                  ___flmul@b 0024                  ___flsub@a 0066  
                ___flsub@b 006A                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of___xxtofl 00BA                   ?_Lcd_Cmd 0070  
              sprintf@flag 00B3                sprintf@eexp 00BB                sprintf@fval 00BD  
              sprintf@prec 00C2           ___lwdiv@dividend 0078           ??_Lcd_Set_Cursor 0075  
                 ?___fladd 0052                   ?___fldiv 003E                   ?___awdiv 0077  
                 ?___flneg 0070                   ?___awmod 0070                   ?___flmul 0024  
                 ?___flsub 0066                   ?___fltol 0051                   ?___lldiv 0070  
                 ?___llmod 0070                  __npowers_ 183A                 ?__Umul8_16 0070  
                 ?___lwdiv 0076                   ?___lwmod 0070                  __pstrings 1800  
              __tdiv_to_l_ 10D3               ??__div_to_l_ 0078                   ?_initOsc 0070  
                 ?_isdigit 0070           ___lwdiv@quotient 007B                   ?_sprintf 00A0  
           __size_of_scale 035F             __size_of_setup 001B              ?_ADC_channel1 0070  
            ?_ADC_channel2 0070             ___wmul@product 0074                  clear_ram0 0004  
                 Lcd_Cmd@a 0073         __end_of__div_to_l_ 0940                   _VAL_SWAP 00D3  
               _ADCON0bits 001F                __stringbase 1805          ___wmul@multiplier 0070  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 1B65                   _Lcd_Port 0800  
           ??_ADC_channel1 0058             ??_ADC_channel2 0058                 _ADC_Config 1017  
 __end_of_Lcd_Write_String 1A5D           __size_of_Lcd_Cmd 001A                ??__Umul8_16 0072  
         __size_of___fladd 0288           __size_of___fldiv 01DD           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 0059           __size_of___flmul 0361  
         __size_of___flsub 0024           __size_of___fltol 007C           __size_of___lldiv 0066  
         __size_of___llmod 0054           __size_of___lwdiv 0044           __size_of___lwmod 003A  
              _fround$1000 004D                _fround$1001 0049         __end_of__stringtab 1806  
              _isdigit$811 0070                 sprintf@val 00AF                   ___xxtofl 1F46  
            ??_titulos_LCD 0078           __size_of_initOsc 005C   __size_of_float_to_string 002D  
         __size_of_isdigit 0012            ___lwdiv@divisor 0076            ___lwdiv@counter 007D  
                 __ptext10 1CA3                   __ptext11 000C                   __ptext20 1D58  
                 __ptext12 1984                   __ptext21 0806                   __ptext13 136D  
                 __ptext30 1E31                   __ptext22 19CB                   __ptext14 1AE7  
                 __ptext31 1DBE                   __ptext23 1578                   __ptext15 1B21  
                 __ptext32 1F46                   __ptext24 1979                   __ptext16 10D3  
                 __ptext33 0C9F                   __ptext25 1EA4                   __ptext17 0882  
                 __ptext34 1A5D                   __ptext26 1BB0                   __ptext18 1A13  
                 __ptext35 1190                   __ptext27 1B65                   __ptext19 1C4F  
                 __ptext36 1017                   __ptext28 1996                   __ptext29 0800  
                 __powers_ 1806           __size_of_sprintf 077B              __size_of_main 0036  
              _VAL_NIBBLE1 00D1                _VAL_NIBBLE2 00CF                   isdigit@c 0071  
                 scale@scl 0050                  sprintf@ap 00AE           __tdiv_to_l_@exp1 0025  
         __tdiv_to_l_@cntr 0024                  sprintf@sp 00C1                ?_ADC_Config 0070  
      __end_of_titulos_LCD 1C4F           __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072  
         ___lldiv@dividend 0074                  stringcode 1800                 _OSCCONbits 008F  
     __end_of_ADC_channel1 1E31       __end_of_ADC_channel2 1EA4         Lcd_Set_Cursor@temp 0077  
             ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070                   sprintf@c 00C4  
                 sprintf@f 00A0           ___lldiv@quotient 0079            ___lwmod@divisor 0070  
          ___lwmod@counter 0075                   stringdir 1800                   stringtab 1800  
            ___fladd@signs 0062          ??_float_to_string 006E               ___fladd@aexp 0063  
             ___fladd@bexp 0064       __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
