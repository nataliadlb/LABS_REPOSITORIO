

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 14:48:11 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0094                     	;# 
   346  0095                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009A                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  0105                     	;# 
   358  0107                     	;# 
   359  0108                     	;# 
   360  0109                     	;# 
   361  010C                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  010F                     	;# 
   366  0185                     	;# 
   367  0187                     	;# 
   368  0188                     	;# 
   369  0189                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  000E                     	;# 
   388  000F                     	;# 
   389  0010                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0013                     	;# 
   393  0014                     	;# 
   394  0015                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  001D                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  0081                     	;# 
   408  0085                     	;# 
   409  0086                     	;# 
   410  0087                     	;# 
   411  0088                     	;# 
   412  0089                     	;# 
   413  008C                     	;# 
   414  008D                     	;# 
   415  008E                     	;# 
   416  008F                     	;# 
   417  0090                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0094                     	;# 
   424  0095                     	;# 
   425  0096                     	;# 
   426  0097                     	;# 
   427  0098                     	;# 
   428  0099                     	;# 
   429  009A                     	;# 
   430  009B                     	;# 
   431  009C                     	;# 
   432  009D                     	;# 
   433  009E                     	;# 
   434  009F                     	;# 
   435  0105                     	;# 
   436  0107                     	;# 
   437  0108                     	;# 
   438  0109                     	;# 
   439  010C                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  010F                     	;# 
   444  0185                     	;# 
   445  0187                     	;# 
   446  0188                     	;# 
   447  0189                     	;# 
   448  018C                     	;# 
   449  018D                     	;# 
   450  0000                     	;# 
   451  0001                     	;# 
   452  0002                     	;# 
   453  0003                     	;# 
   454  0004                     	;# 
   455  0005                     	;# 
   456  0006                     	;# 
   457  0007                     	;# 
   458  0008                     	;# 
   459  0009                     	;# 
   460  000A                     	;# 
   461  000B                     	;# 
   462  000C                     	;# 
   463  000D                     	;# 
   464  000E                     	;# 
   465  000E                     	;# 
   466  000F                     	;# 
   467  0010                     	;# 
   468  0011                     	;# 
   469  0012                     	;# 
   470  0013                     	;# 
   471  0014                     	;# 
   472  0015                     	;# 
   473  0015                     	;# 
   474  0016                     	;# 
   475  0017                     	;# 
   476  0018                     	;# 
   477  0019                     	;# 
   478  001A                     	;# 
   479  001B                     	;# 
   480  001B                     	;# 
   481  001C                     	;# 
   482  001D                     	;# 
   483  001E                     	;# 
   484  001F                     	;# 
   485  0081                     	;# 
   486  0085                     	;# 
   487  0086                     	;# 
   488  0087                     	;# 
   489  0088                     	;# 
   490  0089                     	;# 
   491  008C                     	;# 
   492  008D                     	;# 
   493  008E                     	;# 
   494  008F                     	;# 
   495  0090                     	;# 
   496  0091                     	;# 
   497  0092                     	;# 
   498  0093                     	;# 
   499  0093                     	;# 
   500  0093                     	;# 
   501  0094                     	;# 
   502  0095                     	;# 
   503  0096                     	;# 
   504  0097                     	;# 
   505  0098                     	;# 
   506  0099                     	;# 
   507  009A                     	;# 
   508  009B                     	;# 
   509  009C                     	;# 
   510  009D                     	;# 
   511  009E                     	;# 
   512  009F                     	;# 
   513  0105                     	;# 
   514  0107                     	;# 
   515  0108                     	;# 
   516  0109                     	;# 
   517  010C                     	;# 
   518  010C                     	;# 
   519  010D                     	;# 
   520  010E                     	;# 
   521  010F                     	;# 
   522  0185                     	;# 
   523  0187                     	;# 
   524  0188                     	;# 
   525  0189                     	;# 
   526  018C                     	;# 
   527  018D                     	;# 
   528  000B                     _INTCONbits	set	11
   529  0018                     _RCSTAbits	set	24
   530  0009                     _PORTEbits	set	9
   531  0009                     _PORTE	set	9
   532  0008                     _PORTD	set	8
   533  0007                     _PORTC	set	7
   534  0005                     _PORTA	set	5
   535  0019                     _TXREG	set	25
   536  001E                     _ADRESH	set	30
   537  001F                     _ADCON0bits	set	31
   538  001A                     _RCREG	set	26
   539  000C                     _PIR1bits	set	12
   540  0006                     _PORTB	set	6
   541  008C                     _PIE1bits	set	140
   542  0099                     _SPBRG	set	153
   543  009A                     _SPBRGH	set	154
   544  0098                     _TXSTAbits	set	152
   545  009F                     _ADCON1	set	159
   546  009E                     _ADRESL	set	158
   547  008F                     _OSCCONbits	set	143
   548  0089                     _TRISE	set	137
   549  0088                     _TRISD	set	136
   550  0087                     _TRISCbits	set	135
   551  0086                     _TRISB	set	134
   552  0085                     _TRISA	set	133
   553  0189                     _ANSELH	set	393
   554  0188                     _ANSEL	set	392
   555                           
   556                           	psect	strings
   557  0003                     __pstrings:
   558  0003                     stringtab:
   559  0003                     __stringtab:
   560  0003                     stringcode:	
   561                           ;	String table - string pointers are 1 byte each
   562                           
   563  0003                     stringdir:
   564  0003  3000               	movlw	high stringdir
   565  0004  008A               	movwf	10
   566  0005  0804               	movf	4,w
   567  0006  0A84               	incf	4,f
   568  0007  0782               	addwf	2,f
   569  0008                     __stringbase:
   570  0008  3400               	retlw	0
   571  0009                     __end_of__stringtab:
   572  0009                     STR_1:
   573  0009  3453               	retlw	83	;'S'
   574  000A  3431               	retlw	49	;'1'
   575  000B  343A               	retlw	58	;':'
   576  000C  3420               	retlw	32	;' '
   577  000D  3420               	retlw	32	;' '
   578  000E  3420               	retlw	32	;' '
   579  000F  3453               	retlw	83	;'S'
   580  0010  3432               	retlw	50	;'2'
   581  0011  343A               	retlw	58	;':'
   582  0012  3420               	retlw	32	;' '
   583  0013  3420               	retlw	32	;' '
   584  0014  3453               	retlw	83	;'S'
   585  0015  3433               	retlw	51	;'3'
   586  0016  343A               	retlw	58	;':'
   587  0017  3400               	retlw	0
   588  0018                     STR_2:
   589  0018  3425               	retlw	37	;'%'
   590  0019  342E               	retlw	46	;'.'
   591  001A  3433               	retlw	51	;'3'
   592  001B  3469               	retlw	105	;'i'
   593  001C  3456               	retlw	86	;'V'
   594  001D  3400               	retlw	0
   595  0018                     
   596                           	psect	cinit
   597  07EF                     start_initialization:	
   598                           ; #config settings
   599                           
   600  07EF                     __initialization:
   601                           
   602                           ; Clear objects allocated to COMMON
   603  07EF  01FA               	clrf	__pbssCOMMON& (0+127)
   604  07F0  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   605  07F1  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   606  07F2  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   607                           
   608                           ; Clear objects allocated to BANK0
   609  07F3  1383               	bcf	3,7	;select IRP bank0
   610  07F4  3020               	movlw	low __pbssBANK0
   611  07F5  0084               	movwf	4
   612  07F6  303C               	movlw	low (__pbssBANK0+28)
   613  07F7  120A  118A  2641  120A  118A  	fcall	clear_ram0
   614  07FC                     end_of_initialization:	
   615                           ;End of C runtime variable initialization code
   616                           
   617  07FC                     __end_of__initialization:
   618  07FC  0183               	clrf	3
   619  07FD  120A  118A  2EFF   	ljmp	_main	;jump to C main() function
   620                           
   621                           	psect	bssCOMMON
   622  007A                     __pbssCOMMON:
   623  007A                     _data_recive:
   624  007A                     	ds	1
   625  007B                     _eusart_toggle:
   626  007B                     	ds	1
   627  007C                     _S2_val:
   628  007C                     	ds	1
   629  007D                     _S1_val:
   630  007D                     	ds	1
   631                           
   632                           	psect	bssBANK0
   633  0020                     __pbssBANK0:
   634  0020                     _VAL_NIBBLE2:
   635  0020                     	ds	2
   636  0022                     _VAL_NIBBLE1:
   637  0022                     	ds	2
   638  0024                     _VAL_SWAP:
   639  0024                     	ds	2
   640  0026                     _VAL:
   641  0026                     	ds	2
   642  0028                     _cont:
   643  0028                     	ds	1
   644  0029                     _cont_usart:
   645  0029                     	ds	1
   646  002A                     _ADC_toggle:
   647  002A                     	ds	1
   648  002B                     _S3_cont:
   649  002B                     	ds	1
   650  002C                     _data2:
   651  002C                     	ds	8
   652  0034                     _data1:
   653  0034                     	ds	8
   654                           
   655                           	psect	clrtext
   656  0641                     clear_ram0:	
   657                           ;	Called with FSR containing the base address, and
   658                           ;	W with the last address+1
   659                           
   660  0641  0064               	clrwdt	;clear the watchdog before getting into this loop
   661  0642                     clrloop0:
   662  0642  0180               	clrf	0	;clear RAM location pointed to by FSR
   663  0643  0A84               	incf	4,f	;increment pointer
   664  0644  0604               	xorwf	4,w	;XOR with final address
   665  0645  1903               	btfsc	3,2	;have we reached the end yet?
   666  0646  3400               	retlw	0	;all done for this memory range, return
   667  0647  0604               	xorwf	4,w	;XOR again to restore value
   668  0648  2E42               	goto	clrloop0	;do the next byte
   669                           
   670                           	psect	cstackCOMMON
   671  0070                     __pcstackCOMMON:
   672  0070                     ?_setup:
   673  0070                     ?_USART_Init_BaudRate:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ??_USART_Init_BaudRate:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_USART_Init:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ??_USART_Init:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_USART_INTERRUPT:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ??_USART_INTERRUPT:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_Lcd_Init:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_titulos_LCD:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_Lcd_Write_String:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_Lcd_Write_Char:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_initOsc:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ??_initOsc:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_Lcd_Port:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ??_Lcd_Port:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_Lcd_Cmd:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_main:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     Lcd_Port@a:	
   722                           ; 1 bytes @ 0x0
   723                           
   724                           
   725                           ; 1 bytes @ 0x0
   726  0070                     	ds	1
   727  0071                     ??_Lcd_Write_Char:
   728  0071                     ??_Lcd_Cmd:	
   729                           ; 1 bytes @ 0x1
   730                           
   731                           
   732                           ; 1 bytes @ 0x1
   733  0071                     	ds	1
   734  0072                     initOsc@IRCF:
   735  0072                     Lcd_Write_Char@a:	
   736                           ; 1 bytes @ 0x2
   737                           
   738                           
   739                           ; 1 bytes @ 0x2
   740  0072                     	ds	1
   741  0073                     ??_setup:
   742  0073                     ??_Lcd_Write_String:	
   743                           ; 1 bytes @ 0x3
   744                           
   745  0073                     Lcd_Cmd@a:	
   746                           ; 1 bytes @ 0x3
   747                           
   748  0073                     Lcd_Write_String@i:	
   749                           ; 1 bytes @ 0x3
   750                           
   751                           
   752                           ; 2 bytes @ 0x3
   753  0073                     	ds	1
   754  0074                     ??_Lcd_Init:
   755  0074                     ?_Lcd_Set_Cursor:	
   756                           ; 1 bytes @ 0x4
   757                           
   758  0074                     Lcd_Set_Cursor@b:	
   759                           ; 1 bytes @ 0x4
   760                           
   761                           
   762                           ; 1 bytes @ 0x4
   763  0074                     	ds	1
   764  0075                     ??_Lcd_Set_Cursor:
   765  0075                     Lcd_Write_String@a:	
   766                           ; 1 bytes @ 0x5
   767                           
   768                           
   769                           ; 1 bytes @ 0x5
   770  0075                     	ds	1
   771  0076                     Lcd_Set_Cursor@a:
   772                           
   773                           ; 1 bytes @ 0x6
   774  0076                     	ds	1
   775  0077                     Lcd_Set_Cursor@temp:
   776                           
   777                           ; 1 bytes @ 0x7
   778  0077                     	ds	1
   779  0078                     ??_titulos_LCD:
   780                           
   781                           ; 1 bytes @ 0x8
   782  0078                     	ds	1
   783  0079                     ??_main:
   784                           
   785                           ; 1 bytes @ 0x9
   786  0079                     	ds	1
   787                           
   788                           	psect	maintext
   789  06FF                     __pmaintext:	
   790 ;;
   791 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   792 ;;
   793 ;; *************** function _main *****************
   794 ;; Defined at:
   795 ;;		line 121 in file "pseudocodigo_lab3.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : B00/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   809 ;;      Params:         0       0       0       0       0
   810 ;;      Locals:         0       0       0       0       0
   811 ;;      Temps:          1       0       0       0       0
   812 ;;      Totals:         1       0       0       0       0
   813 ;;Total ram usage:        1 bytes
   814 ;; Hardware stack levels required when called:    4
   815 ;; This function calls:
   816 ;;		_Lcd_Init
   817 ;;		_USART_INTERRUPT
   818 ;;		_USART_Init
   819 ;;		_USART_Init_BaudRate
   820 ;;		_setup
   821 ;;		_titulos_LCD
   822 ;; This function is called by:
   823 ;;		Startup code after reset
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _main
   829  06FF                     _main:
   830  06FF                     l1212:	
   831                           ;incstack = 0
   832                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   833                           
   834                           
   835                           ;pseudocodigo_lab3.c: 122:     setup();
   836  06FF  120A  118A  269A  120A  118A  	fcall	_setup
   837  0704                     l1214:
   838                           
   839                           ;pseudocodigo_lab3.c: 123:     USART_Init_BaudRate();
   840  0704  120A  118A  263B  120A  118A  	fcall	_USART_Init_BaudRate
   841  0709                     l1216:
   842                           
   843                           ;pseudocodigo_lab3.c: 124:     USART_Init();
   844  0709  120A  118A  2649  120A  118A  	fcall	_USART_Init
   845  070E                     l1218:
   846                           
   847                           ;pseudocodigo_lab3.c: 125:     USART_INTERRUPT();
   848  070E  120A  118A  2635  120A  118A  	fcall	_USART_INTERRUPT
   849  0713                     l1220:
   850                           
   851                           ;pseudocodigo_lab3.c: 126:     Lcd_Init();
   852  0713  120A  118A  2748  120A  118A  	fcall	_Lcd_Init
   853                           
   854                           ;pseudocodigo_lab3.c: 127:     titulos_LCD();
   855  0718  120A  118A  2659  120A  118A  	fcall	_titulos_LCD
   856  071D                     l1222:
   857                           
   858                           ;pseudocodigo_lab3.c: 128:     cont = 8;
   859  071D  3008               	movlw	8
   860  071E  00F9               	movwf	??_main
   861  071F  0879               	movf	??_main,w
   862  0720  1283               	bcf	3,5	;RP0=0, select bank0
   863  0721  1303               	bcf	3,6	;RP1=0, select bank0
   864  0722  00A8               	movwf	_cont
   865  0723                     l1224:
   866                           
   867                           ;pseudocodigo_lab3.c: 134:         PORTB = cont;
   868  0723  0828               	movf	_cont,w
   869  0724  0086               	movwf	6	;volatile
   870  0725                     l1226:
   871                           
   872                           ;pseudocodigo_lab3.c: 143:         if (PIR1bits.RCIF == 0){
   873  0725  1A8C               	btfsc	12,5	;volatile
   874  0726  2F28               	goto	u161
   875  0727  2F29               	goto	u160
   876  0728                     u161:
   877  0728  2F2D               	goto	l1230
   878  0729                     u160:
   879  0729                     l1228:
   880                           
   881                           ;pseudocodigo_lab3.c: 144:             data_recive = RCREG;
   882  0729  081A               	movf	26,w	;volatile
   883  072A  00F9               	movwf	??_main
   884  072B  0879               	movf	??_main,w
   885  072C  00FA               	movwf	_data_recive
   886  072D                     l1230:
   887                           
   888                           ;pseudocodigo_lab3.c: 148:         if (data_recive == '+'){
   889  072D  302B               	movlw	43
   890  072E  067A               	xorwf	_data_recive,w
   891  072F  1D03               	btfss	3,2
   892  0730  2F32               	goto	u171
   893  0731  2F33               	goto	u170
   894  0732                     u171:
   895  0732  2F39               	goto	l1236
   896  0733                     u170:
   897  0733                     l1232:
   898                           
   899                           ;pseudocodigo_lab3.c: 149:             cont++;
   900  0733  3001               	movlw	1
   901  0734  00F9               	movwf	??_main
   902  0735  0879               	movf	??_main,w
   903  0736  07A8               	addwf	_cont,f
   904  0737                     l1234:
   905                           
   906                           ;pseudocodigo_lab3.c: 150:             PORTB = 15;
   907  0737  300F               	movlw	15
   908  0738  0086               	movwf	6	;volatile
   909  0739                     l1236:
   910                           
   911                           ;pseudocodigo_lab3.c: 152:         if(data_recive == '-'){
   912  0739  302D               	movlw	45
   913  073A  067A               	xorwf	_data_recive,w
   914  073B  1D03               	btfss	3,2
   915  073C  2F3E               	goto	u181
   916  073D  2F3F               	goto	u180
   917  073E                     u181:
   918  073E  2F43               	goto	l1242
   919  073F                     u180:
   920  073F                     l1238:
   921                           
   922                           ;pseudocodigo_lab3.c: 153:             cont--;
   923  073F  3001               	movlw	1
   924  0740  02A8               	subwf	_cont,f
   925  0741                     l1240:
   926                           
   927                           ;pseudocodigo_lab3.c: 154:             PORTB = 3;
   928  0741  3003               	movlw	3
   929  0742  0086               	movwf	6	;volatile
   930  0743                     l1242:	
   931                           ;pseudocodigo_lab3.c: 155:         }
   932                           
   933                           
   934                           ;pseudocodigo_lab3.c: 159:        data_recive = 0;
   935  0743  01FA               	clrf	_data_recive
   936  0744  2F23               	goto	l1224
   937  0745  120A  118A  2800   	ljmp	start
   938  0748                     __end_of_main:
   939                           
   940                           	psect	text1
   941  0659                     __ptext1:	
   942 ;; *************** function _titulos_LCD *****************
   943 ;; Defined at:
   944 ;;		line 167 in file "pseudocodigo_lab3.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   958 ;;      Params:         0       0       0       0       0
   959 ;;      Locals:         0       0       0       0       0
   960 ;;      Temps:          1       0       0       0       0
   961 ;;      Totals:         1       0       0       0       0
   962 ;;Total ram usage:        1 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    3
   965 ;; This function calls:
   966 ;;		_Lcd_Set_Cursor
   967 ;;		_Lcd_Write_String
   968 ;; This function is called by:
   969 ;;		_main
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           
   974                           ;psect for function _titulos_LCD
   975  0659                     _titulos_LCD:
   976  0659                     l1208:	
   977                           ;incstack = 0
   978                           ; Regs used in _titulos_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   979                           
   980                           
   981                           ;pseudocodigo_lab3.c: 168:         Lcd_Set_Cursor(1,2);
   982  0659  3002               	movlw	2
   983  065A  00F8               	movwf	??_titulos_LCD
   984  065B  0878               	movf	??_titulos_LCD,w
   985  065C  00F4               	movwf	Lcd_Set_Cursor@b
   986  065D  3001               	movlw	1
   987  065E  120A  118A  26B6  120A  118A  	fcall	_Lcd_Set_Cursor
   988  0663                     l1210:
   989                           
   990                           ;pseudocodigo_lab3.c: 169:         Lcd_Write_String("S1:   S2:  S3:");
   991  0663  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   992  0664  120A  118A  26DA  120A  118A  	fcall	_Lcd_Write_String
   993  0669                     l95:
   994  0669  0008               	return
   995  066A                     __end_of_titulos_LCD:
   996                           
   997                           	psect	text2
   998  06DA                     __ptext2:	
   999 ;; *************** function _Lcd_Write_String *****************
  1000 ;; Defined at:
  1001 ;;		line 70 in file "LCD.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  a               1    wreg     PTR unsigned char 
  1004 ;;		 -> STR_1(15), 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  a               1    5[COMMON] PTR unsigned char 
  1007 ;;		 -> STR_1(15), 
  1008 ;;  i               2    3[COMMON] int 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1018 ;;      Params:         0       0       0       0       0
  1019 ;;      Locals:         3       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0
  1021 ;;      Totals:         3       0       0       0       0
  1022 ;;Total ram usage:        3 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; Hardware stack levels required when called:    2
  1025 ;; This function calls:
  1026 ;;		_Lcd_Write_Char
  1027 ;; This function is called by:
  1028 ;;		_titulos_LCD
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           
  1033                           ;psect for function _Lcd_Write_String
  1034  06DA                     _Lcd_Write_String:
  1035                           
  1036                           ;incstack = 0
  1037                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1038                           ;Lcd_Write_String@a stored from wreg
  1039  06DA  00F5               	movwf	Lcd_Write_String@a
  1040  06DB                     l1142:
  1041                           
  1042                           ;LCD.c: 71:  int i;;LCD.c: 72:  for(i=0;a[i]!='\0';i++)
  1043  06DB  01F3               	clrf	Lcd_Write_String@i
  1044  06DC  01F4               	clrf	Lcd_Write_String@i+1
  1045  06DD  2EF1               	goto	l1148
  1046  06DE                     l1144:
  1047                           
  1048                           ;LCD.c: 73:     Lcd_Write_Char(a[i]);
  1049  06DE  0873               	movf	Lcd_Write_String@i,w
  1050  06DF  0775               	addwf	Lcd_Write_String@a,w
  1051  06E0  0084               	movwf	4
  1052  06E1  120A  118A  2003  120A  118A  	fcall	stringdir
  1053  06E6  120A  118A  266A  120A  118A  	fcall	_Lcd_Write_Char
  1054  06EB                     l1146:
  1055  06EB  3001               	movlw	1
  1056  06EC  07F3               	addwf	Lcd_Write_String@i,f
  1057  06ED  1803               	skipnc
  1058  06EE  0AF4               	incf	Lcd_Write_String@i+1,f
  1059  06EF  3000               	movlw	0
  1060  06F0  07F4               	addwf	Lcd_Write_String@i+1,f
  1061  06F1                     l1148:
  1062  06F1  0873               	movf	Lcd_Write_String@i,w
  1063  06F2  0775               	addwf	Lcd_Write_String@a,w
  1064  06F3  0084               	movwf	4
  1065  06F4  120A  118A  2003  120A  118A  	fcall	stringdir
  1066  06F9  3A00               	xorlw	0
  1067  06FA  1D03               	skipz
  1068  06FB  2EFD               	goto	u151
  1069  06FC  2EFE               	goto	u150
  1070  06FD                     u151:
  1071  06FD  2EDE               	goto	l1144
  1072  06FE                     u150:
  1073  06FE                     l176:
  1074  06FE  0008               	return
  1075  06FF                     __end_of_Lcd_Write_String:
  1076                           
  1077                           	psect	text3
  1078  066A                     __ptext3:	
  1079 ;; *************** function _Lcd_Write_Char *****************
  1080 ;; Defined at:
  1081 ;;		line 61 in file "LCD.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  a               1    wreg     unsigned char 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  a               1    2[COMMON] unsigned char 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0, pclath, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1095 ;;      Params:         0       0       0       0       0
  1096 ;;      Locals:         1       0       0       0       0
  1097 ;;      Temps:          1       0       0       0       0
  1098 ;;      Totals:         2       0       0       0       0
  1099 ;;Total ram usage:        2 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    1
  1102 ;; This function calls:
  1103 ;;		_Lcd_Port
  1104 ;; This function is called by:
  1105 ;;		_Lcd_Write_String
  1106 ;;		_Show_val_LCD
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _Lcd_Write_Char
  1112  066A                     _Lcd_Write_Char:
  1113                           
  1114                           ;incstack = 0
  1115                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1116                           ;Lcd_Write_Char@a stored from wreg
  1117  066A  00F2               	movwf	Lcd_Write_Char@a
  1118  066B                     l1110:
  1119                           
  1120                           ;LCD.c: 62:    PORTEbits.RE0 = 1;
  1121  066B  1283               	bcf	3,5	;RP0=0, select bank0
  1122  066C  1303               	bcf	3,6	;RP1=0, select bank0
  1123  066D  1409               	bsf	9,0	;volatile
  1124  066E                     l1112:
  1125                           
  1126                           ;LCD.c: 63:    Lcd_Port(a);
  1127  066E  0872               	movf	Lcd_Write_Char@a,w
  1128  066F  120A  118A  262F  120A  118A  	fcall	_Lcd_Port
  1129  0674                     l1114:
  1130                           
  1131                           ;LCD.c: 64:    PORTEbits.RE2 = 1;
  1132  0674  1283               	bcf	3,5	;RP0=0, select bank0
  1133  0675  1303               	bcf	3,6	;RP1=0, select bank0
  1134  0676  1509               	bsf	9,2	;volatile
  1135  0677                     l1116:
  1136                           
  1137                           ;LCD.c: 65:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1138  0677  301A               	movlw	26
  1139  0678  00F1               	movwf	??_Lcd_Write_Char
  1140  0679                     u237:
  1141  0679  0BF1               	decfsz	??_Lcd_Write_Char,f
  1142  067A  2E79               	goto	u237
  1143  067B  0000               	nop
  1144  067C                     l1118:
  1145                           
  1146                           ;LCD.c: 66:    PORTEbits.RE2 = 0;
  1147  067C  1283               	bcf	3,5	;RP0=0, select bank0
  1148  067D  1303               	bcf	3,6	;RP1=0, select bank0
  1149  067E  1109               	bcf	9,2	;volatile
  1150  067F                     l170:
  1151  067F  0008               	return
  1152  0680                     __end_of_Lcd_Write_Char:
  1153                           
  1154                           	psect	text4
  1155  06B6                     __ptext4:	
  1156 ;; *************** function _Lcd_Set_Cursor *****************
  1157 ;; Defined at:
  1158 ;;		line 48 in file "LCD.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  a               1    wreg     unsigned char 
  1161 ;;  b               1    4[COMMON] unsigned char 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  a               1    6[COMMON] unsigned char 
  1164 ;;  temp            1    7[COMMON] unsigned char 
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0, pclath, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1174 ;;      Params:         1       0       0       0       0
  1175 ;;      Locals:         2       0       0       0       0
  1176 ;;      Temps:          1       0       0       0       0
  1177 ;;      Totals:         4       0       0       0       0
  1178 ;;Total ram usage:        4 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    2
  1181 ;; This function calls:
  1182 ;;		_Lcd_Cmd
  1183 ;; This function is called by:
  1184 ;;		_titulos_LCD
  1185 ;;		_Show_val_LCD
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           
  1190                           ;psect for function _Lcd_Set_Cursor
  1191  06B6                     _Lcd_Set_Cursor:
  1192                           
  1193                           ;incstack = 0
  1194                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1195                           ;Lcd_Set_Cursor@a stored from wreg
  1196  06B6  00F6               	movwf	Lcd_Set_Cursor@a
  1197  06B7                     l1130:
  1198                           
  1199                           ;LCD.c: 49:  char temp;;LCD.c: 50:  if(a == 1){
  1200  06B7  0376               	decf	Lcd_Set_Cursor@a,w
  1201  06B8  1D03               	btfss	3,2
  1202  06B9  2EBB               	goto	u131
  1203  06BA  2EBC               	goto	u130
  1204  06BB                     u131:
  1205  06BB  2EC8               	goto	l1136
  1206  06BC                     u130:
  1207  06BC                     l1132:
  1208                           
  1209                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  1210  06BC  0874               	movf	Lcd_Set_Cursor@b,w
  1211  06BD  3E7F               	addlw	127
  1212  06BE  00F5               	movwf	??_Lcd_Set_Cursor
  1213  06BF  0875               	movf	??_Lcd_Set_Cursor,w
  1214  06C0  00F7               	movwf	Lcd_Set_Cursor@temp
  1215  06C1                     l1134:
  1216                           
  1217                           ;LCD.c: 52:         Lcd_Cmd(temp);
  1218  06C1  0877               	movf	Lcd_Set_Cursor@temp,w
  1219  06C2  120A  118A  2680  120A  118A  	fcall	_Lcd_Cmd
  1220                           
  1221                           ;LCD.c: 53:  }
  1222  06C7  2ED9               	goto	l167
  1223  06C8                     l1136:
  1224  06C8  3002               	movlw	2
  1225  06C9  0676               	xorwf	Lcd_Set_Cursor@a,w
  1226  06CA  1D03               	btfss	3,2
  1227  06CB  2ECD               	goto	u141
  1228  06CC  2ECE               	goto	u140
  1229  06CD                     u141:
  1230  06CD  2ED9               	goto	l167
  1231  06CE                     u140:
  1232  06CE                     l1138:
  1233                           
  1234                           ;LCD.c: 55:   temp = 0xC0 + b - 1;
  1235  06CE  0874               	movf	Lcd_Set_Cursor@b,w
  1236  06CF  3EBF               	addlw	191
  1237  06D0  00F5               	movwf	??_Lcd_Set_Cursor
  1238  06D1  0875               	movf	??_Lcd_Set_Cursor,w
  1239  06D2  00F7               	movwf	Lcd_Set_Cursor@temp
  1240  06D3                     l1140:
  1241                           
  1242                           ;LCD.c: 56:   Lcd_Cmd(temp);
  1243  06D3  0877               	movf	Lcd_Set_Cursor@temp,w
  1244  06D4  120A  118A  2680  120A  118A  	fcall	_Lcd_Cmd
  1245  06D9                     l167:
  1246  06D9  0008               	return
  1247  06DA                     __end_of_Lcd_Set_Cursor:
  1248                           
  1249                           	psect	text5
  1250  069A                     __ptext5:	
  1251 ;; *************** function _setup *****************
  1252 ;; Defined at:
  1253 ;;		line 249 in file "pseudocodigo_lab3.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1267 ;;      Params:         0       0       0       0       0
  1268 ;;      Locals:         0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0
  1270 ;;      Totals:         0       0       0       0       0
  1271 ;;Total ram usage:        0 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    1
  1274 ;; This function calls:
  1275 ;;		_initOsc
  1276 ;; This function is called by:
  1277 ;;		_main
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           
  1282                           ;psect for function _setup
  1283  069A                     _setup:
  1284  069A                     l1160:	
  1285                           ;incstack = 0
  1286                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1287                           
  1288                           
  1289                           ;pseudocodigo_lab3.c: 250:     initOsc(0b00000110);
  1290  069A  3006               	movlw	6
  1291  069B  120A  118A  2793  120A  118A  	fcall	_initOsc
  1292  06A0                     l1162:
  1293                           
  1294                           ;pseudocodigo_lab3.c: 251:     ANSEL = 0b00000011;
  1295  06A0  3003               	movlw	3
  1296  06A1  1683               	bsf	3,5	;RP0=1, select bank3
  1297  06A2  1703               	bsf	3,6	;RP1=1, select bank3
  1298  06A3  0088               	movwf	8	;volatile
  1299  06A4                     l1164:
  1300                           
  1301                           ;pseudocodigo_lab3.c: 252:     ANSELH = 0;
  1302  06A4  0189               	clrf	9	;volatile
  1303  06A5                     l1166:
  1304                           
  1305                           ;pseudocodigo_lab3.c: 253:     TRISA = 0b00000011;
  1306  06A5  3003               	movlw	3
  1307  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  1308  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  1309  06A8  0085               	movwf	5	;volatile
  1310  06A9                     l1168:
  1311                           
  1312                           ;pseudocodigo_lab3.c: 254:     TRISB = 0;
  1313  06A9  0186               	clrf	6	;volatile
  1314  06AA                     l1170:
  1315                           
  1316                           ;pseudocodigo_lab3.c: 255:     TRISCbits.TRISC6 = 0;
  1317  06AA  1307               	bcf	7,6	;volatile
  1318  06AB                     l1172:
  1319                           
  1320                           ;pseudocodigo_lab3.c: 256:     TRISCbits.TRISC7 = 1;
  1321  06AB  1787               	bsf	7,7	;volatile
  1322  06AC                     l1174:
  1323                           
  1324                           ;pseudocodigo_lab3.c: 257:     TRISD = 0;
  1325  06AC  0188               	clrf	8	;volatile
  1326  06AD                     l1176:
  1327                           
  1328                           ;pseudocodigo_lab3.c: 258:     TRISE = 0;
  1329  06AD  0189               	clrf	9	;volatile
  1330  06AE                     l1178:
  1331                           
  1332                           ;pseudocodigo_lab3.c: 259:     PORTA = 0;
  1333  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1334  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1335  06B0  0185               	clrf	5	;volatile
  1336  06B1                     l1180:
  1337                           
  1338                           ;pseudocodigo_lab3.c: 260:     PORTB = 0;
  1339  06B1  0186               	clrf	6	;volatile
  1340  06B2                     l1182:
  1341                           
  1342                           ;pseudocodigo_lab3.c: 261:     PORTC = 0;
  1343  06B2  0187               	clrf	7	;volatile
  1344  06B3                     l1184:
  1345                           
  1346                           ;pseudocodigo_lab3.c: 262:     PORTD = 0;
  1347  06B3  0188               	clrf	8	;volatile
  1348  06B4                     l1186:
  1349                           
  1350                           ;pseudocodigo_lab3.c: 263:     PORTE = 0;
  1351  06B4  0189               	clrf	9	;volatile
  1352  06B5                     l123:
  1353  06B5  0008               	return
  1354  06B6                     __end_of_setup:
  1355                           
  1356                           	psect	text6
  1357  0793                     __ptext6:	
  1358 ;; *************** function _initOsc *****************
  1359 ;; Defined at:
  1360 ;;		line 3 in file "Oscilador.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  IRCF            1    wreg     unsigned char 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  IRCF            1    2[COMMON] unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         0       0       0       0       0
  1375 ;;      Locals:         1       0       0       0       0
  1376 ;;      Temps:          2       0       0       0       0
  1377 ;;      Totals:         3       0       0       0       0
  1378 ;;Total ram usage:        3 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_setup
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           
  1388                           ;psect for function _initOsc
  1389  0793                     _initOsc:
  1390                           
  1391                           ;incstack = 0
  1392                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1393                           ;initOsc@IRCF stored from wreg
  1394  0793  00F2               	movwf	initOsc@IRCF
  1395  0794                     l1150:
  1396                           
  1397                           ;Oscilador.c: 5:     switch(IRCF){
  1398  0794  2FCB               	goto	l1154
  1399  0795                     l129:	
  1400                           ;Oscilador.c: 6:         case 0:
  1401                           
  1402                           
  1403                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  1404  0795  1683               	bsf	3,5	;RP0=1, select bank1
  1405  0796  1303               	bcf	3,6	;RP1=0, select bank1
  1406  0797  130F               	bcf	15,6	;volatile
  1407                           
  1408                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  1409  0798  128F               	bcf	15,5	;volatile
  1410                           
  1411                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  1412  0799  120F               	bcf	15,4	;volatile
  1413                           
  1414                           ;Oscilador.c: 10:             break;
  1415  079A  2FED               	goto	l130
  1416  079B                     l131:	
  1417                           ;Oscilador.c: 11:          case 1:
  1418                           
  1419                           
  1420                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  1421  079B  1683               	bsf	3,5	;RP0=1, select bank1
  1422  079C  1303               	bcf	3,6	;RP1=0, select bank1
  1423  079D  130F               	bcf	15,6	;volatile
  1424                           
  1425                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  1426  079E  128F               	bcf	15,5	;volatile
  1427                           
  1428                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  1429  079F  160F               	bsf	15,4	;volatile
  1430                           
  1431                           ;Oscilador.c: 15:             break;
  1432  07A0  2FED               	goto	l130
  1433  07A1                     l132:	
  1434                           ;Oscilador.c: 16:         case 2:
  1435                           
  1436                           
  1437                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  1438  07A1  1683               	bsf	3,5	;RP0=1, select bank1
  1439  07A2  1303               	bcf	3,6	;RP1=0, select bank1
  1440  07A3  130F               	bcf	15,6	;volatile
  1441                           
  1442                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  1443  07A4  168F               	bsf	15,5	;volatile
  1444                           
  1445                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  1446  07A5  120F               	bcf	15,4	;volatile
  1447                           
  1448                           ;Oscilador.c: 20:             break;
  1449  07A6  2FED               	goto	l130
  1450  07A7                     l133:	
  1451                           ;Oscilador.c: 21:         case 3:
  1452                           
  1453                           
  1454                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  1455  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  1456  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  1457  07A9  130F               	bcf	15,6	;volatile
  1458                           
  1459                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  1460  07AA  168F               	bsf	15,5	;volatile
  1461                           
  1462                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  1463  07AB  160F               	bsf	15,4	;volatile
  1464                           
  1465                           ;Oscilador.c: 25:             break;
  1466  07AC  2FED               	goto	l130
  1467  07AD                     l134:	
  1468                           ;Oscilador.c: 26:         case 4:
  1469                           
  1470                           
  1471                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  1472  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  1473  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  1474  07AF  170F               	bsf	15,6	;volatile
  1475                           
  1476                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  1477  07B0  128F               	bcf	15,5	;volatile
  1478                           
  1479                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  1480  07B1  120F               	bcf	15,4	;volatile
  1481                           
  1482                           ;Oscilador.c: 30:             break;
  1483  07B2  2FED               	goto	l130
  1484  07B3                     l135:	
  1485                           ;Oscilador.c: 31:         case 5:
  1486                           
  1487                           
  1488                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1489  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  1490  07B4  1303               	bcf	3,6	;RP1=0, select bank1
  1491  07B5  170F               	bsf	15,6	;volatile
  1492                           
  1493                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1494  07B6  128F               	bcf	15,5	;volatile
  1495                           
  1496                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1497  07B7  160F               	bsf	15,4	;volatile
  1498                           
  1499                           ;Oscilador.c: 35:             break;
  1500  07B8  2FED               	goto	l130
  1501  07B9                     l136:	
  1502                           ;Oscilador.c: 36:         case 6:
  1503                           
  1504                           
  1505                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1506  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  1507  07BA  1303               	bcf	3,6	;RP1=0, select bank1
  1508  07BB  170F               	bsf	15,6	;volatile
  1509                           
  1510                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1511  07BC  168F               	bsf	15,5	;volatile
  1512                           
  1513                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1514  07BD  120F               	bcf	15,4	;volatile
  1515                           
  1516                           ;Oscilador.c: 40:             break;
  1517  07BE  2FED               	goto	l130
  1518  07BF                     l137:	
  1519                           ;Oscilador.c: 41:         case 7:
  1520                           
  1521                           
  1522                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1523  07BF  1683               	bsf	3,5	;RP0=1, select bank1
  1524  07C0  1303               	bcf	3,6	;RP1=0, select bank1
  1525  07C1  170F               	bsf	15,6	;volatile
  1526                           
  1527                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1528  07C2  168F               	bsf	15,5	;volatile
  1529                           
  1530                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1531  07C3  160F               	bsf	15,4	;volatile
  1532                           
  1533                           ;Oscilador.c: 45:             break;
  1534  07C4  2FED               	goto	l130
  1535  07C5                     l138:	
  1536                           ;Oscilador.c: 46:         default:
  1537                           
  1538                           
  1539                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1540  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  1541  07C6  1303               	bcf	3,6	;RP1=0, select bank1
  1542  07C7  170F               	bsf	15,6	;volatile
  1543                           
  1544                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1545  07C8  168F               	bsf	15,5	;volatile
  1546                           
  1547                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1548  07C9  120F               	bcf	15,4	;volatile
  1549                           
  1550                           ;Oscilador.c: 50:             break;
  1551  07CA  2FED               	goto	l130
  1552  07CB                     l1154:
  1553  07CB  0872               	movf	initOsc@IRCF,w
  1554  07CC  00F0               	movwf	??_initOsc
  1555  07CD  01F1               	clrf	??_initOsc+1
  1556                           
  1557                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1558                           ; Switch size 1, requested type "simple"
  1559                           ; Number of cases is 1, Range of values is 0 to 0
  1560                           ; switch strategies available:
  1561                           ; Name         Instructions Cycles
  1562                           ; simple_byte            4     3 (average)
  1563                           ; direct_byte           11     8 (fixed)
  1564                           ; jumptable            260     6 (fixed)
  1565                           ;	Chosen strategy is simple_byte
  1566  07CE  0871               	movf	??_initOsc+1,w
  1567  07CF  3A00               	xorlw	0	; case 0
  1568  07D0  1903               	skipnz
  1569  07D1  2FD3               	goto	l1322
  1570  07D2  2FC5               	goto	l138
  1571  07D3                     l1322:
  1572                           
  1573                           ; Switch size 1, requested type "simple"
  1574                           ; Number of cases is 8, Range of values is 0 to 7
  1575                           ; switch strategies available:
  1576                           ; Name         Instructions Cycles
  1577                           ; simple_byte           25    13 (average)
  1578                           ; direct_byte           32     8 (fixed)
  1579                           ; jumptable            260     6 (fixed)
  1580                           ;	Chosen strategy is simple_byte
  1581  07D3  0870               	movf	??_initOsc,w
  1582  07D4  3A00               	xorlw	0	; case 0
  1583  07D5  1903               	skipnz
  1584  07D6  2F95               	goto	l129
  1585  07D7  3A01               	xorlw	1	; case 1
  1586  07D8  1903               	skipnz
  1587  07D9  2F9B               	goto	l131
  1588  07DA  3A03               	xorlw	3	; case 2
  1589  07DB  1903               	skipnz
  1590  07DC  2FA1               	goto	l132
  1591  07DD  3A01               	xorlw	1	; case 3
  1592  07DE  1903               	skipnz
  1593  07DF  2FA7               	goto	l133
  1594  07E0  3A07               	xorlw	7	; case 4
  1595  07E1  1903               	skipnz
  1596  07E2  2FAD               	goto	l134
  1597  07E3  3A01               	xorlw	1	; case 5
  1598  07E4  1903               	skipnz
  1599  07E5  2FB3               	goto	l135
  1600  07E6  3A03               	xorlw	3	; case 6
  1601  07E7  1903               	skipnz
  1602  07E8  2FB9               	goto	l136
  1603  07E9  3A01               	xorlw	1	; case 7
  1604  07EA  1903               	skipnz
  1605  07EB  2FBF               	goto	l137
  1606  07EC  2FC5               	goto	l138
  1607  07ED                     l130:
  1608                           
  1609                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1610  07ED  140F               	bsf	15,0	;volatile
  1611  07EE                     l139:
  1612  07EE  0008               	return
  1613  07EF                     __end_of_initOsc:
  1614                           
  1615                           	psect	text7
  1616  063B                     __ptext7:	
  1617 ;; *************** function _USART_Init_BaudRate *****************
  1618 ;; Defined at:
  1619 ;;		line 20 in file "USART.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1633 ;;      Params:         0       0       0       0       0
  1634 ;;      Locals:         0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0
  1636 ;;      Totals:         0       0       0       0       0
  1637 ;;Total ram usage:        0 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           
  1647                           ;psect for function _USART_Init_BaudRate
  1648  063B                     _USART_Init_BaudRate:
  1649  063B                     l1188:	
  1650                           ;incstack = 0
  1651                           ; Regs used in _USART_Init_BaudRate: [wreg+status,2]
  1652                           
  1653                           
  1654                           ;USART.c: 21:     SPBRGH = 0;
  1655  063B  1683               	bsf	3,5	;RP0=1, select bank1
  1656  063C  1303               	bcf	3,6	;RP1=0, select bank1
  1657  063D  019A               	clrf	26	;volatile
  1658  063E                     l1190:
  1659                           
  1660                           ;USART.c: 22:     SPBRG = 12;
  1661  063E  300C               	movlw	12
  1662  063F  0099               	movwf	25	;volatile
  1663  0640                     l252:
  1664  0640  0008               	return
  1665  0641                     __end_of_USART_Init_BaudRate:
  1666                           
  1667                           	psect	text8
  1668  0649                     __ptext8:	
  1669 ;; *************** function _USART_Init *****************
  1670 ;; Defined at:
  1671 ;;		line 5 in file "USART.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;		None
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		status,2
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1685 ;;      Params:         0       0       0       0       0
  1686 ;;      Locals:         0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0
  1688 ;;      Totals:         0       0       0       0       0
  1689 ;;Total ram usage:        0 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; This function calls:
  1692 ;;		Nothing
  1693 ;; This function is called by:
  1694 ;;		_main
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           
  1699                           ;psect for function _USART_Init
  1700  0649                     _USART_Init:
  1701  0649                     l1192:	
  1702                           ;incstack = 0
  1703                           ; Regs used in _USART_Init: [status,2]
  1704                           
  1705                           
  1706                           ;USART.c: 7:     RCSTAbits.SPEN = 1;
  1707  0649  1283               	bcf	3,5	;RP0=0, select bank0
  1708  064A  1303               	bcf	3,6	;RP1=0, select bank0
  1709  064B  1798               	bsf	24,7	;volatile
  1710                           
  1711                           ;USART.c: 8:     TXSTAbits.SYNC = 0;
  1712  064C  1683               	bsf	3,5	;RP0=1, select bank1
  1713  064D  1303               	bcf	3,6	;RP1=0, select bank1
  1714  064E  1218               	bcf	24,4	;volatile
  1715                           
  1716                           ;USART.c: 10:     TXSTAbits.TXEN = 1;
  1717  064F  1698               	bsf	24,5	;volatile
  1718                           
  1719                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  1720  0650  1318               	bcf	24,6	;volatile
  1721                           
  1722                           ;USART.c: 12:     TXSTAbits.BRGH = 1;
  1723  0651  1518               	bsf	24,2	;volatile
  1724                           
  1725                           ;USART.c: 13:     TXSTAbits.TRMT = 0;
  1726  0652  1098               	bcf	24,1	;volatile
  1727                           
  1728                           ;USART.c: 15:     RCSTAbits.RX9 = 0;
  1729  0653  1283               	bcf	3,5	;RP0=0, select bank0
  1730  0654  1303               	bcf	3,6	;RP1=0, select bank0
  1731  0655  1318               	bcf	24,6	;volatile
  1732                           
  1733                           ;USART.c: 16:     RCSTAbits.CREN = 1;
  1734  0656  1618               	bsf	24,4	;volatile
  1735  0657                     l1194:
  1736                           
  1737                           ;USART.c: 17:     RCREG = 0;
  1738  0657  019A               	clrf	26	;volatile
  1739  0658                     l249:
  1740  0658  0008               	return
  1741  0659                     __end_of_USART_Init:
  1742                           
  1743                           	psect	text9
  1744  0635                     __ptext9:	
  1745 ;; *************** function _USART_INTERRUPT *****************
  1746 ;; Defined at:
  1747 ;;		line 25 in file "USART.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		None
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1761 ;;      Params:         0       0       0       0       0
  1762 ;;      Locals:         0       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0
  1764 ;;      Totals:         0       0       0       0       0
  1765 ;;Total ram usage:        0 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           
  1775                           ;psect for function _USART_INTERRUPT
  1776  0635                     _USART_INTERRUPT:
  1777  0635                     l1196:	
  1778                           ;incstack = 0
  1779                           ; Regs used in _USART_INTERRUPT: []
  1780                           
  1781                           
  1782                           ;USART.c: 26:     INTCONbits.GIE = 1;
  1783  0635  178B               	bsf	11,7	;volatile
  1784                           
  1785                           ;USART.c: 27:     INTCONbits.PEIE = 1;
  1786  0636  170B               	bsf	11,6	;volatile
  1787                           
  1788                           ;USART.c: 28:     PIE1bits.RCIE = 1;
  1789  0637  1683               	bsf	3,5	;RP0=1, select bank1
  1790  0638  1303               	bcf	3,6	;RP1=0, select bank1
  1791  0639  168C               	bsf	12,5	;volatile
  1792  063A                     l255:
  1793  063A  0008               	return
  1794  063B                     __end_of_USART_INTERRUPT:
  1795                           
  1796                           	psect	text10
  1797  0748                     __ptext10:	
  1798 ;; *************** function _Lcd_Init *****************
  1799 ;; Defined at:
  1800 ;;		line 14 in file "LCD.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg, status,2, status,0, pclath, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1814 ;;      Params:         0       0       0       0       0
  1815 ;;      Locals:         0       0       0       0       0
  1816 ;;      Temps:          2       0       0       0       0
  1817 ;;      Totals:         2       0       0       0       0
  1818 ;;Total ram usage:        2 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    2
  1821 ;; This function calls:
  1822 ;;		_Lcd_Cmd
  1823 ;;		_Lcd_Port
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           
  1830                           ;psect for function _Lcd_Init
  1831  0748                     _Lcd_Init:
  1832  0748                     l1198:	
  1833                           ;incstack = 0
  1834                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1835                           
  1836                           
  1837                           ;LCD.c: 15:   Lcd_Port(0x00);
  1838  0748  3000               	movlw	0
  1839  0749  120A  118A  262F  120A  118A  	fcall	_Lcd_Port
  1840  074E                     l1200:
  1841                           
  1842                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1843  074E  3034               	movlw	52
  1844  074F  00F5               	movwf	??_Lcd_Init+1
  1845  0750  30F1               	movlw	241
  1846  0751  00F4               	movwf	??_Lcd_Init
  1847  0752                     u247:
  1848  0752  0BF4               	decfsz	??_Lcd_Init,f
  1849  0753  2F52               	goto	u247
  1850  0754  0BF5               	decfsz	??_Lcd_Init+1,f
  1851  0755  2F52               	goto	u247
  1852  0756  2F57               	nop2
  1853  0757                     l1202:
  1854                           
  1855                           ;LCD.c: 17:   Lcd_Cmd(0x30);
  1856  0757  3030               	movlw	48
  1857  0758  120A  118A  2680  120A  118A  	fcall	_Lcd_Cmd
  1858                           
  1859                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1860  075D  300D               	movlw	13
  1861  075E  00F5               	movwf	??_Lcd_Init+1
  1862  075F  30FB               	movlw	251
  1863  0760  00F4               	movwf	??_Lcd_Init
  1864  0761                     u257:
  1865  0761  0BF4               	decfsz	??_Lcd_Init,f
  1866  0762  2F61               	goto	u257
  1867  0763  0BF5               	decfsz	??_Lcd_Init+1,f
  1868  0764  2F61               	goto	u257
  1869  0765  2F66               	nop2
  1870  0766                     l1204:
  1871                           
  1872                           ;LCD.c: 19:   Lcd_Cmd(0x30);
  1873  0766  3030               	movlw	48
  1874  0767  120A  118A  2680  120A  118A  	fcall	_Lcd_Cmd
  1875  076C                     l1206:
  1876                           
  1877                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1878  076C  301D               	movlw	29
  1879  076D  00F5               	movwf	??_Lcd_Init+1
  1880  076E  3091               	movlw	145
  1881  076F  00F4               	movwf	??_Lcd_Init
  1882  0770                     u267:
  1883  0770  0BF4               	decfsz	??_Lcd_Init,f
  1884  0771  2F70               	goto	u267
  1885  0772  0BF5               	decfsz	??_Lcd_Init+1,f
  1886  0773  2F70               	goto	u267
  1887                           
  1888                           ;LCD.c: 21:   Lcd_Cmd(0x30);
  1889  0774  3030               	movlw	48
  1890  0775  120A  118A  2680  120A  118A  	fcall	_Lcd_Cmd
  1891                           
  1892                           ;LCD.c: 22:   Lcd_Cmd(0x38);
  1893  077A  3038               	movlw	56
  1894  077B  120A  118A  2680  120A  118A  	fcall	_Lcd_Cmd
  1895                           
  1896                           ;LCD.c: 23:   Lcd_Cmd(0x0C);
  1897  0780  300C               	movlw	12
  1898  0781  120A  118A  2680  120A  118A  	fcall	_Lcd_Cmd
  1899                           
  1900                           ;LCD.c: 24:   Lcd_Cmd(0x01);
  1901  0786  3001               	movlw	1
  1902  0787  120A  118A  2680  120A  118A  	fcall	_Lcd_Cmd
  1903                           
  1904                           ;LCD.c: 25:   Lcd_Cmd(0x06);
  1905  078C  3006               	movlw	6
  1906  078D  120A  118A  2680  120A  118A  	fcall	_Lcd_Cmd
  1907  0792                     l152:
  1908  0792  0008               	return
  1909  0793                     __end_of_Lcd_Init:
  1910                           
  1911                           	psect	text11
  1912  0680                     __ptext11:	
  1913 ;; *************** function _Lcd_Cmd *****************
  1914 ;; Defined at:
  1915 ;;		line 33 in file "LCD.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  a               1    wreg     unsigned char 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  a               1    3[COMMON] unsigned char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, status,2, status,0, pclath, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1929 ;;      Params:         0       0       0       0       0
  1930 ;;      Locals:         1       0       0       0       0
  1931 ;;      Temps:          2       0       0       0       0
  1932 ;;      Totals:         3       0       0       0       0
  1933 ;;Total ram usage:        3 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    1
  1936 ;; This function calls:
  1937 ;;		_Lcd_Port
  1938 ;; This function is called by:
  1939 ;;		_Lcd_Init
  1940 ;;		_Lcd_Set_Cursor
  1941 ;;		_Lcd_Clear
  1942 ;;		_Lcd_Shift_Right
  1943 ;;		_Lcd_Shift_Left
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           
  1948                           ;psect for function _Lcd_Cmd
  1949  0680                     _Lcd_Cmd:
  1950                           
  1951                           ;incstack = 0
  1952                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1953                           ;Lcd_Cmd@a stored from wreg
  1954  0680  00F3               	movwf	Lcd_Cmd@a
  1955  0681                     l1120:
  1956                           
  1957                           ;LCD.c: 34:  PORTEbits.RE0 = 0;
  1958  0681  1283               	bcf	3,5	;RP0=0, select bank0
  1959  0682  1303               	bcf	3,6	;RP1=0, select bank0
  1960  0683  1009               	bcf	9,0	;volatile
  1961  0684                     l1122:
  1962                           
  1963                           ;LCD.c: 35:  Lcd_Port(a);
  1964  0684  0873               	movf	Lcd_Cmd@a,w
  1965  0685  120A  118A  262F  120A  118A  	fcall	_Lcd_Port
  1966  068A                     l1124:
  1967                           
  1968                           ;LCD.c: 36:  PORTEbits.RE2 = 1;
  1969  068A  1283               	bcf	3,5	;RP0=0, select bank0
  1970  068B  1303               	bcf	3,6	;RP1=0, select bank0
  1971  068C  1509               	bsf	9,2	;volatile
  1972  068D                     l1126:
  1973                           
  1974                           ;LCD.c: 37:         _delay((unsigned long)((4)*(8000000/4000.0)));
  1975  068D  300B               	movlw	11
  1976  068E  00F2               	movwf	??_Lcd_Cmd+1
  1977  068F  3062               	movlw	98
  1978  0690  00F1               	movwf	??_Lcd_Cmd
  1979  0691                     u277:
  1980  0691  0BF1               	decfsz	??_Lcd_Cmd,f
  1981  0692  2E91               	goto	u277
  1982  0693  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1983  0694  2E91               	goto	u277
  1984  0695  0000               	nop
  1985  0696                     l1128:
  1986                           
  1987                           ;LCD.c: 38:         PORTEbits.RE2 = 0;
  1988  0696  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0697  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0698  1109               	bcf	9,2	;volatile
  1991  0699                     l158:
  1992  0699  0008               	return
  1993  069A                     __end_of_Lcd_Cmd:
  1994                           
  1995                           	psect	text12
  1996  062F                     __ptext12:	
  1997 ;; *************** function _Lcd_Port *****************
  1998 ;; Defined at:
  1999 ;;		line 29 in file "LCD.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;  a               1    wreg     unsigned char 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  a               1    0[COMMON] unsigned char 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2013 ;;      Params:         0       0       0       0       0
  2014 ;;      Locals:         1       0       0       0       0
  2015 ;;      Temps:          0       0       0       0       0
  2016 ;;      Totals:         1       0       0       0       0
  2017 ;;Total ram usage:        1 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_Lcd_Init
  2023 ;;		_Lcd_Cmd
  2024 ;;		_Lcd_Write_Char
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           
  2029                           ;psect for function _Lcd_Port
  2030  062F                     _Lcd_Port:
  2031                           
  2032                           ;incstack = 0
  2033                           ; Regs used in _Lcd_Port: [wreg]
  2034                           ;Lcd_Port@a stored from wreg
  2035  062F  00F0               	movwf	Lcd_Port@a
  2036  0630                     l1108:
  2037                           
  2038                           ;LCD.c: 30:     PORTD = a;
  2039  0630  0870               	movf	Lcd_Port@a,w
  2040  0631  1283               	bcf	3,5	;RP0=0, select bank0
  2041  0632  1303               	bcf	3,6	;RP1=0, select bank0
  2042  0633  0088               	movwf	8	;volatile
  2043  0634                     l155:
  2044  0634  0008               	return
  2045  0635                     __end_of_Lcd_Port:
  2046  007E                     btemp	set	126	;btemp
  2047  007E                     wtemp0	set	126
  2048                           
  2049                           	psect	config
  2050                           
  2051                           ;Config register CONFIG1 @ 0x2007
  2052                           ;	Oscillator Selection bits
  2053                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2054                           ;	Watchdog Timer Enable bit
  2055                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2056                           ;	Power-up Timer Enable bit
  2057                           ;	PWRTE = OFF, PWRT disabled
  2058                           ;	RE3/MCLR pin function select bit
  2059                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2060                           ;	Code Protection bit
  2061                           ;	CP = OFF, Program memory code protection is disabled
  2062                           ;	Data Code Protection bit
  2063                           ;	CPD = OFF, Data memory code protection is disabled
  2064                           ;	Brown Out Reset Selection bits
  2065                           ;	BOREN = ON, BOR enabled
  2066                           ;	Internal External Switchover bit
  2067                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2068                           ;	Fail-Safe Clock Monitor Enabled bit
  2069                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2070                           ;	Low Voltage Programming Enable bit
  2071                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2072                           ;	In-Circuit Debugger Mode bit
  2073                           ;	DEBUG = 0x1, unprogrammed default
  2074  2007                     	org	8199
  2075  2007  23D4               	dw	9172
  2076                           
  2077                           ;Config register CONFIG2 @ 0x2008
  2078                           ;	Brown-out Reset Selection bit
  2079                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2080                           ;	Flash Program Memory Self Write Enable bits
  2081                           ;	WRT = OFF, Write protection off
  2082  2008                     	org	8200
  2083  2008  3FFF               	dw	16383

Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      0      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[6]), STR_2(CODE[6]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(COMMON[2]), 

    S953__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    S953__prbuf$ptr	PTR unsigned char  size(1) Largest target is 16
		 -> data1(BANK0[8]), data2(BANK0[8]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 16
		 -> data1(BANK0[8]), data2(BANK0[8]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_titulos_LCD
    _titulos_LCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _setup->_initOsc
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     661
                                              9 COMMON     1     1      0
                           _Lcd_Init
                    _USART_INTERRUPT
                         _USART_Init
                _USART_Init_BaudRate
                              _setup
                        _titulos_LCD
 ---------------------------------------------------------------------------------
 (1) _titulos_LCD                                          1     1      0     573
                                              8 COMMON     1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     167
                                              3 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     406
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init_BaudRate                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_INTERRUPT                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _USART_INTERRUPT
   _USART_Init
   _USART_Init_BaudRate
   _setup
     _initOsc
   _titulos_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 14:48:11 2021

                           pc 0002                            l95 0669                            fsr 0004  
            ?_USART_INTERRUPT 0070                           l130 07ED                           l131 079B  
                         l123 06B5                           l132 07A1                           l133 07A7  
                         l134 07AD                           l135 07B3                           l152 0792  
                         l136 07B9                           l137 07BF                           l129 0795  
                         l138 07C5                           l170 067F                           l155 0634  
                         l139 07EE                           l252 0640                           l158 0699  
                         l255 063A                           l167 06D9                           l176 06FE  
                         l249 0658                           u130 06BC                           u131 06BB  
                         u140 06CE                           u141 06CD                           u150 06FE  
                         u151 06FD                           u160 0729                           u161 0728  
                         u170 0733                           u171 0732                           u180 073F  
                         u237 0679                           u181 073E                           u247 0752  
                         u257 0761                           u267 0770                           u277 0691  
                         _VAL 0026                           fsr0 0004                           indf 0000  
                 _titulos_LCD 0659                          l1110 066B                          l1120 0681  
                        l1200 074E                          l1112 066E                          l1122 0684  
                        l1202 0757                          l1130 06B7                          l1114 0674  
                        l1210 0663                          l1108 0630                          l1124 068A  
                        l1204 0766                          l1140 06D3                          l1132 06BC  
                        l1116 0677                          l1220 0713                          l1212 06FF  
                        l1126 068D                          l1206 076C                          l1150 0794  
                        l1134 06C1                          l1118 067C                          l1142 06DB  
                        l1230 072D                          l1222 071D                          l1214 0704  
                        l1128 0696                          l1160 069A                          l1136 06C8  
                        l1144 06DE                          l1208 0659                          l1240 0741  
                        l1232 0733                          l1224 0723                          l1216 0709  
                        l1322 07D3                          l1154 07CB                          l1170 06AA  
                        l1162 06A0                          l1138 06CE                          l1146 06EB  
                        l1242 0743                          l1234 0737                          l1226 0725  
                        l1218 070E                          l1180 06B1                          l1172 06AB  
                        l1164 06A4                          l1148 06F1                          l1236 0739  
                        l1228 0729                          l1190 063E                          l1182 06B2  
                        l1174 06AC                          l1166 06A5                          l1238 073F  
                        l1192 0649                          l1184 06B3                          l1176 06AD  
                        l1168 06A9                          l1194 0657                          l1186 06B4  
                        l1178 06AE                          l1196 0635                          l1188 063B  
                        l1198 0748                          STR_1 0009                          STR_2 0018  
           ?_Lcd_Write_String 0070                          _cont 0028                          _main 06FF  
                        btemp 007E                          start 0000            ??_Lcd_Write_String 0073  
             __end_of_Lcd_Cmd 069A                         ?_main 0070                         _ANSEL 0188  
                       _RCREG 001A                         _SPBRG 0099                         _PORTA 0005  
                       _PORTB 0006                         _PORTC 0007                         _PORTD 0008  
                       _PORTE 0009       __size_of_Lcd_Set_Cursor 0024                         _TRISA 0085  
                       _TRISB 0086                         _TRISD 0088                         _TRISE 0089  
                       _TXREG 0019                         _data1 0034                         _data2 002C  
             __end_of_initOsc 07EF                         _setup 069A                         pclath 000A  
                       status 0003                         wtemp0 007E                   ?_USART_Init 0070  
            __end_of_Lcd_Init 0793              __end_of_Lcd_Port 0635               __initialization 07EF  
                __end_of_main 0748                        ??_main 0079                        _ADCON1 009F  
                      _ADRESH 001E                        _ADRESL 009E                   initOsc@IRCF 0072  
         _USART_Init_BaudRate 063B                        ?_setup 0070                        _ANSELH 0189  
                   ??_Lcd_Cmd 0071                        _S1_val 007D                        _S2_val 007C  
                      _SPBRGH 009A       __size_of_Lcd_Write_Char 0016          ?_USART_Init_BaudRate 0070  
                   ??_initOsc 0070           __size_of_USART_Init 0010               Lcd_Set_Cursor@a 0076  
             Lcd_Set_Cursor@b 0074       __end_of__initialization 07FC                __pcstackCOMMON 0070  
       ??_USART_Init_BaudRate 0070                 __end_of_setup 06B6                _Lcd_Set_Cursor 06B6  
                ?_titulos_LCD 0070                     ?_Lcd_Init 0070                     ?_Lcd_Port 0070  
                     ??_setup 0073                    __pbssBANK0 0020                    __pmaintext 06FF  
   __size_of_Lcd_Write_String 0025        __end_of_Lcd_Set_Cursor 06DA                       _S3_cont 002B  
                  ??_Lcd_Init 0074                    ??_Lcd_Port 0070      __size_of_USART_INTERRUPT 0006  
                  __stringtab 0003                 _eusart_toggle 007B                    _cont_usart 0029  
              _Lcd_Write_Char 066A                       _Lcd_Cmd 0680                  ??_USART_Init 0070  
             ?_Lcd_Set_Cursor 0074                       __ptext1 0659                       __ptext2 06DA  
                     __ptext3 066A                       __ptext4 06B6                       __ptext5 069A  
                     __ptext6 0793                       __ptext7 063B                       __ptext8 0649  
                     __ptext9 0635                       _initOsc 0793            __end_of_USART_Init 0659  
                     clrloop0 0642        __end_of_Lcd_Write_Char 0680          end_of_initialization 07FC  
                   _RCSTAbits 0018                     Lcd_Port@a 0070                     _PORTEbits 0009  
                   _TRISCbits 0087          __size_of_titulos_LCD 0011               ?_Lcd_Write_Char 0070  
           Lcd_Write_String@a 0075             Lcd_Write_String@i 0073                     _TXSTAbits 0098  
           ??_USART_INTERRUPT 0070              _Lcd_Write_String 06DA           start_initialization 07EF  
           __size_of_Lcd_Init 004B             __size_of_Lcd_Port 0006   __end_of_USART_Init_BaudRate 0641  
             Lcd_Write_Char@a 0072                   __pbssCOMMON 007A                     ___latbits 0002  
                 _data_recive 007A                      ?_Lcd_Cmd 0070              ??_Lcd_Set_Cursor 0075  
                   __pstrings 0003                      ?_initOsc 0070                __size_of_setup 001C  
                   clear_ram0 0641                      _PIE1bits 008C                      Lcd_Cmd@a 0073  
                    _PIR1bits 000C                      _VAL_SWAP 0024                    _ADCON0bits 001F  
                 __stringbase 0008              ??_Lcd_Write_Char 0071               _USART_INTERRUPT 0635  
                    _Lcd_Init 0748                      _Lcd_Port 062F      __end_of_Lcd_Write_String 06FF  
            __size_of_Lcd_Cmd 001A                    _ADC_toggle 002A            __end_of__stringtab 0009  
               ??_titulos_LCD 0078              __size_of_initOsc 005C                      __ptext10 0748  
                    __ptext11 0680                      __ptext12 062F                 __size_of_main 0049  
     __end_of_USART_INTERRUPT 063B                    _INTCONbits 000B                   _VAL_NIBBLE1 0022  
                 _VAL_NIBBLE2 0020           __end_of_titulos_LCD 066A                     stringcode 0003  
                  _OSCCONbits 008F  __size_of_USART_Init_BaudRate 0006            Lcd_Set_Cursor@temp 0077  
                    stringdir 0003                      stringtab 0003                    _USART_Init 0649  
