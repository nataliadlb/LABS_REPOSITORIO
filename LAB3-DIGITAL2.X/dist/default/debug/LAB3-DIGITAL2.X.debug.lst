

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 10 22:31:00 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0009                     _PORTEbits	set	9
   455  000B                     _INTCON	set	11
   456  0009                     _PORTE	set	9
   457  0008                     _PORTD	set	8
   458  0005                     _PORTA	set	5
   459  0007                     _PORTC	set	7
   460  0006                     _PORTB	set	6
   461  001E                     _ADRESH	set	30
   462  001F                     _ADCON0bits	set	31
   463  000C                     _PIR1bits	set	12
   464  009F                     _ADCON1	set	159
   465  008F                     _OSCCONbits	set	143
   466  008C                     _PIE1bits	set	140
   467  0089                     _TRISE	set	137
   468  0088                     _TRISD	set	136
   469  0087                     _TRISC	set	135
   470  0086                     _TRISB	set	134
   471  0085                     _TRISA	set	133
   472  009E                     _ADRESL	set	158
   473  0189                     _ANSELH	set	393
   474  0188                     _ANSEL	set	392
   475                           
   476                           	psect	strings
   477  0304                     __pstrings:
   478  0304                     stringtab:
   479  0304                     __stringtab:
   480  0304                     stringcode:	
   481                           ;	String table - string pointers are 1 byte each
   482                           
   483  0304                     stringdir:
   484  0304  3003               	movlw	high stringdir
   485  0305  008A               	movwf	10
   486  0306  0804               	movf	4,w
   487  0307  0A84               	incf	4,f
   488  0308  0782               	addwf	2,f
   489  0309                     __stringbase:
   490  0309  3400               	retlw	0
   491  030A                     __end_of__stringtab:
   492  030A                     STR_1:
   493  030A  3453               	retlw	83	;'S'
   494  030B  3431               	retlw	49	;'1'
   495  030C  343A               	retlw	58	;':'
   496  030D  3400               	retlw	0
   497  030E                     STR_2:
   498  030E  3453               	retlw	83	;'S'
   499  030F  3432               	retlw	50	;'2'
   500  0310  343A               	retlw	58	;':'
   501  0311  3400               	retlw	0
   502  0312                     STR_3:
   503  0312  3453               	retlw	83	;'S'
   504  0313  3433               	retlw	51	;'3'
   505  0314  343A               	retlw	58	;':'
   506  0315  3400               	retlw	0
   507                           
   508                           	psect	cinit
   509  0011                     start_initialization:	
   510                           ; #config settings
   511                           
   512  0011                     __initialization:
   513                           
   514                           ; Clear objects allocated to COMMON
   515  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   516  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   517  0013  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   518  0014  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   519  0015  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   520  0016  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   521                           
   522                           ; Clear objects allocated to BANK0
   523  0017  1383               	bcf	3,7	;select IRP bank0
   524  0018  3020               	movlw	low __pbssBANK0
   525  0019  0084               	movwf	4
   526  001A  3032               	movlw	low (__pbssBANK0+18)
   527  001B  120A  118A  232C  120A  118A  	fcall	clear_ram0
   528  0020                     end_of_initialization:	
   529                           ;End of C runtime variable initialization code
   530                           
   531  0020                     __end_of__initialization:
   532  0020  0183               	clrf	3
   533  0021  120A  118A  2A7E   	ljmp	_main	;jump to C main() function
   534                           
   535                           	psect	bssCOMMON
   536  0078                     __pbssCOMMON:
   537  0078                     _ADC_VALOR_2:
   538  0078                     	ds	2
   539  007A                     _ADC_VALOR_1:
   540  007A                     	ds	2
   541  007C                     _S3_cont:
   542  007C                     	ds	1
   543  007D                     _a:
   544  007D                     	ds	1
   545                           
   546                           	psect	bssBANK0
   547  0020                     __pbssBANK0:
   548  0020                     _VAL_NIBBLE2:
   549  0020                     	ds	2
   550  0022                     _VAL_NIBBLE1:
   551  0022                     	ds	2
   552  0024                     _VAL_SWAP:
   553  0024                     	ds	2
   554  0026                     _VAL:
   555  0026                     	ds	2
   556  0028                     _ADC_flag2:
   557  0028                     	ds	2
   558  002A                     _ADC_flag1:
   559  002A                     	ds	2
   560  002C                     _x:
   561  002C                     	ds	2
   562  002E                     _S2_val:
   563  002E                     	ds	2
   564  0030                     _S1_val:
   565  0030                     	ds	2
   566                           
   567                           	psect	clrtext
   568  032C                     clear_ram0:	
   569                           ;	Called with FSR containing the base address, and
   570                           ;	W with the last address+1
   571                           
   572  032C  0064               	clrwdt	;clear the watchdog before getting into this loop
   573  032D                     clrloop0:
   574  032D  0180               	clrf	0	;clear RAM location pointed to by FSR
   575  032E  0A84               	incf	4,f	;increment pointer
   576  032F  0604               	xorwf	4,w	;XOR with final address
   577  0330  1903               	btfsc	3,2	;have we reached the end yet?
   578  0331  3400               	retlw	0	;all done for this memory range, return
   579  0332  0604               	xorwf	4,w	;XOR again to restore value
   580  0333  2B2D               	goto	clrloop0	;do the next byte
   581                           
   582                           	psect	cstackCOMMON
   583  0070                     __pcstackCOMMON:
   584  0070                     ?_ADC_Config:
   585  0070                     ??_ADC_Config:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_setup:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_Config_INTERRUPT:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_Lcd_Init:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_titulos_LCD:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_CONVERSION_ADC:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_Lcd_Write_String:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_initOsc:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_Lcd_Port:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_Lcd_Cmd:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_ISR:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_main:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_Lcd_Write_Char:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_ADC:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ADC@ADRESL_:	
   628                           ; 2 bytes @ 0x0
   629                           
   630  0070                     ADC@ADRESH_:	
   631                           ; 1 bytes @ 0x0
   632                           
   633                           
   634                           ; 1 bytes @ 0x0
   635  0070                     	ds	2
   636  0072                     ADC_Config@AN_num:
   637                           
   638                           ; 1 bytes @ 0x2
   639  0072                     	ds	1
   640  0073                     ??_ADC:
   641  0073                     ??_ISR:	
   642                           ; 1 bytes @ 0x3
   643                           
   644                           
   645                           ; 1 bytes @ 0x3
   646  0073                     	ds	5
   647                           
   648                           	psect	cstackBANK0
   649  0032                     __pcstackBANK0:
   650  0032                     ??_Config_INTERRUPT:
   651  0032                     ??_CONVERSION_ADC:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0032                     ??_initOsc:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0032                     ??_Lcd_Port:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0032                     Lcd_Port@a:	
   661                           ; 1 bytes @ 0x0
   662                           
   663                           
   664                           ; 1 bytes @ 0x0
   665  0032                     	ds	1
   666  0033                     ??_Lcd_Cmd:
   667  0033                     ??_Lcd_Write_Char:	
   668                           ; 1 bytes @ 0x1
   669                           
   670                           
   671                           ; 1 bytes @ 0x1
   672  0033                     	ds	1
   673  0034                     initOsc@IRCF:
   674  0034                     Lcd_Write_Char@a:	
   675                           ; 1 bytes @ 0x2
   676                           
   677                           
   678                           ; 1 bytes @ 0x2
   679  0034                     	ds	1
   680  0035                     ??_setup:
   681  0035                     ??_Lcd_Write_String:	
   682                           ; 1 bytes @ 0x3
   683                           
   684  0035                     Lcd_Cmd@a:	
   685                           ; 1 bytes @ 0x3
   686                           
   687  0035                     Lcd_Write_String@i:	
   688                           ; 1 bytes @ 0x3
   689                           
   690                           
   691                           ; 2 bytes @ 0x3
   692  0035                     	ds	1
   693  0036                     ??_Lcd_Init:
   694  0036                     ?_Lcd_Set_Cursor:	
   695                           ; 1 bytes @ 0x4
   696                           
   697  0036                     Lcd_Set_Cursor@b:	
   698                           ; 1 bytes @ 0x4
   699                           
   700                           
   701                           ; 1 bytes @ 0x4
   702  0036                     	ds	1
   703  0037                     ??_Lcd_Set_Cursor:
   704  0037                     Lcd_Write_String@a:	
   705                           ; 1 bytes @ 0x5
   706                           
   707                           
   708                           ; 1 bytes @ 0x5
   709  0037                     	ds	1
   710  0038                     Lcd_Set_Cursor@a:
   711                           
   712                           ; 1 bytes @ 0x6
   713  0038                     	ds	1
   714  0039                     Lcd_Set_Cursor@temp:
   715                           
   716                           ; 1 bytes @ 0x7
   717  0039                     	ds	1
   718  003A                     ??_titulos_LCD:
   719                           
   720                           ; 1 bytes @ 0x8
   721  003A                     	ds	1
   722  003B                     ??_main:
   723                           
   724                           	psect	maintext
   725  027E                     __pmaintext:	
   726                           ; 1 bytes @ 0x9
   727 ;;
   728 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   729 ;;
   730 ;; *************** function _main *****************
   731 ;; Defined at:
   732 ;;		line 117 in file "pseudocodigo_lab3.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : B00/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   746 ;;      Params:         0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0
   749 ;;      Totals:         0       0       0       0       0
   750 ;;Total ram usage:        0 bytes
   751 ;; Hardware stack levels required when called:    6
   752 ;; This function calls:
   753 ;;		_CONVERSION_ADC
   754 ;;		_Config_INTERRUPT
   755 ;;		_Lcd_Init
   756 ;;		_setup
   757 ;;		_titulos_LCD
   758 ;; This function is called by:
   759 ;;		Startup code after reset
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           
   764                           ;psect for function _main
   765  027E                     _main:
   766  027E                     l1219:	
   767                           ;incstack = 0
   768                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   769                           
   770                           
   771                           ;pseudocodigo_lab3.c: 118:     setup();
   772  027E  120A  118A  22B7  120A  118A  	fcall	_setup
   773  0283                     l1221:
   774                           
   775                           ;pseudocodigo_lab3.c: 119:     Config_INTERRUPT();
   776  0283  120A  118A  2323  120A  118A  	fcall	_Config_INTERRUPT
   777  0288                     l1223:
   778                           
   779                           ;pseudocodigo_lab3.c: 120:     Lcd_Init();
   780  0288  120A  118A  21A8  120A  118A  	fcall	_Lcd_Init
   781                           
   782                           ;pseudocodigo_lab3.c: 121:     titulos_LCD();
   783  028D  120A  118A  21F8  120A  118A  	fcall	_titulos_LCD
   784  0292                     l1225:
   785                           
   786                           ;pseudocodigo_lab3.c: 129:         CONVERSION_ADC();
   787  0292  120A  118A  22D2  120A  118A  	fcall	_CONVERSION_ADC
   788  0297  2A92               	goto	l1225
   789  0298  120A  118A  280E   	ljmp	start
   790  029B                     __end_of_main:
   791                           
   792                           	psect	text1
   793  01F8                     __ptext1:	
   794 ;; *************** function _titulos_LCD *****************
   795 ;; Defined at:
   796 ;;		line 164 in file "pseudocodigo_lab3.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;		None
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      void 
   803 ;; Registers used:
   804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   810 ;;      Params:         0       0       0       0       0
   811 ;;      Locals:         0       0       0       0       0
   812 ;;      Temps:          0       1       0       0       0
   813 ;;      Totals:         0       1       0       0       0
   814 ;;Total ram usage:        1 bytes
   815 ;; Hardware stack levels used:    1
   816 ;; Hardware stack levels required when called:    5
   817 ;; This function calls:
   818 ;;		_Lcd_Set_Cursor
   819 ;;		_Lcd_Write_String
   820 ;; This function is called by:
   821 ;;		_main
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           
   826                           ;psect for function _titulos_LCD
   827  01F8                     _titulos_LCD:
   828  01F8                     l1167:	
   829                           ;incstack = 0
   830                           ; Regs used in _titulos_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   831                           
   832                           
   833                           ;pseudocodigo_lab3.c: 166:         Lcd_Set_Cursor(1,2);
   834  01F8  3002               	movlw	2
   835  01F9  1283               	bcf	3,5	;RP0=0, select bank0
   836  01FA  1303               	bcf	3,6	;RP1=0, select bank0
   837  01FB  00BA               	movwf	??_titulos_LCD
   838  01FC  083A               	movf	??_titulos_LCD,w
   839  01FD  00B6               	movwf	Lcd_Set_Cursor@b
   840  01FE  3001               	movlw	1
   841  01FF  120A  118A  2258  120A  118A  	fcall	_Lcd_Set_Cursor
   842  0204                     l1169:
   843                           
   844                           ;pseudocodigo_lab3.c: 167:         Lcd_Write_String("S1:");
   845  0204  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   846  0205  120A  118A  222F  120A  118A  	fcall	_Lcd_Write_String
   847  020A                     l1171:
   848                           
   849                           ;pseudocodigo_lab3.c: 168:         Lcd_Set_Cursor(1,8);
   850  020A  3008               	movlw	8
   851  020B  1283               	bcf	3,5	;RP0=0, select bank0
   852  020C  1303               	bcf	3,6	;RP1=0, select bank0
   853  020D  00BA               	movwf	??_titulos_LCD
   854  020E  083A               	movf	??_titulos_LCD,w
   855  020F  00B6               	movwf	Lcd_Set_Cursor@b
   856  0210  3001               	movlw	1
   857  0211  120A  118A  2258  120A  118A  	fcall	_Lcd_Set_Cursor
   858                           
   859                           ;pseudocodigo_lab3.c: 169:         Lcd_Write_String("S2:");
   860  0216  3005               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   861  0217  120A  118A  222F  120A  118A  	fcall	_Lcd_Write_String
   862  021C                     l1173:
   863                           
   864                           ;pseudocodigo_lab3.c: 170:         Lcd_Set_Cursor(1,13);
   865  021C  300D               	movlw	13
   866  021D  1283               	bcf	3,5	;RP0=0, select bank0
   867  021E  1303               	bcf	3,6	;RP1=0, select bank0
   868  021F  00BA               	movwf	??_titulos_LCD
   869  0220  083A               	movf	??_titulos_LCD,w
   870  0221  00B6               	movwf	Lcd_Set_Cursor@b
   871  0222  3001               	movlw	1
   872  0223  120A  118A  2258  120A  118A  	fcall	_Lcd_Set_Cursor
   873  0228                     l1175:
   874                           
   875                           ;pseudocodigo_lab3.c: 171:         Lcd_Write_String("S3:");
   876  0228  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   877  0229  120A  118A  222F  120A  118A  	fcall	_Lcd_Write_String
   878  022E                     l105:
   879  022E  0008               	return
   880  022F                     __end_of_titulos_LCD:
   881                           
   882                           	psect	text2
   883  022F                     __ptext2:	
   884 ;; *************** function _Lcd_Write_String *****************
   885 ;; Defined at:
   886 ;;		line 123 in file "LCD.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  a               1    wreg     PTR unsigned char 
   889 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  a               1    5[BANK0 ] PTR unsigned char 
   892 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
   893 ;;  i               2    3[BANK0 ] int 
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         0       0       0       0       0
   904 ;;      Locals:         0       3       0       0       0
   905 ;;      Temps:          0       0       0       0       0
   906 ;;      Totals:         0       3       0       0       0
   907 ;;Total ram usage:        3 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    4
   910 ;; This function calls:
   911 ;;		_Lcd_Write_Char
   912 ;; This function is called by:
   913 ;;		_titulos_LCD
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _Lcd_Write_String
   919  022F                     _Lcd_Write_String:
   920                           
   921                           ;incstack = 0
   922                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   923                           ;Lcd_Write_String@a stored from wreg
   924  022F  1283               	bcf	3,5	;RP0=0, select bank0
   925  0230  1303               	bcf	3,6	;RP1=0, select bank0
   926  0231  00B7               	movwf	Lcd_Write_String@a
   927  0232                     l1083:
   928                           
   929                           ;LCD.c: 124:  int i;;LCD.c: 125:  for(i=0;a[i]!='\0';i++)
   930  0232  01B5               	clrf	Lcd_Write_String@i
   931  0233  01B6               	clrf	Lcd_Write_String@i+1
   932  0234  2A4A               	goto	l1089
   933  0235                     l1085:
   934                           
   935                           ;LCD.c: 126:     Lcd_Write_Char(a[i]);
   936  0235  0835               	movf	Lcd_Write_String@i,w
   937  0236  0737               	addwf	Lcd_Write_String@a,w
   938  0237  0084               	movwf	4
   939  0238  120A  118A  2304  120A  118A  	fcall	stringdir
   940  023D  120A  118A  22EC  120A  118A  	fcall	_Lcd_Write_Char
   941  0242                     l1087:
   942  0242  3001               	movlw	1
   943  0243  1283               	bcf	3,5	;RP0=0, select bank0
   944  0244  1303               	bcf	3,6	;RP1=0, select bank0
   945  0245  07B5               	addwf	Lcd_Write_String@i,f
   946  0246  1803               	skipnc
   947  0247  0AB6               	incf	Lcd_Write_String@i+1,f
   948  0248  3000               	movlw	0
   949  0249  07B6               	addwf	Lcd_Write_String@i+1,f
   950  024A                     l1089:
   951  024A  0835               	movf	Lcd_Write_String@i,w
   952  024B  0737               	addwf	Lcd_Write_String@a,w
   953  024C  0084               	movwf	4
   954  024D  120A  118A  2304  120A  118A  	fcall	stringdir
   955  0252  3A00               	xorlw	0
   956  0253  1D03               	skipz
   957  0254  2A56               	goto	u121
   958  0255  2A57               	goto	u120
   959  0256                     u121:
   960  0256  2A35               	goto	l1085
   961  0257                     u120:
   962  0257                     l167:
   963  0257  0008               	return
   964  0258                     __end_of_Lcd_Write_String:
   965                           
   966                           	psect	text3
   967  02EC                     __ptext3:	
   968 ;; *************** function _Lcd_Write_Char *****************
   969 ;; Defined at:
   970 ;;		line 107 in file "LCD.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  a               1    wreg     unsigned char 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  a               1    2[BANK0 ] unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0, pclath, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   984 ;;      Params:         0       0       0       0       0
   985 ;;      Locals:         0       1       0       0       0
   986 ;;      Temps:          0       1       0       0       0
   987 ;;      Totals:         0       2       0       0       0
   988 ;;Total ram usage:        2 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    3
   991 ;; This function calls:
   992 ;;		_Lcd_Port
   993 ;; This function is called by:
   994 ;;		_Lcd_Write_String
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           
   999                           ;psect for function _Lcd_Write_Char
  1000  02EC                     _Lcd_Write_Char:
  1001                           
  1002                           ;incstack = 0
  1003                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1004                           ;Lcd_Write_Char@a stored from wreg
  1005  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1006  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1007  02EE  00B4               	movwf	Lcd_Write_Char@a
  1008  02EF                     l1061:
  1009                           
  1010                           ;LCD.c: 111:    PORTEbits.RE0 = 1;
  1011  02EF  1409               	bsf	9,0	;volatile
  1012  02F0                     l1063:
  1013                           
  1014                           ;LCD.c: 112:    Lcd_Port(a);
  1015  02F0  0834               	movf	Lcd_Write_Char@a,w
  1016  02F1  120A  118A  2334  120A  118A  	fcall	_Lcd_Port
  1017  02F6                     l1065:
  1018                           
  1019                           ;LCD.c: 113:    PORTEbits.RE2 = 1;
  1020  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1021  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1022  02F8  1509               	bsf	9,2	;volatile
  1023  02F9                     l1067:
  1024                           
  1025                           ;LCD.c: 114:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1026  02F9  3019               	movlw	25
  1027  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  1028  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  1029  02FC  00B3               	movwf	??_Lcd_Write_Char
  1030  02FD                     u197:
  1031  02FD  0BB3               	decfsz	??_Lcd_Write_Char,f
  1032  02FE  2AFD               	goto	u197
  1033  02FF  2B00               	nop2
  1034  0300                     l1069:
  1035                           
  1036                           ;LCD.c: 115:    PORTEbits.RE2 = 0;
  1037  0300  1283               	bcf	3,5	;RP0=0, select bank0
  1038  0301  1303               	bcf	3,6	;RP1=0, select bank0
  1039  0302  1109               	bcf	9,2	;volatile
  1040  0303                     l161:
  1041  0303  0008               	return
  1042  0304                     __end_of_Lcd_Write_Char:
  1043                           
  1044                           	psect	text4
  1045  0258                     __ptext4:	
  1046 ;; *************** function _Lcd_Set_Cursor *****************
  1047 ;; Defined at:
  1048 ;;		line 88 in file "LCD.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  a               1    wreg     unsigned char 
  1051 ;;  b               1    4[BANK0 ] unsigned char 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  a               1    6[BANK0 ] unsigned char 
  1054 ;;  temp            1    7[BANK0 ] unsigned char 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2, status,0, pclath, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1064 ;;      Params:         0       1       0       0       0
  1065 ;;      Locals:         0       2       0       0       0
  1066 ;;      Temps:          0       1       0       0       0
  1067 ;;      Totals:         0       4       0       0       0
  1068 ;;Total ram usage:        4 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; Hardware stack levels required when called:    4
  1071 ;; This function calls:
  1072 ;;		_Lcd_Cmd
  1073 ;; This function is called by:
  1074 ;;		_titulos_LCD
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           
  1079                           ;psect for function _Lcd_Set_Cursor
  1080  0258                     _Lcd_Set_Cursor:
  1081                           
  1082                           ;incstack = 0
  1083                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1084                           ;Lcd_Set_Cursor@a stored from wreg
  1085  0258  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0259  1303               	bcf	3,6	;RP1=0, select bank0
  1087  025A  00B8               	movwf	Lcd_Set_Cursor@a
  1088  025B                     l1071:
  1089                           
  1090                           ;LCD.c: 89:  char temp;;LCD.c: 90:  if(a == 1){
  1091  025B  0338               	decf	Lcd_Set_Cursor@a,w
  1092  025C  1D03               	btfss	3,2
  1093  025D  2A5F               	goto	u101
  1094  025E  2A60               	goto	u100
  1095  025F                     u101:
  1096  025F  2A6C               	goto	l1077
  1097  0260                     u100:
  1098  0260                     l1073:
  1099                           
  1100                           ;LCD.c: 91:         temp = 0x80 + b - 1;
  1101  0260  0836               	movf	Lcd_Set_Cursor@b,w
  1102  0261  3E7F               	addlw	127
  1103  0262  00B7               	movwf	??_Lcd_Set_Cursor
  1104  0263  0837               	movf	??_Lcd_Set_Cursor,w
  1105  0264  00B9               	movwf	Lcd_Set_Cursor@temp
  1106  0265                     l1075:
  1107                           
  1108                           ;LCD.c: 95:         Lcd_Cmd(temp);
  1109  0265  0839               	movf	Lcd_Set_Cursor@temp,w
  1110  0266  120A  118A  229B  120A  118A  	fcall	_Lcd_Cmd
  1111                           
  1112                           ;LCD.c: 96:  }
  1113  026B  2A7D               	goto	l158
  1114  026C                     l1077:
  1115  026C  3002               	movlw	2
  1116  026D  0638               	xorwf	Lcd_Set_Cursor@a,w
  1117  026E  1D03               	btfss	3,2
  1118  026F  2A71               	goto	u111
  1119  0270  2A72               	goto	u110
  1120  0271                     u111:
  1121  0271  2A7D               	goto	l158
  1122  0272                     u110:
  1123  0272                     l1079:
  1124                           
  1125                           ;LCD.c: 98:   temp = 0xC0 + b - 1;
  1126  0272  0836               	movf	Lcd_Set_Cursor@b,w
  1127  0273  3EBF               	addlw	191
  1128  0274  00B7               	movwf	??_Lcd_Set_Cursor
  1129  0275  0837               	movf	??_Lcd_Set_Cursor,w
  1130  0276  00B9               	movwf	Lcd_Set_Cursor@temp
  1131  0277                     l1081:
  1132                           
  1133                           ;LCD.c: 102:   Lcd_Cmd(temp);
  1134  0277  0839               	movf	Lcd_Set_Cursor@temp,w
  1135  0278  120A  118A  229B  120A  118A  	fcall	_Lcd_Cmd
  1136  027D                     l158:
  1137  027D  0008               	return
  1138  027E                     __end_of_Lcd_Set_Cursor:
  1139                           
  1140                           	psect	text5
  1141  02B7                     __ptext5:	
  1142 ;; *************** function _setup *****************
  1143 ;; Defined at:
  1144 ;;		line 193 in file "pseudocodigo_lab3.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1158 ;;      Params:         0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0
  1161 ;;      Totals:         0       0       0       0       0
  1162 ;;Total ram usage:        0 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    3
  1165 ;; This function calls:
  1166 ;;		_initOsc
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           
  1173                           ;psect for function _setup
  1174  02B7                     _setup:
  1175  02B7                     l1125:	
  1176                           ;incstack = 0
  1177                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1178                           
  1179                           
  1180                           ;pseudocodigo_lab3.c: 194:     initOsc(0b00000110);
  1181  02B7  3006               	movlw	6
  1182  02B8  120A  118A  214A  120A  118A  	fcall	_initOsc
  1183  02BD                     l1127:
  1184                           
  1185                           ;pseudocodigo_lab3.c: 195:     ANSEL = 0b00000011;
  1186  02BD  3003               	movlw	3
  1187  02BE  1683               	bsf	3,5	;RP0=1, select bank3
  1188  02BF  1703               	bsf	3,6	;RP1=1, select bank3
  1189  02C0  0088               	movwf	8	;volatile
  1190  02C1                     l1129:
  1191                           
  1192                           ;pseudocodigo_lab3.c: 196:     ANSELH = 0;
  1193  02C1  0189               	clrf	9	;volatile
  1194  02C2                     l1131:
  1195                           
  1196                           ;pseudocodigo_lab3.c: 197:     TRISA = 0b00000011;
  1197  02C2  3003               	movlw	3
  1198  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  1199  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  1200  02C5  0085               	movwf	5	;volatile
  1201  02C6                     l1133:
  1202                           
  1203                           ;pseudocodigo_lab3.c: 198:     TRISB = 0;
  1204  02C6  0186               	clrf	6	;volatile
  1205  02C7                     l1135:
  1206                           
  1207                           ;pseudocodigo_lab3.c: 199:     TRISC = 0;
  1208  02C7  0187               	clrf	7	;volatile
  1209  02C8                     l1137:
  1210                           
  1211                           ;pseudocodigo_lab3.c: 200:     TRISD = 0;
  1212  02C8  0188               	clrf	8	;volatile
  1213  02C9                     l1139:
  1214                           
  1215                           ;pseudocodigo_lab3.c: 201:     TRISE = 0;
  1216  02C9  0189               	clrf	9	;volatile
  1217  02CA                     l1141:
  1218                           
  1219                           ;pseudocodigo_lab3.c: 202:     PORTA = 0;
  1220  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1221  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1222  02CC  0185               	clrf	5	;volatile
  1223  02CD                     l1143:
  1224                           
  1225                           ;pseudocodigo_lab3.c: 203:     PORTB = 0;
  1226  02CD  0186               	clrf	6	;volatile
  1227  02CE                     l1145:
  1228                           
  1229                           ;pseudocodigo_lab3.c: 204:     PORTC = 0;
  1230  02CE  0187               	clrf	7	;volatile
  1231  02CF                     l1147:
  1232                           
  1233                           ;pseudocodigo_lab3.c: 205:     PORTD = 0;
  1234  02CF  0188               	clrf	8	;volatile
  1235  02D0                     l1149:
  1236                           
  1237                           ;pseudocodigo_lab3.c: 206:     PORTE = 0;
  1238  02D0  0189               	clrf	9	;volatile
  1239  02D1                     l111:
  1240  02D1  0008               	return
  1241  02D2                     __end_of_setup:
  1242                           
  1243                           	psect	text6
  1244  014A                     __ptext6:	
  1245 ;; *************** function _initOsc *****************
  1246 ;; Defined at:
  1247 ;;		line 3 in file "Oscilador.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  IRCF            1    wreg     unsigned char 
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  IRCF            1    2[BANK0 ] unsigned char 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1261 ;;      Params:         0       0       0       0       0
  1262 ;;      Locals:         0       1       0       0       0
  1263 ;;      Temps:          0       2       0       0       0
  1264 ;;      Totals:         0       3       0       0       0
  1265 ;;Total ram usage:        3 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    2
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_setup
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           
  1276                           ;psect for function _initOsc
  1277  014A                     _initOsc:
  1278                           
  1279                           ;incstack = 0
  1280                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1281                           ;initOsc@IRCF stored from wreg
  1282  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1283  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1284  014C  00B4               	movwf	initOsc@IRCF
  1285  014D                     l1091:
  1286                           
  1287                           ;Oscilador.c: 5:     switch(IRCF){
  1288  014D  2984               	goto	l1095
  1289  014E                     l120:	
  1290                           ;Oscilador.c: 6:         case 0:
  1291                           
  1292                           
  1293                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  1294  014E  1683               	bsf	3,5	;RP0=1, select bank1
  1295  014F  1303               	bcf	3,6	;RP1=0, select bank1
  1296  0150  130F               	bcf	15,6	;volatile
  1297                           
  1298                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  1299  0151  128F               	bcf	15,5	;volatile
  1300                           
  1301                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  1302  0152  120F               	bcf	15,4	;volatile
  1303                           
  1304                           ;Oscilador.c: 10:             break;
  1305  0153  29A6               	goto	l121
  1306  0154                     l122:	
  1307                           ;Oscilador.c: 11:          case 1:
  1308                           
  1309                           
  1310                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  1311  0154  1683               	bsf	3,5	;RP0=1, select bank1
  1312  0155  1303               	bcf	3,6	;RP1=0, select bank1
  1313  0156  130F               	bcf	15,6	;volatile
  1314                           
  1315                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  1316  0157  128F               	bcf	15,5	;volatile
  1317                           
  1318                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  1319  0158  160F               	bsf	15,4	;volatile
  1320                           
  1321                           ;Oscilador.c: 15:             break;
  1322  0159  29A6               	goto	l121
  1323  015A                     l123:	
  1324                           ;Oscilador.c: 16:         case 2:
  1325                           
  1326                           
  1327                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  1328  015A  1683               	bsf	3,5	;RP0=1, select bank1
  1329  015B  1303               	bcf	3,6	;RP1=0, select bank1
  1330  015C  130F               	bcf	15,6	;volatile
  1331                           
  1332                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  1333  015D  168F               	bsf	15,5	;volatile
  1334                           
  1335                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  1336  015E  120F               	bcf	15,4	;volatile
  1337                           
  1338                           ;Oscilador.c: 20:             break;
  1339  015F  29A6               	goto	l121
  1340  0160                     l124:	
  1341                           ;Oscilador.c: 21:         case 3:
  1342                           
  1343                           
  1344                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  1345  0160  1683               	bsf	3,5	;RP0=1, select bank1
  1346  0161  1303               	bcf	3,6	;RP1=0, select bank1
  1347  0162  130F               	bcf	15,6	;volatile
  1348                           
  1349                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  1350  0163  168F               	bsf	15,5	;volatile
  1351                           
  1352                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  1353  0164  160F               	bsf	15,4	;volatile
  1354                           
  1355                           ;Oscilador.c: 25:             break;
  1356  0165  29A6               	goto	l121
  1357  0166                     l125:	
  1358                           ;Oscilador.c: 26:         case 4:
  1359                           
  1360                           
  1361                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  1362  0166  1683               	bsf	3,5	;RP0=1, select bank1
  1363  0167  1303               	bcf	3,6	;RP1=0, select bank1
  1364  0168  170F               	bsf	15,6	;volatile
  1365                           
  1366                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  1367  0169  128F               	bcf	15,5	;volatile
  1368                           
  1369                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  1370  016A  120F               	bcf	15,4	;volatile
  1371                           
  1372                           ;Oscilador.c: 30:             break;
  1373  016B  29A6               	goto	l121
  1374  016C                     l126:	
  1375                           ;Oscilador.c: 31:         case 5:
  1376                           
  1377                           
  1378                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1379  016C  1683               	bsf	3,5	;RP0=1, select bank1
  1380  016D  1303               	bcf	3,6	;RP1=0, select bank1
  1381  016E  170F               	bsf	15,6	;volatile
  1382                           
  1383                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1384  016F  128F               	bcf	15,5	;volatile
  1385                           
  1386                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1387  0170  160F               	bsf	15,4	;volatile
  1388                           
  1389                           ;Oscilador.c: 35:             break;
  1390  0171  29A6               	goto	l121
  1391  0172                     l127:	
  1392                           ;Oscilador.c: 36:         case 6:
  1393                           
  1394                           
  1395                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1396  0172  1683               	bsf	3,5	;RP0=1, select bank1
  1397  0173  1303               	bcf	3,6	;RP1=0, select bank1
  1398  0174  170F               	bsf	15,6	;volatile
  1399                           
  1400                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1401  0175  168F               	bsf	15,5	;volatile
  1402                           
  1403                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1404  0176  120F               	bcf	15,4	;volatile
  1405                           
  1406                           ;Oscilador.c: 40:             break;
  1407  0177  29A6               	goto	l121
  1408  0178                     l128:	
  1409                           ;Oscilador.c: 41:         case 7:
  1410                           
  1411                           
  1412                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1413  0178  1683               	bsf	3,5	;RP0=1, select bank1
  1414  0179  1303               	bcf	3,6	;RP1=0, select bank1
  1415  017A  170F               	bsf	15,6	;volatile
  1416                           
  1417                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1418  017B  168F               	bsf	15,5	;volatile
  1419                           
  1420                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1421  017C  160F               	bsf	15,4	;volatile
  1422                           
  1423                           ;Oscilador.c: 45:             break;
  1424  017D  29A6               	goto	l121
  1425  017E                     l129:	
  1426                           ;Oscilador.c: 46:         default:
  1427                           
  1428                           
  1429                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1430  017E  1683               	bsf	3,5	;RP0=1, select bank1
  1431  017F  1303               	bcf	3,6	;RP1=0, select bank1
  1432  0180  170F               	bsf	15,6	;volatile
  1433                           
  1434                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1435  0181  168F               	bsf	15,5	;volatile
  1436                           
  1437                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1438  0182  120F               	bcf	15,4	;volatile
  1439                           
  1440                           ;Oscilador.c: 50:             break;
  1441  0183  29A6               	goto	l121
  1442  0184                     l1095:
  1443  0184  0834               	movf	initOsc@IRCF,w
  1444  0185  00B2               	movwf	??_initOsc
  1445  0186  01B3               	clrf	??_initOsc+1
  1446                           
  1447                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1448                           ; Switch size 1, requested type "simple"
  1449                           ; Number of cases is 1, Range of values is 0 to 0
  1450                           ; switch strategies available:
  1451                           ; Name         Instructions Cycles
  1452                           ; simple_byte            4     3 (average)
  1453                           ; direct_byte           11     8 (fixed)
  1454                           ; jumptable            260     6 (fixed)
  1455                           ;	Chosen strategy is simple_byte
  1456  0187  0833               	movf	??_initOsc+1,w
  1457  0188  3A00               	xorlw	0	; case 0
  1458  0189  1903               	skipnz
  1459  018A  298C               	goto	l1295
  1460  018B  297E               	goto	l129
  1461  018C                     l1295:
  1462                           
  1463                           ; Switch size 1, requested type "simple"
  1464                           ; Number of cases is 8, Range of values is 0 to 7
  1465                           ; switch strategies available:
  1466                           ; Name         Instructions Cycles
  1467                           ; simple_byte           25    13 (average)
  1468                           ; direct_byte           32     8 (fixed)
  1469                           ; jumptable            260     6 (fixed)
  1470                           ;	Chosen strategy is simple_byte
  1471  018C  0832               	movf	??_initOsc,w
  1472  018D  3A00               	xorlw	0	; case 0
  1473  018E  1903               	skipnz
  1474  018F  294E               	goto	l120
  1475  0190  3A01               	xorlw	1	; case 1
  1476  0191  1903               	skipnz
  1477  0192  2954               	goto	l122
  1478  0193  3A03               	xorlw	3	; case 2
  1479  0194  1903               	skipnz
  1480  0195  295A               	goto	l123
  1481  0196  3A01               	xorlw	1	; case 3
  1482  0197  1903               	skipnz
  1483  0198  2960               	goto	l124
  1484  0199  3A07               	xorlw	7	; case 4
  1485  019A  1903               	skipnz
  1486  019B  2966               	goto	l125
  1487  019C  3A01               	xorlw	1	; case 5
  1488  019D  1903               	skipnz
  1489  019E  296C               	goto	l126
  1490  019F  3A03               	xorlw	3	; case 6
  1491  01A0  1903               	skipnz
  1492  01A1  2972               	goto	l127
  1493  01A2  3A01               	xorlw	1	; case 7
  1494  01A3  1903               	skipnz
  1495  01A4  2978               	goto	l128
  1496  01A5  297E               	goto	l129
  1497  01A6                     l121:
  1498                           
  1499                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1500  01A6  140F               	bsf	15,0	;volatile
  1501  01A7                     l130:
  1502  01A7  0008               	return
  1503  01A8                     __end_of_initOsc:
  1504                           
  1505                           	psect	text7
  1506  01A8                     __ptext7:	
  1507 ;; *************** function _Lcd_Init *****************
  1508 ;; Defined at:
  1509 ;;		line 14 in file "LCD.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;		None
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0, pclath, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1523 ;;      Params:         0       0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0
  1525 ;;      Temps:          0       2       0       0       0
  1526 ;;      Totals:         0       2       0       0       0
  1527 ;;Total ram usage:        2 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; Hardware stack levels required when called:    4
  1530 ;; This function calls:
  1531 ;;		_Lcd_Cmd
  1532 ;;		_Lcd_Port
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           
  1539                           ;psect for function _Lcd_Init
  1540  01A8                     _Lcd_Init:
  1541  01A8                     l1157:	
  1542                           ;incstack = 0
  1543                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1544                           
  1545                           
  1546                           ;LCD.c: 15:   Lcd_Port(0x00);
  1547  01A8  3000               	movlw	0
  1548  01A9  120A  118A  2334  120A  118A  	fcall	_Lcd_Port
  1549  01AE                     l1159:
  1550                           
  1551                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1552  01AE  3034               	movlw	52
  1553  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1554  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1555  01B1  00B7               	movwf	??_Lcd_Init+1
  1556  01B2  30F1               	movlw	241
  1557  01B3  00B6               	movwf	??_Lcd_Init
  1558  01B4                     u207:
  1559  01B4  0BB6               	decfsz	??_Lcd_Init,f
  1560  01B5  29B4               	goto	u207
  1561  01B6  0BB7               	decfsz	??_Lcd_Init+1,f
  1562  01B7  29B4               	goto	u207
  1563  01B8                     l1161:
  1564                           
  1565                           ;LCD.c: 17:   Lcd_Cmd(0x030);
  1566  01B8  3030               	movlw	48
  1567  01B9  120A  118A  229B  120A  118A  	fcall	_Lcd_Cmd
  1568                           
  1569                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1570  01BE  300D               	movlw	13
  1571  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1572  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1573  01C1  00B7               	movwf	??_Lcd_Init+1
  1574  01C2  30FB               	movlw	251
  1575  01C3  00B6               	movwf	??_Lcd_Init
  1576  01C4                     u217:
  1577  01C4  0BB6               	decfsz	??_Lcd_Init,f
  1578  01C5  29C4               	goto	u217
  1579  01C6  0BB7               	decfsz	??_Lcd_Init+1,f
  1580  01C7  29C4               	goto	u217
  1581  01C8                     l1163:
  1582                           
  1583                           ;LCD.c: 19:   Lcd_Cmd(0x030);
  1584  01C8  3030               	movlw	48
  1585  01C9  120A  118A  229B  120A  118A  	fcall	_Lcd_Cmd
  1586  01CE                     l1165:
  1587                           
  1588                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1589  01CE  301D               	movlw	29
  1590  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1591  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1592  01D1  00B7               	movwf	??_Lcd_Init+1
  1593  01D2  3090               	movlw	144
  1594  01D3  00B6               	movwf	??_Lcd_Init
  1595  01D4                     u227:
  1596  01D4  0BB6               	decfsz	??_Lcd_Init,f
  1597  01D5  29D4               	goto	u227
  1598  01D6  0BB7               	decfsz	??_Lcd_Init+1,f
  1599  01D7  29D4               	goto	u227
  1600  01D8  0000               	nop
  1601                           
  1602                           ;LCD.c: 21:   Lcd_Cmd(0x030);
  1603  01D9  3030               	movlw	48
  1604  01DA  120A  118A  229B  120A  118A  	fcall	_Lcd_Cmd
  1605                           
  1606                           ;LCD.c: 22:   Lcd_Cmd(0x038);
  1607  01DF  3038               	movlw	56
  1608  01E0  120A  118A  229B  120A  118A  	fcall	_Lcd_Cmd
  1609                           
  1610                           ;LCD.c: 23:   Lcd_Cmd(0x00C);
  1611  01E5  300C               	movlw	12
  1612  01E6  120A  118A  229B  120A  118A  	fcall	_Lcd_Cmd
  1613                           
  1614                           ;LCD.c: 24:   Lcd_Cmd(0x001);
  1615  01EB  3001               	movlw	1
  1616  01EC  120A  118A  229B  120A  118A  	fcall	_Lcd_Cmd
  1617                           
  1618                           ;LCD.c: 25:   Lcd_Cmd(0x006);
  1619  01F1  3006               	movlw	6
  1620  01F2  120A  118A  229B  120A  118A  	fcall	_Lcd_Cmd
  1621  01F7                     l143:
  1622  01F7  0008               	return
  1623  01F8                     __end_of_Lcd_Init:
  1624                           
  1625                           	psect	text8
  1626  029B                     __ptext8:	
  1627 ;; *************** function _Lcd_Cmd *****************
  1628 ;; Defined at:
  1629 ;;		line 73 in file "LCD.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  a               1    wreg     unsigned char 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  a               1    3[BANK0 ] unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, status,0, pclath, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1643 ;;      Params:         0       0       0       0       0
  1644 ;;      Locals:         0       1       0       0       0
  1645 ;;      Temps:          0       2       0       0       0
  1646 ;;      Totals:         0       3       0       0       0
  1647 ;;Total ram usage:        3 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    3
  1650 ;; This function calls:
  1651 ;;		_Lcd_Port
  1652 ;; This function is called by:
  1653 ;;		_Lcd_Init
  1654 ;;		_Lcd_Set_Cursor
  1655 ;;		_Lcd_Clear
  1656 ;;		_Lcd_Shift_Right
  1657 ;;		_Lcd_Shift_Left
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function _Lcd_Cmd
  1663  029B                     _Lcd_Cmd:
  1664                           
  1665                           ;incstack = 0
  1666                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1667                           ;Lcd_Cmd@a stored from wreg
  1668  029B  1283               	bcf	3,5	;RP0=0, select bank0
  1669  029C  1303               	bcf	3,6	;RP1=0, select bank0
  1670  029D  00B5               	movwf	Lcd_Cmd@a
  1671  029E                     l1051:
  1672                           
  1673                           ;LCD.c: 74:  PORTEbits.RE0 = 0;
  1674  029E  1009               	bcf	9,0	;volatile
  1675  029F                     l1053:
  1676                           
  1677                           ;LCD.c: 75:  Lcd_Port(a);
  1678  029F  0835               	movf	Lcd_Cmd@a,w
  1679  02A0  120A  118A  2334  120A  118A  	fcall	_Lcd_Port
  1680  02A5                     l1055:
  1681                           
  1682                           ;LCD.c: 76:  PORTEbits.RE2 = 1;
  1683  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  1684  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  1685  02A7  1509               	bsf	9,2	;volatile
  1686  02A8                     l1057:
  1687                           
  1688                           ;LCD.c: 77:         _delay((unsigned long)((4)*(8000000/4000.0)));
  1689  02A8  300B               	movlw	11
  1690  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1691  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1692  02AB  00B4               	movwf	??_Lcd_Cmd+1
  1693  02AC  3061               	movlw	97
  1694  02AD  00B3               	movwf	??_Lcd_Cmd
  1695  02AE                     u237:
  1696  02AE  0BB3               	decfsz	??_Lcd_Cmd,f
  1697  02AF  2AAE               	goto	u237
  1698  02B0  0BB4               	decfsz	??_Lcd_Cmd+1,f
  1699  02B1  2AAE               	goto	u237
  1700  02B2  2AB3               	nop2
  1701  02B3                     l1059:
  1702                           
  1703                           ;LCD.c: 78:         PORTEbits.RE2 = 0;
  1704  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1705  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1706  02B5  1109               	bcf	9,2	;volatile
  1707  02B6                     l149:
  1708  02B6  0008               	return
  1709  02B7                     __end_of_Lcd_Cmd:
  1710                           
  1711                           	psect	text9
  1712  0334                     __ptext9:	
  1713 ;; *************** function _Lcd_Port *****************
  1714 ;; Defined at:
  1715 ;;		line 29 in file "LCD.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  a               1    wreg     unsigned char 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  a               1    0[BANK0 ] unsigned char 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1729 ;;      Params:         0       0       0       0       0
  1730 ;;      Locals:         0       1       0       0       0
  1731 ;;      Temps:          0       0       0       0       0
  1732 ;;      Totals:         0       1       0       0       0
  1733 ;;Total ram usage:        1 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    2
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_Lcd_Init
  1740 ;;		_Lcd_Cmd
  1741 ;;		_Lcd_Write_Char
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           
  1746                           ;psect for function _Lcd_Port
  1747  0334                     _Lcd_Port:
  1748                           
  1749                           ;incstack = 0
  1750                           ; Regs used in _Lcd_Port: [wreg]
  1751                           ;Lcd_Port@a stored from wreg
  1752  0334  1283               	bcf	3,5	;RP0=0, select bank0
  1753  0335  1303               	bcf	3,6	;RP1=0, select bank0
  1754  0336  00B2               	movwf	Lcd_Port@a
  1755  0337                     l1049:
  1756                           
  1757                           ;LCD.c: 30:     PORTD = a;
  1758  0337  0832               	movf	Lcd_Port@a,w
  1759  0338  0088               	movwf	8	;volatile
  1760  0339                     l146:
  1761  0339  0008               	return
  1762  033A                     __end_of_Lcd_Port:
  1763                           
  1764                           	psect	text10
  1765  0323                     __ptext10:	
  1766 ;; *************** function _Config_INTERRUPT *****************
  1767 ;; Defined at:
  1768 ;;		line 211 in file "pseudocodigo_lab3.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1782 ;;      Params:         0       0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0
  1785 ;;      Totals:         0       0       0       0       0
  1786 ;;Total ram usage:        0 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    2
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _Config_INTERRUPT
  1798  0323                     _Config_INTERRUPT:
  1799  0323                     l1151:	
  1800                           ;incstack = 0
  1801                           ; Regs used in _Config_INTERRUPT: [wreg]
  1802                           
  1803                           
  1804                           ;pseudocodigo_lab3.c: 212:     INTCON = 0b11000001;
  1805  0323  30C1               	movlw	193
  1806  0324  008B               	movwf	11	;volatile
  1807  0325                     l1153:
  1808                           
  1809                           ;pseudocodigo_lab3.c: 213:     PIE1bits.ADIE = 1;
  1810  0325  1683               	bsf	3,5	;RP0=1, select bank1
  1811  0326  1303               	bcf	3,6	;RP1=0, select bank1
  1812  0327  170C               	bsf	12,6	;volatile
  1813  0328                     l1155:
  1814                           
  1815                           ;pseudocodigo_lab3.c: 214:     PIR1bits.ADIF = 1;
  1816  0328  1283               	bcf	3,5	;RP0=0, select bank0
  1817  0329  1303               	bcf	3,6	;RP1=0, select bank0
  1818  032A  170C               	bsf	12,6	;volatile
  1819  032B                     l114:
  1820  032B  0008               	return
  1821  032C                     __end_of_Config_INTERRUPT:
  1822                           
  1823                           	psect	text11
  1824  02D2                     __ptext11:	
  1825 ;; *************** function _CONVERSION_ADC *****************
  1826 ;; Defined at:
  1827 ;;		line 149 in file "pseudocodigo_lab3.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, status,2, status,0
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1841 ;;      Params:         0       0       0       0       0
  1842 ;;      Locals:         0       0       0       0       0
  1843 ;;      Temps:          0       0       0       0       0
  1844 ;;      Totals:         0       0       0       0       0
  1845 ;;Total ram usage:        0 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    2
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           
  1856                           ;psect for function _CONVERSION_ADC
  1857  02D2                     _CONVERSION_ADC:
  1858  02D2                     l1177:	
  1859                           ;incstack = 0
  1860                           ; Regs used in _CONVERSION_ADC: [wreg+status,2+status,0]
  1861                           
  1862                           
  1863                           ;pseudocodigo_lab3.c: 150:     if (ADC_flag1 == 1){
  1864  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1865  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1866  02D4  032A               	decf	_ADC_flag1,w
  1867  02D5  042B               	iorwf	_ADC_flag1+1,w
  1868  02D6  1D03               	btfss	3,2
  1869  02D7  2AD9               	goto	u131
  1870  02D8  2ADA               	goto	u130
  1871  02D9                     u131:
  1872  02D9  2AE0               	goto	l1185
  1873  02DA                     u130:
  1874  02DA                     l1179:
  1875                           
  1876                           ;pseudocodigo_lab3.c: 152:         ADC_flag1 = 0;
  1877  02DA  01AA               	clrf	_ADC_flag1
  1878  02DB  01AB               	clrf	_ADC_flag1+1
  1879  02DC                     l1181:
  1880                           
  1881                           ;pseudocodigo_lab3.c: 153:         PORTB = ADC_VALOR_1;
  1882  02DC  087A               	movf	_ADC_VALOR_1,w
  1883  02DD  0086               	movwf	6	;volatile
  1884  02DE                     l1183:
  1885                           
  1886                           ;pseudocodigo_lab3.c: 154:         PIR1bits.ADIF = 1;
  1887  02DE  170C               	bsf	12,6	;volatile
  1888                           
  1889                           ;pseudocodigo_lab3.c: 155:     }
  1890  02DF  2AEB               	goto	l102
  1891  02E0                     l1185:
  1892  02E0  0328               	decf	_ADC_flag2,w
  1893  02E1  0429               	iorwf	_ADC_flag2+1,w
  1894  02E2  1D03               	btfss	3,2
  1895  02E3  2AE5               	goto	u141
  1896  02E4  2AE6               	goto	u140
  1897  02E5                     u141:
  1898  02E5  2AEB               	goto	l102
  1899  02E6                     u140:
  1900  02E6                     l1187:
  1901                           
  1902                           ;pseudocodigo_lab3.c: 158:         ADC_flag2 = 0;
  1903  02E6  01A8               	clrf	_ADC_flag2
  1904  02E7  01A9               	clrf	_ADC_flag2+1
  1905  02E8                     l1189:
  1906                           
  1907                           ;pseudocodigo_lab3.c: 159:         PORTC = ADC_VALOR_2;
  1908  02E8  0878               	movf	_ADC_VALOR_2,w
  1909  02E9  0087               	movwf	7	;volatile
  1910  02EA                     l1191:
  1911                           
  1912                           ;pseudocodigo_lab3.c: 160:         PIR1bits.ADIF = 1;
  1913  02EA  170C               	bsf	12,6	;volatile
  1914  02EB                     l102:
  1915  02EB  0008               	return
  1916  02EC                     __end_of_CONVERSION_ADC:
  1917                           
  1918                           	psect	text12
  1919  00E0                     __ptext12:	
  1920 ;; *************** function _ISR *****************
  1921 ;; Defined at:
  1922 ;;		line 87 in file "pseudocodigo_lab3.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0
  1938 ;;      Temps:          5       0       0       0       0
  1939 ;;      Totals:         5       0       0       0       0
  1940 ;;Total ram usage:        5 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    1
  1943 ;; This function calls:
  1944 ;;		_ADC
  1945 ;;		_ADC_Config
  1946 ;; This function is called by:
  1947 ;;		Interrupt level 1
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           
  1952                           ;psect for function _ISR
  1953  00E0                     _ISR:
  1954  00E0                     i1l1193:
  1955                           
  1956                           ;pseudocodigo_lab3.c: 90:     if (PIR1bits.ADIF) {
  1957  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1958  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1959  00E2  1F0C               	btfss	12,6	;volatile
  1960  00E3  28E5               	goto	u15_21
  1961  00E4  28E6               	goto	u15_20
  1962  00E5                     u15_21:
  1963  00E5  2941               	goto	i1l88
  1964  00E6                     u15_20:
  1965  00E6                     i1l1195:
  1966                           
  1967                           ;pseudocodigo_lab3.c: 92:         ADC_Config (0);
  1968  00E6  3000               	movlw	0
  1969  00E7  120A  118A  2024  120A  118A  	fcall	_ADC_Config
  1970  00EC                     i1l1197:
  1971                           
  1972                           ;pseudocodigo_lab3.c: 93:         _delay((unsigned long)((2)*(8000000/4000.0)));
  1973  00EC  3006               	movlw	6
  1974  00ED  00F4               	movwf	??_ISR+1
  1975  00EE  3030               	movlw	48
  1976  00EF  00F3               	movwf	??_ISR
  1977  00F0                     u24_27:
  1978  00F0  0BF3               	decfsz	??_ISR,f
  1979  00F1  28F0               	goto	u24_27
  1980  00F2  0BF4               	decfsz	??_ISR+1,f
  1981  00F3  28F0               	goto	u24_27
  1982  00F4  0000               	nop
  1983  00F5                     i1l1199:
  1984                           
  1985                           ;pseudocodigo_lab3.c: 94:         ADCON0bits.GO = 1;
  1986  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1987  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1988  00F7  149F               	bsf	31,1	;volatile
  1989                           
  1990                           ;pseudocodigo_lab3.c: 95:         while (ADCON0bits.GO != 0) {
  1991  00F8  290F               	goto	i1l1205
  1992  00F9                     i1l1201:
  1993                           
  1994                           ;pseudocodigo_lab3.c: 96:             ADC_VALOR_1 = ADC(ADRESL, ADRESH);
  1995  00F9  081E               	movf	30,w	;volatile
  1996  00FA  00F3               	movwf	??_ISR
  1997  00FB  0873               	movf	??_ISR,w
  1998  00FC  00F0               	movwf	ADC@ADRESH_
  1999  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  2000  00FE  1303               	bcf	3,6	;RP1=0, select bank1
  2001  00FF  081E               	movf	30,w	;volatile
  2002  0100  120A  118A  2316  120A  118A  	fcall	_ADC
  2003  0105  0871               	movf	?_ADC+1,w
  2004  0106  00FB               	movwf	_ADC_VALOR_1+1
  2005  0107  0870               	movf	?_ADC,w
  2006  0108  00FA               	movwf	_ADC_VALOR_1
  2007  0109                     i1l1203:
  2008                           
  2009                           ;pseudocodigo_lab3.c: 97:             ADC_flag1 = 1;
  2010  0109  3001               	movlw	1
  2011  010A  1283               	bcf	3,5	;RP0=0, select bank0
  2012  010B  1303               	bcf	3,6	;RP1=0, select bank0
  2013  010C  00AA               	movwf	_ADC_flag1
  2014  010D  3000               	movlw	0
  2015  010E  00AB               	movwf	_ADC_flag1+1
  2016  010F                     i1l1205:
  2017                           
  2018                           ;pseudocodigo_lab3.c: 95:         while (ADCON0bits.GO != 0) {
  2019  010F  189F               	btfsc	31,1	;volatile
  2020  0110  2912               	goto	u16_21
  2021  0111  2913               	goto	u16_20
  2022  0112                     u16_21:
  2023  0112  28F9               	goto	i1l1201
  2024  0113                     u16_20:
  2025  0113                     i1l1207:
  2026                           
  2027                           ;pseudocodigo_lab3.c: 101:         ADC_Config (1);
  2028  0113  3001               	movlw	1
  2029  0114  120A  118A  2024  120A  118A  	fcall	_ADC_Config
  2030  0119                     i1l1209:
  2031                           
  2032                           ;pseudocodigo_lab3.c: 102:         _delay((unsigned long)((2)*(8000000/4000.0)));
  2033  0119  3006               	movlw	6
  2034  011A  00F4               	movwf	??_ISR+1
  2035  011B  3030               	movlw	48
  2036  011C  00F3               	movwf	??_ISR
  2037  011D                     u25_27:
  2038  011D  0BF3               	decfsz	??_ISR,f
  2039  011E  291D               	goto	u25_27
  2040  011F  0BF4               	decfsz	??_ISR+1,f
  2041  0120  291D               	goto	u25_27
  2042  0121  0000               	nop
  2043  0122                     i1l1211:
  2044                           
  2045                           ;pseudocodigo_lab3.c: 103:         ADCON0bits.GO = 1;
  2046  0122  1283               	bcf	3,5	;RP0=0, select bank0
  2047  0123  1303               	bcf	3,6	;RP1=0, select bank0
  2048  0124  149F               	bsf	31,1	;volatile
  2049                           
  2050                           ;pseudocodigo_lab3.c: 104:         while (ADCON0bits.GO != 0) {
  2051  0125  293C               	goto	i1l1217
  2052  0126                     i1l1213:
  2053                           
  2054                           ;pseudocodigo_lab3.c: 105:             ADC_VALOR_2 = ADC(ADRESL, ADRESH);
  2055  0126  081E               	movf	30,w	;volatile
  2056  0127  00F3               	movwf	??_ISR
  2057  0128  0873               	movf	??_ISR,w
  2058  0129  00F0               	movwf	ADC@ADRESH_
  2059  012A  1683               	bsf	3,5	;RP0=1, select bank1
  2060  012B  1303               	bcf	3,6	;RP1=0, select bank1
  2061  012C  081E               	movf	30,w	;volatile
  2062  012D  120A  118A  2316  120A  118A  	fcall	_ADC
  2063  0132  0871               	movf	?_ADC+1,w
  2064  0133  00F9               	movwf	_ADC_VALOR_2+1
  2065  0134  0870               	movf	?_ADC,w
  2066  0135  00F8               	movwf	_ADC_VALOR_2
  2067  0136                     i1l1215:
  2068                           
  2069                           ;pseudocodigo_lab3.c: 106:             ADC_flag2 = 1;
  2070  0136  3001               	movlw	1
  2071  0137  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0138  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0139  00A8               	movwf	_ADC_flag2
  2074  013A  3000               	movlw	0
  2075  013B  00A9               	movwf	_ADC_flag2+1
  2076  013C                     i1l1217:
  2077                           
  2078                           ;pseudocodigo_lab3.c: 104:         while (ADCON0bits.GO != 0) {
  2079  013C  189F               	btfsc	31,1	;volatile
  2080  013D  293F               	goto	u17_21
  2081  013E  2940               	goto	u17_20
  2082  013F                     u17_21:
  2083  013F  2926               	goto	i1l1213
  2084  0140                     u17_20:
  2085  0140                     i1l87:
  2086                           
  2087                           ;pseudocodigo_lab3.c: 108:         PIR1bits.ADIF = 0;
  2088  0140  130C               	bcf	12,6	;volatile
  2089  0141                     i1l88:
  2090  0141  0877               	movf	??_ISR+4,w
  2091  0142  008A               	movwf	10
  2092  0143  0876               	movf	??_ISR+3,w
  2093  0144  0084               	movwf	4
  2094  0145  0E75               	swapf	??_ISR+2,w
  2095  0146  0083               	movwf	3
  2096  0147  0EFE               	swapf	btemp,f
  2097  0148  0E7E               	swapf	btemp,w
  2098  0149  0009               	retfie
  2099  014A                     __end_of_ISR:
  2100                           
  2101                           	psect	intentry
  2102  0004                     __pintentry:	
  2103                           ;incstack = 0
  2104                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2105                           
  2106  0004                     interrupt_function:
  2107  007E                     saved_w	set	btemp
  2108  0004  00FE               	movwf	btemp
  2109  0005  0E03               	swapf	3,w
  2110  0006  00F5               	movwf	??_ISR+2
  2111  0007  0804               	movf	4,w
  2112  0008  00F6               	movwf	??_ISR+3
  2113  0009  080A               	movf	10,w
  2114  000A  00F7               	movwf	??_ISR+4
  2115  000B  120A  118A  28E0   	ljmp	_ISR
  2116                           
  2117                           	psect	text13
  2118  0024                     __ptext13:	
  2119 ;; *************** function _ADC_Config *****************
  2120 ;; Defined at:
  2121 ;;		line 31 in file "Config_ADC.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  AN_num          1    wreg     unsigned char 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  AN_num          1    2[COMMON] unsigned char 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         0       0       0       0       0
  2136 ;;      Locals:         1       0       0       0       0
  2137 ;;      Temps:          2       0       0       0       0
  2138 ;;      Totals:         3       0       0       0       0
  2139 ;;Total ram usage:        3 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_ISR
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           
  2149                           ;psect for function _ADC_Config
  2150  0024                     _ADC_Config:
  2151                           
  2152                           ;incstack = 0
  2153                           ; Regs used in _ADC_Config: [wreg-fsr0h+status,2+status,0]
  2154                           ;ADC_Config@AN_num stored from wreg
  2155  0024  00F2               	movwf	ADC_Config@AN_num
  2156  0025                     i1l1103:
  2157                           
  2158                           ;Config_ADC.c: 33:     switch(AN_num){
  2159  0025  289D               	goto	i1l1107
  2160  0026                     i1l205:	
  2161                           ;Config_ADC.c: 34:         case 0:
  2162                           
  2163                           
  2164                           ;Config_ADC.c: 35:             ADCON0bits.CHS3 = 0;
  2165  0026  1283               	bcf	3,5	;RP0=0, select bank0
  2166  0027  1303               	bcf	3,6	;RP1=0, select bank0
  2167  0028  129F               	bcf	31,5	;volatile
  2168                           
  2169                           ;Config_ADC.c: 36:             ADCON0bits.CHS2 = 0;
  2170  0029  121F               	bcf	31,4	;volatile
  2171                           
  2172                           ;Config_ADC.c: 37:             ADCON0bits.CHS1 = 0;
  2173  002A  119F               	bcf	31,3	;volatile
  2174                           
  2175                           ;Config_ADC.c: 38:             ADCON0bits.CHS0 = 0;
  2176  002B  111F               	bcf	31,2	;volatile
  2177                           
  2178                           ;Config_ADC.c: 39:             break;
  2179  002C  28D7               	goto	i1l1109
  2180  002D                     i1l207:	
  2181                           ;Config_ADC.c: 40:         case 1:
  2182                           
  2183                           
  2184                           ;Config_ADC.c: 41:             ADCON0bits.CHS3 = 0;
  2185  002D  1283               	bcf	3,5	;RP0=0, select bank0
  2186  002E  1303               	bcf	3,6	;RP1=0, select bank0
  2187  002F  129F               	bcf	31,5	;volatile
  2188                           
  2189                           ;Config_ADC.c: 42:             ADCON0bits.CHS2 = 0;
  2190  0030  121F               	bcf	31,4	;volatile
  2191                           
  2192                           ;Config_ADC.c: 43:             ADCON0bits.CHS1 = 0;
  2193  0031  119F               	bcf	31,3	;volatile
  2194                           
  2195                           ;Config_ADC.c: 44:             ADCON0bits.CHS0 = 1;
  2196  0032  151F               	bsf	31,2	;volatile
  2197                           
  2198                           ;Config_ADC.c: 45:             break;
  2199  0033  28D7               	goto	i1l1109
  2200  0034                     i1l208:	
  2201                           ;Config_ADC.c: 46:         case 2:
  2202                           
  2203                           
  2204                           ;Config_ADC.c: 47:             ADCON0bits.CHS3 = 0;
  2205  0034  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0035  1303               	bcf	3,6	;RP1=0, select bank0
  2207  0036  129F               	bcf	31,5	;volatile
  2208                           
  2209                           ;Config_ADC.c: 48:             ADCON0bits.CHS2 = 0;
  2210  0037  121F               	bcf	31,4	;volatile
  2211                           
  2212                           ;Config_ADC.c: 49:             ADCON0bits.CHS1 = 1;
  2213  0038  159F               	bsf	31,3	;volatile
  2214                           
  2215                           ;Config_ADC.c: 50:             ADCON0bits.CHS0 = 0;
  2216  0039  111F               	bcf	31,2	;volatile
  2217                           
  2218                           ;Config_ADC.c: 51:             break;
  2219  003A  28D7               	goto	i1l1109
  2220  003B                     i1l209:	
  2221                           ;Config_ADC.c: 52:         case 3:
  2222                           
  2223                           
  2224                           ;Config_ADC.c: 53:             ADCON0bits.CHS3 = 0;
  2225  003B  1283               	bcf	3,5	;RP0=0, select bank0
  2226  003C  1303               	bcf	3,6	;RP1=0, select bank0
  2227  003D  129F               	bcf	31,5	;volatile
  2228                           
  2229                           ;Config_ADC.c: 54:             ADCON0bits.CHS2 = 0;
  2230  003E  121F               	bcf	31,4	;volatile
  2231                           
  2232                           ;Config_ADC.c: 55:             ADCON0bits.CHS1 = 1;
  2233  003F  159F               	bsf	31,3	;volatile
  2234                           
  2235                           ;Config_ADC.c: 56:             ADCON0bits.CHS0 = 1;
  2236  0040  151F               	bsf	31,2	;volatile
  2237                           
  2238                           ;Config_ADC.c: 57:             break;
  2239  0041  28D7               	goto	i1l1109
  2240  0042                     i1l210:	
  2241                           ;Config_ADC.c: 58:         case 4:
  2242                           
  2243                           
  2244                           ;Config_ADC.c: 59:             ADCON0bits.CHS3 = 0;
  2245  0042  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0043  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0044  129F               	bcf	31,5	;volatile
  2248                           
  2249                           ;Config_ADC.c: 60:             ADCON0bits.CHS2 = 1;
  2250  0045  161F               	bsf	31,4	;volatile
  2251                           
  2252                           ;Config_ADC.c: 61:             ADCON0bits.CHS1 = 0;
  2253  0046  119F               	bcf	31,3	;volatile
  2254                           
  2255                           ;Config_ADC.c: 62:             ADCON0bits.CHS0 = 0;
  2256  0047  111F               	bcf	31,2	;volatile
  2257                           
  2258                           ;Config_ADC.c: 63:             break;
  2259  0048  28D7               	goto	i1l1109
  2260  0049                     i1l211:	
  2261                           ;Config_ADC.c: 64:         case 5:
  2262                           
  2263                           
  2264                           ;Config_ADC.c: 65:             ADCON0bits.CHS3 = 0;
  2265  0049  1283               	bcf	3,5	;RP0=0, select bank0
  2266  004A  1303               	bcf	3,6	;RP1=0, select bank0
  2267  004B  129F               	bcf	31,5	;volatile
  2268                           
  2269                           ;Config_ADC.c: 66:             ADCON0bits.CHS2 = 1;
  2270  004C  161F               	bsf	31,4	;volatile
  2271                           
  2272                           ;Config_ADC.c: 67:             ADCON0bits.CHS1 = 0;
  2273  004D  119F               	bcf	31,3	;volatile
  2274                           
  2275                           ;Config_ADC.c: 68:             ADCON0bits.CHS0 = 1;
  2276  004E  151F               	bsf	31,2	;volatile
  2277                           
  2278                           ;Config_ADC.c: 69:             break;
  2279  004F  28D7               	goto	i1l1109
  2280  0050                     i1l212:	
  2281                           ;Config_ADC.c: 70:         case 6:
  2282                           
  2283                           
  2284                           ;Config_ADC.c: 71:             ADCON0bits.CHS3 = 0;
  2285  0050  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0051  1303               	bcf	3,6	;RP1=0, select bank0
  2287  0052  129F               	bcf	31,5	;volatile
  2288                           
  2289                           ;Config_ADC.c: 72:             ADCON0bits.CHS2 = 1;
  2290  0053  161F               	bsf	31,4	;volatile
  2291                           
  2292                           ;Config_ADC.c: 73:             ADCON0bits.CHS1 = 1;
  2293  0054  159F               	bsf	31,3	;volatile
  2294                           
  2295                           ;Config_ADC.c: 74:             ADCON0bits.CHS0 = 0;
  2296  0055  111F               	bcf	31,2	;volatile
  2297                           
  2298                           ;Config_ADC.c: 75:             break;
  2299  0056  28D7               	goto	i1l1109
  2300  0057                     i1l213:	
  2301                           ;Config_ADC.c: 76:         case 7:
  2302                           
  2303                           
  2304                           ;Config_ADC.c: 77:             ADCON0bits.CHS3 = 0;
  2305  0057  1283               	bcf	3,5	;RP0=0, select bank0
  2306  0058  1303               	bcf	3,6	;RP1=0, select bank0
  2307  0059  129F               	bcf	31,5	;volatile
  2308                           
  2309                           ;Config_ADC.c: 78:             ADCON0bits.CHS2 = 1;
  2310  005A  161F               	bsf	31,4	;volatile
  2311                           
  2312                           ;Config_ADC.c: 79:             ADCON0bits.CHS1 = 1;
  2313  005B  159F               	bsf	31,3	;volatile
  2314                           
  2315                           ;Config_ADC.c: 80:             ADCON0bits.CHS0 = 1;
  2316  005C  151F               	bsf	31,2	;volatile
  2317                           
  2318                           ;Config_ADC.c: 81:             break;
  2319  005D  28D7               	goto	i1l1109
  2320  005E                     i1l214:	
  2321                           ;Config_ADC.c: 82:         case 8:
  2322                           
  2323                           
  2324                           ;Config_ADC.c: 83:             ADCON0bits.CHS3 = 1;
  2325  005E  1283               	bcf	3,5	;RP0=0, select bank0
  2326  005F  1303               	bcf	3,6	;RP1=0, select bank0
  2327  0060  169F               	bsf	31,5	;volatile
  2328                           
  2329                           ;Config_ADC.c: 84:             ADCON0bits.CHS2 = 0;
  2330  0061  121F               	bcf	31,4	;volatile
  2331                           
  2332                           ;Config_ADC.c: 85:             ADCON0bits.CHS1 = 0;
  2333  0062  119F               	bcf	31,3	;volatile
  2334                           
  2335                           ;Config_ADC.c: 86:             ADCON0bits.CHS0 = 0;
  2336  0063  111F               	bcf	31,2	;volatile
  2337                           
  2338                           ;Config_ADC.c: 87:             break;
  2339  0064  28D7               	goto	i1l1109
  2340  0065                     i1l215:	
  2341                           ;Config_ADC.c: 88:         case 9:
  2342                           
  2343                           
  2344                           ;Config_ADC.c: 89:             ADCON0bits.CHS3 = 1;
  2345  0065  1283               	bcf	3,5	;RP0=0, select bank0
  2346  0066  1303               	bcf	3,6	;RP1=0, select bank0
  2347  0067  169F               	bsf	31,5	;volatile
  2348                           
  2349                           ;Config_ADC.c: 90:             ADCON0bits.CHS2 = 0;
  2350  0068  121F               	bcf	31,4	;volatile
  2351                           
  2352                           ;Config_ADC.c: 91:             ADCON0bits.CHS1 = 0;
  2353  0069  119F               	bcf	31,3	;volatile
  2354                           
  2355                           ;Config_ADC.c: 92:             ADCON0bits.CHS0 = 1;
  2356  006A  151F               	bsf	31,2	;volatile
  2357                           
  2358                           ;Config_ADC.c: 93:             break;
  2359  006B  28D7               	goto	i1l1109
  2360  006C                     i1l216:	
  2361                           ;Config_ADC.c: 94:         case 10:
  2362                           
  2363                           
  2364                           ;Config_ADC.c: 95:             ADCON0bits.CHS3 = 1;
  2365  006C  1283               	bcf	3,5	;RP0=0, select bank0
  2366  006D  1303               	bcf	3,6	;RP1=0, select bank0
  2367  006E  169F               	bsf	31,5	;volatile
  2368                           
  2369                           ;Config_ADC.c: 96:             ADCON0bits.CHS2 = 0;
  2370  006F  121F               	bcf	31,4	;volatile
  2371                           
  2372                           ;Config_ADC.c: 97:             ADCON0bits.CHS1 = 1;
  2373  0070  159F               	bsf	31,3	;volatile
  2374                           
  2375                           ;Config_ADC.c: 98:             ADCON0bits.CHS0 = 0;
  2376  0071  111F               	bcf	31,2	;volatile
  2377                           
  2378                           ;Config_ADC.c: 99:             break;
  2379  0072  28D7               	goto	i1l1109
  2380  0073                     i1l217:	
  2381                           ;Config_ADC.c: 100:         case 11:
  2382                           
  2383                           
  2384                           ;Config_ADC.c: 101:             ADCON0bits.CHS3 = 1;
  2385  0073  1283               	bcf	3,5	;RP0=0, select bank0
  2386  0074  1303               	bcf	3,6	;RP1=0, select bank0
  2387  0075  169F               	bsf	31,5	;volatile
  2388                           
  2389                           ;Config_ADC.c: 102:             ADCON0bits.CHS2 = 0;
  2390  0076  121F               	bcf	31,4	;volatile
  2391                           
  2392                           ;Config_ADC.c: 103:             ADCON0bits.CHS1 = 1;
  2393  0077  159F               	bsf	31,3	;volatile
  2394                           
  2395                           ;Config_ADC.c: 104:             ADCON0bits.CHS0 = 1;
  2396  0078  151F               	bsf	31,2	;volatile
  2397                           
  2398                           ;Config_ADC.c: 105:             break;
  2399  0079  28D7               	goto	i1l1109
  2400  007A                     i1l218:	
  2401                           ;Config_ADC.c: 106:         case 12:
  2402                           
  2403                           
  2404                           ;Config_ADC.c: 107:             ADCON0bits.CHS3 = 1;
  2405  007A  1283               	bcf	3,5	;RP0=0, select bank0
  2406  007B  1303               	bcf	3,6	;RP1=0, select bank0
  2407  007C  169F               	bsf	31,5	;volatile
  2408                           
  2409                           ;Config_ADC.c: 108:             ADCON0bits.CHS2 = 1;
  2410  007D  161F               	bsf	31,4	;volatile
  2411                           
  2412                           ;Config_ADC.c: 109:             ADCON0bits.CHS1 = 0;
  2413  007E  119F               	bcf	31,3	;volatile
  2414                           
  2415                           ;Config_ADC.c: 110:             ADCON0bits.CHS0 = 0;
  2416  007F  111F               	bcf	31,2	;volatile
  2417                           
  2418                           ;Config_ADC.c: 111:             break;
  2419  0080  28D7               	goto	i1l1109
  2420  0081                     i1l219:	
  2421                           ;Config_ADC.c: 112:         case 13:
  2422                           
  2423                           
  2424                           ;Config_ADC.c: 113:             ADCON0bits.CHS3 = 1;
  2425  0081  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0082  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0083  169F               	bsf	31,5	;volatile
  2428                           
  2429                           ;Config_ADC.c: 114:             ADCON0bits.CHS2 = 1;
  2430  0084  161F               	bsf	31,4	;volatile
  2431                           
  2432                           ;Config_ADC.c: 115:             ADCON0bits.CHS1 = 0;
  2433  0085  119F               	bcf	31,3	;volatile
  2434                           
  2435                           ;Config_ADC.c: 116:             ADCON0bits.CHS0 = 1;
  2436  0086  151F               	bsf	31,2	;volatile
  2437                           
  2438                           ;Config_ADC.c: 117:             break;
  2439  0087  28D7               	goto	i1l1109
  2440  0088                     i1l220:	
  2441                           ;Config_ADC.c: 118:         case 14:
  2442                           
  2443                           
  2444                           ;Config_ADC.c: 119:             ADCON0bits.CHS3 = 1;
  2445  0088  1283               	bcf	3,5	;RP0=0, select bank0
  2446  0089  1303               	bcf	3,6	;RP1=0, select bank0
  2447  008A  169F               	bsf	31,5	;volatile
  2448                           
  2449                           ;Config_ADC.c: 120:             ADCON0bits.CHS2 = 1;
  2450  008B  161F               	bsf	31,4	;volatile
  2451                           
  2452                           ;Config_ADC.c: 121:             ADCON0bits.CHS1 = 1;
  2453  008C  159F               	bsf	31,3	;volatile
  2454                           
  2455                           ;Config_ADC.c: 122:             ADCON0bits.CHS0 = 0;
  2456  008D  111F               	bcf	31,2	;volatile
  2457                           
  2458                           ;Config_ADC.c: 123:             break;
  2459  008E  28D7               	goto	i1l1109
  2460  008F                     i1l221:	
  2461                           ;Config_ADC.c: 124:         case 15:
  2462                           
  2463                           
  2464                           ;Config_ADC.c: 125:             ADCON0bits.CHS3 = 1;
  2465  008F  1283               	bcf	3,5	;RP0=0, select bank0
  2466  0090  1303               	bcf	3,6	;RP1=0, select bank0
  2467  0091  169F               	bsf	31,5	;volatile
  2468                           
  2469                           ;Config_ADC.c: 126:             ADCON0bits.CHS2 = 1;
  2470  0092  161F               	bsf	31,4	;volatile
  2471                           
  2472                           ;Config_ADC.c: 127:             ADCON0bits.CHS1 = 1;
  2473  0093  159F               	bsf	31,3	;volatile
  2474                           
  2475                           ;Config_ADC.c: 128:             ADCON0bits.CHS0 = 1;
  2476  0094  151F               	bsf	31,2	;volatile
  2477                           
  2478                           ;Config_ADC.c: 129:             break;
  2479  0095  28D7               	goto	i1l1109
  2480  0096                     i1l222:	
  2481                           ;Config_ADC.c: 130:         default:
  2482                           
  2483                           
  2484                           ;Config_ADC.c: 131:             ADCON0bits.CHS3 = 0;
  2485  0096  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0097  1303               	bcf	3,6	;RP1=0, select bank0
  2487  0098  129F               	bcf	31,5	;volatile
  2488                           
  2489                           ;Config_ADC.c: 132:             ADCON0bits.CHS2 = 0;
  2490  0099  121F               	bcf	31,4	;volatile
  2491                           
  2492                           ;Config_ADC.c: 133:             ADCON0bits.CHS1 = 0;
  2493  009A  119F               	bcf	31,3	;volatile
  2494                           
  2495                           ;Config_ADC.c: 134:             ADCON0bits.CHS0 = 0;
  2496  009B  111F               	bcf	31,2	;volatile
  2497                           
  2498                           ;Config_ADC.c: 135:             break;
  2499  009C  28D7               	goto	i1l1109
  2500  009D                     i1l1107:
  2501  009D  0872               	movf	ADC_Config@AN_num,w
  2502  009E  00F0               	movwf	??_ADC_Config
  2503  009F  01F1               	clrf	??_ADC_Config+1
  2504                           
  2505                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2506                           ; Switch size 1, requested type "simple"
  2507                           ; Number of cases is 1, Range of values is 0 to 0
  2508                           ; switch strategies available:
  2509                           ; Name         Instructions Cycles
  2510                           ; simple_byte            4     3 (average)
  2511                           ; direct_byte           11     8 (fixed)
  2512                           ; jumptable            260     6 (fixed)
  2513                           ;	Chosen strategy is simple_byte
  2514  00A0  0871               	movf	??_ADC_Config+1,w
  2515  00A1  3A00               	xorlw	0	; case 0
  2516  00A2  1903               	skipnz
  2517  00A3  28A5               	goto	i1l1297
  2518  00A4  2896               	goto	i1l222
  2519  00A5                     i1l1297:
  2520                           
  2521                           ; Switch size 1, requested type "simple"
  2522                           ; Number of cases is 16, Range of values is 0 to 15
  2523                           ; switch strategies available:
  2524                           ; Name         Instructions Cycles
  2525                           ; simple_byte           49    25 (average)
  2526                           ; direct_byte           56     8 (fixed)
  2527                           ; jumptable            260     6 (fixed)
  2528                           ;	Chosen strategy is simple_byte
  2529  00A5  0870               	movf	??_ADC_Config,w
  2530  00A6  3A00               	xorlw	0	; case 0
  2531  00A7  1903               	skipnz
  2532  00A8  2826               	goto	i1l205
  2533  00A9  3A01               	xorlw	1	; case 1
  2534  00AA  1903               	skipnz
  2535  00AB  282D               	goto	i1l207
  2536  00AC  3A03               	xorlw	3	; case 2
  2537  00AD  1903               	skipnz
  2538  00AE  2834               	goto	i1l208
  2539  00AF  3A01               	xorlw	1	; case 3
  2540  00B0  1903               	skipnz
  2541  00B1  283B               	goto	i1l209
  2542  00B2  3A07               	xorlw	7	; case 4
  2543  00B3  1903               	skipnz
  2544  00B4  2842               	goto	i1l210
  2545  00B5  3A01               	xorlw	1	; case 5
  2546  00B6  1903               	skipnz
  2547  00B7  2849               	goto	i1l211
  2548  00B8  3A03               	xorlw	3	; case 6
  2549  00B9  1903               	skipnz
  2550  00BA  2850               	goto	i1l212
  2551  00BB  3A01               	xorlw	1	; case 7
  2552  00BC  1903               	skipnz
  2553  00BD  2857               	goto	i1l213
  2554  00BE  3A0F               	xorlw	15	; case 8
  2555  00BF  1903               	skipnz
  2556  00C0  285E               	goto	i1l214
  2557  00C1  3A01               	xorlw	1	; case 9
  2558  00C2  1903               	skipnz
  2559  00C3  2865               	goto	i1l215
  2560  00C4  3A03               	xorlw	3	; case 10
  2561  00C5  1903               	skipnz
  2562  00C6  286C               	goto	i1l216
  2563  00C7  3A01               	xorlw	1	; case 11
  2564  00C8  1903               	skipnz
  2565  00C9  2873               	goto	i1l217
  2566  00CA  3A07               	xorlw	7	; case 12
  2567  00CB  1903               	skipnz
  2568  00CC  287A               	goto	i1l218
  2569  00CD  3A01               	xorlw	1	; case 13
  2570  00CE  1903               	skipnz
  2571  00CF  2881               	goto	i1l219
  2572  00D0  3A03               	xorlw	3	; case 14
  2573  00D1  1903               	skipnz
  2574  00D2  2888               	goto	i1l220
  2575  00D3  3A01               	xorlw	1	; case 15
  2576  00D4  1903               	skipnz
  2577  00D5  288F               	goto	i1l221
  2578  00D6  2896               	goto	i1l222
  2579  00D7                     i1l1109:
  2580                           
  2581                           ;Config_ADC.c: 137:     ADCON1 = 0b00000000;
  2582  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  2583  00D8  1303               	bcf	3,6	;RP1=0, select bank1
  2584  00D9  019F               	clrf	31	;volatile
  2585  00DA                     i1l1111:
  2586                           
  2587                           ;Config_ADC.c: 138:     ADCON0bits.ADCS1 = 0;
  2588  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  2589  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  2590  00DC  139F               	bcf	31,7	;volatile
  2591  00DD                     i1l1113:
  2592                           
  2593                           ;Config_ADC.c: 139:     ADCON0bits.ADCS0 = 0;
  2594  00DD  131F               	bcf	31,6	;volatile
  2595  00DE                     i1l1115:
  2596                           
  2597                           ;Config_ADC.c: 140:     ADCON0bits.ADON = 1;
  2598  00DE  141F               	bsf	31,0	;volatile
  2599  00DF                     i1l223:
  2600  00DF  0008               	return
  2601  00E0                     __end_of_ADC_Config:
  2602                           
  2603                           	psect	text14
  2604  0316                     __ptext14:	
  2605 ;; *************** function _ADC *****************
  2606 ;; Defined at:
  2607 ;;		line 11 in file "Config_ADC.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  ADRESL_         1    wreg     unsigned char 
  2610 ;;  ADRESH_         1    0[COMMON] unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  ADRESL_         1    0[COMMON] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  2    0[COMMON] int 
  2615 ;; Registers used:
  2616 ;;		wreg
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2622 ;;      Params:         3       0       0       0       0
  2623 ;;      Locals:         0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0
  2625 ;;      Totals:         3       0       0       0       0
  2626 ;;Total ram usage:        3 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_ISR
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           
  2636                           ;psect for function _ADC
  2637  0316                     _ADC:
  2638  0316                     i1l1121:	
  2639                           ;incstack = 0
  2640                           ; Regs used in _ADC: [wreg]
  2641                           
  2642                           
  2643                           ;Config_ADC.c: 12:     VAL = (ADRESL << 8) | ADRESH;
  2644  0316  1683               	bsf	3,5	;RP0=1, select bank1
  2645  0317  1303               	bcf	3,6	;RP1=0, select bank1
  2646  0318  081E               	movf	30,w	;volatile
  2647  0319  1283               	bcf	3,5	;RP0=0, select bank0
  2648  031A  1303               	bcf	3,6	;RP1=0, select bank0
  2649  031B  00A7               	movwf	_VAL+1
  2650  031C  081E               	movf	30,w	;volatile
  2651  031D  00A6               	movwf	_VAL
  2652                           
  2653                           ;Config_ADC.c: 13:     return VAL;
  2654  031E  0827               	movf	_VAL+1,w
  2655  031F  00F1               	movwf	?_ADC+1
  2656  0320  0826               	movf	_VAL,w
  2657  0321  00F0               	movwf	?_ADC
  2658  0322                     i1l192:
  2659  0322  0008               	return
  2660  0323                     __end_of_ADC:
  2661  007E                     btemp	set	126	;btemp
  2662  007E                     wtemp0	set	126
  2663                           
  2664                           	psect	config
  2665                           
  2666                           ;Config register CONFIG1 @ 0x2007
  2667                           ;	Oscillator Selection bits
  2668                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2669                           ;	Watchdog Timer Enable bit
  2670                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2671                           ;	Power-up Timer Enable bit
  2672                           ;	PWRTE = OFF, PWRT disabled
  2673                           ;	RE3/MCLR pin function select bit
  2674                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2675                           ;	Code Protection bit
  2676                           ;	CP = OFF, Program memory code protection is disabled
  2677                           ;	Data Code Protection bit
  2678                           ;	CPD = OFF, Data memory code protection is disabled
  2679                           ;	Brown Out Reset Selection bits
  2680                           ;	BOREN = ON, BOR enabled
  2681                           ;	Internal External Switchover bit
  2682                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2683                           ;	Fail-Safe Clock Monitor Enabled bit
  2684                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2685                           ;	Low Voltage Programming Enable bit
  2686                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2687                           ;	In-Circuit Debugger Mode bit
  2688                           ;	DEBUG = 0x1, unprogrammed default
  2689  2007                     	org	8199
  2690  2007  23D2               	dw	9170
  2691                           
  2692                           ;Config register CONFIG2 @ 0x2008
  2693                           ;	Brown-out Reset Selection bit
  2694                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2695                           ;	Flash Program Memory Self Write Enable bits
  2696                           ;	WRT = OFF, Write protection off
  2697  2008                     	org	8200
  2698  2008  3FFF               	dw	16383

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      9      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_ADC
    _ISR->_ADC_Config

Critical Paths under _main in BANK0

    _main->_titulos_LCD
    _titulos_LCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _setup->_initOsc
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     727
                     _CONVERSION_ADC
                   _Config_INTERRUPT
                           _Lcd_Init
                              _setup
                        _titulos_LCD
 ---------------------------------------------------------------------------------
 (1) _titulos_LCD                                          1     1      0     639
                                              8 BANK0      1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     233
                                              3 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     406
                                              4 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Config_INTERRUPT                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CONVERSION_ADC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  5     5      0     174
                                              3 COMMON     5     5      0
                                _ADC
                         _ADC_Config
 ---------------------------------------------------------------------------------
 (6) _ADC_Config                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _ADC                                                  4     1      3     152
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONVERSION_ADC
   _Config_INTERRUPT
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _setup
     _initOsc
   _titulos_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port

 _ISR (ROOT)
   _ADC
   _ADC_Config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      29       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9      1B       5       33.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      29      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 10 22:31:00 2021

                        _a 007D                          _x 002C                          pc 0002  
                       fsr 0004        __size_of_ADC_Config 00BC                        l102 02EB  
                      l111 02D1                        l120 014E                        l121 01A6  
                      l105 022E                        l114 032B                        l130 01A7  
                      l122 0154                        l123 015A                        l124 0160  
                      l125 0166                        l126 016C                        l143 01F7  
                      l127 0172                        l128 0178                        l129 017E  
                      l161 0303                        l146 0339                        l149 02B6  
                      l158 027D                        l167 0257                        _ADC 0316  
                      u100 0260                        u101 025F                        u110 0272  
                      u111 0271                        u120 0257                        u121 0256  
                      u130 02DA                        u131 02D9                        u140 02E6  
                      u141 02E5                        u207 01B4                        u217 01C4  
                      u227 01D4                        u237 02AE                        _ISR 00E0  
                      u197 02FD                        _VAL 0026                        fsr0 0004  
                      indf 0000                _titulos_LCD 01F8                       ?_ADC 0070  
                     ?_ISR 0070                       l1051 029E                       l1131 02C2  
                     l1053 029F                       l1141 02CA                       l1133 02C6  
                     l1125 02B7                       l1061 02EF                       l1221 0283  
                     l1151 0323                       l1055 02A5                       l1143 02CD  
                     l1135 02C7                       l1127 02BD                       l1071 025B  
                     l1063 02F0                       l1223 0288                       l1153 0325  
                     l1049 0337                       l1057 02A8                       l1161 01B8  
                     l1145 02CE                       l1137 02C8                       l1129 02C1  
                     l1081 0277                       l1073 0260                       l1065 02F6  
                     l1225 0292                       l1155 0328                       l1059 02B3  
                     l1163 01C8                       l1091 014D                       l1147 02CF  
                     l1139 02C9                       l1075 0265                       l1067 02F9  
                     l1083 0232                       l1171 020A                       l1219 027E  
                     l1181 02DC                       l1165 01CE                       l1157 01A8  
                     l1149 02D0                       l1077 026C                       l1069 0300  
                     l1085 0235                       l1173 021C                       l1191 02EA  
                     l1183 02DE                       l1159 01AE                       l1095 0184  
                     l1079 0272                       l1087 0242                       l1175 0228  
                     l1167 01F8                       l1185 02E0                       l1177 02D2  
                     l1089 024A                       l1169 0204                       l1187 02E6  
                     l1179 02DA                       l1189 02E8                       l1295 018C  
                     STR_1 030A                       STR_2 030E                       STR_3 0312  
                     i1l87 0140                       i1l88 0141          ?_Lcd_Write_String 0070  
                     _main 027E                       btemp 007E   __end_of_Config_INTERRUPT 032C  
                     start 000E         ??_Lcd_Write_String 0035            __end_of_Lcd_Cmd 02B7  
                    ??_ADC 0073                      ??_ISR 0073                      ?_main 0070  
                    _ANSEL 0188                      i1l210 0042                      i1l211 0049  
                    i1l220 0088                      i1l212 0050                      i1l221 008F  
                    i1l213 0057                      i1l205 0026                      i1l222 0096  
                    i1l214 005E                      i1l223 00DF                      i1l215 0065  
                    i1l207 002D                      i1l216 006C                      i1l208 0034  
                    i1l217 0073                      i1l209 003B                      i1l218 007A  
                    i1l219 0081                      i1l192 0322                      u15_20 00E6  
                    u15_21 00E5                      u16_20 0113                      u16_21 0112  
                    u24_27 00F0                      u17_20 0140                      u17_21 013F  
                    u25_27 011D                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
         ADC_Config@AN_num 0072            __end_of_initOsc 01A8                      _setup 02B7  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 01F8           __end_of_Lcd_Port 033A            __initialization 0011  
             __end_of_main 029B                     ??_main 003B                     _ADCON1 009F  
                   _ADRESH 001E                     _ADRESL 009E                initOsc@IRCF 0034  
                   ?_setup 0070                     _ANSELH 0189                     i1l1111 00DA  
                   i1l1103 0025                     i1l1121 0316                     i1l1113 00DD  
                   i1l1201 00F9                     i1l1115 00DE                     i1l1107 009D  
                   i1l1211 0122                     i1l1203 0109                     i1l1109 00D7  
                   i1l1213 0126                     i1l1205 010F                     i1l1215 0136  
                   i1l1207 0113                     i1l1217 013C                     i1l1209 0119  
                   i1l1193 00E0                     i1l1195 00E6                     i1l1197 00EC  
                   i1l1199 00F5                     i1l1297 00A5               ??_ADC_Config 0070  
                   _INTCON 000B                  ??_Lcd_Cmd 0033                     _S1_val 0030  
                   _S2_val 002E    __size_of_Lcd_Write_Char 0018         __end_of_ADC_Config 00E0  
                ??_initOsc 0032                     saved_w 007E                 ADC@ADRESH_ 0070  
               ADC@ADRESL_ 0070            Lcd_Set_Cursor@a 0038            Lcd_Set_Cursor@b 0036  
  __end_of__initialization 0020             __pcstackCOMMON 0070              __end_of_setup 02D2  
           _Lcd_Set_Cursor 0258               ?_titulos_LCD 0070                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 0035                 __pbssBANK0 0020  
  __size_of_CONVERSION_ADC 001A          ?_Config_INTERRUPT 0070                 __pmaintext 027E  
       ??_Config_INTERRUPT 0032                 __pintentry 0004  __size_of_Lcd_Write_String 0029  
   __end_of_Lcd_Set_Cursor 027E                    _S3_cont 007C                 ??_Lcd_Init 0036  
               ??_Lcd_Port 0032                 __stringtab 0304             _Lcd_Write_Char 02EC  
                  _Lcd_Cmd 029B                  _ADC_flag1 002A                  _ADC_flag2 0028  
          ?_Lcd_Set_Cursor 0036                    __ptext1 01F8                    __ptext2 022F  
                  __ptext3 02EC                    __ptext4 0258                    __ptext5 02B7  
                  __ptext6 014A                    __ptext7 01A8                    __ptext8 029B  
                  __ptext9 0334               __size_of_ADC 000D               __size_of_ISR 006A  
                  _initOsc 014A                    clrloop0 032D     __end_of_Lcd_Write_Char 0304  
     end_of_initialization 0020                  Lcd_Port@a 0032                  _PORTEbits 0009  
     __size_of_titulos_LCD 0037            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0037  
        Lcd_Write_String@i 0035             _CONVERSION_ADC 02D2                _ADC_VALOR_1 007A  
              _ADC_VALOR_2 0078           _Lcd_Write_String 022F        start_initialization 0011  
              __end_of_ADC 0323                __end_of_ISR 014A     __end_of_CONVERSION_ADC 02EC  
        __size_of_Lcd_Init 0050          __size_of_Lcd_Port 0006            Lcd_Write_Char@a 0034  
__size_of_Config_INTERRUPT 0009                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0032            ?_CONVERSION_ADC 0070                   ?_Lcd_Cmd 0070  
         ??_Lcd_Set_Cursor 0037                  __pstrings 0304                   ?_initOsc 0070  
           __size_of_setup 001B          interrupt_function 0004                  clear_ram0 032C  
                 _PIE1bits 008C                   Lcd_Cmd@a 0035                   _PIR1bits 000C  
                 _VAL_SWAP 0024                 _ADCON0bits 001F                __stringbase 0309  
         ??_Lcd_Write_Char 0033                   _Lcd_Init 01A8                   _Lcd_Port 0334  
               _ADC_Config 0024   __end_of_Lcd_Write_String 0258           __size_of_Lcd_Cmd 001C  
       __end_of__stringtab 030A           _Config_INTERRUPT 0323              ??_titulos_LCD 003A  
         __size_of_initOsc 005E                   __ptext10 0323                   __ptext11 02D2  
                 __ptext12 00E0                   __ptext13 0024                   __ptext14 0316  
            __size_of_main 001D           ??_CONVERSION_ADC 0032                _VAL_NIBBLE1 0022  
              _VAL_NIBBLE2 0020                   intlevel1 0000                ?_ADC_Config 0070  
      __end_of_titulos_LCD 022F                  stringcode 0304                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 0039                   stringdir 0304                   stringtab 0304  
