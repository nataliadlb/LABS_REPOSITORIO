

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 11:22:22 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  0105                     	;# 
   372  0107                     	;# 
   373  0108                     	;# 
   374  0109                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0185                     	;# 
   381  0187                     	;# 
   382  0188                     	;# 
   383  0189                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  008F                     	;# 
   431  0090                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009E                     	;# 
   448  009F                     	;# 
   449  0105                     	;# 
   450  0107                     	;# 
   451  0108                     	;# 
   452  0109                     	;# 
   453  010C                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  010E                     	;# 
   457  010F                     	;# 
   458  0185                     	;# 
   459  0187                     	;# 
   460  0188                     	;# 
   461  0189                     	;# 
   462  018C                     	;# 
   463  018D                     	;# 
   464  0000                     	;# 
   465  0001                     	;# 
   466  0002                     	;# 
   467  0003                     	;# 
   468  0004                     	;# 
   469  0005                     	;# 
   470  0006                     	;# 
   471  0007                     	;# 
   472  0008                     	;# 
   473  0009                     	;# 
   474  000A                     	;# 
   475  000B                     	;# 
   476  000C                     	;# 
   477  000D                     	;# 
   478  000E                     	;# 
   479  000E                     	;# 
   480  000F                     	;# 
   481  0010                     	;# 
   482  0011                     	;# 
   483  0012                     	;# 
   484  0013                     	;# 
   485  0014                     	;# 
   486  0015                     	;# 
   487  0015                     	;# 
   488  0016                     	;# 
   489  0017                     	;# 
   490  0018                     	;# 
   491  0019                     	;# 
   492  001A                     	;# 
   493  001B                     	;# 
   494  001B                     	;# 
   495  001C                     	;# 
   496  001D                     	;# 
   497  001E                     	;# 
   498  001F                     	;# 
   499  0081                     	;# 
   500  0085                     	;# 
   501  0086                     	;# 
   502  0087                     	;# 
   503  0088                     	;# 
   504  0089                     	;# 
   505  008C                     	;# 
   506  008D                     	;# 
   507  008E                     	;# 
   508  008F                     	;# 
   509  0090                     	;# 
   510  0091                     	;# 
   511  0092                     	;# 
   512  0093                     	;# 
   513  0093                     	;# 
   514  0093                     	;# 
   515  0094                     	;# 
   516  0095                     	;# 
   517  0096                     	;# 
   518  0097                     	;# 
   519  0098                     	;# 
   520  0099                     	;# 
   521  009A                     	;# 
   522  009B                     	;# 
   523  009C                     	;# 
   524  009D                     	;# 
   525  009E                     	;# 
   526  009F                     	;# 
   527  0105                     	;# 
   528  0107                     	;# 
   529  0108                     	;# 
   530  0109                     	;# 
   531  010C                     	;# 
   532  010C                     	;# 
   533  010D                     	;# 
   534  010E                     	;# 
   535  010F                     	;# 
   536  0185                     	;# 
   537  0187                     	;# 
   538  0188                     	;# 
   539  0189                     	;# 
   540  018C                     	;# 
   541  018D                     	;# 
   542                           
   543                           	psect	strings
   544  04B9                     __pstrings:
   545  04B9                     stringtab:
   546  04B9                     __stringtab:
   547  04B9                     stringcode:	
   548                           ;	String table - string pointers are 1 byte each
   549                           
   550  04B9                     stringdir:
   551  04B9  3004               	movlw	high stringdir
   552  04BA  008A               	movwf	10
   553  04BB  0804               	movf	4,w
   554  04BC  0A84               	incf	4,f
   555  04BD  0782               	addwf	2,f
   556  04BE                     __stringbase:
   557  04BE  3400               	retlw	0
   558  04BF                     __end_of__stringtab:
   559  04BF                     _dpowers:
   560  04BF  3401               	retlw	1
   561  04C0  3400               	retlw	0
   562  04C1  340A               	retlw	10
   563  04C2  3400               	retlw	0
   564  04C3  3464               	retlw	100
   565  04C4  3400               	retlw	0
   566  04C5  34E8               	retlw	232
   567  04C6  3403               	retlw	3
   568  04C7  3410               	retlw	16
   569  04C8  3427               	retlw	39
   570  04C9                     __end_of_dpowers:
   571  000B                     _INTCONbits	set	11
   572  0018                     _RCSTAbits	set	24
   573  0009                     _PORTEbits	set	9
   574  0009                     _PORTE	set	9
   575  0008                     _PORTD	set	8
   576  0007                     _PORTC	set	7
   577  0005                     _PORTA	set	5
   578  0019                     _TXREG	set	25
   579  001E                     _ADRESH	set	30
   580  001F                     _ADCON0bits	set	31
   581  0006                     _PORTB	set	6
   582  001A                     _RCREG	set	26
   583  000C                     _PIR1bits	set	12
   584  008C                     _PIE1bits	set	140
   585  0099                     _SPBRG	set	153
   586  009A                     _SPBRGH	set	154
   587  0098                     _TXSTAbits	set	152
   588  009F                     _ADCON1	set	159
   589  009E                     _ADRESL	set	158
   590  008F                     _OSCCONbits	set	143
   591  0089                     _TRISE	set	137
   592  0088                     _TRISD	set	136
   593  0087                     _TRISCbits	set	135
   594  0086                     _TRISB	set	134
   595  0085                     _TRISA	set	133
   596  0189                     _ANSELH	set	393
   597  0188                     _ANSEL	set	392
   598  04C9                     STR_1:
   599  04C9  3453               	retlw	83	;'S'
   600  04CA  3431               	retlw	49	;'1'
   601  04CB  343A               	retlw	58	;':'
   602  04CC  3420               	retlw	32	;' '
   603  04CD  3420               	retlw	32	;' '
   604  04CE  3420               	retlw	32	;' '
   605  04CF  3453               	retlw	83	;'S'
   606  04D0  3432               	retlw	50	;'2'
   607  04D1  343A               	retlw	58	;':'
   608  04D2  3420               	retlw	32	;' '
   609  04D3  3420               	retlw	32	;' '
   610  04D4  3453               	retlw	83	;'S'
   611  04D5  3433               	retlw	51	;'3'
   612  04D6  343A               	retlw	58	;':'
   613  04D7  3400               	retlw	0
   614  04D8                     STR_2:
   615  04D8  3425               	retlw	37	;'%'
   616  04D9  342E               	retlw	46	;'.'
   617  04DA  3433               	retlw	51	;'3'
   618  04DB  3469               	retlw	105	;'i'
   619  04DC  3456               	retlw	86	;'V'
   620  04DD  3400               	retlw	0
   621  04D8                     
   622                           	psect	cinit
   623  000F                     start_initialization:	
   624                           ; #config settings
   625                           
   626  000F                     __initialization:
   627                           
   628                           ; Clear objects allocated to COMMON
   629  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   630  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   631  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   632                           
   633                           ; Clear objects allocated to BANK0
   634  0012  1383               	bcf	3,7	;select IRP bank0
   635  0013  3020               	movlw	low __pbssBANK0
   636  0014  0084               	movwf	4
   637  0015  303D               	movlw	low (__pbssBANK0+29)
   638  0016  120A  118A  25DC  120A  118A  	fcall	clear_ram0
   639  001B                     end_of_initialization:	
   640                           ;End of C runtime variable initialization code
   641                           
   642  001B                     __end_of__initialization:
   643  001B  0183               	clrf	3
   644  001C  120A  118A  2AB7   	ljmp	_main	;jump to C main() function
   645                           
   646                           	psect	bssCOMMON
   647  0078                     __pbssCOMMON:
   648  0078                     _data_recive:
   649  0078                     	ds	1
   650  0079                     _cont_usart:
   651  0079                     	ds	1
   652  007A                     _eusart_toggle:
   653  007A                     	ds	1
   654                           
   655                           	psect	bssBANK0
   656  0020                     __pbssBANK0:
   657  0020                     _VAL_NIBBLE2:
   658  0020                     	ds	2
   659  0022                     _VAL_NIBBLE1:
   660  0022                     	ds	2
   661  0024                     _VAL_SWAP:
   662  0024                     	ds	2
   663  0026                     _VAL:
   664  0026                     	ds	2
   665  0028                     _cont:
   666  0028                     	ds	1
   667  0029                     _ADC_toggle:
   668  0029                     	ds	1
   669  002A                     _S3_cont:
   670  002A                     	ds	1
   671  002B                     _S2_val:
   672  002B                     	ds	1
   673  002C                     _S1_val:
   674  002C                     	ds	1
   675  002D                     _data2:
   676  002D                     	ds	8
   677  0035                     _data1:
   678  0035                     	ds	8
   679                           
   680                           	psect	clrtext
   681  05DC                     clear_ram0:	
   682                           ;	Called with FSR containing the base address, and
   683                           ;	W with the last address+1
   684                           
   685  05DC  0064               	clrwdt	;clear the watchdog before getting into this loop
   686  05DD                     clrloop0:
   687  05DD  0180               	clrf	0	;clear RAM location pointed to by FSR
   688  05DE  0A84               	incf	4,f	;increment pointer
   689  05DF  0604               	xorwf	4,w	;XOR with final address
   690  05E0  1903               	btfsc	3,2	;have we reached the end yet?
   691  05E1  3400               	retlw	0	;all done for this memory range, return
   692  05E2  0604               	xorwf	4,w	;XOR again to restore value
   693  05E3  2DDD               	goto	clrloop0	;do the next byte
   694                           
   695                           	psect	cstackCOMMON
   696  0070                     __pcstackCOMMON:
   697  0070                     ?_isdigit:
   698  0070                     ?_setup:	
   699                           ; 1 bit 
   700                           
   701  0070                     ?_USART_Init:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_USART_Init_BaudRate:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_USART_INTERRUPT:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_Lcd_Init:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_titulos_LCD:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_ADC_channel1:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_ADC_channel2:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_ADC_to_string:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_Show_val_LCD:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_Trasmission:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_Lcd_Write_String:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_ADC_Config:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_Lcd_Write_Char:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_initOsc:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_Lcd_Port:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?_Lcd_Cmd:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_ISR:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ??_ISR:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_main:	
   756                           ; 1 bytes @ 0x0
   757                           
   758                           
   759                           ; 1 bytes @ 0x0
   760  0070                     	ds	3
   761  0073                     ??_USART_Init:
   762  0073                     ??_USART_Init_BaudRate:	
   763                           ; 1 bytes @ 0x3
   764                           
   765  0073                     ??_USART_INTERRUPT:	
   766                           ; 1 bytes @ 0x3
   767                           
   768  0073                     ??_Trasmission:	
   769                           ; 1 bytes @ 0x3
   770                           
   771  0073                     ??_ADC_Config:	
   772                           ; 1 bytes @ 0x3
   773                           
   774  0073                     ??_initOsc:	
   775                           ; 1 bytes @ 0x3
   776                           
   777  0073                     ??_Lcd_Port:	
   778                           ; 1 bytes @ 0x3
   779                           
   780  0073                     ??_isdigit:	
   781                           ; 1 bytes @ 0x3
   782                           
   783  0073                     ?___bmul:	
   784                           ; 1 bytes @ 0x3
   785                           
   786  0073                     ?___lwdiv:	
   787                           ; 1 bytes @ 0x3
   788                           
   789  0073                     Lcd_Port@a:	
   790                           ; 2 bytes @ 0x3
   791                           
   792  0073                     ___bmul@multiplicand:	
   793                           ; 1 bytes @ 0x3
   794                           
   795  0073                     _isdigit$1010:	
   796                           ; 1 bytes @ 0x3
   797                           
   798  0073                     ___lwdiv@divisor:	
   799                           ; 1 bytes @ 0x3
   800                           
   801                           
   802                           ; 2 bytes @ 0x3
   803  0073                     	ds	1
   804  0074                     ??_Lcd_Write_Char:
   805  0074                     ??_Lcd_Cmd:	
   806                           ; 1 bytes @ 0x4
   807                           
   808  0074                     ??___bmul:	
   809                           ; 1 bytes @ 0x4
   810                           
   811  0074                     isdigit@c:	
   812                           ; 1 bytes @ 0x4
   813                           
   814                           
   815                           ; 1 bytes @ 0x4
   816  0074                     	ds	1
   817  0075                     initOsc@IRCF:
   818  0075                     Lcd_Write_Char@a:	
   819                           ; 1 bytes @ 0x5
   820                           
   821  0075                     ADC_Config@AN_num:	
   822                           ; 1 bytes @ 0x5
   823                           
   824  0075                     ___bmul@product:	
   825                           ; 1 bytes @ 0x5
   826                           
   827  0075                     ___lwdiv@dividend:	
   828                           ; 1 bytes @ 0x5
   829                           
   830                           
   831                           ; 2 bytes @ 0x5
   832  0075                     	ds	1
   833  0076                     ??_setup:
   834  0076                     ??_ADC_channel1:	
   835                           ; 1 bytes @ 0x6
   836                           
   837  0076                     ??_ADC_channel2:	
   838                           ; 1 bytes @ 0x6
   839                           
   840  0076                     ??_Lcd_Write_String:	
   841                           ; 1 bytes @ 0x6
   842                           
   843  0076                     Lcd_Cmd@a:	
   844                           ; 1 bytes @ 0x6
   845                           
   846  0076                     ___bmul@multiplier:	
   847                           ; 1 bytes @ 0x6
   848                           
   849                           
   850                           ; 1 bytes @ 0x6
   851  0076                     	ds	1
   852  0077                     ?_Lcd_Set_Cursor:
   853  0077                     ??___lwdiv:	
   854                           ; 1 bytes @ 0x7
   855                           
   856  0077                     Lcd_Set_Cursor@b:	
   857                           ; 1 bytes @ 0x7
   858                           
   859                           
   860                           ; 1 bytes @ 0x7
   861  0077                     	ds	1
   862                           
   863                           	psect	cstackBANK0
   864  003D                     __pcstackBANK0:
   865  003D                     ??_Lcd_Init:
   866  003D                     ??_Lcd_Set_Cursor:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  003D                     Lcd_Write_String@a:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  003D                     ___lwdiv@counter:	
   873                           ; 1 bytes @ 0x0
   874                           
   875                           
   876                           ; 1 bytes @ 0x0
   877  003D                     	ds	1
   878  003E                     Lcd_Set_Cursor@a:
   879  003E                     Lcd_Write_String@i:	
   880                           ; 1 bytes @ 0x1
   881                           
   882  003E                     ___lwdiv@quotient:	
   883                           ; 2 bytes @ 0x1
   884                           
   885                           
   886                           ; 2 bytes @ 0x1
   887  003E                     	ds	1
   888  003F                     Lcd_Set_Cursor@temp:
   889                           
   890                           ; 1 bytes @ 0x2
   891  003F                     	ds	1
   892  0040                     ??_titulos_LCD:
   893  0040                     ??_Show_val_LCD:	
   894                           ; 1 bytes @ 0x3
   895                           
   896  0040                     ?___lwmod:	
   897                           ; 1 bytes @ 0x3
   898                           
   899  0040                     ___lwmod@divisor:	
   900                           ; 2 bytes @ 0x3
   901                           
   902                           
   903                           ; 2 bytes @ 0x3
   904  0040                     	ds	2
   905  0042                     ___lwmod@dividend:
   906                           
   907                           ; 2 bytes @ 0x5
   908  0042                     	ds	2
   909  0044                     ??___lwmod:
   910                           
   911                           ; 1 bytes @ 0x7
   912  0044                     	ds	1
   913  0045                     ___lwmod@counter:
   914                           
   915                           ; 1 bytes @ 0x8
   916  0045                     	ds	1
   917  0046                     ?_sprintf:
   918  0046                     sprintf@f:	
   919                           ; 2 bytes @ 0x9
   920                           
   921                           
   922                           ; 1 bytes @ 0x9
   923  0046                     	ds	3
   924  0049                     ??_sprintf:
   925                           
   926                           ; 1 bytes @ 0xC
   927  0049                     	ds	3
   928  004C                     sprintf@ap:
   929                           
   930                           ; 1 bytes @ 0xF
   931  004C                     	ds	1
   932  004D                     sprintf@flag:
   933                           
   934                           ; 1 bytes @ 0x10
   935  004D                     	ds	1
   936  004E                     sprintf@val:
   937                           
   938                           ; 2 bytes @ 0x11
   939  004E                     	ds	2
   940  0050                     sprintf@sp:
   941                           
   942                           ; 1 bytes @ 0x13
   943  0050                     	ds	1
   944  0051                     sprintf@prec:
   945                           
   946                           ; 1 bytes @ 0x14
   947  0051                     	ds	1
   948  0052                     sprintf@c:
   949                           
   950                           ; 1 bytes @ 0x15
   951  0052                     	ds	1
   952  0053                     ??_ADC_to_string:
   953                           
   954                           ; 1 bytes @ 0x16
   955  0053                     	ds	3
   956  0056                     ??_main:
   957                           
   958                           ; 1 bytes @ 0x19
   959  0056                     	ds	2
   960                           
   961                           	psect	maintext
   962  02B7                     __pmaintext:	
   963 ;;
   964 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   965 ;;
   966 ;; *************** function _main *****************
   967 ;; Defined at:
   968 ;;		line 121 in file "pseudocodigo_lab3.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   977 ;; Tracked objects:
   978 ;;		On entry : B00/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   982 ;;      Params:         0       0       0       0       0
   983 ;;      Locals:         0       0       0       0       0
   984 ;;      Temps:          0       2       0       0       0
   985 ;;      Totals:         0       2       0       0       0
   986 ;;Total ram usage:        2 bytes
   987 ;; Hardware stack levels required when called:    5
   988 ;; This function calls:
   989 ;;		_ADC_channel1
   990 ;;		_ADC_channel2
   991 ;;		_ADC_to_string
   992 ;;		_Lcd_Init
   993 ;;		_Show_val_LCD
   994 ;;		_Trasmission
   995 ;;		_USART_INTERRUPT
   996 ;;		_USART_Init
   997 ;;		_USART_Init_BaudRate
   998 ;;		_setup
   999 ;;		_titulos_LCD
  1000 ;; This function is called by:
  1001 ;;		Startup code after reset
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           
  1006                           ;psect for function _main
  1007  02B7                     _main:
  1008  02B7                     l2035:	
  1009                           ;incstack = 0
  1010                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1011                           
  1012                           
  1013                           ;pseudocodigo_lab3.c: 122:     setup();
  1014  02B7  120A  118A  24FD  120A  118A  	fcall	_setup
  1015  02BC                     l2037:
  1016                           
  1017                           ;pseudocodigo_lab3.c: 123:     USART_Init();
  1018  02BC  120A  118A  25CC  120A  118A  	fcall	_USART_Init
  1019  02C1                     l2039:
  1020                           
  1021                           ;pseudocodigo_lab3.c: 124:     USART_Init_BaudRate();
  1022  02C1  120A  118A  25EB  120A  118A  	fcall	_USART_Init_BaudRate
  1023  02C6                     l2041:
  1024                           
  1025                           ;pseudocodigo_lab3.c: 125:     USART_INTERRUPT();
  1026  02C6  120A  118A  25E4  120A  118A  	fcall	_USART_INTERRUPT
  1027  02CB                     l2043:
  1028                           
  1029                           ;pseudocodigo_lab3.c: 126:     Lcd_Init();
  1030  02CB  120A  118A  236F  120A  118A  	fcall	_Lcd_Init
  1031                           
  1032                           ;pseudocodigo_lab3.c: 127:     titulos_LCD();
  1033  02D0  120A  118A  2596  120A  118A  	fcall	_titulos_LCD
  1034  02D5                     l101:	
  1035                           ;pseudocodigo_lab3.c: 132:     while (1) {
  1036                           
  1037                           
  1038                           ;pseudocodigo_lab3.c: 133:         ADC_channel1();
  1039  02D5  120A  118A  2535  120A  118A  	fcall	_ADC_channel1
  1040  02DA                     l2045:
  1041                           
  1042                           ;pseudocodigo_lab3.c: 134:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1043  02DA  3003               	movlw	3
  1044  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1045  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1046  02DD  00D7               	movwf	??_main+1
  1047  02DE  3097               	movlw	151
  1048  02DF  00D6               	movwf	??_main
  1049  02E0                     u1097:
  1050  02E0  0BD6               	decfsz	??_main,f
  1051  02E1  2AE0               	goto	u1097
  1052  02E2  0BD7               	decfsz	??_main+1,f
  1053  02E3  2AE0               	goto	u1097
  1054  02E4                     l2047:
  1055                           
  1056                           ;pseudocodigo_lab3.c: 135:         ADC_channel2();
  1057  02E4  120A  118A  2519  120A  118A  	fcall	_ADC_channel2
  1058  02E9                     l2049:
  1059                           
  1060                           ;pseudocodigo_lab3.c: 137:         ADC_to_string();
  1061  02E9  120A  118A  246A  120A  118A  	fcall	_ADC_to_string
  1062  02EE                     l2051:
  1063                           
  1064                           ;pseudocodigo_lab3.c: 138:         Show_val_LCD();
  1065  02EE  120A  118A  2240  120A  118A  	fcall	_Show_val_LCD
  1066  02F3                     l2053:
  1067                           
  1068                           ;pseudocodigo_lab3.c: 139:         Trasmission();
  1069  02F3  120A  118A  24DE  120A  118A  	fcall	_Trasmission
  1070  02F8                     l2055:
  1071                           
  1072                           ;pseudocodigo_lab3.c: 141:         PORTB = cont;
  1073  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  1074  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  1075  02FA  0828               	movf	_cont,w
  1076  02FB  0086               	movwf	6	;volatile
  1077  02FC                     l2057:
  1078                           
  1079                           ;pseudocodigo_lab3.c: 142:         if (data_recive == '+'){
  1080  02FC  302B               	movlw	43
  1081  02FD  0678               	xorwf	_data_recive,w
  1082  02FE  1D03               	btfss	3,2
  1083  02FF  2B01               	goto	u1071
  1084  0300  2B02               	goto	u1070
  1085  0301                     u1071:
  1086  0301  2B06               	goto	l102
  1087  0302                     u1070:
  1088  0302                     l2059:
  1089                           
  1090                           ;pseudocodigo_lab3.c: 143:             cont++;
  1091  0302  3001               	movlw	1
  1092  0303  00D6               	movwf	??_main
  1093  0304  0856               	movf	??_main,w
  1094  0305  07A8               	addwf	_cont,f
  1095  0306                     l102:	
  1096                           ;pseudocodigo_lab3.c: 144:         }
  1097                           
  1098                           
  1099                           ;pseudocodigo_lab3.c: 145:         if(data_recive == '-'){
  1100  0306  302D               	movlw	45
  1101  0307  0678               	xorwf	_data_recive,w
  1102  0308  1D03               	btfss	3,2
  1103  0309  2B0B               	goto	u1081
  1104  030A  2B0C               	goto	u1080
  1105  030B                     u1081:
  1106  030B  2B0E               	goto	l2063
  1107  030C                     u1080:
  1108  030C                     l2061:
  1109                           
  1110                           ;pseudocodigo_lab3.c: 146:             cont--;
  1111  030C  3001               	movlw	1
  1112  030D  02A8               	subwf	_cont,f
  1113  030E                     l2063:
  1114                           
  1115                           ;pseudocodigo_lab3.c: 148:        data_recive = 0;
  1116  030E  01F8               	clrf	_data_recive
  1117  030F  2AD5               	goto	l101
  1118  0310  120A  118A  280C   	ljmp	start
  1119  0313                     __end_of_main:
  1120                           
  1121                           	psect	text1
  1122  0596                     __ptext1:	
  1123 ;; *************** function _titulos_LCD *****************
  1124 ;; Defined at:
  1125 ;;		line 156 in file "pseudocodigo_lab3.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0
  1141 ;;      Temps:          0       1       0       0       0
  1142 ;;      Totals:         0       1       0       0       0
  1143 ;;Total ram usage:        1 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    4
  1146 ;; This function calls:
  1147 ;;		_Lcd_Set_Cursor
  1148 ;;		_Lcd_Write_String
  1149 ;; This function is called by:
  1150 ;;		_main
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           
  1155                           ;psect for function _titulos_LCD
  1156  0596                     _titulos_LCD:
  1157  0596                     l2011:	
  1158                           ;incstack = 0
  1159                           ; Regs used in _titulos_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1160                           
  1161                           
  1162                           ;pseudocodigo_lab3.c: 157:         Lcd_Set_Cursor(1,2);
  1163  0596  3002               	movlw	2
  1164  0597  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0598  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0599  00C0               	movwf	??_titulos_LCD
  1167  059A  0840               	movf	??_titulos_LCD,w
  1168  059B  00F7               	movwf	Lcd_Set_Cursor@b
  1169  059C  3001               	movlw	1
  1170  059D  120A  118A  2493  120A  118A  	fcall	_Lcd_Set_Cursor
  1171  05A2                     l2013:
  1172                           
  1173                           ;pseudocodigo_lab3.c: 158:         Lcd_Write_String("S1:   S2:  S3:");
  1174  05A2  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1175  05A3  120A  118A  2441  120A  118A  	fcall	_Lcd_Write_String
  1176  05A8                     l109:
  1177  05A8  0008               	return
  1178  05A9                     __end_of_titulos_LCD:
  1179                           
  1180                           	psect	text2
  1181  0441                     __ptext2:	
  1182 ;; *************** function _Lcd_Write_String *****************
  1183 ;; Defined at:
  1184 ;;		line 70 in file "LCD.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  a               1    wreg     PTR unsigned char 
  1187 ;;		 -> STR_1(15), 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  a               1    0[BANK0 ] PTR unsigned char 
  1190 ;;		 -> STR_1(15), 
  1191 ;;  i               2    1[BANK0 ] int 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1201 ;;      Params:         0       0       0       0       0
  1202 ;;      Locals:         0       3       0       0       0
  1203 ;;      Temps:          0       0       0       0       0
  1204 ;;      Totals:         0       3       0       0       0
  1205 ;;Total ram usage:        3 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    3
  1208 ;; This function calls:
  1209 ;;		_Lcd_Write_Char
  1210 ;; This function is called by:
  1211 ;;		_titulos_LCD
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           
  1216                           ;psect for function _Lcd_Write_String
  1217  0441                     _Lcd_Write_String:
  1218                           
  1219                           ;incstack = 0
  1220                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1221                           ;Lcd_Write_String@a stored from wreg
  1222  0441  1283               	bcf	3,5	;RP0=0, select bank0
  1223  0442  1303               	bcf	3,6	;RP1=0, select bank0
  1224  0443  00BD               	movwf	Lcd_Write_String@a
  1225  0444                     l1903:
  1226                           
  1227                           ;LCD.c: 71:  int i;;LCD.c: 72:  for(i=0;a[i]!='\0';i++)
  1228  0444  01BE               	clrf	Lcd_Write_String@i
  1229  0445  01BF               	clrf	Lcd_Write_String@i+1
  1230  0446  2C5C               	goto	l1909
  1231  0447                     l1905:
  1232                           
  1233                           ;LCD.c: 73:     Lcd_Write_Char(a[i]);
  1234  0447  083E               	movf	Lcd_Write_String@i,w
  1235  0448  073D               	addwf	Lcd_Write_String@a,w
  1236  0449  0084               	movwf	4
  1237  044A  120A  118A  24B9  120A  118A  	fcall	stringdir
  1238  044F  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
  1239  0454                     l1907:
  1240  0454  3001               	movlw	1
  1241  0455  1283               	bcf	3,5	;RP0=0, select bank0
  1242  0456  1303               	bcf	3,6	;RP1=0, select bank0
  1243  0457  07BE               	addwf	Lcd_Write_String@i,f
  1244  0458  1803               	skipnc
  1245  0459  0ABF               	incf	Lcd_Write_String@i+1,f
  1246  045A  3000               	movlw	0
  1247  045B  07BF               	addwf	Lcd_Write_String@i+1,f
  1248  045C                     l1909:
  1249  045C  083E               	movf	Lcd_Write_String@i,w
  1250  045D  073D               	addwf	Lcd_Write_String@a,w
  1251  045E  0084               	movwf	4
  1252  045F  120A  118A  24B9  120A  118A  	fcall	stringdir
  1253  0464  3A00               	xorlw	0
  1254  0465  1D03               	skipz
  1255  0466  2C68               	goto	u931
  1256  0467  2C69               	goto	u930
  1257  0468                     u931:
  1258  0468  2C47               	goto	l1905
  1259  0469                     u930:
  1260  0469                     l190:
  1261  0469  0008               	return
  1262  046A                     __end_of_Lcd_Write_String:
  1263                           
  1264                           	psect	text3
  1265  04FD                     __ptext3:	
  1266 ;; *************** function _setup *****************
  1267 ;; Defined at:
  1268 ;;		line 238 in file "pseudocodigo_lab3.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1282 ;;      Params:         0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0
  1285 ;;      Totals:         0       0       0       0       0
  1286 ;;Total ram usage:        0 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    2
  1289 ;; This function calls:
  1290 ;;		_initOsc
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           
  1297                           ;psect for function _setup
  1298  04FD                     _setup:
  1299  04FD                     l1611:	
  1300                           ;incstack = 0
  1301                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1302                           
  1303                           
  1304                           ;pseudocodigo_lab3.c: 239:     initOsc(0b00000110);
  1305  04FD  3006               	movlw	6
  1306  04FE  120A  118A  2313  120A  118A  	fcall	_initOsc
  1307  0503                     l1613:
  1308                           
  1309                           ;pseudocodigo_lab3.c: 240:     ANSEL = 0b00000011;
  1310  0503  3003               	movlw	3
  1311  0504  1683               	bsf	3,5	;RP0=1, select bank3
  1312  0505  1703               	bsf	3,6	;RP1=1, select bank3
  1313  0506  0088               	movwf	8	;volatile
  1314  0507                     l1615:
  1315                           
  1316                           ;pseudocodigo_lab3.c: 241:     ANSELH = 0;
  1317  0507  0189               	clrf	9	;volatile
  1318  0508                     l1617:
  1319                           
  1320                           ;pseudocodigo_lab3.c: 242:     TRISA = 0b00000011;
  1321  0508  3003               	movlw	3
  1322  0509  1683               	bsf	3,5	;RP0=1, select bank1
  1323  050A  1303               	bcf	3,6	;RP1=0, select bank1
  1324  050B  0085               	movwf	5	;volatile
  1325  050C                     l1619:
  1326                           
  1327                           ;pseudocodigo_lab3.c: 243:     TRISB = 0;
  1328  050C  0186               	clrf	6	;volatile
  1329  050D                     l1621:
  1330                           
  1331                           ;pseudocodigo_lab3.c: 244:     TRISCbits.TRISC6 = 0;
  1332  050D  1307               	bcf	7,6	;volatile
  1333  050E                     l1623:
  1334                           
  1335                           ;pseudocodigo_lab3.c: 245:     TRISCbits.TRISC7 = 1;
  1336  050E  1787               	bsf	7,7	;volatile
  1337  050F                     l1625:
  1338                           
  1339                           ;pseudocodigo_lab3.c: 246:     TRISD = 0;
  1340  050F  0188               	clrf	8	;volatile
  1341  0510                     l1627:
  1342                           
  1343                           ;pseudocodigo_lab3.c: 247:     TRISE = 0;
  1344  0510  0189               	clrf	9	;volatile
  1345  0511                     l1629:
  1346                           
  1347                           ;pseudocodigo_lab3.c: 248:     PORTA = 0;
  1348  0511  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0512  1303               	bcf	3,6	;RP1=0, select bank0
  1350  0513  0185               	clrf	5	;volatile
  1351  0514                     l1631:
  1352                           
  1353                           ;pseudocodigo_lab3.c: 249:     PORTB = 0;
  1354  0514  0186               	clrf	6	;volatile
  1355  0515                     l1633:
  1356                           
  1357                           ;pseudocodigo_lab3.c: 250:     PORTC = 0;
  1358  0515  0187               	clrf	7	;volatile
  1359  0516                     l1635:
  1360                           
  1361                           ;pseudocodigo_lab3.c: 251:     PORTD = 0;
  1362  0516  0188               	clrf	8	;volatile
  1363  0517                     l1637:
  1364                           
  1365                           ;pseudocodigo_lab3.c: 252:     PORTE = 0;
  1366  0517  0189               	clrf	9	;volatile
  1367  0518                     l137:
  1368  0518  0008               	return
  1369  0519                     __end_of_setup:
  1370                           
  1371                           	psect	text4
  1372  0313                     __ptext4:	
  1373 ;; *************** function _initOsc *****************
  1374 ;; Defined at:
  1375 ;;		line 3 in file "Oscilador.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  IRCF            1    wreg     unsigned char 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  IRCF            1    5[COMMON] unsigned char 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1389 ;;      Params:         0       0       0       0       0
  1390 ;;      Locals:         1       0       0       0       0
  1391 ;;      Temps:          2       0       0       0       0
  1392 ;;      Totals:         3       0       0       0       0
  1393 ;;Total ram usage:        3 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    1
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_setup
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           
  1404                           ;psect for function _initOsc
  1405  0313                     _initOsc:
  1406                           
  1407                           ;incstack = 0
  1408                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1409                           ;initOsc@IRCF stored from wreg
  1410  0313  00F5               	movwf	initOsc@IRCF
  1411  0314                     l1601:
  1412                           
  1413                           ;Oscilador.c: 5:     switch(IRCF){
  1414  0314  2B4B               	goto	l1605
  1415  0315                     l143:	
  1416                           ;Oscilador.c: 6:         case 0:
  1417                           
  1418                           
  1419                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  1420  0315  1683               	bsf	3,5	;RP0=1, select bank1
  1421  0316  1303               	bcf	3,6	;RP1=0, select bank1
  1422  0317  130F               	bcf	15,6	;volatile
  1423                           
  1424                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  1425  0318  128F               	bcf	15,5	;volatile
  1426                           
  1427                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  1428  0319  120F               	bcf	15,4	;volatile
  1429                           
  1430                           ;Oscilador.c: 10:             break;
  1431  031A  2B6D               	goto	l144
  1432  031B                     l145:	
  1433                           ;Oscilador.c: 11:          case 1:
  1434                           
  1435                           
  1436                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  1437  031B  1683               	bsf	3,5	;RP0=1, select bank1
  1438  031C  1303               	bcf	3,6	;RP1=0, select bank1
  1439  031D  130F               	bcf	15,6	;volatile
  1440                           
  1441                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  1442  031E  128F               	bcf	15,5	;volatile
  1443                           
  1444                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  1445  031F  160F               	bsf	15,4	;volatile
  1446                           
  1447                           ;Oscilador.c: 15:             break;
  1448  0320  2B6D               	goto	l144
  1449  0321                     l146:	
  1450                           ;Oscilador.c: 16:         case 2:
  1451                           
  1452                           
  1453                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  1454  0321  1683               	bsf	3,5	;RP0=1, select bank1
  1455  0322  1303               	bcf	3,6	;RP1=0, select bank1
  1456  0323  130F               	bcf	15,6	;volatile
  1457                           
  1458                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  1459  0324  168F               	bsf	15,5	;volatile
  1460                           
  1461                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  1462  0325  120F               	bcf	15,4	;volatile
  1463                           
  1464                           ;Oscilador.c: 20:             break;
  1465  0326  2B6D               	goto	l144
  1466  0327                     l147:	
  1467                           ;Oscilador.c: 21:         case 3:
  1468                           
  1469                           
  1470                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  1471  0327  1683               	bsf	3,5	;RP0=1, select bank1
  1472  0328  1303               	bcf	3,6	;RP1=0, select bank1
  1473  0329  130F               	bcf	15,6	;volatile
  1474                           
  1475                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  1476  032A  168F               	bsf	15,5	;volatile
  1477                           
  1478                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  1479  032B  160F               	bsf	15,4	;volatile
  1480                           
  1481                           ;Oscilador.c: 25:             break;
  1482  032C  2B6D               	goto	l144
  1483  032D                     l148:	
  1484                           ;Oscilador.c: 26:         case 4:
  1485                           
  1486                           
  1487                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  1488  032D  1683               	bsf	3,5	;RP0=1, select bank1
  1489  032E  1303               	bcf	3,6	;RP1=0, select bank1
  1490  032F  170F               	bsf	15,6	;volatile
  1491                           
  1492                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  1493  0330  128F               	bcf	15,5	;volatile
  1494                           
  1495                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  1496  0331  120F               	bcf	15,4	;volatile
  1497                           
  1498                           ;Oscilador.c: 30:             break;
  1499  0332  2B6D               	goto	l144
  1500  0333                     l149:	
  1501                           ;Oscilador.c: 31:         case 5:
  1502                           
  1503                           
  1504                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1505  0333  1683               	bsf	3,5	;RP0=1, select bank1
  1506  0334  1303               	bcf	3,6	;RP1=0, select bank1
  1507  0335  170F               	bsf	15,6	;volatile
  1508                           
  1509                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1510  0336  128F               	bcf	15,5	;volatile
  1511                           
  1512                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1513  0337  160F               	bsf	15,4	;volatile
  1514                           
  1515                           ;Oscilador.c: 35:             break;
  1516  0338  2B6D               	goto	l144
  1517  0339                     l150:	
  1518                           ;Oscilador.c: 36:         case 6:
  1519                           
  1520                           
  1521                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1522  0339  1683               	bsf	3,5	;RP0=1, select bank1
  1523  033A  1303               	bcf	3,6	;RP1=0, select bank1
  1524  033B  170F               	bsf	15,6	;volatile
  1525                           
  1526                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1527  033C  168F               	bsf	15,5	;volatile
  1528                           
  1529                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1530  033D  120F               	bcf	15,4	;volatile
  1531                           
  1532                           ;Oscilador.c: 40:             break;
  1533  033E  2B6D               	goto	l144
  1534  033F                     l151:	
  1535                           ;Oscilador.c: 41:         case 7:
  1536                           
  1537                           
  1538                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1539  033F  1683               	bsf	3,5	;RP0=1, select bank1
  1540  0340  1303               	bcf	3,6	;RP1=0, select bank1
  1541  0341  170F               	bsf	15,6	;volatile
  1542                           
  1543                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1544  0342  168F               	bsf	15,5	;volatile
  1545                           
  1546                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1547  0343  160F               	bsf	15,4	;volatile
  1548                           
  1549                           ;Oscilador.c: 45:             break;
  1550  0344  2B6D               	goto	l144
  1551  0345                     l152:	
  1552                           ;Oscilador.c: 46:         default:
  1553                           
  1554                           
  1555                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1556  0345  1683               	bsf	3,5	;RP0=1, select bank1
  1557  0346  1303               	bcf	3,6	;RP1=0, select bank1
  1558  0347  170F               	bsf	15,6	;volatile
  1559                           
  1560                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1561  0348  168F               	bsf	15,5	;volatile
  1562                           
  1563                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1564  0349  120F               	bcf	15,4	;volatile
  1565                           
  1566                           ;Oscilador.c: 50:             break;
  1567  034A  2B6D               	goto	l144
  1568  034B                     l1605:
  1569  034B  0875               	movf	initOsc@IRCF,w
  1570  034C  00F3               	movwf	??_initOsc
  1571  034D  01F4               	clrf	??_initOsc+1
  1572                           
  1573                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1574                           ; Switch size 1, requested type "simple"
  1575                           ; Number of cases is 1, Range of values is 0 to 0
  1576                           ; switch strategies available:
  1577                           ; Name         Instructions Cycles
  1578                           ; simple_byte            4     3 (average)
  1579                           ; direct_byte           11     8 (fixed)
  1580                           ; jumptable            260     6 (fixed)
  1581                           ;	Chosen strategy is simple_byte
  1582  034E  0874               	movf	??_initOsc+1,w
  1583  034F  3A00               	xorlw	0	; case 0
  1584  0350  1903               	skipnz
  1585  0351  2B53               	goto	l2141
  1586  0352  2B45               	goto	l152
  1587  0353                     l2141:
  1588                           
  1589                           ; Switch size 1, requested type "simple"
  1590                           ; Number of cases is 8, Range of values is 0 to 7
  1591                           ; switch strategies available:
  1592                           ; Name         Instructions Cycles
  1593                           ; simple_byte           25    13 (average)
  1594                           ; direct_byte           32     8 (fixed)
  1595                           ; jumptable            260     6 (fixed)
  1596                           ;	Chosen strategy is simple_byte
  1597  0353  0873               	movf	??_initOsc,w
  1598  0354  3A00               	xorlw	0	; case 0
  1599  0355  1903               	skipnz
  1600  0356  2B15               	goto	l143
  1601  0357  3A01               	xorlw	1	; case 1
  1602  0358  1903               	skipnz
  1603  0359  2B1B               	goto	l145
  1604  035A  3A03               	xorlw	3	; case 2
  1605  035B  1903               	skipnz
  1606  035C  2B21               	goto	l146
  1607  035D  3A01               	xorlw	1	; case 3
  1608  035E  1903               	skipnz
  1609  035F  2B27               	goto	l147
  1610  0360  3A07               	xorlw	7	; case 4
  1611  0361  1903               	skipnz
  1612  0362  2B2D               	goto	l148
  1613  0363  3A01               	xorlw	1	; case 5
  1614  0364  1903               	skipnz
  1615  0365  2B33               	goto	l149
  1616  0366  3A03               	xorlw	3	; case 6
  1617  0367  1903               	skipnz
  1618  0368  2B39               	goto	l150
  1619  0369  3A01               	xorlw	1	; case 7
  1620  036A  1903               	skipnz
  1621  036B  2B3F               	goto	l151
  1622  036C  2B45               	goto	l152
  1623  036D                     l144:
  1624                           
  1625                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1626  036D  140F               	bsf	15,0	;volatile
  1627  036E                     l153:
  1628  036E  0008               	return
  1629  036F                     __end_of_initOsc:
  1630                           
  1631                           	psect	text5
  1632  05EB                     __ptext5:	
  1633 ;; *************** function _USART_Init_BaudRate *****************
  1634 ;; Defined at:
  1635 ;;		line 20 in file "USART.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1649 ;;      Params:         0       0       0       0       0
  1650 ;;      Locals:         0       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0
  1652 ;;      Totals:         0       0       0       0       0
  1653 ;;Total ram usage:        0 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    1
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_main
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           
  1664                           ;psect for function _USART_Init_BaudRate
  1665  05EB                     _USART_Init_BaudRate:
  1666  05EB                     l1643:	
  1667                           ;incstack = 0
  1668                           ; Regs used in _USART_Init_BaudRate: [wreg+status,2]
  1669                           
  1670                           
  1671                           ;USART.c: 21:     SPBRGH = 0;
  1672  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  1673  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  1674  05ED  019A               	clrf	26	;volatile
  1675  05EE                     l1645:
  1676                           
  1677                           ;USART.c: 22:     SPBRG = 12;
  1678  05EE  300C               	movlw	12
  1679  05EF  0099               	movwf	25	;volatile
  1680  05F0                     l266:
  1681  05F0  0008               	return
  1682  05F1                     __end_of_USART_Init_BaudRate:
  1683                           
  1684                           	psect	text6
  1685  05CC                     __ptext6:	
  1686 ;; *************** function _USART_Init *****************
  1687 ;; Defined at:
  1688 ;;		line 5 in file "USART.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;		None
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;		None
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		status,2
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1702 ;;      Params:         0       0       0       0       0
  1703 ;;      Locals:         0       0       0       0       0
  1704 ;;      Temps:          0       0       0       0       0
  1705 ;;      Totals:         0       0       0       0       0
  1706 ;;Total ram usage:        0 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    1
  1709 ;; This function calls:
  1710 ;;		Nothing
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           
  1717                           ;psect for function _USART_Init
  1718  05CC                     _USART_Init:
  1719  05CC                     l1639:	
  1720                           ;incstack = 0
  1721                           ; Regs used in _USART_Init: [status,2]
  1722                           
  1723                           
  1724                           ;USART.c: 7:     RCSTAbits.SPEN = 1;
  1725  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  1726  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  1727  05CE  1798               	bsf	24,7	;volatile
  1728                           
  1729                           ;USART.c: 8:     TXSTAbits.SYNC = 0;
  1730  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  1731  05D0  1303               	bcf	3,6	;RP1=0, select bank1
  1732  05D1  1218               	bcf	24,4	;volatile
  1733                           
  1734                           ;USART.c: 10:     TXSTAbits.TXEN = 1;
  1735  05D2  1698               	bsf	24,5	;volatile
  1736                           
  1737                           ;USART.c: 11:     TXSTAbits.TX9 = 0;
  1738  05D3  1318               	bcf	24,6	;volatile
  1739                           
  1740                           ;USART.c: 12:     TXSTAbits.BRGH = 1;
  1741  05D4  1518               	bsf	24,2	;volatile
  1742                           
  1743                           ;USART.c: 13:     TXSTAbits.TRMT = 0;
  1744  05D5  1098               	bcf	24,1	;volatile
  1745                           
  1746                           ;USART.c: 15:     RCSTAbits.RX9 = 0;
  1747  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  1748  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  1749  05D8  1318               	bcf	24,6	;volatile
  1750                           
  1751                           ;USART.c: 16:     RCSTAbits.CREN = 1;
  1752  05D9  1618               	bsf	24,4	;volatile
  1753  05DA                     l1641:
  1754                           
  1755                           ;USART.c: 17:     RCREG = 0;
  1756  05DA  019A               	clrf	26	;volatile
  1757  05DB                     l263:
  1758  05DB  0008               	return
  1759  05DC                     __end_of_USART_Init:
  1760                           
  1761                           	psect	text7
  1762  05E4                     __ptext7:	
  1763 ;; *************** function _USART_INTERRUPT *****************
  1764 ;; Defined at:
  1765 ;;		line 25 in file "USART.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		None
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1779 ;;      Params:         0       0       0       0       0
  1780 ;;      Locals:         0       0       0       0       0
  1781 ;;      Temps:          0       0       0       0       0
  1782 ;;      Totals:         0       0       0       0       0
  1783 ;;Total ram usage:        0 bytes
  1784 ;; Hardware stack levels used:    1
  1785 ;; Hardware stack levels required when called:    1
  1786 ;; This function calls:
  1787 ;;		Nothing
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           
  1794                           ;psect for function _USART_INTERRUPT
  1795  05E4                     _USART_INTERRUPT:
  1796  05E4                     l1647:	
  1797                           ;incstack = 0
  1798                           ; Regs used in _USART_INTERRUPT: []
  1799                           
  1800                           
  1801                           ;USART.c: 26:     INTCONbits.GIE = 1;
  1802  05E4  178B               	bsf	11,7	;volatile
  1803                           
  1804                           ;USART.c: 27:     INTCONbits.PEIE = 1;
  1805  05E5  170B               	bsf	11,6	;volatile
  1806                           
  1807                           ;USART.c: 28:     PIE1bits.RCIE = 1;
  1808  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  1809  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  1810  05E8  168C               	bsf	12,5	;volatile
  1811                           
  1812                           ;USART.c: 29:     PIE1bits.TXIE = 1;
  1813  05E9  160C               	bsf	12,4	;volatile
  1814  05EA                     l269:
  1815  05EA  0008               	return
  1816  05EB                     __end_of_USART_INTERRUPT:
  1817                           
  1818                           	psect	text8
  1819  04DE                     __ptext8:	
  1820 ;; *************** function _Trasmission *****************
  1821 ;; Defined at:
  1822 ;;		line 211 in file "pseudocodigo_lab3.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, status,2, status,0
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1836 ;;      Params:         0       0       0       0       0
  1837 ;;      Locals:         0       0       0       0       0
  1838 ;;      Temps:          1       0       0       0       0
  1839 ;;      Totals:         1       0       0       0       0
  1840 ;;Total ram usage:        1 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:    1
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_main
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           
  1851                           ;psect for function _Trasmission
  1852  04DE                     _Trasmission:
  1853  04DE                     l1703:	
  1854                           ;incstack = 0
  1855                           ; Regs used in _Trasmission: [wreg+status,2+status,0]
  1856                           
  1857                           
  1858                           ;pseudocodigo_lab3.c: 212:     if (PIR1bits.TXIF ){
  1859  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  1860  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  1861  04E0  1E0C               	btfss	12,4	;volatile
  1862  04E1  2CE3               	goto	u781
  1863  04E2  2CE4               	goto	u780
  1864  04E3                     u781:
  1865  04E3  2CFC               	goto	l134
  1866  04E4                     u780:
  1867  04E4                     l1705:
  1868                           
  1869                           ;pseudocodigo_lab3.c: 213:             if (eusart_toggle){
  1870  04E4  087A               	movf	_eusart_toggle,w
  1871  04E5  1903               	btfsc	3,2
  1872  04E6  2CE8               	goto	u791
  1873  04E7  2CE9               	goto	u790
  1874  04E8                     u791:
  1875  04E8  2CED               	goto	l1711
  1876  04E9                     u790:
  1877  04E9                     l1707:
  1878                           
  1879                           ;pseudocodigo_lab3.c: 214:                 TXREG = data2;
  1880  04E9  302D               	movlw	(low _data2)& (0+255)
  1881  04EA  0099               	movwf	25	;volatile
  1882  04EB                     l1709:
  1883                           
  1884                           ;pseudocodigo_lab3.c: 215:                 eusart_toggle = 0;
  1885  04EB  01FA               	clrf	_eusart_toggle
  1886                           
  1887                           ;pseudocodigo_lab3.c: 216:             }
  1888  04EC  2CF1               	goto	l1715
  1889  04ED                     l1711:
  1890                           
  1891                           ;pseudocodigo_lab3.c: 218:                 TXREG = data1;
  1892  04ED  3035               	movlw	(low _data1)& (0+255)
  1893  04EE  0099               	movwf	25	;volatile
  1894  04EF                     l1713:
  1895                           
  1896                           ;pseudocodigo_lab3.c: 219:                 eusart_toggle = 1;
  1897  04EF  01FA               	clrf	_eusart_toggle
  1898  04F0  0AFA               	incf	_eusart_toggle,f
  1899  04F1                     l1715:
  1900                           
  1901                           ;pseudocodigo_lab3.c: 221:             cont_usart++;
  1902  04F1  3001               	movlw	1
  1903  04F2  00F3               	movwf	??_Trasmission
  1904  04F3  0873               	movf	??_Trasmission,w
  1905  04F4  07F9               	addwf	_cont_usart,f
  1906  04F5                     l1717:
  1907                           
  1908                           ;pseudocodigo_lab3.c: 223:             if (cont_usart == 4){
  1909  04F5  3004               	movlw	4
  1910  04F6  0679               	xorwf	_cont_usart,w
  1911  04F7  1D03               	btfss	3,2
  1912  04F8  2CFA               	goto	u801
  1913  04F9  2CFB               	goto	u800
  1914  04FA                     u801:
  1915  04FA  2CFC               	goto	l134
  1916  04FB                     u800:
  1917  04FB                     l1719:
  1918                           
  1919                           ;pseudocodigo_lab3.c: 225:                 cont_usart = 0;
  1920  04FB  01F9               	clrf	_cont_usart
  1921  04FC                     l134:
  1922  04FC  0008               	return
  1923  04FD                     __end_of_Trasmission:
  1924                           
  1925                           	psect	text9
  1926  0240                     __ptext9:	
  1927 ;; *************** function _Show_val_LCD *****************
  1928 ;; Defined at:
  1929 ;;		line 188 in file "pseudocodigo_lab3.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0, pclath, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1943 ;;      Params:         0       0       0       0       0
  1944 ;;      Locals:         0       0       0       0       0
  1945 ;;      Temps:          0       2       0       0       0
  1946 ;;      Totals:         0       2       0       0       0
  1947 ;;Total ram usage:        2 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    4
  1950 ;; This function calls:
  1951 ;;		_Lcd_Set_Cursor
  1952 ;;		_Lcd_Write_Char
  1953 ;; This function is called by:
  1954 ;;		_main
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           
  1959                           ;psect for function _Show_val_LCD
  1960  0240                     _Show_val_LCD:
  1961  0240                     l2017:	
  1962                           ;incstack = 0
  1963                           ; Regs used in _Show_val_LCD: [wreg+status,2+status,0+pclath+cstack]
  1964                           
  1965                           
  1966                           ;pseudocodigo_lab3.c: 190:         Lcd_Set_Cursor(2,1);
  1967  0240  01F7               	clrf	Lcd_Set_Cursor@b
  1968  0241  0AF7               	incf	Lcd_Set_Cursor@b,f
  1969  0242  3002               	movlw	2
  1970  0243  120A  118A  2493  120A  118A  	fcall	_Lcd_Set_Cursor
  1971                           
  1972                           ;pseudocodigo_lab3.c: 191:         Lcd_Write_Char(data2[0]);
  1973  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1974  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1975  024A  082D               	movf	_data2,w
  1976  024B  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
  1977                           
  1978                           ;pseudocodigo_lab3.c: 192:         Lcd_Write_Char('.');
  1979  0250  302E               	movlw	46
  1980  0251  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
  1981                           
  1982                           ;pseudocodigo_lab3.c: 193:         Lcd_Write_Char(data2[1]);
  1983  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1984  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1985  0258  082E               	movf	_data2+1,w
  1986  0259  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
  1987                           
  1988                           ;pseudocodigo_lab3.c: 194:         Lcd_Write_Char(data2[2]);
  1989  025E  1283               	bcf	3,5	;RP0=0, select bank0
  1990  025F  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0260  082F               	movf	_data2+2,w
  1992  0261  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
  1993                           
  1994                           ;pseudocodigo_lab3.c: 195:         Lcd_Write_Char(data2[3]);
  1995  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1996  0267  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0268  0830               	movf	_data2+3,w
  1998  0269  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
  1999                           
  2000                           ;pseudocodigo_lab3.c: 196:         Lcd_Write_Char(' ');
  2001  026E  3020               	movlw	32
  2002  026F  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
  2003  0274                     l2019:
  2004                           
  2005                           ;pseudocodigo_lab3.c: 198:         _delay((unsigned long)((1)*(8000000/4000.0)));
  2006  0274  3003               	movlw	3
  2007  0275  1283               	bcf	3,5	;RP0=0, select bank0
  2008  0276  1303               	bcf	3,6	;RP1=0, select bank0
  2009  0277  00C1               	movwf	??_Show_val_LCD+1
  2010  0278  3097               	movlw	151
  2011  0279  00C0               	movwf	??_Show_val_LCD
  2012  027A                     u1107:
  2013  027A  0BC0               	decfsz	??_Show_val_LCD,f
  2014  027B  2A7A               	goto	u1107
  2015  027C  0BC1               	decfsz	??_Show_val_LCD+1,f
  2016  027D  2A7A               	goto	u1107
  2017  027E                     l2021:
  2018                           
  2019                           ;pseudocodigo_lab3.c: 200:         Lcd_Set_Cursor(2,7);
  2020  027E  3007               	movlw	7
  2021  027F  1283               	bcf	3,5	;RP0=0, select bank0
  2022  0280  1303               	bcf	3,6	;RP1=0, select bank0
  2023  0281  00C0               	movwf	??_Show_val_LCD
  2024  0282  0840               	movf	??_Show_val_LCD,w
  2025  0283  00F7               	movwf	Lcd_Set_Cursor@b
  2026  0284  3002               	movlw	2
  2027  0285  120A  118A  2493  120A  118A  	fcall	_Lcd_Set_Cursor
  2028  028A                     l2023:
  2029                           
  2030                           ;pseudocodigo_lab3.c: 201:         Lcd_Write_Char(data1[0]);
  2031  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2032  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2033  028C  0835               	movf	_data1,w
  2034  028D  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
  2035  0292                     l2025:
  2036                           
  2037                           ;pseudocodigo_lab3.c: 202:         Lcd_Write_Char('.');
  2038  0292  302E               	movlw	46
  2039  0293  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
  2040  0298                     l2027:
  2041                           
  2042                           ;pseudocodigo_lab3.c: 203:         Lcd_Write_Char(data1[1]);
  2043  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2045  029A  0836               	movf	_data1+1,w
  2046  029B  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
  2047  02A0                     l2029:
  2048                           
  2049                           ;pseudocodigo_lab3.c: 204:         Lcd_Write_Char(data1[2]);
  2050  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2051  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2052  02A2  0837               	movf	_data1+2,w
  2053  02A3  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
  2054  02A8                     l2031:
  2055                           
  2056                           ;pseudocodigo_lab3.c: 205:         Lcd_Write_Char(data1[3]);
  2057  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2058  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2059  02AA  0838               	movf	_data1+3,w
  2060  02AB  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
  2061  02B0                     l2033:
  2062                           
  2063                           ;pseudocodigo_lab3.c: 206:         Lcd_Write_Char(' ');
  2064  02B0  3020               	movlw	32
  2065  02B1  120A  118A  256B  120A  118A  	fcall	_Lcd_Write_Char
  2066  02B6                     l127:
  2067  02B6  0008               	return
  2068  02B7                     __end_of_Show_val_LCD:
  2069                           
  2070                           	psect	text10
  2071  056B                     __ptext10:	
  2072 ;; *************** function _Lcd_Write_Char *****************
  2073 ;; Defined at:
  2074 ;;		line 61 in file "LCD.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  a               1    wreg     unsigned char 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  a               1    5[COMMON] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0, pclath, cstack
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2088 ;;      Params:         0       0       0       0       0
  2089 ;;      Locals:         1       0       0       0       0
  2090 ;;      Temps:          1       0       0       0       0
  2091 ;;      Totals:         2       0       0       0       0
  2092 ;;Total ram usage:        2 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    2
  2095 ;; This function calls:
  2096 ;;		_Lcd_Port
  2097 ;; This function is called by:
  2098 ;;		_Show_val_LCD
  2099 ;;		_Lcd_Write_String
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           
  2104                           ;psect for function _Lcd_Write_Char
  2105  056B                     _Lcd_Write_Char:
  2106                           
  2107                           ;incstack = 0
  2108                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2109                           ;Lcd_Write_Char@a stored from wreg
  2110  056B  00F5               	movwf	Lcd_Write_Char@a
  2111  056C                     l1845:
  2112                           
  2113                           ;LCD.c: 62:    PORTEbits.RE0 = 1;
  2114  056C  1283               	bcf	3,5	;RP0=0, select bank0
  2115  056D  1303               	bcf	3,6	;RP1=0, select bank0
  2116  056E  1409               	bsf	9,0	;volatile
  2117  056F                     l1847:
  2118                           
  2119                           ;LCD.c: 63:    Lcd_Port(a);
  2120  056F  0875               	movf	Lcd_Write_Char@a,w
  2121  0570  120A  118A  25F1  120A  118A  	fcall	_Lcd_Port
  2122  0575                     l1849:
  2123                           
  2124                           ;LCD.c: 64:    PORTEbits.RE2 = 1;
  2125  0575  1283               	bcf	3,5	;RP0=0, select bank0
  2126  0576  1303               	bcf	3,6	;RP1=0, select bank0
  2127  0577  1509               	bsf	9,2	;volatile
  2128  0578                     l1851:
  2129                           
  2130                           ;LCD.c: 65:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2131  0578  301A               	movlw	26
  2132  0579  00F4               	movwf	??_Lcd_Write_Char
  2133  057A                     u1117:
  2134  057A  0BF4               	decfsz	??_Lcd_Write_Char,f
  2135  057B  2D7A               	goto	u1117
  2136  057C  0000               	nop
  2137  057D                     l1853:
  2138                           
  2139                           ;LCD.c: 66:    PORTEbits.RE2 = 0;
  2140  057D  1283               	bcf	3,5	;RP0=0, select bank0
  2141  057E  1303               	bcf	3,6	;RP1=0, select bank0
  2142  057F  1109               	bcf	9,2	;volatile
  2143  0580                     l184:
  2144  0580  0008               	return
  2145  0581                     __end_of_Lcd_Write_Char:
  2146                           
  2147                           	psect	text11
  2148  0493                     __ptext11:	
  2149 ;; *************** function _Lcd_Set_Cursor *****************
  2150 ;; Defined at:
  2151 ;;		line 48 in file "LCD.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  a               1    wreg     unsigned char 
  2154 ;;  b               1    7[COMMON] unsigned char 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  a               1    1[BANK0 ] unsigned char 
  2157 ;;  temp            1    2[BANK0 ] unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1    wreg      void 
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, status,0, pclath, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2167 ;;      Params:         1       0       0       0       0
  2168 ;;      Locals:         0       2       0       0       0
  2169 ;;      Temps:          0       1       0       0       0
  2170 ;;      Totals:         1       3       0       0       0
  2171 ;;Total ram usage:        4 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    3
  2174 ;; This function calls:
  2175 ;;		_Lcd_Cmd
  2176 ;; This function is called by:
  2177 ;;		_titulos_LCD
  2178 ;;		_Show_val_LCD
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           
  2183                           ;psect for function _Lcd_Set_Cursor
  2184  0493                     _Lcd_Set_Cursor:
  2185                           
  2186                           ;incstack = 0
  2187                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2188                           ;Lcd_Set_Cursor@a stored from wreg
  2189  0493  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0494  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0495  00BE               	movwf	Lcd_Set_Cursor@a
  2192  0496                     l1891:
  2193                           
  2194                           ;LCD.c: 49:  char temp;;LCD.c: 50:  if(a == 1){
  2195  0496  033E               	decf	Lcd_Set_Cursor@a,w
  2196  0497  1D03               	btfss	3,2
  2197  0498  2C9A               	goto	u911
  2198  0499  2C9B               	goto	u910
  2199  049A                     u911:
  2200  049A  2CA7               	goto	l1897
  2201  049B                     u910:
  2202  049B                     l1893:
  2203                           
  2204                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2205  049B  0877               	movf	Lcd_Set_Cursor@b,w
  2206  049C  3E7F               	addlw	127
  2207  049D  00BD               	movwf	??_Lcd_Set_Cursor
  2208  049E  083D               	movf	??_Lcd_Set_Cursor,w
  2209  049F  00BF               	movwf	Lcd_Set_Cursor@temp
  2210  04A0                     l1895:
  2211                           
  2212                           ;LCD.c: 52:         Lcd_Cmd(temp);
  2213  04A0  083F               	movf	Lcd_Set_Cursor@temp,w
  2214  04A1  120A  118A  2551  120A  118A  	fcall	_Lcd_Cmd
  2215                           
  2216                           ;LCD.c: 53:  }
  2217  04A6  2CB8               	goto	l181
  2218  04A7                     l1897:
  2219  04A7  3002               	movlw	2
  2220  04A8  063E               	xorwf	Lcd_Set_Cursor@a,w
  2221  04A9  1D03               	btfss	3,2
  2222  04AA  2CAC               	goto	u921
  2223  04AB  2CAD               	goto	u920
  2224  04AC                     u921:
  2225  04AC  2CB8               	goto	l181
  2226  04AD                     u920:
  2227  04AD                     l1899:
  2228                           
  2229                           ;LCD.c: 55:   temp = 0xC0 + b - 1;
  2230  04AD  0877               	movf	Lcd_Set_Cursor@b,w
  2231  04AE  3EBF               	addlw	191
  2232  04AF  00BD               	movwf	??_Lcd_Set_Cursor
  2233  04B0  083D               	movf	??_Lcd_Set_Cursor,w
  2234  04B1  00BF               	movwf	Lcd_Set_Cursor@temp
  2235  04B2                     l1901:
  2236                           
  2237                           ;LCD.c: 56:   Lcd_Cmd(temp);
  2238  04B2  083F               	movf	Lcd_Set_Cursor@temp,w
  2239  04B3  120A  118A  2551  120A  118A  	fcall	_Lcd_Cmd
  2240  04B8                     l181:
  2241  04B8  0008               	return
  2242  04B9                     __end_of_Lcd_Set_Cursor:
  2243                           
  2244                           	psect	text12
  2245  036F                     __ptext12:	
  2246 ;; *************** function _Lcd_Init *****************
  2247 ;; Defined at:
  2248 ;;		line 14 in file "LCD.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;		None
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;		None
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      void 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0, pclath, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2262 ;;      Params:         0       0       0       0       0
  2263 ;;      Locals:         0       0       0       0       0
  2264 ;;      Temps:          0       2       0       0       0
  2265 ;;      Totals:         0       2       0       0       0
  2266 ;;Total ram usage:        2 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    3
  2269 ;; This function calls:
  2270 ;;		_Lcd_Cmd
  2271 ;;		_Lcd_Port
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           
  2278                           ;psect for function _Lcd_Init
  2279  036F                     _Lcd_Init:
  2280  036F                     l2001:	
  2281                           ;incstack = 0
  2282                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2283                           
  2284                           
  2285                           ;LCD.c: 15:   Lcd_Port(0x00);
  2286  036F  3000               	movlw	0
  2287  0370  120A  118A  25F1  120A  118A  	fcall	_Lcd_Port
  2288  0375                     l2003:
  2289                           
  2290                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2291  0375  3034               	movlw	52
  2292  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2293  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2294  0378  00BE               	movwf	??_Lcd_Init+1
  2295  0379  30F1               	movlw	241
  2296  037A  00BD               	movwf	??_Lcd_Init
  2297  037B                     u1127:
  2298  037B  0BBD               	decfsz	??_Lcd_Init,f
  2299  037C  2B7B               	goto	u1127
  2300  037D  0BBE               	decfsz	??_Lcd_Init+1,f
  2301  037E  2B7B               	goto	u1127
  2302  037F                     l2005:
  2303                           
  2304                           ;LCD.c: 17:   Lcd_Cmd(0x30);
  2305  037F  3030               	movlw	48
  2306  0380  120A  118A  2551  120A  118A  	fcall	_Lcd_Cmd
  2307                           
  2308                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2309  0385  300D               	movlw	13
  2310  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2311  0387  1303               	bcf	3,6	;RP1=0, select bank0
  2312  0388  00BE               	movwf	??_Lcd_Init+1
  2313  0389  30FB               	movlw	251
  2314  038A  00BD               	movwf	??_Lcd_Init
  2315  038B                     u1137:
  2316  038B  0BBD               	decfsz	??_Lcd_Init,f
  2317  038C  2B8B               	goto	u1137
  2318  038D  0BBE               	decfsz	??_Lcd_Init+1,f
  2319  038E  2B8B               	goto	u1137
  2320  038F                     l2007:
  2321                           
  2322                           ;LCD.c: 19:   Lcd_Cmd(0x30);
  2323  038F  3030               	movlw	48
  2324  0390  120A  118A  2551  120A  118A  	fcall	_Lcd_Cmd
  2325  0395                     l2009:
  2326                           
  2327                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2328  0395  301D               	movlw	29
  2329  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2330  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2331  0398  00BE               	movwf	??_Lcd_Init+1
  2332  0399  3090               	movlw	144
  2333  039A  00BD               	movwf	??_Lcd_Init
  2334  039B                     u1147:
  2335  039B  0BBD               	decfsz	??_Lcd_Init,f
  2336  039C  2B9B               	goto	u1147
  2337  039D  0BBE               	decfsz	??_Lcd_Init+1,f
  2338  039E  2B9B               	goto	u1147
  2339  039F  0000               	nop
  2340                           
  2341                           ;LCD.c: 21:   Lcd_Cmd(0x30);
  2342  03A0  3030               	movlw	48
  2343  03A1  120A  118A  2551  120A  118A  	fcall	_Lcd_Cmd
  2344                           
  2345                           ;LCD.c: 22:   Lcd_Cmd(0x38);
  2346  03A6  3038               	movlw	56
  2347  03A7  120A  118A  2551  120A  118A  	fcall	_Lcd_Cmd
  2348                           
  2349                           ;LCD.c: 23:   Lcd_Cmd(0x0C);
  2350  03AC  300C               	movlw	12
  2351  03AD  120A  118A  2551  120A  118A  	fcall	_Lcd_Cmd
  2352                           
  2353                           ;LCD.c: 24:   Lcd_Cmd(0x01);
  2354  03B2  3001               	movlw	1
  2355  03B3  120A  118A  2551  120A  118A  	fcall	_Lcd_Cmd
  2356                           
  2357                           ;LCD.c: 25:   Lcd_Cmd(0x06);
  2358  03B8  3006               	movlw	6
  2359  03B9  120A  118A  2551  120A  118A  	fcall	_Lcd_Cmd
  2360  03BE                     l166:
  2361  03BE  0008               	return
  2362  03BF                     __end_of_Lcd_Init:
  2363                           
  2364                           	psect	text13
  2365  0551                     __ptext13:	
  2366 ;; *************** function _Lcd_Cmd *****************
  2367 ;; Defined at:
  2368 ;;		line 33 in file "LCD.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  a               1    wreg     unsigned char 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  a               1    6[COMMON] unsigned char 
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2, status,0, pclath, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2382 ;;      Params:         0       0       0       0       0
  2383 ;;      Locals:         1       0       0       0       0
  2384 ;;      Temps:          2       0       0       0       0
  2385 ;;      Totals:         3       0       0       0       0
  2386 ;;Total ram usage:        3 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    2
  2389 ;; This function calls:
  2390 ;;		_Lcd_Port
  2391 ;; This function is called by:
  2392 ;;		_Lcd_Init
  2393 ;;		_Lcd_Set_Cursor
  2394 ;;		_Lcd_Clear
  2395 ;;		_Lcd_Shift_Right
  2396 ;;		_Lcd_Shift_Left
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           
  2401                           ;psect for function _Lcd_Cmd
  2402  0551                     _Lcd_Cmd:
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2406                           ;Lcd_Cmd@a stored from wreg
  2407  0551  00F6               	movwf	Lcd_Cmd@a
  2408  0552                     l1855:
  2409                           
  2410                           ;LCD.c: 34:  PORTEbits.RE0 = 0;
  2411  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2412  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2413  0554  1009               	bcf	9,0	;volatile
  2414  0555                     l1857:
  2415                           
  2416                           ;LCD.c: 35:  Lcd_Port(a);
  2417  0555  0876               	movf	Lcd_Cmd@a,w
  2418  0556  120A  118A  25F1  120A  118A  	fcall	_Lcd_Port
  2419  055B                     l1859:
  2420                           
  2421                           ;LCD.c: 36:  PORTEbits.RE2 = 1;
  2422  055B  1283               	bcf	3,5	;RP0=0, select bank0
  2423  055C  1303               	bcf	3,6	;RP1=0, select bank0
  2424  055D  1509               	bsf	9,2	;volatile
  2425  055E                     l1861:
  2426                           
  2427                           ;LCD.c: 37:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2428  055E  300B               	movlw	11
  2429  055F  00F5               	movwf	??_Lcd_Cmd+1
  2430  0560  3062               	movlw	98
  2431  0561  00F4               	movwf	??_Lcd_Cmd
  2432  0562                     u1157:
  2433  0562  0BF4               	decfsz	??_Lcd_Cmd,f
  2434  0563  2D62               	goto	u1157
  2435  0564  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2436  0565  2D62               	goto	u1157
  2437  0566  0000               	nop
  2438  0567                     l1863:
  2439                           
  2440                           ;LCD.c: 38:         PORTEbits.RE2 = 0;
  2441  0567  1283               	bcf	3,5	;RP0=0, select bank0
  2442  0568  1303               	bcf	3,6	;RP1=0, select bank0
  2443  0569  1109               	bcf	9,2	;volatile
  2444  056A                     l172:
  2445  056A  0008               	return
  2446  056B                     __end_of_Lcd_Cmd:
  2447                           
  2448                           	psect	text14
  2449  05F1                     __ptext14:	
  2450 ;; *************** function _Lcd_Port *****************
  2451 ;; Defined at:
  2452 ;;		line 29 in file "LCD.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  a               1    wreg     unsigned char 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  a               1    3[COMMON] unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2466 ;;      Params:         0       0       0       0       0
  2467 ;;      Locals:         1       0       0       0       0
  2468 ;;      Temps:          0       0       0       0       0
  2469 ;;      Totals:         1       0       0       0       0
  2470 ;;Total ram usage:        1 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    1
  2473 ;; This function calls:
  2474 ;;		Nothing
  2475 ;; This function is called by:
  2476 ;;		_Lcd_Init
  2477 ;;		_Lcd_Cmd
  2478 ;;		_Lcd_Write_Char
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           
  2483                           ;psect for function _Lcd_Port
  2484  05F1                     _Lcd_Port:
  2485                           
  2486                           ;incstack = 0
  2487                           ; Regs used in _Lcd_Port: [wreg]
  2488                           ;Lcd_Port@a stored from wreg
  2489  05F1  00F3               	movwf	Lcd_Port@a
  2490  05F2                     l1843:
  2491                           
  2492                           ;LCD.c: 30:     PORTD = a;
  2493  05F2  0873               	movf	Lcd_Port@a,w
  2494  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  2495  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  2496  05F5  0088               	movwf	8	;volatile
  2497  05F6                     l169:
  2498  05F6  0008               	return
  2499  05F7                     __end_of_Lcd_Port:
  2500                           
  2501                           	psect	text15
  2502  046A                     __ptext15:	
  2503 ;; *************** function _ADC_to_string *****************
  2504 ;; Defined at:
  2505 ;;		line 181 in file "pseudocodigo_lab3.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2519 ;;      Params:         0       0       0       0       0
  2520 ;;      Locals:         0       0       0       0       0
  2521 ;;      Temps:          0       3       0       0       0
  2522 ;;      Totals:         0       3       0       0       0
  2523 ;;Total ram usage:        3 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; Hardware stack levels required when called:    3
  2526 ;; This function calls:
  2527 ;;		_sprintf
  2528 ;; This function is called by:
  2529 ;;		_main
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           
  2534                           ;psect for function _ADC_to_string
  2535  046A                     _ADC_to_string:
  2536  046A                     l2015:	
  2537                           ;incstack = 0
  2538                           ; Regs used in _ADC_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2539                           
  2540                           
  2541                           ;pseudocodigo_lab3.c: 182:     sprintf(data2, "%.3iV", S1_val<<1);
  2542  046A  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2543  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2544  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2545  046D  00D3               	movwf	??_ADC_to_string
  2546  046E  0853               	movf	??_ADC_to_string,w
  2547  046F  00C6               	movwf	sprintf@f
  2548  0470  082C               	movf	_S1_val,w
  2549  0471  00D4               	movwf	??_ADC_to_string+1
  2550  0472  01D5               	clrf	??_ADC_to_string+2
  2551  0473  1003               	clrc
  2552  0474  0D54               	rlf	??_ADC_to_string+1,w
  2553  0475  00C7               	movwf	?_sprintf+1
  2554  0476  0D55               	rlf	??_ADC_to_string+2,w
  2555  0477  00C8               	movwf	?_sprintf+2
  2556  0478  302D               	movlw	(low (_data2| 0))& (0+255)
  2557  0479  120A  118A  201F  120A  118A  	fcall	_sprintf
  2558                           
  2559                           ;pseudocodigo_lab3.c: 183:     sprintf(data1, "%.3iV", S2_val<<1);
  2560  047E  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2561  047F  1283               	bcf	3,5	;RP0=0, select bank0
  2562  0480  1303               	bcf	3,6	;RP1=0, select bank0
  2563  0481  00D3               	movwf	??_ADC_to_string
  2564  0482  0853               	movf	??_ADC_to_string,w
  2565  0483  00C6               	movwf	sprintf@f
  2566  0484  082B               	movf	_S2_val,w
  2567  0485  00D4               	movwf	??_ADC_to_string+1
  2568  0486  01D5               	clrf	??_ADC_to_string+2
  2569  0487  1003               	clrc
  2570  0488  0D54               	rlf	??_ADC_to_string+1,w
  2571  0489  00C7               	movwf	?_sprintf+1
  2572  048A  0D55               	rlf	??_ADC_to_string+2,w
  2573  048B  00C8               	movwf	?_sprintf+2
  2574  048C  3035               	movlw	(low (_data1| 0))& (0+255)
  2575  048D  120A  118A  201F  120A  118A  	fcall	_sprintf
  2576  0492                     l124:
  2577  0492  0008               	return
  2578  0493                     __end_of_ADC_to_string:
  2579                           
  2580                           	psect	text16
  2581  001F                     __ptext16:	
  2582 ;; *************** function _sprintf *****************
  2583 ;; Defined at:
  2584 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  sp              1    wreg     PTR unsigned char 
  2587 ;;		 -> data1(8), data2(8), 
  2588 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  2589 ;;		 -> STR_3(6), STR_2(6), 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  2592 ;;		 -> data1(8), data2(8), 
  2593 ;;  tmpval          4    0        struct .
  2594 ;;  val             2   17[BANK0 ] unsigned int 
  2595 ;;  cp              2    0        PTR const unsigned char 
  2596 ;;  len             2    0        unsigned int 
  2597 ;;  c               1   21[BANK0 ] unsigned char 
  2598 ;;  prec            1   20[BANK0 ] char 
  2599 ;;  flag            1   16[BANK0 ] unsigned char 
  2600 ;;  ap              1   15[BANK0 ] PTR void [1]
  2601 ;;		 -> ?_sprintf(2), 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  2    9[BANK0 ] int 
  2604 ;; Registers used:
  2605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2611 ;;      Params:         0       3       0       0       0
  2612 ;;      Locals:         0       7       0       0       0
  2613 ;;      Temps:          0       3       0       0       0
  2614 ;;      Totals:         0      13       0       0       0
  2615 ;;Total ram usage:       13 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; Hardware stack levels required when called:    2
  2618 ;; This function calls:
  2619 ;;		___bmul
  2620 ;;		___lwdiv
  2621 ;;		___lwmod
  2622 ;;		_isdigit
  2623 ;; This function is called by:
  2624 ;;		_ADC_to_string
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           
  2629                           ;psect for function _sprintf
  2630  001F                     _sprintf:
  2631                           
  2632                           ;incstack = 0
  2633                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2634                           ;sprintf@sp stored from wreg
  2635  001F  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0020  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0021  00D0               	movwf	sprintf@sp
  2638  0022                     l1911:
  2639                           
  2640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2641  0022  3047               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2642  0023  00C9               	movwf	??_sprintf
  2643  0024  0849               	movf	??_sprintf,w
  2644  0025  00CC               	movwf	sprintf@ap
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2647  0026  296D               	goto	l1989
  2648  0027                     l1913:
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2651  0027  3025               	movlw	37
  2652  0028  0652               	xorwf	sprintf@c,w
  2653  0029  1903               	btfsc	3,2
  2654  002A  282C               	goto	u941
  2655  002B  282D               	goto	u940
  2656  002C                     u941:
  2657  002C  2839               	goto	l1919
  2658  002D                     u940:
  2659  002D                     l1915:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2662  002D  0852               	movf	sprintf@c,w
  2663  002E  00C9               	movwf	??_sprintf
  2664  002F  0850               	movf	sprintf@sp,w
  2665  0030  0084               	movwf	4
  2666  0031  0849               	movf	??_sprintf,w
  2667  0032  1383               	bcf	3,7	;select IRP bank0
  2668  0033  0080               	movwf	0
  2669  0034                     l1917:
  2670  0034  3001               	movlw	1
  2671  0035  00C9               	movwf	??_sprintf
  2672  0036  0849               	movf	??_sprintf,w
  2673  0037  07D0               	addwf	sprintf@sp,f
  2674                           
  2675                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2676  0038  296D               	goto	l1989
  2677  0039                     l1919:
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2680  0039  01CD               	clrf	sprintf@flag
  2681  003A                     l1921:
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2684  003A  0846               	movf	sprintf@f,w
  2685  003B  0084               	movwf	4
  2686  003C  120A  118A  24B9  120A  118A  	fcall	stringdir
  2687  0041  3A2E               	xorlw	46
  2688  0042  1D03               	skipz
  2689  0043  2845               	goto	u951
  2690  0044  2846               	goto	u950
  2691  0045                     u951:
  2692  0045  287D               	goto	l1935
  2693  0046                     u950:
  2694  0046                     l1923:
  2695                           
  2696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2697  0046  3001               	movlw	1
  2698  0047  00C9               	movwf	??_sprintf
  2699  0048  0849               	movf	??_sprintf,w
  2700  0049  07C6               	addwf	sprintf@f,f
  2701  004A                     l1925:
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2704  004A  01D1               	clrf	sprintf@prec
  2705                           
  2706                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2707  004B  286C               	goto	l1933
  2708  004C                     l1927:
  2709                           
  2710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2711  004C  1283               	bcf	3,5	;RP0=0, select bank0
  2712  004D  1303               	bcf	3,6	;RP1=0, select bank0
  2713  004E  0851               	movf	sprintf@prec,w
  2714  004F  00C9               	movwf	??_sprintf
  2715  0050  0849               	movf	??_sprintf,w
  2716  0051  00F3               	movwf	___bmul@multiplicand
  2717  0052  300A               	movlw	10
  2718  0053  120A  118A  2581  120A  118A  	fcall	___bmul
  2719  0058  1283               	bcf	3,5	;RP0=0, select bank0
  2720  0059  1303               	bcf	3,6	;RP1=0, select bank0
  2721  005A  00CA               	movwf	??_sprintf+1
  2722  005B  084A               	movf	??_sprintf+1,w
  2723  005C  00D1               	movwf	sprintf@prec
  2724  005D                     l1929:
  2725                           
  2726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2727  005D  0846               	movf	sprintf@f,w
  2728  005E  0084               	movwf	4
  2729  005F  120A  118A  24B9  120A  118A  	fcall	stringdir
  2730  0064  3ED0               	addlw	-48
  2731  0065  00C9               	movwf	??_sprintf
  2732  0066  0849               	movf	??_sprintf,w
  2733  0067  07D1               	addwf	sprintf@prec,f
  2734  0068                     l1931:
  2735  0068  3001               	movlw	1
  2736  0069  00C9               	movwf	??_sprintf
  2737  006A  0849               	movf	??_sprintf,w
  2738  006B  07C6               	addwf	sprintf@f,f
  2739  006C                     l1933:
  2740                           
  2741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2742  006C  0846               	movf	sprintf@f,w
  2743  006D  0084               	movwf	4
  2744  006E  120A  118A  24B9  120A  118A  	fcall	stringdir
  2745  0073  120A  118A  25A9  120A  118A  	fcall	_isdigit
  2746  0078  1803               	btfsc	3,0
  2747  0079  287B               	goto	u961
  2748  007A  287C               	goto	u960
  2749  007B                     u961:
  2750  007B  284C               	goto	l1927
  2751  007C                     u960:
  2752  007C  287E               	goto	l1939
  2753  007D                     l1935:
  2754                           
  2755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2756  007D  01D1               	clrf	sprintf@prec
  2757  007E                     l1939:
  2758  007E  3001               	movlw	1
  2759  007F  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0080  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0081  07C6               	addwf	sprintf@f,f
  2762  0082  30FF               	movlw	-1
  2763  0083  0746               	addwf	sprintf@f,w
  2764  0084  0084               	movwf	4
  2765  0085  120A  118A  24B9  120A  118A  	fcall	stringdir
  2766  008A  00D2               	movwf	sprintf@c
  2767  008B  00C9               	movwf	??_sprintf
  2768  008C  01CA               	clrf	??_sprintf+1
  2769                           
  2770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2771                           ; Switch size 1, requested type "simple"
  2772                           ; Number of cases is 1, Range of values is 0 to 0
  2773                           ; switch strategies available:
  2774                           ; Name         Instructions Cycles
  2775                           ; simple_byte            4     3 (average)
  2776                           ; direct_byte           11     8 (fixed)
  2777                           ; jumptable            260     6 (fixed)
  2778                           ;	Chosen strategy is simple_byte
  2779  008D  084A               	movf	??_sprintf+1,w
  2780  008E  3A00               	xorlw	0	; case 0
  2781  008F  1903               	skipnz
  2782  0090  2892               	goto	l2143
  2783  0091  296D               	goto	l1989
  2784  0092                     l2143:
  2785                           
  2786                           ; Switch size 1, requested type "simple"
  2787                           ; Number of cases is 3, Range of values is 0 to 105
  2788                           ; switch strategies available:
  2789                           ; Name         Instructions Cycles
  2790                           ; simple_byte           10     6 (average)
  2791                           ; jumptable            260     6 (fixed)
  2792                           ;	Chosen strategy is simple_byte
  2793  0092  0849               	movf	??_sprintf,w
  2794  0093  3A00               	xorlw	0	; case 0
  2795  0094  1903               	skipnz
  2796  0095  297F               	goto	l1991
  2797  0096  3A64               	xorlw	100	; case 100
  2798  0097  1903               	skipnz
  2799  0098  289D               	goto	l1941
  2800  0099  3A0D               	xorlw	13	; case 105
  2801  009A  1903               	skipnz
  2802  009B  289D               	goto	l1941
  2803  009C  296D               	goto	l1989
  2804  009D                     l1941:
  2805                           
  2806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2807  009D  084C               	movf	sprintf@ap,w
  2808  009E  0084               	movwf	4
  2809  009F  1383               	bcf	3,7	;select IRP bank0
  2810  00A0  0800               	movf	0,w
  2811  00A1  00CE               	movwf	sprintf@val
  2812  00A2  0A84               	incf	4,f
  2813  00A3  0800               	movf	0,w
  2814  00A4  00CF               	movwf	sprintf@val+1
  2815  00A5                     l1943:
  2816  00A5  3002               	movlw	2
  2817  00A6  00C9               	movwf	??_sprintf
  2818  00A7  0849               	movf	??_sprintf,w
  2819  00A8  07CC               	addwf	sprintf@ap,f
  2820  00A9                     l1945:
  2821                           
  2822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2823  00A9  1FCF               	btfss	sprintf@val+1,7
  2824  00AA  28AC               	goto	u971
  2825  00AB  28AD               	goto	u970
  2826  00AC                     u971:
  2827  00AC  28B6               	goto	l1951
  2828  00AD                     u970:
  2829  00AD                     l1947:
  2830                           
  2831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2832  00AD  3003               	movlw	3
  2833  00AE  00C9               	movwf	??_sprintf
  2834  00AF  0849               	movf	??_sprintf,w
  2835  00B0  04CD               	iorwf	sprintf@flag,f
  2836  00B1                     l1949:
  2837                           
  2838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2839  00B1  09CE               	comf	sprintf@val,f
  2840  00B2  09CF               	comf	sprintf@val+1,f
  2841  00B3  0ACE               	incf	sprintf@val,f
  2842  00B4  1903               	skipnz
  2843  00B5  0ACF               	incf	sprintf@val+1,f
  2844  00B6                     l1951:
  2845                           
  2846                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  2847  00B6  0851               	movf	sprintf@prec,w
  2848  00B7  1D03               	btfss	3,2
  2849  00B8  28BA               	goto	u981
  2850  00B9  28BB               	goto	u980
  2851  00BA                     u981:
  2852  00BA  28C5               	goto	l1957
  2853  00BB                     u980:
  2854  00BB                     l1953:
  2855  00BB  084E               	movf	sprintf@val,w
  2856  00BC  044F               	iorwf	sprintf@val+1,w
  2857  00BD  1D03               	btfss	3,2
  2858  00BE  28C0               	goto	u991
  2859  00BF  28C1               	goto	u990
  2860  00C0                     u991:
  2861  00C0  28C5               	goto	l1957
  2862  00C1                     u990:
  2863  00C1                     l1955:
  2864                           
  2865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  2866  00C1  3001               	movlw	1
  2867  00C2  00C9               	movwf	??_sprintf
  2868  00C3  0849               	movf	??_sprintf,w
  2869  00C4  07D1               	addwf	sprintf@prec,f
  2870  00C5                     l1957:
  2871                           
  2872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2873  00C5  01D2               	clrf	sprintf@c
  2874  00C6  0AD2               	incf	sprintf@c,f
  2875  00C7                     l1961:
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2878  00C7  0852               	movf	sprintf@c,w
  2879  00C8  00C9               	movwf	??_sprintf
  2880  00C9  0749               	addwf	??_sprintf,w
  2881  00CA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2882  00CB  0084               	movwf	4
  2883  00CC  120A  118A  24B9  120A  118A  	fcall	stringdir
  2884  00D1  00CA               	movwf	??_sprintf+1
  2885  00D2  120A  118A  24B9  120A  118A  	fcall	stringdir
  2886  00D7  00CB               	movwf	??_sprintf+2
  2887  00D8  084B               	movf	??_sprintf+2,w
  2888  00D9  024F               	subwf	sprintf@val+1,w
  2889  00DA  1D03               	skipz
  2890  00DB  28DE               	goto	u1005
  2891  00DC  084A               	movf	??_sprintf+1,w
  2892  00DD  024E               	subwf	sprintf@val,w
  2893  00DE                     u1005:
  2894  00DE  1803               	skipnc
  2895  00DF  28E1               	goto	u1001
  2896  00E0  28E2               	goto	u1000
  2897  00E1                     u1001:
  2898  00E1  28E3               	goto	l1965
  2899  00E2                     u1000:
  2900  00E2  28ED               	goto	l1967
  2901  00E3                     l1965:
  2902  00E3  3001               	movlw	1
  2903  00E4  00C9               	movwf	??_sprintf
  2904  00E5  0849               	movf	??_sprintf,w
  2905  00E6  07D2               	addwf	sprintf@c,f
  2906  00E7  3005               	movlw	5
  2907  00E8  0652               	xorwf	sprintf@c,w
  2908  00E9  1D03               	btfss	3,2
  2909  00EA  28EC               	goto	u1011
  2910  00EB  28ED               	goto	u1010
  2911  00EC                     u1011:
  2912  00EC  28C7               	goto	l1961
  2913  00ED                     u1010:
  2914  00ED                     l1967:
  2915                           
  2916                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  2917  00ED  0851               	movf	sprintf@prec,w
  2918  00EE  00C9               	movwf	??_sprintf
  2919  00EF  01CA               	clrf	??_sprintf+1
  2920  00F0  1BC9               	btfsc	??_sprintf,7
  2921  00F1  03CA               	decf	??_sprintf+1,f
  2922  00F2  084A               	movf	??_sprintf+1,w
  2923  00F3  3A80               	xorlw	128
  2924  00F4  3C80               	sublw	128
  2925  00F5  1D03               	skipz
  2926  00F6  28F9               	goto	u1025
  2927  00F7  0849               	movf	??_sprintf,w
  2928  00F8  0252               	subwf	sprintf@c,w
  2929  00F9                     u1025:
  2930  00F9  1803               	skipnc
  2931  00FA  28FC               	goto	u1021
  2932  00FB  28FD               	goto	u1020
  2933  00FC                     u1021:
  2934  00FC  28FE               	goto	l1971
  2935  00FD                     u1020:
  2936  00FD                     l1969:
  2937  00FD  2918               	goto	l1975
  2938  00FE                     l1971:
  2939  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  2940  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  2941  0100  0851               	movf	sprintf@prec,w
  2942  0101  00C9               	movwf	??_sprintf
  2943  0102  01CA               	clrf	??_sprintf+1
  2944  0103  1BC9               	btfsc	??_sprintf,7
  2945  0104  03CA               	decf	??_sprintf+1,f
  2946  0105  084A               	movf	??_sprintf+1,w
  2947  0106  3A80               	xorlw	128
  2948  0107  00CB               	movwf	??_sprintf+2
  2949  0108  3080               	movlw	128
  2950  0109  024B               	subwf	??_sprintf+2,w
  2951  010A  1D03               	skipz
  2952  010B  290E               	goto	u1035
  2953  010C  0852               	movf	sprintf@c,w
  2954  010D  0249               	subwf	??_sprintf,w
  2955  010E                     u1035:
  2956  010E  1803               	skipnc
  2957  010F  2911               	goto	u1031
  2958  0110  2912               	goto	u1030
  2959  0111                     u1031:
  2960  0111  2918               	goto	l1975
  2961  0112                     u1030:
  2962  0112                     l1973:
  2963                           
  2964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  2965  0112  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0113  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0114  0852               	movf	sprintf@c,w
  2968  0115  00C9               	movwf	??_sprintf
  2969  0116  0849               	movf	??_sprintf,w
  2970  0117  00D1               	movwf	sprintf@prec
  2971  0118                     l1975:
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2974  0118  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0119  1303               	bcf	3,6	;RP1=0, select bank0
  2976  011A  084D               	movf	sprintf@flag,w
  2977  011B  3903               	andlw	3
  2978  011C  1903               	btfsc	3,2
  2979  011D  291F               	goto	u1041
  2980  011E  2920               	goto	u1040
  2981  011F                     u1041:
  2982  011F  2964               	goto	l1987
  2983  0120                     u1040:
  2984  0120                     l1977:
  2985                           
  2986                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2987  0120  302D               	movlw	45
  2988  0121  00C9               	movwf	??_sprintf
  2989  0122  0850               	movf	sprintf@sp,w
  2990  0123  0084               	movwf	4
  2991  0124  0849               	movf	??_sprintf,w
  2992  0125  1383               	bcf	3,7	;select IRP bank0
  2993  0126  0080               	movwf	0
  2994  0127                     l1979:
  2995  0127  3001               	movlw	1
  2996  0128  00C9               	movwf	??_sprintf
  2997  0129  0849               	movf	??_sprintf,w
  2998  012A  07D0               	addwf	sprintf@sp,f
  2999  012B  2964               	goto	l1987
  3000  012C                     l1981:
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3003  012C  300A               	movlw	10
  3004  012D  00C0               	movwf	___lwmod@divisor
  3005  012E  3000               	movlw	0
  3006  012F  00C1               	movwf	___lwmod@divisor+1
  3007  0130  0851               	movf	sprintf@prec,w
  3008  0131  00C9               	movwf	??_sprintf
  3009  0132  0749               	addwf	??_sprintf,w
  3010  0133  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3011  0134  0084               	movwf	4
  3012  0135  120A  118A  24B9  120A  118A  	fcall	stringdir
  3013  013A  00F3               	movwf	___lwdiv@divisor
  3014  013B  120A  118A  24B9  120A  118A  	fcall	stringdir
  3015  0140  00F4               	movwf	___lwdiv@divisor+1
  3016  0141  084F               	movf	sprintf@val+1,w
  3017  0142  00F6               	movwf	___lwdiv@dividend+1
  3018  0143  084E               	movf	sprintf@val,w
  3019  0144  00F5               	movwf	___lwdiv@dividend
  3020  0145  120A  118A  23BF  120A  118A  	fcall	___lwdiv
  3021  014A  0874               	movf	?___lwdiv+1,w
  3022  014B  1283               	bcf	3,5	;RP0=0, select bank0
  3023  014C  1303               	bcf	3,6	;RP1=0, select bank0
  3024  014D  00C3               	movwf	___lwmod@dividend+1
  3025  014E  0873               	movf	?___lwdiv,w
  3026  014F  00C2               	movwf	___lwmod@dividend
  3027  0150  120A  118A  2405  120A  118A  	fcall	___lwmod
  3028  0155  1283               	bcf	3,5	;RP0=0, select bank0
  3029  0156  1303               	bcf	3,6	;RP1=0, select bank0
  3030  0157  0840               	movf	?___lwmod,w
  3031  0158  3E30               	addlw	48
  3032  0159  00CA               	movwf	??_sprintf+1
  3033  015A  084A               	movf	??_sprintf+1,w
  3034  015B  00D2               	movwf	sprintf@c
  3035  015C                     l1983:
  3036                           
  3037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3038  015C  0852               	movf	sprintf@c,w
  3039  015D  00C9               	movwf	??_sprintf
  3040  015E  0850               	movf	sprintf@sp,w
  3041  015F  0084               	movwf	4
  3042  0160  0849               	movf	??_sprintf,w
  3043  0161  1383               	bcf	3,7	;select IRP bank0
  3044  0162  0080               	movwf	0
  3045  0163  2927               	goto	l1979
  3046  0164                     l1987:
  3047                           
  3048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3049  0164  30FF               	movlw	255
  3050  0165  00C9               	movwf	??_sprintf
  3051  0166  0849               	movf	??_sprintf,w
  3052  0167  07D1               	addwf	sprintf@prec,f
  3053  0168  0A51               	incf	sprintf@prec,w
  3054  0169  1D03               	btfss	3,2
  3055  016A  296C               	goto	u1051
  3056  016B  296D               	goto	u1050
  3057  016C                     u1051:
  3058  016C  292C               	goto	l1981
  3059  016D                     u1050:
  3060  016D                     l1989:
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3063  016D  3001               	movlw	1
  3064  016E  07C6               	addwf	sprintf@f,f
  3065  016F  30FF               	movlw	-1
  3066  0170  0746               	addwf	sprintf@f,w
  3067  0171  0084               	movwf	4
  3068  0172  120A  118A  24B9  120A  118A  	fcall	stringdir
  3069  0177  00C9               	movwf	??_sprintf
  3070  0178  0849               	movf	??_sprintf,w
  3071  0179  00D2               	movwf	sprintf@c
  3072  017A  0852               	movf	sprintf@c,w
  3073  017B  1D03               	btfss	3,2
  3074  017C  297E               	goto	u1061
  3075  017D  297F               	goto	u1060
  3076  017E                     u1061:
  3077  017E  2827               	goto	l1913
  3078  017F                     u1060:
  3079  017F                     l1991:
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3082  017F  0850               	movf	sprintf@sp,w
  3083  0180  0084               	movwf	4
  3084  0181  1383               	bcf	3,7	;select IRP bank0
  3085  0182  0180               	clrf	0
  3086  0183                     l390:
  3087  0183  0008               	return
  3088  0184                     __end_of_sprintf:
  3089                           
  3090                           	psect	text17
  3091  05A9                     __ptext17:	
  3092 ;; *************** function _isdigit *****************
  3093 ;; Defined at:
  3094 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  c               1    wreg     unsigned char 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  c               1    4[COMMON] unsigned char 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;		None               void
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3108 ;;      Params:         0       0       0       0       0
  3109 ;;      Locals:         2       0       0       0       0
  3110 ;;      Temps:          0       0       0       0       0
  3111 ;;      Totals:         2       0       0       0       0
  3112 ;;Total ram usage:        2 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    1
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_sprintf
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           
  3123                           ;psect for function _isdigit
  3124  05A9                     _isdigit:
  3125                           
  3126                           ;incstack = 0
  3127                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3128                           ;isdigit@c stored from wreg
  3129  05A9  00F4               	movwf	isdigit@c
  3130  05AA                     l1399:
  3131  05AA  01F3               	clrf	_isdigit$1010
  3132  05AB                     l1401:
  3133  05AB  303A               	movlw	58
  3134  05AC  0274               	subwf	isdigit@c,w
  3135  05AD  1803               	skipnc
  3136  05AE  2DB0               	goto	u431
  3137  05AF  2DB1               	goto	u430
  3138  05B0                     u431:
  3139  05B0  2DB9               	goto	l1407
  3140  05B1                     u430:
  3141  05B1                     l1403:
  3142  05B1  3030               	movlw	48
  3143  05B2  0274               	subwf	isdigit@c,w
  3144  05B3  1C03               	skipc
  3145  05B4  2DB6               	goto	u441
  3146  05B5  2DB7               	goto	u440
  3147  05B6                     u441:
  3148  05B6  2DB9               	goto	l1407
  3149  05B7                     u440:
  3150  05B7                     l1405:
  3151  05B7  01F3               	clrf	_isdigit$1010
  3152  05B8  0AF3               	incf	_isdigit$1010,f
  3153  05B9                     l1407:
  3154  05B9  0C73               	rrf	_isdigit$1010,w
  3155  05BA                     l847:
  3156  05BA  0008               	return
  3157  05BB                     __end_of_isdigit:
  3158                           
  3159                           	psect	text18
  3160  0405                     __ptext18:	
  3161 ;; *************** function ___lwmod *****************
  3162 ;; Defined at:
  3163 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  divisor         2    3[BANK0 ] unsigned int 
  3166 ;;  dividend        2    5[BANK0 ] unsigned int 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  counter         1    8[BANK0 ] unsigned char 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  2    3[BANK0 ] unsigned int 
  3171 ;; Registers used:
  3172 ;;		wreg, status,2, status,0
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3178 ;;      Params:         0       4       0       0       0
  3179 ;;      Locals:         0       1       0       0       0
  3180 ;;      Temps:          0       1       0       0       0
  3181 ;;      Totals:         0       6       0       0       0
  3182 ;;Total ram usage:        6 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; Hardware stack levels required when called:    1
  3185 ;; This function calls:
  3186 ;;		Nothing
  3187 ;; This function is called by:
  3188 ;;		_sprintf
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           
  3193                           ;psect for function ___lwmod
  3194  0405                     ___lwmod:
  3195  0405                     l1451:	
  3196                           ;incstack = 0
  3197                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3198                           
  3199  0405  1283               	bcf	3,5	;RP0=0, select bank0
  3200  0406  1303               	bcf	3,6	;RP1=0, select bank0
  3201  0407  0840               	movf	___lwmod@divisor,w
  3202  0408  0441               	iorwf	___lwmod@divisor+1,w
  3203  0409  1903               	btfsc	3,2
  3204  040A  2C0C               	goto	u541
  3205  040B  2C0D               	goto	u540
  3206  040C                     u541:
  3207  040C  2C3C               	goto	l1469
  3208  040D                     u540:
  3209  040D                     l1453:
  3210  040D  01C5               	clrf	___lwmod@counter
  3211  040E  0AC5               	incf	___lwmod@counter,f
  3212  040F  2C1B               	goto	l1459
  3213  0410                     l1455:
  3214  0410  3001               	movlw	1
  3215  0411                     u555:
  3216  0411  1003               	clrc
  3217  0412  0DC0               	rlf	___lwmod@divisor,f
  3218  0413  0DC1               	rlf	___lwmod@divisor+1,f
  3219  0414  3EFF               	addlw	-1
  3220  0415  1D03               	skipz
  3221  0416  2C11               	goto	u555
  3222  0417                     l1457:
  3223  0417  3001               	movlw	1
  3224  0418  00C4               	movwf	??___lwmod
  3225  0419  0844               	movf	??___lwmod,w
  3226  041A  07C5               	addwf	___lwmod@counter,f
  3227  041B                     l1459:
  3228  041B  1FC1               	btfss	___lwmod@divisor+1,7
  3229  041C  2C1E               	goto	u561
  3230  041D  2C1F               	goto	u560
  3231  041E                     u561:
  3232  041E  2C10               	goto	l1455
  3233  041F                     u560:
  3234  041F                     l1461:
  3235  041F  0841               	movf	___lwmod@divisor+1,w
  3236  0420  0243               	subwf	___lwmod@dividend+1,w
  3237  0421  1D03               	skipz
  3238  0422  2C25               	goto	u575
  3239  0423  0840               	movf	___lwmod@divisor,w
  3240  0424  0242               	subwf	___lwmod@dividend,w
  3241  0425                     u575:
  3242  0425  1C03               	skipc
  3243  0426  2C28               	goto	u571
  3244  0427  2C29               	goto	u570
  3245  0428                     u571:
  3246  0428  2C2F               	goto	l1465
  3247  0429                     u570:
  3248  0429                     l1463:
  3249  0429  0840               	movf	___lwmod@divisor,w
  3250  042A  02C2               	subwf	___lwmod@dividend,f
  3251  042B  0841               	movf	___lwmod@divisor+1,w
  3252  042C  1C03               	skipc
  3253  042D  03C3               	decf	___lwmod@dividend+1,f
  3254  042E  02C3               	subwf	___lwmod@dividend+1,f
  3255  042F                     l1465:
  3256  042F  3001               	movlw	1
  3257  0430                     u585:
  3258  0430  1003               	clrc
  3259  0431  0CC1               	rrf	___lwmod@divisor+1,f
  3260  0432  0CC0               	rrf	___lwmod@divisor,f
  3261  0433  3EFF               	addlw	-1
  3262  0434  1D03               	skipz
  3263  0435  2C30               	goto	u585
  3264  0436                     l1467:
  3265  0436  3001               	movlw	1
  3266  0437  02C5               	subwf	___lwmod@counter,f
  3267  0438  1D03               	btfss	3,2
  3268  0439  2C3B               	goto	u591
  3269  043A  2C3C               	goto	u590
  3270  043B                     u591:
  3271  043B  2C1F               	goto	l1461
  3272  043C                     u590:
  3273  043C                     l1469:
  3274  043C  0843               	movf	___lwmod@dividend+1,w
  3275  043D  00C1               	movwf	?___lwmod+1
  3276  043E  0842               	movf	___lwmod@dividend,w
  3277  043F  00C0               	movwf	?___lwmod
  3278  0440                     l676:
  3279  0440  0008               	return
  3280  0441                     __end_of___lwmod:
  3281                           
  3282                           	psect	text19
  3283  03BF                     __ptext19:	
  3284 ;; *************** function ___lwdiv *****************
  3285 ;; Defined at:
  3286 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  divisor         2    3[COMMON] unsigned int 
  3289 ;;  dividend        2    5[COMMON] unsigned int 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  quotient        2    1[BANK0 ] unsigned int 
  3292 ;;  counter         1    0[BANK0 ] unsigned char 
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  2    3[COMMON] unsigned int 
  3295 ;; Registers used:
  3296 ;;		wreg, status,2, status,0
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3302 ;;      Params:         4       0       0       0       0
  3303 ;;      Locals:         0       3       0       0       0
  3304 ;;      Temps:          1       0       0       0       0
  3305 ;;      Totals:         5       3       0       0       0
  3306 ;;Total ram usage:        8 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    1
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		_sprintf
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           
  3317                           ;psect for function ___lwdiv
  3318  03BF                     ___lwdiv:
  3319  03BF                     l1865:	
  3320                           ;incstack = 0
  3321                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3322                           
  3323  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  3324  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  3325  03C1  01BE               	clrf	___lwdiv@quotient
  3326  03C2  01BF               	clrf	___lwdiv@quotient+1
  3327  03C3                     l1867:
  3328  03C3  0873               	movf	___lwdiv@divisor,w
  3329  03C4  0474               	iorwf	___lwdiv@divisor+1,w
  3330  03C5  1903               	btfsc	3,2
  3331  03C6  2BC8               	goto	u841
  3332  03C7  2BC9               	goto	u840
  3333  03C8                     u841:
  3334  03C8  2C00               	goto	l1887
  3335  03C9                     u840:
  3336  03C9                     l1869:
  3337  03C9  01BD               	clrf	___lwdiv@counter
  3338  03CA  0ABD               	incf	___lwdiv@counter,f
  3339  03CB  2BD7               	goto	l1875
  3340  03CC                     l1871:
  3341  03CC  3001               	movlw	1
  3342  03CD                     u855:
  3343  03CD  1003               	clrc
  3344  03CE  0DF3               	rlf	___lwdiv@divisor,f
  3345  03CF  0DF4               	rlf	___lwdiv@divisor+1,f
  3346  03D0  3EFF               	addlw	-1
  3347  03D1  1D03               	skipz
  3348  03D2  2BCD               	goto	u855
  3349  03D3                     l1873:
  3350  03D3  3001               	movlw	1
  3351  03D4  00F7               	movwf	??___lwdiv
  3352  03D5  0877               	movf	??___lwdiv,w
  3353  03D6  07BD               	addwf	___lwdiv@counter,f
  3354  03D7                     l1875:
  3355  03D7  1FF4               	btfss	___lwdiv@divisor+1,7
  3356  03D8  2BDA               	goto	u861
  3357  03D9  2BDB               	goto	u860
  3358  03DA                     u861:
  3359  03DA  2BCC               	goto	l1871
  3360  03DB                     u860:
  3361  03DB                     l1877:
  3362  03DB  3001               	movlw	1
  3363  03DC                     u875:
  3364  03DC  1003               	clrc
  3365  03DD  0DBE               	rlf	___lwdiv@quotient,f
  3366  03DE  0DBF               	rlf	___lwdiv@quotient+1,f
  3367  03DF  3EFF               	addlw	-1
  3368  03E0  1D03               	skipz
  3369  03E1  2BDC               	goto	u875
  3370  03E2  0874               	movf	___lwdiv@divisor+1,w
  3371  03E3  0276               	subwf	___lwdiv@dividend+1,w
  3372  03E4  1D03               	skipz
  3373  03E5  2BE8               	goto	u885
  3374  03E6  0873               	movf	___lwdiv@divisor,w
  3375  03E7  0275               	subwf	___lwdiv@dividend,w
  3376  03E8                     u885:
  3377  03E8  1C03               	skipc
  3378  03E9  2BEB               	goto	u881
  3379  03EA  2BEC               	goto	u880
  3380  03EB                     u881:
  3381  03EB  2BF3               	goto	l1883
  3382  03EC                     u880:
  3383  03EC                     l1879:
  3384  03EC  0873               	movf	___lwdiv@divisor,w
  3385  03ED  02F5               	subwf	___lwdiv@dividend,f
  3386  03EE  0874               	movf	___lwdiv@divisor+1,w
  3387  03EF  1C03               	skipc
  3388  03F0  03F6               	decf	___lwdiv@dividend+1,f
  3389  03F1  02F6               	subwf	___lwdiv@dividend+1,f
  3390  03F2                     l1881:
  3391  03F2  143E               	bsf	___lwdiv@quotient,0
  3392  03F3                     l1883:
  3393  03F3  3001               	movlw	1
  3394  03F4                     u895:
  3395  03F4  1003               	clrc
  3396  03F5  0CF4               	rrf	___lwdiv@divisor+1,f
  3397  03F6  0CF3               	rrf	___lwdiv@divisor,f
  3398  03F7  3EFF               	addlw	-1
  3399  03F8  1D03               	skipz
  3400  03F9  2BF4               	goto	u895
  3401  03FA                     l1885:
  3402  03FA  3001               	movlw	1
  3403  03FB  02BD               	subwf	___lwdiv@counter,f
  3404  03FC  1D03               	btfss	3,2
  3405  03FD  2BFF               	goto	u901
  3406  03FE  2C00               	goto	u900
  3407  03FF                     u901:
  3408  03FF  2BDB               	goto	l1877
  3409  0400                     u900:
  3410  0400                     l1887:
  3411  0400  083F               	movf	___lwdiv@quotient+1,w
  3412  0401  00F4               	movwf	?___lwdiv+1
  3413  0402  083E               	movf	___lwdiv@quotient,w
  3414  0403  00F3               	movwf	?___lwdiv
  3415  0404                     l666:
  3416  0404  0008               	return
  3417  0405                     __end_of___lwdiv:
  3418                           
  3419                           	psect	text20
  3420  0581                     __ptext20:	
  3421 ;; *************** function ___bmul *****************
  3422 ;; Defined at:
  3423 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;  multiplier      1    wreg     unsigned char 
  3426 ;;  multiplicand    1    3[COMMON] unsigned char 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  multiplier      1    6[COMMON] unsigned char 
  3429 ;;  product         1    5[COMMON] unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      unsigned char 
  3432 ;; Registers used:
  3433 ;;		wreg, status,2, status,0
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3439 ;;      Params:         1       0       0       0       0
  3440 ;;      Locals:         2       0       0       0       0
  3441 ;;      Temps:          1       0       0       0       0
  3442 ;;      Totals:         4       0       0       0       0
  3443 ;;Total ram usage:        4 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:    1
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_sprintf
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           
  3454                           ;psect for function ___bmul
  3455  0581                     ___bmul:
  3456                           
  3457                           ;incstack = 0
  3458                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3459                           ;___bmul@multiplier stored from wreg
  3460  0581  00F6               	movwf	___bmul@multiplier
  3461  0582                     l1411:
  3462  0582  01F5               	clrf	___bmul@product
  3463  0583                     l1413:
  3464  0583  1C76               	btfss	___bmul@multiplier,0
  3465  0584  2D86               	goto	u451
  3466  0585  2D87               	goto	u450
  3467  0586                     u451:
  3468  0586  2D8B               	goto	l1417
  3469  0587                     u450:
  3470  0587                     l1415:
  3471  0587  0873               	movf	___bmul@multiplicand,w
  3472  0588  00F4               	movwf	??___bmul
  3473  0589  0874               	movf	??___bmul,w
  3474  058A  07F5               	addwf	___bmul@product,f
  3475  058B                     l1417:
  3476  058B  1003               	clrc
  3477  058C  0DF3               	rlf	___bmul@multiplicand,f
  3478  058D                     l1419:
  3479  058D  1003               	clrc
  3480  058E  0CF6               	rrf	___bmul@multiplier,f
  3481  058F  0876               	movf	___bmul@multiplier,w
  3482  0590  1D03               	btfss	3,2
  3483  0591  2D93               	goto	u461
  3484  0592  2D94               	goto	u460
  3485  0593                     u461:
  3486  0593  2D83               	goto	l1413
  3487  0594                     u460:
  3488  0594                     l1421:
  3489  0594  0875               	movf	___bmul@product,w
  3490  0595                     l420:
  3491  0595  0008               	return
  3492  0596                     __end_of___bmul:
  3493                           
  3494                           	psect	text21
  3495  0519                     __ptext21:	
  3496 ;; *************** function _ADC_channel2 *****************
  3497 ;; Defined at:
  3498 ;;		line 171 in file "pseudocodigo_lab3.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;		None
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;		None
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      void 
  3505 ;; Registers used:
  3506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3512 ;;      Params:         0       0       0       0       0
  3513 ;;      Locals:         0       0       0       0       0
  3514 ;;      Temps:          2       0       0       0       0
  3515 ;;      Totals:         2       0       0       0       0
  3516 ;;Total ram usage:        2 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    2
  3519 ;; This function calls:
  3520 ;;		_ADC_Config
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _ADC_channel2
  3528  0519                     _ADC_channel2:
  3529  0519                     l1673:	
  3530                           ;incstack = 0
  3531                           ; Regs used in _ADC_channel2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3532                           
  3533                           
  3534                           ;pseudocodigo_lab3.c: 172:     ADC_Config (1);
  3535  0519  3001               	movlw	1
  3536  051A  120A  118A  2184  120A  118A  	fcall	_ADC_Config
  3537  051F                     l1675:
  3538                           
  3539                           ;pseudocodigo_lab3.c: 173:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3540  051F  3003               	movlw	3
  3541  0520  00F7               	movwf	??_ADC_channel2+1
  3542  0521  3097               	movlw	151
  3543  0522  00F6               	movwf	??_ADC_channel2
  3544  0523                     u1167:
  3545  0523  0BF6               	decfsz	??_ADC_channel2,f
  3546  0524  2D23               	goto	u1167
  3547  0525  0BF7               	decfsz	??_ADC_channel2+1,f
  3548  0526  2D23               	goto	u1167
  3549  0527  2D28               	nop2
  3550  0528                     l1677:
  3551                           
  3552                           ;pseudocodigo_lab3.c: 174:     ADCON0bits.GO = 1;
  3553  0528  1283               	bcf	3,5	;RP0=0, select bank0
  3554  0529  1303               	bcf	3,6	;RP1=0, select bank0
  3555  052A  149F               	bsf	31,1	;volatile
  3556                           
  3557                           ;pseudocodigo_lab3.c: 175:     while (ADCON0bits.GO != 0) {
  3558  052B  2D30               	goto	l1681
  3559  052C                     l1679:
  3560                           
  3561                           ;pseudocodigo_lab3.c: 176:         S2_val = ADRESH;
  3562  052C  081E               	movf	30,w	;volatile
  3563  052D  00F6               	movwf	??_ADC_channel2
  3564  052E  0876               	movf	??_ADC_channel2,w
  3565  052F  00AB               	movwf	_S2_val
  3566  0530                     l1681:
  3567                           
  3568                           ;pseudocodigo_lab3.c: 175:     while (ADCON0bits.GO != 0) {
  3569  0530  189F               	btfsc	31,1	;volatile
  3570  0531  2D33               	goto	u771
  3571  0532  2D34               	goto	u770
  3572  0533                     u771:
  3573  0533  2D2C               	goto	l1679
  3574  0534                     u770:
  3575  0534                     l121:
  3576  0534  0008               	return
  3577  0535                     __end_of_ADC_channel2:
  3578                           
  3579                           	psect	text22
  3580  0535                     __ptext22:	
  3581 ;; *************** function _ADC_channel1 *****************
  3582 ;; Defined at:
  3583 ;;		line 161 in file "pseudocodigo_lab3.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;		None
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;		None
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  1    wreg      void 
  3590 ;; Registers used:
  3591 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3597 ;;      Params:         0       0       0       0       0
  3598 ;;      Locals:         0       0       0       0       0
  3599 ;;      Temps:          2       0       0       0       0
  3600 ;;      Totals:         2       0       0       0       0
  3601 ;;Total ram usage:        2 bytes
  3602 ;; Hardware stack levels used:    1
  3603 ;; Hardware stack levels required when called:    2
  3604 ;; This function calls:
  3605 ;;		_ADC_Config
  3606 ;; This function is called by:
  3607 ;;		_main
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           
  3612                           ;psect for function _ADC_channel1
  3613  0535                     _ADC_channel1:
  3614  0535                     l1663:	
  3615                           ;incstack = 0
  3616                           ; Regs used in _ADC_channel1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3617                           
  3618                           
  3619                           ;pseudocodigo_lab3.c: 162:     ADC_Config (0);
  3620  0535  3000               	movlw	0
  3621  0536  120A  118A  2184  120A  118A  	fcall	_ADC_Config
  3622  053B                     l1665:
  3623                           
  3624                           ;pseudocodigo_lab3.c: 163:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3625  053B  3003               	movlw	3
  3626  053C  00F7               	movwf	??_ADC_channel1+1
  3627  053D  3097               	movlw	151
  3628  053E  00F6               	movwf	??_ADC_channel1
  3629  053F                     u1177:
  3630  053F  0BF6               	decfsz	??_ADC_channel1,f
  3631  0540  2D3F               	goto	u1177
  3632  0541  0BF7               	decfsz	??_ADC_channel1+1,f
  3633  0542  2D3F               	goto	u1177
  3634  0543  2D44               	nop2
  3635  0544                     l1667:
  3636                           
  3637                           ;pseudocodigo_lab3.c: 164:     ADCON0bits.GO = 1;
  3638  0544  1283               	bcf	3,5	;RP0=0, select bank0
  3639  0545  1303               	bcf	3,6	;RP1=0, select bank0
  3640  0546  149F               	bsf	31,1	;volatile
  3641                           
  3642                           ;pseudocodigo_lab3.c: 165:     while (ADCON0bits.GO != 0) {
  3643  0547  2D4C               	goto	l1671
  3644  0548                     l1669:
  3645                           
  3646                           ;pseudocodigo_lab3.c: 166:         S1_val = ADRESH;
  3647  0548  081E               	movf	30,w	;volatile
  3648  0549  00F6               	movwf	??_ADC_channel1
  3649  054A  0876               	movf	??_ADC_channel1,w
  3650  054B  00AC               	movwf	_S1_val
  3651  054C                     l1671:
  3652                           
  3653                           ;pseudocodigo_lab3.c: 165:     while (ADCON0bits.GO != 0) {
  3654  054C  189F               	btfsc	31,1	;volatile
  3655  054D  2D4F               	goto	u761
  3656  054E  2D50               	goto	u760
  3657  054F                     u761:
  3658  054F  2D48               	goto	l1669
  3659  0550                     u760:
  3660  0550                     l115:
  3661  0550  0008               	return
  3662  0551                     __end_of_ADC_channel1:
  3663                           
  3664                           	psect	text23
  3665  0184                     __ptext23:	
  3666 ;; *************** function _ADC_Config *****************
  3667 ;; Defined at:
  3668 ;;		line 31 in file "Config_ADC.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  AN_num          1    wreg     unsigned char 
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;  AN_num          1    5[COMMON] unsigned char 
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      void 
  3675 ;; Registers used:
  3676 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3682 ;;      Params:         0       0       0       0       0
  3683 ;;      Locals:         1       0       0       0       0
  3684 ;;      Temps:          2       0       0       0       0
  3685 ;;      Totals:         3       0       0       0       0
  3686 ;;Total ram usage:        3 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; Hardware stack levels required when called:    1
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		_ADC_channel1
  3693 ;;		_ADC_channel2
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           
  3698                           ;psect for function _ADC_Config
  3699  0184                     _ADC_Config:
  3700                           
  3701                           ;incstack = 0
  3702                           ; Regs used in _ADC_Config: [wreg-fsr0h+status,2+status,0]
  3703                           ;ADC_Config@AN_num stored from wreg
  3704  0184  00F5               	movwf	ADC_Config@AN_num
  3705  0185                     l1493:
  3706                           
  3707                           ;Config_ADC.c: 33:     switch(AN_num){
  3708  0185  29FD               	goto	l1497
  3709  0186                     l228:	
  3710                           ;Config_ADC.c: 34:         case 0:
  3711                           
  3712                           
  3713                           ;Config_ADC.c: 35:             ADCON0bits.CHS3 = 0;
  3714  0186  1283               	bcf	3,5	;RP0=0, select bank0
  3715  0187  1303               	bcf	3,6	;RP1=0, select bank0
  3716  0188  129F               	bcf	31,5	;volatile
  3717                           
  3718                           ;Config_ADC.c: 36:             ADCON0bits.CHS2 = 0;
  3719  0189  121F               	bcf	31,4	;volatile
  3720                           
  3721                           ;Config_ADC.c: 37:             ADCON0bits.CHS1 = 0;
  3722  018A  119F               	bcf	31,3	;volatile
  3723                           
  3724                           ;Config_ADC.c: 38:             ADCON0bits.CHS0 = 0;
  3725  018B  111F               	bcf	31,2	;volatile
  3726                           
  3727                           ;Config_ADC.c: 39:             break;
  3728  018C  2A37               	goto	l1499
  3729  018D                     l230:	
  3730                           ;Config_ADC.c: 40:         case 1:
  3731                           
  3732                           
  3733                           ;Config_ADC.c: 41:             ADCON0bits.CHS3 = 0;
  3734  018D  1283               	bcf	3,5	;RP0=0, select bank0
  3735  018E  1303               	bcf	3,6	;RP1=0, select bank0
  3736  018F  129F               	bcf	31,5	;volatile
  3737                           
  3738                           ;Config_ADC.c: 42:             ADCON0bits.CHS2 = 0;
  3739  0190  121F               	bcf	31,4	;volatile
  3740                           
  3741                           ;Config_ADC.c: 43:             ADCON0bits.CHS1 = 0;
  3742  0191  119F               	bcf	31,3	;volatile
  3743                           
  3744                           ;Config_ADC.c: 44:             ADCON0bits.CHS0 = 1;
  3745  0192  151F               	bsf	31,2	;volatile
  3746                           
  3747                           ;Config_ADC.c: 45:             break;
  3748  0193  2A37               	goto	l1499
  3749  0194                     l231:	
  3750                           ;Config_ADC.c: 46:         case 2:
  3751                           
  3752                           
  3753                           ;Config_ADC.c: 47:             ADCON0bits.CHS3 = 0;
  3754  0194  1283               	bcf	3,5	;RP0=0, select bank0
  3755  0195  1303               	bcf	3,6	;RP1=0, select bank0
  3756  0196  129F               	bcf	31,5	;volatile
  3757                           
  3758                           ;Config_ADC.c: 48:             ADCON0bits.CHS2 = 0;
  3759  0197  121F               	bcf	31,4	;volatile
  3760                           
  3761                           ;Config_ADC.c: 49:             ADCON0bits.CHS1 = 1;
  3762  0198  159F               	bsf	31,3	;volatile
  3763                           
  3764                           ;Config_ADC.c: 50:             ADCON0bits.CHS0 = 0;
  3765  0199  111F               	bcf	31,2	;volatile
  3766                           
  3767                           ;Config_ADC.c: 51:             break;
  3768  019A  2A37               	goto	l1499
  3769  019B                     l232:	
  3770                           ;Config_ADC.c: 52:         case 3:
  3771                           
  3772                           
  3773                           ;Config_ADC.c: 53:             ADCON0bits.CHS3 = 0;
  3774  019B  1283               	bcf	3,5	;RP0=0, select bank0
  3775  019C  1303               	bcf	3,6	;RP1=0, select bank0
  3776  019D  129F               	bcf	31,5	;volatile
  3777                           
  3778                           ;Config_ADC.c: 54:             ADCON0bits.CHS2 = 0;
  3779  019E  121F               	bcf	31,4	;volatile
  3780                           
  3781                           ;Config_ADC.c: 55:             ADCON0bits.CHS1 = 1;
  3782  019F  159F               	bsf	31,3	;volatile
  3783                           
  3784                           ;Config_ADC.c: 56:             ADCON0bits.CHS0 = 1;
  3785  01A0  151F               	bsf	31,2	;volatile
  3786                           
  3787                           ;Config_ADC.c: 57:             break;
  3788  01A1  2A37               	goto	l1499
  3789  01A2                     l233:	
  3790                           ;Config_ADC.c: 58:         case 4:
  3791                           
  3792                           
  3793                           ;Config_ADC.c: 59:             ADCON0bits.CHS3 = 0;
  3794  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  3795  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  3796  01A4  129F               	bcf	31,5	;volatile
  3797                           
  3798                           ;Config_ADC.c: 60:             ADCON0bits.CHS2 = 1;
  3799  01A5  161F               	bsf	31,4	;volatile
  3800                           
  3801                           ;Config_ADC.c: 61:             ADCON0bits.CHS1 = 0;
  3802  01A6  119F               	bcf	31,3	;volatile
  3803                           
  3804                           ;Config_ADC.c: 62:             ADCON0bits.CHS0 = 0;
  3805  01A7  111F               	bcf	31,2	;volatile
  3806                           
  3807                           ;Config_ADC.c: 63:             break;
  3808  01A8  2A37               	goto	l1499
  3809  01A9                     l234:	
  3810                           ;Config_ADC.c: 64:         case 5:
  3811                           
  3812                           
  3813                           ;Config_ADC.c: 65:             ADCON0bits.CHS3 = 0;
  3814  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  3815  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  3816  01AB  129F               	bcf	31,5	;volatile
  3817                           
  3818                           ;Config_ADC.c: 66:             ADCON0bits.CHS2 = 1;
  3819  01AC  161F               	bsf	31,4	;volatile
  3820                           
  3821                           ;Config_ADC.c: 67:             ADCON0bits.CHS1 = 0;
  3822  01AD  119F               	bcf	31,3	;volatile
  3823                           
  3824                           ;Config_ADC.c: 68:             ADCON0bits.CHS0 = 1;
  3825  01AE  151F               	bsf	31,2	;volatile
  3826                           
  3827                           ;Config_ADC.c: 69:             break;
  3828  01AF  2A37               	goto	l1499
  3829  01B0                     l235:	
  3830                           ;Config_ADC.c: 70:         case 6:
  3831                           
  3832                           
  3833                           ;Config_ADC.c: 71:             ADCON0bits.CHS3 = 0;
  3834  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  3835  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  3836  01B2  129F               	bcf	31,5	;volatile
  3837                           
  3838                           ;Config_ADC.c: 72:             ADCON0bits.CHS2 = 1;
  3839  01B3  161F               	bsf	31,4	;volatile
  3840                           
  3841                           ;Config_ADC.c: 73:             ADCON0bits.CHS1 = 1;
  3842  01B4  159F               	bsf	31,3	;volatile
  3843                           
  3844                           ;Config_ADC.c: 74:             ADCON0bits.CHS0 = 0;
  3845  01B5  111F               	bcf	31,2	;volatile
  3846                           
  3847                           ;Config_ADC.c: 75:             break;
  3848  01B6  2A37               	goto	l1499
  3849  01B7                     l236:	
  3850                           ;Config_ADC.c: 76:         case 7:
  3851                           
  3852                           
  3853                           ;Config_ADC.c: 77:             ADCON0bits.CHS3 = 0;
  3854  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  3855  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  3856  01B9  129F               	bcf	31,5	;volatile
  3857                           
  3858                           ;Config_ADC.c: 78:             ADCON0bits.CHS2 = 1;
  3859  01BA  161F               	bsf	31,4	;volatile
  3860                           
  3861                           ;Config_ADC.c: 79:             ADCON0bits.CHS1 = 1;
  3862  01BB  159F               	bsf	31,3	;volatile
  3863                           
  3864                           ;Config_ADC.c: 80:             ADCON0bits.CHS0 = 1;
  3865  01BC  151F               	bsf	31,2	;volatile
  3866                           
  3867                           ;Config_ADC.c: 81:             break;
  3868  01BD  2A37               	goto	l1499
  3869  01BE                     l237:	
  3870                           ;Config_ADC.c: 82:         case 8:
  3871                           
  3872                           
  3873                           ;Config_ADC.c: 83:             ADCON0bits.CHS3 = 1;
  3874  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  3875  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  3876  01C0  169F               	bsf	31,5	;volatile
  3877                           
  3878                           ;Config_ADC.c: 84:             ADCON0bits.CHS2 = 0;
  3879  01C1  121F               	bcf	31,4	;volatile
  3880                           
  3881                           ;Config_ADC.c: 85:             ADCON0bits.CHS1 = 0;
  3882  01C2  119F               	bcf	31,3	;volatile
  3883                           
  3884                           ;Config_ADC.c: 86:             ADCON0bits.CHS0 = 0;
  3885  01C3  111F               	bcf	31,2	;volatile
  3886                           
  3887                           ;Config_ADC.c: 87:             break;
  3888  01C4  2A37               	goto	l1499
  3889  01C5                     l238:	
  3890                           ;Config_ADC.c: 88:         case 9:
  3891                           
  3892                           
  3893                           ;Config_ADC.c: 89:             ADCON0bits.CHS3 = 1;
  3894  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  3895  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  3896  01C7  169F               	bsf	31,5	;volatile
  3897                           
  3898                           ;Config_ADC.c: 90:             ADCON0bits.CHS2 = 0;
  3899  01C8  121F               	bcf	31,4	;volatile
  3900                           
  3901                           ;Config_ADC.c: 91:             ADCON0bits.CHS1 = 0;
  3902  01C9  119F               	bcf	31,3	;volatile
  3903                           
  3904                           ;Config_ADC.c: 92:             ADCON0bits.CHS0 = 1;
  3905  01CA  151F               	bsf	31,2	;volatile
  3906                           
  3907                           ;Config_ADC.c: 93:             break;
  3908  01CB  2A37               	goto	l1499
  3909  01CC                     l239:	
  3910                           ;Config_ADC.c: 94:         case 10:
  3911                           
  3912                           
  3913                           ;Config_ADC.c: 95:             ADCON0bits.CHS3 = 1;
  3914  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3915  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3916  01CE  169F               	bsf	31,5	;volatile
  3917                           
  3918                           ;Config_ADC.c: 96:             ADCON0bits.CHS2 = 0;
  3919  01CF  121F               	bcf	31,4	;volatile
  3920                           
  3921                           ;Config_ADC.c: 97:             ADCON0bits.CHS1 = 1;
  3922  01D0  159F               	bsf	31,3	;volatile
  3923                           
  3924                           ;Config_ADC.c: 98:             ADCON0bits.CHS0 = 0;
  3925  01D1  111F               	bcf	31,2	;volatile
  3926                           
  3927                           ;Config_ADC.c: 99:             break;
  3928  01D2  2A37               	goto	l1499
  3929  01D3                     l240:	
  3930                           ;Config_ADC.c: 100:         case 11:
  3931                           
  3932                           
  3933                           ;Config_ADC.c: 101:             ADCON0bits.CHS3 = 1;
  3934  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  3935  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  3936  01D5  169F               	bsf	31,5	;volatile
  3937                           
  3938                           ;Config_ADC.c: 102:             ADCON0bits.CHS2 = 0;
  3939  01D6  121F               	bcf	31,4	;volatile
  3940                           
  3941                           ;Config_ADC.c: 103:             ADCON0bits.CHS1 = 1;
  3942  01D7  159F               	bsf	31,3	;volatile
  3943                           
  3944                           ;Config_ADC.c: 104:             ADCON0bits.CHS0 = 1;
  3945  01D8  151F               	bsf	31,2	;volatile
  3946                           
  3947                           ;Config_ADC.c: 105:             break;
  3948  01D9  2A37               	goto	l1499
  3949  01DA                     l241:	
  3950                           ;Config_ADC.c: 106:         case 12:
  3951                           
  3952                           
  3953                           ;Config_ADC.c: 107:             ADCON0bits.CHS3 = 1;
  3954  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  3955  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  3956  01DC  169F               	bsf	31,5	;volatile
  3957                           
  3958                           ;Config_ADC.c: 108:             ADCON0bits.CHS2 = 1;
  3959  01DD  161F               	bsf	31,4	;volatile
  3960                           
  3961                           ;Config_ADC.c: 109:             ADCON0bits.CHS1 = 0;
  3962  01DE  119F               	bcf	31,3	;volatile
  3963                           
  3964                           ;Config_ADC.c: 110:             ADCON0bits.CHS0 = 0;
  3965  01DF  111F               	bcf	31,2	;volatile
  3966                           
  3967                           ;Config_ADC.c: 111:             break;
  3968  01E0  2A37               	goto	l1499
  3969  01E1                     l242:	
  3970                           ;Config_ADC.c: 112:         case 13:
  3971                           
  3972                           
  3973                           ;Config_ADC.c: 113:             ADCON0bits.CHS3 = 1;
  3974  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  3975  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  3976  01E3  169F               	bsf	31,5	;volatile
  3977                           
  3978                           ;Config_ADC.c: 114:             ADCON0bits.CHS2 = 1;
  3979  01E4  161F               	bsf	31,4	;volatile
  3980                           
  3981                           ;Config_ADC.c: 115:             ADCON0bits.CHS1 = 0;
  3982  01E5  119F               	bcf	31,3	;volatile
  3983                           
  3984                           ;Config_ADC.c: 116:             ADCON0bits.CHS0 = 1;
  3985  01E6  151F               	bsf	31,2	;volatile
  3986                           
  3987                           ;Config_ADC.c: 117:             break;
  3988  01E7  2A37               	goto	l1499
  3989  01E8                     l243:	
  3990                           ;Config_ADC.c: 118:         case 14:
  3991                           
  3992                           
  3993                           ;Config_ADC.c: 119:             ADCON0bits.CHS3 = 1;
  3994  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  3995  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  3996  01EA  169F               	bsf	31,5	;volatile
  3997                           
  3998                           ;Config_ADC.c: 120:             ADCON0bits.CHS2 = 1;
  3999  01EB  161F               	bsf	31,4	;volatile
  4000                           
  4001                           ;Config_ADC.c: 121:             ADCON0bits.CHS1 = 1;
  4002  01EC  159F               	bsf	31,3	;volatile
  4003                           
  4004                           ;Config_ADC.c: 122:             ADCON0bits.CHS0 = 0;
  4005  01ED  111F               	bcf	31,2	;volatile
  4006                           
  4007                           ;Config_ADC.c: 123:             break;
  4008  01EE  2A37               	goto	l1499
  4009  01EF                     l244:	
  4010                           ;Config_ADC.c: 124:         case 15:
  4011                           
  4012                           
  4013                           ;Config_ADC.c: 125:             ADCON0bits.CHS3 = 1;
  4014  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  4015  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  4016  01F1  169F               	bsf	31,5	;volatile
  4017                           
  4018                           ;Config_ADC.c: 126:             ADCON0bits.CHS2 = 1;
  4019  01F2  161F               	bsf	31,4	;volatile
  4020                           
  4021                           ;Config_ADC.c: 127:             ADCON0bits.CHS1 = 1;
  4022  01F3  159F               	bsf	31,3	;volatile
  4023                           
  4024                           ;Config_ADC.c: 128:             ADCON0bits.CHS0 = 1;
  4025  01F4  151F               	bsf	31,2	;volatile
  4026                           
  4027                           ;Config_ADC.c: 129:             break;
  4028  01F5  2A37               	goto	l1499
  4029  01F6                     l245:	
  4030                           ;Config_ADC.c: 130:         default:
  4031                           
  4032                           
  4033                           ;Config_ADC.c: 131:             ADCON0bits.CHS3 = 0;
  4034  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  4035  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  4036  01F8  129F               	bcf	31,5	;volatile
  4037                           
  4038                           ;Config_ADC.c: 132:             ADCON0bits.CHS2 = 0;
  4039  01F9  121F               	bcf	31,4	;volatile
  4040                           
  4041                           ;Config_ADC.c: 133:             ADCON0bits.CHS1 = 0;
  4042  01FA  119F               	bcf	31,3	;volatile
  4043                           
  4044                           ;Config_ADC.c: 134:             ADCON0bits.CHS0 = 0;
  4045  01FB  111F               	bcf	31,2	;volatile
  4046                           
  4047                           ;Config_ADC.c: 135:             break;
  4048  01FC  2A37               	goto	l1499
  4049  01FD                     l1497:
  4050  01FD  0875               	movf	ADC_Config@AN_num,w
  4051  01FE  00F3               	movwf	??_ADC_Config
  4052  01FF  01F4               	clrf	??_ADC_Config+1
  4053                           
  4054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4055                           ; Switch size 1, requested type "simple"
  4056                           ; Number of cases is 1, Range of values is 0 to 0
  4057                           ; switch strategies available:
  4058                           ; Name         Instructions Cycles
  4059                           ; simple_byte            4     3 (average)
  4060                           ; direct_byte           11     8 (fixed)
  4061                           ; jumptable            260     6 (fixed)
  4062                           ;	Chosen strategy is simple_byte
  4063  0200  0874               	movf	??_ADC_Config+1,w
  4064  0201  3A00               	xorlw	0	; case 0
  4065  0202  1903               	skipnz
  4066  0203  2A05               	goto	l2145
  4067  0204  29F6               	goto	l245
  4068  0205                     l2145:
  4069                           
  4070                           ; Switch size 1, requested type "simple"
  4071                           ; Number of cases is 16, Range of values is 0 to 15
  4072                           ; switch strategies available:
  4073                           ; Name         Instructions Cycles
  4074                           ; simple_byte           49    25 (average)
  4075                           ; direct_byte           56     8 (fixed)
  4076                           ; jumptable            260     6 (fixed)
  4077                           ;	Chosen strategy is simple_byte
  4078  0205  0873               	movf	??_ADC_Config,w
  4079  0206  3A00               	xorlw	0	; case 0
  4080  0207  1903               	skipnz
  4081  0208  2986               	goto	l228
  4082  0209  3A01               	xorlw	1	; case 1
  4083  020A  1903               	skipnz
  4084  020B  298D               	goto	l230
  4085  020C  3A03               	xorlw	3	; case 2
  4086  020D  1903               	skipnz
  4087  020E  2994               	goto	l231
  4088  020F  3A01               	xorlw	1	; case 3
  4089  0210  1903               	skipnz
  4090  0211  299B               	goto	l232
  4091  0212  3A07               	xorlw	7	; case 4
  4092  0213  1903               	skipnz
  4093  0214  29A2               	goto	l233
  4094  0215  3A01               	xorlw	1	; case 5
  4095  0216  1903               	skipnz
  4096  0217  29A9               	goto	l234
  4097  0218  3A03               	xorlw	3	; case 6
  4098  0219  1903               	skipnz
  4099  021A  29B0               	goto	l235
  4100  021B  3A01               	xorlw	1	; case 7
  4101  021C  1903               	skipnz
  4102  021D  29B7               	goto	l236
  4103  021E  3A0F               	xorlw	15	; case 8
  4104  021F  1903               	skipnz
  4105  0220  29BE               	goto	l237
  4106  0221  3A01               	xorlw	1	; case 9
  4107  0222  1903               	skipnz
  4108  0223  29C5               	goto	l238
  4109  0224  3A03               	xorlw	3	; case 10
  4110  0225  1903               	skipnz
  4111  0226  29CC               	goto	l239
  4112  0227  3A01               	xorlw	1	; case 11
  4113  0228  1903               	skipnz
  4114  0229  29D3               	goto	l240
  4115  022A  3A07               	xorlw	7	; case 12
  4116  022B  1903               	skipnz
  4117  022C  29DA               	goto	l241
  4118  022D  3A01               	xorlw	1	; case 13
  4119  022E  1903               	skipnz
  4120  022F  29E1               	goto	l242
  4121  0230  3A03               	xorlw	3	; case 14
  4122  0231  1903               	skipnz
  4123  0232  29E8               	goto	l243
  4124  0233  3A01               	xorlw	1	; case 15
  4125  0234  1903               	skipnz
  4126  0235  29EF               	goto	l244
  4127  0236  29F6               	goto	l245
  4128  0237                     l1499:
  4129                           
  4130                           ;Config_ADC.c: 137:     ADCON1 = 0b00000000;
  4131  0237  1683               	bsf	3,5	;RP0=1, select bank1
  4132  0238  1303               	bcf	3,6	;RP1=0, select bank1
  4133  0239  019F               	clrf	31	;volatile
  4134  023A                     l1501:
  4135                           
  4136                           ;Config_ADC.c: 138:     ADCON0bits.ADCS1 = 1;
  4137  023A  1283               	bcf	3,5	;RP0=0, select bank0
  4138  023B  1303               	bcf	3,6	;RP1=0, select bank0
  4139  023C  179F               	bsf	31,7	;volatile
  4140  023D                     l1503:
  4141                           
  4142                           ;Config_ADC.c: 139:     ADCON0bits.ADCS0 = 0;
  4143  023D  131F               	bcf	31,6	;volatile
  4144  023E                     l1505:
  4145                           
  4146                           ;Config_ADC.c: 140:     ADCON0bits.ADON = 1;
  4147  023E  141F               	bsf	31,0	;volatile
  4148  023F                     l246:
  4149  023F  0008               	return
  4150  0240                     __end_of_ADC_Config:
  4151                           
  4152                           	psect	text24
  4153  05BB                     __ptext24:	
  4154 ;; *************** function _ISR *****************
  4155 ;; Defined at:
  4156 ;;		line 93 in file "pseudocodigo_lab3.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;		None
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;		None
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		wreg
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4170 ;;      Params:         0       0       0       0       0
  4171 ;;      Locals:         0       0       0       0       0
  4172 ;;      Temps:          3       0       0       0       0
  4173 ;;      Totals:         3       0       0       0       0
  4174 ;;Total ram usage:        3 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		Interrupt level 1
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           
  4184                           ;psect for function _ISR
  4185  05BB                     _ISR:
  4186  05BB                     i1l1249:
  4187                           
  4188                           ;pseudocodigo_lab3.c: 94:     if (PIR1bits.RCIF == 0){
  4189  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  4190  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  4191  05BD  1A8C               	btfsc	12,5	;volatile
  4192  05BE  2DC0               	goto	u39_21
  4193  05BF  2DC1               	goto	u39_20
  4194  05C0                     u39_21:
  4195  05C0  2DC5               	goto	i1l96
  4196  05C1                     u39_20:
  4197  05C1                     i1l1251:
  4198                           
  4199                           ;pseudocodigo_lab3.c: 95:             data_recive = RCREG;
  4200  05C1  081A               	movf	26,w	;volatile
  4201  05C2  00F0               	movwf	??_ISR
  4202  05C3  0870               	movf	??_ISR,w
  4203  05C4  00F8               	movwf	_data_recive
  4204  05C5                     i1l96:
  4205  05C5  0872               	movf	??_ISR+2,w
  4206  05C6  008A               	movwf	10
  4207  05C7  0E71               	swapf	??_ISR+1,w
  4208  05C8  0083               	movwf	3
  4209  05C9  0EFE               	swapf	btemp,f
  4210  05CA  0E7E               	swapf	btemp,w
  4211  05CB  0009               	retfie
  4212  05CC                     __end_of_ISR:
  4213  007E                     btemp	set	126	;btemp
  4214  007E                     wtemp0	set	126
  4215                           
  4216                           	psect	intentry
  4217  0004                     __pintentry:	
  4218                           ;incstack = 0
  4219                           ; Regs used in _ISR: [wreg]
  4220                           
  4221  0004                     interrupt_function:
  4222  007E                     saved_w	set	btemp
  4223  0004  00FE               	movwf	btemp
  4224  0005  0E03               	swapf	3,w
  4225  0006  00F1               	movwf	??_ISR+1
  4226  0007  080A               	movf	10,w
  4227  0008  00F2               	movwf	??_ISR+2
  4228  0009  120A  118A  2DBB   	ljmp	_ISR
  4229                           
  4230                           	psect	config
  4231                           
  4232                           ;Config register CONFIG1 @ 0x2007
  4233                           ;	Oscillator Selection bits
  4234                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4235                           ;	Watchdog Timer Enable bit
  4236                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4237                           ;	Power-up Timer Enable bit
  4238                           ;	PWRTE = OFF, PWRT disabled
  4239                           ;	RE3/MCLR pin function select bit
  4240                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4241                           ;	Code Protection bit
  4242                           ;	CP = OFF, Program memory code protection is disabled
  4243                           ;	Data Code Protection bit
  4244                           ;	CPD = OFF, Data memory code protection is disabled
  4245                           ;	Brown Out Reset Selection bits
  4246                           ;	BOREN = ON, BOR enabled
  4247                           ;	Internal External Switchover bit
  4248                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4249                           ;	Fail-Safe Clock Monitor Enabled bit
  4250                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4251                           ;	Low Voltage Programming Enable bit
  4252                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4253                           ;	In-Circuit Debugger Mode bit
  4254                           ;	DEBUG = 0x1, unprogrammed default
  4255  2007                     	org	8199
  4256  2007  23D4               	dw	9172
  4257                           
  4258                           ;Config register CONFIG2 @ 0x2008
  4259                           ;	Brown-out Reset Selection bit
  4260                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4261                           ;	Flash Program Memory Self Write Enable bits
  4262                           ;	WRT = OFF, Write protection off
  4263  2008                     	org	8200
  4264  2008  3FFF               	dw	16383

Data Sizes:
    Strings     21
    Constant    10
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     27      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[6]), STR_2(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> data1(BANK0[8]), data2(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 

    data1	PTR unsigned char [8] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    data2	PTR unsigned char [8] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_ADC_channel1
    _main->_ADC_channel2
    _titulos_LCD->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _setup->_initOsc
    _Show_val_LCD->_Lcd_Set_Cursor
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _ADC_channel2->_ADC_Config
    _ADC_channel1->_ADC_Config

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ADC_to_string
    _titulos_LCD->_Lcd_Set_Cursor
    _titulos_LCD->_Lcd_Write_String
    _Show_val_LCD->_Lcd_Set_Cursor
    _ADC_to_string->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3778
                                             25 BANK0      2     2      0
                       _ADC_channel1
                       _ADC_channel2
                      _ADC_to_string
                           _Lcd_Init
                       _Show_val_LCD
                        _Trasmission
                    _USART_INTERRUPT
                         _USART_Init
                _USART_Init_BaudRate
                              _setup
                        _titulos_LCD
 ---------------------------------------------------------------------------------
 (1) _titulos_LCD                                          1     1      0     752
                                              3 BANK0      1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     3     3      0     228
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init_BaudRate                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_INTERRUPT                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Trasmission                                          1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Show_val_LCD                                         2     2      0     586
                                              3 BANK0      2     2      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     524
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_to_string                                        3     3      0    2281
                                             22 BANK0      3     3      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    2281
                                              9 BANK0     13    10      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _ADC_channel2                                         2     2      0      22
                                              6 COMMON     2     2      0
                         _ADC_Config
 ---------------------------------------------------------------------------------
 (1) _ADC_channel1                                         2     2      0      22
                                              6 COMMON     2     2      0
                         _ADC_Config
 ---------------------------------------------------------------------------------
 (2) _ADC_Config                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_channel1
     _ADC_Config
   _ADC_channel2
     _ADC_Config
   _ADC_to_string
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _isdigit
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Show_val_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
   _Trasmission
   _USART_INTERRUPT
   _USART_Init
   _USART_Init_BaudRate
   _setup
     _initOsc
   _titulos_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      43       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1B      38       5       70.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      43      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 11:22:22 2021

                           pc 0002                ___bmul@product 0075                            fsr 0004  
         __size_of_ADC_Config 00BC              ?_USART_INTERRUPT 0070                           l101 02D5  
                         l102 0306                           l121 0534                           l115 0550  
                         l124 0492                           l109 05A8                           l230 018D  
                         l134 04FC                           l150 0339                           l231 0194  
                         l127 02B6                           l151 033F                           l143 0315  
                         l240 01D3                           l232 019B                           l152 0345  
                         l144 036D                           l241 01DA                           l233 01A2  
                         l153 036E                           l145 031B                           l137 0518  
                         l242 01E1                           l234 01A9                           l146 0321  
                         l243 01E8                           l235 01B0                           l147 0327  
                         l244 01EF                           l236 01B7                           l228 0186  
                         l420 0595                           l172 056A                           l148 032D  
                         l245 01F6                           l237 01BE                           l181 04B8  
                         l149 0333                           l246 023F                           l238 01C5  
                         l166 03BE                           l190 0469                           l239 01CC  
                         l263 05DB                           l184 0580                           l169 05F6  
                         l266 05F0                           l269 05EA                           l390 0183  
                         l666 0404                           l676 0440                           l847 05BA  
                         u430 05B1                           u431 05B0                           u440 05B7  
                         u441 05B6                           u450 0587                           u451 0586  
                         u460 0594                           u540 040D                           _ISR 05BB  
                         u461 0593                           u541 040C                           u560 041F  
                         u800 04FB                           u561 041E                           u801 04FA  
                         u570 0429                           u571 0428                           u555 0411  
                         u900 0400                           u901 03FF                           u590 043C  
                         u910 049B                           _VAL 0026                           u591 043B  
                         u575 0425                           u911 049A                           u760 0550  
                         u840 03C9                           u920 04AD                           u761 054F  
                         u841 03C8                           u585 0430                           u921 04AC  
                         u770 0534                           u930 0469                           u771 0533  
                         u931 0468                           u860 03DB                           u940 002D  
                         u780 04E4                           u861 03DA                           u941 002C  
                         u781 04E3                           u950 0046                           u790 04E9  
                         u855 03CD                           u951 0045                           u791 04E8  
                         u880 03EC                           u960 007C                           u881 03EB  
                         u961 007B                           u970 00AD                           u875 03DC  
                         u971 00AC                           u980 00BB                           u885 03E8  
                         u981 00BA                           u990 00C1                           u895 03F4  
                         u991 00C0                           fsr0 0004                           indf 0000  
                 _titulos_LCD 0596                          ?_ISR 0070                          l2001 036F  
                        l2003 0375                          l2011 0596                          l2005 037F  
                        l2021 027E                          l2013 05A2                          l2015 046A  
                        l2007 038F                          l2031 02A8                          l2023 028A  
                        l1401 05AB                          l2009 0395                          l2033 02B0  
                        l2025 0292                          l2017 0240                          l2041 02C6  
                        l1411 0582                          l1403 05B1                          l2027 0298  
                        l2019 0274                          l2051 02EE                          l2043 02CB  
                        l2035 02B7                          l1501 023A                          l1421 0594  
                        l1413 0583                          l1405 05B7                          l2029 02A0  
                        l2141 0353                          l2061 030C                          l2053 02F3  
                        l2045 02DA                          l2037 02BC                          l1503 023D  
                        l1415 0587                          l1407 05B9                          l2143 0092  
                        l2063 030E                          l2055 02F8                          l2047 02E4  
                        l2039 02C1                          l1505 023E                          l2145 0205  
                        l1417 058B                          l1601 0314                          l2057 02FC  
                        l2049 02E9                          l1419 058D                          l1451 0405  
                        l1611 04FD                          l2059 0302                          l1461 041F  
                        l1453 040D                          l1605 034B                          l1621 050D  
                        l1613 0503                          l1463 0429                          l1455 0410  
                        l1711 04ED                          l1703 04DE                          l1631 0514  
                        l1623 050E                          l1615 0507                          l1465 042F  
                        l1457 0417                          l1713 04EF                          l1705 04E4  
                        l1641 05DA                          l1633 0515                          l1625 050F  
                        l1617 0508                          l1467 0436                          l1459 041B  
                        l1715 04F1                          l1707 04E9                          l1643 05EB  
                        l1635 0516                          l1627 0510                          l1619 050C  
                        l1493 0185                          l1469 043C                          l1901 04B2  
                        l1717 04F5                          l1709 04EB                          l1645 05EE  
                        l1637 0517                          l1629 0511                          l1671 054C  
                        l1663 0535                          l1399 05AA                          l1911 0022  
                        l1719 04FB                          l1647 05E4                          l1639 05CC  
                        l1903 0444                          l1497 01FD                          l1665 053B  
                        l1681 0530                          l1673 0519                          l1921 003A  
                        l1913 0027                          l1905 0447                          l1499 0237  
                        l1667 0544                          l1675 051F                          l1931 0068  
                        l1923 0046                          l1915 002D                          l1843 05F2  
                        l1851 0578                          l1907 0454                          l1669 0548  
                        l1677 0528                          l1941 009D                          l1933 006C  
                        l1925 004A                          l1917 0034                          l1861 055E  
                        l1853 057D                          l1845 056C                          l1909 045C  
                        l1679 052C                          l1871 03CC                          l1951 00B6  
                        l1943 00A5                          l1927 004C                          l1935 007D  
                        l1919 0039                          l1863 0567                          l1855 0552  
                        l1847 056F                          l1881 03F2                          l1873 03D3  
                        l1865 03BF                          l1961 00C7                          l1953 00BB  
                        l1945 00A9                          l1929 005D                          l1857 0555  
                        l1849 0575                          l1883 03F3                          l1875 03D7  
                        l1867 03C3                          l1971 00FE                          l1955 00C1  
                        l1947 00AD                          l1939 007E                          l1859 055B  
                        l1891 0496                          l1885 03FA                          l1877 03DB  
                        l1869 03C9                          l1981 012C                          l1973 0112  
                        l1965 00E3                          l1957 00C5                          l1949 00B1  
                        l1893 049B                          l1879 03EC                          l1887 0400  
                        l1983 015C                          l1975 0118                          l1967 00ED  
                        l1991 017F                          l1895 04A0                          l1977 0120  
                        l1969 00FD                          l1897 04A7                          l1979 0127  
                        l1987 0164                          l1899 04AD                          l1989 016D  
                        STR_1 04C9                          STR_2 04D8                          STR_3 04D8  
                        u1000 00E2                          u1001 00E1                          u1010 00ED  
                        u1011 00EC                          u1020 00FD                          u1021 00FC  
                        u1005 00DE                          u1030 0112                          u1031 0111  
                        u1040 0120                          u1041 011F                          u1025 00F9  
                        u1050 016D                          u1051 016C                          u1035 010E  
                        u1107 027A                          u1060 017F                          u1061 017E  
                        u1117 057A                          u1070 0302                          u1127 037B  
                        u1071 0301                          u1080 030C                          u1137 038B  
                        u1081 030B                          u1147 039B                          u1157 0562  
                        u1167 0523                          u1177 053F                          u1097 02E0  
                        i1l96 05C5             ?_Lcd_Write_String 0070                          _cont 0028  
                        _main 02B7                          btemp 007E                          start 000C  
          ??_Lcd_Write_String 0076               __end_of_Lcd_Cmd 056B             ___bmul@multiplier 0076  
                       ??_ISR 0070                         ?_main 0070                         _ANSEL 0188  
             __end_of___lwdiv 0405               __end_of___lwmod 0441                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _PORTD 0008                         _PORTE 0009  
                       u39_20 05C1                         u39_21 05C0       __size_of_Lcd_Set_Cursor 0026  
                       _TRISA 0085                         _TRISB 0086                         _TRISD 0088  
                       _TRISE 0089                         _TXREG 0019              ADC_Config@AN_num 0075  
                       _data1 0035                         _data2 002D               __end_of_dpowers 04C9  
             __end_of_initOsc 036F               __end_of_isdigit 05BB                         _setup 04FD  
                       pclath 000A                         status 0003                         wtemp0 007E  
             __end_of_sprintf 0184                   ?_USART_Init 0070              __end_of_Lcd_Init 03BF  
       __size_of_ADC_channel1 001C         __size_of_ADC_channel2 001C              __end_of_Lcd_Port 05F7  
             __initialization 000F                  __end_of_main 0313                        ??_main 0056  
                      _ADCON1 009F                        _ADRESH 001E                        _ADRESL 009E  
                 initOsc@IRCF 0075           _USART_Init_BaudRate 05EB                        ?_setup 0070  
                      _ANSELH 0189                        i1l1251 05C1                        i1l1249 05BB  
                ??_ADC_Config 0073                  _ADC_channel1 0535                  _ADC_channel2 0519  
                   ??_Lcd_Cmd 0074                        _S1_val 002C                        _S2_val 002B  
                      _SPBRGH 009A       __size_of_Lcd_Write_Char 0016                        ___bmul 0581  
        ?_USART_Init_BaudRate 0070                     ??___lwdiv 0077                     ??___lwmod 0044  
          __end_of_ADC_Config 0240                     ??_initOsc 0073                     ??_isdigit 0073  
                      saved_w 007E           __size_of_USART_Init 0010                     ??_sprintf 0049  
             Lcd_Set_Cursor@a 003E               Lcd_Set_Cursor@b 0077       __end_of__initialization 001B  
         ___bmul@multiplicand 0073                __pcstackCOMMON 0070         ??_USART_Init_BaudRate 0073  
               __end_of_setup 0519                 ??_Trasmission 0073                _Lcd_Set_Cursor 0493  
                ?_titulos_LCD 0070                     ?_Lcd_Init 0070                     ?_Lcd_Port 0070  
                     ??_setup 0076                    __pbssBANK0 0020                    __pmaintext 02B7  
                     ?___bmul 0073                    __pintentry 0004     __size_of_Lcd_Write_String 0029  
      __end_of_Lcd_Set_Cursor 04B9        __size_of_ADC_to_string 0029                       _S3_cont 002A  
                  ??_Lcd_Init 003D           __end_of_Trasmission 04FD                    ??_Lcd_Port 0073  
    __size_of_USART_INTERRUPT 0007                    __stringtab 04B9                 _eusart_toggle 007A  
                  _cont_usart 0079                _Lcd_Write_Char 056B                       _Lcd_Cmd 0551  
                ??_USART_Init 0073               __size_of___bmul 0015                 ?_Show_val_LCD 0070  
                     ___lwdiv 03BF                       ___lwmod 0405               ?_Lcd_Set_Cursor 0077  
                     __ptext1 0596                       __ptext2 0441                       __ptext3 04FD  
                     __ptext4 0313                       __ptext5 05EB                       __ptext6 05CC  
                     __ptext7 05E4                       __ptext8 04DE                       __ptext9 0240  
                __size_of_ISR 0011                       _dpowers 04BF                       _initOsc 0313  
                     _isdigit 05A9            __end_of_USART_Init 05DC                       _sprintf 001F  
                     clrloop0 05DD        __end_of_Lcd_Write_Char 0581          end_of_initialization 001B  
               _ADC_to_string 046A                ??_Show_val_LCD 0040                     _RCSTAbits 0018  
                   Lcd_Port@a 0073                     _PORTEbits 0009                   _Trasmission 04DE  
                   _TRISCbits 0087          __size_of_titulos_LCD 0013               ?_Lcd_Write_Char 0070  
           Lcd_Write_String@a 003D             Lcd_Write_String@i 003E                ?_ADC_to_string 0070  
                   _TXSTAbits 0098             ??_USART_INTERRUPT 0073                __end_of___bmul 0596  
            _Lcd_Write_String 0441           start_initialization 000F                   __end_of_ISR 05CC  
           __size_of_Lcd_Init 0050             __size_of_Lcd_Port 0006   __end_of_USART_Init_BaudRate 05F1  
                    ??___bmul 0074               Lcd_Write_Char@a 0075                   __pbssCOMMON 0078  
                   ___latbits 0002                 __pcstackBANK0 003D                  _isdigit$1010 0073  
        __end_of_Show_val_LCD 02B7                   _data_recive 0078               ??_ADC_to_string 0053  
                    ?_Lcd_Cmd 0070                   sprintf@flag 004D                   sprintf@prec 0051  
            ___lwdiv@dividend 0075              ??_Lcd_Set_Cursor 003D                      ?___lwdiv 0073  
                    ?___lwmod 0040                     __pstrings 04B9                      ?_initOsc 0070  
                    ?_isdigit 0070              ___lwdiv@quotient 003E                      ?_sprintf 0046  
              __size_of_setup 001C                 ?_ADC_channel1 0070                 ?_ADC_channel2 0070  
           interrupt_function 0004                     clear_ram0 05DC                      _PIE1bits 008C  
                    Lcd_Cmd@a 0076                      _PIR1bits 000C                      _VAL_SWAP 0024  
                  _ADCON0bits 001F                   __stringbase 04BE                  ?_Trasmission 0070  
            ??_Lcd_Write_Char 0074               _USART_INTERRUPT 05E4                      _Lcd_Init 036F  
                    _Lcd_Port 05F1                ??_ADC_channel1 0076                ??_ADC_channel2 0076  
                  _ADC_Config 0184      __end_of_Lcd_Write_String 046A              __size_of_Lcd_Cmd 001A  
                  _ADC_toggle 0029              __size_of___lwdiv 0046              __size_of___lwmod 003C  
          __end_of__stringtab 04BF         __size_of_Show_val_LCD 0077                    sprintf@val 004E  
               ??_titulos_LCD 0040              __size_of_initOsc 005C              __size_of_isdigit 0012  
             ___lwdiv@divisor 0073               ___lwdiv@counter 003D                      __ptext10 056B  
                    __ptext11 0493                      __ptext20 0581                      __ptext12 036F  
                    __ptext21 0519                      __ptext13 0551                      __ptext22 0535  
                    __ptext14 05F1                      __ptext23 0184                      __ptext15 046A  
                    __ptext24 05BB                      __ptext16 001F                      __ptext17 05A9  
                    __ptext18 0405                      __ptext19 03BF              __size_of_sprintf 0165  
               __size_of_main 005C                  _Show_val_LCD 0240       __end_of_USART_INTERRUPT 05EB  
                  _INTCONbits 000B                   _VAL_NIBBLE1 0022                   _VAL_NIBBLE2 0020  
                    isdigit@c 0074                      intlevel1 0000                     sprintf@ap 004C  
                   sprintf@sp 0050                   ?_ADC_Config 0070           __end_of_titulos_LCD 05A9  
            ___lwmod@dividend 0042                     stringcode 04B9                    _OSCCONbits 008F  
__size_of_USART_Init_BaudRate 0006          __end_of_ADC_channel1 0551          __end_of_ADC_channel2 0535  
          Lcd_Set_Cursor@temp 003F                      sprintf@c 0052                      sprintf@f 0046  
             ___lwmod@divisor 0040          __size_of_Trasmission 001F               ___lwmod@counter 0045  
                    stringdir 04B9                      stringtab 04B9         __end_of_ADC_to_string 0493  
                  _USART_Init 05CC  
