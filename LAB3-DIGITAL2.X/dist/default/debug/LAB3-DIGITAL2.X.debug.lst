

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 11:42:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0094                     	;# 
   346  0095                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009A                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  0105                     	;# 
   358  0107                     	;# 
   359  0108                     	;# 
   360  0109                     	;# 
   361  010C                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  010F                     	;# 
   366  0185                     	;# 
   367  0187                     	;# 
   368  0188                     	;# 
   369  0189                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  000E                     	;# 
   388  000F                     	;# 
   389  0010                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0013                     	;# 
   393  0014                     	;# 
   394  0015                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  001D                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  0081                     	;# 
   408  0085                     	;# 
   409  0086                     	;# 
   410  0087                     	;# 
   411  0088                     	;# 
   412  0089                     	;# 
   413  008C                     	;# 
   414  008D                     	;# 
   415  008E                     	;# 
   416  008F                     	;# 
   417  0090                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0094                     	;# 
   424  0095                     	;# 
   425  0096                     	;# 
   426  0097                     	;# 
   427  0098                     	;# 
   428  0099                     	;# 
   429  009A                     	;# 
   430  009B                     	;# 
   431  009C                     	;# 
   432  009D                     	;# 
   433  009E                     	;# 
   434  009F                     	;# 
   435  0105                     	;# 
   436  0107                     	;# 
   437  0108                     	;# 
   438  0109                     	;# 
   439  010C                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  010F                     	;# 
   444  0185                     	;# 
   445  0187                     	;# 
   446  0188                     	;# 
   447  0189                     	;# 
   448  018C                     	;# 
   449  018D                     	;# 
   450  001F                     _ADCON0bits	set	31
   451  001E                     _ADRESH	set	30
   452  0009                     _PORTEbits	set	9
   453  000C                     _PIR1bits	set	12
   454  000B                     _INTCON	set	11
   455  0009                     _PORTE	set	9
   456  0008                     _PORTD	set	8
   457  0007                     _PORTC	set	7
   458  0006                     _PORTB	set	6
   459  0005                     _PORTA	set	5
   460  00C5                     _SREN	set	197
   461  00C4                     _CREN	set	196
   462  00C7                     _SPEN	set	199
   463  009F                     _ADCON1	set	159
   464  009E                     _ADRESL	set	158
   465  008F                     _OSCCONbits	set	143
   466  008C                     _PIE1bits	set	140
   467  0089                     _TRISE	set	137
   468  0088                     _TRISD	set	136
   469  0087                     _TRISC	set	135
   470  0086                     _TRISB	set	134
   471  0085                     _TRISA	set	133
   472  04C4                     _SYNC	set	1220
   473  04C5                     _TXEN	set	1221
   474  04C2                     _BRGH	set	1218
   475  0189                     _ANSELH	set	393
   476  0188                     _ANSEL	set	392
   477                           
   478                           	psect	strings
   479  0003                     __pstrings:
   480  0003                     stringtab:
   481  0003                     __stringtab:
   482  0003                     stringcode:	
   483                           ;	String table - string pointers are 1 byte each
   484                           
   485  0003                     stringdir:
   486  0003  3000               	movlw	high stringdir
   487  0004  008A               	movwf	10
   488  0005  0804               	movf	4,w
   489  0006  0A84               	incf	4,f
   490  0007  0782               	addwf	2,f
   491  0008                     __stringbase:
   492  0008  3400               	retlw	0
   493  0009                     __end_of__stringtab:
   494  0009                     STR_1:
   495  0009  3453               	retlw	83	;'S'
   496  000A  3431               	retlw	49	;'1'
   497  000B  343A               	retlw	58	;':'
   498  000C  3400               	retlw	0
   499  000D                     STR_2:
   500  000D  3453               	retlw	83	;'S'
   501  000E  3432               	retlw	50	;'2'
   502  000F  343A               	retlw	58	;':'
   503  0010  3400               	retlw	0
   504  0011                     STR_3:
   505  0011  3453               	retlw	83	;'S'
   506  0012  3433               	retlw	51	;'3'
   507  0013  343A               	retlw	58	;':'
   508  0014  3400               	retlw	0
   509                           
   510                           	psect	cinit
   511  07F3                     start_initialization:	
   512                           ; #config settings
   513                           
   514  07F3                     __initialization:
   515                           
   516                           ; Clear objects allocated to BANK0
   517  07F3  1383               	bcf	3,7	;select IRP bank0
   518  07F4  3020               	movlw	low __pbssBANK0
   519  07F5  0084               	movwf	4
   520  07F6  3039               	movlw	low (__pbssBANK0+25)
   521  07F7  120A  118A  253A  120A  118A  	fcall	clear_ram0
   522  07FC                     end_of_initialization:	
   523                           ;End of C runtime variable initialization code
   524                           
   525  07FC                     __end_of__initialization:
   526  07FC  0183               	clrf	3
   527  07FD  120A  118A  2F2D   	ljmp	_main	;jump to C main() function
   528                           
   529                           	psect	bssBANK0
   530  0020                     __pbssBANK0:
   531  0020                     _S2_val:
   532  0020                     	ds	4
   533  0024                     _S1_val:
   534  0024                     	ds	4
   535  0028                     _VAL_NIBBLE2:
   536  0028                     	ds	2
   537  002A                     _VAL_NIBBLE1:
   538  002A                     	ds	2
   539  002C                     _VAL_SWAP:
   540  002C                     	ds	2
   541  002E                     _VAL:
   542  002E                     	ds	2
   543  0030                     _x:
   544  0030                     	ds	2
   545  0032                     _a:
   546  0032                     	ds	2
   547  0034                     _ADC_VALOR_2:
   548  0034                     	ds	2
   549  0036                     _ADC_VALOR_1:
   550  0036                     	ds	2
   551  0038                     _S3_cont:
   552  0038                     	ds	1
   553                           
   554                           	psect	clrtext
   555  053A                     clear_ram0:	
   556                           ;	Called with FSR containing the base address, and
   557                           ;	W with the last address+1
   558                           
   559  053A  0064               	clrwdt	;clear the watchdog before getting into this loop
   560  053B                     clrloop0:
   561  053B  0180               	clrf	0	;clear RAM location pointed to by FSR
   562  053C  0A84               	incf	4,f	;increment pointer
   563  053D  0604               	xorwf	4,w	;XOR with final address
   564  053E  1903               	btfsc	3,2	;have we reached the end yet?
   565  053F  3400               	retlw	0	;all done for this memory range, return
   566  0540  0604               	xorwf	4,w	;XOR again to restore value
   567  0541  2D3B               	goto	clrloop0	;do the next byte
   568                           
   569                           	psect	cstackCOMMON
   570  0070                     __pcstackCOMMON:
   571  0070                     ?_setup:
   572  0070                     ?_Lcd_Init:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_USART_Init_transmission:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ??_USART_Init_transmission:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_USART_Init_reception:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ??_USART_Init_reception:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_Lcd_Clear:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_Lcd_Write_String:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_Lcd_Write_Char:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_initOsc:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ??_initOsc:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_Lcd_Port:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ??_Lcd_Port:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_Lcd_Cmd:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_main:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_bin_to_float:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?___fltol:	
   618                           ; 4 bytes @ 0x0
   619                           
   620  0070                     bin_to_float@ADC_VAL:	
   621                           ; 4 bytes @ 0x0
   622                           
   623  0070                     Lcd_Port@a:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ___fltol@f1:	
   627                           ; 1 bytes @ 0x0
   628                           
   629                           
   630                           ; 4 bytes @ 0x0
   631  0070                     	ds	1
   632  0071                     ??_Lcd_Write_Char:
   633  0071                     ??_Lcd_Cmd:	
   634                           ; 1 bytes @ 0x1
   635                           
   636  0071                     Lcd_Write_Char@a:	
   637                           ; 1 bytes @ 0x1
   638                           
   639                           
   640                           ; 1 bytes @ 0x1
   641  0071                     	ds	1
   642  0072                     ??_Lcd_Write_String:
   643  0072                     initOsc@IRCF:	
   644                           ; 1 bytes @ 0x2
   645                           
   646  0072                     Lcd_Write_String@i:	
   647                           ; 1 bytes @ 0x2
   648                           
   649                           
   650                           ; 2 bytes @ 0x2
   651  0072                     	ds	1
   652  0073                     ??_setup:
   653  0073                     Lcd_Cmd@a:	
   654                           ; 1 bytes @ 0x3
   655                           
   656                           
   657                           ; 1 bytes @ 0x3
   658  0073                     	ds	1
   659  0074                     ??_Lcd_Init:
   660  0074                     ??_Lcd_Clear:	
   661                           ; 1 bytes @ 0x4
   662                           
   663  0074                     ?_Lcd_Set_Cursor:	
   664                           ; 1 bytes @ 0x4
   665                           
   666  0074                     ??___fltol:	
   667                           ; 1 bytes @ 0x4
   668                           
   669  0074                     Lcd_Set_Cursor@b:	
   670                           ; 1 bytes @ 0x4
   671                           
   672  0074                     Lcd_Write_String@a:	
   673                           ; 1 bytes @ 0x4
   674                           
   675                           
   676                           ; 1 bytes @ 0x4
   677  0074                     	ds	1
   678  0075                     ??_bin_to_float:
   679  0075                     ??_Lcd_Set_Cursor:	
   680                           ; 1 bytes @ 0x5
   681                           
   682                           
   683                           ; 1 bytes @ 0x5
   684  0075                     	ds	2
   685  0077                     Lcd_Set_Cursor@a:
   686                           
   687                           ; 1 bytes @ 0x7
   688  0077                     	ds	1
   689  0078                     Lcd_Set_Cursor@z:
   690                           
   691                           ; 1 bytes @ 0x8
   692  0078                     	ds	1
   693  0079                     Lcd_Set_Cursor@y:
   694  0079                     ___fltol@sign1:	
   695                           ; 1 bytes @ 0x9
   696                           
   697                           
   698                           ; 1 bytes @ 0x9
   699  0079                     	ds	1
   700  007A                     Lcd_Set_Cursor@temp:
   701  007A                     ___fltol@exp1:	
   702                           ; 1 bytes @ 0xA
   703                           
   704                           
   705                           ; 1 bytes @ 0xA
   706  007A                     	ds	1
   707  007B                     ??_main:
   708                           
   709                           ; 1 bytes @ 0xB
   710  007B                     	ds	3
   711                           
   712                           	psect	maintext
   713  072D                     __pmaintext:	
   714 ;;
   715 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   716 ;;
   717 ;; *************** function _main *****************
   718 ;; Defined at:
   719 ;;		line 109 in file "pseudocodigo_lab3.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : B00/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   733 ;;      Params:         0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0
   735 ;;      Temps:          3       0       0       0       0
   736 ;;      Totals:         3       0       0       0       0
   737 ;;Total ram usage:        3 bytes
   738 ;; Hardware stack levels required when called:    3
   739 ;; This function calls:
   740 ;;		_Lcd_Clear
   741 ;;		_Lcd_Init
   742 ;;		_Lcd_Set_Cursor
   743 ;;		_Lcd_Write_Char
   744 ;;		_Lcd_Write_String
   745 ;;		_USART_Init_reception
   746 ;;		_USART_Init_transmission
   747 ;;		___fltol
   748 ;;		_bin_to_float
   749 ;;		_setup
   750 ;; This function is called by:
   751 ;;		Startup code after reset
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           
   756                           ;psect for function _main
   757  072D                     _main:
   758  072D                     l1168:	
   759                           ;incstack = 0
   760                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   761                           
   762                           
   763                           ;pseudocodigo_lab3.c: 110:     setup();
   764  072D  120A  118A  2572  120A  118A  	fcall	_setup
   765  0732                     l1170:
   766                           
   767                           ;pseudocodigo_lab3.c: 112:     Lcd_Init();
   768  0732  120A  118A  25BA  120A  118A  	fcall	_Lcd_Init
   769  0737                     l1172:
   770                           
   771                           ;pseudocodigo_lab3.c: 113:     USART_Init_transmission();
   772  0737  120A  118A  2542  120A  118A  	fcall	_USART_Init_transmission
   773  073C                     l1174:
   774                           
   775                           ;pseudocodigo_lab3.c: 114:     USART_Init_reception();
   776  073C  120A  118A  252C  120A  118A  	fcall	_USART_Init_reception
   777  0741                     l1176:
   778                           
   779                           ;pseudocodigo_lab3.c: 120:         S1_val = bin_to_float(ADC_VALOR_1);
   780  0741  3000               	movlw	0
   781  0742  120A  118A  2525  120A  118A  	fcall	_bin_to_float
   782  0747  0873               	movf	?_bin_to_float+3,w
   783  0748  1283               	bcf	3,5	;RP0=0, select bank0
   784  0749  1303               	bcf	3,6	;RP1=0, select bank0
   785  074A  00A7               	movwf	_S1_val+3
   786  074B  0872               	movf	?_bin_to_float+2,w
   787  074C  00A6               	movwf	_S1_val+2
   788  074D  0871               	movf	?_bin_to_float+1,w
   789  074E  00A5               	movwf	_S1_val+1
   790  074F  0870               	movf	?_bin_to_float,w
   791  0750  00A4               	movwf	_S1_val
   792  0751                     l1178:
   793                           
   794                           ;pseudocodigo_lab3.c: 121:         S2_val = bin_to_float(ADC_VALOR_2);
   795  0751  3000               	movlw	0
   796  0752  120A  118A  2525  120A  118A  	fcall	_bin_to_float
   797  0757  0873               	movf	?_bin_to_float+3,w
   798  0758  1283               	bcf	3,5	;RP0=0, select bank0
   799  0759  1303               	bcf	3,6	;RP1=0, select bank0
   800  075A  00A3               	movwf	_S2_val+3
   801  075B  0872               	movf	?_bin_to_float+2,w
   802  075C  00A2               	movwf	_S2_val+2
   803  075D  0871               	movf	?_bin_to_float+1,w
   804  075E  00A1               	movwf	_S2_val+1
   805  075F  0870               	movf	?_bin_to_float,w
   806  0760  00A0               	movwf	_S2_val
   807  0761                     l1180:
   808                           
   809                           ;pseudocodigo_lab3.c: 123:         Lcd_Clear();
   810  0761  120A  118A  254B  120A  118A  	fcall	_Lcd_Clear
   811  0766                     l1182:
   812                           
   813                           ;pseudocodigo_lab3.c: 124:         Lcd_Set_Cursor(1,2);
   814  0766  3002               	movlw	2
   815  0767  00FB               	movwf	??_main
   816  0768  087B               	movf	??_main,w
   817  0769  00F4               	movwf	Lcd_Set_Cursor@b
   818  076A  3001               	movlw	1
   819  076B  120A  118A  2605  120A  118A  	fcall	_Lcd_Set_Cursor
   820  0770                     l1184:
   821                           
   822                           ;pseudocodigo_lab3.c: 125:         Lcd_Write_String("S1:");
   823  0770  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   824  0771  120A  118A  2595  120A  118A  	fcall	_Lcd_Write_String
   825                           
   826                           ;pseudocodigo_lab3.c: 126:         Lcd_Set_Cursor(1,8);
   827  0776  3008               	movlw	8
   828  0777  00FB               	movwf	??_main
   829  0778  087B               	movf	??_main,w
   830  0779  00F4               	movwf	Lcd_Set_Cursor@b
   831  077A  3001               	movlw	1
   832  077B  120A  118A  2605  120A  118A  	fcall	_Lcd_Set_Cursor
   833  0780                     l1186:
   834                           
   835                           ;pseudocodigo_lab3.c: 127:         Lcd_Write_String("S2:");
   836  0780  3005               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   837  0781  120A  118A  2595  120A  118A  	fcall	_Lcd_Write_String
   838  0786                     l1188:
   839                           
   840                           ;pseudocodigo_lab3.c: 128:         Lcd_Set_Cursor(1,13);
   841  0786  300D               	movlw	13
   842  0787  00FB               	movwf	??_main
   843  0788  087B               	movf	??_main,w
   844  0789  00F4               	movwf	Lcd_Set_Cursor@b
   845  078A  3001               	movlw	1
   846  078B  120A  118A  2605  120A  118A  	fcall	_Lcd_Set_Cursor
   847                           
   848                           ;pseudocodigo_lab3.c: 129:         Lcd_Write_String("S3:");
   849  0790  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   850  0791  120A  118A  2595  120A  118A  	fcall	_Lcd_Write_String
   851  0796                     l1190:
   852                           
   853                           ;pseudocodigo_lab3.c: 131:         Lcd_Set_Cursor(2,1);
   854  0796  01F4               	clrf	Lcd_Set_Cursor@b
   855  0797  0AF4               	incf	Lcd_Set_Cursor@b,f
   856  0798  3002               	movlw	2
   857  0799  120A  118A  2605  120A  118A  	fcall	_Lcd_Set_Cursor
   858  079E                     l1192:
   859                           
   860                           ;pseudocodigo_lab3.c: 132:         Lcd_Write_Char(S1_val);
   861  079E  1283               	bcf	3,5	;RP0=0, select bank0
   862  079F  1303               	bcf	3,6	;RP1=0, select bank0
   863  07A0  0827               	movf	_S1_val+3,w
   864  07A1  00F3               	movwf	___fltol@f1+3
   865  07A2  0826               	movf	_S1_val+2,w
   866  07A3  00F2               	movwf	___fltol@f1+2
   867  07A4  0825               	movf	_S1_val+1,w
   868  07A5  00F1               	movwf	___fltol@f1+1
   869  07A6  0824               	movf	_S1_val,w
   870  07A7  00F0               	movwf	___fltol@f1
   871  07A8  120A  118A  26B3  120A  118A  	fcall	___fltol
   872  07AD  0870               	movf	?___fltol,w
   873  07AE  120A  118A  2532  120A  118A  	fcall	_Lcd_Write_Char
   874  07B3                     l1194:
   875                           
   876                           ;pseudocodigo_lab3.c: 133:         Lcd_Set_Cursor(2,7);
   877  07B3  3007               	movlw	7
   878  07B4  00FB               	movwf	??_main
   879  07B5  087B               	movf	??_main,w
   880  07B6  00F4               	movwf	Lcd_Set_Cursor@b
   881  07B7  3002               	movlw	2
   882  07B8  120A  118A  2605  120A  118A  	fcall	_Lcd_Set_Cursor
   883  07BD                     l1196:
   884                           
   885                           ;pseudocodigo_lab3.c: 134:         Lcd_Write_Char(S2_val);
   886  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   887  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   888  07BF  0823               	movf	_S2_val+3,w
   889  07C0  00F3               	movwf	___fltol@f1+3
   890  07C1  0822               	movf	_S2_val+2,w
   891  07C2  00F2               	movwf	___fltol@f1+2
   892  07C3  0821               	movf	_S2_val+1,w
   893  07C4  00F1               	movwf	___fltol@f1+1
   894  07C5  0820               	movf	_S2_val,w
   895  07C6  00F0               	movwf	___fltol@f1
   896  07C7  120A  118A  26B3  120A  118A  	fcall	___fltol
   897  07CC  0870               	movf	?___fltol,w
   898  07CD  120A  118A  2532  120A  118A  	fcall	_Lcd_Write_Char
   899  07D2                     l1198:
   900                           
   901                           ;pseudocodigo_lab3.c: 135:         Lcd_Set_Cursor(2,13);
   902  07D2  300D               	movlw	13
   903  07D3  00FB               	movwf	??_main
   904  07D4  087B               	movf	??_main,w
   905  07D5  00F4               	movwf	Lcd_Set_Cursor@b
   906  07D6  3002               	movlw	2
   907  07D7  120A  118A  2605  120A  118A  	fcall	_Lcd_Set_Cursor
   908  07DC                     l1200:
   909                           
   910                           ;pseudocodigo_lab3.c: 136:         Lcd_Write_Char(S3_cont);
   911  07DC  3000               	movlw	0
   912  07DD  120A  118A  2532  120A  118A  	fcall	_Lcd_Write_Char
   913  07E2                     l1202:
   914                           
   915                           ;pseudocodigo_lab3.c: 137:         _delay((unsigned long)((2000)*(8000000/4000.0)));
   916  07E2  3015               	movlw	21
   917  07E3  00FD               	movwf	??_main+2
   918  07E4  304B               	movlw	75
   919  07E5  00FC               	movwf	??_main+1
   920  07E6  30BE               	movlw	190
   921  07E7  00FB               	movwf	??_main
   922  07E8                     u337:
   923  07E8  0BFB               	decfsz	??_main,f
   924  07E9  2FE8               	goto	u337
   925  07EA  0BFC               	decfsz	??_main+1,f
   926  07EB  2FE8               	goto	u337
   927  07EC  0BFD               	decfsz	??_main+2,f
   928  07ED  2FE8               	goto	u337
   929  07EE  0000               	nop
   930  07EF  2F41               	goto	l1176
   931  07F0  120A  118A  2800   	ljmp	start
   932  07F3                     __end_of_main:
   933                           
   934                           	psect	text1
   935  0572                     __ptext1:	
   936 ;; *************** function _setup *****************
   937 ;; Defined at:
   938 ;;		line 161 in file "pseudocodigo_lab3.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         0       0       0       0       0
   953 ;;      Locals:         0       0       0       0       0
   954 ;;      Temps:          0       0       0       0       0
   955 ;;      Totals:         0       0       0       0       0
   956 ;;Total ram usage:        0 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:    1
   959 ;; This function calls:
   960 ;;		_initOsc
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _setup
   968  0572                     _setup:
   969  0572                     l1062:	
   970                           ;incstack = 0
   971                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   972                           
   973                           
   974                           ;pseudocodigo_lab3.c: 162:     initOsc(0b00000111);
   975  0572  3007               	movlw	7
   976  0573  120A  118A  2657  120A  118A  	fcall	_initOsc
   977  0578                     l1064:
   978                           
   979                           ;pseudocodigo_lab3.c: 163:     ANSEL = 0b00000011;
   980  0578  3003               	movlw	3
   981  0579  1683               	bsf	3,5	;RP0=1, select bank3
   982  057A  1703               	bsf	3,6	;RP1=1, select bank3
   983  057B  0088               	movwf	8	;volatile
   984  057C                     l1066:
   985                           
   986                           ;pseudocodigo_lab3.c: 164:     ANSELH = 0;
   987  057C  0189               	clrf	9	;volatile
   988  057D                     l1068:
   989                           
   990                           ;pseudocodigo_lab3.c: 165:     TRISA = 0b00000011;
   991  057D  3003               	movlw	3
   992  057E  1683               	bsf	3,5	;RP0=1, select bank1
   993  057F  1303               	bcf	3,6	;RP1=0, select bank1
   994  0580  0085               	movwf	5	;volatile
   995  0581                     l1070:
   996                           
   997                           ;pseudocodigo_lab3.c: 166:     PORTA = 0;
   998  0581  1283               	bcf	3,5	;RP0=0, select bank0
   999  0582  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0583  0185               	clrf	5	;volatile
  1001  0584                     l1072:
  1002                           
  1003                           ;pseudocodigo_lab3.c: 167:     PORTB = 0;
  1004  0584  0186               	clrf	6	;volatile
  1005  0585                     l1074:
  1006                           
  1007                           ;pseudocodigo_lab3.c: 168:     PORTC = 0;
  1008  0585  0187               	clrf	7	;volatile
  1009  0586                     l1076:
  1010                           
  1011                           ;pseudocodigo_lab3.c: 169:     TRISB = 0;
  1012  0586  1683               	bsf	3,5	;RP0=1, select bank1
  1013  0587  1303               	bcf	3,6	;RP1=0, select bank1
  1014  0588  0186               	clrf	6	;volatile
  1015  0589                     l1078:
  1016                           
  1017                           ;pseudocodigo_lab3.c: 170:     TRISC = 0;
  1018  0589  0187               	clrf	7	;volatile
  1019  058A                     l1080:
  1020                           
  1021                           ;pseudocodigo_lab3.c: 171:     TRISD = 0;
  1022  058A  0188               	clrf	8	;volatile
  1023  058B                     l1082:
  1024                           
  1025                           ;pseudocodigo_lab3.c: 172:     PORTD = 0;
  1026  058B  1283               	bcf	3,5	;RP0=0, select bank0
  1027  058C  1303               	bcf	3,6	;RP1=0, select bank0
  1028  058D  0188               	clrf	8	;volatile
  1029  058E                     l1084:
  1030                           
  1031                           ;pseudocodigo_lab3.c: 173:     TRISE = 0;
  1032  058E  1683               	bsf	3,5	;RP0=1, select bank1
  1033  058F  1303               	bcf	3,6	;RP1=0, select bank1
  1034  0590  0189               	clrf	9	;volatile
  1035  0591                     l1086:
  1036                           
  1037                           ;pseudocodigo_lab3.c: 174:     PORTE = 0;
  1038  0591  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0592  1303               	bcf	3,6	;RP1=0, select bank0
  1040  0593  0189               	clrf	9	;volatile
  1041  0594                     l98:
  1042  0594  0008               	return
  1043  0595                     __end_of_setup:
  1044                           
  1045                           	psect	text2
  1046  0657                     __ptext2:	
  1047 ;; *************** function _initOsc *****************
  1048 ;; Defined at:
  1049 ;;		line 3 in file "Oscilador.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  IRCF            1    wreg     unsigned char 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  IRCF            1    2[COMMON] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1063 ;;      Params:         0       0       0       0       0
  1064 ;;      Locals:         1       0       0       0       0
  1065 ;;      Temps:          2       0       0       0       0
  1066 ;;      Totals:         3       0       0       0       0
  1067 ;;Total ram usage:        3 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_setup
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           
  1077                           ;psect for function _initOsc
  1078  0657                     _initOsc:
  1079                           
  1080                           ;incstack = 0
  1081                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1082                           ;initOsc@IRCF stored from wreg
  1083  0657  00F2               	movwf	initOsc@IRCF
  1084  0658                     l1042:
  1085                           
  1086                           ;Oscilador.c: 5:     switch(IRCF){
  1087  0658  2E8F               	goto	l1046
  1088  0659                     l113:	
  1089                           ;Oscilador.c: 6:         case 0:
  1090                           
  1091                           
  1092                           ;Oscilador.c: 7:             OSCCONbits.IRCF2 = 0;
  1093  0659  1683               	bsf	3,5	;RP0=1, select bank1
  1094  065A  1303               	bcf	3,6	;RP1=0, select bank1
  1095  065B  130F               	bcf	15,6	;volatile
  1096                           
  1097                           ;Oscilador.c: 8:             OSCCONbits.IRCF1 = 0;
  1098  065C  128F               	bcf	15,5	;volatile
  1099                           
  1100                           ;Oscilador.c: 9:             OSCCONbits.IRCF0 = 0;
  1101  065D  120F               	bcf	15,4	;volatile
  1102                           
  1103                           ;Oscilador.c: 10:             break;
  1104  065E  2EB1               	goto	l114
  1105  065F                     l115:	
  1106                           ;Oscilador.c: 11:          case 1:
  1107                           
  1108                           
  1109                           ;Oscilador.c: 12:             OSCCONbits.IRCF2 = 0;
  1110  065F  1683               	bsf	3,5	;RP0=1, select bank1
  1111  0660  1303               	bcf	3,6	;RP1=0, select bank1
  1112  0661  130F               	bcf	15,6	;volatile
  1113                           
  1114                           ;Oscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  1115  0662  128F               	bcf	15,5	;volatile
  1116                           
  1117                           ;Oscilador.c: 14:             OSCCONbits.IRCF0 = 1;
  1118  0663  160F               	bsf	15,4	;volatile
  1119                           
  1120                           ;Oscilador.c: 15:             break;
  1121  0664  2EB1               	goto	l114
  1122  0665                     l116:	
  1123                           ;Oscilador.c: 16:         case 2:
  1124                           
  1125                           
  1126                           ;Oscilador.c: 17:             OSCCONbits.IRCF2 = 0;
  1127  0665  1683               	bsf	3,5	;RP0=1, select bank1
  1128  0666  1303               	bcf	3,6	;RP1=0, select bank1
  1129  0667  130F               	bcf	15,6	;volatile
  1130                           
  1131                           ;Oscilador.c: 18:             OSCCONbits.IRCF1 = 1;
  1132  0668  168F               	bsf	15,5	;volatile
  1133                           
  1134                           ;Oscilador.c: 19:             OSCCONbits.IRCF0 = 0;
  1135  0669  120F               	bcf	15,4	;volatile
  1136                           
  1137                           ;Oscilador.c: 20:             break;
  1138  066A  2EB1               	goto	l114
  1139  066B                     l117:	
  1140                           ;Oscilador.c: 21:         case 3:
  1141                           
  1142                           
  1143                           ;Oscilador.c: 22:             OSCCONbits.IRCF2 = 0;
  1144  066B  1683               	bsf	3,5	;RP0=1, select bank1
  1145  066C  1303               	bcf	3,6	;RP1=0, select bank1
  1146  066D  130F               	bcf	15,6	;volatile
  1147                           
  1148                           ;Oscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  1149  066E  168F               	bsf	15,5	;volatile
  1150                           
  1151                           ;Oscilador.c: 24:             OSCCONbits.IRCF0 = 1;
  1152  066F  160F               	bsf	15,4	;volatile
  1153                           
  1154                           ;Oscilador.c: 25:             break;
  1155  0670  2EB1               	goto	l114
  1156  0671                     l118:	
  1157                           ;Oscilador.c: 26:         case 4:
  1158                           
  1159                           
  1160                           ;Oscilador.c: 27:             OSCCONbits.IRCF2 = 1;
  1161  0671  1683               	bsf	3,5	;RP0=1, select bank1
  1162  0672  1303               	bcf	3,6	;RP1=0, select bank1
  1163  0673  170F               	bsf	15,6	;volatile
  1164                           
  1165                           ;Oscilador.c: 28:             OSCCONbits.IRCF1 = 0;
  1166  0674  128F               	bcf	15,5	;volatile
  1167                           
  1168                           ;Oscilador.c: 29:             OSCCONbits.IRCF0 = 0;
  1169  0675  120F               	bcf	15,4	;volatile
  1170                           
  1171                           ;Oscilador.c: 30:             break;
  1172  0676  2EB1               	goto	l114
  1173  0677                     l119:	
  1174                           ;Oscilador.c: 31:         case 5:
  1175                           
  1176                           
  1177                           ;Oscilador.c: 32:             OSCCONbits.IRCF2 = 1;
  1178  0677  1683               	bsf	3,5	;RP0=1, select bank1
  1179  0678  1303               	bcf	3,6	;RP1=0, select bank1
  1180  0679  170F               	bsf	15,6	;volatile
  1181                           
  1182                           ;Oscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1183  067A  128F               	bcf	15,5	;volatile
  1184                           
  1185                           ;Oscilador.c: 34:             OSCCONbits.IRCF0 = 1;
  1186  067B  160F               	bsf	15,4	;volatile
  1187                           
  1188                           ;Oscilador.c: 35:             break;
  1189  067C  2EB1               	goto	l114
  1190  067D                     l120:	
  1191                           ;Oscilador.c: 36:         case 6:
  1192                           
  1193                           
  1194                           ;Oscilador.c: 37:             OSCCONbits.IRCF2 = 1;
  1195  067D  1683               	bsf	3,5	;RP0=1, select bank1
  1196  067E  1303               	bcf	3,6	;RP1=0, select bank1
  1197  067F  170F               	bsf	15,6	;volatile
  1198                           
  1199                           ;Oscilador.c: 38:             OSCCONbits.IRCF1 = 1;
  1200  0680  168F               	bsf	15,5	;volatile
  1201                           
  1202                           ;Oscilador.c: 39:             OSCCONbits.IRCF0 = 0;
  1203  0681  120F               	bcf	15,4	;volatile
  1204                           
  1205                           ;Oscilador.c: 40:             break;
  1206  0682  2EB1               	goto	l114
  1207  0683                     l121:	
  1208                           ;Oscilador.c: 41:         case 7:
  1209                           
  1210                           
  1211                           ;Oscilador.c: 42:             OSCCONbits.IRCF2 = 1;
  1212  0683  1683               	bsf	3,5	;RP0=1, select bank1
  1213  0684  1303               	bcf	3,6	;RP1=0, select bank1
  1214  0685  170F               	bsf	15,6	;volatile
  1215                           
  1216                           ;Oscilador.c: 43:             OSCCONbits.IRCF1 = 1;
  1217  0686  168F               	bsf	15,5	;volatile
  1218                           
  1219                           ;Oscilador.c: 44:             OSCCONbits.IRCF0 = 1;
  1220  0687  160F               	bsf	15,4	;volatile
  1221                           
  1222                           ;Oscilador.c: 45:             break;
  1223  0688  2EB1               	goto	l114
  1224  0689                     l122:	
  1225                           ;Oscilador.c: 46:         default:
  1226                           
  1227                           
  1228                           ;Oscilador.c: 47:             OSCCONbits.IRCF2 = 1;
  1229  0689  1683               	bsf	3,5	;RP0=1, select bank1
  1230  068A  1303               	bcf	3,6	;RP1=0, select bank1
  1231  068B  170F               	bsf	15,6	;volatile
  1232                           
  1233                           ;Oscilador.c: 48:             OSCCONbits.IRCF1 = 1;
  1234  068C  168F               	bsf	15,5	;volatile
  1235                           
  1236                           ;Oscilador.c: 49:             OSCCONbits.IRCF0 = 0;
  1237  068D  120F               	bcf	15,4	;volatile
  1238                           
  1239                           ;Oscilador.c: 50:             break;
  1240  068E  2EB1               	goto	l114
  1241  068F                     l1046:
  1242  068F  0872               	movf	initOsc@IRCF,w
  1243  0690  00F0               	movwf	??_initOsc
  1244  0691  01F1               	clrf	??_initOsc+1
  1245                           
  1246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1247                           ; Switch size 1, requested type "simple"
  1248                           ; Number of cases is 1, Range of values is 0 to 0
  1249                           ; switch strategies available:
  1250                           ; Name         Instructions Cycles
  1251                           ; simple_byte            4     3 (average)
  1252                           ; direct_byte           11     8 (fixed)
  1253                           ; jumptable            260     6 (fixed)
  1254                           ;	Chosen strategy is simple_byte
  1255  0692  0871               	movf	??_initOsc+1,w
  1256  0693  3A00               	xorlw	0	; case 0
  1257  0694  1903               	skipnz
  1258  0695  2E97               	goto	l1244
  1259  0696  2E89               	goto	l122
  1260  0697                     l1244:
  1261                           
  1262                           ; Switch size 1, requested type "simple"
  1263                           ; Number of cases is 8, Range of values is 0 to 7
  1264                           ; switch strategies available:
  1265                           ; Name         Instructions Cycles
  1266                           ; simple_byte           25    13 (average)
  1267                           ; direct_byte           32     8 (fixed)
  1268                           ; jumptable            260     6 (fixed)
  1269                           ;	Chosen strategy is simple_byte
  1270  0697  0870               	movf	??_initOsc,w
  1271  0698  3A00               	xorlw	0	; case 0
  1272  0699  1903               	skipnz
  1273  069A  2E59               	goto	l113
  1274  069B  3A01               	xorlw	1	; case 1
  1275  069C  1903               	skipnz
  1276  069D  2E5F               	goto	l115
  1277  069E  3A03               	xorlw	3	; case 2
  1278  069F  1903               	skipnz
  1279  06A0  2E65               	goto	l116
  1280  06A1  3A01               	xorlw	1	; case 3
  1281  06A2  1903               	skipnz
  1282  06A3  2E6B               	goto	l117
  1283  06A4  3A07               	xorlw	7	; case 4
  1284  06A5  1903               	skipnz
  1285  06A6  2E71               	goto	l118
  1286  06A7  3A01               	xorlw	1	; case 5
  1287  06A8  1903               	skipnz
  1288  06A9  2E77               	goto	l119
  1289  06AA  3A03               	xorlw	3	; case 6
  1290  06AB  1903               	skipnz
  1291  06AC  2E7D               	goto	l120
  1292  06AD  3A01               	xorlw	1	; case 7
  1293  06AE  1903               	skipnz
  1294  06AF  2E83               	goto	l121
  1295  06B0  2E89               	goto	l122
  1296  06B1                     l114:
  1297                           
  1298                           ;Oscilador.c: 52:     OSCCONbits.SCS = 1;
  1299  06B1  140F               	bsf	15,0	;volatile
  1300  06B2                     l123:
  1301  06B2  0008               	return
  1302  06B3                     __end_of_initOsc:
  1303                           
  1304                           	psect	text3
  1305  0525                     __ptext3:	
  1306 ;; *************** function _bin_to_float *****************
  1307 ;; Defined at:
  1308 ;;		line 146 in file "pseudocodigo_lab3.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;  ADC_VAL         1    wreg     unsigned char 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  ADC_VAL         1    0[COMMON] unsigned char 
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  4    0[COMMON] float 
  1315 ;; Registers used:
  1316 ;;		wreg
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1322 ;;      Params:         5       0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0
  1325 ;;      Totals:         5       0       0       0       0
  1326 ;;Total ram usage:        5 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_main
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           
  1336                           ;psect for function _bin_to_float
  1337  0525                     _bin_to_float:
  1338  0525                     l89:	
  1339                           ;incstack = 0
  1340                           ; Regs used in _bin_to_float: [wreg]
  1341                           
  1342  0525  0008               	return
  1343  0526                     __end_of_bin_to_float:
  1344                           
  1345                           	psect	text4
  1346  06B3                     __ptext4:	
  1347 ;; *************** function ___fltol *****************
  1348 ;; Defined at:
  1349 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  f1              4    0[COMMON] float 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  exp1            1   10[COMMON] unsigned char 
  1354 ;;  sign1           1    9[COMMON] unsigned char 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  4    0[COMMON] long 
  1357 ;; Registers used:
  1358 ;;		wreg, status,2, status,0
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1364 ;;      Params:         4       0       0       0       0
  1365 ;;      Locals:         2       0       0       0       0
  1366 ;;      Temps:          5       0       0       0       0
  1367 ;;      Totals:        11       0       0       0       0
  1368 ;;Total ram usage:       11 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; This function calls:
  1371 ;;		Nothing
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           
  1378                           ;psect for function ___fltol
  1379  06B3                     ___fltol:
  1380  06B3                     l1132:	
  1381                           ;incstack = 0
  1382                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  1383                           
  1384  06B3  1003               	clrc
  1385  06B4  0D72               	rlf	___fltol@f1+2,w
  1386  06B5  0D73               	rlf	___fltol@f1+3,w
  1387  06B6  00F4               	movwf	??___fltol
  1388  06B7  0874               	movf	??___fltol,w
  1389  06B8  00FA               	movwf	___fltol@exp1
  1390  06B9  087A               	movf	___fltol@exp1,w
  1391  06BA  1D03               	btfss	3,2
  1392  06BB  2EBD               	goto	u221
  1393  06BC  2EBE               	goto	u220
  1394  06BD                     u221:
  1395  06BD  2EC7               	goto	l1138
  1396  06BE                     u220:
  1397  06BE                     l1134:
  1398  06BE  3000               	movlw	0
  1399  06BF  00F3               	movwf	?___fltol+3
  1400  06C0  3000               	movlw	0
  1401  06C1  00F2               	movwf	?___fltol+2
  1402  06C2  3000               	movlw	0
  1403  06C3  00F1               	movwf	?___fltol+1
  1404  06C4  3000               	movlw	0
  1405  06C5  00F0               	movwf	?___fltol
  1406  06C6  2F2C               	goto	l488
  1407  06C7                     l1138:
  1408  06C7  0870               	movf	___fltol@f1,w
  1409  06C8  00F4               	movwf	??___fltol
  1410  06C9  0871               	movf	___fltol@f1+1,w
  1411  06CA  00F5               	movwf	??___fltol+1
  1412  06CB  0872               	movf	___fltol@f1+2,w
  1413  06CC  00F6               	movwf	??___fltol+2
  1414  06CD  0873               	movf	___fltol@f1+3,w
  1415  06CE  00F7               	movwf	??___fltol+3
  1416  06CF  301F               	movlw	31
  1417  06D0                     u235:
  1418  06D0  1003               	clrc
  1419  06D1  0CF7               	rrf	??___fltol+3,f
  1420  06D2  0CF6               	rrf	??___fltol+2,f
  1421  06D3  0CF5               	rrf	??___fltol+1,f
  1422  06D4  0CF4               	rrf	??___fltol,f
  1423  06D5                     u230:
  1424  06D5  3EFF               	addlw	-1
  1425  06D6  1D03               	skipz
  1426  06D7  2ED0               	goto	u235
  1427  06D8  0874               	movf	??___fltol,w
  1428  06D9  00F8               	movwf	??___fltol+4
  1429  06DA  0878               	movf	??___fltol+4,w
  1430  06DB  00F9               	movwf	___fltol@sign1
  1431  06DC                     l1140:
  1432  06DC  17F2               	bsf	___fltol@f1+2,7
  1433  06DD                     l1142:
  1434  06DD  30FF               	movlw	255
  1435  06DE  05F0               	andwf	___fltol@f1,f
  1436  06DF  30FF               	movlw	255
  1437  06E0  05F1               	andwf	___fltol@f1+1,f
  1438  06E1  30FF               	movlw	255
  1439  06E2  05F2               	andwf	___fltol@f1+2,f
  1440  06E3  3000               	movlw	0
  1441  06E4  05F3               	andwf	___fltol@f1+3,f
  1442  06E5                     l1144:
  1443  06E5  3096               	movlw	150
  1444  06E6  02FA               	subwf	___fltol@exp1,f
  1445  06E7                     l1146:
  1446  06E7  1FFA               	btfss	___fltol@exp1,7
  1447  06E8  2EEA               	goto	u241
  1448  06E9  2EEB               	goto	u240
  1449  06EA                     u241:
  1450  06EA  2F05               	goto	l1156
  1451  06EB                     u240:
  1452  06EB                     l1148:
  1453  06EB  087A               	movf	___fltol@exp1,w
  1454  06EC  3A80               	xorlw	128
  1455  06ED  3E97               	addlw	151
  1456  06EE  1803               	skipnc
  1457  06EF  2EF1               	goto	u251
  1458  06F0  2EF2               	goto	u250
  1459  06F1                     u251:
  1460  06F1  2EF3               	goto	l1154
  1461  06F2                     u250:
  1462  06F2  2EBE               	goto	l1134
  1463  06F3                     l1154:
  1464  06F3  3001               	movlw	1
  1465  06F4                     u265:
  1466  06F4  1003               	clrc
  1467  06F5  0CF3               	rrf	___fltol@f1+3,f
  1468  06F6  0CF2               	rrf	___fltol@f1+2,f
  1469  06F7  0CF1               	rrf	___fltol@f1+1,f
  1470  06F8  0CF0               	rrf	___fltol@f1,f
  1471  06F9  3EFF               	addlw	-1
  1472  06FA  1D03               	skipz
  1473  06FB  2EF4               	goto	u265
  1474  06FC  3001               	movlw	1
  1475  06FD  00F4               	movwf	??___fltol
  1476  06FE  0874               	movf	??___fltol,w
  1477  06FF  07FA               	addwf	___fltol@exp1,f
  1478  0700  1D03               	btfss	3,2
  1479  0701  2F03               	goto	u271
  1480  0702  2F04               	goto	u270
  1481  0703                     u271:
  1482  0703  2EF3               	goto	l1154
  1483  0704                     u270:
  1484  0704  2F1C               	goto	l1164
  1485  0705                     l1156:
  1486  0705  3020               	movlw	32
  1487  0706  027A               	subwf	___fltol@exp1,w
  1488  0707  1C03               	skipc
  1489  0708  2F0A               	goto	u281
  1490  0709  2F0B               	goto	u280
  1491  070A                     u281:
  1492  070A  2F17               	goto	l495
  1493  070B                     u280:
  1494  070B  2EBE               	goto	l1134
  1495  070C                     l1162:
  1496  070C  3001               	movlw	1
  1497  070D  00F4               	movwf	??___fltol
  1498  070E                     u295:
  1499  070E  1003               	clrc
  1500  070F  0DF0               	rlf	___fltol@f1,f
  1501  0710  0DF1               	rlf	___fltol@f1+1,f
  1502  0711  0DF2               	rlf	___fltol@f1+2,f
  1503  0712  0DF3               	rlf	___fltol@f1+3,f
  1504  0713  0BF4               	decfsz	??___fltol,f
  1505  0714  2F0E               	goto	u295
  1506  0715  3001               	movlw	1
  1507  0716  02FA               	subwf	___fltol@exp1,f
  1508  0717                     l495:
  1509  0717  087A               	movf	___fltol@exp1,w
  1510  0718  1D03               	btfss	3,2
  1511  0719  2F1B               	goto	u301
  1512  071A  2F1C               	goto	u300
  1513  071B                     u301:
  1514  071B  2F0C               	goto	l1162
  1515  071C                     u300:
  1516  071C                     l1164:
  1517  071C  0879               	movf	___fltol@sign1,w
  1518  071D  1903               	btfsc	3,2
  1519  071E  2F20               	goto	u311
  1520  071F  2F21               	goto	u310
  1521  0720                     u311:
  1522  0720  2F2C               	goto	l498
  1523  0721                     u310:
  1524  0721                     l1166:
  1525  0721  09F0               	comf	___fltol@f1,f
  1526  0722  09F1               	comf	___fltol@f1+1,f
  1527  0723  09F2               	comf	___fltol@f1+2,f
  1528  0724  09F3               	comf	___fltol@f1+3,f
  1529  0725  0AF0               	incf	___fltol@f1,f
  1530  0726  1903               	skipnz
  1531  0727  0AF1               	incf	___fltol@f1+1,f
  1532  0728  1903               	skipnz
  1533  0729  0AF2               	incf	___fltol@f1+2,f
  1534  072A  1903               	skipnz
  1535  072B  0AF3               	incf	___fltol@f1+3,f
  1536  072C                     l498:
  1537  072C                     l488:
  1538  072C  0008               	return
  1539  072D                     __end_of___fltol:
  1540                           
  1541                           	psect	text5
  1542  0542                     __ptext5:	
  1543 ;; *************** function _USART_Init_transmission *****************
  1544 ;; Defined at:
  1545 ;;		line 186 in file "pseudocodigo_lab3.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		None
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1559 ;;      Params:         0       0       0       0       0
  1560 ;;      Locals:         0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0
  1562 ;;      Totals:         0       0       0       0       0
  1563 ;;Total ram usage:        0 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function _USART_Init_transmission
  1574  0542                     _USART_Init_transmission:
  1575  0542                     l1098:	
  1576                           ;incstack = 0
  1577                           ; Regs used in _USART_Init_transmission: []
  1578                           
  1579                           
  1580                           ;pseudocodigo_lab3.c: 187:     BRGH = 1;
  1581  0542  1683               	bsf	3,5	;RP0=1, select bank1
  1582  0543  1303               	bcf	3,6	;RP1=0, select bank1
  1583  0544  1518               	bsf	24,2	;volatile
  1584                           
  1585                           ;pseudocodigo_lab3.c: 188:     TXEN = 1;
  1586  0545  1698               	bsf	24,5	;volatile
  1587                           
  1588                           ;pseudocodigo_lab3.c: 189:     SYNC = 0;
  1589  0546  1218               	bcf	24,4	;volatile
  1590                           
  1591                           ;pseudocodigo_lab3.c: 190:     SPEN = 1;
  1592  0547  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0548  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0549  1798               	bsf	24,7	;volatile
  1595  054A                     l104:
  1596  054A  0008               	return
  1597  054B                     __end_of_USART_Init_transmission:
  1598                           
  1599                           	psect	text6
  1600  052C                     __ptext6:	
  1601 ;; *************** function _USART_Init_reception *****************
  1602 ;; Defined at:
  1603 ;;		line 193 in file "pseudocodigo_lab3.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;		None
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;		None
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      void 
  1610 ;; Registers used:
  1611 ;;		None
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1617 ;;      Params:         0       0       0       0       0
  1618 ;;      Locals:         0       0       0       0       0
  1619 ;;      Temps:          0       0       0       0       0
  1620 ;;      Totals:         0       0       0       0       0
  1621 ;;Total ram usage:        0 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_main
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           
  1631                           ;psect for function _USART_Init_reception
  1632  052C                     _USART_Init_reception:
  1633  052C                     l1100:	
  1634                           ;incstack = 0
  1635                           ; Regs used in _USART_Init_reception: []
  1636                           
  1637                           
  1638                           ;pseudocodigo_lab3.c: 194:     SPEN =1;
  1639  052C  1283               	bcf	3,5	;RP0=0, select bank0
  1640  052D  1303               	bcf	3,6	;RP1=0, select bank0
  1641  052E  1798               	bsf	24,7	;volatile
  1642                           
  1643                           ;pseudocodigo_lab3.c: 195:     CREN =1;
  1644  052F  1618               	bsf	24,4	;volatile
  1645                           
  1646                           ;pseudocodigo_lab3.c: 196:     SREN = 1;
  1647  0530  1698               	bsf	24,5	;volatile
  1648  0531                     l107:
  1649  0531  0008               	return
  1650  0532                     __end_of_USART_Init_reception:
  1651                           
  1652                           	psect	text7
  1653  0595                     __ptext7:	
  1654 ;; *************** function _Lcd_Write_String *****************
  1655 ;; Defined at:
  1656 ;;		line 87 in file "LCD.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  a               1    wreg     PTR unsigned char 
  1659 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;  a               1    4[COMMON] PTR unsigned char 
  1662 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  1663 ;;  i               2    2[COMMON] int 
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1673 ;;      Params:         0       0       0       0       0
  1674 ;;      Locals:         3       0       0       0       0
  1675 ;;      Temps:          0       0       0       0       0
  1676 ;;      Totals:         3       0       0       0       0
  1677 ;;Total ram usage:        3 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    2
  1680 ;; This function calls:
  1681 ;;		_Lcd_Write_Char
  1682 ;; This function is called by:
  1683 ;;		_main
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function _Lcd_Write_String
  1689  0595                     _Lcd_Write_String:
  1690                           
  1691                           ;incstack = 0
  1692                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1693                           ;Lcd_Write_String@a stored from wreg
  1694  0595  00F4               	movwf	Lcd_Write_String@a
  1695  0596                     l1124:
  1696                           
  1697                           ;LCD.c: 88:  int i;;LCD.c: 89:  for(i=0;a[i]!='\0';i++)
  1698  0596  01F2               	clrf	Lcd_Write_String@i
  1699  0597  01F3               	clrf	Lcd_Write_String@i+1
  1700  0598  2DAC               	goto	l1130
  1701  0599                     l1126:
  1702                           
  1703                           ;LCD.c: 90:     Lcd_Write_Char(a[i]);
  1704  0599  0872               	movf	Lcd_Write_String@i,w
  1705  059A  0774               	addwf	Lcd_Write_String@a,w
  1706  059B  0084               	movwf	4
  1707  059C  120A  118A  2003  120A  118A  	fcall	stringdir
  1708  05A1  120A  118A  2532  120A  118A  	fcall	_Lcd_Write_Char
  1709  05A6                     l1128:
  1710  05A6  3001               	movlw	1
  1711  05A7  07F2               	addwf	Lcd_Write_String@i,f
  1712  05A8  1803               	skipnc
  1713  05A9  0AF3               	incf	Lcd_Write_String@i+1,f
  1714  05AA  3000               	movlw	0
  1715  05AB  07F3               	addwf	Lcd_Write_String@i+1,f
  1716  05AC                     l1130:
  1717  05AC  0872               	movf	Lcd_Write_String@i,w
  1718  05AD  0774               	addwf	Lcd_Write_String@a,w
  1719  05AE  0084               	movwf	4
  1720  05AF  120A  118A  2003  120A  118A  	fcall	stringdir
  1721  05B4  3A00               	xorlw	0
  1722  05B5  1D03               	skipz
  1723  05B6  2DB8               	goto	u211
  1724  05B7  2DB9               	goto	u210
  1725  05B8                     u211:
  1726  05B8  2D99               	goto	l1126
  1727  05B9                     u210:
  1728  05B9                     l160:
  1729  05B9  0008               	return
  1730  05BA                     __end_of_Lcd_Write_String:
  1731                           
  1732                           	psect	text8
  1733  0532                     __ptext8:	
  1734 ;; *************** function _Lcd_Write_Char *****************
  1735 ;; Defined at:
  1736 ;;		line 68 in file "LCD.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  a               1    wreg     unsigned char 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  a               1    1[COMMON] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg, status,2, status,0, pclath, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1750 ;;      Params:         0       0       0       0       0
  1751 ;;      Locals:         1       0       0       0       0
  1752 ;;      Temps:          0       0       0       0       0
  1753 ;;      Totals:         1       0       0       0       0
  1754 ;;Total ram usage:        1 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    1
  1757 ;; This function calls:
  1758 ;;		_Lcd_Port
  1759 ;; This function is called by:
  1760 ;;		_main
  1761 ;;		_Lcd_Write_String
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _Lcd_Write_Char
  1767  0532                     _Lcd_Write_Char:
  1768                           
  1769                           ;incstack = 0
  1770                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1771                           ;Lcd_Write_Char@a stored from wreg
  1772  0532  00F1               	movwf	Lcd_Write_Char@a
  1773  0533                     l1040:
  1774                           
  1775                           ;LCD.c: 69:    Lcd_Port(a);
  1776  0533  0871               	movf	Lcd_Write_Char@a,w
  1777  0534  120A  118A  2526  120A  118A  	fcall	_Lcd_Port
  1778  0539                     l154:
  1779  0539  0008               	return
  1780  053A                     __end_of_Lcd_Write_Char:
  1781                           
  1782                           	psect	text9
  1783  0605                     __ptext9:	
  1784 ;; *************** function _Lcd_Set_Cursor *****************
  1785 ;; Defined at:
  1786 ;;		line 49 in file "LCD.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  a               1    wreg     unsigned char 
  1789 ;;  b               1    4[COMMON] unsigned char 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  a               1    7[COMMON] unsigned char 
  1792 ;;  temp            1   10[COMMON] unsigned char 
  1793 ;;  y               1    9[COMMON] unsigned char 
  1794 ;;  z               1    8[COMMON] unsigned char 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0, pclath, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1804 ;;      Params:         1       0       0       0       0
  1805 ;;      Locals:         4       0       0       0       0
  1806 ;;      Temps:          2       0       0       0       0
  1807 ;;      Totals:         7       0       0       0       0
  1808 ;;Total ram usage:        7 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    2
  1811 ;; This function calls:
  1812 ;;		_Lcd_Cmd
  1813 ;; This function is called by:
  1814 ;;		_main
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           
  1819                           ;psect for function _Lcd_Set_Cursor
  1820  0605                     _Lcd_Set_Cursor:
  1821                           
  1822                           ;incstack = 0
  1823                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1824                           ;Lcd_Set_Cursor@a stored from wreg
  1825  0605  00F7               	movwf	Lcd_Set_Cursor@a
  1826  0606                     l1104:
  1827                           
  1828                           ;LCD.c: 50:  char temp,z,y;;LCD.c: 51:  if(a == 1){
  1829  0606  0377               	decf	Lcd_Set_Cursor@a,w
  1830  0607  1D03               	btfss	3,2
  1831  0608  2E0A               	goto	u171
  1832  0609  2E0B               	goto	u170
  1833  060A                     u171:
  1834  060A  2E2E               	goto	l1114
  1835  060B                     u170:
  1836  060B                     l1106:
  1837                           
  1838                           ;LCD.c: 52:    temp = 0x80 + b - 1;
  1839  060B  0874               	movf	Lcd_Set_Cursor@b,w
  1840  060C  3E7F               	addlw	127
  1841  060D  00F5               	movwf	??_Lcd_Set_Cursor
  1842  060E  0875               	movf	??_Lcd_Set_Cursor,w
  1843  060F  00FA               	movwf	Lcd_Set_Cursor@temp
  1844                           
  1845                           ;LCD.c: 53:   z = temp>>4;
  1846  0610  087A               	movf	Lcd_Set_Cursor@temp,w
  1847  0611  00F5               	movwf	??_Lcd_Set_Cursor
  1848  0612  3004               	movlw	4
  1849  0613                     u185:
  1850  0613  1003               	clrc
  1851  0614  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1852  0615  3EFF               	addlw	-1
  1853  0616  1D03               	skipz
  1854  0617  2E13               	goto	u185
  1855  0618  0875               	movf	??_Lcd_Set_Cursor,w
  1856  0619  00F6               	movwf	??_Lcd_Set_Cursor+1
  1857  061A  0876               	movf	??_Lcd_Set_Cursor+1,w
  1858  061B  00F8               	movwf	Lcd_Set_Cursor@z
  1859  061C                     l1108:
  1860                           
  1861                           ;LCD.c: 54:   y = temp & 0x0F;
  1862  061C  087A               	movf	Lcd_Set_Cursor@temp,w
  1863  061D  390F               	andlw	15
  1864  061E  00F5               	movwf	??_Lcd_Set_Cursor
  1865  061F  0875               	movf	??_Lcd_Set_Cursor,w
  1866  0620  00F9               	movwf	Lcd_Set_Cursor@y
  1867  0621                     l1110:
  1868                           
  1869                           ;LCD.c: 55:   Lcd_Cmd(z);
  1870  0621  0878               	movf	Lcd_Set_Cursor@z,w
  1871  0622  120A  118A  2558  120A  118A  	fcall	_Lcd_Cmd
  1872  0627                     l1112:
  1873                           
  1874                           ;LCD.c: 56:   Lcd_Cmd(y);
  1875  0627  0879               	movf	Lcd_Set_Cursor@y,w
  1876  0628  120A  118A  2558  120A  118A  	fcall	_Lcd_Cmd
  1877                           
  1878                           ;LCD.c: 57:  }
  1879  062D  2E56               	goto	l151
  1880  062E                     l1114:
  1881  062E  3002               	movlw	2
  1882  062F  0677               	xorwf	Lcd_Set_Cursor@a,w
  1883  0630  1D03               	btfss	3,2
  1884  0631  2E33               	goto	u191
  1885  0632  2E34               	goto	u190
  1886  0633                     u191:
  1887  0633  2E56               	goto	l151
  1888  0634                     u190:
  1889  0634                     l1116:
  1890                           
  1891                           ;LCD.c: 59:   temp = 0xC0 + b - 1;
  1892  0634  0874               	movf	Lcd_Set_Cursor@b,w
  1893  0635  3EBF               	addlw	191
  1894  0636  00F5               	movwf	??_Lcd_Set_Cursor
  1895  0637  0875               	movf	??_Lcd_Set_Cursor,w
  1896  0638  00FA               	movwf	Lcd_Set_Cursor@temp
  1897                           
  1898                           ;LCD.c: 60:   z = temp>>4;
  1899  0639  087A               	movf	Lcd_Set_Cursor@temp,w
  1900  063A  00F5               	movwf	??_Lcd_Set_Cursor
  1901  063B  3004               	movlw	4
  1902  063C                     u205:
  1903  063C  1003               	clrc
  1904  063D  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1905  063E  3EFF               	addlw	-1
  1906  063F  1D03               	skipz
  1907  0640  2E3C               	goto	u205
  1908  0641  0875               	movf	??_Lcd_Set_Cursor,w
  1909  0642  00F6               	movwf	??_Lcd_Set_Cursor+1
  1910  0643  0876               	movf	??_Lcd_Set_Cursor+1,w
  1911  0644  00F8               	movwf	Lcd_Set_Cursor@z
  1912  0645                     l1118:
  1913                           
  1914                           ;LCD.c: 61:   y = temp & 0x0F;
  1915  0645  087A               	movf	Lcd_Set_Cursor@temp,w
  1916  0646  390F               	andlw	15
  1917  0647  00F5               	movwf	??_Lcd_Set_Cursor
  1918  0648  0875               	movf	??_Lcd_Set_Cursor,w
  1919  0649  00F9               	movwf	Lcd_Set_Cursor@y
  1920  064A                     l1120:
  1921                           
  1922                           ;LCD.c: 62:   Lcd_Cmd(z);
  1923  064A  0878               	movf	Lcd_Set_Cursor@z,w
  1924  064B  120A  118A  2558  120A  118A  	fcall	_Lcd_Cmd
  1925  0650                     l1122:
  1926                           
  1927                           ;LCD.c: 63:   Lcd_Cmd(y);
  1928  0650  0879               	movf	Lcd_Set_Cursor@y,w
  1929  0651  120A  118A  2558  120A  118A  	fcall	_Lcd_Cmd
  1930  0656                     l151:
  1931  0656  0008               	return
  1932  0657                     __end_of_Lcd_Set_Cursor:
  1933                           
  1934                           	psect	text10
  1935  05BA                     __ptext10:	
  1936 ;; *************** function _Lcd_Init *****************
  1937 ;; Defined at:
  1938 ;;		line 14 in file "LCD.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2, status,0, pclath, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1952 ;;      Params:         0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0
  1954 ;;      Temps:          2       0       0       0       0
  1955 ;;      Totals:         2       0       0       0       0
  1956 ;;Total ram usage:        2 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    2
  1959 ;; This function calls:
  1960 ;;		_Lcd_Cmd
  1961 ;;		_Lcd_Port
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           
  1968                           ;psect for function _Lcd_Init
  1969  05BA                     _Lcd_Init:
  1970  05BA                     l1088:	
  1971                           ;incstack = 0
  1972                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1973                           
  1974                           
  1975                           ;LCD.c: 15:   Lcd_Port(0x00);
  1976  05BA  3000               	movlw	0
  1977  05BB  120A  118A  2526  120A  118A  	fcall	_Lcd_Port
  1978  05C0                     l1090:
  1979                           
  1980                           ;LCD.c: 16:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1981  05C0  3034               	movlw	52
  1982  05C1  00F5               	movwf	??_Lcd_Init+1
  1983  05C2  30F1               	movlw	241
  1984  05C3  00F4               	movwf	??_Lcd_Init
  1985  05C4                     u347:
  1986  05C4  0BF4               	decfsz	??_Lcd_Init,f
  1987  05C5  2DC4               	goto	u347
  1988  05C6  0BF5               	decfsz	??_Lcd_Init+1,f
  1989  05C7  2DC4               	goto	u347
  1990  05C8  2DC9               	nop2
  1991  05C9                     l1092:
  1992                           
  1993                           ;LCD.c: 17:   Lcd_Cmd(0x030);
  1994  05C9  3030               	movlw	48
  1995  05CA  120A  118A  2558  120A  118A  	fcall	_Lcd_Cmd
  1996                           
  1997                           ;LCD.c: 18:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1998  05CF  300D               	movlw	13
  1999  05D0  00F5               	movwf	??_Lcd_Init+1
  2000  05D1  30FB               	movlw	251
  2001  05D2  00F4               	movwf	??_Lcd_Init
  2002  05D3                     u357:
  2003  05D3  0BF4               	decfsz	??_Lcd_Init,f
  2004  05D4  2DD3               	goto	u357
  2005  05D5  0BF5               	decfsz	??_Lcd_Init+1,f
  2006  05D6  2DD3               	goto	u357
  2007  05D7  2DD8               	nop2
  2008  05D8                     l1094:
  2009                           
  2010                           ;LCD.c: 19:   Lcd_Cmd(0x030);
  2011  05D8  3030               	movlw	48
  2012  05D9  120A  118A  2558  120A  118A  	fcall	_Lcd_Cmd
  2013  05DE                     l1096:
  2014                           
  2015                           ;LCD.c: 20:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2016  05DE  301D               	movlw	29
  2017  05DF  00F5               	movwf	??_Lcd_Init+1
  2018  05E0  3091               	movlw	145
  2019  05E1  00F4               	movwf	??_Lcd_Init
  2020  05E2                     u367:
  2021  05E2  0BF4               	decfsz	??_Lcd_Init,f
  2022  05E3  2DE2               	goto	u367
  2023  05E4  0BF5               	decfsz	??_Lcd_Init+1,f
  2024  05E5  2DE2               	goto	u367
  2025                           
  2026                           ;LCD.c: 21:   Lcd_Cmd(0x030);
  2027  05E6  3030               	movlw	48
  2028  05E7  120A  118A  2558  120A  118A  	fcall	_Lcd_Cmd
  2029                           
  2030                           ;LCD.c: 22:   Lcd_Cmd(0x032);
  2031  05EC  3032               	movlw	50
  2032  05ED  120A  118A  2558  120A  118A  	fcall	_Lcd_Cmd
  2033                           
  2034                           ;LCD.c: 23:   Lcd_Cmd(0x008);
  2035  05F2  3008               	movlw	8
  2036  05F3  120A  118A  2558  120A  118A  	fcall	_Lcd_Cmd
  2037                           
  2038                           ;LCD.c: 24:   Lcd_Cmd(0x001);
  2039  05F8  3001               	movlw	1
  2040  05F9  120A  118A  2558  120A  118A  	fcall	_Lcd_Cmd
  2041                           
  2042                           ;LCD.c: 25:   Lcd_Cmd(0x006);
  2043  05FE  3006               	movlw	6
  2044  05FF  120A  118A  2558  120A  118A  	fcall	_Lcd_Cmd
  2045  0604                     l136:
  2046  0604  0008               	return
  2047  0605                     __end_of_Lcd_Init:
  2048                           
  2049                           	psect	text11
  2050  054B                     __ptext11:	
  2051 ;; *************** function _Lcd_Clear *****************
  2052 ;; Defined at:
  2053 ;;		line 43 in file "LCD.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0, pclath, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2067 ;;      Params:         0       0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0
  2069 ;;      Temps:          0       0       0       0       0
  2070 ;;      Totals:         0       0       0       0       0
  2071 ;;Total ram usage:        0 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:    2
  2074 ;; This function calls:
  2075 ;;		_Lcd_Cmd
  2076 ;; This function is called by:
  2077 ;;		_main
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           
  2082                           ;psect for function _Lcd_Clear
  2083  054B                     _Lcd_Clear:
  2084  054B                     l1102:	
  2085                           ;incstack = 0
  2086                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2087                           
  2088                           
  2089                           ;LCD.c: 44:  Lcd_Cmd(0);
  2090  054B  3000               	movlw	0
  2091  054C  120A  118A  2558  120A  118A  	fcall	_Lcd_Cmd
  2092                           
  2093                           ;LCD.c: 45:  Lcd_Cmd(1);
  2094  0551  3001               	movlw	1
  2095  0552  120A  118A  2558  120A  118A  	fcall	_Lcd_Cmd
  2096  0557                     l145:
  2097  0557  0008               	return
  2098  0558                     __end_of_Lcd_Clear:
  2099                           
  2100                           	psect	text12
  2101  0558                     __ptext12:	
  2102 ;; *************** function _Lcd_Cmd *****************
  2103 ;; Defined at:
  2104 ;;		line 34 in file "LCD.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  a               1    wreg     unsigned char 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  a               1    3[COMMON] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0, pclath, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2118 ;;      Params:         0       0       0       0       0
  2119 ;;      Locals:         1       0       0       0       0
  2120 ;;      Temps:          2       0       0       0       0
  2121 ;;      Totals:         3       0       0       0       0
  2122 ;;Total ram usage:        3 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    1
  2125 ;; This function calls:
  2126 ;;		_Lcd_Port
  2127 ;; This function is called by:
  2128 ;;		_Lcd_Init
  2129 ;;		_Lcd_Clear
  2130 ;;		_Lcd_Set_Cursor
  2131 ;;		_Lcd_Shift_Right
  2132 ;;		_Lcd_Shift_Left
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           
  2137                           ;psect for function _Lcd_Cmd
  2138  0558                     _Lcd_Cmd:
  2139                           
  2140                           ;incstack = 0
  2141                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2142                           ;Lcd_Cmd@a stored from wreg
  2143  0558  00F3               	movwf	Lcd_Cmd@a
  2144  0559                     l1052:
  2145                           
  2146                           ;LCD.c: 35:  PORTEbits.RE0 = 0;
  2147  0559  1283               	bcf	3,5	;RP0=0, select bank0
  2148  055A  1303               	bcf	3,6	;RP1=0, select bank0
  2149  055B  1009               	bcf	9,0	;volatile
  2150  055C                     l1054:
  2151                           
  2152                           ;LCD.c: 36:  Lcd_Port(a);
  2153  055C  0873               	movf	Lcd_Cmd@a,w
  2154  055D  120A  118A  2526  120A  118A  	fcall	_Lcd_Port
  2155  0562                     l1056:
  2156                           
  2157                           ;LCD.c: 37:  PORTEbits.RE2 = 1;
  2158  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0564  1509               	bsf	9,2	;volatile
  2161  0565                     l1058:
  2162                           
  2163                           ;LCD.c: 38:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2164  0565  300B               	movlw	11
  2165  0566  00F2               	movwf	??_Lcd_Cmd+1
  2166  0567  3062               	movlw	98
  2167  0568  00F1               	movwf	??_Lcd_Cmd
  2168  0569                     u377:
  2169  0569  0BF1               	decfsz	??_Lcd_Cmd,f
  2170  056A  2D69               	goto	u377
  2171  056B  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2172  056C  2D69               	goto	u377
  2173  056D  0000               	nop
  2174  056E                     l1060:
  2175                           
  2176                           ;LCD.c: 39:         PORTEbits.RE2 = 0;
  2177  056E  1283               	bcf	3,5	;RP0=0, select bank0
  2178  056F  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0570  1109               	bcf	9,2	;volatile
  2180  0571                     l142:
  2181  0571  0008               	return
  2182  0572                     __end_of_Lcd_Cmd:
  2183                           
  2184                           	psect	text13
  2185  0526                     __ptext13:	
  2186 ;; *************** function _Lcd_Port *****************
  2187 ;; Defined at:
  2188 ;;		line 29 in file "LCD.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  a               1    wreg     unsigned char 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  a               1    0[COMMON] unsigned char 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2202 ;;      Params:         0       0       0       0       0
  2203 ;;      Locals:         1       0       0       0       0
  2204 ;;      Temps:          0       0       0       0       0
  2205 ;;      Totals:         1       0       0       0       0
  2206 ;;Total ram usage:        1 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_Lcd_Init
  2212 ;;		_Lcd_Cmd
  2213 ;;		_Lcd_Write_Char
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           
  2218                           ;psect for function _Lcd_Port
  2219  0526                     _Lcd_Port:
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in _Lcd_Port: [wreg]
  2223                           ;Lcd_Port@a stored from wreg
  2224  0526  00F0               	movwf	Lcd_Port@a
  2225  0527                     l1038:
  2226                           
  2227                           ;LCD.c: 30:     PORTD = a;
  2228  0527  0870               	movf	Lcd_Port@a,w
  2229  0528  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0529  1303               	bcf	3,6	;RP1=0, select bank0
  2231  052A  0088               	movwf	8	;volatile
  2232  052B                     l139:
  2233  052B  0008               	return
  2234  052C                     __end_of_Lcd_Port:
  2235  007E                     btemp	set	126	;btemp
  2236  007E                     wtemp0	set	126
  2237                           
  2238                           	psect	config
  2239                           
  2240                           ;Config register CONFIG1 @ 0x2007
  2241                           ;	Oscillator Selection bits
  2242                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  2243                           ;	Watchdog Timer Enable bit
  2244                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2245                           ;	Power-up Timer Enable bit
  2246                           ;	PWRTE = OFF, PWRT disabled
  2247                           ;	RE3/MCLR pin function select bit
  2248                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2249                           ;	Code Protection bit
  2250                           ;	CP = OFF, Program memory code protection is disabled
  2251                           ;	Data Code Protection bit
  2252                           ;	CPD = OFF, Data memory code protection is disabled
  2253                           ;	Brown Out Reset Selection bits
  2254                           ;	BOREN = OFF, BOR disabled
  2255                           ;	Internal External Switchover bit
  2256                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2257                           ;	Fail-Safe Clock Monitor Enabled bit
  2258                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2259                           ;	Low Voltage Programming Enable bit
  2260                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2261                           ;	In-Circuit Debugger Mode bit
  2262                           ;	DEBUG = 0x1, unprogrammed default
  2263  2007                     	org	8199
  2264  2007  20D1               	dw	8401
  2265                           
  2266                           ;Config register CONFIG2 @ 0x2008
  2267                           ;	Brown-out Reset Selection bit
  2268                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2269                           ;	Flash Program Memory Self Write Enable bits
  2270                           ;	WRT = OFF, Write protection off
  2271  2008                     	org	8200
  2272  2008  3FFF               	dw	16383

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->___fltol
    _setup->_initOsc
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1560
                                             11 COMMON     3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
               _USART_Init_reception
            _USART_Init_transmission
                            ___fltol
                       _bin_to_float
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _bin_to_float                                         6     1      5       0
                                              0 COMMON     5     0      5
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) _USART_Init_transmission                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init_reception                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     233
                                              2 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       1     1      0      44
                                              1 COMMON     1     1      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     770
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _USART_Init_reception
   _USART_Init_transmission
   ___fltol
   _bin_to_float
   _setup
     _initOsc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 11:42:16 2021

                               _a 0032                                 _x 0030                                 pc 0002  
                              l89 0525                                l98 0594                                fsr 0004  
                             l104 054A                               l120 067D                               l121 0683  
                             l113 0659                               l122 0689                               l114 06B1  
                             l107 0531                               l123 06B2                               l115 065F  
                             l116 0665                               l117 066B                               l142 0571  
                             l118 0671                               l151 0656                               l119 0677  
                             l136 0604                               l160 05B9                               l145 0557  
                             l154 0539                               l139 052B                               l495 0717  
                             l488 072C                               l498 072C                               u210 05B9  
                             u211 05B8                               u300 071C                               u220 06BE  
                             u205 063C                               u301 071B                               u221 06BD  
                             u310 0721                               u230 06D5                               u311 0720  
                             u240 06EB                               u241 06EA                               u170 060B  
                             u250 06F2                               u171 060A                               u251 06F1  
                             u235 06D0                               u190 0634                               u270 0704  
                             u191 0633                               u271 0703                               u280 070B  
                             u185 0613                               u281 070A                               u265 06F4  
                             u337 07E8                               u347 05C4                               u357 05D3  
                             u367 05E2                               u295 070E                               u377 0569  
                             _VAL 002E                               fsr0 0004                               indf 0000  
                    ___fltol@exp1 007A                              l1100 052C                              l1102 054B  
                            l1110 0621                              l1120 064A                              l1112 0627  
                            l1104 0606                              l1040 0533                              l1200 07DC  
                            l1122 0650                              l1106 060B                              l1114 062E  
                            l1130 05AC                              l1042 0658                              l1202 07E2  
                            l1060 056E                              l1052 0559                              l1116 0634  
                            l1108 061C                              l1124 0596                              l1140 06DC  
                            l1132 06B3                              l1038 0527                              l1054 055C  
                            l1118 0645                              l1126 0599                              l1142 06DD  
                            l1134 06BE                              l1046 068F                              l1070 0581  
                            l1062 0572                              l1056 0562                              l1128 05A6  
                            l1144 06E5                              l1080 058A                              l1072 0584  
                            l1064 0578                              l1058 0565                              l1090 05C0  
                            l1162 070C                              l1154 06F3                              l1146 06E7  
                            l1138 06C7                              l1082 058B                              l1074 0585  
                            l1066 057C                              l1170 0732                              l1092 05C9  
                            l1164 071C                              l1148 06EB                              l1156 0705  
                            l1244 0697                              l1084 058E                              l1076 0586  
                            l1068 057D                              l1180 0761                              l1172 0737  
                            l1094 05D8                              l1166 0721                              l1086 0591  
                            l1078 0589                              l1190 0796                              l1182 0766  
                            l1174 073C                              l1096 05DE                              l1088 05BA  
                            l1192 079E                              l1184 0770                              l1176 0741  
                            l1168 072D                              l1098 0542                              l1194 07B3  
                            l1186 0780                              l1178 0751                              l1196 07BD  
                            l1188 0786                              l1198 07D2                              STR_1 0009  
                            STR_2 000D                              STR_3 0011                              _BRGH 04C2  
                            _CREN 00C4                              _SPEN 00C7                              _SREN 00C5  
                            _TXEN 04C5                              _SYNC 04C4                 ?_Lcd_Write_String 0070  
                            _main 072D                              btemp 007E                              start 0000  
              ??_Lcd_Write_String 0072                   __end_of_Lcd_Cmd 0572                     ___fltol@sign1 0079  
                           ?_main 0070     __size_of_USART_Init_reception 0006                   __end_of___fltol 072D  
                           _ANSEL 0188                             _PORTA 0005                             _PORTB 0006  
                           _PORTC 0007                             _PORTD 0008                             _PORTE 0009  
         __size_of_Lcd_Set_Cursor 0052                             _TRISA 0085                             _TRISB 0086  
                           _TRISC 0087                             _TRISD 0088                             _TRISE 0089  
            __end_of_bin_to_float 0526                   __end_of_initOsc 06B3                             _setup 0572  
                           pclath 000A                             status 0003                             wtemp0 007E  
                __end_of_Lcd_Init 0605                  __end_of_Lcd_Port 052C                   __initialization 07F3  
                    __end_of_main 07F3                            ??_main 007B                __size_of_Lcd_Clear 000D  
                          _ADCON1 009F                            _ADRESH 001E                            _ADRESL 009E  
                     initOsc@IRCF 0072                            ?_setup 0070                            _ANSELH 0189  
                          _INTCON 000B                         ??_Lcd_Cmd 0071                            _S1_val 0024  
                          _S2_val 0020           __size_of_Lcd_Write_Char 0008                         ??___fltol 0074  
                       ??_initOsc 0070                   Lcd_Set_Cursor@a 0077                   Lcd_Set_Cursor@b 0074  
                 Lcd_Set_Cursor@y 0079                   Lcd_Set_Cursor@z 0078           __end_of__initialization 07FC  
               __end_of_Lcd_Clear 0558          ?_USART_Init_transmission 0070                        ___fltol@f1 0070  
                  __pcstackCOMMON 0070                     __end_of_setup 0595             __size_of_bin_to_float 0001  
                  _Lcd_Set_Cursor 0605                         ?_Lcd_Init 0070                         ?_Lcd_Port 0070  
                         ??_setup 0073                        __pbssBANK0 0020                      _bin_to_float 0525  
                      __pmaintext 072D         __size_of_Lcd_Write_String 0025            __end_of_Lcd_Set_Cursor 0657  
                         _S3_cont 0038                        ??_Lcd_Init 0074                        ??_Lcd_Port 0070  
                      __stringtab 0003   __end_of_USART_Init_transmission 054B      __end_of_USART_Init_reception 0532  
                  _Lcd_Write_Char 0532                           _Lcd_Cmd 0558                           ___fltol 06B3  
                 ?_Lcd_Set_Cursor 0074                           __ptext1 0572                           __ptext2 0657  
                         __ptext3 0525                           __ptext4 06B3                           __ptext5 0542  
                         __ptext6 052C                           __ptext7 0595                           __ptext8 0532  
                         __ptext9 0605                           _initOsc 0657               bin_to_float@ADC_VAL 0070  
                         clrloop0 053B            __end_of_Lcd_Write_Char 053A              end_of_initialization 07FC  
                       Lcd_Port@a 0070                         _PORTEbits 0009                   ?_Lcd_Write_Char 0070  
               Lcd_Write_String@a 0074                 Lcd_Write_String@i 0072                         _Lcd_Clear 054B  
                     _ADC_VALOR_1 0036                       _ADC_VALOR_2 0034                  _Lcd_Write_String 0595  
__size_of_USART_Init_transmission 0009              _USART_Init_reception 052C               start_initialization 07F3  
               __size_of_Lcd_Init 004B                 __size_of_Lcd_Port 0006                        ?_Lcd_Clear 0070  
                 Lcd_Write_Char@a 0071             ?_USART_Init_reception 0070                         ___latbits 0002  
                        ?_Lcd_Cmd 0070                  ??_Lcd_Set_Cursor 0075                          ?___fltol 0070  
                       __pstrings 0003                          ?_initOsc 0070                    __size_of_setup 0023  
                       clear_ram0 053A                          _PIE1bits 008C                          Lcd_Cmd@a 0073  
                        _PIR1bits 000C                       ??_Lcd_Clear 0074                          _VAL_SWAP 002C  
          ??_USART_Init_reception 0070           _USART_Init_transmission 0542                        _ADCON0bits 001F  
                     __stringbase 0008                  ??_Lcd_Write_Char 0071                          _Lcd_Init 05BA  
                        _Lcd_Port 0526          __end_of_Lcd_Write_String 05BA                  __size_of_Lcd_Cmd 001A  
                __size_of___fltol 007A                __end_of__stringtab 0009                  __size_of_initOsc 005C  
                        __ptext10 05BA                          __ptext11 054B                          __ptext12 0558  
                        __ptext13 0526                     __size_of_main 00C6                     ?_bin_to_float 0070  
       ??_USART_Init_transmission 0070                       _VAL_NIBBLE1 002A                       _VAL_NIBBLE2 0028  
                  ??_bin_to_float 0075                         stringcode 0003                        _OSCCONbits 008F  
              Lcd_Set_Cursor@temp 007A                          stringdir 0003                          stringtab 0003  
