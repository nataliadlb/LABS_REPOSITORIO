

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 14:57:18 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008F                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  0105                     	;# 
   141  0107                     	;# 
   142  0108                     	;# 
   143  0109                     	;# 
   144  010C                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  0185                     	;# 
   150  0187                     	;# 
   151  0188                     	;# 
   152  0189                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  000E                     	;# 
   171  000F                     	;# 
   172  0010                     	;# 
   173  0011                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0015                     	;# 
   178  0015                     	;# 
   179  0016                     	;# 
   180  0017                     	;# 
   181  0018                     	;# 
   182  0019                     	;# 
   183  001A                     	;# 
   184  001B                     	;# 
   185  001B                     	;# 
   186  001C                     	;# 
   187  001D                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  0081                     	;# 
   191  0085                     	;# 
   192  0086                     	;# 
   193  0087                     	;# 
   194  0088                     	;# 
   195  0089                     	;# 
   196  008C                     	;# 
   197  008D                     	;# 
   198  008E                     	;# 
   199  008F                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0094                     	;# 
   207  0095                     	;# 
   208  0096                     	;# 
   209  0097                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0105                     	;# 
   219  0107                     	;# 
   220  0108                     	;# 
   221  0109                     	;# 
   222  010C                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  0185                     	;# 
   228  0187                     	;# 
   229  0188                     	;# 
   230  0189                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0088                     	;# 
   273  0089                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  008E                     	;# 
   277  008F                     	;# 
   278  0090                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009C                     	;# 
   293  009D                     	;# 
   294  009E                     	;# 
   295  009F                     	;# 
   296  0105                     	;# 
   297  0107                     	;# 
   298  0108                     	;# 
   299  0109                     	;# 
   300  010C                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  0185                     	;# 
   306  0187                     	;# 
   307  0188                     	;# 
   308  0189                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  0000                     	;# 
   312  0001                     	;# 
   313  0002                     	;# 
   314  0003                     	;# 
   315  0004                     	;# 
   316  0005                     	;# 
   317  0006                     	;# 
   318  0007                     	;# 
   319  0008                     	;# 
   320  0009                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000D                     	;# 
   325  000E                     	;# 
   326  000E                     	;# 
   327  000F                     	;# 
   328  0010                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0014                     	;# 
   333  0015                     	;# 
   334  0015                     	;# 
   335  0016                     	;# 
   336  0017                     	;# 
   337  0018                     	;# 
   338  0019                     	;# 
   339  001A                     	;# 
   340  001B                     	;# 
   341  001B                     	;# 
   342  001C                     	;# 
   343  001D                     	;# 
   344  001E                     	;# 
   345  001F                     	;# 
   346  0081                     	;# 
   347  0085                     	;# 
   348  0086                     	;# 
   349  0087                     	;# 
   350  0088                     	;# 
   351  0089                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  008F                     	;# 
   356  0090                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0094                     	;# 
   363  0095                     	;# 
   364  0096                     	;# 
   365  0097                     	;# 
   366  0098                     	;# 
   367  0099                     	;# 
   368  009A                     	;# 
   369  009B                     	;# 
   370  009C                     	;# 
   371  009D                     	;# 
   372  009E                     	;# 
   373  009F                     	;# 
   374  0105                     	;# 
   375  0107                     	;# 
   376  0108                     	;# 
   377  0109                     	;# 
   378  010C                     	;# 
   379  010C                     	;# 
   380  010D                     	;# 
   381  010E                     	;# 
   382  010F                     	;# 
   383  0185                     	;# 
   384  0187                     	;# 
   385  0188                     	;# 
   386  0189                     	;# 
   387  018C                     	;# 
   388  018D                     	;# 
   389  0000                     	;# 
   390  0001                     	;# 
   391  0002                     	;# 
   392  0003                     	;# 
   393  0004                     	;# 
   394  0005                     	;# 
   395  0006                     	;# 
   396  0007                     	;# 
   397  0008                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  000E                     	;# 
   404  000E                     	;# 
   405  000F                     	;# 
   406  0010                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0014                     	;# 
   411  0015                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0017                     	;# 
   415  0018                     	;# 
   416  0019                     	;# 
   417  001A                     	;# 
   418  001B                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001D                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  0081                     	;# 
   425  0085                     	;# 
   426  0086                     	;# 
   427  0087                     	;# 
   428  0088                     	;# 
   429  0089                     	;# 
   430  008C                     	;# 
   431  008D                     	;# 
   432  008E                     	;# 
   433  008F                     	;# 
   434  0090                     	;# 
   435  0091                     	;# 
   436  0092                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0094                     	;# 
   441  0095                     	;# 
   442  0096                     	;# 
   443  0097                     	;# 
   444  0098                     	;# 
   445  0099                     	;# 
   446  009A                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  009F                     	;# 
   452  0105                     	;# 
   453  0107                     	;# 
   454  0108                     	;# 
   455  0109                     	;# 
   456  010C                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  010F                     	;# 
   461  0185                     	;# 
   462  0187                     	;# 
   463  0188                     	;# 
   464  0189                     	;# 
   465  018C                     	;# 
   466  018D                     	;# 
   467  0000                     	;# 
   468  0001                     	;# 
   469  0002                     	;# 
   470  0003                     	;# 
   471  0004                     	;# 
   472  0005                     	;# 
   473  0006                     	;# 
   474  0007                     	;# 
   475  0008                     	;# 
   476  0009                     	;# 
   477  000A                     	;# 
   478  000B                     	;# 
   479  000C                     	;# 
   480  000D                     	;# 
   481  000E                     	;# 
   482  000E                     	;# 
   483  000F                     	;# 
   484  0010                     	;# 
   485  0011                     	;# 
   486  0012                     	;# 
   487  0013                     	;# 
   488  0014                     	;# 
   489  0015                     	;# 
   490  0015                     	;# 
   491  0016                     	;# 
   492  0017                     	;# 
   493  0018                     	;# 
   494  0019                     	;# 
   495  001A                     	;# 
   496  001B                     	;# 
   497  001B                     	;# 
   498  001C                     	;# 
   499  001D                     	;# 
   500  001E                     	;# 
   501  001F                     	;# 
   502  0081                     	;# 
   503  0085                     	;# 
   504  0086                     	;# 
   505  0087                     	;# 
   506  0088                     	;# 
   507  0089                     	;# 
   508  008C                     	;# 
   509  008D                     	;# 
   510  008E                     	;# 
   511  008F                     	;# 
   512  0090                     	;# 
   513  0091                     	;# 
   514  0092                     	;# 
   515  0093                     	;# 
   516  0093                     	;# 
   517  0093                     	;# 
   518  0094                     	;# 
   519  0095                     	;# 
   520  0096                     	;# 
   521  0097                     	;# 
   522  0098                     	;# 
   523  0099                     	;# 
   524  009A                     	;# 
   525  009B                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  009F                     	;# 
   530  0105                     	;# 
   531  0107                     	;# 
   532  0108                     	;# 
   533  0109                     	;# 
   534  010C                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  0185                     	;# 
   540  0187                     	;# 
   541  0188                     	;# 
   542  0189                     	;# 
   543  018C                     	;# 
   544  018D                     	;# 
   545                           
   546                           	psect	idataBANK0
   547  0FE2                     __pidataBANK0:
   548                           
   549                           ;initializer for _Date
   550  0FE2  3444               	retlw	68
   551  0FE3  3441               	retlw	65
   552  0FE4  3454               	retlw	84
   553  0FE5  3445               	retlw	69
   554  0FE6  343A               	retlw	58
   555  0FE7  3420               	retlw	32
   556  0FE8  3430               	retlw	48
   557  0FE9  3430               	retlw	48
   558  0FEA  342F               	retlw	47
   559  0FEB  3430               	retlw	48
   560  0FEC  3430               	retlw	48
   561  0FED  342F               	retlw	47
   562  0FEE  3430               	retlw	48
   563  0FEF  3430               	retlw	48
   564  0FF0  3400               	retlw	0
   565                           
   566                           ;initializer for _Time
   567  0FF1  3454               	retlw	84
   568  0FF2  3449               	retlw	73
   569  0FF3  344D               	retlw	77
   570  0FF4  3445               	retlw	69
   571  0FF5  343A               	retlw	58
   572  0FF6  3420               	retlw	32
   573  0FF7  3430               	retlw	48
   574  0FF8  3430               	retlw	48
   575  0FF9  343A               	retlw	58
   576  0FFA  3430               	retlw	48
   577  0FFB  3430               	retlw	48
   578  0FFC  343A               	retlw	58
   579  0FFD  3430               	retlw	48
   580  0FFE  3430               	retlw	48
   581  0FFF  3400               	retlw	0
   582                           
   583                           	psect	strings
   584  0003                     __pstrings:
   585  0003                     stringtab:
   586  0003                     __stringtab:
   587                           
   588                           ;	String table - string pointers are 1 byte each
   589  0003  1BFF               	btfsc	btemp+1,7
   590  0004  280D               	ljmp	stringcode
   591  0005  1383               	bcf	3,7
   592  0006  187F               	btfsc	btemp+1,0
   593  0007  1783               	bsf	3,7
   594  0008  0800               	movf	0,w
   595  0009  0A84               	incf	4,f
   596  000A  1903               	skipnz
   597  000B  0AFF               	incf	btemp+1,f
   598  000C  0008               	return
   599  000D                     stringcode:
   600  000D                     stringdir:
   601  000D  3000               	movlw	high stringdir
   602  000E  008A               	movwf	10
   603  000F  0804               	movf	4,w
   604  0010  0A84               	incf	4,f
   605  0011  0782               	addwf	2,f
   606  0012                     __stringbase:
   607  0012  3400               	retlw	0
   608  0013                     __end_of__stringtab:
   609  0013                     _dpowers:
   610  0013  3401               	retlw	1
   611  0014  3400               	retlw	0
   612  0015  340A               	retlw	10
   613  0016  3400               	retlw	0
   614  0017  3464               	retlw	100
   615  0018  3400               	retlw	0
   616  0019  34E8               	retlw	232
   617  001A  3403               	retlw	3
   618  001B  3410               	retlw	16
   619  001C  3427               	retlw	39
   620  001D                     __end_of_dpowers:
   621  0013                     _SSPBUF	set	19
   622  0014                     _SSPCON	set	20
   623  0019                     _TXREG	set	25
   624  000B                     _INTCONbits	set	11
   625  001A                     _RCREG	set	26
   626  0018                     _RCSTAbits	set	24
   627  0009                     _PORTEbits	set	9
   628  0009                     _PORTE	set	9
   629  0008                     _PORTD	set	8
   630  0007                     _PORTC	set	7
   631  0006                     _PORTB	set	6
   632  0005                     _PORTAbits	set	5
   633  0008                     _PORTDbits	set	8
   634  0005                     _PORTA	set	5
   635  0063                     _SSPIF	set	99
   636  005E                     _PEIE	set	94
   637  005F                     _GIE	set	95
   638  0065                     _RCIF	set	101
   639  0091                     _SSPCON2bits	set	145
   640  0094                     _SSPSTAT	set	148
   641  0093                     _SSPADD	set	147
   642  0091                     _SSPCON2	set	145
   643  008C                     _PIE1bits	set	140
   644  0099                     _SPBRG	set	153
   645  009A                     _SPBRGH	set	154
   646  0098                     _TXSTAbits	set	152
   647  008F                     _OSCCONbits	set	143
   648  0089                     _TRISE	set	137
   649  0087                     _TRISCbits	set	135
   650  0086                     _TRISB	set	134
   651  0085                     _TRISA	set	133
   652  0088                     _TRISD	set	136
   653  0463                     _SSPIE	set	1123
   654  043C                     _TRISC4	set	1084
   655  043B                     _TRISC3	set	1083
   656  04C1                     _TRMT	set	1217
   657  0189                     _ANSELH	set	393
   658  0188                     _ANSEL	set	392
   659  001D                     STR_3:
   660  001D  3425               	retlw	37	;'%'
   661  001E  3430               	retlw	48	;'0'
   662  001F  3432               	retlw	50	;'2'
   663  0020  3464               	retlw	100	;'d'
   664  0021  3400               	retlw	0
   665  0022                     STR_7:
   666  0022  3425               	retlw	37	;'%'
   667  0023  3432               	retlw	50	;'2'
   668  0024  3464               	retlw	100	;'d'
   669  0025  3400               	retlw	0
   670  0026                     STR_1:
   671  0026  3420               	retlw	32	;' '
   672  0027  3420               	retlw	32	;' '
   673  0028  3400               	retlw	0
   674  0029                     STR_2:
   675  0029  3425               	retlw	37	;'%'
   676  002A  3464               	retlw	100	;'d'
   677  002B  3400               	retlw	0
   678  001D                     
   679                           	psect	cinit
   680  07DE                     start_initialization:	
   681                           ; #config settings
   682                           
   683  07DE                     __initialization:
   684                           
   685                           ; Initialize objects allocated to BANK0
   686  07DE  1383               	bcf	3,7	;select IRP bank0
   687  07DF  303E               	movlw	low (__pdataBANK0+30)
   688  07E0  00FD               	movwf	btemp+-1
   689  07E1  300F               	movlw	high __pidataBANK0
   690  07E2  00FE               	movwf	btemp
   691  07E3  30E2               	movlw	low __pidataBANK0
   692  07E4  00FF               	movwf	btemp+1
   693  07E5  3020               	movlw	low __pdataBANK0
   694  07E6  0084               	movwf	4
   695  07E7  120A  158A  27A6  120A  118A  	fcall	init_ram0
   696                           
   697                           ; Clear objects allocated to BANK1
   698  07EC  30A0               	movlw	low __pbssBANK1
   699  07ED  0084               	movwf	4
   700  07EE  30DC               	movlw	low (__pbssBANK1+60)
   701  07EF  120A  158A  2747  120A  118A  	fcall	clear_ram0
   702                           
   703                           ; Clear objects allocated to BANK0
   704  07F4  303E               	movlw	low __pbssBANK0
   705  07F5  0084               	movwf	4
   706  07F6  3058               	movlw	low (__pbssBANK0+26)
   707  07F7  120A  158A  2747  120A  118A  	fcall	clear_ram0
   708  07FC                     end_of_initialization:	
   709                           ;End of C runtime variable initialization code
   710                           
   711  07FC                     __end_of__initialization:
   712  07FC  0183               	clrf	3
   713  07FD  120A  118A  2B65   	ljmp	_main	;jump to C main() function
   714                           
   715                           	psect	bssBANK0
   716  003E                     __pbssBANK0:
   717  003E                     _data_recive:
   718  003E                     	ds	2
   719  0040                     _cont:
   720  0040                     	ds	1
   721  0041                     _year:
   722  0041                     	ds	1
   723  0042                     _month:
   724  0042                     	ds	1
   725  0043                     _m_day:
   726  0043                     	ds	1
   727  0044                     _hour:
   728  0044                     	ds	1
   729  0045                     _minute:
   730  0045                     	ds	1
   731  0046                     _second:
   732  0046                     	ds	1
   733  0047                     _i:
   734  0047                     	ds	1
   735  0048                     _min_send:
   736  0048                     	ds	8
   737  0050                     _sec_send:
   738  0050                     	ds	8
   739                           
   740                           	psect	dataBANK0
   741  0020                     __pdataBANK0:
   742  0020                     _Date:
   743  0020                     	ds	15
   744  002F                     _Time:
   745  002F                     	ds	15
   746                           
   747                           	psect	bssBANK1
   748  00A0                     __pbssBANK1:
   749  00A0                     _data_total:
   750  00A0                     	ds	20
   751  00B4                     _cont_send:
   752  00B4                     	ds	8
   753  00BC                     _year_send:
   754  00BC                     	ds	8
   755  00C4                     _month_send:
   756  00C4                     	ds	8
   757  00CC                     _day_send:
   758  00CC                     	ds	8
   759  00D4                     _hour_send:
   760  00D4                     	ds	8
   761                           
   762                           	psect	inittext
   763  0FA2                     init_fetch0:	
   764                           ;	Called with low address in FSR and high address in W
   765                           
   766  0FA2  087E               	movf	btemp,w
   767  0FA3  008A               	movwf	10
   768  0FA4  087F               	movf	btemp+1,w
   769  0FA5  0082               	movwf	2
   770  0FA6                     init_ram0:	
   771                           ;Called with:
   772                           ;	high address of idata address in btemp 
   773                           ;	low address of idata address in btemp+1 
   774                           ;	low address of data in FSR
   775                           ;	high address + 1 of data in btemp-1
   776                           
   777  0FA6  120A  158A  27A2  120A  158A  	fcall	init_fetch0
   778  0FAB  0080               	movwf	0
   779  0FAC  0A84               	incf	4,f
   780  0FAD  0804               	movf	4,w
   781  0FAE  067D               	xorwf	btemp+-1,w
   782  0FAF  1903               	btfsc	3,2
   783  0FB0  3400               	retlw	0
   784  0FB1  0AFF               	incf	btemp+1,f
   785  0FB2  1903               	btfsc	3,2
   786  0FB3  0AFE               	incf	btemp,f
   787  0FB4  2FA6               	goto	init_ram0
   788                           
   789                           	psect	clrtext
   790  0F47                     clear_ram0:	
   791                           ;	Called with FSR containing the base address, and
   792                           ;	W with the last address+1
   793                           
   794  0F47  0064               	clrwdt	;clear the watchdog before getting into this loop
   795  0F48                     clrloop0:
   796  0F48  0180               	clrf	0	;clear RAM location pointed to by FSR
   797  0F49  0A84               	incf	4,f	;increment pointer
   798  0F4A  0604               	xorwf	4,w	;XOR with final address
   799  0F4B  1903               	btfsc	3,2	;have we reached the end yet?
   800  0F4C  3400               	retlw	0	;all done for this memory range, return
   801  0F4D  0604               	xorwf	4,w	;XOR again to restore value
   802  0F4E  2F48               	goto	clrloop0	;do the next byte
   803                           
   804                           	psect	cstackCOMMON
   805  0070                     __pcstackCOMMON:
   806  0070                     ?_isdigit:
   807  0070                     ?_setup:	
   808                           ; 1 bit 
   809                           
   810  0070                     ?_Write_to_RTC:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?_I2C_Master_Start:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ??_I2C_Master_Start:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ?_I2C_Master_Write:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ?_I2C_Master_RepeatedStart:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ??_I2C_Master_RepeatedStart:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_I2C_Master_Stop:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ??_I2C_Master_Stop:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ?_RTC_display:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_Led_RTC:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ??_Led_RTC:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_Write_USART:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ??_Write_USART:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ?_USART_Init_BaudRate:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ??_USART_Init_BaudRate:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_USART_Init:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ??_USART_Init:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     ??_isdigit:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     ?_main:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     ?_bcd_to_decimal:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?_I2C_Master_Wait:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ??_I2C_Master_Wait:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ?___bmul:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ?_I2C_Master_Read:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0070                     ?___wmul:	
   883                           ; 2 bytes @ 0x0
   884                           
   885  0070                     ?___awdiv:	
   886                           ; 2 bytes @ 0x0
   887                           
   888  0070                     ?___awmod:	
   889                           ; 2 bytes @ 0x0
   890                           
   891  0070                     ?___lwdiv:	
   892                           ; 2 bytes @ 0x0
   893                           
   894  0070                     ?___lldiv:	
   895                           ; 2 bytes @ 0x0
   896                           
   897  0070                     Write_USART@a:	
   898                           ; 4 bytes @ 0x0
   899                           
   900  0070                     ___bmul@multiplicand:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0070                     _isdigit$1032:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     I2C_Master_Write@d:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     I2C_Master_Read@a:	
   910                           ; 2 bytes @ 0x0
   911                           
   912  0070                     ___wmul@multiplier:	
   913                           ; 2 bytes @ 0x0
   914                           
   915  0070                     ___awdiv@divisor:	
   916                           ; 2 bytes @ 0x0
   917                           
   918  0070                     ___awmod@divisor:	
   919                           ; 2 bytes @ 0x0
   920                           
   921  0070                     ___lwdiv@divisor:	
   922                           ; 2 bytes @ 0x0
   923                           
   924  0070                     ___lldiv@divisor:	
   925                           ; 2 bytes @ 0x0
   926                           
   927                           
   928                           ; 4 bytes @ 0x0
   929  0070                     	ds	1
   930  0071                     ?_Write_USART_String:
   931  0071                     ??___bmul:	
   932                           ; 1 bytes @ 0x1
   933                           
   934  0071                     isdigit@c:	
   935                           ; 1 bytes @ 0x1
   936                           
   937  0071                     Write_USART_String@a:	
   938                           ; 1 bytes @ 0x1
   939                           
   940                           
   941                           ; 2 bytes @ 0x1
   942  0071                     	ds	1
   943  0072                     ??_Write_to_RTC:
   944  0072                     ??_I2C_Master_Write:	
   945                           ; 1 bytes @ 0x2
   946                           
   947  0072                     ??_I2C_Master_Read:	
   948                           ; 1 bytes @ 0x2
   949                           
   950  0072                     ___bmul@product:	
   951                           ; 1 bytes @ 0x2
   952                           
   953  0072                     ___wmul@multiplicand:	
   954                           ; 1 bytes @ 0x2
   955                           
   956  0072                     ___awdiv@dividend:	
   957                           ; 2 bytes @ 0x2
   958                           
   959  0072                     ___awmod@dividend:	
   960                           ; 2 bytes @ 0x2
   961                           
   962  0072                     ___lwdiv@dividend:	
   963                           ; 2 bytes @ 0x2
   964                           
   965                           
   966                           ; 2 bytes @ 0x2
   967  0072                     	ds	1
   968  0073                     ??_Write_USART_String:
   969  0073                     ___bmul@multiplier:	
   970                           ; 1 bytes @ 0x3
   971                           
   972                           
   973                           ; 1 bytes @ 0x3
   974  0073                     	ds	1
   975  0074                     ??_bcd_to_decimal:
   976  0074                     ??___wmul:	
   977                           ; 1 bytes @ 0x4
   978                           
   979  0074                     ??___awdiv:	
   980                           ; 1 bytes @ 0x4
   981                           
   982  0074                     ??___awmod:	
   983                           ; 1 bytes @ 0x4
   984                           
   985  0074                     ??___lwdiv:	
   986                           ; 1 bytes @ 0x4
   987                           
   988  0074                     Write_USART_String@i:	
   989                           ; 1 bytes @ 0x4
   990                           
   991  0074                     I2C_Master_Read@temp:	
   992                           ; 1 bytes @ 0x4
   993                           
   994  0074                     ___wmul@product:	
   995                           ; 2 bytes @ 0x4
   996                           
   997  0074                     ___lldiv@dividend:	
   998                           ; 2 bytes @ 0x4
   999                           
  1000                           
  1001                           ; 4 bytes @ 0x4
  1002  0074                     	ds	1
  1003  0075                     ___awdiv@counter:
  1004  0075                     ___awmod@counter:	
  1005                           ; 1 bytes @ 0x5
  1006                           
  1007  0075                     ___lwdiv@quotient:	
  1008                           ; 1 bytes @ 0x5
  1009                           
  1010                           
  1011                           ; 2 bytes @ 0x5
  1012  0075                     	ds	1
  1013  0076                     ___awdiv@sign:
  1014  0076                     ___awmod@sign:	
  1015                           ; 1 bytes @ 0x6
  1016                           
  1017                           
  1018                           ; 1 bytes @ 0x6
  1019  0076                     	ds	1
  1020  0077                     bcd_to_decimal@number:
  1021  0077                     ___lwdiv@counter:	
  1022                           ; 1 bytes @ 0x7
  1023                           
  1024  0077                     ___awdiv@quotient:	
  1025                           ; 1 bytes @ 0x7
  1026                           
  1027                           
  1028                           ; 2 bytes @ 0x7
  1029  0077                     	ds	1
  1030  0078                     ??___lldiv:
  1031  0078                     ?___lwmod:	
  1032                           ; 1 bytes @ 0x8
  1033                           
  1034  0078                     ___lwmod@divisor:	
  1035                           ; 2 bytes @ 0x8
  1036                           
  1037                           
  1038                           ; 2 bytes @ 0x8
  1039  0078                     	ds	1
  1040  0079                     ___lldiv@quotient:
  1041                           
  1042                           ; 4 bytes @ 0x9
  1043  0079                     	ds	1
  1044  007A                     ___lwmod@dividend:
  1045                           
  1046                           ; 2 bytes @ 0xA
  1047  007A                     	ds	2
  1048  007C                     ??___lwmod:
  1049                           
  1050                           ; 1 bytes @ 0xC
  1051  007C                     	ds	1
  1052  007D                     ___lldiv@counter:
  1053  007D                     ___lwmod@counter:	
  1054                           ; 1 bytes @ 0xD
  1055                           
  1056                           
  1057                           ; 1 bytes @ 0xD
  1058  007D                     	ds	1
  1059  007E                     ??_setup:
  1060                           
  1061                           	psect	cstackBANK0
  1062  0058                     __pcstackBANK0:	
  1063                           ; 1 bytes @ 0xE
  1064                           
  1065  0058                     ?_I2C_Master_Init:
  1066  0058                     ?_sprintf:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069  0058                     sprintf@f:	
  1070                           ; 2 bytes @ 0x0
  1071                           
  1072  0058                     I2C_Master_Init@c:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075                           
  1076                           ; 4 bytes @ 0x0
  1077  0058                     	ds	3
  1078  005B                     ??_sprintf:
  1079                           
  1080                           ; 1 bytes @ 0x3
  1081  005B                     	ds	1
  1082  005C                     ??_I2C_Master_Init:
  1083                           
  1084                           ; 1 bytes @ 0x4
  1085  005C                     	ds	2
  1086  005E                     sprintf@ap:
  1087                           
  1088                           ; 1 bytes @ 0x6
  1089  005E                     	ds	1
  1090  005F                     sprintf@prec:
  1091                           
  1092                           ; 1 bytes @ 0x7
  1093  005F                     	ds	1
  1094  0060                     sprintf@val:
  1095                           
  1096                           ; 2 bytes @ 0x8
  1097  0060                     	ds	2
  1098  0062                     sprintf@flag:
  1099                           
  1100                           ; 1 bytes @ 0xA
  1101  0062                     	ds	1
  1102  0063                     sprintf@width:
  1103                           
  1104                           ; 2 bytes @ 0xB
  1105  0063                     	ds	2
  1106  0065                     sprintf@c:
  1107                           
  1108                           ; 1 bytes @ 0xD
  1109  0065                     	ds	1
  1110  0066                     sprintf@sp:
  1111                           
  1112                           ; 1 bytes @ 0xE
  1113  0066                     	ds	1
  1114  0067                     ??_RTC_display:
  1115                           
  1116                           ; 1 bytes @ 0xF
  1117  0067                     	ds	3
  1118  006A                     ??_main:
  1119                           
  1120                           ; 1 bytes @ 0x12
  1121  006A                     	ds	3
  1122                           
  1123                           	psect	maintext
  1124  0365                     __pmaintext:	
  1125 ;;
  1126 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1127 ;;
  1128 ;; *************** function _main *****************
  1129 ;; Defined at:
  1130 ;;		line 122 in file "main_mini2.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : B00/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         0       0       0       0       0
  1145 ;;      Locals:         0       0       0       0       0
  1146 ;;      Temps:          0       3       0       0       0
  1147 ;;      Totals:         0       3       0       0       0
  1148 ;;Total ram usage:        3 bytes
  1149 ;; Hardware stack levels required when called:    3
  1150 ;; This function calls:
  1151 ;;		_I2C_Master_Read
  1152 ;;		_I2C_Master_RepeatedStart
  1153 ;;		_I2C_Master_Start
  1154 ;;		_I2C_Master_Stop
  1155 ;;		_I2C_Master_Write
  1156 ;;		_Led_RTC
  1157 ;;		_RTC_display
  1158 ;;		_Write_USART
  1159 ;;		_Write_USART_String
  1160 ;;		_Write_to_RTC
  1161 ;;		_setup
  1162 ;; This function is called by:
  1163 ;;		Startup code after reset
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           
  1168                           ;psect for function _main
  1169  0365                     _main:
  1170  0365                     l2013:	
  1171                           ;incstack = 0
  1172                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1173                           
  1174                           
  1175                           ;main_mini2.c: 123:     setup();
  1176  0365  120A  118A  2085  120A  118A  	fcall	_setup
  1177  036A                     l2015:
  1178                           
  1179                           ;main_mini2.c: 124:     TRISD = 0x00;
  1180  036A  1683               	bsf	3,5	;RP0=1, select bank1
  1181  036B  1303               	bcf	3,6	;RP1=0, select bank1
  1182  036C  0188               	clrf	8	;volatile
  1183  036D                     l2017:
  1184                           
  1185                           ;main_mini2.c: 125:     PORTA = 0;
  1186  036D  1283               	bcf	3,5	;RP0=0, select bank0
  1187  036E  1303               	bcf	3,6	;RP1=0, select bank0
  1188  036F  0185               	clrf	5	;volatile
  1189                           
  1190                           ;main_mini2.c: 126:     Write_to_RTC();
  1191  0370  120A  118A  223E  120A  118A  	fcall	_Write_to_RTC
  1192  0375                     l103:	
  1193                           ;main_mini2.c: 129:     while (1) {
  1194                           
  1195                           
  1196                           ;main_mini2.c: 132:         I2C_Master_Start();
  1197  0375  120A  158A  2758  120A  118A  	fcall	_I2C_Master_Start
  1198                           
  1199                           ;main_mini2.c: 133:         I2C_Master_Write(0xD0);
  1200  037A  30D0               	movlw	208
  1201  037B  00F0               	movwf	I2C_Master_Write@d
  1202  037C  3000               	movlw	0
  1203  037D  00F1               	movwf	I2C_Master_Write@d+1
  1204  037E  120A  158A  2761  120A  118A  	fcall	_I2C_Master_Write
  1205                           
  1206                           ;main_mini2.c: 134:         I2C_Master_Write(0);
  1207  0383  3000               	movlw	0
  1208  0384  00F0               	movwf	I2C_Master_Write@d
  1209  0385  00F1               	movwf	I2C_Master_Write@d+1
  1210  0386  120A  158A  2761  120A  118A  	fcall	_I2C_Master_Write
  1211                           
  1212                           ;main_mini2.c: 135:         I2C_Master_RepeatedStart();
  1213  038B  120A  158A  274F  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1214                           
  1215                           ;main_mini2.c: 136:         I2C_Master_Write(0xD1);
  1216  0390  30D1               	movlw	209
  1217  0391  00F0               	movwf	I2C_Master_Write@d
  1218  0392  3000               	movlw	0
  1219  0393  00F1               	movwf	I2C_Master_Write@d+1
  1220  0394  120A  158A  2761  120A  118A  	fcall	_I2C_Master_Write
  1221                           
  1222                           ;main_mini2.c: 137:         second = I2C_Master_Read(1);
  1223  0399  3001               	movlw	1
  1224  039A  00F0               	movwf	I2C_Master_Read@a
  1225  039B  3000               	movlw	0
  1226  039C  00F1               	movwf	I2C_Master_Read@a+1
  1227  039D  120A  118A  20B0  120A  118A  	fcall	_I2C_Master_Read
  1228  03A2  0870               	movf	?_I2C_Master_Read,w
  1229  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1230  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1231  03A5  00EA               	movwf	??_main
  1232  03A6  086A               	movf	??_main,w
  1233  03A7  00C6               	movwf	_second
  1234                           
  1235                           ;main_mini2.c: 138:         minute = I2C_Master_Read(1);
  1236  03A8  3001               	movlw	1
  1237  03A9  00F0               	movwf	I2C_Master_Read@a
  1238  03AA  3000               	movlw	0
  1239  03AB  00F1               	movwf	I2C_Master_Read@a+1
  1240  03AC  120A  118A  20B0  120A  118A  	fcall	_I2C_Master_Read
  1241  03B1  0870               	movf	?_I2C_Master_Read,w
  1242  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  1243  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  1244  03B4  00EA               	movwf	??_main
  1245  03B5  086A               	movf	??_main,w
  1246  03B6  00C5               	movwf	_minute
  1247                           
  1248                           ;main_mini2.c: 139:         hour = I2C_Master_Read(1);
  1249  03B7  3001               	movlw	1
  1250  03B8  00F0               	movwf	I2C_Master_Read@a
  1251  03B9  3000               	movlw	0
  1252  03BA  00F1               	movwf	I2C_Master_Read@a+1
  1253  03BB  120A  118A  20B0  120A  118A  	fcall	_I2C_Master_Read
  1254  03C0  0870               	movf	?_I2C_Master_Read,w
  1255  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  1256  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  1257  03C3  00EA               	movwf	??_main
  1258  03C4  086A               	movf	??_main,w
  1259  03C5  00C4               	movwf	_hour
  1260                           
  1261                           ;main_mini2.c: 140:         I2C_Master_Read(1);
  1262  03C6  3001               	movlw	1
  1263  03C7  00F0               	movwf	I2C_Master_Read@a
  1264  03C8  3000               	movlw	0
  1265  03C9  00F1               	movwf	I2C_Master_Read@a+1
  1266  03CA  120A  118A  20B0  120A  118A  	fcall	_I2C_Master_Read
  1267                           
  1268                           ;main_mini2.c: 141:         m_day = I2C_Master_Read(1);
  1269  03CF  3001               	movlw	1
  1270  03D0  00F0               	movwf	I2C_Master_Read@a
  1271  03D1  3000               	movlw	0
  1272  03D2  00F1               	movwf	I2C_Master_Read@a+1
  1273  03D3  120A  118A  20B0  120A  118A  	fcall	_I2C_Master_Read
  1274  03D8  0870               	movf	?_I2C_Master_Read,w
  1275  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  1276  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  1277  03DB  00EA               	movwf	??_main
  1278  03DC  086A               	movf	??_main,w
  1279  03DD  00C3               	movwf	_m_day
  1280                           
  1281                           ;main_mini2.c: 142:         month = I2C_Master_Read(1);
  1282  03DE  3001               	movlw	1
  1283  03DF  00F0               	movwf	I2C_Master_Read@a
  1284  03E0  3000               	movlw	0
  1285  03E1  00F1               	movwf	I2C_Master_Read@a+1
  1286  03E2  120A  118A  20B0  120A  118A  	fcall	_I2C_Master_Read
  1287  03E7  0870               	movf	?_I2C_Master_Read,w
  1288  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  1289  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  1290  03EA  00EA               	movwf	??_main
  1291  03EB  086A               	movf	??_main,w
  1292  03EC  00C2               	movwf	_month
  1293                           
  1294                           ;main_mini2.c: 143:         year = I2C_Master_Read(0);
  1295  03ED  3000               	movlw	0
  1296  03EE  00F0               	movwf	I2C_Master_Read@a
  1297  03EF  00F1               	movwf	I2C_Master_Read@a+1
  1298  03F0  120A  118A  20B0  120A  118A  	fcall	_I2C_Master_Read
  1299  03F5  0870               	movf	?_I2C_Master_Read,w
  1300  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  1301  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  1302  03F8  00EA               	movwf	??_main
  1303  03F9  086A               	movf	??_main,w
  1304  03FA  00C1               	movwf	_year
  1305                           
  1306                           ;main_mini2.c: 144:         I2C_Master_Stop();
  1307  03FB  120A  118A  202C  120A  118A  	fcall	_I2C_Master_Stop
  1308  0400                     l2019:
  1309                           
  1310                           ;main_mini2.c: 146:         RTC_display();
  1311  0400  120A  118A  2443  120A  118A  	fcall	_RTC_display
  1312  0405                     l2021:
  1313                           
  1314                           ;main_mini2.c: 148:         Led_RTC();
  1315  0405  120A  118A  2194  120A  118A  	fcall	_Led_RTC
  1316                           
  1317                           ;main_mini2.c: 152:         Write_USART_String(Time);
  1318  040A  302F               	movlw	(low (_Time| 0))& (0+255)
  1319  040B  00F1               	movwf	Write_USART_String@a
  1320  040C  3000               	movlw	0
  1321  040D  00F2               	movwf	Write_USART_String@a+1
  1322  040E  120A  118A  205A  120A  118A  	fcall	_Write_USART_String
  1323                           
  1324                           ;main_mini2.c: 153:         Write_USART_String("  ");
  1325  0413  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1326  0414  00F1               	movwf	Write_USART_String@a
  1327  0415  3080               	movlw	128
  1328  0416  00F2               	movwf	Write_USART_String@a+1
  1329  0417  120A  118A  205A  120A  118A  	fcall	_Write_USART_String
  1330                           
  1331                           ;main_mini2.c: 154:         Write_USART_String(Date);
  1332  041C  3020               	movlw	(low (_Date| 0))& (0+255)
  1333  041D  00F1               	movwf	Write_USART_String@a
  1334  041E  3000               	movlw	0
  1335  041F  00F2               	movwf	Write_USART_String@a+1
  1336  0420  120A  118A  205A  120A  118A  	fcall	_Write_USART_String
  1337  0425                     l2023:
  1338                           
  1339                           ;main_mini2.c: 155:         Write_USART(13);
  1340  0425  300D               	movlw	13
  1341  0426  120A  158A  276B  120A  118A  	fcall	_Write_USART
  1342  042B                     l2025:
  1343                           
  1344                           ;main_mini2.c: 156:         Write_USART(10);
  1345  042B  300A               	movlw	10
  1346  042C  120A  158A  276B  120A  118A  	fcall	_Write_USART
  1347  0431                     l2027:
  1348                           
  1349                           ;main_mini2.c: 158:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1350  0431  3006               	movlw	6
  1351  0432  1283               	bcf	3,5	;RP0=0, select bank0
  1352  0433  1303               	bcf	3,6	;RP1=0, select bank0
  1353  0434  00EC               	movwf	??_main+2
  1354  0435  3013               	movlw	19
  1355  0436  00EB               	movwf	??_main+1
  1356  0437  30AD               	movlw	173
  1357  0438  00EA               	movwf	??_main
  1358  0439                     u1707:
  1359  0439  0BEA               	decfsz	??_main,f
  1360  043A  2C39               	goto	u1707
  1361  043B  0BEB               	decfsz	??_main+1,f
  1362  043C  2C39               	goto	u1707
  1363  043D  0BEC               	decfsz	??_main+2,f
  1364  043E  2C39               	goto	u1707
  1365  043F  2B75               	goto	l103
  1366  0440  120A  118A  2800   	ljmp	start
  1367  0443                     __end_of_main:
  1368                           
  1369                           	psect	text1
  1370  0085                     __ptext1:	
  1371 ;; *************** function _setup *****************
  1372 ;; Defined at:
  1373 ;;		line 272 in file "main_mini2.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2, status,0, pclath, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       0       0       0       0
  1388 ;;      Locals:         0       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0
  1390 ;;      Totals:         0       0       0       0       0
  1391 ;;Total ram usage:        0 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    2
  1394 ;; This function calls:
  1395 ;;		_I2C_Master_Init
  1396 ;;		_USART_Init
  1397 ;;		_USART_Init_BaudRate
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           
  1404                           ;psect for function _setup
  1405  0085                     _setup:
  1406  0085                     l1925:	
  1407                           ;incstack = 0
  1408                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1409                           
  1410                           
  1411                           ;main_mini2.c: 274:     ANSEL = 0;
  1412  0085  1683               	bsf	3,5	;RP0=1, select bank3
  1413  0086  1703               	bsf	3,6	;RP1=1, select bank3
  1414  0087  0188               	clrf	8	;volatile
  1415                           
  1416                           ;main_mini2.c: 275:     ANSELH = 0;
  1417  0088  0189               	clrf	9	;volatile
  1418                           
  1419                           ;main_mini2.c: 276:     TRISA = 0;
  1420  0089  1683               	bsf	3,5	;RP0=1, select bank1
  1421  008A  1303               	bcf	3,6	;RP1=0, select bank1
  1422  008B  0185               	clrf	5	;volatile
  1423                           
  1424                           ;main_mini2.c: 277:     TRISB = 0;
  1425  008C  0186               	clrf	6	;volatile
  1426  008D                     l1927:
  1427                           
  1428                           ;main_mini2.c: 278:     TRISCbits.TRISC6 = 0;
  1429  008D  1307               	bcf	7,6	;volatile
  1430  008E                     l1929:
  1431                           
  1432                           ;main_mini2.c: 279:     TRISCbits.TRISC7 = 1;
  1433  008E  1787               	bsf	7,7	;volatile
  1434                           
  1435                           ;main_mini2.c: 280:     TRISD = 0;
  1436  008F  0188               	clrf	8	;volatile
  1437                           
  1438                           ;main_mini2.c: 281:     TRISE = 0;
  1439  0090  0189               	clrf	9	;volatile
  1440                           
  1441                           ;main_mini2.c: 282:     PORTA = 0;
  1442  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1443  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1444  0093  0185               	clrf	5	;volatile
  1445                           
  1446                           ;main_mini2.c: 283:     PORTB = 0;
  1447  0094  0186               	clrf	6	;volatile
  1448                           
  1449                           ;main_mini2.c: 284:     PORTC = 0;
  1450  0095  0187               	clrf	7	;volatile
  1451                           
  1452                           ;main_mini2.c: 285:     PORTD = 0;
  1453  0096  0188               	clrf	8	;volatile
  1454                           
  1455                           ;main_mini2.c: 286:     PORTE = 0;
  1456  0097  0189               	clrf	9	;volatile
  1457  0098                     l1931:
  1458                           
  1459                           ;main_mini2.c: 287:     I2C_Master_Init(100000);
  1460  0098  3000               	movlw	0
  1461  0099  00DB               	movwf	I2C_Master_Init@c+3
  1462  009A  3001               	movlw	1
  1463  009B  00DA               	movwf	I2C_Master_Init@c+2
  1464  009C  3086               	movlw	134
  1465  009D  00D9               	movwf	I2C_Master_Init@c+1
  1466  009E  30A0               	movlw	160
  1467  009F  00D8               	movwf	I2C_Master_Init@c
  1468  00A0  120A  118A  20DE  120A  118A  	fcall	_I2C_Master_Init
  1469  00A5                     l1933:
  1470                           
  1471                           ;main_mini2.c: 288:     USART_Init_BaudRate();
  1472  00A5  120A  158A  2741  120A  118A  	fcall	_USART_Init_BaudRate
  1473  00AA                     l1935:
  1474                           
  1475                           ;main_mini2.c: 289:     USART_Init();
  1476  00AA  120A  158A  2777  120A  118A  	fcall	_USART_Init
  1477  00AF                     l140:
  1478  00AF  0008               	return
  1479  00B0                     __end_of_setup:
  1480                           
  1481                           	psect	text2
  1482  0F41                     __ptext2:	
  1483 ;; *************** function _USART_Init_BaudRate *****************
  1484 ;; Defined at:
  1485 ;;		line 19 in file "USART.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1499 ;;      Params:         0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_setup
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           
  1513                           ;psect for function _USART_Init_BaudRate
  1514  0F41                     _USART_Init_BaudRate:
  1515  0F41                     l1835:	
  1516                           ;incstack = 0
  1517                           ; Regs used in _USART_Init_BaudRate: [wreg+status,2]
  1518                           
  1519                           
  1520                           ;USART.c: 20:     SPBRGH = 0;
  1521  0F41  1683               	bsf	3,5	;RP0=1, select bank1
  1522  0F42  1303               	bcf	3,6	;RP1=0, select bank1
  1523  0F43  019A               	clrf	26	;volatile
  1524  0F44                     l1837:
  1525                           
  1526                           ;USART.c: 21:     SPBRG = 12;
  1527  0F44  300C               	movlw	12
  1528  0F45  0099               	movwf	25	;volatile
  1529  0F46                     l233:
  1530  0F46  0008               	return
  1531  0F47                     __end_of_USART_Init_BaudRate:
  1532                           
  1533                           	psect	text3
  1534  0F77                     __ptext3:	
  1535 ;; *************** function _USART_Init *****************
  1536 ;; Defined at:
  1537 ;;		line 8 in file "USART.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		status,2
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         0       0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0
  1554 ;;      Totals:         0       0       0       0       0
  1555 ;;Total ram usage:        0 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_setup
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           
  1565                           ;psect for function _USART_Init
  1566  0F77                     _USART_Init:
  1567  0F77                     l1839:	
  1568                           ;incstack = 0
  1569                           ; Regs used in _USART_Init: [status,2]
  1570                           
  1571                           
  1572                           ;USART.c: 10:     RCSTAbits.SPEN = 1;
  1573  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  1574  0F78  1303               	bcf	3,6	;RP1=0, select bank0
  1575  0F79  1798               	bsf	24,7	;volatile
  1576                           
  1577                           ;USART.c: 11:     TXSTAbits.SYNC = 0;
  1578  0F7A  1683               	bsf	3,5	;RP0=1, select bank1
  1579  0F7B  1303               	bcf	3,6	;RP1=0, select bank1
  1580  0F7C  1218               	bcf	24,4	;volatile
  1581                           
  1582                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
  1583  0F7D  1698               	bsf	24,5	;volatile
  1584                           
  1585                           ;USART.c: 15:     RCSTAbits.CREN = 1;
  1586  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0F80  1618               	bsf	24,4	;volatile
  1589  0F81                     l1841:
  1590                           
  1591                           ;USART.c: 16:     RCREG = 0;
  1592  0F81  019A               	clrf	26	;volatile
  1593  0F82                     l230:
  1594  0F82  0008               	return
  1595  0F83                     __end_of_USART_Init:
  1596                           
  1597                           	psect	text4
  1598  00DE                     __ptext4:	
  1599 ;; *************** function _I2C_Master_Init *****************
  1600 ;; Defined at:
  1601 ;;		line 21 in file "I2C.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  c               4    0[BANK0 ] const unsigned long 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, status,2, status,0, pclath, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1615 ;;      Params:         0       4       0       0       0
  1616 ;;      Locals:         0       0       0       0       0
  1617 ;;      Temps:          0       4       0       0       0
  1618 ;;      Totals:         0       8       0       0       0
  1619 ;;Total ram usage:        8 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:    1
  1622 ;; This function calls:
  1623 ;;		___lldiv
  1624 ;; This function is called by:
  1625 ;;		_setup
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           
  1630                           ;psect for function _I2C_Master_Init
  1631  00DE                     _I2C_Master_Init:
  1632  00DE                     l1823:	
  1633                           ;incstack = 0
  1634                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1635                           
  1636                           
  1637                           ;I2C.c: 21: void I2C_Master_Init(const unsigned long c);I2C.c: 22: {;I2C.c: 23:     SSPC
      +                          ON = 0b00101000;
  1638  00DE  3028               	movlw	40
  1639  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1640  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1641  00E1  0094               	movwf	20	;volatile
  1642  00E2                     l1825:
  1643                           
  1644                           ;I2C.c: 28:     SSPCON2 = 0;
  1645  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  1646  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  1647  00E4  0191               	clrf	17	;volatile
  1648  00E5                     l1827:
  1649                           
  1650                           ;I2C.c: 35:     SSPADD = (8000000/(4*c))-1;
  1651  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1652  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1653  00E7  0858               	movf	I2C_Master_Init@c,w
  1654  00E8  00DC               	movwf	??_I2C_Master_Init
  1655  00E9  0859               	movf	I2C_Master_Init@c+1,w
  1656  00EA  00DD               	movwf	??_I2C_Master_Init+1
  1657  00EB  085A               	movf	I2C_Master_Init@c+2,w
  1658  00EC  00DE               	movwf	??_I2C_Master_Init+2
  1659  00ED  085B               	movf	I2C_Master_Init@c+3,w
  1660  00EE  00DF               	movwf	??_I2C_Master_Init+3
  1661  00EF  3002               	movlw	2
  1662  00F0                     u1405:
  1663  00F0  1003               	clrc
  1664  00F1  0DDC               	rlf	??_I2C_Master_Init,f
  1665  00F2  0DDD               	rlf	??_I2C_Master_Init+1,f
  1666  00F3  0DDE               	rlf	??_I2C_Master_Init+2,f
  1667  00F4  0DDF               	rlf	??_I2C_Master_Init+3,f
  1668  00F5                     u1400:
  1669  00F5  3EFF               	addlw	-1
  1670  00F6  1D03               	skipz
  1671  00F7  28F0               	goto	u1405
  1672  00F8  085F               	movf	??_I2C_Master_Init+3,w
  1673  00F9  00F3               	movwf	___lldiv@divisor+3
  1674  00FA  085E               	movf	??_I2C_Master_Init+2,w
  1675  00FB  00F2               	movwf	___lldiv@divisor+2
  1676  00FC  085D               	movf	??_I2C_Master_Init+1,w
  1677  00FD  00F1               	movwf	___lldiv@divisor+1
  1678  00FE  085C               	movf	??_I2C_Master_Init,w
  1679  00FF  00F0               	movwf	___lldiv@divisor
  1680  0100  3000               	movlw	0
  1681  0101  00F7               	movwf	___lldiv@dividend+3
  1682  0102  307A               	movlw	122
  1683  0103  00F6               	movwf	___lldiv@dividend+2
  1684  0104  3012               	movlw	18
  1685  0105  00F5               	movwf	___lldiv@dividend+1
  1686  0106  3000               	movlw	0
  1687  0107  00F4               	movwf	___lldiv@dividend
  1688  0108  120A  118A  2298  120A  118A  	fcall	___lldiv
  1689  010D  0870               	movf	?___lldiv,w
  1690  010E  3EFF               	addlw	255
  1691  010F  1683               	bsf	3,5	;RP0=1, select bank1
  1692  0110  1303               	bcf	3,6	;RP1=0, select bank1
  1693  0111  0093               	movwf	19	;volatile
  1694  0112                     l1829:
  1695                           
  1696                           ;I2C.c: 36:     SSPSTAT = 0;
  1697  0112  0194               	clrf	20	;volatile
  1698  0113                     l1831:
  1699                           
  1700                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  1701  0113  1587               	bsf	7,3	;volatile
  1702  0114                     l1833:
  1703                           
  1704                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  1705  0114  1607               	bsf	7,4	;volatile
  1706  0115                     l283:
  1707  0115  0008               	return
  1708  0116                     __end_of_I2C_Master_Init:
  1709                           
  1710                           	psect	text5
  1711  0298                     __ptext5:	
  1712 ;; *************** function ___lldiv *****************
  1713 ;; Defined at:
  1714 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  divisor         4    0[COMMON] unsigned long 
  1717 ;;  dividend        4    4[COMMON] unsigned long 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  quotient        4    9[COMMON] unsigned long 
  1720 ;;  counter         1   13[COMMON] unsigned char 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  4    0[COMMON] unsigned long 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2, status,0
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1730 ;;      Params:         8       0       0       0       0
  1731 ;;      Locals:         5       0       0       0       0
  1732 ;;      Temps:          1       0       0       0       0
  1733 ;;      Totals:        14       0       0       0       0
  1734 ;;Total ram usage:       14 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_I2C_Master_Init
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           
  1744                           ;psect for function ___lldiv
  1745  0298                     ___lldiv:
  1746  0298                     l1613:	
  1747                           ;incstack = 0
  1748                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1749                           
  1750  0298  3000               	movlw	0
  1751  0299  00FC               	movwf	___lldiv@quotient+3
  1752  029A  3000               	movlw	0
  1753  029B  00FB               	movwf	___lldiv@quotient+2
  1754  029C  3000               	movlw	0
  1755  029D  00FA               	movwf	___lldiv@quotient+1
  1756  029E  3000               	movlw	0
  1757  029F  00F9               	movwf	___lldiv@quotient
  1758  02A0  0873               	movf	___lldiv@divisor+3,w
  1759  02A1  0472               	iorwf	___lldiv@divisor+2,w
  1760  02A2  0471               	iorwf	___lldiv@divisor+1,w
  1761  02A3  0470               	iorwf	___lldiv@divisor,w
  1762  02A4  1903               	skipnz
  1763  02A5  2AA7               	goto	u1001
  1764  02A6  2AA8               	goto	u1000
  1765  02A7                     u1001:
  1766  02A7  2AF5               	goto	l1633
  1767  02A8                     u1000:
  1768  02A8                     l1615:
  1769  02A8  01FD               	clrf	___lldiv@counter
  1770  02A9  0AFD               	incf	___lldiv@counter,f
  1771  02AA  2AB8               	goto	l1619
  1772  02AB                     l1617:
  1773  02AB  3001               	movlw	1
  1774  02AC  00F8               	movwf	??___lldiv
  1775  02AD                     u1015:
  1776  02AD  1003               	clrc
  1777  02AE  0DF0               	rlf	___lldiv@divisor,f
  1778  02AF  0DF1               	rlf	___lldiv@divisor+1,f
  1779  02B0  0DF2               	rlf	___lldiv@divisor+2,f
  1780  02B1  0DF3               	rlf	___lldiv@divisor+3,f
  1781  02B2  0BF8               	decfsz	??___lldiv,f
  1782  02B3  2AAD               	goto	u1015
  1783  02B4  3001               	movlw	1
  1784  02B5  00F8               	movwf	??___lldiv
  1785  02B6  0878               	movf	??___lldiv,w
  1786  02B7  07FD               	addwf	___lldiv@counter,f
  1787  02B8                     l1619:
  1788  02B8  1FF3               	btfss	___lldiv@divisor+3,7
  1789  02B9  2ABB               	goto	u1021
  1790  02BA  2ABC               	goto	u1020
  1791  02BB                     u1021:
  1792  02BB  2AAB               	goto	l1617
  1793  02BC                     u1020:
  1794  02BC                     l1621:
  1795  02BC  3001               	movlw	1
  1796  02BD  00F8               	movwf	??___lldiv
  1797  02BE                     u1035:
  1798  02BE  1003               	clrc
  1799  02BF  0DF9               	rlf	___lldiv@quotient,f
  1800  02C0  0DFA               	rlf	___lldiv@quotient+1,f
  1801  02C1  0DFB               	rlf	___lldiv@quotient+2,f
  1802  02C2  0DFC               	rlf	___lldiv@quotient+3,f
  1803  02C3  0BF8               	decfsz	??___lldiv,f
  1804  02C4  2ABE               	goto	u1035
  1805  02C5                     l1623:
  1806  02C5  0873               	movf	___lldiv@divisor+3,w
  1807  02C6  0277               	subwf	___lldiv@dividend+3,w
  1808  02C7  1D03               	skipz
  1809  02C8  2AD3               	goto	u1045
  1810  02C9  0872               	movf	___lldiv@divisor+2,w
  1811  02CA  0276               	subwf	___lldiv@dividend+2,w
  1812  02CB  1D03               	skipz
  1813  02CC  2AD3               	goto	u1045
  1814  02CD  0871               	movf	___lldiv@divisor+1,w
  1815  02CE  0275               	subwf	___lldiv@dividend+1,w
  1816  02CF  1D03               	skipz
  1817  02D0  2AD3               	goto	u1045
  1818  02D1  0870               	movf	___lldiv@divisor,w
  1819  02D2  0274               	subwf	___lldiv@dividend,w
  1820  02D3                     u1045:
  1821  02D3  1C03               	skipc
  1822  02D4  2AD6               	goto	u1041
  1823  02D5  2AD7               	goto	u1040
  1824  02D6                     u1041:
  1825  02D6  2AE6               	goto	l1629
  1826  02D7                     u1040:
  1827  02D7                     l1625:
  1828  02D7  0870               	movf	___lldiv@divisor,w
  1829  02D8  02F4               	subwf	___lldiv@dividend,f
  1830  02D9  0871               	movf	___lldiv@divisor+1,w
  1831  02DA  1C03               	skipc
  1832  02DB  0F71               	incfsz	___lldiv@divisor+1,w
  1833  02DC  02F5               	subwf	___lldiv@dividend+1,f
  1834  02DD  0872               	movf	___lldiv@divisor+2,w
  1835  02DE  1C03               	skipc
  1836  02DF  0F72               	incfsz	___lldiv@divisor+2,w
  1837  02E0  02F6               	subwf	___lldiv@dividend+2,f
  1838  02E1  0873               	movf	___lldiv@divisor+3,w
  1839  02E2  1C03               	skipc
  1840  02E3  0F73               	incfsz	___lldiv@divisor+3,w
  1841  02E4  02F7               	subwf	___lldiv@dividend+3,f
  1842  02E5                     l1627:
  1843  02E5  1479               	bsf	___lldiv@quotient,0
  1844  02E6                     l1629:
  1845  02E6  3001               	movlw	1
  1846  02E7                     u1055:
  1847  02E7  1003               	clrc
  1848  02E8  0CF3               	rrf	___lldiv@divisor+3,f
  1849  02E9  0CF2               	rrf	___lldiv@divisor+2,f
  1850  02EA  0CF1               	rrf	___lldiv@divisor+1,f
  1851  02EB  0CF0               	rrf	___lldiv@divisor,f
  1852  02EC  3EFF               	addlw	-1
  1853  02ED  1D03               	skipz
  1854  02EE  2AE7               	goto	u1055
  1855  02EF                     l1631:
  1856  02EF  3001               	movlw	1
  1857  02F0  02FD               	subwf	___lldiv@counter,f
  1858  02F1  1D03               	btfss	3,2
  1859  02F2  2AF4               	goto	u1061
  1860  02F3  2AF5               	goto	u1060
  1861  02F4                     u1061:
  1862  02F4  2ABC               	goto	l1621
  1863  02F5                     u1060:
  1864  02F5                     l1633:
  1865  02F5  087C               	movf	___lldiv@quotient+3,w
  1866  02F6  00F3               	movwf	?___lldiv+3
  1867  02F7  087B               	movf	___lldiv@quotient+2,w
  1868  02F8  00F2               	movwf	?___lldiv+2
  1869  02F9  087A               	movf	___lldiv@quotient+1,w
  1870  02FA  00F1               	movwf	?___lldiv+1
  1871  02FB  0879               	movf	___lldiv@quotient,w
  1872  02FC  00F0               	movwf	?___lldiv
  1873  02FD                     l482:
  1874  02FD  0008               	return
  1875  02FE                     __end_of___lldiv:
  1876                           
  1877                           	psect	text6
  1878  023E                     __ptext6:	
  1879 ;; *************** function _Write_to_RTC *****************
  1880 ;; Defined at:
  1881 ;;		line 213 in file "main_mini2.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;		None
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0, pclath, cstack
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1895 ;;      Params:         0       0       0       0       0
  1896 ;;      Locals:         0       0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0
  1898 ;;      Totals:         0       0       0       0       0
  1899 ;;Total ram usage:        0 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:    2
  1902 ;; This function calls:
  1903 ;;		_I2C_Master_Start
  1904 ;;		_I2C_Master_Stop
  1905 ;;		_I2C_Master_Write
  1906 ;; This function is called by:
  1907 ;;		_main
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           
  1912                           ;psect for function _Write_to_RTC
  1913  023E                     _Write_to_RTC:
  1914  023E                     l1937:	
  1915                           ;incstack = 0
  1916                           ; Regs used in _Write_to_RTC: [wreg+status,2+status,0+pclath+cstack]
  1917                           
  1918                           
  1919                           ;main_mini2.c: 214:     I2C_Master_Start();
  1920  023E  120A  158A  2758  120A  118A  	fcall	_I2C_Master_Start
  1921                           
  1922                           ;main_mini2.c: 215:     I2C_Master_Write(0xD0);
  1923  0243  30D0               	movlw	208
  1924  0244  00F0               	movwf	I2C_Master_Write@d
  1925  0245  3000               	movlw	0
  1926  0246  00F1               	movwf	I2C_Master_Write@d+1
  1927  0247  120A  158A  2761  120A  118A  	fcall	_I2C_Master_Write
  1928                           
  1929                           ;main_mini2.c: 216:     I2C_Master_Write(0);
  1930  024C  3000               	movlw	0
  1931  024D  00F0               	movwf	I2C_Master_Write@d
  1932  024E  00F1               	movwf	I2C_Master_Write@d+1
  1933  024F  120A  158A  2761  120A  118A  	fcall	_I2C_Master_Write
  1934                           
  1935                           ;main_mini2.c: 217:     I2C_Master_Write(0);
  1936  0254  3000               	movlw	0
  1937  0255  00F0               	movwf	I2C_Master_Write@d
  1938  0256  00F1               	movwf	I2C_Master_Write@d+1
  1939  0257  120A  158A  2761  120A  118A  	fcall	_I2C_Master_Write
  1940                           
  1941                           ;main_mini2.c: 218:     I2C_Master_Write(48);
  1942  025C  3030               	movlw	48
  1943  025D  00F0               	movwf	I2C_Master_Write@d
  1944  025E  3000               	movlw	0
  1945  025F  00F1               	movwf	I2C_Master_Write@d+1
  1946  0260  120A  158A  2761  120A  118A  	fcall	_I2C_Master_Write
  1947                           
  1948                           ;main_mini2.c: 219:     I2C_Master_Write(6);
  1949  0265  3006               	movlw	6
  1950  0266  00F0               	movwf	I2C_Master_Write@d
  1951  0267  3000               	movlw	0
  1952  0268  00F1               	movwf	I2C_Master_Write@d+1
  1953  0269  120A  158A  2761  120A  118A  	fcall	_I2C_Master_Write
  1954                           
  1955                           ;main_mini2.c: 220:     I2C_Master_Write(1);
  1956  026E  3001               	movlw	1
  1957  026F  00F0               	movwf	I2C_Master_Write@d
  1958  0270  3000               	movlw	0
  1959  0271  00F1               	movwf	I2C_Master_Write@d+1
  1960  0272  120A  158A  2761  120A  118A  	fcall	_I2C_Master_Write
  1961                           
  1962                           ;main_mini2.c: 221:     I2C_Master_Write(8);
  1963  0277  3008               	movlw	8
  1964  0278  00F0               	movwf	I2C_Master_Write@d
  1965  0279  3000               	movlw	0
  1966  027A  00F1               	movwf	I2C_Master_Write@d+1
  1967  027B  120A  158A  2761  120A  118A  	fcall	_I2C_Master_Write
  1968                           
  1969                           ;main_mini2.c: 222:     I2C_Master_Write(3);
  1970  0280  3003               	movlw	3
  1971  0281  00F0               	movwf	I2C_Master_Write@d
  1972  0282  3000               	movlw	0
  1973  0283  00F1               	movwf	I2C_Master_Write@d+1
  1974  0284  120A  158A  2761  120A  118A  	fcall	_I2C_Master_Write
  1975                           
  1976                           ;main_mini2.c: 223:     I2C_Master_Write(27);
  1977  0289  301B               	movlw	27
  1978  028A  00F0               	movwf	I2C_Master_Write@d
  1979  028B  3000               	movlw	0
  1980  028C  00F1               	movwf	I2C_Master_Write@d+1
  1981  028D  120A  158A  2761  120A  118A  	fcall	_I2C_Master_Write
  1982                           
  1983                           ;main_mini2.c: 224:     I2C_Master_Stop();
  1984  0292  120A  118A  202C  120A  118A  	fcall	_I2C_Master_Stop
  1985  0297                     l118:
  1986  0297  0008               	return
  1987  0298                     __end_of_Write_to_RTC:
  1988                           
  1989                           	psect	text7
  1990  0F61                     __ptext7:	
  1991 ;; *************** function _I2C_Master_Write *****************
  1992 ;; Defined at:
  1993 ;;		line 84 in file "I2C.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  d               2    0[COMMON] unsigned int 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0, pclath, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         2       0       0       0       0
  2008 ;;      Locals:         0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0
  2010 ;;      Totals:         2       0       0       0       0
  2011 ;;Total ram usage:        2 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    1
  2014 ;; This function calls:
  2015 ;;		_I2C_Master_Wait
  2016 ;; This function is called by:
  2017 ;;		_main
  2018 ;;		_Write_to_RTC
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _I2C_Master_Write
  2024  0F61                     _I2C_Master_Write:
  2025  0F61                     l1689:	
  2026                           ;incstack = 0
  2027                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2028                           
  2029                           
  2030                           ;I2C.c: 84: void I2C_Master_Write(unsigned d);I2C.c: 85: {;I2C.c: 86:     I2C_Master_Wai
      +                          t();
  2031  0F61  120A  158A  2783  120A  158A  	fcall	_I2C_Master_Wait
  2032  0F66                     l1691:
  2033                           
  2034                           ;I2C.c: 87:     SSPBUF = d;
  2035  0F66  0870               	movf	I2C_Master_Write@d,w
  2036  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  2037  0F68  1303               	bcf	3,6	;RP1=0, select bank0
  2038  0F69  0093               	movwf	19	;volatile
  2039  0F6A                     l301:
  2040  0F6A  0008               	return
  2041  0F6B                     __end_of_I2C_Master_Write:
  2042                           
  2043                           	psect	text8
  2044  002C                     __ptext8:	
  2045 ;; *************** function _I2C_Master_Stop *****************
  2046 ;; Defined at:
  2047 ;;		line 73 in file "I2C.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;		None
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      void 
  2054 ;; Registers used:
  2055 ;;		wreg, status,2, status,0, pclath, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2061 ;;      Params:         0       0       0       0       0
  2062 ;;      Locals:         0       0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0
  2064 ;;      Totals:         0       0       0       0       0
  2065 ;;Total ram usage:        0 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:    1
  2068 ;; This function calls:
  2069 ;;		_I2C_Master_Wait
  2070 ;; This function is called by:
  2071 ;;		_main
  2072 ;;		_Write_to_RTC
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           
  2077                           ;psect for function _I2C_Master_Stop
  2078  002C                     _I2C_Master_Stop:
  2079  002C                     l1693:	
  2080                           ;incstack = 0
  2081                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2082                           
  2083                           
  2084                           ;I2C.c: 75:     I2C_Master_Wait();
  2085  002C  120A  158A  2783  120A  118A  	fcall	_I2C_Master_Wait
  2086  0031                     l1695:
  2087                           
  2088                           ;I2C.c: 76:     SSPCON2bits.PEN = 1;
  2089  0031  1683               	bsf	3,5	;RP0=1, select bank1
  2090  0032  1303               	bcf	3,6	;RP1=0, select bank1
  2091  0033  1511               	bsf	17,2	;volatile
  2092  0034                     l298:
  2093  0034  0008               	return
  2094  0035                     __end_of_I2C_Master_Stop:
  2095                           
  2096                           	psect	text9
  2097  0F58                     __ptext9:	
  2098 ;; *************** function _I2C_Master_Start *****************
  2099 ;; Defined at:
  2100 ;;		line 56 in file "I2C.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;		None
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;		None
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0, pclath, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2114 ;;      Params:         0       0       0       0       0
  2115 ;;      Locals:         0       0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0
  2117 ;;      Totals:         0       0       0       0       0
  2118 ;;Total ram usage:        0 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    1
  2121 ;; This function calls:
  2122 ;;		_I2C_Master_Wait
  2123 ;; This function is called by:
  2124 ;;		_main
  2125 ;;		_Write_to_RTC
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           
  2130                           ;psect for function _I2C_Master_Start
  2131  0F58                     _I2C_Master_Start:
  2132  0F58                     l1685:	
  2133                           ;incstack = 0
  2134                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2135                           
  2136                           
  2137                           ;I2C.c: 57:     I2C_Master_Wait();
  2138  0F58  120A  158A  2783  120A  158A  	fcall	_I2C_Master_Wait
  2139  0F5D                     l1687:
  2140                           
  2141                           ;I2C.c: 58:     SSPCON2bits.SEN = 1;
  2142  0F5D  1683               	bsf	3,5	;RP0=1, select bank1
  2143  0F5E  1303               	bcf	3,6	;RP1=0, select bank1
  2144  0F5F  1411               	bsf	17,0	;volatile
  2145  0F60                     l292:
  2146  0F60  0008               	return
  2147  0F61                     __end_of_I2C_Master_Start:
  2148                           
  2149                           	psect	text10
  2150  005A                     __ptext10:	
  2151 ;; *************** function _Write_USART_String *****************
  2152 ;; Defined at:
  2153 ;;		line 37 in file "USART.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  a               2    1[COMMON] PTR unsigned char 
  2156 ;;		 -> Date(15), STR_1(3), Time(15), 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  i               1    4[COMMON] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2168 ;;      Params:         2       0       0       0       0
  2169 ;;      Locals:         1       0       0       0       0
  2170 ;;      Temps:          1       0       0       0       0
  2171 ;;      Totals:         4       0       0       0       0
  2172 ;;Total ram usage:        4 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; Hardware stack levels required when called:    1
  2175 ;; This function calls:
  2176 ;;		_Write_USART
  2177 ;; This function is called by:
  2178 ;;		_main
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           
  2183                           ;psect for function _Write_USART_String
  2184  005A                     _Write_USART_String:
  2185  005A                     l2005:	
  2186                           ;incstack = 0
  2187                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2188                           
  2189                           
  2190                           ;USART.c: 38:     uint8_t i;;USART.c: 39:     for(i=0;a[i]!='\0';i++){
  2191  005A  01F4               	clrf	Write_USART_String@i
  2192  005B  2871               	goto	l2011
  2193  005C                     l2007:
  2194                           
  2195                           ;USART.c: 40:         Write_USART(a[i]);
  2196  005C  0874               	movf	Write_USART_String@i,w
  2197  005D  0771               	addwf	Write_USART_String@a,w
  2198  005E  0084               	movwf	4
  2199  005F  0872               	movf	Write_USART_String@a+1,w
  2200  0060  1803               	skipnc
  2201  0061  0A72               	incf	Write_USART_String@a+1,w
  2202  0062  00FF               	movwf	btemp+1
  2203  0063  120A  118A  2003  120A  118A  	fcall	stringtab
  2204  0068  120A  158A  276B  120A  118A  	fcall	_Write_USART
  2205  006D                     l2009:
  2206                           
  2207                           ;USART.c: 41:     }
  2208  006D  3001               	movlw	1
  2209  006E  00F3               	movwf	??_Write_USART_String
  2210  006F  0873               	movf	??_Write_USART_String,w
  2211  0070  07F4               	addwf	Write_USART_String@i,f
  2212  0071                     l2011:
  2213  0071  0874               	movf	Write_USART_String@i,w
  2214  0072  0771               	addwf	Write_USART_String@a,w
  2215  0073  0084               	movwf	4
  2216  0074  0872               	movf	Write_USART_String@a+1,w
  2217  0075  1803               	skipnc
  2218  0076  0A72               	incf	Write_USART_String@a+1,w
  2219  0077  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0078  1303               	bcf	3,6	;RP1=0, select bank0
  2221  0079  00FF               	movwf	btemp+1
  2222  007A  120A  118A  2003  120A  118A  	fcall	stringtab
  2223  007F  3A00               	xorlw	0
  2224  0080  1D03               	skipz
  2225  0081  2883               	goto	u1691
  2226  0082  2884               	goto	u1690
  2227  0083                     u1691:
  2228  0083  285C               	goto	l2007
  2229  0084                     u1690:
  2230  0084                     l248:
  2231  0084  0008               	return
  2232  0085                     __end_of_Write_USART_String:
  2233                           
  2234                           	psect	text11
  2235  0F6B                     __ptext11:	
  2236 ;; *************** function _Write_USART *****************
  2237 ;; Defined at:
  2238 ;;		line 33 in file "USART.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  a               1    wreg     unsigned char 
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;  a               1    0[COMMON] unsigned char 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2252 ;;      Params:         0       0       0       0       0
  2253 ;;      Locals:         1       0       0       0       0
  2254 ;;      Temps:          0       0       0       0       0
  2255 ;;      Totals:         1       0       0       0       0
  2256 ;;Total ram usage:        1 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_main
  2262 ;;		_Write_USART_String
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           
  2267                           ;psect for function _Write_USART
  2268  0F6B                     _Write_USART:
  2269                           
  2270                           ;incstack = 0
  2271                           ; Regs used in _Write_USART: [wreg]
  2272                           ;Write_USART@a stored from wreg
  2273  0F6B  00F0               	movwf	Write_USART@a
  2274  0F6C                     l1697:
  2275  0F6C                     l239:	
  2276                           ;USART.c: 34:     while(!TRMT);
  2277                           
  2278  0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  2279  0F6D  1303               	bcf	3,6	;RP1=0, select bank1
  2280  0F6E  1C98               	btfss	24,1	;volatile
  2281  0F6F  2F71               	goto	u1201
  2282  0F70  2F72               	goto	u1200
  2283  0F71                     u1201:
  2284  0F71  2F6C               	goto	l239
  2285  0F72                     u1200:
  2286  0F72                     l1699:
  2287                           
  2288                           ;USART.c: 35:     TXREG=a;
  2289  0F72  0870               	movf	Write_USART@a,w
  2290  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  2291  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  2292  0F75  0099               	movwf	25	;volatile
  2293  0F76                     l242:
  2294  0F76  0008               	return
  2295  0F77                     __end_of_Write_USART:
  2296                           
  2297                           	psect	text12
  2298  0443                     __ptext12:	
  2299 ;; *************** function _RTC_display *****************
  2300 ;; Defined at:
  2301 ;;		line 176 in file "main_mini2.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2315 ;;      Params:         0       0       0       0       0
  2316 ;;      Locals:         0       0       0       0       0
  2317 ;;      Temps:          0       3       0       0       0
  2318 ;;      Totals:         0       3       0       0       0
  2319 ;;Total ram usage:        3 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    2
  2322 ;; This function calls:
  2323 ;;		___awdiv
  2324 ;;		___awmod
  2325 ;;		_bcd_to_decimal
  2326 ;;		_sprintf
  2327 ;; This function is called by:
  2328 ;;		_main
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           
  2333                           ;psect for function _RTC_display
  2334  0443                     _RTC_display:
  2335  0443                     l1959:	
  2336                           ;incstack = 0
  2337                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2338                           
  2339                           
  2340                           ;main_mini2.c: 178:     second = bcd_to_decimal(second);
  2341  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2342  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2343  0445  0846               	movf	_second,w
  2344  0446  120A  158A  27CA  120A  118A  	fcall	_bcd_to_decimal
  2345  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2346  044C  1303               	bcf	3,6	;RP1=0, select bank0
  2347  044D  00E7               	movwf	??_RTC_display
  2348  044E  0867               	movf	??_RTC_display,w
  2349  044F  00C6               	movwf	_second
  2350                           
  2351                           ;main_mini2.c: 179:     minute = bcd_to_decimal(minute);
  2352  0450  0845               	movf	_minute,w
  2353  0451  120A  158A  27CA  120A  118A  	fcall	_bcd_to_decimal
  2354  0456  1283               	bcf	3,5	;RP0=0, select bank0
  2355  0457  1303               	bcf	3,6	;RP1=0, select bank0
  2356  0458  00E7               	movwf	??_RTC_display
  2357  0459  0867               	movf	??_RTC_display,w
  2358  045A  00C5               	movwf	_minute
  2359                           
  2360                           ;main_mini2.c: 180:     hour = bcd_to_decimal(hour);
  2361  045B  0844               	movf	_hour,w
  2362  045C  120A  158A  27CA  120A  118A  	fcall	_bcd_to_decimal
  2363  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2364  0462  1303               	bcf	3,6	;RP1=0, select bank0
  2365  0463  00E7               	movwf	??_RTC_display
  2366  0464  0867               	movf	??_RTC_display,w
  2367  0465  00C4               	movwf	_hour
  2368                           
  2369                           ;main_mini2.c: 181:     m_day = bcd_to_decimal(m_day);
  2370  0466  0843               	movf	_m_day,w
  2371  0467  120A  158A  27CA  120A  118A  	fcall	_bcd_to_decimal
  2372  046C  1283               	bcf	3,5	;RP0=0, select bank0
  2373  046D  1303               	bcf	3,6	;RP1=0, select bank0
  2374  046E  00E7               	movwf	??_RTC_display
  2375  046F  0867               	movf	??_RTC_display,w
  2376  0470  00C3               	movwf	_m_day
  2377                           
  2378                           ;main_mini2.c: 182:     month = bcd_to_decimal(month);
  2379  0471  0842               	movf	_month,w
  2380  0472  120A  158A  27CA  120A  118A  	fcall	_bcd_to_decimal
  2381  0477  1283               	bcf	3,5	;RP0=0, select bank0
  2382  0478  1303               	bcf	3,6	;RP1=0, select bank0
  2383  0479  00E7               	movwf	??_RTC_display
  2384  047A  0867               	movf	??_RTC_display,w
  2385  047B  00C2               	movwf	_month
  2386                           
  2387                           ;main_mini2.c: 183:     year = bcd_to_decimal(year);
  2388  047C  0841               	movf	_year,w
  2389  047D  120A  158A  27CA  120A  118A  	fcall	_bcd_to_decimal
  2390  0482  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0483  1303               	bcf	3,6	;RP1=0, select bank0
  2392  0484  00E7               	movwf	??_RTC_display
  2393  0485  0867               	movf	??_RTC_display,w
  2394  0486  00C1               	movwf	_year
  2395                           
  2396                           ;main_mini2.c: 187:     Time[6] = hour / 10 + '0';
  2397  0487  300A               	movlw	10
  2398  0488  00F0               	movwf	___awdiv@divisor
  2399  0489  3000               	movlw	0
  2400  048A  00F1               	movwf	___awdiv@divisor+1
  2401  048B  0844               	movf	_hour,w
  2402  048C  00E7               	movwf	??_RTC_display
  2403  048D  01E8               	clrf	??_RTC_display+1
  2404  048E  0867               	movf	??_RTC_display,w
  2405  048F  00F2               	movwf	___awdiv@dividend
  2406  0490  0868               	movf	??_RTC_display+1,w
  2407  0491  00F3               	movwf	___awdiv@dividend+1
  2408  0492  120A  118A  22FE  120A  118A  	fcall	___awdiv
  2409  0497  0870               	movf	?___awdiv,w
  2410  0498  3E30               	addlw	48
  2411  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2412  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2413  049B  00E9               	movwf	??_RTC_display+2
  2414  049C  0869               	movf	??_RTC_display+2,w
  2415  049D  00B5               	movwf	_Time+6
  2416                           
  2417                           ;main_mini2.c: 188:     Time[7] = hour % 10 + '0';
  2418  049E  300A               	movlw	10
  2419  049F  00F0               	movwf	___awmod@divisor
  2420  04A0  3000               	movlw	0
  2421  04A1  00F1               	movwf	___awmod@divisor+1
  2422  04A2  0844               	movf	_hour,w
  2423  04A3  00E7               	movwf	??_RTC_display
  2424  04A4  01E8               	clrf	??_RTC_display+1
  2425  04A5  0867               	movf	??_RTC_display,w
  2426  04A6  00F2               	movwf	___awmod@dividend
  2427  04A7  0868               	movf	??_RTC_display+1,w
  2428  04A8  00F3               	movwf	___awmod@dividend+1
  2429  04A9  120A  118A  21E5  120A  118A  	fcall	___awmod
  2430  04AE  0870               	movf	?___awmod,w
  2431  04AF  3E30               	addlw	48
  2432  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2433  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2434  04B2  00E9               	movwf	??_RTC_display+2
  2435  04B3  0869               	movf	??_RTC_display+2,w
  2436  04B4  00B6               	movwf	_Time+7
  2437                           
  2438                           ;main_mini2.c: 189:     Time[9] = minute / 10 + '0';
  2439  04B5  300A               	movlw	10
  2440  04B6  00F0               	movwf	___awdiv@divisor
  2441  04B7  3000               	movlw	0
  2442  04B8  00F1               	movwf	___awdiv@divisor+1
  2443  04B9  0845               	movf	_minute,w
  2444  04BA  00E7               	movwf	??_RTC_display
  2445  04BB  01E8               	clrf	??_RTC_display+1
  2446  04BC  0867               	movf	??_RTC_display,w
  2447  04BD  00F2               	movwf	___awdiv@dividend
  2448  04BE  0868               	movf	??_RTC_display+1,w
  2449  04BF  00F3               	movwf	___awdiv@dividend+1
  2450  04C0  120A  118A  22FE  120A  118A  	fcall	___awdiv
  2451  04C5  0870               	movf	?___awdiv,w
  2452  04C6  3E30               	addlw	48
  2453  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2454  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2455  04C9  00E9               	movwf	??_RTC_display+2
  2456  04CA  0869               	movf	??_RTC_display+2,w
  2457  04CB  00B8               	movwf	_Time+9
  2458                           
  2459                           ;main_mini2.c: 190:     Time[10] = minute % 10 + '0';
  2460  04CC  300A               	movlw	10
  2461  04CD  00F0               	movwf	___awmod@divisor
  2462  04CE  3000               	movlw	0
  2463  04CF  00F1               	movwf	___awmod@divisor+1
  2464  04D0  0845               	movf	_minute,w
  2465  04D1  00E7               	movwf	??_RTC_display
  2466  04D2  01E8               	clrf	??_RTC_display+1
  2467  04D3  0867               	movf	??_RTC_display,w
  2468  04D4  00F2               	movwf	___awmod@dividend
  2469  04D5  0868               	movf	??_RTC_display+1,w
  2470  04D6  00F3               	movwf	___awmod@dividend+1
  2471  04D7  120A  118A  21E5  120A  118A  	fcall	___awmod
  2472  04DC  0870               	movf	?___awmod,w
  2473  04DD  3E30               	addlw	48
  2474  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2475  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2476  04E0  00E9               	movwf	??_RTC_display+2
  2477  04E1  0869               	movf	??_RTC_display+2,w
  2478  04E2  00B9               	movwf	_Time+10
  2479                           
  2480                           ;main_mini2.c: 191:     Time[12] = second / 10 + '0';
  2481  04E3  300A               	movlw	10
  2482  04E4  00F0               	movwf	___awdiv@divisor
  2483  04E5  3000               	movlw	0
  2484  04E6  00F1               	movwf	___awdiv@divisor+1
  2485  04E7  0846               	movf	_second,w
  2486  04E8  00E7               	movwf	??_RTC_display
  2487  04E9  01E8               	clrf	??_RTC_display+1
  2488  04EA  0867               	movf	??_RTC_display,w
  2489  04EB  00F2               	movwf	___awdiv@dividend
  2490  04EC  0868               	movf	??_RTC_display+1,w
  2491  04ED  00F3               	movwf	___awdiv@dividend+1
  2492  04EE  120A  118A  22FE  120A  118A  	fcall	___awdiv
  2493  04F3  0870               	movf	?___awdiv,w
  2494  04F4  3E30               	addlw	48
  2495  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  2496  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  2497  04F7  00E9               	movwf	??_RTC_display+2
  2498  04F8  0869               	movf	??_RTC_display+2,w
  2499  04F9  00BB               	movwf	_Time+12
  2500                           
  2501                           ;main_mini2.c: 192:     Time[13] = second % 10 + '0';
  2502  04FA  300A               	movlw	10
  2503  04FB  00F0               	movwf	___awmod@divisor
  2504  04FC  3000               	movlw	0
  2505  04FD  00F1               	movwf	___awmod@divisor+1
  2506  04FE  0846               	movf	_second,w
  2507  04FF  00E7               	movwf	??_RTC_display
  2508  0500  01E8               	clrf	??_RTC_display+1
  2509  0501  0867               	movf	??_RTC_display,w
  2510  0502  00F2               	movwf	___awmod@dividend
  2511  0503  0868               	movf	??_RTC_display+1,w
  2512  0504  00F3               	movwf	___awmod@dividend+1
  2513  0505  120A  118A  21E5  120A  118A  	fcall	___awmod
  2514  050A  0870               	movf	?___awmod,w
  2515  050B  3E30               	addlw	48
  2516  050C  1283               	bcf	3,5	;RP0=0, select bank0
  2517  050D  1303               	bcf	3,6	;RP1=0, select bank0
  2518  050E  00E9               	movwf	??_RTC_display+2
  2519  050F  0869               	movf	??_RTC_display+2,w
  2520  0510  00BC               	movwf	_Time+13
  2521                           
  2522                           ;main_mini2.c: 195:     Date[6] = m_day / 10 + '0';
  2523  0511  300A               	movlw	10
  2524  0512  00F0               	movwf	___awdiv@divisor
  2525  0513  3000               	movlw	0
  2526  0514  00F1               	movwf	___awdiv@divisor+1
  2527  0515  0843               	movf	_m_day,w
  2528  0516  00E7               	movwf	??_RTC_display
  2529  0517  01E8               	clrf	??_RTC_display+1
  2530  0518  0867               	movf	??_RTC_display,w
  2531  0519  00F2               	movwf	___awdiv@dividend
  2532  051A  0868               	movf	??_RTC_display+1,w
  2533  051B  00F3               	movwf	___awdiv@dividend+1
  2534  051C  120A  118A  22FE  120A  118A  	fcall	___awdiv
  2535  0521  0870               	movf	?___awdiv,w
  2536  0522  3E30               	addlw	48
  2537  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2538  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2539  0525  00E9               	movwf	??_RTC_display+2
  2540  0526  0869               	movf	??_RTC_display+2,w
  2541  0527  00A6               	movwf	_Date+6
  2542                           
  2543                           ;main_mini2.c: 196:     Date[7] = m_day % 10 + '0';
  2544  0528  300A               	movlw	10
  2545  0529  00F0               	movwf	___awmod@divisor
  2546  052A  3000               	movlw	0
  2547  052B  00F1               	movwf	___awmod@divisor+1
  2548  052C  0843               	movf	_m_day,w
  2549  052D  00E7               	movwf	??_RTC_display
  2550  052E  01E8               	clrf	??_RTC_display+1
  2551  052F  0867               	movf	??_RTC_display,w
  2552  0530  00F2               	movwf	___awmod@dividend
  2553  0531  0868               	movf	??_RTC_display+1,w
  2554  0532  00F3               	movwf	___awmod@dividend+1
  2555  0533  120A  118A  21E5  120A  118A  	fcall	___awmod
  2556  0538  0870               	movf	?___awmod,w
  2557  0539  3E30               	addlw	48
  2558  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2559  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2560  053C  00E9               	movwf	??_RTC_display+2
  2561  053D  0869               	movf	??_RTC_display+2,w
  2562  053E  00A7               	movwf	_Date+7
  2563                           
  2564                           ;main_mini2.c: 197:     Date[9] = month / 10 + '0';
  2565  053F  300A               	movlw	10
  2566  0540  00F0               	movwf	___awdiv@divisor
  2567  0541  3000               	movlw	0
  2568  0542  00F1               	movwf	___awdiv@divisor+1
  2569  0543  0842               	movf	_month,w
  2570  0544  00E7               	movwf	??_RTC_display
  2571  0545  01E8               	clrf	??_RTC_display+1
  2572  0546  0867               	movf	??_RTC_display,w
  2573  0547  00F2               	movwf	___awdiv@dividend
  2574  0548  0868               	movf	??_RTC_display+1,w
  2575  0549  00F3               	movwf	___awdiv@dividend+1
  2576  054A  120A  118A  22FE  120A  118A  	fcall	___awdiv
  2577  054F  0870               	movf	?___awdiv,w
  2578  0550  3E30               	addlw	48
  2579  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0552  1303               	bcf	3,6	;RP1=0, select bank0
  2581  0553  00E9               	movwf	??_RTC_display+2
  2582  0554  0869               	movf	??_RTC_display+2,w
  2583  0555  00A9               	movwf	_Date+9
  2584                           
  2585                           ;main_mini2.c: 198:     Date[10] = month % 10 + '0';
  2586  0556  300A               	movlw	10
  2587  0557  00F0               	movwf	___awmod@divisor
  2588  0558  3000               	movlw	0
  2589  0559  00F1               	movwf	___awmod@divisor+1
  2590  055A  0842               	movf	_month,w
  2591  055B  00E7               	movwf	??_RTC_display
  2592  055C  01E8               	clrf	??_RTC_display+1
  2593  055D  0867               	movf	??_RTC_display,w
  2594  055E  00F2               	movwf	___awmod@dividend
  2595  055F  0868               	movf	??_RTC_display+1,w
  2596  0560  00F3               	movwf	___awmod@dividend+1
  2597  0561  120A  118A  21E5  120A  118A  	fcall	___awmod
  2598  0566  0870               	movf	?___awmod,w
  2599  0567  3E30               	addlw	48
  2600  0568  1283               	bcf	3,5	;RP0=0, select bank0
  2601  0569  1303               	bcf	3,6	;RP1=0, select bank0
  2602  056A  00E9               	movwf	??_RTC_display+2
  2603  056B  0869               	movf	??_RTC_display+2,w
  2604  056C  00AA               	movwf	_Date+10
  2605                           
  2606                           ;main_mini2.c: 199:     Date[12] = year / 10 + '0';
  2607  056D  300A               	movlw	10
  2608  056E  00F0               	movwf	___awdiv@divisor
  2609  056F  3000               	movlw	0
  2610  0570  00F1               	movwf	___awdiv@divisor+1
  2611  0571  0841               	movf	_year,w
  2612  0572  00E7               	movwf	??_RTC_display
  2613  0573  01E8               	clrf	??_RTC_display+1
  2614  0574  0867               	movf	??_RTC_display,w
  2615  0575  00F2               	movwf	___awdiv@dividend
  2616  0576  0868               	movf	??_RTC_display+1,w
  2617  0577  00F3               	movwf	___awdiv@dividend+1
  2618  0578  120A  118A  22FE  120A  118A  	fcall	___awdiv
  2619  057D  0870               	movf	?___awdiv,w
  2620  057E  3E30               	addlw	48
  2621  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0581  00E9               	movwf	??_RTC_display+2
  2624  0582  0869               	movf	??_RTC_display+2,w
  2625  0583  00AC               	movwf	_Date+12
  2626                           
  2627                           ;main_mini2.c: 200:     Date[13] = year % 10 + '0';
  2628  0584  300A               	movlw	10
  2629  0585  00F0               	movwf	___awmod@divisor
  2630  0586  3000               	movlw	0
  2631  0587  00F1               	movwf	___awmod@divisor+1
  2632  0588  0841               	movf	_year,w
  2633  0589  00E7               	movwf	??_RTC_display
  2634  058A  01E8               	clrf	??_RTC_display+1
  2635  058B  0867               	movf	??_RTC_display,w
  2636  058C  00F2               	movwf	___awmod@dividend
  2637  058D  0868               	movf	??_RTC_display+1,w
  2638  058E  00F3               	movwf	___awmod@dividend+1
  2639  058F  120A  118A  21E5  120A  118A  	fcall	___awmod
  2640  0594  0870               	movf	?___awmod,w
  2641  0595  3E30               	addlw	48
  2642  0596  1283               	bcf	3,5	;RP0=0, select bank0
  2643  0597  1303               	bcf	3,6	;RP1=0, select bank0
  2644  0598  00E9               	movwf	??_RTC_display+2
  2645  0599  0869               	movf	??_RTC_display+2,w
  2646  059A  00AD               	movwf	_Date+13
  2647  059B                     l1961:
  2648                           
  2649                           ;main_mini2.c: 203:     sprintf(sec_send, "%d", second);
  2650  059B  3017               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2651  059C  00E7               	movwf	??_RTC_display
  2652  059D  0867               	movf	??_RTC_display,w
  2653  059E  00D8               	movwf	sprintf@f
  2654  059F  0846               	movf	_second,w
  2655  05A0  00E8               	movwf	??_RTC_display+1
  2656  05A1  01E9               	clrf	??_RTC_display+2
  2657  05A2  0868               	movf	??_RTC_display+1,w
  2658  05A3  00D9               	movwf	?_sprintf+1
  2659  05A4  0869               	movf	??_RTC_display+2,w
  2660  05A5  00DA               	movwf	?_sprintf+2
  2661  05A6  3050               	movlw	(low (_sec_send| 0))& (0+255)
  2662  05A7  120A  118A  260C  120A  118A  	fcall	_sprintf
  2663  05AC                     l1963:
  2664                           
  2665                           ;main_mini2.c: 204:     sprintf(min_send, "%02d", minute);
  2666  05AC  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2667  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  2668  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  2669  05AF  00E7               	movwf	??_RTC_display
  2670  05B0  0867               	movf	??_RTC_display,w
  2671  05B1  00D8               	movwf	sprintf@f
  2672  05B2  0845               	movf	_minute,w
  2673  05B3  00E8               	movwf	??_RTC_display+1
  2674  05B4  01E9               	clrf	??_RTC_display+2
  2675  05B5  0868               	movf	??_RTC_display+1,w
  2676  05B6  00D9               	movwf	?_sprintf+1
  2677  05B7  0869               	movf	??_RTC_display+2,w
  2678  05B8  00DA               	movwf	?_sprintf+2
  2679  05B9  3048               	movlw	(low (_min_send| 0))& (0+255)
  2680  05BA  120A  118A  260C  120A  118A  	fcall	_sprintf
  2681  05BF                     l1965:
  2682                           
  2683                           ;main_mini2.c: 205:     sprintf(hour_send, "%02d", hour);
  2684  05BF  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2685  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  2686  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  2687  05C2  00E7               	movwf	??_RTC_display
  2688  05C3  0867               	movf	??_RTC_display,w
  2689  05C4  00D8               	movwf	sprintf@f
  2690  05C5  0844               	movf	_hour,w
  2691  05C6  00E8               	movwf	??_RTC_display+1
  2692  05C7  01E9               	clrf	??_RTC_display+2
  2693  05C8  0868               	movf	??_RTC_display+1,w
  2694  05C9  00D9               	movwf	?_sprintf+1
  2695  05CA  0869               	movf	??_RTC_display+2,w
  2696  05CB  00DA               	movwf	?_sprintf+2
  2697  05CC  30D4               	movlw	(low (_hour_send| 0))& (0+255)
  2698  05CD  120A  118A  260C  120A  118A  	fcall	_sprintf
  2699  05D2                     l1967:
  2700                           
  2701                           ;main_mini2.c: 206:     sprintf(day_send, "%02d", m_day);
  2702  05D2  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2703  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  2704  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  2705  05D5  00E7               	movwf	??_RTC_display
  2706  05D6  0867               	movf	??_RTC_display,w
  2707  05D7  00D8               	movwf	sprintf@f
  2708  05D8  0843               	movf	_m_day,w
  2709  05D9  00E8               	movwf	??_RTC_display+1
  2710  05DA  01E9               	clrf	??_RTC_display+2
  2711  05DB  0868               	movf	??_RTC_display+1,w
  2712  05DC  00D9               	movwf	?_sprintf+1
  2713  05DD  0869               	movf	??_RTC_display+2,w
  2714  05DE  00DA               	movwf	?_sprintf+2
  2715  05DF  30CC               	movlw	(low (_day_send| 0))& (0+255)
  2716  05E0  120A  118A  260C  120A  118A  	fcall	_sprintf
  2717  05E5                     l1969:
  2718                           
  2719                           ;main_mini2.c: 207:     sprintf(month_send, "%02d", month);
  2720  05E5  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2721  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  2722  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  2723  05E8  00E7               	movwf	??_RTC_display
  2724  05E9  0867               	movf	??_RTC_display,w
  2725  05EA  00D8               	movwf	sprintf@f
  2726  05EB  0842               	movf	_month,w
  2727  05EC  00E8               	movwf	??_RTC_display+1
  2728  05ED  01E9               	clrf	??_RTC_display+2
  2729  05EE  0868               	movf	??_RTC_display+1,w
  2730  05EF  00D9               	movwf	?_sprintf+1
  2731  05F0  0869               	movf	??_RTC_display+2,w
  2732  05F1  00DA               	movwf	?_sprintf+2
  2733  05F2  30C4               	movlw	(low (_month_send| 0))& (0+255)
  2734  05F3  120A  118A  260C  120A  118A  	fcall	_sprintf
  2735  05F8                     l1971:
  2736                           
  2737                           ;main_mini2.c: 208:     sprintf(year_send, "%2d", year);
  2738  05F8  3010               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2739  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  2740  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  2741  05FB  00E7               	movwf	??_RTC_display
  2742  05FC  0867               	movf	??_RTC_display,w
  2743  05FD  00D8               	movwf	sprintf@f
  2744  05FE  0841               	movf	_year,w
  2745  05FF  00E8               	movwf	??_RTC_display+1
  2746  0600  01E9               	clrf	??_RTC_display+2
  2747  0601  0868               	movf	??_RTC_display+1,w
  2748  0602  00D9               	movwf	?_sprintf+1
  2749  0603  0869               	movf	??_RTC_display+2,w
  2750  0604  00DA               	movwf	?_sprintf+2
  2751  0605  30BC               	movlw	(low (_year_send| 0))& (0+255)
  2752  0606  120A  118A  260C  120A  118A  	fcall	_sprintf
  2753  060B                     l115:
  2754  060B  0008               	return
  2755  060C                     __end_of_RTC_display:
  2756                           
  2757                           	psect	text13
  2758  060C                     __ptext13:	
  2759 ;; *************** function _sprintf *****************
  2760 ;; Defined at:
  2761 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  sp              1    wreg     PTR unsigned char 
  2764 ;;		 -> year_send(8), month_send(8), day_send(8), hour_send(8), 
  2765 ;;		 -> min_send(8), sec_send(8), 
  2766 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2767 ;;		 -> STR_7(4), STR_6(5), STR_5(5), STR_4(5), 
  2768 ;;		 -> STR_3(5), STR_2(3), 
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;  sp              1   14[BANK0 ] PTR unsigned char 
  2771 ;;		 -> year_send(8), month_send(8), day_send(8), hour_send(8), 
  2772 ;;		 -> min_send(8), sec_send(8), 
  2773 ;;  tmpval          4    0        struct .
  2774 ;;  width           2   11[BANK0 ] int 
  2775 ;;  val             2    8[BANK0 ] unsigned int 
  2776 ;;  cp              2    0        PTR const unsigned char 
  2777 ;;  len             2    0        unsigned int 
  2778 ;;  c               1   13[BANK0 ] unsigned char 
  2779 ;;  flag            1   10[BANK0 ] unsigned char 
  2780 ;;  prec            1    7[BANK0 ] char 
  2781 ;;  ap              1    6[BANK0 ] PTR void [1]
  2782 ;;		 -> ?_sprintf(2), 
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  2    0[BANK0 ] int 
  2785 ;; Registers used:
  2786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2792 ;;      Params:         0       3       0       0       0
  2793 ;;      Locals:         0       9       0       0       0
  2794 ;;      Temps:          0       3       0       0       0
  2795 ;;      Totals:         0      15       0       0       0
  2796 ;;Total ram usage:       15 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    1
  2799 ;; This function calls:
  2800 ;;		___lwdiv
  2801 ;;		___lwmod
  2802 ;;		___wmul
  2803 ;;		_isdigit
  2804 ;; This function is called by:
  2805 ;;		_RTC_display
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           
  2810                           ;psect for function _sprintf
  2811  060C                     _sprintf:
  2812                           
  2813                           ;incstack = 0
  2814                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2815                           ;sprintf@sp stored from wreg
  2816  060C  1283               	bcf	3,5	;RP0=0, select bank0
  2817  060D  1303               	bcf	3,6	;RP1=0, select bank0
  2818  060E  00E6               	movwf	sprintf@sp
  2819  060F                     l1705:
  2820                           
  2821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  2822  060F  3059               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2823  0610  00DB               	movwf	??_sprintf
  2824  0611  085B               	movf	??_sprintf,w
  2825  0612  00DE               	movwf	sprintf@ap
  2826                           
  2827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2828  0613  2FC7               	goto	l1809
  2829  0614                     l1707:
  2830                           
  2831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2832  0614  3025               	movlw	37
  2833  0615  0665               	xorwf	sprintf@c,w
  2834  0616  1903               	btfsc	3,2
  2835  0617  2E19               	goto	u1221
  2836  0618  2E1A               	goto	u1220
  2837  0619                     u1221:
  2838  0619  2E26               	goto	l1713
  2839  061A                     u1220:
  2840  061A                     l1709:
  2841                           
  2842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2843  061A  0865               	movf	sprintf@c,w
  2844  061B  00DB               	movwf	??_sprintf
  2845  061C  0866               	movf	sprintf@sp,w
  2846  061D  0084               	movwf	4
  2847  061E  085B               	movf	??_sprintf,w
  2848  061F  1383               	bcf	3,7	;select IRP bank0
  2849  0620  0080               	movwf	0
  2850  0621                     l1711:
  2851  0621  3001               	movlw	1
  2852  0622  00DB               	movwf	??_sprintf
  2853  0623  085B               	movf	??_sprintf,w
  2854  0624  07E6               	addwf	sprintf@sp,f
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2857  0625  2FC7               	goto	l1809
  2858  0626                     l1713:
  2859                           
  2860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2861  0626  01E3               	clrf	sprintf@width
  2862  0627  01E4               	clrf	sprintf@width+1
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2865  0628  01E2               	clrf	sprintf@flag
  2866  0629  2E2F               	goto	l1719
  2867  062A                     l407:	
  2868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 596:    case '0':
  2869                           
  2870                           
  2871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  2872  062A  1562               	bsf	sprintf@flag,2
  2873  062B                     l1715:
  2874                           
  2875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 598:     f++;
  2876  062B  3001               	movlw	1
  2877  062C  00DB               	movwf	??_sprintf
  2878  062D  085B               	movf	??_sprintf,w
  2879  062E  07D8               	addwf	sprintf@f,f
  2880  062F                     l1719:	
  2881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  2882                           
  2883  062F  0858               	movf	sprintf@f,w
  2884  0630  0084               	movwf	4
  2885  0631  120A  118A  200D  120A  118A  	fcall	stringdir
  2886  0636  00DB               	movwf	??_sprintf
  2887  0637  01DC               	clrf	??_sprintf+1
  2888                           
  2889                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2890                           ; Switch size 1, requested type "simple"
  2891                           ; Number of cases is 1, Range of values is 0 to 0
  2892                           ; switch strategies available:
  2893                           ; Name         Instructions Cycles
  2894                           ; simple_byte            4     3 (average)
  2895                           ; direct_byte           11     8 (fixed)
  2896                           ; jumptable            260     6 (fixed)
  2897                           ;	Chosen strategy is simple_byte
  2898  0638  085C               	movf	??_sprintf+1,w
  2899  0639  3A00               	xorlw	0	; case 0
  2900  063A  1903               	skipnz
  2901  063B  2E3D               	goto	l2069
  2902  063C  2E42               	goto	l1721
  2903  063D                     l2069:
  2904                           
  2905                           ; Switch size 1, requested type "simple"
  2906                           ; Number of cases is 1, Range of values is 48 to 48
  2907                           ; switch strategies available:
  2908                           ; Name         Instructions Cycles
  2909                           ; simple_byte            4     3 (average)
  2910                           ; direct_byte           14    11 (fixed)
  2911                           ; jumptable            263     9 (fixed)
  2912                           ;	Chosen strategy is simple_byte
  2913  063D  085B               	movf	??_sprintf,w
  2914  063E  3A30               	xorlw	48	; case 48
  2915  063F  1903               	skipnz
  2916  0640  2E2A               	goto	l407
  2917  0641  2E42               	goto	l1721
  2918  0642                     l1721:
  2919                           
  2920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2921  0642  0858               	movf	sprintf@f,w
  2922  0643  0084               	movwf	4
  2923  0644  120A  118A  200D  120A  118A  	fcall	stringdir
  2924  0649  120A  158A  2790  120A  118A  	fcall	_isdigit
  2925  064E  1C03               	btfss	3,0
  2926  064F  2E51               	goto	u1231
  2927  0650  2E52               	goto	u1230
  2928  0651                     u1231:
  2929  0651  2E92               	goto	l1735
  2930  0652                     u1230:
  2931  0652                     l1723:
  2932                           
  2933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2934  0652  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0653  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0654  01E3               	clrf	sprintf@width
  2937  0655  01E4               	clrf	sprintf@width+1
  2938  0656                     l1725:
  2939                           
  2940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2941  0656  300A               	movlw	10
  2942  0657  00F0               	movwf	___wmul@multiplier
  2943  0658  3000               	movlw	0
  2944  0659  00F1               	movwf	___wmul@multiplier+1
  2945  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2946  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2947  065C  0864               	movf	sprintf@width+1,w
  2948  065D  00F3               	movwf	___wmul@multiplicand+1
  2949  065E  0863               	movf	sprintf@width,w
  2950  065F  00F2               	movwf	___wmul@multiplicand
  2951  0660  120A  118A  2035  120A  118A  	fcall	___wmul
  2952  0665  0871               	movf	?___wmul+1,w
  2953  0666  1283               	bcf	3,5	;RP0=0, select bank0
  2954  0667  1303               	bcf	3,6	;RP1=0, select bank0
  2955  0668  00E4               	movwf	sprintf@width+1
  2956  0669  0870               	movf	?___wmul,w
  2957  066A  00E3               	movwf	sprintf@width
  2958  066B                     l1727:
  2959                           
  2960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2961  066B  0858               	movf	sprintf@f,w
  2962  066C  0084               	movwf	4
  2963  066D  120A  118A  200D  120A  118A  	fcall	stringdir
  2964  0672  3ED0               	addlw	208
  2965  0673  00DB               	movwf	??_sprintf
  2966  0674  30FF               	movlw	255
  2967  0675  1803               	skipnc
  2968  0676  3000               	movlw	0
  2969  0677  00DC               	movwf	??_sprintf+1
  2970  0678  085B               	movf	??_sprintf,w
  2971  0679  07E3               	addwf	sprintf@width,f
  2972  067A  1803               	skipnc
  2973  067B  0AE4               	incf	sprintf@width+1,f
  2974  067C  085C               	movf	??_sprintf+1,w
  2975  067D  07E4               	addwf	sprintf@width+1,f
  2976  067E                     l1729:
  2977  067E  3001               	movlw	1
  2978  067F  00DB               	movwf	??_sprintf
  2979  0680  085B               	movf	??_sprintf,w
  2980  0681  07D8               	addwf	sprintf@f,f
  2981  0682                     l1731:
  2982                           
  2983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2984  0682  0858               	movf	sprintf@f,w
  2985  0683  0084               	movwf	4
  2986  0684  120A  118A  200D  120A  118A  	fcall	stringdir
  2987  0689  120A  158A  2790  120A  118A  	fcall	_isdigit
  2988  068E  1803               	btfsc	3,0
  2989  068F  2E91               	goto	u1241
  2990  0690  2E92               	goto	u1240
  2991  0691                     u1241:
  2992  0691  2E56               	goto	l1725
  2993  0692                     u1240:
  2994  0692                     l1735:
  2995  0692  3001               	movlw	1
  2996  0693  1283               	bcf	3,5	;RP0=0, select bank0
  2997  0694  1303               	bcf	3,6	;RP1=0, select bank0
  2998  0695  07D8               	addwf	sprintf@f,f
  2999  0696  30FF               	movlw	-1
  3000  0697  0758               	addwf	sprintf@f,w
  3001  0698  0084               	movwf	4
  3002  0699  120A  118A  200D  120A  118A  	fcall	stringdir
  3003  069E  00E5               	movwf	sprintf@c
  3004  069F  00DB               	movwf	??_sprintf
  3005  06A0  01DC               	clrf	??_sprintf+1
  3006                           
  3007                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3008                           ; Switch size 1, requested type "simple"
  3009                           ; Number of cases is 1, Range of values is 0 to 0
  3010                           ; switch strategies available:
  3011                           ; Name         Instructions Cycles
  3012                           ; simple_byte            4     3 (average)
  3013                           ; direct_byte           11     8 (fixed)
  3014                           ; jumptable            260     6 (fixed)
  3015                           ;	Chosen strategy is simple_byte
  3016  06A1  085C               	movf	??_sprintf+1,w
  3017  06A2  3A00               	xorlw	0	; case 0
  3018  06A3  1903               	skipnz
  3019  06A4  2EA6               	goto	l2071
  3020  06A5  2FC7               	goto	l1809
  3021  06A6                     l2071:
  3022                           
  3023                           ; Switch size 1, requested type "simple"
  3024                           ; Number of cases is 3, Range of values is 0 to 105
  3025                           ; switch strategies available:
  3026                           ; Name         Instructions Cycles
  3027                           ; simple_byte           10     6 (average)
  3028                           ; jumptable            260     6 (fixed)
  3029                           ;	Chosen strategy is simple_byte
  3030  06A6  085B               	movf	??_sprintf,w
  3031  06A7  3A00               	xorlw	0	; case 0
  3032  06A8  1903               	skipnz
  3033  06A9  2FD9               	goto	l1811
  3034  06AA  3A64               	xorlw	100	; case 100
  3035  06AB  1903               	skipnz
  3036  06AC  2EB1               	goto	l1737
  3037  06AD  3A0D               	xorlw	13	; case 105
  3038  06AE  1903               	skipnz
  3039  06AF  2EB1               	goto	l1737
  3040  06B0  2FC7               	goto	l1809
  3041  06B1                     l1737:
  3042                           
  3043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3044  06B1  085E               	movf	sprintf@ap,w
  3045  06B2  0084               	movwf	4
  3046  06B3  1383               	bcf	3,7	;select IRP bank0
  3047  06B4  0800               	movf	0,w
  3048  06B5  00E0               	movwf	sprintf@val
  3049  06B6  0A84               	incf	4,f
  3050  06B7  0800               	movf	0,w
  3051  06B8  00E1               	movwf	sprintf@val+1
  3052  06B9                     l1739:
  3053  06B9  3002               	movlw	2
  3054  06BA  00DB               	movwf	??_sprintf
  3055  06BB  085B               	movf	??_sprintf,w
  3056  06BC  07DE               	addwf	sprintf@ap,f
  3057  06BD                     l1741:
  3058                           
  3059                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3060  06BD  1FE1               	btfss	sprintf@val+1,7
  3061  06BE  2EC0               	goto	u1251
  3062  06BF  2EC1               	goto	u1250
  3063  06C0                     u1251:
  3064  06C0  2ECA               	goto	l1747
  3065  06C1                     u1250:
  3066  06C1                     l1743:
  3067                           
  3068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3069  06C1  3003               	movlw	3
  3070  06C2  00DB               	movwf	??_sprintf
  3071  06C3  085B               	movf	??_sprintf,w
  3072  06C4  04E2               	iorwf	sprintf@flag,f
  3073  06C5                     l1745:
  3074                           
  3075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3076  06C5  09E0               	comf	sprintf@val,f
  3077  06C6  09E1               	comf	sprintf@val+1,f
  3078  06C7  0AE0               	incf	sprintf@val,f
  3079  06C8  1903               	skipnz
  3080  06C9  0AE1               	incf	sprintf@val+1,f
  3081  06CA                     l1747:
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3084  06CA  01E5               	clrf	sprintf@c
  3085  06CB  0AE5               	incf	sprintf@c,f
  3086  06CC                     l1753:
  3087                           
  3088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3089  06CC  0865               	movf	sprintf@c,w
  3090  06CD  00DB               	movwf	??_sprintf
  3091  06CE  075B               	addwf	??_sprintf,w
  3092  06CF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3093  06D0  0084               	movwf	4
  3094  06D1  120A  118A  200D  120A  118A  	fcall	stringdir
  3095  06D6  00DC               	movwf	??_sprintf+1
  3096  06D7  120A  118A  200D  120A  118A  	fcall	stringdir
  3097  06DC  00DD               	movwf	??_sprintf+2
  3098  06DD  085D               	movf	??_sprintf+2,w
  3099  06DE  0261               	subwf	sprintf@val+1,w
  3100  06DF  1D03               	skipz
  3101  06E0  2EE3               	goto	u1265
  3102  06E1  085C               	movf	??_sprintf+1,w
  3103  06E2  0260               	subwf	sprintf@val,w
  3104  06E3                     u1265:
  3105  06E3  1803               	skipnc
  3106  06E4  2EE6               	goto	u1261
  3107  06E5  2EE7               	goto	u1260
  3108  06E6                     u1261:
  3109  06E6  2EE8               	goto	l1757
  3110  06E7                     u1260:
  3111  06E7  2EF2               	goto	l1759
  3112  06E8                     l1757:
  3113  06E8  3001               	movlw	1
  3114  06E9  00DB               	movwf	??_sprintf
  3115  06EA  085B               	movf	??_sprintf,w
  3116  06EB  07E5               	addwf	sprintf@c,f
  3117  06EC  3005               	movlw	5
  3118  06ED  0665               	xorwf	sprintf@c,w
  3119  06EE  1D03               	btfss	3,2
  3120  06EF  2EF1               	goto	u1271
  3121  06F0  2EF2               	goto	u1270
  3122  06F1                     u1271:
  3123  06F1  2ECC               	goto	l1753
  3124  06F2                     u1270:
  3125  06F2                     l1759:
  3126                           
  3127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3128  06F2  0863               	movf	sprintf@width,w
  3129  06F3  0464               	iorwf	sprintf@width+1,w
  3130  06F4  1903               	btfsc	3,2
  3131  06F5  2EF7               	goto	u1281
  3132  06F6  2EF8               	goto	u1280
  3133  06F7                     u1281:
  3134  06F7  2F04               	goto	l425
  3135  06F8                     u1280:
  3136  06F8                     l1761:
  3137  06F8  0862               	movf	sprintf@flag,w
  3138  06F9  3903               	andlw	3
  3139  06FA  1903               	btfsc	3,2
  3140  06FB  2EFD               	goto	u1291
  3141  06FC  2EFE               	goto	u1290
  3142  06FD                     u1291:
  3143  06FD  2F04               	goto	l425
  3144  06FE                     u1290:
  3145  06FE                     l1763:
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3148  06FE  30FF               	movlw	255
  3149  06FF  07E3               	addwf	sprintf@width,f
  3150  0700  1803               	skipnc
  3151  0701  0AE4               	incf	sprintf@width+1,f
  3152  0702  30FF               	movlw	255
  3153  0703  07E4               	addwf	sprintf@width+1,f
  3154  0704                     l425:
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3157  0704  0864               	movf	sprintf@width+1,w
  3158  0705  3A80               	xorlw	128
  3159  0706  3C80               	sublw	128
  3160  0707  1D03               	skipz
  3161  0708  2F0B               	goto	u1305
  3162  0709  0863               	movf	sprintf@width,w
  3163  070A  0265               	subwf	sprintf@c,w
  3164  070B                     u1305:
  3165  070B  1803               	skipnc
  3166  070C  2F0E               	goto	u1301
  3167  070D  2F0F               	goto	u1300
  3168  070E                     u1301:
  3169  070E  2F1B               	goto	l1767
  3170  070F                     u1300:
  3171  070F                     l1765:
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3174  070F  1283               	bcf	3,5	;RP0=0, select bank0
  3175  0710  1303               	bcf	3,6	;RP1=0, select bank0
  3176  0711  0865               	movf	sprintf@c,w
  3177  0712  00DB               	movwf	??_sprintf
  3178  0713  01DC               	clrf	??_sprintf+1
  3179  0714  085B               	movf	??_sprintf,w
  3180  0715  02E3               	subwf	sprintf@width,f
  3181  0716  085C               	movf	??_sprintf+1,w
  3182  0717  1C03               	skipc
  3183  0718  03E4               	decf	sprintf@width+1,f
  3184  0719  02E4               	subwf	sprintf@width+1,f
  3185  071A  2F1F               	goto	l1769
  3186  071B                     l1767:
  3187                           
  3188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3189  071B  1283               	bcf	3,5	;RP0=0, select bank0
  3190  071C  1303               	bcf	3,6	;RP1=0, select bank0
  3191  071D  01E3               	clrf	sprintf@width
  3192  071E  01E4               	clrf	sprintf@width+1
  3193  071F                     l1769:
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  3196  071F  1D62               	btfss	sprintf@flag,2
  3197  0720  2F22               	goto	u1311
  3198  0721  2F23               	goto	u1310
  3199  0722                     u1311:
  3200  0722  2F52               	goto	l1785
  3201  0723                     u1310:
  3202  0723                     l1771:
  3203                           
  3204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  3205  0723  0862               	movf	sprintf@flag,w
  3206  0724  3903               	andlw	3
  3207  0725  1903               	btfsc	3,2
  3208  0726  2F28               	goto	u1321
  3209  0727  2F29               	goto	u1320
  3210  0728                     u1321:
  3211  0728  2F34               	goto	l1777
  3212  0729                     u1320:
  3213  0729                     l1773:
  3214                           
  3215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  3216  0729  302D               	movlw	45
  3217  072A  00DB               	movwf	??_sprintf
  3218  072B  0866               	movf	sprintf@sp,w
  3219  072C  0084               	movwf	4
  3220  072D  085B               	movf	??_sprintf,w
  3221  072E  1383               	bcf	3,7	;select IRP bank0
  3222  072F  0080               	movwf	0
  3223  0730                     l1775:
  3224  0730  3001               	movlw	1
  3225  0731  00DB               	movwf	??_sprintf
  3226  0732  085B               	movf	??_sprintf,w
  3227  0733  07E6               	addwf	sprintf@sp,f
  3228  0734                     l1777:
  3229                           
  3230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  3231  0734  0863               	movf	sprintf@width,w
  3232  0735  0464               	iorwf	sprintf@width+1,w
  3233  0736  1903               	btfsc	3,2
  3234  0737  2F39               	goto	u1331
  3235  0738  2F3A               	goto	u1330
  3236  0739                     u1331:
  3237  0739  2F80               	goto	l1799
  3238  073A                     u1330:
  3239  073A                     l1779:
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  3242  073A  3030               	movlw	48
  3243  073B  00DB               	movwf	??_sprintf
  3244  073C  0866               	movf	sprintf@sp,w
  3245  073D  0084               	movwf	4
  3246  073E  085B               	movf	??_sprintf,w
  3247  073F  1383               	bcf	3,7	;select IRP bank0
  3248  0740  0080               	movwf	0
  3249  0741                     l1781:
  3250  0741  3001               	movlw	1
  3251  0742  00DB               	movwf	??_sprintf
  3252  0743  085B               	movf	??_sprintf,w
  3253  0744  07E6               	addwf	sprintf@sp,f
  3254  0745                     l1783:
  3255  0745  30FF               	movlw	255
  3256  0746  07E3               	addwf	sprintf@width,f
  3257  0747  1803               	skipnc
  3258  0748  0AE4               	incf	sprintf@width+1,f
  3259  0749  30FF               	movlw	255
  3260  074A  07E4               	addwf	sprintf@width+1,f
  3261  074B  0863               	movf	sprintf@width,w
  3262  074C  0464               	iorwf	sprintf@width+1,w
  3263  074D  1D03               	btfss	3,2
  3264  074E  2F50               	goto	u1341
  3265  074F  2F51               	goto	u1340
  3266  0750                     u1341:
  3267  0750  2F3A               	goto	l1779
  3268  0751                     u1340:
  3269  0751  2F80               	goto	l1799
  3270  0752                     l1785:
  3271                           
  3272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3273  0752  0863               	movf	sprintf@width,w
  3274  0753  0464               	iorwf	sprintf@width+1,w
  3275  0754  1903               	btfsc	3,2
  3276  0755  2F57               	goto	u1351
  3277  0756  2F58               	goto	u1350
  3278  0757                     u1351:
  3279  0757  2F6F               	goto	l1793
  3280  0758                     u1350:
  3281  0758                     l1787:
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3284  0758  3020               	movlw	32
  3285  0759  00DB               	movwf	??_sprintf
  3286  075A  0866               	movf	sprintf@sp,w
  3287  075B  0084               	movwf	4
  3288  075C  085B               	movf	??_sprintf,w
  3289  075D  1383               	bcf	3,7	;select IRP bank0
  3290  075E  0080               	movwf	0
  3291  075F                     l1789:
  3292  075F  3001               	movlw	1
  3293  0760  00DB               	movwf	??_sprintf
  3294  0761  085B               	movf	??_sprintf,w
  3295  0762  07E6               	addwf	sprintf@sp,f
  3296  0763                     l1791:
  3297  0763  30FF               	movlw	255
  3298  0764  07E3               	addwf	sprintf@width,f
  3299  0765  1803               	skipnc
  3300  0766  0AE4               	incf	sprintf@width+1,f
  3301  0767  30FF               	movlw	255
  3302  0768  07E4               	addwf	sprintf@width+1,f
  3303  0769  0863               	movf	sprintf@width,w
  3304  076A  0464               	iorwf	sprintf@width+1,w
  3305  076B  1D03               	btfss	3,2
  3306  076C  2F6E               	goto	u1361
  3307  076D  2F6F               	goto	u1360
  3308  076E                     u1361:
  3309  076E  2F58               	goto	l1787
  3310  076F                     u1360:
  3311  076F                     l1793:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  3314  076F  0862               	movf	sprintf@flag,w
  3315  0770  3903               	andlw	3
  3316  0771  1903               	btfsc	3,2
  3317  0772  2F74               	goto	u1371
  3318  0773  2F75               	goto	u1370
  3319  0774                     u1371:
  3320  0774  2F80               	goto	l1799
  3321  0775                     u1370:
  3322  0775                     l1795:
  3323                           
  3324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3325  0775  302D               	movlw	45
  3326  0776  00DB               	movwf	??_sprintf
  3327  0777  0866               	movf	sprintf@sp,w
  3328  0778  0084               	movwf	4
  3329  0779  085B               	movf	??_sprintf,w
  3330  077A  1383               	bcf	3,7	;select IRP bank0
  3331  077B  0080               	movwf	0
  3332  077C                     l1797:
  3333  077C  3001               	movlw	1
  3334  077D  00DB               	movwf	??_sprintf
  3335  077E  085B               	movf	??_sprintf,w
  3336  077F  07E6               	addwf	sprintf@sp,f
  3337  0780                     l1799:
  3338                           
  3339                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3340  0780  0865               	movf	sprintf@c,w
  3341  0781  00DB               	movwf	??_sprintf
  3342  0782  085B               	movf	??_sprintf,w
  3343  0783  00DF               	movwf	sprintf@prec
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3346  0784  2FBE               	goto	l1807
  3347  0785                     l1801:
  3348                           
  3349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3350  0785  300A               	movlw	10
  3351  0786  00F8               	movwf	___lwmod@divisor
  3352  0787  3000               	movlw	0
  3353  0788  00F9               	movwf	___lwmod@divisor+1
  3354  0789  085F               	movf	sprintf@prec,w
  3355  078A  00DB               	movwf	??_sprintf
  3356  078B  075B               	addwf	??_sprintf,w
  3357  078C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3358  078D  0084               	movwf	4
  3359  078E  120A  118A  200D  120A  118A  	fcall	stringdir
  3360  0793  00F0               	movwf	___lwdiv@divisor
  3361  0794  120A  118A  200D  120A  118A  	fcall	stringdir
  3362  0799  00F1               	movwf	___lwdiv@divisor+1
  3363  079A  0861               	movf	sprintf@val+1,w
  3364  079B  00F3               	movwf	___lwdiv@dividend+1
  3365  079C  0860               	movf	sprintf@val,w
  3366  079D  00F2               	movwf	___lwdiv@dividend
  3367  079E  120A  118A  2150  120A  118A  	fcall	___lwdiv
  3368  07A3  0871               	movf	?___lwdiv+1,w
  3369  07A4  00FB               	movwf	___lwmod@dividend+1
  3370  07A5  0870               	movf	?___lwdiv,w
  3371  07A6  00FA               	movwf	___lwmod@dividend
  3372  07A7  120A  118A  2116  120A  118A  	fcall	___lwmod
  3373  07AC  0878               	movf	?___lwmod,w
  3374  07AD  3E30               	addlw	48
  3375  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  3376  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  3377  07B0  00DC               	movwf	??_sprintf+1
  3378  07B1  085C               	movf	??_sprintf+1,w
  3379  07B2  00E5               	movwf	sprintf@c
  3380  07B3                     l1803:
  3381                           
  3382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3383  07B3  0865               	movf	sprintf@c,w
  3384  07B4  00DB               	movwf	??_sprintf
  3385  07B5  0866               	movf	sprintf@sp,w
  3386  07B6  0084               	movwf	4
  3387  07B7  085B               	movf	??_sprintf,w
  3388  07B8  1383               	bcf	3,7	;select IRP bank0
  3389  07B9  0080               	movwf	0
  3390  07BA                     l1805:
  3391  07BA  3001               	movlw	1
  3392  07BB  00DB               	movwf	??_sprintf
  3393  07BC  085B               	movf	??_sprintf,w
  3394  07BD  07E6               	addwf	sprintf@sp,f
  3395  07BE                     l1807:
  3396                           
  3397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3398  07BE  30FF               	movlw	255
  3399  07BF  00DB               	movwf	??_sprintf
  3400  07C0  085B               	movf	??_sprintf,w
  3401  07C1  07DF               	addwf	sprintf@prec,f
  3402  07C2  0A5F               	incf	sprintf@prec,w
  3403  07C3  1D03               	btfss	3,2
  3404  07C4  2FC6               	goto	u1381
  3405  07C5  2FC7               	goto	u1380
  3406  07C6                     u1381:
  3407  07C6  2F85               	goto	l1801
  3408  07C7                     u1380:
  3409  07C7                     l1809:
  3410                           
  3411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3412  07C7  3001               	movlw	1
  3413  07C8  07D8               	addwf	sprintf@f,f
  3414  07C9  30FF               	movlw	-1
  3415  07CA  0758               	addwf	sprintf@f,w
  3416  07CB  0084               	movwf	4
  3417  07CC  120A  118A  200D  120A  118A  	fcall	stringdir
  3418  07D1  00DB               	movwf	??_sprintf
  3419  07D2  085B               	movf	??_sprintf,w
  3420  07D3  00E5               	movwf	sprintf@c
  3421  07D4  0865               	movf	sprintf@c,w
  3422  07D5  1D03               	btfss	3,2
  3423  07D6  2FD8               	goto	u1391
  3424  07D7  2FD9               	goto	u1390
  3425  07D8                     u1391:
  3426  07D8  2E14               	goto	l1707
  3427  07D9                     u1390:
  3428  07D9                     l1811:
  3429                           
  3430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3431  07D9  0866               	movf	sprintf@sp,w
  3432  07DA  0084               	movwf	4
  3433  07DB  1383               	bcf	3,7	;select IRP bank0
  3434  07DC  0180               	clrf	0
  3435  07DD                     l442:
  3436  07DD  0008               	return
  3437  07DE                     __end_of_sprintf:
  3438                           
  3439                           	psect	text14
  3440  0F90                     __ptext14:	
  3441 ;; *************** function _isdigit *****************
  3442 ;; Defined at:
  3443 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;  c               1    wreg     unsigned char 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  c               1    1[COMMON] unsigned char 
  3448 ;; Return value:  Size  Location     Type
  3449 ;;		None               void
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3457 ;;      Params:         0       0       0       0       0
  3458 ;;      Locals:         2       0       0       0       0
  3459 ;;      Temps:          0       0       0       0       0
  3460 ;;      Totals:         2       0       0       0       0
  3461 ;;Total ram usage:        2 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_sprintf
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           
  3471                           ;psect for function _isdigit
  3472  0F90                     _isdigit:
  3473                           
  3474                           ;incstack = 0
  3475                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3476                           ;isdigit@c stored from wreg
  3477  0F90  00F1               	movwf	isdigit@c
  3478  0F91                     l1573:
  3479  0F91  01F0               	clrf	_isdigit$1032
  3480  0F92                     l1575:
  3481  0F92  303A               	movlw	58
  3482  0F93  0271               	subwf	isdigit@c,w
  3483  0F94  1803               	skipnc
  3484  0F95  2F97               	goto	u921
  3485  0F96  2F98               	goto	u920
  3486  0F97                     u921:
  3487  0F97  2FA0               	goto	l1581
  3488  0F98                     u920:
  3489  0F98                     l1577:
  3490  0F98  3030               	movlw	48
  3491  0F99  0271               	subwf	isdigit@c,w
  3492  0F9A  1C03               	skipc
  3493  0F9B  2F9D               	goto	u931
  3494  0F9C  2F9E               	goto	u930
  3495  0F9D                     u931:
  3496  0F9D  2FA0               	goto	l1581
  3497  0F9E                     u930:
  3498  0F9E                     l1579:
  3499  0F9E  01F0               	clrf	_isdigit$1032
  3500  0F9F  0AF0               	incf	_isdigit$1032,f
  3501  0FA0                     l1581:
  3502  0FA0  0C70               	rrf	_isdigit$1032,w
  3503  0FA1                     l899:
  3504  0FA1  0008               	return
  3505  0FA2                     __end_of_isdigit:
  3506                           
  3507                           	psect	text15
  3508  0035                     __ptext15:	
  3509 ;; *************** function ___wmul *****************
  3510 ;; Defined at:
  3511 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  multiplier      2    0[COMMON] unsigned int 
  3514 ;;  multiplicand    2    2[COMMON] unsigned int 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  product         2    4[COMMON] unsigned int 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  2    0[COMMON] unsigned int 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3526 ;;      Params:         4       0       0       0       0
  3527 ;;      Locals:         2       0       0       0       0
  3528 ;;      Temps:          0       0       0       0       0
  3529 ;;      Totals:         6       0       0       0       0
  3530 ;;Total ram usage:        6 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_sprintf
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           
  3540                           ;psect for function ___wmul
  3541  0035                     ___wmul:
  3542  0035                     l1585:	
  3543                           ;incstack = 0
  3544                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3545                           
  3546  0035  01F4               	clrf	___wmul@product
  3547  0036  01F5               	clrf	___wmul@product+1
  3548  0037                     l1587:
  3549  0037  1C70               	btfss	___wmul@multiplier,0
  3550  0038  283A               	goto	u941
  3551  0039  283B               	goto	u940
  3552  003A                     u941:
  3553  003A  2841               	goto	l446
  3554  003B                     u940:
  3555  003B                     l1589:
  3556  003B  0872               	movf	___wmul@multiplicand,w
  3557  003C  07F4               	addwf	___wmul@product,f
  3558  003D  1803               	skipnc
  3559  003E  0AF5               	incf	___wmul@product+1,f
  3560  003F  0873               	movf	___wmul@multiplicand+1,w
  3561  0040  07F5               	addwf	___wmul@product+1,f
  3562  0041                     l446:
  3563  0041  3001               	movlw	1
  3564  0042                     u955:
  3565  0042  1003               	clrc
  3566  0043  0DF2               	rlf	___wmul@multiplicand,f
  3567  0044  0DF3               	rlf	___wmul@multiplicand+1,f
  3568  0045  3EFF               	addlw	-1
  3569  0046  1D03               	skipz
  3570  0047  2842               	goto	u955
  3571  0048                     l1591:
  3572  0048  3001               	movlw	1
  3573  0049                     u965:
  3574  0049  1003               	clrc
  3575  004A  0CF1               	rrf	___wmul@multiplier+1,f
  3576  004B  0CF0               	rrf	___wmul@multiplier,f
  3577  004C  3EFF               	addlw	-1
  3578  004D  1D03               	skipz
  3579  004E  2849               	goto	u965
  3580  004F                     l1593:
  3581  004F  0870               	movf	___wmul@multiplier,w
  3582  0050  0471               	iorwf	___wmul@multiplier+1,w
  3583  0051  1D03               	btfss	3,2
  3584  0052  2854               	goto	u971
  3585  0053  2855               	goto	u970
  3586  0054                     u971:
  3587  0054  2837               	goto	l1587
  3588  0055                     u970:
  3589  0055                     l1595:
  3590  0055  0875               	movf	___wmul@product+1,w
  3591  0056  00F1               	movwf	?___wmul+1
  3592  0057  0874               	movf	___wmul@product,w
  3593  0058  00F0               	movwf	?___wmul
  3594  0059                     l448:
  3595  0059  0008               	return
  3596  005A                     __end_of___wmul:
  3597                           
  3598                           	psect	text16
  3599  0116                     __ptext16:	
  3600 ;; *************** function ___lwmod *****************
  3601 ;; Defined at:
  3602 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  divisor         2    8[COMMON] unsigned int 
  3605 ;;  dividend        2   10[COMMON] unsigned int 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  counter         1   13[COMMON] unsigned char 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  2    8[COMMON] unsigned int 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3617 ;;      Params:         4       0       0       0       0
  3618 ;;      Locals:         1       0       0       0       0
  3619 ;;      Temps:          1       0       0       0       0
  3620 ;;      Totals:         6       0       0       0       0
  3621 ;;Total ram usage:        6 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; This function calls:
  3624 ;;		Nothing
  3625 ;; This function is called by:
  3626 ;;		_sprintf
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           
  3631                           ;psect for function ___lwmod
  3632  0116                     ___lwmod:
  3633  0116                     l1663:	
  3634                           ;incstack = 0
  3635                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3636                           
  3637  0116  0878               	movf	___lwmod@divisor,w
  3638  0117  0479               	iorwf	___lwmod@divisor+1,w
  3639  0118  1903               	btfsc	3,2
  3640  0119  291B               	goto	u1141
  3641  011A  291C               	goto	u1140
  3642  011B                     u1141:
  3643  011B  294B               	goto	l1681
  3644  011C                     u1140:
  3645  011C                     l1665:
  3646  011C  01FD               	clrf	___lwmod@counter
  3647  011D  0AFD               	incf	___lwmod@counter,f
  3648  011E  292A               	goto	l1671
  3649  011F                     l1667:
  3650  011F  3001               	movlw	1
  3651  0120                     u1155:
  3652  0120  1003               	clrc
  3653  0121  0DF8               	rlf	___lwmod@divisor,f
  3654  0122  0DF9               	rlf	___lwmod@divisor+1,f
  3655  0123  3EFF               	addlw	-1
  3656  0124  1D03               	skipz
  3657  0125  2920               	goto	u1155
  3658  0126                     l1669:
  3659  0126  3001               	movlw	1
  3660  0127  00FC               	movwf	??___lwmod
  3661  0128  087C               	movf	??___lwmod,w
  3662  0129  07FD               	addwf	___lwmod@counter,f
  3663  012A                     l1671:
  3664  012A  1FF9               	btfss	___lwmod@divisor+1,7
  3665  012B  292D               	goto	u1161
  3666  012C  292E               	goto	u1160
  3667  012D                     u1161:
  3668  012D  291F               	goto	l1667
  3669  012E                     u1160:
  3670  012E                     l1673:
  3671  012E  0879               	movf	___lwmod@divisor+1,w
  3672  012F  027B               	subwf	___lwmod@dividend+1,w
  3673  0130  1D03               	skipz
  3674  0131  2934               	goto	u1175
  3675  0132  0878               	movf	___lwmod@divisor,w
  3676  0133  027A               	subwf	___lwmod@dividend,w
  3677  0134                     u1175:
  3678  0134  1C03               	skipc
  3679  0135  2937               	goto	u1171
  3680  0136  2938               	goto	u1170
  3681  0137                     u1171:
  3682  0137  293E               	goto	l1677
  3683  0138                     u1170:
  3684  0138                     l1675:
  3685  0138  0878               	movf	___lwmod@divisor,w
  3686  0139  02FA               	subwf	___lwmod@dividend,f
  3687  013A  0879               	movf	___lwmod@divisor+1,w
  3688  013B  1C03               	skipc
  3689  013C  03FB               	decf	___lwmod@dividend+1,f
  3690  013D  02FB               	subwf	___lwmod@dividend+1,f
  3691  013E                     l1677:
  3692  013E  3001               	movlw	1
  3693  013F                     u1185:
  3694  013F  1003               	clrc
  3695  0140  0CF9               	rrf	___lwmod@divisor+1,f
  3696  0141  0CF8               	rrf	___lwmod@divisor,f
  3697  0142  3EFF               	addlw	-1
  3698  0143  1D03               	skipz
  3699  0144  293F               	goto	u1185
  3700  0145                     l1679:
  3701  0145  3001               	movlw	1
  3702  0146  02FD               	subwf	___lwmod@counter,f
  3703  0147  1D03               	btfss	3,2
  3704  0148  294A               	goto	u1191
  3705  0149  294B               	goto	u1190
  3706  014A                     u1191:
  3707  014A  292E               	goto	l1673
  3708  014B                     u1190:
  3709  014B                     l1681:
  3710  014B  087B               	movf	___lwmod@dividend+1,w
  3711  014C  00F9               	movwf	?___lwmod+1
  3712  014D  087A               	movf	___lwmod@dividend,w
  3713  014E  00F8               	movwf	?___lwmod
  3714  014F                     l728:
  3715  014F  0008               	return
  3716  0150                     __end_of___lwmod:
  3717                           
  3718                           	psect	text17
  3719  0150                     __ptext17:	
  3720 ;; *************** function ___lwdiv *****************
  3721 ;; Defined at:
  3722 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  divisor         2    0[COMMON] unsigned int 
  3725 ;;  dividend        2    2[COMMON] unsigned int 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  quotient        2    5[COMMON] unsigned int 
  3728 ;;  counter         1    7[COMMON] unsigned char 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  2    0[COMMON] unsigned int 
  3731 ;; Registers used:
  3732 ;;		wreg, status,2, status,0
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3738 ;;      Params:         4       0       0       0       0
  3739 ;;      Locals:         3       0       0       0       0
  3740 ;;      Temps:          1       0       0       0       0
  3741 ;;      Totals:         8       0       0       0       0
  3742 ;;Total ram usage:        8 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; This function calls:
  3745 ;;		Nothing
  3746 ;; This function is called by:
  3747 ;;		_sprintf
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           
  3752                           ;psect for function ___lwdiv
  3753  0150                     ___lwdiv:
  3754  0150                     l1637:	
  3755                           ;incstack = 0
  3756                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3757                           
  3758  0150  01F5               	clrf	___lwdiv@quotient
  3759  0151  01F6               	clrf	___lwdiv@quotient+1
  3760  0152                     l1639:
  3761  0152  0870               	movf	___lwdiv@divisor,w
  3762  0153  0471               	iorwf	___lwdiv@divisor+1,w
  3763  0154  1903               	btfsc	3,2
  3764  0155  2957               	goto	u1071
  3765  0156  2958               	goto	u1070
  3766  0157                     u1071:
  3767  0157  298F               	goto	l1659
  3768  0158                     u1070:
  3769  0158                     l1641:
  3770  0158  01F7               	clrf	___lwdiv@counter
  3771  0159  0AF7               	incf	___lwdiv@counter,f
  3772  015A  2966               	goto	l1647
  3773  015B                     l1643:
  3774  015B  3001               	movlw	1
  3775  015C                     u1085:
  3776  015C  1003               	clrc
  3777  015D  0DF0               	rlf	___lwdiv@divisor,f
  3778  015E  0DF1               	rlf	___lwdiv@divisor+1,f
  3779  015F  3EFF               	addlw	-1
  3780  0160  1D03               	skipz
  3781  0161  295C               	goto	u1085
  3782  0162                     l1645:
  3783  0162  3001               	movlw	1
  3784  0163  00F4               	movwf	??___lwdiv
  3785  0164  0874               	movf	??___lwdiv,w
  3786  0165  07F7               	addwf	___lwdiv@counter,f
  3787  0166                     l1647:
  3788  0166  1FF1               	btfss	___lwdiv@divisor+1,7
  3789  0167  2969               	goto	u1091
  3790  0168  296A               	goto	u1090
  3791  0169                     u1091:
  3792  0169  295B               	goto	l1643
  3793  016A                     u1090:
  3794  016A                     l1649:
  3795  016A  3001               	movlw	1
  3796  016B                     u1105:
  3797  016B  1003               	clrc
  3798  016C  0DF5               	rlf	___lwdiv@quotient,f
  3799  016D  0DF6               	rlf	___lwdiv@quotient+1,f
  3800  016E  3EFF               	addlw	-1
  3801  016F  1D03               	skipz
  3802  0170  296B               	goto	u1105
  3803  0171  0871               	movf	___lwdiv@divisor+1,w
  3804  0172  0273               	subwf	___lwdiv@dividend+1,w
  3805  0173  1D03               	skipz
  3806  0174  2977               	goto	u1115
  3807  0175  0870               	movf	___lwdiv@divisor,w
  3808  0176  0272               	subwf	___lwdiv@dividend,w
  3809  0177                     u1115:
  3810  0177  1C03               	skipc
  3811  0178  297A               	goto	u1111
  3812  0179  297B               	goto	u1110
  3813  017A                     u1111:
  3814  017A  2982               	goto	l1655
  3815  017B                     u1110:
  3816  017B                     l1651:
  3817  017B  0870               	movf	___lwdiv@divisor,w
  3818  017C  02F2               	subwf	___lwdiv@dividend,f
  3819  017D  0871               	movf	___lwdiv@divisor+1,w
  3820  017E  1C03               	skipc
  3821  017F  03F3               	decf	___lwdiv@dividend+1,f
  3822  0180  02F3               	subwf	___lwdiv@dividend+1,f
  3823  0181                     l1653:
  3824  0181  1475               	bsf	___lwdiv@quotient,0
  3825  0182                     l1655:
  3826  0182  3001               	movlw	1
  3827  0183                     u1125:
  3828  0183  1003               	clrc
  3829  0184  0CF1               	rrf	___lwdiv@divisor+1,f
  3830  0185  0CF0               	rrf	___lwdiv@divisor,f
  3831  0186  3EFF               	addlw	-1
  3832  0187  1D03               	skipz
  3833  0188  2983               	goto	u1125
  3834  0189                     l1657:
  3835  0189  3001               	movlw	1
  3836  018A  02F7               	subwf	___lwdiv@counter,f
  3837  018B  1D03               	btfss	3,2
  3838  018C  298E               	goto	u1131
  3839  018D  298F               	goto	u1130
  3840  018E                     u1131:
  3841  018E  296A               	goto	l1649
  3842  018F                     u1130:
  3843  018F                     l1659:
  3844  018F  0876               	movf	___lwdiv@quotient+1,w
  3845  0190  00F1               	movwf	?___lwdiv+1
  3846  0191  0875               	movf	___lwdiv@quotient,w
  3847  0192  00F0               	movwf	?___lwdiv
  3848  0193                     l718:
  3849  0193  0008               	return
  3850  0194                     __end_of___lwdiv:
  3851                           
  3852                           	psect	text18
  3853  0FCA                     __ptext18:	
  3854 ;; *************** function _bcd_to_decimal *****************
  3855 ;; Defined at:
  3856 ;;		line 167 in file "main_mini2.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  number          1    wreg     unsigned char 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;  number          1    7[COMMON] unsigned char 
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  1    wreg      unsigned char 
  3863 ;; Registers used:
  3864 ;;		wreg, status,2, status,0, pclath, cstack
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3870 ;;      Params:         0       0       0       0       0
  3871 ;;      Locals:         1       0       0       0       0
  3872 ;;      Temps:          3       0       0       0       0
  3873 ;;      Totals:         4       0       0       0       0
  3874 ;;Total ram usage:        4 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; Hardware stack levels required when called:    1
  3877 ;; This function calls:
  3878 ;;		___bmul
  3879 ;; This function is called by:
  3880 ;;		_RTC_display
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           
  3885                           ;psect for function _bcd_to_decimal
  3886  0FCA                     _bcd_to_decimal:
  3887                           
  3888                           ;incstack = 0
  3889                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  3890                           ;bcd_to_decimal@number stored from wreg
  3891  0FCA  00F7               	movwf	bcd_to_decimal@number
  3892  0FCB                     l1701:
  3893                           
  3894                           ;main_mini2.c: 168:   return((number >> 4) * 10 + (number & 0x0F));
  3895  0FCB  300F               	movlw	15
  3896  0FCC  0577               	andwf	bcd_to_decimal@number,w
  3897  0FCD  00F4               	movwf	??_bcd_to_decimal
  3898  0FCE  300A               	movlw	10
  3899  0FCF  00F5               	movwf	??_bcd_to_decimal+1
  3900  0FD0  0875               	movf	??_bcd_to_decimal+1,w
  3901  0FD1  00F0               	movwf	___bmul@multiplicand
  3902  0FD2  0877               	movf	bcd_to_decimal@number,w
  3903  0FD3  00F6               	movwf	??_bcd_to_decimal+2
  3904  0FD4  3004               	movlw	4
  3905  0FD5                     u1215:
  3906  0FD5  1003               	clrc
  3907  0FD6  0CF6               	rrf	??_bcd_to_decimal+2,f
  3908  0FD7  3EFF               	addlw	-1
  3909  0FD8  1D03               	skipz
  3910  0FD9  2FD5               	goto	u1215
  3911  0FDA  0876               	movf	??_bcd_to_decimal+2,w
  3912  0FDB  120A  158A  27B5  120A  158A  	fcall	___bmul
  3913  0FE0  0774               	addwf	??_bcd_to_decimal,w
  3914  0FE1                     l109:
  3915  0FE1  0008               	return
  3916  0FE2                     __end_of_bcd_to_decimal:
  3917                           
  3918                           	psect	text19
  3919  0FB5                     __ptext19:	
  3920 ;; *************** function ___bmul *****************
  3921 ;; Defined at:
  3922 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;  multiplier      1    wreg     unsigned char 
  3925 ;;  multiplicand    1    0[COMMON] unsigned char 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  multiplier      1    3[COMMON] unsigned char 
  3928 ;;  product         1    2[COMMON] unsigned char 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      unsigned char 
  3931 ;; Registers used:
  3932 ;;		wreg, status,2, status,0
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3938 ;;      Params:         1       0       0       0       0
  3939 ;;      Locals:         2       0       0       0       0
  3940 ;;      Temps:          1       0       0       0       0
  3941 ;;      Totals:         4       0       0       0       0
  3942 ;;Total ram usage:        4 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; This function calls:
  3945 ;;		Nothing
  3946 ;; This function is called by:
  3947 ;;		_bcd_to_decimal
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           
  3952                           ;psect for function ___bmul
  3953  0FB5                     ___bmul:
  3954                           
  3955                           ;incstack = 0
  3956                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3957                           ;___bmul@multiplier stored from wreg
  3958  0FB5  00F3               	movwf	___bmul@multiplier
  3959  0FB6                     l1599:
  3960  0FB6  01F2               	clrf	___bmul@product
  3961  0FB7                     l1601:
  3962  0FB7  1C73               	btfss	___bmul@multiplier,0
  3963  0FB8  2FBA               	goto	u981
  3964  0FB9  2FBB               	goto	u980
  3965  0FBA                     u981:
  3966  0FBA  2FBF               	goto	l1605
  3967  0FBB                     u980:
  3968  0FBB                     l1603:
  3969  0FBB  0870               	movf	___bmul@multiplicand,w
  3970  0FBC  00F1               	movwf	??___bmul
  3971  0FBD  0871               	movf	??___bmul,w
  3972  0FBE  07F2               	addwf	___bmul@product,f
  3973  0FBF                     l1605:
  3974  0FBF  1003               	clrc
  3975  0FC0  0DF0               	rlf	___bmul@multiplicand,f
  3976  0FC1                     l1607:
  3977  0FC1  1003               	clrc
  3978  0FC2  0CF3               	rrf	___bmul@multiplier,f
  3979  0FC3  0873               	movf	___bmul@multiplier,w
  3980  0FC4  1D03               	btfss	3,2
  3981  0FC5  2FC7               	goto	u991
  3982  0FC6  2FC8               	goto	u990
  3983  0FC7                     u991:
  3984  0FC7  2FB7               	goto	l1601
  3985  0FC8                     u990:
  3986  0FC8                     l1609:
  3987  0FC8  0872               	movf	___bmul@product,w
  3988  0FC9                     l472:
  3989  0FC9  0008               	return
  3990  0FCA                     __end_of___bmul:
  3991                           
  3992                           	psect	text20
  3993  01E5                     __ptext20:	
  3994 ;; *************** function ___awmod *****************
  3995 ;; Defined at:
  3996 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  divisor         2    0[COMMON] int 
  3999 ;;  dividend        2    2[COMMON] int 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  sign            1    6[COMMON] unsigned char 
  4002 ;;  counter         1    5[COMMON] unsigned char 
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  2    0[COMMON] int 
  4005 ;; Registers used:
  4006 ;;		wreg, status,2, status,0
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4012 ;;      Params:         4       0       0       0       0
  4013 ;;      Locals:         2       0       0       0       0
  4014 ;;      Temps:          1       0       0       0       0
  4015 ;;      Totals:         7       0       0       0       0
  4016 ;;Total ram usage:        7 bytes
  4017 ;; Hardware stack levels used:    1
  4018 ;; This function calls:
  4019 ;;		Nothing
  4020 ;; This function is called by:
  4021 ;;		_RTC_display
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           
  4026                           ;psect for function ___awmod
  4027  01E5                     ___awmod:
  4028  01E5                     l1887:	
  4029                           ;incstack = 0
  4030                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4031                           
  4032  01E5  01F6               	clrf	___awmod@sign
  4033  01E6                     l1889:
  4034  01E6  1FF3               	btfss	___awmod@dividend+1,7
  4035  01E7  29E9               	goto	u1511
  4036  01E8  29EA               	goto	u1510
  4037  01E9                     u1511:
  4038  01E9  29F1               	goto	l1895
  4039  01EA                     u1510:
  4040  01EA                     l1891:
  4041  01EA  09F2               	comf	___awmod@dividend,f
  4042  01EB  09F3               	comf	___awmod@dividend+1,f
  4043  01EC  0AF2               	incf	___awmod@dividend,f
  4044  01ED  1903               	skipnz
  4045  01EE  0AF3               	incf	___awmod@dividend+1,f
  4046  01EF                     l1893:
  4047  01EF  01F6               	clrf	___awmod@sign
  4048  01F0  0AF6               	incf	___awmod@sign,f
  4049  01F1                     l1895:
  4050  01F1  1FF1               	btfss	___awmod@divisor+1,7
  4051  01F2  29F4               	goto	u1521
  4052  01F3  29F5               	goto	u1520
  4053  01F4                     u1521:
  4054  01F4  29FA               	goto	l1899
  4055  01F5                     u1520:
  4056  01F5                     l1897:
  4057  01F5  09F0               	comf	___awmod@divisor,f
  4058  01F6  09F1               	comf	___awmod@divisor+1,f
  4059  01F7  0AF0               	incf	___awmod@divisor,f
  4060  01F8  1903               	skipnz
  4061  01F9  0AF1               	incf	___awmod@divisor+1,f
  4062  01FA                     l1899:
  4063  01FA  0870               	movf	___awmod@divisor,w
  4064  01FB  0471               	iorwf	___awmod@divisor+1,w
  4065  01FC  1903               	btfsc	3,2
  4066  01FD  29FF               	goto	u1531
  4067  01FE  2A00               	goto	u1530
  4068  01FF                     u1531:
  4069  01FF  2A2F               	goto	l1917
  4070  0200                     u1530:
  4071  0200                     l1901:
  4072  0200  01F5               	clrf	___awmod@counter
  4073  0201  0AF5               	incf	___awmod@counter,f
  4074  0202  2A0E               	goto	l1907
  4075  0203                     l1903:
  4076  0203  3001               	movlw	1
  4077  0204                     u1545:
  4078  0204  1003               	clrc
  4079  0205  0DF0               	rlf	___awmod@divisor,f
  4080  0206  0DF1               	rlf	___awmod@divisor+1,f
  4081  0207  3EFF               	addlw	-1
  4082  0208  1D03               	skipz
  4083  0209  2A04               	goto	u1545
  4084  020A                     l1905:
  4085  020A  3001               	movlw	1
  4086  020B  00F4               	movwf	??___awmod
  4087  020C  0874               	movf	??___awmod,w
  4088  020D  07F5               	addwf	___awmod@counter,f
  4089  020E                     l1907:
  4090  020E  1FF1               	btfss	___awmod@divisor+1,7
  4091  020F  2A11               	goto	u1551
  4092  0210  2A12               	goto	u1550
  4093  0211                     u1551:
  4094  0211  2A03               	goto	l1903
  4095  0212                     u1550:
  4096  0212                     l1909:
  4097  0212  0871               	movf	___awmod@divisor+1,w
  4098  0213  0273               	subwf	___awmod@dividend+1,w
  4099  0214  1D03               	skipz
  4100  0215  2A18               	goto	u1565
  4101  0216  0870               	movf	___awmod@divisor,w
  4102  0217  0272               	subwf	___awmod@dividend,w
  4103  0218                     u1565:
  4104  0218  1C03               	skipc
  4105  0219  2A1B               	goto	u1561
  4106  021A  2A1C               	goto	u1560
  4107  021B                     u1561:
  4108  021B  2A22               	goto	l1913
  4109  021C                     u1560:
  4110  021C                     l1911:
  4111  021C  0870               	movf	___awmod@divisor,w
  4112  021D  02F2               	subwf	___awmod@dividend,f
  4113  021E  0871               	movf	___awmod@divisor+1,w
  4114  021F  1C03               	skipc
  4115  0220  03F3               	decf	___awmod@dividend+1,f
  4116  0221  02F3               	subwf	___awmod@dividend+1,f
  4117  0222                     l1913:
  4118  0222  3001               	movlw	1
  4119  0223                     u1575:
  4120  0223  1003               	clrc
  4121  0224  0CF1               	rrf	___awmod@divisor+1,f
  4122  0225  0CF0               	rrf	___awmod@divisor,f
  4123  0226  3EFF               	addlw	-1
  4124  0227  1D03               	skipz
  4125  0228  2A23               	goto	u1575
  4126  0229                     l1915:
  4127  0229  3001               	movlw	1
  4128  022A  02F5               	subwf	___awmod@counter,f
  4129  022B  1D03               	btfss	3,2
  4130  022C  2A2E               	goto	u1581
  4131  022D  2A2F               	goto	u1580
  4132  022E                     u1581:
  4133  022E  2A12               	goto	l1909
  4134  022F                     u1580:
  4135  022F                     l1917:
  4136  022F  0876               	movf	___awmod@sign,w
  4137  0230  1903               	btfsc	3,2
  4138  0231  2A33               	goto	u1591
  4139  0232  2A34               	goto	u1590
  4140  0233                     u1591:
  4141  0233  2A39               	goto	l1921
  4142  0234                     u1590:
  4143  0234                     l1919:
  4144  0234  09F2               	comf	___awmod@dividend,f
  4145  0235  09F3               	comf	___awmod@dividend+1,f
  4146  0236  0AF2               	incf	___awmod@dividend,f
  4147  0237  1903               	skipnz
  4148  0238  0AF3               	incf	___awmod@dividend+1,f
  4149  0239                     l1921:
  4150  0239  0873               	movf	___awmod@dividend+1,w
  4151  023A  00F1               	movwf	?___awmod+1
  4152  023B  0872               	movf	___awmod@dividend,w
  4153  023C  00F0               	movwf	?___awmod
  4154  023D                     l612:
  4155  023D  0008               	return
  4156  023E                     __end_of___awmod:
  4157                           
  4158                           	psect	text21
  4159  02FE                     __ptext21:	
  4160 ;; *************** function ___awdiv *****************
  4161 ;; Defined at:
  4162 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  divisor         2    0[COMMON] int 
  4165 ;;  dividend        2    2[COMMON] int 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;  quotient        2    7[COMMON] int 
  4168 ;;  sign            1    6[COMMON] unsigned char 
  4169 ;;  counter         1    5[COMMON] unsigned char 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  2    0[COMMON] int 
  4172 ;; Registers used:
  4173 ;;		wreg, status,2, status,0
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4179 ;;      Params:         4       0       0       0       0
  4180 ;;      Locals:         4       0       0       0       0
  4181 ;;      Temps:          1       0       0       0       0
  4182 ;;      Totals:         9       0       0       0       0
  4183 ;;Total ram usage:        9 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; This function calls:
  4186 ;;		Nothing
  4187 ;; This function is called by:
  4188 ;;		_RTC_display
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           
  4193                           ;psect for function ___awdiv
  4194  02FE                     ___awdiv:
  4195  02FE                     l1843:	
  4196                           ;incstack = 0
  4197                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4198                           
  4199  02FE  01F6               	clrf	___awdiv@sign
  4200  02FF                     l1845:
  4201  02FF  1FF1               	btfss	___awdiv@divisor+1,7
  4202  0300  2B02               	goto	u1411
  4203  0301  2B03               	goto	u1410
  4204  0302                     u1411:
  4205  0302  2B0A               	goto	l1851
  4206  0303                     u1410:
  4207  0303                     l1847:
  4208  0303  09F0               	comf	___awdiv@divisor,f
  4209  0304  09F1               	comf	___awdiv@divisor+1,f
  4210  0305  0AF0               	incf	___awdiv@divisor,f
  4211  0306  1903               	skipnz
  4212  0307  0AF1               	incf	___awdiv@divisor+1,f
  4213  0308                     l1849:
  4214  0308  01F6               	clrf	___awdiv@sign
  4215  0309  0AF6               	incf	___awdiv@sign,f
  4216  030A                     l1851:
  4217  030A  1FF3               	btfss	___awdiv@dividend+1,7
  4218  030B  2B0D               	goto	u1421
  4219  030C  2B0E               	goto	u1420
  4220  030D                     u1421:
  4221  030D  2B17               	goto	l1857
  4222  030E                     u1420:
  4223  030E                     l1853:
  4224  030E  09F2               	comf	___awdiv@dividend,f
  4225  030F  09F3               	comf	___awdiv@dividend+1,f
  4226  0310  0AF2               	incf	___awdiv@dividend,f
  4227  0311  1903               	skipnz
  4228  0312  0AF3               	incf	___awdiv@dividend+1,f
  4229  0313                     l1855:
  4230  0313  3001               	movlw	1
  4231  0314  00F4               	movwf	??___awdiv
  4232  0315  0874               	movf	??___awdiv,w
  4233  0316  06F6               	xorwf	___awdiv@sign,f
  4234  0317                     l1857:
  4235  0317  01F7               	clrf	___awdiv@quotient
  4236  0318  01F8               	clrf	___awdiv@quotient+1
  4237  0319                     l1859:
  4238  0319  0870               	movf	___awdiv@divisor,w
  4239  031A  0471               	iorwf	___awdiv@divisor+1,w
  4240  031B  1903               	btfsc	3,2
  4241  031C  2B1E               	goto	u1431
  4242  031D  2B1F               	goto	u1430
  4243  031E                     u1431:
  4244  031E  2B56               	goto	l1879
  4245  031F                     u1430:
  4246  031F                     l1861:
  4247  031F  01F5               	clrf	___awdiv@counter
  4248  0320  0AF5               	incf	___awdiv@counter,f
  4249  0321  2B2D               	goto	l1867
  4250  0322                     l1863:
  4251  0322  3001               	movlw	1
  4252  0323                     u1445:
  4253  0323  1003               	clrc
  4254  0324  0DF0               	rlf	___awdiv@divisor,f
  4255  0325  0DF1               	rlf	___awdiv@divisor+1,f
  4256  0326  3EFF               	addlw	-1
  4257  0327  1D03               	skipz
  4258  0328  2B23               	goto	u1445
  4259  0329                     l1865:
  4260  0329  3001               	movlw	1
  4261  032A  00F4               	movwf	??___awdiv
  4262  032B  0874               	movf	??___awdiv,w
  4263  032C  07F5               	addwf	___awdiv@counter,f
  4264  032D                     l1867:
  4265  032D  1FF1               	btfss	___awdiv@divisor+1,7
  4266  032E  2B30               	goto	u1451
  4267  032F  2B31               	goto	u1450
  4268  0330                     u1451:
  4269  0330  2B22               	goto	l1863
  4270  0331                     u1450:
  4271  0331                     l1869:
  4272  0331  3001               	movlw	1
  4273  0332                     u1465:
  4274  0332  1003               	clrc
  4275  0333  0DF7               	rlf	___awdiv@quotient,f
  4276  0334  0DF8               	rlf	___awdiv@quotient+1,f
  4277  0335  3EFF               	addlw	-1
  4278  0336  1D03               	skipz
  4279  0337  2B32               	goto	u1465
  4280  0338  0871               	movf	___awdiv@divisor+1,w
  4281  0339  0273               	subwf	___awdiv@dividend+1,w
  4282  033A  1D03               	skipz
  4283  033B  2B3E               	goto	u1475
  4284  033C  0870               	movf	___awdiv@divisor,w
  4285  033D  0272               	subwf	___awdiv@dividend,w
  4286  033E                     u1475:
  4287  033E  1C03               	skipc
  4288  033F  2B41               	goto	u1471
  4289  0340  2B42               	goto	u1470
  4290  0341                     u1471:
  4291  0341  2B49               	goto	l1875
  4292  0342                     u1470:
  4293  0342                     l1871:
  4294  0342  0870               	movf	___awdiv@divisor,w
  4295  0343  02F2               	subwf	___awdiv@dividend,f
  4296  0344  0871               	movf	___awdiv@divisor+1,w
  4297  0345  1C03               	skipc
  4298  0346  03F3               	decf	___awdiv@dividend+1,f
  4299  0347  02F3               	subwf	___awdiv@dividend+1,f
  4300  0348                     l1873:
  4301  0348  1477               	bsf	___awdiv@quotient,0
  4302  0349                     l1875:
  4303  0349  3001               	movlw	1
  4304  034A                     u1485:
  4305  034A  1003               	clrc
  4306  034B  0CF1               	rrf	___awdiv@divisor+1,f
  4307  034C  0CF0               	rrf	___awdiv@divisor,f
  4308  034D  3EFF               	addlw	-1
  4309  034E  1D03               	skipz
  4310  034F  2B4A               	goto	u1485
  4311  0350                     l1877:
  4312  0350  3001               	movlw	1
  4313  0351  02F5               	subwf	___awdiv@counter,f
  4314  0352  1D03               	btfss	3,2
  4315  0353  2B55               	goto	u1491
  4316  0354  2B56               	goto	u1490
  4317  0355                     u1491:
  4318  0355  2B31               	goto	l1869
  4319  0356                     u1490:
  4320  0356                     l1879:
  4321  0356  0876               	movf	___awdiv@sign,w
  4322  0357  1903               	btfsc	3,2
  4323  0358  2B5A               	goto	u1501
  4324  0359  2B5B               	goto	u1500
  4325  035A                     u1501:
  4326  035A  2B60               	goto	l1883
  4327  035B                     u1500:
  4328  035B                     l1881:
  4329  035B  09F7               	comf	___awdiv@quotient,f
  4330  035C  09F8               	comf	___awdiv@quotient+1,f
  4331  035D  0AF7               	incf	___awdiv@quotient,f
  4332  035E  1903               	skipnz
  4333  035F  0AF8               	incf	___awdiv@quotient+1,f
  4334  0360                     l1883:
  4335  0360  0878               	movf	___awdiv@quotient+1,w
  4336  0361  00F1               	movwf	?___awdiv+1
  4337  0362  0877               	movf	___awdiv@quotient,w
  4338  0363  00F0               	movwf	?___awdiv
  4339  0364                     l599:
  4340  0364  0008               	return
  4341  0365                     __end_of___awdiv:
  4342                           
  4343                           	psect	text22
  4344  0194                     __ptext22:	
  4345 ;; *************** function _Led_RTC *****************
  4346 ;; Defined at:
  4347 ;;		line 227 in file "main_mini2.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;		None
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;		None
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      void 
  4354 ;; Registers used:
  4355 ;;		wreg, status,2, status,0
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4361 ;;      Params:         0       0       0       0       0
  4362 ;;      Locals:         0       0       0       0       0
  4363 ;;      Temps:          0       0       0       0       0
  4364 ;;      Totals:         0       0       0       0       0
  4365 ;;Total ram usage:        0 bytes
  4366 ;; Hardware stack levels used:    1
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		_main
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           
  4375                           ;psect for function _Led_RTC
  4376  0194                     _Led_RTC:
  4377  0194                     l1973:	
  4378                           ;incstack = 0
  4379                           ; Regs used in _Led_RTC: [wreg+status,2+status,0]
  4380                           
  4381                           
  4382                           ;main_mini2.c: 228:     if (second == 5){
  4383  0194  3005               	movlw	5
  4384  0195  1283               	bcf	3,5	;RP0=0, select bank0
  4385  0196  1303               	bcf	3,6	;RP1=0, select bank0
  4386  0197  0646               	xorwf	_second,w
  4387  0198  1D03               	btfss	3,2
  4388  0199  299B               	goto	u1611
  4389  019A  299C               	goto	u1610
  4390  019B                     u1611:
  4391  019B  29A0               	goto	l1977
  4392  019C                     u1610:
  4393  019C                     l1975:
  4394                           
  4395                           ;main_mini2.c: 229:         PORTDbits.RD0 = 1;
  4396  019C  1408               	bsf	8,0	;volatile
  4397                           
  4398                           ;main_mini2.c: 230:         PORTAbits.RA6 = 0;
  4399  019D  1305               	bcf	5,6	;volatile
  4400                           
  4401                           ;main_mini2.c: 231:         PORTAbits.RA7 = 0;
  4402  019E  1385               	bcf	5,7	;volatile
  4403                           
  4404                           ;main_mini2.c: 232:     }
  4405  019F  29E4               	goto	l137
  4406  01A0                     l1977:
  4407  01A0  3006               	movlw	6
  4408  01A1  0646               	xorwf	_second,w
  4409  01A2  1D03               	btfss	3,2
  4410  01A3  29A5               	goto	u1621
  4411  01A4  29A6               	goto	u1620
  4412  01A5                     u1621:
  4413  01A5  29AA               	goto	l1981
  4414  01A6                     u1620:
  4415  01A6                     l1979:
  4416                           
  4417                           ;main_mini2.c: 234:         PORTDbits.RD1 = 1;
  4418  01A6  1488               	bsf	8,1	;volatile
  4419                           
  4420                           ;main_mini2.c: 235:         PORTAbits.RA6 = 1;
  4421  01A7  1705               	bsf	5,6	;volatile
  4422                           
  4423                           ;main_mini2.c: 236:         PORTAbits.RA7 = 0;
  4424  01A8  1385               	bcf	5,7	;volatile
  4425                           
  4426                           ;main_mini2.c: 237:     }
  4427  01A9  29E4               	goto	l137
  4428  01AA                     l1981:
  4429  01AA  3007               	movlw	7
  4430  01AB  0646               	xorwf	_second,w
  4431  01AC  1D03               	btfss	3,2
  4432  01AD  29AF               	goto	u1631
  4433  01AE  29B0               	goto	u1630
  4434  01AF                     u1631:
  4435  01AF  29B4               	goto	l1985
  4436  01B0                     u1630:
  4437  01B0                     l1983:
  4438                           
  4439                           ;main_mini2.c: 239:         PORTDbits.RD2 = 1;
  4440  01B0  1508               	bsf	8,2	;volatile
  4441                           
  4442                           ;main_mini2.c: 240:         PORTAbits.RA6 = 1;
  4443  01B1  1705               	bsf	5,6	;volatile
  4444                           
  4445                           ;main_mini2.c: 241:         PORTAbits.RA7 = 1;
  4446  01B2  1785               	bsf	5,7	;volatile
  4447                           
  4448                           ;main_mini2.c: 242:     }
  4449  01B3  29E4               	goto	l137
  4450  01B4                     l1985:
  4451  01B4  3008               	movlw	8
  4452  01B5  0646               	xorwf	_second,w
  4453  01B6  1D03               	btfss	3,2
  4454  01B7  29B9               	goto	u1641
  4455  01B8  29BA               	goto	u1640
  4456  01B9                     u1641:
  4457  01B9  29BC               	goto	l1989
  4458  01BA                     u1640:
  4459  01BA                     l1987:
  4460                           
  4461                           ;main_mini2.c: 244:         PORTDbits.RD3 = 1;
  4462  01BA  1588               	bsf	8,3	;volatile
  4463                           
  4464                           ;main_mini2.c: 245:     }
  4465  01BB  29E4               	goto	l137
  4466  01BC                     l1989:
  4467  01BC  3009               	movlw	9
  4468  01BD  0646               	xorwf	_second,w
  4469  01BE  1D03               	btfss	3,2
  4470  01BF  29C1               	goto	u1651
  4471  01C0  29C2               	goto	u1650
  4472  01C1                     u1651:
  4473  01C1  29C4               	goto	l1993
  4474  01C2                     u1650:
  4475  01C2                     l1991:
  4476                           
  4477                           ;main_mini2.c: 247:         PORTDbits.RD4 = 1;
  4478  01C2  1608               	bsf	8,4	;volatile
  4479                           
  4480                           ;main_mini2.c: 248:     }
  4481  01C3  29E4               	goto	l137
  4482  01C4                     l1993:
  4483  01C4  300A               	movlw	10
  4484  01C5  0646               	xorwf	_second,w
  4485  01C6  1D03               	btfss	3,2
  4486  01C7  29C9               	goto	u1661
  4487  01C8  29CA               	goto	u1660
  4488  01C9                     u1661:
  4489  01C9  29CE               	goto	l1997
  4490  01CA                     u1660:
  4491  01CA                     l1995:
  4492                           
  4493                           ;main_mini2.c: 250:         PORTDbits.RD5 = 1;
  4494  01CA  1688               	bsf	8,5	;volatile
  4495                           
  4496                           ;main_mini2.c: 251:         PORTAbits.RA6 = 0;
  4497  01CB  1305               	bcf	5,6	;volatile
  4498                           
  4499                           ;main_mini2.c: 252:         PORTAbits.RA7 = 1;
  4500  01CC  1785               	bsf	5,7	;volatile
  4501                           
  4502                           ;main_mini2.c: 253:     }
  4503  01CD  29E4               	goto	l137
  4504  01CE                     l1997:
  4505  01CE  300B               	movlw	11
  4506  01CF  0646               	xorwf	_second,w
  4507  01D0  1D03               	btfss	3,2
  4508  01D1  29D3               	goto	u1671
  4509  01D2  29D4               	goto	u1670
  4510  01D3                     u1671:
  4511  01D3  29D8               	goto	l2001
  4512  01D4                     u1670:
  4513  01D4                     l1999:
  4514                           
  4515                           ;main_mini2.c: 255:         PORTDbits.RD6 = 1;
  4516  01D4  1708               	bsf	8,6	;volatile
  4517                           
  4518                           ;main_mini2.c: 256:         PORTAbits.RA6 = 0;
  4519  01D5  1305               	bcf	5,6	;volatile
  4520                           
  4521                           ;main_mini2.c: 257:         PORTAbits.RA7 = 0;
  4522  01D6  1385               	bcf	5,7	;volatile
  4523                           
  4524                           ;main_mini2.c: 258:     }
  4525  01D7  29E4               	goto	l137
  4526  01D8                     l2001:
  4527  01D8  301F               	movlw	31
  4528  01D9  0645               	xorwf	_minute,w
  4529  01DA  1D03               	btfss	3,2
  4530  01DB  29DD               	goto	u1681
  4531  01DC  29DE               	goto	u1680
  4532  01DD                     u1681:
  4533  01DD  29E2               	goto	l135
  4534  01DE                     u1680:
  4535  01DE                     l2003:
  4536                           
  4537                           ;main_mini2.c: 260:         PORTDbits.RD7 = 1;
  4538  01DE  1788               	bsf	8,7	;volatile
  4539                           
  4540                           ;main_mini2.c: 261:         PORTAbits.RA6 = 0;
  4541  01DF  1305               	bcf	5,6	;volatile
  4542                           
  4543                           ;main_mini2.c: 262:         PORTAbits.RA7 = 0;
  4544  01E0  1385               	bcf	5,7	;volatile
  4545                           
  4546                           ;main_mini2.c: 263:     }
  4547  01E1  29E4               	goto	l137
  4548  01E2                     l135:	
  4549                           ;main_mini2.c: 264:     else{
  4550                           
  4551                           
  4552                           ;main_mini2.c: 265:         PORTAbits.RA6 = 0;
  4553  01E2  1305               	bcf	5,6	;volatile
  4554                           
  4555                           ;main_mini2.c: 266:         PORTAbits.RA7 = 0;
  4556  01E3  1385               	bcf	5,7	;volatile
  4557  01E4                     l137:
  4558  01E4  0008               	return
  4559  01E5                     __end_of_Led_RTC:
  4560                           
  4561                           	psect	text23
  4562  0F4F                     __ptext23:	
  4563 ;; *************** function _I2C_Master_RepeatedStart *****************
  4564 ;; Defined at:
  4565 ;;		line 64 in file "I2C.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;		None
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;		None
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      void 
  4572 ;; Registers used:
  4573 ;;		wreg, status,2, status,0, pclath, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4579 ;;      Params:         0       0       0       0       0
  4580 ;;      Locals:         0       0       0       0       0
  4581 ;;      Temps:          0       0       0       0       0
  4582 ;;      Totals:         0       0       0       0       0
  4583 ;;Total ram usage:        0 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; Hardware stack levels required when called:    1
  4586 ;; This function calls:
  4587 ;;		_I2C_Master_Wait
  4588 ;; This function is called by:
  4589 ;;		_main
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           
  4594                           ;psect for function _I2C_Master_RepeatedStart
  4595  0F4F                     _I2C_Master_RepeatedStart:
  4596  0F4F                     l1939:	
  4597                           ;incstack = 0
  4598                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  4599                           
  4600                           
  4601                           ;I2C.c: 66:     I2C_Master_Wait();
  4602  0F4F  120A  158A  2783  120A  158A  	fcall	_I2C_Master_Wait
  4603  0F54                     l1941:
  4604                           
  4605                           ;I2C.c: 67:     SSPCON2bits.RSEN = 1;
  4606  0F54  1683               	bsf	3,5	;RP0=1, select bank1
  4607  0F55  1303               	bcf	3,6	;RP1=0, select bank1
  4608  0F56  1491               	bsf	17,1	;volatile
  4609  0F57                     l295:
  4610  0F57  0008               	return
  4611  0F58                     __end_of_I2C_Master_RepeatedStart:
  4612                           
  4613                           	psect	text24
  4614  00B0                     __ptext24:	
  4615 ;; *************** function _I2C_Master_Read *****************
  4616 ;; Defined at:
  4617 ;;		line 94 in file "I2C.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;  a               2    0[COMMON] unsigned short 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;  temp            2    4[COMMON] unsigned short 
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  2    0[COMMON] unsigned short 
  4624 ;; Registers used:
  4625 ;;		wreg, status,2, status,0, pclath, cstack
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4631 ;;      Params:         2       0       0       0       0
  4632 ;;      Locals:         2       0       0       0       0
  4633 ;;      Temps:          2       0       0       0       0
  4634 ;;      Totals:         6       0       0       0       0
  4635 ;;Total ram usage:        6 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; Hardware stack levels required when called:    1
  4638 ;; This function calls:
  4639 ;;		_I2C_Master_Wait
  4640 ;; This function is called by:
  4641 ;;		_main
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           
  4646                           ;psect for function _I2C_Master_Read
  4647  00B0                     _I2C_Master_Read:
  4648  00B0                     l1943:	
  4649                           ;incstack = 0
  4650                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4651                           
  4652                           
  4653                           ;I2C.c: 94: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 95: {;I2C.c: 96:    
      +                           unsigned short temp;;I2C.c: 97:     I2C_Master_Wait();
  4654  00B0  120A  158A  2783  120A  118A  	fcall	_I2C_Master_Wait
  4655  00B5                     l1945:
  4656                           
  4657                           ;I2C.c: 98:     SSPCON2bits.RCEN = 1;
  4658  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  4659  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  4660  00B7  1591               	bsf	17,3	;volatile
  4661                           
  4662                           ;I2C.c: 99:     I2C_Master_Wait();
  4663  00B8  120A  158A  2783  120A  118A  	fcall	_I2C_Master_Wait
  4664  00BD                     l1947:
  4665                           
  4666                           ;I2C.c: 100:     temp = SSPBUF;
  4667  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  4668  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  4669  00BF  0813               	movf	19,w	;volatile
  4670  00C0  00F2               	movwf	??_I2C_Master_Read
  4671  00C1  01F3               	clrf	??_I2C_Master_Read+1
  4672  00C2  0872               	movf	??_I2C_Master_Read,w
  4673  00C3  00F4               	movwf	I2C_Master_Read@temp
  4674  00C4  0873               	movf	??_I2C_Master_Read+1,w
  4675  00C5  00F5               	movwf	I2C_Master_Read@temp+1
  4676  00C6                     l1949:
  4677                           
  4678                           ;I2C.c: 101:     I2C_Master_Wait();
  4679  00C6  120A  158A  2783  120A  118A  	fcall	_I2C_Master_Wait
  4680  00CB                     l1951:
  4681                           
  4682                           ;I2C.c: 102:     if(a == 1){
  4683  00CB  0370               	decf	I2C_Master_Read@a,w
  4684  00CC  0471               	iorwf	I2C_Master_Read@a+1,w
  4685  00CD  1D03               	btfss	3,2
  4686  00CE  28D0               	goto	u1601
  4687  00CF  28D1               	goto	u1600
  4688  00D0                     u1601:
  4689  00D0  28D5               	goto	l304
  4690  00D1                     u1600:
  4691  00D1                     l1953:
  4692                           
  4693                           ;I2C.c: 103:         SSPCON2bits.ACKDT = 0;
  4694  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  4695  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  4696  00D3  1291               	bcf	17,5	;volatile
  4697                           
  4698                           ;I2C.c: 104:     }else{
  4699  00D4  28D8               	goto	l305
  4700  00D5                     l304:
  4701                           
  4702                           ;I2C.c: 105:         SSPCON2bits.ACKDT = 1;
  4703  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  4704  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  4705  00D7  1691               	bsf	17,5	;volatile
  4706  00D8                     l305:	
  4707                           ;I2C.c: 106:     }
  4708                           
  4709                           
  4710                           ;I2C.c: 107:     SSPCON2bits.ACKEN = 1;
  4711  00D8  1611               	bsf	17,4	;volatile
  4712  00D9                     l1955:
  4713                           
  4714                           ;I2C.c: 108:     return temp;
  4715  00D9  0875               	movf	I2C_Master_Read@temp+1,w
  4716  00DA  00F1               	movwf	?_I2C_Master_Read+1
  4717  00DB  0874               	movf	I2C_Master_Read@temp,w
  4718  00DC  00F0               	movwf	?_I2C_Master_Read
  4719  00DD                     l306:
  4720  00DD  0008               	return
  4721  00DE                     __end_of_I2C_Master_Read:
  4722                           
  4723                           	psect	text25
  4724  0F83                     __ptext25:	
  4725 ;; *************** function _I2C_Master_Wait *****************
  4726 ;; Defined at:
  4727 ;;		line 48 in file "I2C.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;		None
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		wreg, status,2
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4741 ;;      Params:         0       0       0       0       0
  4742 ;;      Locals:         0       0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0
  4744 ;;      Totals:         0       0       0       0       0
  4745 ;;Total ram usage:        0 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_I2C_Master_Start
  4751 ;;		_I2C_Master_RepeatedStart
  4752 ;;		_I2C_Master_Stop
  4753 ;;		_I2C_Master_Write
  4754 ;;		_I2C_Master_Read
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           
  4759                           ;psect for function _I2C_Master_Wait
  4760  0F83                     _I2C_Master_Wait:
  4761  0F83                     l1569:	
  4762                           ;incstack = 0
  4763                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4764                           
  4765  0F83                     l286:	
  4766                           ;I2C.c: 50:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4767                           
  4768  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  4769  0F84  1303               	bcf	3,6	;RP1=0, select bank1
  4770  0F85  1914               	btfsc	20,2	;volatile
  4771  0F86  2F88               	goto	u901
  4772  0F87  2F89               	goto	u900
  4773  0F88                     u901:
  4774  0F88  2F83               	goto	l286
  4775  0F89                     u900:
  4776  0F89                     l1571:
  4777  0F89  0811               	movf	17,w	;volatile
  4778  0F8A  391F               	andlw	31
  4779  0F8B  1D03               	btfss	3,2
  4780  0F8C  2F8E               	goto	u911
  4781  0F8D  2F8F               	goto	u910
  4782  0F8E                     u911:
  4783  0F8E  2F83               	goto	l286
  4784  0F8F                     u910:
  4785  0F8F                     l289:
  4786  0F8F  0008               	return
  4787  0F90                     __end_of_I2C_Master_Wait:
  4788  007E                     btemp	set	126	;btemp
  4789  007E                     wtemp0	set	126
  4790                           
  4791                           	psect	config
  4792                           
  4793                           ;Config register CONFIG1 @ 0x2007
  4794                           ;	Oscillator Selection bits
  4795                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4796                           ;	Watchdog Timer Enable bit
  4797                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4798                           ;	Power-up Timer Enable bit
  4799                           ;	PWRTE = OFF, PWRT disabled
  4800                           ;	RE3/MCLR pin function select bit
  4801                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4802                           ;	Code Protection bit
  4803                           ;	CP = OFF, Program memory code protection is disabled
  4804                           ;	Data Code Protection bit
  4805                           ;	CPD = OFF, Data memory code protection is disabled
  4806                           ;	Brown Out Reset Selection bits
  4807                           ;	BOREN = OFF, BOR disabled
  4808                           ;	Internal External Switchover bit
  4809                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4810                           ;	Fail-Safe Clock Monitor Enabled bit
  4811                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4812                           ;	Low Voltage Programming Enable bit
  4813                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4814                           ;	In-Circuit Debugger Mode bit
  4815                           ;	DEBUG = 0x1, unprogrammed default
  4816  2007                     	org	8199
  4817  2007  20D4               	dw	8404
  4818                           
  4819                           ;Config register CONFIG2 @ 0x2008
  4820                           ;	Brown-out Reset Selection bit
  4821                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  4822                           ;	Flash Program Memory Self Write Enable bits
  4823                           ;	WRT = OFF, Write protection off
  4824  2008                     	org	8200
  4825  2008  3EFF               	dw	16127

Data Sizes:
    Strings     15
    Constant    10
    Data        30
    BSS         86
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      77
    BANK1            80      0      60
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> year_send(BANK1[8]), month_send(BANK1[8]), day_send(BANK1[8]), hour_send(BANK1[8]), 
		 -> min_send(BANK0[8]), sec_send(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 15
		 -> Date(BANK0[15]), STR_1(CODE[3]), Time(BANK0[15]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _Write_to_RTC->_I2C_Master_Write
    _Write_USART_String->_Write_USART
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _bcd_to_decimal->___bmul

Critical Paths under _main in BANK0

    _main->_RTC_display
    _setup->_I2C_Master_Init
    _RTC_display->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8602
                                             18 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _Led_RTC
                        _RTC_display
                        _Write_USART
                 _Write_USART_String
                       _Write_to_RTC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
                         _USART_Init
                _USART_Init_BaudRate
 ---------------------------------------------------------------------------------
 (2) _USART_Init_BaudRate                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Write_to_RTC                                         0     0      0     934
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     934
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     340
                                              1 COMMON     4     2      2
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          3     3      0    5383
                                             15 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    20      3    2499
                                              0 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     212
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1334
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1338
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Led_RTC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     577
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Led_RTC
   _RTC_display
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _Write_USART
   _Write_USART_String
     _Write_USART
   _Write_to_RTC
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _USART_Init
     _USART_Init_BaudRate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      97      12        0.0%
ABS                  0      0      97       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 14:57:18 2021

                                _i 0047                                  pc 0002  
                   ___bmul@product 0072                       ___awdiv@sign 0076  
                               fsr 0004                ___wmul@multiplicand 0072  
             __size_of_Write_USART 000C                        _RTC_display 0443  
                              l103 0375                                l115 060B  
                              l140 00AF                                l109 0FE1  
                              l301 0F6A                                l118 0297  
                              l230 0F82                                l135 01E2  
                              l304 00D5                                l305 00D8  
                              l137 01E4                                l233 0F46  
                              l306 00DD                                l242 0F76  
                              l407 062A                                l239 0F6C  
                              l248 0084                                l425 0704  
                              l442 07DD                                l283 0115  
                              l612 023D                                l292 0F60  
                              l286 0F83                                l446 0041  
                              l295 0F57                                l472 0FC9  
                              l448 0059                                l289 0F8F  
                              l298 0034                                l482 02FD  
                              l718 0193                                l728 014F  
                              l599 0364                                l899 0FA1  
                              _GIE 005F                                u900 0F89  
                              u901 0F88                                u910 0F8F  
                              u911 0F8E                                u920 0F98  
                              u921 0F97                                u930 0F9E  
                              u931 0F9D                                u940 003B  
                              u941 003A                                u970 0055  
                              u971 0054                                u955 0042  
                              u980 0FBB                                u981 0FBA  
                              u965 0049                                u990 0FC8  
                              u991 0FC7                                fsr0 0004  
                              indf 0000                       ___awmod@sign 0076  
      __size_of_Write_USART_String 002B                               l2001 01D8  
                             l2003 01DE                               l2011 0071  
                             l2005 005A                               l2021 0405  
                             l2013 0365                               l2007 005C  
                             l2023 0425                               l2015 036A  
                             l2009 006D                               l2025 042B  
                             l2017 036D                               l2027 0431  
                             l2019 0400                               l2071 06A6  
                             l1601 0FB7                               l1603 0FBB  
                             l1605 0FBF                               l1701 0FCB  
                             l2069 063D                               l1621 02BC  
                             l1613 0298                               l1607 0FC1  
                             l1711 0621                               l1631 02EF  
                             l1623 02C5                               l1615 02A8  
                             l1609 0FC8                               l1641 0158  
                             l1801 0785                               l1721 0642  
                             l1713 0626                               l1705 060F  
                             l1625 02D7                               l1617 02AB  
                             l1633 02F5                               l1571 0F89  
                             l1651 017B                               l1643 015B  
                             l1803 07B3                               l1811 07D9  
                             l1731 0682                               l1723 0652  
                             l1715 062B                               l1707 0614  
                             l1627 02E5                               l1619 02B8  
                             l1901 0200                               l1653 0181  
                             l1645 0162                               l1637 0150  
                             l1581 0FA0                               l1573 0F91  
                             l1805 07BA                               l1741 06BD  
                             l1725 0656                               l1709 061A  
                             l1629 02E6                               l1911 021C  
                             l1903 0203                               l1655 0182  
                             l1647 0166                               l1639 0152  
                             l1671 012A                               l1663 0116  
                             l1591 0048                               l1575 0F92  
                             l1807 07BE                               l1743 06C1  
                             l1727 066B                               l1735 0692  
                             l1719 062F                               l1831 0113  
                             l1823 00DE                               l1569 0F83  
                             l1921 0239                               l1913 0222  
                             l1905 020A                               l1657 0189  
                             l1649 016A                               l1673 012E  
                             l1665 011C                               l1681 014B  
                             l1593 004F                               l1585 0035  
                             l1577 0F98                               l1761 06F8  
                             l1753 06CC                               l1745 06C5  
                             l1737 06B1                               l1729 067E  
                             l1809 07C7                               l1833 0114  
                             l1825 00E2                               l1841 0F81  
                             l1851 030A                               l1843 02FE  
                             l1915 0229                               l1907 020E  
                             l1659 018F                               l1675 0138  
                             l1667 011F                               l1595 0055  
                             l1587 0037                               l1579 0F9E  
                             l1771 0723                               l1763 06FE  
                             l1747 06CA                               l1739 06B9  
                             l1691 0F66                               l1827 00E5  
                             l1835 0F41                               l1931 0098  
                             l1941 0F54                               l1861 031F  
                             l1853 030E                               l1845 02FF  
                             l1909 0212                               l1917 022F  
                             l1677 013E                               l1669 0126  
                             l1589 003B                               l1781 0741  
                             l1773 0729                               l1765 070F  
                             l1757 06E8                               l1685 0F58  
                             l1693 002C                               l1829 0112  
                             l1837 0F44                               l1933 00A5  
                             l1925 0085                               l1951 00CB  
                             l1943 00B0                               l1871 0342  
                             l1863 0322                               l1855 0313  
                             l1847 0303                               l1919 0234  
                             l1599 0FB6                               l1679 0145  
                             l1791 0763                               l1783 0745  
                             l1775 0730                               l1767 071B  
                             l1759 06F2                               l1687 0F5D  
                             l1695 0031                               l1839 0F77  
                             l1935 00AA                               l1927 008D  
                             l1953 00D1                               l1945 00B5  
                             l1881 035B                               l1873 0348  
                             l1865 0329                               l1857 0317  
                             l1849 0308                               l1793 076F  
                             l1777 0734                               l1785 0752  
                             l1769 071F                               l1961 059B  
                             l1697 0F6C                               l1689 0F61  
                             l1937 023E                               l1929 008E  
                             l1955 00D9                               l1947 00BD  
                             l1939 0F4F                               l1883 0360  
                             l1875 0349                               l1867 032D  
                             l1859 0319                               l1891 01EA  
                             l1795 0775                               l1787 0758  
                             l1779 073A                               l1971 05F8  
                             l1963 05AC                               l1699 0F72  
                             l1949 00C6                               l1981 01AA  
                             l1973 0194                               l1877 0350  
                             l1869 0331                               l1893 01EF  
                             l1797 077C                               l1789 075F  
                             l1965 05BF                               l1991 01C2  
                             l1983 01B0                               l1975 019C  
                             l1879 0356                               l1895 01F1  
                             l1887 01E5                               l1799 0780  
                             l1967 05D2                               l1959 0443  
                             l1993 01C4                               l1985 01B4  
                             l1977 01A0                               l1897 01F5  
                             l1889 01E6                               l1969 05E5  
                             l1995 01CA                               l1987 01BA  
                             l1979 01A6                               l1899 01FA  
                             l1997 01CE                               l1989 01BC  
                             l1999 01D4                               STR_1 0026  
                             STR_2 0029                               STR_3 001D  
                             STR_4 001D                               STR_5 001D  
                             STR_6 001D                               STR_7 0022  
                             u1000 02A8                               u1001 02A7  
                             u1020 02BC                               u1021 02BB  
                             u1110 017B                               u1111 017A  
                             u1015 02AD                               u1200 0F72  
                             u1040 02D7                               u1105 016B  
                             u1201 0F71                               u1041 02D6  
                             u1130 018F                               u1131 018E  
                             u1115 0177                               u1035 02BE  
                             u1140 011C                               u1300 070F  
                             u1220 061A                               u1060 02F5  
                             u1125 0183                               u1141 011B  
                             u1301 070E                               u1221 0619  
                             u1061 02F4                               u1045 02D3  
                             u1070 0158                               u1310 0723  
                             u1230 0652                               u1215 0FD5  
                             u1071 0157                               u1311 0722  
                             u1231 0651                               u1055 02E7  
                             u1160 012E                               u1320 0729  
                             u1240 0692                               u1400 00F5  
                             u1161 012D                               u1321 0728  
                             u1305 070B                               u1241 0691  
                             u1410 0303                               u1090 016A  
                             u1170 0138                               u1330 073A  
                             u1250 06C1                               u1411 0302  
                             u1091 0169                               u1171 0137  
                             u1155 0120                               u1331 0739  
                             u1251 06C0                               u1500 035B  
                             u1420 030E                               u1340 0751  
                             u1260 06E7                               u1501 035A  
                             u1421 030D                               u1085 015C  
                             u1341 0750                               u1261 06E6  
                             u1405 00F0                               u1430 031F  
                             u1510 01EA                               u1190 014B  
                             u1350 0758                               u1270 06F2  
                             u1431 031E                               u1511 01E9  
                             u1191 014A                               u1175 0134  
                             u1351 0757                               u1271 06F1  
                             u1600 00D1                               u1520 01F5  
                             u1360 076F                               u1280 06F8  
                             u1601 00D0                               u1521 01F4  
                             u1185 013F                               u1361 076E  
                             u1281 06F7                               u1265 06E3  
                             u1610 019C                               u1450 0331  
                             u1530 0200                               u1370 0775  
                             u1290 06FE                               u1611 019B  
                             u1451 0330                               u1531 01FF  
                             u1371 0774                               u1291 06FD  
                             u1620 01A6                               u1380 07C7  
                             u1621 01A5                               u1445 0323  
                             u1381 07C6                               u1630 01B0  
                             u1470 0342                               u1550 0212  
                             u1390 07D9                               u1631 01AF  
                             u1471 0341                               u1551 0211  
                             u1391 07D8                               u1640 01BA  
                             u1560 021C                               u1641 01B9  
                             u1465 0332                               u1561 021B  
                             u1545 0204                               u1650 01C2  
                             u1490 0356                               u1651 01C1  
                             u1491 0355                               u1475 033E  
                             u1707 0439                               u1660 01CA  
                             u1580 022F                               u1661 01C9  
                             u1485 034A                               u1581 022E  
                             u1565 0218                               u1670 01D4  
                             u1590 0234                               u1671 01D3  
                             u1591 0233                               u1575 0223  
                             u1680 01DE                               u1681 01DD  
                             u1690 0084                               u1691 0083  
                             _PEIE 005E                               _RCIF 0065  
                             _TRMT 04C1                               _Date 0020  
                             _Time 002F   __end_of_I2C_Master_RepeatedStart 0F58  
                             _cont 0040                               _main 0365  
                             _hour 0044                               _year 0041  
                             btemp 007E                               start 0000  
                  __end_of_Led_RTC 01E5                  ___bmul@multiplier 0073  
            __size_of_Write_to_RTC 005A                   ?_I2C_Master_Init 0058  
                 ?_I2C_Master_Read 0070                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                  __end_of___awdiv 0365                    __end_of___awmod 023E  
                            _ANSEL 0188                    __end_of___lldiv 02FE  
                  ___awdiv@divisor 0070                    __end_of___lwdiv 0194  
                  __end_of___lwmod 0150                    ___awdiv@counter 0075  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009                              _TRISA 0085  
                            _TRISB 0086                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            _SSPIF 0063                              _TXREG 0019  
                            _m_day 0043                    __end_of_dpowers 001D  
                  __end_of_isdigit 0FA2                              _month 0042  
                            _setup 0085                              pclath 000A  
                     _Write_to_RTC 023E                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 07DE  
                      ?_USART_Init 0070                    __initialization 07DE  
                     __end_of_main 0443                             ??_main 006A  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0070  
               ??_I2C_Master_Start 0070                 ??_I2C_Master_Write 0072  
                 ___awdiv@dividend 0072                _USART_Init_BaudRate 0F41  
                           ?_setup 0070                             _ANSELH 0189  
                        ??_Led_RTC 0070                             _SPBRGH 009A  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 0F4F  
                           ___bmul 0FB5                             ___wmul 0035  
                        ??___awdiv 0074                          ??___awmod 0074  
             ?_USART_Init_BaudRate 0070                          ??___lldiv 0078  
                        ??___lwdiv 0074                          ??___lwmod 007C  
                 ___awdiv@quotient 0077                             _minute 0045  
                           _second 0046                    ___awmod@divisor 0070  
                  ___awmod@counter 0075                          ??_isdigit 0070  
              __size_of_USART_Init 000C                          ??_sprintf 005B  
          __end_of__initialization 07FC                ___bmul@multiplicand 0070  
                   __pcstackCOMMON 0070              ??_USART_Init_BaudRate 0070  
                     __pidataBANK0 0FE2                      __end_of_setup 00B0  
                     ?_RTC_display 0070                       sprintf@width 0063  
                          ??_setup 007E                       Write_USART@a 0070  
                       __pbssBANK0 003E                         __pbssBANK1 00A0  
                       _data_total 00A0                         __pmaintext 0365  
                          ?___bmul 0070                            ?___wmul 0070  
                    ??_Write_USART 0070         __end_of_Write_USART_String 0085  
          __size_of_bcd_to_decimal 0018                            _SSPCON2 0091  
                          _SSPSTAT 0094                         __stringtab 0003  
                          _Led_RTC 0194                       ??_USART_Init 0070  
                  __size_of___bmul 0015                            ___awdiv 02FE  
                          ___awmod 01E5                            ___lldiv 0298  
                  __size_of___wmul 0025                            ___lwdiv 0150  
                          ___lwmod 0116                            __ptext1 0085  
                          __ptext2 0F41                            __ptext3 0F77  
                          __ptext4 00DE                            __ptext5 0298  
                          __ptext6 023E                            __ptext7 0F61  
                          __ptext8 002C                            __ptext9 0F58  
                          _dpowers 0013                __end_of_Write_USART 0F77  
                          _isdigit 0F90                   ___awmod@dividend 0072  
         __size_of_I2C_Master_Init 0038           __size_of_I2C_Master_Read 002E  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
               __end_of_USART_Init 0F83                            _sprintf 060C  
                          clrloop0 0F48               end_of_initialization 07FC  
       ??_I2C_Master_RepeatedStart 0070          __size_of_I2C_Master_Start 0009  
        __size_of_I2C_Master_Write 000A                    ___lldiv@divisor 0070  
                  ___lldiv@counter 007D                         _month_send 00C4  
                        _RCSTAbits 0018                   I2C_Master_Init@c 0058  
                 I2C_Master_Read@a 0070                          _PORTAbits 0005  
                        _PORTDbits 0008                          _PORTEbits 0009  
             __size_of_RTC_display 01C9                          _TRISCbits 0087  
                        _TXSTAbits 0098                     __end_of___bmul 0FCA  
                      _Write_USART 0F6B                     __end_of___wmul 005A  
              start_initialization 07DE                     _bcd_to_decimal 0FCA  
                ??_I2C_Master_Init 005C                  ??_I2C_Master_Read 0072  
                ??_I2C_Master_Wait 0070                  ??_I2C_Master_Stop 0070  
      __end_of_USART_Init_BaudRate 0F47                           ??___bmul 0071  
                         ??___wmul 0074                         init_fetch0 0FA2  
                      __pdataBANK0 0020             __end_of_bcd_to_decimal 0FE2  
                        ___latbits 0002                      __pcstackBANK0 0058  
                     _isdigit$1032 0070                        _data_recive 003E  
                    ?_Write_to_RTC 0070                           ?_Led_RTC 0070  
                      sprintf@flag 0062                 _Write_USART_String 005A  
                      sprintf@prec 005F                   _I2C_Master_Start 0F58  
                 _I2C_Master_Write 0F61                   ___lwdiv@dividend 0072  
              ?_Write_USART_String 0071                           ?___awdiv 0070  
                         ?___awmod 0070                           ?___lldiv 0070  
                         ?___lwdiv 0070                           ?___lwmod 0078  
                        __pstrings 0003                          _cont_send 00B4  
                  ?_bcd_to_decimal 0070                           ?_isdigit 0070  
             ??_Write_USART_String 0073                   ___lwdiv@quotient 0075  
                         ?_sprintf 0058               bcd_to_decimal@number 0077  
                   ??_Write_to_RTC 0072                     __size_of_setup 002B  
                        _hour_send 00D4                     ___wmul@product 0074  
                        clear_ram0 0F47                           _PIE1bits 008C  
                        _year_send 00BC                        __stringbase 0012  
                ___wmul@multiplier 0070                I2C_Master_Read@temp 0074  
                 __size_of_Led_RTC 0051                       ?_Write_USART 0070  
__size_of_I2C_Master_RepeatedStart 0009                   __size_of___awdiv 0067  
                 __size_of___awmod 0059          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0066                   __size_of___lwdiv 0044  
                 __size_of___lwmod 003A                      ??_RTC_display 0067  
               __end_of__stringtab 0013                         sprintf@val 0060  
                  _I2C_Master_Init 00DE                    _I2C_Master_Read 00B0  
                  _I2C_Master_Wait 0F83                    _I2C_Master_Stop 002C  
                 __size_of_isdigit 0012                    ___lwdiv@divisor 0070  
                         _day_send 00CC                    ___lwdiv@counter 0077  
                         __ptext10 005A                           __ptext11 0F6B  
                         __ptext20 01E5                           __ptext12 0443  
                         __ptext21 02FE                           __ptext13 060C  
                         __ptext22 0194                           __ptext14 0F90  
                         __ptext23 0F4F                           __ptext15 0035  
                         __ptext24 00B0                           __ptext16 0116  
                         __ptext25 0F83                           __ptext17 0150  
                         __ptext18 0FCA                           __ptext19 0FB5  
                 __size_of_sprintf 01D2                      __size_of_main 00DE  
                         _min_send 0048                           _sec_send 0050  
             __end_of_Write_to_RTC 0298           __end_of_I2C_Master_Start 0F61  
         __end_of_I2C_Master_Write 0F6B                         _INTCONbits 000B  
              Write_USART_String@a 0071                Write_USART_String@i 0074  
                         init_ram0 0FA6                __end_of_RTC_display 060C  
                         isdigit@c 0071                          sprintf@ap 005E  
                        sprintf@sp 0066                   ___lwmod@dividend 007A  
                 ___lldiv@dividend 0074                          stringcode 000D  
                       _OSCCONbits 008F                   ??_bcd_to_decimal 0074  
     __size_of_USART_Init_BaudRate 0006            __end_of_I2C_Master_Init 0116  
          __end_of_I2C_Master_Read 00DE            __end_of_I2C_Master_Wait 0F90  
          __end_of_I2C_Master_Stop 0035                           sprintf@c 0065  
                         sprintf@f 0058                   ___lldiv@quotient 0079  
                I2C_Master_Write@d 0070                    ___lwmod@divisor 0078  
                  ___lwmod@counter 007D                           stringdir 000D  
                         stringtab 0003                        _SSPCON2bits 0091  
                       _USART_Init 0F77  
