

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 09:29:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F887 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  008F                     	;# 
   128  0090                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0095                     	;# 
   136  0096                     	;# 
   137  0097                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009B                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  009F                     	;# 
   146  0105                     	;# 
   147  0107                     	;# 
   148  0108                     	;# 
   149  0109                     	;# 
   150  010C                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  0185                     	;# 
   156  0187                     	;# 
   157  0188                     	;# 
   158  0189                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0006                     	;# 
   168  0007                     	;# 
   169  0008                     	;# 
   170  0009                     	;# 
   171  000A                     	;# 
   172  000B                     	;# 
   173  000C                     	;# 
   174  000D                     	;# 
   175  000E                     	;# 
   176  000E                     	;# 
   177  000F                     	;# 
   178  0010                     	;# 
   179  0011                     	;# 
   180  0012                     	;# 
   181  0013                     	;# 
   182  0014                     	;# 
   183  0015                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0017                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  001B                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  001D                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  0086                     	;# 
   199  0087                     	;# 
   200  0088                     	;# 
   201  0089                     	;# 
   202  008C                     	;# 
   203  008D                     	;# 
   204  008E                     	;# 
   205  008F                     	;# 
   206  0090                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  009F                     	;# 
   224  0105                     	;# 
   225  0107                     	;# 
   226  0108                     	;# 
   227  0109                     	;# 
   228  010C                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  0185                     	;# 
   234  0187                     	;# 
   235  0188                     	;# 
   236  0189                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  008F                     	;# 
   284  0090                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0095                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009C                     	;# 
   299  009D                     	;# 
   300  009E                     	;# 
   301  009F                     	;# 
   302  0105                     	;# 
   303  0107                     	;# 
   304  0108                     	;# 
   305  0109                     	;# 
   306  010C                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  010F                     	;# 
   311  0185                     	;# 
   312  0187                     	;# 
   313  0188                     	;# 
   314  0189                     	;# 
   315  018C                     	;# 
   316  018D                     	;# 
   317  0000                     	;# 
   318  0001                     	;# 
   319  0002                     	;# 
   320  0003                     	;# 
   321  0004                     	;# 
   322  0005                     	;# 
   323  0006                     	;# 
   324  0007                     	;# 
   325  0008                     	;# 
   326  0009                     	;# 
   327  000A                     	;# 
   328  000B                     	;# 
   329  000C                     	;# 
   330  000D                     	;# 
   331  000E                     	;# 
   332  000E                     	;# 
   333  000F                     	;# 
   334  0010                     	;# 
   335  0011                     	;# 
   336  0012                     	;# 
   337  0013                     	;# 
   338  0014                     	;# 
   339  0015                     	;# 
   340  0015                     	;# 
   341  0016                     	;# 
   342  0017                     	;# 
   343  0018                     	;# 
   344  0019                     	;# 
   345  001A                     	;# 
   346  001B                     	;# 
   347  001B                     	;# 
   348  001C                     	;# 
   349  001D                     	;# 
   350  001E                     	;# 
   351  001F                     	;# 
   352  0081                     	;# 
   353  0085                     	;# 
   354  0086                     	;# 
   355  0087                     	;# 
   356  0088                     	;# 
   357  0089                     	;# 
   358  008C                     	;# 
   359  008D                     	;# 
   360  008E                     	;# 
   361  008F                     	;# 
   362  0090                     	;# 
   363  0091                     	;# 
   364  0092                     	;# 
   365  0093                     	;# 
   366  0093                     	;# 
   367  0093                     	;# 
   368  0094                     	;# 
   369  0095                     	;# 
   370  0096                     	;# 
   371  0097                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009A                     	;# 
   375  009B                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  009F                     	;# 
   380  0105                     	;# 
   381  0107                     	;# 
   382  0108                     	;# 
   383  0109                     	;# 
   384  010C                     	;# 
   385  010C                     	;# 
   386  010D                     	;# 
   387  010E                     	;# 
   388  010F                     	;# 
   389  0185                     	;# 
   390  0187                     	;# 
   391  0188                     	;# 
   392  0189                     	;# 
   393  018C                     	;# 
   394  018D                     	;# 
   395  0000                     	;# 
   396  0001                     	;# 
   397  0002                     	;# 
   398  0003                     	;# 
   399  0004                     	;# 
   400  0005                     	;# 
   401  0006                     	;# 
   402  0007                     	;# 
   403  0008                     	;# 
   404  0009                     	;# 
   405  000A                     	;# 
   406  000B                     	;# 
   407  000C                     	;# 
   408  000D                     	;# 
   409  000E                     	;# 
   410  000E                     	;# 
   411  000F                     	;# 
   412  0010                     	;# 
   413  0011                     	;# 
   414  0012                     	;# 
   415  0013                     	;# 
   416  0014                     	;# 
   417  0015                     	;# 
   418  0015                     	;# 
   419  0016                     	;# 
   420  0017                     	;# 
   421  0018                     	;# 
   422  0019                     	;# 
   423  001A                     	;# 
   424  001B                     	;# 
   425  001B                     	;# 
   426  001C                     	;# 
   427  001D                     	;# 
   428  001E                     	;# 
   429  001F                     	;# 
   430  0081                     	;# 
   431  0085                     	;# 
   432  0086                     	;# 
   433  0087                     	;# 
   434  0088                     	;# 
   435  0089                     	;# 
   436  008C                     	;# 
   437  008D                     	;# 
   438  008E                     	;# 
   439  008F                     	;# 
   440  0090                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0093                     	;# 
   444  0093                     	;# 
   445  0093                     	;# 
   446  0094                     	;# 
   447  0095                     	;# 
   448  0096                     	;# 
   449  0097                     	;# 
   450  0098                     	;# 
   451  0099                     	;# 
   452  009A                     	;# 
   453  009B                     	;# 
   454  009C                     	;# 
   455  009D                     	;# 
   456  009E                     	;# 
   457  009F                     	;# 
   458  0105                     	;# 
   459  0107                     	;# 
   460  0108                     	;# 
   461  0109                     	;# 
   462  010C                     	;# 
   463  010C                     	;# 
   464  010D                     	;# 
   465  010E                     	;# 
   466  010F                     	;# 
   467  0185                     	;# 
   468  0187                     	;# 
   469  0188                     	;# 
   470  0189                     	;# 
   471  018C                     	;# 
   472  018D                     	;# 
   473  0000                     	;# 
   474  0001                     	;# 
   475  0002                     	;# 
   476  0003                     	;# 
   477  0004                     	;# 
   478  0005                     	;# 
   479  0006                     	;# 
   480  0007                     	;# 
   481  0008                     	;# 
   482  0009                     	;# 
   483  000A                     	;# 
   484  000B                     	;# 
   485  000C                     	;# 
   486  000D                     	;# 
   487  000E                     	;# 
   488  000E                     	;# 
   489  000F                     	;# 
   490  0010                     	;# 
   491  0011                     	;# 
   492  0012                     	;# 
   493  0013                     	;# 
   494  0014                     	;# 
   495  0015                     	;# 
   496  0015                     	;# 
   497  0016                     	;# 
   498  0017                     	;# 
   499  0018                     	;# 
   500  0019                     	;# 
   501  001A                     	;# 
   502  001B                     	;# 
   503  001B                     	;# 
   504  001C                     	;# 
   505  001D                     	;# 
   506  001E                     	;# 
   507  001F                     	;# 
   508  0081                     	;# 
   509  0085                     	;# 
   510  0086                     	;# 
   511  0087                     	;# 
   512  0088                     	;# 
   513  0089                     	;# 
   514  008C                     	;# 
   515  008D                     	;# 
   516  008E                     	;# 
   517  008F                     	;# 
   518  0090                     	;# 
   519  0091                     	;# 
   520  0092                     	;# 
   521  0093                     	;# 
   522  0093                     	;# 
   523  0093                     	;# 
   524  0094                     	;# 
   525  0095                     	;# 
   526  0096                     	;# 
   527  0097                     	;# 
   528  0098                     	;# 
   529  0099                     	;# 
   530  009A                     	;# 
   531  009B                     	;# 
   532  009C                     	;# 
   533  009D                     	;# 
   534  009E                     	;# 
   535  009F                     	;# 
   536  0105                     	;# 
   537  0107                     	;# 
   538  0108                     	;# 
   539  0109                     	;# 
   540  010C                     	;# 
   541  010C                     	;# 
   542  010D                     	;# 
   543  010E                     	;# 
   544  010F                     	;# 
   545  0185                     	;# 
   546  0187                     	;# 
   547  0188                     	;# 
   548  0189                     	;# 
   549  018C                     	;# 
   550  018D                     	;# 
   551                           
   552                           	psect	idataBANK0
   553  07E1                     __pidataBANK0:
   554                           
   555                           ;initializer for _Date
   556  07E1  3444               	retlw	68
   557  07E2  3441               	retlw	65
   558  07E3  3454               	retlw	84
   559  07E4  3445               	retlw	69
   560  07E5  343A               	retlw	58
   561  07E6  3420               	retlw	32
   562  07E7  3430               	retlw	48
   563  07E8  3430               	retlw	48
   564  07E9  342F               	retlw	47
   565  07EA  3430               	retlw	48
   566  07EB  3430               	retlw	48
   567  07EC  342F               	retlw	47
   568  07ED  3430               	retlw	48
   569  07EE  3430               	retlw	48
   570  07EF  3400               	retlw	0
   571                           
   572                           ;initializer for _Time
   573  07F0  3454               	retlw	84
   574  07F1  3449               	retlw	73
   575  07F2  344D               	retlw	77
   576  07F3  3445               	retlw	69
   577  07F4  343A               	retlw	58
   578  07F5  3420               	retlw	32
   579  07F6  3430               	retlw	48
   580  07F7  3430               	retlw	48
   581  07F8  343A               	retlw	58
   582  07F9  3430               	retlw	48
   583  07FA  3430               	retlw	48
   584  07FB  343A               	retlw	58
   585  07FC  3430               	retlw	48
   586  07FD  3430               	retlw	48
   587  07FE  3400               	retlw	0
   588                           
   589                           	psect	strings
   590  0800                     __pstrings:
   591  0800                     stringtab:
   592  0800                     __stringtab:
   593                           
   594                           ;	String table - string pointers are 1 byte each
   595  0800  1BFF               	btfsc	btemp+1,7
   596  0801  280A               	ljmp	stringcode
   597  0802  1383               	bcf	3,7
   598  0803  187F               	btfsc	btemp+1,0
   599  0804  1783               	bsf	3,7
   600  0805  0800               	movf	0,w
   601  0806  0A84               	incf	4,f
   602  0807  1903               	skipnz
   603  0808  0AFF               	incf	btemp+1,f
   604  0809  0008               	return
   605  080A                     stringcode:
   606  080A                     stringdir:
   607  080A  3008               	movlw	high stringdir
   608  080B  008A               	movwf	10
   609  080C  0804               	movf	4,w
   610  080D  0A84               	incf	4,f
   611  080E  0782               	addwf	2,f
   612  080F                     __stringbase:
   613  080F  3400               	retlw	0
   614  0810                     __end_of__stringtab:
   615  0810                     _dpowers:
   616  0810  3401               	retlw	1
   617  0811  3400               	retlw	0
   618  0812  340A               	retlw	10
   619  0813  3400               	retlw	0
   620  0814  3464               	retlw	100
   621  0815  3400               	retlw	0
   622  0816  34E8               	retlw	232
   623  0817  3403               	retlw	3
   624  0818  3410               	retlw	16
   625  0819  3427               	retlw	39
   626  081A                     __end_of_dpowers:
   627  0013                     _SSPBUF	set	19
   628  0014                     _SSPCON	set	20
   629  0019                     _TXREG	set	25
   630  000B                     _INTCONbits	set	11
   631  001A                     _RCREG	set	26
   632  0018                     _RCSTAbits	set	24
   633  0009                     _PORTEbits	set	9
   634  0009                     _PORTE	set	9
   635  0008                     _PORTD	set	8
   636  0007                     _PORTC	set	7
   637  0006                     _PORTB	set	6
   638  0005                     _PORTA	set	5
   639  0008                     _PORTDbits	set	8
   640  0005                     _PORTAbits	set	5
   641  000C                     _PIR1bits	set	12
   642  0063                     _SSPIF	set	99
   643  005E                     _PEIE	set	94
   644  005F                     _GIE	set	95
   645  0065                     _RCIF	set	101
   646  0091                     _SSPCON2bits	set	145
   647  0094                     _SSPSTAT	set	148
   648  0093                     _SSPADD	set	147
   649  0091                     _SSPCON2	set	145
   650  008C                     _PIE1bits	set	140
   651  0099                     _SPBRG	set	153
   652  009A                     _SPBRGH	set	154
   653  0098                     _TXSTAbits	set	152
   654  008F                     _OSCCONbits	set	143
   655  0089                     _TRISE	set	137
   656  0087                     _TRISCbits	set	135
   657  0086                     _TRISB	set	134
   658  0085                     _TRISA	set	133
   659  0088                     _TRISD	set	136
   660  0463                     _SSPIE	set	1123
   661  043C                     _TRISC4	set	1084
   662  043B                     _TRISC3	set	1083
   663  04C1                     _TRMT	set	1217
   664  0189                     _ANSELH	set	393
   665  0188                     _ANSEL	set	392
   666  081A                     STR_3:
   667  081A  3425               	retlw	37	;'%'
   668  081B  3430               	retlw	48	;'0'
   669  081C  3432               	retlw	50	;'2'
   670  081D  3464               	retlw	100	;'d'
   671  081E  3400               	retlw	0
   672  081F                     STR_7:
   673  081F  3425               	retlw	37	;'%'
   674  0820  3432               	retlw	50	;'2'
   675  0821  3464               	retlw	100	;'d'
   676  0822  3400               	retlw	0
   677  0823                     STR_1:
   678  0823  3420               	retlw	32	;' '
   679  0824  3420               	retlw	32	;' '
   680  0825  3400               	retlw	0
   681  0826                     STR_2:
   682  0826  3425               	retlw	37	;'%'
   683  0827  3464               	retlw	100	;'d'
   684  0828  3400               	retlw	0
   685  081A                     
   686                           	psect	cinit
   687  000F                     start_initialization:	
   688                           ; #config settings
   689                           
   690  000F                     __initialization:
   691                           
   692                           ; Initialize objects allocated to BANK0
   693  000F  1383               	bcf	3,7	;select IRP bank0
   694  0010  305E               	movlw	low (__pdataBANK0+30)
   695  0011  00FD               	movwf	btemp+-1
   696  0012  3007               	movlw	high __pidataBANK0
   697  0013  00FE               	movwf	btemp
   698  0014  30E1               	movlw	low __pidataBANK0
   699  0015  00FF               	movwf	btemp+1
   700  0016  3040               	movlw	low __pdataBANK0
   701  0017  0084               	movwf	4
   702  0018  120A  158A  2743  120A  118A  	fcall	init_ram0
   703                           
   704                           ; Clear objects allocated to BANK1
   705  001D  30A0               	movlw	low __pbssBANK1
   706  001E  0084               	movwf	4
   707  001F  30E4               	movlw	low (__pbssBANK1+68)
   708  0020  120A  158A  26DB  120A  118A  	fcall	clear_ram0
   709                           
   710                           ; Clear objects allocated to BANK0
   711  0025  305E               	movlw	low __pbssBANK0
   712  0026  0084               	movwf	4
   713  0027  306D               	movlw	low (__pbssBANK0+15)
   714  0028  120A  158A  26DB  120A  118A  	fcall	clear_ram0
   715                           
   716                           ; Clear objects allocated to COMMON
   717  002D  01F7               	clrf	__pbssCOMMON& (0+127)
   718  002E  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   719  002F  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   720  0030                     end_of_initialization:	
   721                           ;End of C runtime variable initialization code
   722                           
   723  0030                     __end_of__initialization:
   724  0030  0183               	clrf	3
   725  0031  120A  118A  2BD1   	ljmp	_main	;jump to C main() function
   726                           
   727                           	psect	bssCOMMON
   728  0077                     __pbssCOMMON:
   729  0077                     _data_recive:
   730  0077                     	ds	2
   731  0079                     _i:
   732  0079                     	ds	1
   733                           
   734                           	psect	bssBANK0
   735  005E                     __pbssBANK0:
   736  005E                     _cont:
   737  005E                     	ds	1
   738  005F                     _year:
   739  005F                     	ds	1
   740  0060                     _month:
   741  0060                     	ds	1
   742  0061                     _m_day:
   743  0061                     	ds	1
   744  0062                     _hour:
   745  0062                     	ds	1
   746  0063                     _minute:
   747  0063                     	ds	1
   748  0064                     _second:
   749  0064                     	ds	1
   750  0065                     _sec_send:
   751  0065                     	ds	8
   752                           
   753                           	psect	dataBANK0
   754  0040                     __pdataBANK0:
   755  0040                     _Date:
   756  0040                     	ds	15
   757  004F                     _Time:
   758  004F                     	ds	15
   759                           
   760                           	psect	bssBANK1
   761  00A0                     __pbssBANK1:
   762  00A0                     _data_total:
   763  00A0                     	ds	20
   764  00B4                     _cont_send:
   765  00B4                     	ds	8
   766  00BC                     _year_send:
   767  00BC                     	ds	8
   768  00C4                     _month_send:
   769  00C4                     	ds	8
   770  00CC                     _day_send:
   771  00CC                     	ds	8
   772  00D4                     _hour_send:
   773  00D4                     	ds	8
   774  00DC                     _min_send:
   775  00DC                     	ds	8
   776                           
   777                           	psect	inittext
   778  0F3F                     init_fetch0:	
   779                           ;	Called with low address in FSR and high address in W
   780                           
   781  0F3F  087E               	movf	btemp,w
   782  0F40  008A               	movwf	10
   783  0F41  087F               	movf	btemp+1,w
   784  0F42  0082               	movwf	2
   785  0F43                     init_ram0:	
   786                           ;Called with:
   787                           ;	high address of idata address in btemp 
   788                           ;	low address of idata address in btemp+1 
   789                           ;	low address of data in FSR
   790                           ;	high address + 1 of data in btemp-1
   791                           
   792  0F43  120A  158A  273F  120A  158A  	fcall	init_fetch0
   793  0F48  0080               	movwf	0
   794  0F49  0A84               	incf	4,f
   795  0F4A  0804               	movf	4,w
   796  0F4B  067D               	xorwf	btemp+-1,w
   797  0F4C  1903               	btfsc	3,2
   798  0F4D  3400               	retlw	0
   799  0F4E  0AFF               	incf	btemp+1,f
   800  0F4F  1903               	btfsc	3,2
   801  0F50  0AFE               	incf	btemp,f
   802  0F51  2F43               	goto	init_ram0
   803                           
   804                           	psect	clrtext
   805  0EDB                     clear_ram0:	
   806                           ;	Called with FSR containing the base address, and
   807                           ;	W with the last address+1
   808                           
   809  0EDB  0064               	clrwdt	;clear the watchdog before getting into this loop
   810  0EDC                     clrloop0:
   811  0EDC  0180               	clrf	0	;clear RAM location pointed to by FSR
   812  0EDD  0A84               	incf	4,f	;increment pointer
   813  0EDE  0604               	xorwf	4,w	;XOR with final address
   814  0EDF  1903               	btfsc	3,2	;have we reached the end yet?
   815  0EE0  3400               	retlw	0	;all done for this memory range, return
   816  0EE1  0604               	xorwf	4,w	;XOR again to restore value
   817  0EE2  2EDC               	goto	clrloop0	;do the next byte
   818                           
   819                           	psect	cstackCOMMON
   820  0070                     __pcstackCOMMON:
   821  0070                     ?_isdigit:
   822  0070                     ?_Read_USART:	
   823                           ; 1 bit 
   824                           
   825  0070                     ??_Read_USART:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_setup:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?_Write_to_RTC:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ?_I2C_Master_Start:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_I2C_Master_RepeatedStart:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_I2C_Master_Stop:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_RTC_display:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ?_Led_RTC:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ?_Piloto:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?_Write_USART:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_USART_Init_BaudRate:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?_USART_Init:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     ?_USART_INTERRUPT:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     ?_ISR:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     ??_ISR:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?_main:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ?_bcd_to_decimal:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ?_I2C_Master_Wait:	
   877                           ; 1 bytes @ 0x0
   878                           
   879                           
   880                           ; 1 bytes @ 0x0
   881  0070                     	ds	4
   882  0074                     ??_I2C_Master_Start:
   883  0074                     ?_I2C_Master_Write:	
   884                           ; 1 bytes @ 0x4
   885                           
   886  0074                     ??_I2C_Master_RepeatedStart:	
   887                           ; 1 bytes @ 0x4
   888                           
   889  0074                     ??_I2C_Master_Stop:	
   890                           ; 1 bytes @ 0x4
   891                           
   892  0074                     ??_Led_RTC:	
   893                           ; 1 bytes @ 0x4
   894                           
   895  0074                     ??_Piloto:	
   896                           ; 1 bytes @ 0x4
   897                           
   898  0074                     ??_Write_USART:	
   899                           ; 1 bytes @ 0x4
   900                           
   901  0074                     ??_USART_Init_BaudRate:	
   902                           ; 1 bytes @ 0x4
   903                           
   904  0074                     ??_USART_Init:	
   905                           ; 1 bytes @ 0x4
   906                           
   907  0074                     ??_USART_INTERRUPT:	
   908                           ; 1 bytes @ 0x4
   909                           
   910  0074                     ??_isdigit:	
   911                           ; 1 bytes @ 0x4
   912                           
   913  0074                     ??_I2C_Master_Wait:	
   914                           ; 1 bytes @ 0x4
   915                           
   916  0074                     ??___wmul:	
   917                           ; 1 bytes @ 0x4
   918                           
   919  0074                     ?___bmul:	
   920                           ; 1 bytes @ 0x4
   921                           
   922  0074                     ??___lldiv:	
   923                           ; 1 bytes @ 0x4
   924                           
   925  0074                     ??___awdiv:	
   926                           ; 1 bytes @ 0x4
   927                           
   928  0074                     ??___awmod:	
   929                           ; 1 bytes @ 0x4
   930                           
   931  0074                     ??___lwdiv:	
   932                           ; 1 bytes @ 0x4
   933                           
   934  0074                     ?_I2C_Master_Read:	
   935                           ; 1 bytes @ 0x4
   936                           
   937  0074                     Write_USART@a:	
   938                           ; 2 bytes @ 0x4
   939                           
   940  0074                     ___bmul@multiplicand:	
   941                           ; 1 bytes @ 0x4
   942                           
   943  0074                     _isdigit$1076:	
   944                           ; 1 bytes @ 0x4
   945                           
   946  0074                     I2C_Master_Write@d:	
   947                           ; 1 bytes @ 0x4
   948                           
   949  0074                     I2C_Master_Read@a:	
   950                           ; 2 bytes @ 0x4
   951                           
   952  0074                     ___wmul@product:	
   953                           ; 2 bytes @ 0x4
   954                           
   955                           
   956                           ; 2 bytes @ 0x4
   957  0074                     	ds	1
   958  0075                     ??_setup:
   959  0075                     ?_Write_USART_String:	
   960                           ; 1 bytes @ 0x5
   961                           
   962  0075                     ??___bmul:	
   963                           ; 1 bytes @ 0x5
   964                           
   965  0075                     ??___lwmod:	
   966                           ; 1 bytes @ 0x5
   967                           
   968  0075                     ___awmod@counter:	
   969                           ; 1 bytes @ 0x5
   970                           
   971  0075                     isdigit@c:	
   972                           ; 1 bytes @ 0x5
   973                           
   974  0075                     Write_USART_String@a:	
   975                           ; 1 bytes @ 0x5
   976                           
   977                           
   978                           ; 2 bytes @ 0x5
   979  0075                     	ds	1
   980  0076                     ??_Write_to_RTC:
   981  0076                     ??_I2C_Master_Write:	
   982                           ; 1 bytes @ 0x6
   983                           
   984  0076                     bcd_to_decimal@number:	
   985                           ; 1 bytes @ 0x6
   986                           
   987  0076                     ___awmod@sign:	
   988                           ; 1 bytes @ 0x6
   989                           
   990  0076                     ___lwmod@counter:	
   991                           ; 1 bytes @ 0x6
   992                           
   993                           
   994                           ; 1 bytes @ 0x6
   995  0076                     	ds	1
   996                           
   997                           	psect	cstackBANK0
   998  0020                     __pcstackBANK0:
   999  0020                     ??_I2C_Master_Read:
  1000  0020                     ??_Write_USART_String:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0020                     ?___wmul:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0020                     ?___awdiv:	
  1007                           ; 2 bytes @ 0x0
  1008                           
  1009  0020                     ?___awmod:	
  1010                           ; 2 bytes @ 0x0
  1011                           
  1012  0020                     ?___lwdiv:	
  1013                           ; 2 bytes @ 0x0
  1014                           
  1015  0020                     ?___lldiv:	
  1016                           ; 2 bytes @ 0x0
  1017                           
  1018  0020                     ___bmul@product:	
  1019                           ; 4 bytes @ 0x0
  1020                           
  1021  0020                     ___wmul@multiplier:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0020                     ___awdiv@divisor:	
  1025                           ; 2 bytes @ 0x0
  1026                           
  1027  0020                     ___awmod@divisor:	
  1028                           ; 2 bytes @ 0x0
  1029                           
  1030  0020                     ___lwdiv@divisor:	
  1031                           ; 2 bytes @ 0x0
  1032                           
  1033  0020                     ___lldiv@divisor:	
  1034                           ; 2 bytes @ 0x0
  1035                           
  1036                           
  1037                           ; 4 bytes @ 0x0
  1038  0020                     	ds	1
  1039  0021                     Write_USART_String@i:
  1040  0021                     ___bmul@multiplier:	
  1041                           ; 1 bytes @ 0x1
  1042                           
  1043                           
  1044                           ; 1 bytes @ 0x1
  1045  0021                     	ds	1
  1046  0022                     ??_bcd_to_decimal:
  1047  0022                     I2C_Master_Read@temp:	
  1048                           ; 1 bytes @ 0x2
  1049                           
  1050  0022                     ___wmul@multiplicand:	
  1051                           ; 2 bytes @ 0x2
  1052                           
  1053  0022                     ___awdiv@dividend:	
  1054                           ; 2 bytes @ 0x2
  1055                           
  1056  0022                     ___awmod@dividend:	
  1057                           ; 2 bytes @ 0x2
  1058                           
  1059  0022                     ___lwdiv@dividend:	
  1060                           ; 2 bytes @ 0x2
  1061                           
  1062                           
  1063                           ; 2 bytes @ 0x2
  1064  0022                     	ds	2
  1065  0024                     ___awdiv@counter:
  1066  0024                     ___lwdiv@counter:	
  1067                           ; 1 bytes @ 0x4
  1068                           
  1069  0024                     ___lldiv@dividend:	
  1070                           ; 1 bytes @ 0x4
  1071                           
  1072                           
  1073                           ; 4 bytes @ 0x4
  1074  0024                     	ds	1
  1075  0025                     ___awdiv@sign:
  1076  0025                     ___lwdiv@quotient:	
  1077                           ; 1 bytes @ 0x5
  1078                           
  1079                           
  1080                           ; 2 bytes @ 0x5
  1081  0025                     	ds	1
  1082  0026                     ___awdiv@quotient:
  1083                           
  1084                           ; 2 bytes @ 0x6
  1085  0026                     	ds	1
  1086  0027                     ?___lwmod:
  1087  0027                     ___lwmod@divisor:	
  1088                           ; 2 bytes @ 0x7
  1089                           
  1090                           
  1091                           ; 2 bytes @ 0x7
  1092  0027                     	ds	1
  1093  0028                     ___lldiv@quotient:
  1094                           
  1095                           ; 4 bytes @ 0x8
  1096  0028                     	ds	1
  1097  0029                     ___lwmod@dividend:
  1098                           
  1099                           ; 2 bytes @ 0x9
  1100  0029                     	ds	2
  1101  002B                     ?_sprintf:
  1102  002B                     sprintf@f:	
  1103                           ; 2 bytes @ 0xB
  1104                           
  1105                           
  1106                           ; 1 bytes @ 0xB
  1107  002B                     	ds	1
  1108  002C                     ___lldiv@counter:
  1109                           
  1110                           ; 1 bytes @ 0xC
  1111  002C                     	ds	1
  1112  002D                     ?_I2C_Master_Init:
  1113  002D                     I2C_Master_Init@c:	
  1114                           ; 1 bytes @ 0xD
  1115                           
  1116                           
  1117                           ; 4 bytes @ 0xD
  1118  002D                     	ds	1
  1119  002E                     ??_sprintf:
  1120                           
  1121                           ; 1 bytes @ 0xE
  1122  002E                     	ds	3
  1123  0031                     ??_I2C_Master_Init:
  1124  0031                     sprintf@ap:	
  1125                           ; 1 bytes @ 0x11
  1126                           
  1127                           
  1128                           ; 1 bytes @ 0x11
  1129  0031                     	ds	1
  1130  0032                     sprintf@prec:
  1131                           
  1132                           ; 1 bytes @ 0x12
  1133  0032                     	ds	1
  1134  0033                     sprintf@val:
  1135                           
  1136                           ; 2 bytes @ 0x13
  1137  0033                     	ds	2
  1138  0035                     sprintf@flag:
  1139                           
  1140                           ; 1 bytes @ 0x15
  1141  0035                     	ds	1
  1142  0036                     sprintf@width:
  1143                           
  1144                           ; 2 bytes @ 0x16
  1145  0036                     	ds	2
  1146  0038                     sprintf@c:
  1147                           
  1148                           ; 1 bytes @ 0x18
  1149  0038                     	ds	1
  1150  0039                     sprintf@sp:
  1151                           
  1152                           ; 1 bytes @ 0x19
  1153  0039                     	ds	1
  1154  003A                     ??_RTC_display:
  1155                           
  1156                           ; 1 bytes @ 0x1A
  1157  003A                     	ds	3
  1158  003D                     ??_main:
  1159                           
  1160                           ; 1 bytes @ 0x1D
  1161  003D                     	ds	3
  1162                           
  1163                           	psect	maintext
  1164  03D1                     __pmaintext:	
  1165 ;;
  1166 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1167 ;;
  1168 ;; *************** function _main *****************
  1169 ;; Defined at:
  1170 ;;		line 122 in file "main_mini2.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;		None
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : B00/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1184 ;;      Params:         0       0       0       0       0
  1185 ;;      Locals:         0       0       0       0       0
  1186 ;;      Temps:          0       3       0       0       0
  1187 ;;      Totals:         0       3       0       0       0
  1188 ;;Total ram usage:        3 bytes
  1189 ;; Hardware stack levels required when called:    5
  1190 ;; This function calls:
  1191 ;;		_I2C_Master_Read
  1192 ;;		_I2C_Master_RepeatedStart
  1193 ;;		_I2C_Master_Start
  1194 ;;		_I2C_Master_Stop
  1195 ;;		_I2C_Master_Write
  1196 ;;		_Led_RTC
  1197 ;;		_Piloto
  1198 ;;		_RTC_display
  1199 ;;		_Write_USART
  1200 ;;		_Write_USART_String
  1201 ;;		_Write_to_RTC
  1202 ;;		_setup
  1203 ;; This function is called by:
  1204 ;;		Startup code after reset
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           
  1209                           ;psect for function _main
  1210  03D1                     _main:
  1211  03D1                     l2673:	
  1212                           ;incstack = 0
  1213                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1214                           
  1215                           
  1216                           ;main_mini2.c: 123:     setup();
  1217  03D1  120A  118A  2780  120A  118A  	fcall	_setup
  1218  03D6                     l2675:
  1219                           
  1220                           ;main_mini2.c: 124:     TRISD = 0x00;
  1221  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  1222  03D7  1303               	bcf	3,6	;RP1=0, select bank1
  1223  03D8  0188               	clrf	8	;volatile
  1224  03D9                     l2677:
  1225                           
  1226                           ;main_mini2.c: 125:     Write_to_RTC();
  1227  03D9  120A  118A  25E3  120A  118A  	fcall	_Write_to_RTC
  1228  03DE                     l2679:
  1229                           
  1230                           ;main_mini2.c: 131:         I2C_Master_Start();
  1231  03DE  120A  158A  26EC  120A  118A  	fcall	_I2C_Master_Start
  1232  03E3                     l2681:
  1233                           
  1234                           ;main_mini2.c: 132:         I2C_Master_Write(0xD0);
  1235  03E3  30D0               	movlw	208
  1236  03E4  00F4               	movwf	I2C_Master_Write@d
  1237  03E5  3000               	movlw	0
  1238  03E6  00F5               	movwf	I2C_Master_Write@d+1
  1239  03E7  120A  158A  26FE  120A  118A  	fcall	_I2C_Master_Write
  1240  03EC                     l2683:
  1241                           
  1242                           ;main_mini2.c: 133:         I2C_Master_Write(0);
  1243  03EC  3000               	movlw	0
  1244  03ED  00F4               	movwf	I2C_Master_Write@d
  1245  03EE  00F5               	movwf	I2C_Master_Write@d+1
  1246  03EF  120A  158A  26FE  120A  118A  	fcall	_I2C_Master_Write
  1247  03F4                     l2685:
  1248                           
  1249                           ;main_mini2.c: 134:         I2C_Master_RepeatedStart();
  1250  03F4  120A  158A  26E3  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1251  03F9                     l2687:
  1252                           
  1253                           ;main_mini2.c: 135:         I2C_Master_Write(0xD1);
  1254  03F9  30D1               	movlw	209
  1255  03FA  00F4               	movwf	I2C_Master_Write@d
  1256  03FB  3000               	movlw	0
  1257  03FC  00F5               	movwf	I2C_Master_Write@d+1
  1258  03FD  120A  158A  26FE  120A  118A  	fcall	_I2C_Master_Write
  1259  0402                     l2689:
  1260                           
  1261                           ;main_mini2.c: 136:         second = I2C_Master_Read(1);
  1262  0402  3001               	movlw	1
  1263  0403  00F4               	movwf	I2C_Master_Read@a
  1264  0404  3000               	movlw	0
  1265  0405  00F5               	movwf	I2C_Master_Read@a+1
  1266  0406  120A  118A  27B1  120A  118A  	fcall	_I2C_Master_Read
  1267  040B  0874               	movf	?_I2C_Master_Read,w
  1268  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1269  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1270  040E  00BD               	movwf	??_main
  1271  040F  083D               	movf	??_main,w
  1272  0410  00E4               	movwf	_second
  1273  0411                     l2691:
  1274                           
  1275                           ;main_mini2.c: 137:         minute = I2C_Master_Read(1);
  1276  0411  3001               	movlw	1
  1277  0412  00F4               	movwf	I2C_Master_Read@a
  1278  0413  3000               	movlw	0
  1279  0414  00F5               	movwf	I2C_Master_Read@a+1
  1280  0415  120A  118A  27B1  120A  118A  	fcall	_I2C_Master_Read
  1281  041A  0874               	movf	?_I2C_Master_Read,w
  1282  041B  1283               	bcf	3,5	;RP0=0, select bank0
  1283  041C  1303               	bcf	3,6	;RP1=0, select bank0
  1284  041D  00BD               	movwf	??_main
  1285  041E  083D               	movf	??_main,w
  1286  041F  00E3               	movwf	_minute
  1287  0420                     l2693:
  1288                           
  1289                           ;main_mini2.c: 138:         hour = I2C_Master_Read(1);
  1290  0420  3001               	movlw	1
  1291  0421  00F4               	movwf	I2C_Master_Read@a
  1292  0422  3000               	movlw	0
  1293  0423  00F5               	movwf	I2C_Master_Read@a+1
  1294  0424  120A  118A  27B1  120A  118A  	fcall	_I2C_Master_Read
  1295  0429  0874               	movf	?_I2C_Master_Read,w
  1296  042A  1283               	bcf	3,5	;RP0=0, select bank0
  1297  042B  1303               	bcf	3,6	;RP1=0, select bank0
  1298  042C  00BD               	movwf	??_main
  1299  042D  083D               	movf	??_main,w
  1300  042E  00E2               	movwf	_hour
  1301  042F                     l2695:
  1302                           
  1303                           ;main_mini2.c: 139:         I2C_Master_Read(1);
  1304  042F  3001               	movlw	1
  1305  0430  00F4               	movwf	I2C_Master_Read@a
  1306  0431  3000               	movlw	0
  1307  0432  00F5               	movwf	I2C_Master_Read@a+1
  1308  0433  120A  118A  27B1  120A  118A  	fcall	_I2C_Master_Read
  1309  0438                     l2697:
  1310                           
  1311                           ;main_mini2.c: 140:         m_day = I2C_Master_Read(1);
  1312  0438  3001               	movlw	1
  1313  0439  00F4               	movwf	I2C_Master_Read@a
  1314  043A  3000               	movlw	0
  1315  043B  00F5               	movwf	I2C_Master_Read@a+1
  1316  043C  120A  118A  27B1  120A  118A  	fcall	_I2C_Master_Read
  1317  0441  0874               	movf	?_I2C_Master_Read,w
  1318  0442  1283               	bcf	3,5	;RP0=0, select bank0
  1319  0443  1303               	bcf	3,6	;RP1=0, select bank0
  1320  0444  00BD               	movwf	??_main
  1321  0445  083D               	movf	??_main,w
  1322  0446  00E1               	movwf	_m_day
  1323  0447                     l2699:
  1324                           
  1325                           ;main_mini2.c: 141:         month = I2C_Master_Read(1);
  1326  0447  3001               	movlw	1
  1327  0448  00F4               	movwf	I2C_Master_Read@a
  1328  0449  3000               	movlw	0
  1329  044A  00F5               	movwf	I2C_Master_Read@a+1
  1330  044B  120A  118A  27B1  120A  118A  	fcall	_I2C_Master_Read
  1331  0450  0874               	movf	?_I2C_Master_Read,w
  1332  0451  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0452  1303               	bcf	3,6	;RP1=0, select bank0
  1334  0453  00BD               	movwf	??_main
  1335  0454  083D               	movf	??_main,w
  1336  0455  00E0               	movwf	_month
  1337  0456                     l2701:
  1338                           
  1339                           ;main_mini2.c: 142:         year = I2C_Master_Read(0);
  1340  0456  3000               	movlw	0
  1341  0457  00F4               	movwf	I2C_Master_Read@a
  1342  0458  00F5               	movwf	I2C_Master_Read@a+1
  1343  0459  120A  118A  27B1  120A  118A  	fcall	_I2C_Master_Read
  1344  045E  0874               	movf	?_I2C_Master_Read,w
  1345  045F  1283               	bcf	3,5	;RP0=0, select bank0
  1346  0460  1303               	bcf	3,6	;RP1=0, select bank0
  1347  0461  00BD               	movwf	??_main
  1348  0462  083D               	movf	??_main,w
  1349  0463  00DF               	movwf	_year
  1350  0464                     l2703:
  1351                           
  1352                           ;main_mini2.c: 143:         I2C_Master_Stop();
  1353  0464  120A  158A  26F5  120A  118A  	fcall	_I2C_Master_Stop
  1354  0469                     l2705:
  1355                           
  1356                           ;main_mini2.c: 145:         RTC_display();
  1357  0469  120A  118A  2208  120A  118A  	fcall	_RTC_display
  1358  046E                     l2707:
  1359                           
  1360                           ;main_mini2.c: 147:         Led_RTC();
  1361  046E  120A  118A  26C7  120A  118A  	fcall	_Led_RTC
  1362  0473                     l2709:
  1363                           
  1364                           ;main_mini2.c: 148:         Piloto();
  1365  0473  120A  158A  2785  120A  118A  	fcall	_Piloto
  1366  0478                     l2711:
  1367                           
  1368                           ;main_mini2.c: 149:         cont++;
  1369  0478  3001               	movlw	1
  1370  0479  1283               	bcf	3,5	;RP0=0, select bank0
  1371  047A  1303               	bcf	3,6	;RP1=0, select bank0
  1372  047B  00BD               	movwf	??_main
  1373  047C  083D               	movf	??_main,w
  1374  047D  07DE               	addwf	_cont,f
  1375  047E                     l2713:
  1376                           
  1377                           ;main_mini2.c: 154:         Write_USART_String(Time);
  1378  047E  304F               	movlw	(low (_Time| 0))& (0+255)
  1379  047F  00F5               	movwf	Write_USART_String@a
  1380  0480  3000               	movlw	0
  1381  0481  00F6               	movwf	Write_USART_String@a+1
  1382  0482  120A  158A  27D3  120A  118A  	fcall	_Write_USART_String
  1383  0487                     l2715:
  1384                           
  1385                           ;main_mini2.c: 155:         Write_USART_String("  ");
  1386  0487  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1387  0488  00F5               	movwf	Write_USART_String@a
  1388  0489  3080               	movlw	128
  1389  048A  00F6               	movwf	Write_USART_String@a+1
  1390  048B  120A  158A  27D3  120A  118A  	fcall	_Write_USART_String
  1391  0490                     l2717:
  1392                           
  1393                           ;main_mini2.c: 156:         Write_USART_String(Date);
  1394  0490  3040               	movlw	(low (_Date| 0))& (0+255)
  1395  0491  00F5               	movwf	Write_USART_String@a
  1396  0492  3000               	movlw	0
  1397  0493  00F6               	movwf	Write_USART_String@a+1
  1398  0494  120A  158A  27D3  120A  118A  	fcall	_Write_USART_String
  1399  0499                     l2719:
  1400                           
  1401                           ;main_mini2.c: 157:         Write_USART(13);
  1402  0499  300D               	movlw	13
  1403  049A  120A  158A  2708  120A  118A  	fcall	_Write_USART
  1404  049F                     l2721:
  1405                           
  1406                           ;main_mini2.c: 158:         Write_USART(10);
  1407  049F  300A               	movlw	10
  1408  04A0  120A  158A  2708  120A  118A  	fcall	_Write_USART
  1409  04A5                     l2723:
  1410                           
  1411                           ;main_mini2.c: 160:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1412  04A5  3006               	movlw	6
  1413  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1414  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  1415  04A8  00BF               	movwf	??_main+2
  1416  04A9  3013               	movlw	19
  1417  04AA  00BE               	movwf	??_main+1
  1418  04AB  30AD               	movlw	173
  1419  04AC  00BD               	movwf	??_main
  1420  04AD                     u2537:
  1421  04AD  0BBD               	decfsz	??_main,f
  1422  04AE  2CAD               	goto	u2537
  1423  04AF  0BBE               	decfsz	??_main+1,f
  1424  04B0  2CAD               	goto	u2537
  1425  04B1  0BBF               	decfsz	??_main+2,f
  1426  04B2  2CAD               	goto	u2537
  1427  04B3  2BDE               	goto	l2679
  1428  04B4  120A  118A  280C   	ljmp	start
  1429  04B7                     __end_of_main:
  1430                           
  1431                           	psect	text1
  1432  0780                     __ptext1:	
  1433 ;; *************** function _setup *****************
  1434 ;; Defined at:
  1435 ;;		line 275 in file "main_mini2.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;		None
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg, status,2, status,0, pclath, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1449 ;;      Params:         0       0       0       0       0
  1450 ;;      Locals:         0       0       0       0       0
  1451 ;;      Temps:          0       0       0       0       0
  1452 ;;      Totals:         0       0       0       0       0
  1453 ;;Total ram usage:        0 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; Hardware stack levels required when called:    4
  1456 ;; This function calls:
  1457 ;;		_I2C_Master_Init
  1458 ;;		_USART_INTERRUPT
  1459 ;;		_USART_Init
  1460 ;;		_USART_Init_BaudRate
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           
  1467                           ;psect for function _setup
  1468  0780                     _setup:
  1469  0780                     l2599:	
  1470                           ;incstack = 0
  1471                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1472                           
  1473                           
  1474                           ;main_mini2.c: 277:     ANSEL = 0;
  1475  0780  1683               	bsf	3,5	;RP0=1, select bank3
  1476  0781  1703               	bsf	3,6	;RP1=1, select bank3
  1477  0782  0188               	clrf	8	;volatile
  1478                           
  1479                           ;main_mini2.c: 278:     ANSELH = 0;
  1480  0783  0189               	clrf	9	;volatile
  1481                           
  1482                           ;main_mini2.c: 279:     TRISA = 0;
  1483  0784  1683               	bsf	3,5	;RP0=1, select bank1
  1484  0785  1303               	bcf	3,6	;RP1=0, select bank1
  1485  0786  0185               	clrf	5	;volatile
  1486  0787                     l2601:
  1487                           
  1488                           ;main_mini2.c: 280:     TRISB = 0b00000011;
  1489  0787  3003               	movlw	3
  1490  0788  0086               	movwf	6	;volatile
  1491  0789                     l2603:
  1492                           
  1493                           ;main_mini2.c: 281:     TRISCbits.TRISC6 = 0;
  1494  0789  1307               	bcf	7,6	;volatile
  1495  078A                     l2605:
  1496                           
  1497                           ;main_mini2.c: 282:     TRISCbits.TRISC7 = 1;
  1498  078A  1787               	bsf	7,7	;volatile
  1499  078B                     l2607:
  1500                           
  1501                           ;main_mini2.c: 283:     TRISD = 0;
  1502  078B  0188               	clrf	8	;volatile
  1503  078C                     l2609:
  1504                           
  1505                           ;main_mini2.c: 284:     TRISE = 0;
  1506  078C  0189               	clrf	9	;volatile
  1507  078D                     l2611:
  1508                           
  1509                           ;main_mini2.c: 285:     PORTA = 0;
  1510  078D  1283               	bcf	3,5	;RP0=0, select bank0
  1511  078E  1303               	bcf	3,6	;RP1=0, select bank0
  1512  078F  0185               	clrf	5	;volatile
  1513  0790                     l2613:
  1514                           
  1515                           ;main_mini2.c: 286:     PORTB = 0;
  1516  0790  0186               	clrf	6	;volatile
  1517  0791                     l2615:
  1518                           
  1519                           ;main_mini2.c: 287:     PORTC = 0;
  1520  0791  0187               	clrf	7	;volatile
  1521  0792                     l2617:
  1522                           
  1523                           ;main_mini2.c: 288:     PORTD = 0;
  1524  0792  0188               	clrf	8	;volatile
  1525  0793                     l2619:
  1526                           
  1527                           ;main_mini2.c: 289:     PORTE = 0;
  1528  0793  0189               	clrf	9	;volatile
  1529  0794                     l2621:
  1530                           
  1531                           ;main_mini2.c: 290:     I2C_Master_Init(100000);
  1532  0794  3000               	movlw	0
  1533  0795  00B0               	movwf	I2C_Master_Init@c+3
  1534  0796  3001               	movlw	1
  1535  0797  00AF               	movwf	I2C_Master_Init@c+2
  1536  0798  3086               	movlw	134
  1537  0799  00AE               	movwf	I2C_Master_Init@c+1
  1538  079A  30A0               	movlw	160
  1539  079B  00AD               	movwf	I2C_Master_Init@c
  1540  079C  120A  118A  2746  120A  118A  	fcall	_I2C_Master_Init
  1541  07A1                     l2623:
  1542                           
  1543                           ;main_mini2.c: 291:     USART_Init_BaudRate();
  1544  07A1  120A  158A  26CD  120A  118A  	fcall	_USART_Init_BaudRate
  1545  07A6                     l2625:
  1546                           
  1547                           ;main_mini2.c: 292:     USART_Init();
  1548  07A6  120A  158A  2714  120A  118A  	fcall	_USART_Init
  1549  07AB                     l2627:
  1550                           
  1551                           ;main_mini2.c: 293:     USART_INTERRUPT();
  1552  07AB  120A  158A  26C7  120A  118A  	fcall	_USART_INTERRUPT
  1553  07B0                     l170:
  1554  07B0  0008               	return
  1555  07B1                     __end_of_setup:
  1556                           
  1557                           	psect	text2
  1558  0ECD                     __ptext2:	
  1559 ;; *************** function _USART_Init_BaudRate *****************
  1560 ;; Defined at:
  1561 ;;		line 19 in file "USART.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, status,2
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1575 ;;      Params:         0       0       0       0       0
  1576 ;;      Locals:         0       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0
  1578 ;;      Totals:         0       0       0       0       0
  1579 ;;Total ram usage:        0 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    2
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_setup
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           
  1590                           ;psect for function _USART_Init_BaudRate
  1591  0ECD                     _USART_Init_BaudRate:
  1592  0ECD                     l1957:	
  1593                           ;incstack = 0
  1594                           ; Regs used in _USART_Init_BaudRate: [wreg+status,2]
  1595                           
  1596                           
  1597                           ;USART.c: 20:     SPBRGH = 0;
  1598  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  1599  0ECE  1303               	bcf	3,6	;RP1=0, select bank1
  1600  0ECF  019A               	clrf	26	;volatile
  1601  0ED0                     l1959:
  1602                           
  1603                           ;USART.c: 21:     SPBRG = 12;
  1604  0ED0  300C               	movlw	12
  1605  0ED1  0099               	movwf	25	;volatile
  1606  0ED2                     l263:
  1607  0ED2  0008               	return
  1608  0ED3                     __end_of_USART_Init_BaudRate:
  1609                           
  1610                           	psect	text3
  1611  0F14                     __ptext3:	
  1612 ;; *************** function _USART_Init *****************
  1613 ;; Defined at:
  1614 ;;		line 8 in file "USART.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		status,2
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1628 ;;      Params:         0       0       0       0       0
  1629 ;;      Locals:         0       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0
  1631 ;;      Totals:         0       0       0       0       0
  1632 ;;Total ram usage:        0 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    2
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_setup
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           
  1643                           ;psect for function _USART_Init
  1644  0F14                     _USART_Init:
  1645  0F14                     l1961:	
  1646                           ;incstack = 0
  1647                           ; Regs used in _USART_Init: [status,2]
  1648                           
  1649                           
  1650                           ;USART.c: 10:     RCSTAbits.SPEN = 1;
  1651  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  1652  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  1653  0F16  1798               	bsf	24,7	;volatile
  1654                           
  1655                           ;USART.c: 11:     TXSTAbits.SYNC = 0;
  1656  0F17  1683               	bsf	3,5	;RP0=1, select bank1
  1657  0F18  1303               	bcf	3,6	;RP1=0, select bank1
  1658  0F19  1218               	bcf	24,4	;volatile
  1659                           
  1660                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
  1661  0F1A  1698               	bsf	24,5	;volatile
  1662                           
  1663                           ;USART.c: 15:     RCSTAbits.CREN = 1;
  1664  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  1665  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  1666  0F1D  1618               	bsf	24,4	;volatile
  1667  0F1E                     l1963:
  1668                           
  1669                           ;USART.c: 16:     RCREG = 0;
  1670  0F1E  019A               	clrf	26	;volatile
  1671  0F1F                     l260:
  1672  0F1F  0008               	return
  1673  0F20                     __end_of_USART_Init:
  1674                           
  1675                           	psect	text4
  1676  0EC7                     __ptext4:	
  1677 ;; *************** function _USART_INTERRUPT *****************
  1678 ;; Defined at:
  1679 ;;		line 24 in file "USART.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		None
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         0       0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0
  1695 ;;      Temps:          0       0       0       0       0
  1696 ;;      Totals:         0       0       0       0       0
  1697 ;;Total ram usage:        0 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    2
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_setup
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           
  1708                           ;psect for function _USART_INTERRUPT
  1709  0EC7                     _USART_INTERRUPT:
  1710  0EC7                     l1965:	
  1711                           ;incstack = 0
  1712                           ; Regs used in _USART_INTERRUPT: []
  1713                           
  1714                           
  1715                           ;USART.c: 25:     INTCONbits.GIE = 1;
  1716  0EC7  178B               	bsf	11,7	;volatile
  1717                           
  1718                           ;USART.c: 26:     INTCONbits.PEIE = 1;
  1719  0EC8  170B               	bsf	11,6	;volatile
  1720                           
  1721                           ;USART.c: 27:     PIE1bits.RCIE = 1;
  1722  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  1723  0ECA  1303               	bcf	3,6	;RP1=0, select bank1
  1724  0ECB  168C               	bsf	12,5	;volatile
  1725  0ECC                     l266:
  1726  0ECC  0008               	return
  1727  0ECD                     __end_of_USART_INTERRUPT:
  1728                           
  1729                           	psect	text5
  1730  0746                     __ptext5:	
  1731 ;; *************** function _I2C_Master_Init *****************
  1732 ;; Defined at:
  1733 ;;		line 21 in file "I2C.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  c               4   13[BANK0 ] const unsigned long 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0, pclath, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       4       0       0       0
  1748 ;;      Locals:         0       0       0       0       0
  1749 ;;      Temps:          0       4       0       0       0
  1750 ;;      Totals:         0       8       0       0       0
  1751 ;;Total ram usage:        8 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    3
  1754 ;; This function calls:
  1755 ;;		___lldiv
  1756 ;; This function is called by:
  1757 ;;		_setup
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           
  1762                           ;psect for function _I2C_Master_Init
  1763  0746                     _I2C_Master_Init:
  1764  0746                     l2505:	
  1765                           ;incstack = 0
  1766                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1767                           
  1768                           
  1769                           ;I2C.c: 21: void I2C_Master_Init(const unsigned long c);I2C.c: 22: {;I2C.c: 23:     SSPC
      +                          ON = 0b00101000;
  1770  0746  3028               	movlw	40
  1771  0747  1283               	bcf	3,5	;RP0=0, select bank0
  1772  0748  1303               	bcf	3,6	;RP1=0, select bank0
  1773  0749  0094               	movwf	20	;volatile
  1774  074A                     l2507:
  1775                           
  1776                           ;I2C.c: 28:     SSPCON2 = 0;
  1777  074A  1683               	bsf	3,5	;RP0=1, select bank1
  1778  074B  1303               	bcf	3,6	;RP1=0, select bank1
  1779  074C  0191               	clrf	17	;volatile
  1780  074D                     l2509:
  1781                           
  1782                           ;I2C.c: 35:     SSPADD = (8000000/(4*c))-1;
  1783  074D  1283               	bcf	3,5	;RP0=0, select bank0
  1784  074E  1303               	bcf	3,6	;RP1=0, select bank0
  1785  074F  082D               	movf	I2C_Master_Init@c,w
  1786  0750  00B1               	movwf	??_I2C_Master_Init
  1787  0751  082E               	movf	I2C_Master_Init@c+1,w
  1788  0752  00B2               	movwf	??_I2C_Master_Init+1
  1789  0753  082F               	movf	I2C_Master_Init@c+2,w
  1790  0754  00B3               	movwf	??_I2C_Master_Init+2
  1791  0755  0830               	movf	I2C_Master_Init@c+3,w
  1792  0756  00B4               	movwf	??_I2C_Master_Init+3
  1793  0757  3002               	movlw	2
  1794  0758                     u2315:
  1795  0758  1003               	clrc
  1796  0759  0DB1               	rlf	??_I2C_Master_Init,f
  1797  075A  0DB2               	rlf	??_I2C_Master_Init+1,f
  1798  075B  0DB3               	rlf	??_I2C_Master_Init+2,f
  1799  075C  0DB4               	rlf	??_I2C_Master_Init+3,f
  1800  075D                     u2310:
  1801  075D  3EFF               	addlw	-1
  1802  075E  1D03               	skipz
  1803  075F  2F58               	goto	u2315
  1804  0760  0834               	movf	??_I2C_Master_Init+3,w
  1805  0761  00A3               	movwf	___lldiv@divisor+3
  1806  0762  0833               	movf	??_I2C_Master_Init+2,w
  1807  0763  00A2               	movwf	___lldiv@divisor+2
  1808  0764  0832               	movf	??_I2C_Master_Init+1,w
  1809  0765  00A1               	movwf	___lldiv@divisor+1
  1810  0766  0831               	movf	??_I2C_Master_Init,w
  1811  0767  00A0               	movwf	___lldiv@divisor
  1812  0768  3000               	movlw	0
  1813  0769  00A7               	movwf	___lldiv@dividend+3
  1814  076A  307A               	movlw	122
  1815  076B  00A6               	movwf	___lldiv@dividend+2
  1816  076C  3012               	movlw	18
  1817  076D  00A5               	movwf	___lldiv@dividend+1
  1818  076E  3000               	movlw	0
  1819  076F  00A4               	movwf	___lldiv@dividend
  1820  0770  120A  118A  2520  120A  118A  	fcall	___lldiv
  1821  0775  1283               	bcf	3,5	;RP0=0, select bank0
  1822  0776  1303               	bcf	3,6	;RP1=0, select bank0
  1823  0777  0820               	movf	?___lldiv,w
  1824  0778  3EFF               	addlw	255
  1825  0779  1683               	bsf	3,5	;RP0=1, select bank1
  1826  077A  1303               	bcf	3,6	;RP1=0, select bank1
  1827  077B  0093               	movwf	19	;volatile
  1828  077C                     l2511:
  1829                           
  1830                           ;I2C.c: 36:     SSPSTAT = 0;
  1831  077C  0194               	clrf	20	;volatile
  1832  077D                     l2513:
  1833                           
  1834                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  1835  077D  1587               	bsf	7,3	;volatile
  1836  077E                     l2515:
  1837                           
  1838                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  1839  077E  1607               	bsf	7,4	;volatile
  1840  077F                     l313:
  1841  077F  0008               	return
  1842  0780                     __end_of_I2C_Master_Init:
  1843                           
  1844                           	psect	text6
  1845  0520                     __ptext6:	
  1846 ;; *************** function ___lldiv *****************
  1847 ;; Defined at:
  1848 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;  divisor         4    0[BANK0 ] unsigned long 
  1851 ;;  dividend        4    4[BANK0 ] unsigned long 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  quotient        4    8[BANK0 ] unsigned long 
  1854 ;;  counter         1   12[BANK0 ] unsigned char 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  4    0[BANK0 ] unsigned long 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2, status,0
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1864 ;;      Params:         0       8       0       0       0
  1865 ;;      Locals:         0       5       0       0       0
  1866 ;;      Temps:          1       0       0       0       0
  1867 ;;      Totals:         1      13       0       0       0
  1868 ;;Total ram usage:       14 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; Hardware stack levels required when called:    2
  1871 ;; This function calls:
  1872 ;;		Nothing
  1873 ;; This function is called by:
  1874 ;;		_I2C_Master_Init
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function ___lldiv
  1880  0520                     ___lldiv:
  1881  0520                     l2295:	
  1882                           ;incstack = 0
  1883                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1884                           
  1885  0520  3000               	movlw	0
  1886  0521  1283               	bcf	3,5	;RP0=0, select bank0
  1887  0522  1303               	bcf	3,6	;RP1=0, select bank0
  1888  0523  00AB               	movwf	___lldiv@quotient+3
  1889  0524  3000               	movlw	0
  1890  0525  00AA               	movwf	___lldiv@quotient+2
  1891  0526  3000               	movlw	0
  1892  0527  00A9               	movwf	___lldiv@quotient+1
  1893  0528  3000               	movlw	0
  1894  0529  00A8               	movwf	___lldiv@quotient
  1895  052A  0823               	movf	___lldiv@divisor+3,w
  1896  052B  0422               	iorwf	___lldiv@divisor+2,w
  1897  052C  0421               	iorwf	___lldiv@divisor+1,w
  1898  052D  0420               	iorwf	___lldiv@divisor,w
  1899  052E  1903               	skipnz
  1900  052F  2D31               	goto	u1911
  1901  0530  2D32               	goto	u1910
  1902  0531                     u1911:
  1903  0531  2D7F               	goto	l2315
  1904  0532                     u1910:
  1905  0532                     l2297:
  1906  0532  01AC               	clrf	___lldiv@counter
  1907  0533  0AAC               	incf	___lldiv@counter,f
  1908  0534  2D42               	goto	l2301
  1909  0535                     l2299:
  1910  0535  3001               	movlw	1
  1911  0536  00F4               	movwf	??___lldiv
  1912  0537                     u1925:
  1913  0537  1003               	clrc
  1914  0538  0DA0               	rlf	___lldiv@divisor,f
  1915  0539  0DA1               	rlf	___lldiv@divisor+1,f
  1916  053A  0DA2               	rlf	___lldiv@divisor+2,f
  1917  053B  0DA3               	rlf	___lldiv@divisor+3,f
  1918  053C  0BF4               	decfsz	??___lldiv,f
  1919  053D  2D37               	goto	u1925
  1920  053E  3001               	movlw	1
  1921  053F  00F4               	movwf	??___lldiv
  1922  0540  0874               	movf	??___lldiv,w
  1923  0541  07AC               	addwf	___lldiv@counter,f
  1924  0542                     l2301:
  1925  0542  1FA3               	btfss	___lldiv@divisor+3,7
  1926  0543  2D45               	goto	u1931
  1927  0544  2D46               	goto	u1930
  1928  0545                     u1931:
  1929  0545  2D35               	goto	l2299
  1930  0546                     u1930:
  1931  0546                     l2303:
  1932  0546  3001               	movlw	1
  1933  0547  00F4               	movwf	??___lldiv
  1934  0548                     u1945:
  1935  0548  1003               	clrc
  1936  0549  0DA8               	rlf	___lldiv@quotient,f
  1937  054A  0DA9               	rlf	___lldiv@quotient+1,f
  1938  054B  0DAA               	rlf	___lldiv@quotient+2,f
  1939  054C  0DAB               	rlf	___lldiv@quotient+3,f
  1940  054D  0BF4               	decfsz	??___lldiv,f
  1941  054E  2D48               	goto	u1945
  1942  054F                     l2305:
  1943  054F  0823               	movf	___lldiv@divisor+3,w
  1944  0550  0227               	subwf	___lldiv@dividend+3,w
  1945  0551  1D03               	skipz
  1946  0552  2D5D               	goto	u1955
  1947  0553  0822               	movf	___lldiv@divisor+2,w
  1948  0554  0226               	subwf	___lldiv@dividend+2,w
  1949  0555  1D03               	skipz
  1950  0556  2D5D               	goto	u1955
  1951  0557  0821               	movf	___lldiv@divisor+1,w
  1952  0558  0225               	subwf	___lldiv@dividend+1,w
  1953  0559  1D03               	skipz
  1954  055A  2D5D               	goto	u1955
  1955  055B  0820               	movf	___lldiv@divisor,w
  1956  055C  0224               	subwf	___lldiv@dividend,w
  1957  055D                     u1955:
  1958  055D  1C03               	skipc
  1959  055E  2D60               	goto	u1951
  1960  055F  2D61               	goto	u1950
  1961  0560                     u1951:
  1962  0560  2D70               	goto	l2311
  1963  0561                     u1950:
  1964  0561                     l2307:
  1965  0561  0820               	movf	___lldiv@divisor,w
  1966  0562  02A4               	subwf	___lldiv@dividend,f
  1967  0563  0821               	movf	___lldiv@divisor+1,w
  1968  0564  1C03               	skipc
  1969  0565  0F21               	incfsz	___lldiv@divisor+1,w
  1970  0566  02A5               	subwf	___lldiv@dividend+1,f
  1971  0567  0822               	movf	___lldiv@divisor+2,w
  1972  0568  1C03               	skipc
  1973  0569  0F22               	incfsz	___lldiv@divisor+2,w
  1974  056A  02A6               	subwf	___lldiv@dividend+2,f
  1975  056B  0823               	movf	___lldiv@divisor+3,w
  1976  056C  1C03               	skipc
  1977  056D  0F23               	incfsz	___lldiv@divisor+3,w
  1978  056E  02A7               	subwf	___lldiv@dividend+3,f
  1979  056F                     l2309:
  1980  056F  1428               	bsf	___lldiv@quotient,0
  1981  0570                     l2311:
  1982  0570  3001               	movlw	1
  1983  0571                     u1965:
  1984  0571  1003               	clrc
  1985  0572  0CA3               	rrf	___lldiv@divisor+3,f
  1986  0573  0CA2               	rrf	___lldiv@divisor+2,f
  1987  0574  0CA1               	rrf	___lldiv@divisor+1,f
  1988  0575  0CA0               	rrf	___lldiv@divisor,f
  1989  0576  3EFF               	addlw	-1
  1990  0577  1D03               	skipz
  1991  0578  2D71               	goto	u1965
  1992  0579                     l2313:
  1993  0579  3001               	movlw	1
  1994  057A  02AC               	subwf	___lldiv@counter,f
  1995  057B  1D03               	btfss	3,2
  1996  057C  2D7E               	goto	u1971
  1997  057D  2D7F               	goto	u1970
  1998  057E                     u1971:
  1999  057E  2D46               	goto	l2303
  2000  057F                     u1970:
  2001  057F                     l2315:
  2002  057F  082B               	movf	___lldiv@quotient+3,w
  2003  0580  00A3               	movwf	?___lldiv+3
  2004  0581  082A               	movf	___lldiv@quotient+2,w
  2005  0582  00A2               	movwf	?___lldiv+2
  2006  0583  0829               	movf	___lldiv@quotient+1,w
  2007  0584  00A1               	movwf	?___lldiv+1
  2008  0585  0828               	movf	___lldiv@quotient,w
  2009  0586  00A0               	movwf	?___lldiv
  2010  0587                     l512:
  2011  0587  0008               	return
  2012  0588                     __end_of___lldiv:
  2013                           
  2014                           	psect	text7
  2015  05E3                     __ptext7:	
  2016 ;; *************** function _Write_to_RTC *****************
  2017 ;; Defined at:
  2018 ;;		line 215 in file "main_mini2.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, status,0, pclath, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2032 ;;      Params:         0       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0
  2034 ;;      Temps:          0       0       0       0       0
  2035 ;;      Totals:         0       0       0       0       0
  2036 ;;Total ram usage:        0 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    4
  2039 ;; This function calls:
  2040 ;;		_I2C_Master_Start
  2041 ;;		_I2C_Master_Stop
  2042 ;;		_I2C_Master_Write
  2043 ;; This function is called by:
  2044 ;;		_main
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           
  2049                           ;psect for function _Write_to_RTC
  2050  05E3                     _Write_to_RTC:
  2051  05E3                     l2629:	
  2052                           ;incstack = 0
  2053                           ; Regs used in _Write_to_RTC: [wreg+status,2+status,0+pclath+cstack]
  2054                           
  2055                           
  2056                           ;main_mini2.c: 216:     I2C_Master_Start();
  2057  05E3  120A  158A  26EC  120A  118A  	fcall	_I2C_Master_Start
  2058                           
  2059                           ;main_mini2.c: 217:     I2C_Master_Write(0xD0);
  2060  05E8  30D0               	movlw	208
  2061  05E9  00F4               	movwf	I2C_Master_Write@d
  2062  05EA  3000               	movlw	0
  2063  05EB  00F5               	movwf	I2C_Master_Write@d+1
  2064  05EC  120A  158A  26FE  120A  118A  	fcall	_I2C_Master_Write
  2065                           
  2066                           ;main_mini2.c: 218:     I2C_Master_Write(0);
  2067  05F1  3000               	movlw	0
  2068  05F2  00F4               	movwf	I2C_Master_Write@d
  2069  05F3  00F5               	movwf	I2C_Master_Write@d+1
  2070  05F4  120A  158A  26FE  120A  118A  	fcall	_I2C_Master_Write
  2071                           
  2072                           ;main_mini2.c: 219:     I2C_Master_Write(0);
  2073  05F9  3000               	movlw	0
  2074  05FA  00F4               	movwf	I2C_Master_Write@d
  2075  05FB  00F5               	movwf	I2C_Master_Write@d+1
  2076  05FC  120A  158A  26FE  120A  118A  	fcall	_I2C_Master_Write
  2077                           
  2078                           ;main_mini2.c: 220:     I2C_Master_Write(48);
  2079  0601  3030               	movlw	48
  2080  0602  00F4               	movwf	I2C_Master_Write@d
  2081  0603  3000               	movlw	0
  2082  0604  00F5               	movwf	I2C_Master_Write@d+1
  2083  0605  120A  158A  26FE  120A  118A  	fcall	_I2C_Master_Write
  2084                           
  2085                           ;main_mini2.c: 221:     I2C_Master_Write(6);
  2086  060A  3006               	movlw	6
  2087  060B  00F4               	movwf	I2C_Master_Write@d
  2088  060C  3000               	movlw	0
  2089  060D  00F5               	movwf	I2C_Master_Write@d+1
  2090  060E  120A  158A  26FE  120A  118A  	fcall	_I2C_Master_Write
  2091                           
  2092                           ;main_mini2.c: 222:     I2C_Master_Write(1);
  2093  0613  3001               	movlw	1
  2094  0614  00F4               	movwf	I2C_Master_Write@d
  2095  0615  3000               	movlw	0
  2096  0616  00F5               	movwf	I2C_Master_Write@d+1
  2097  0617  120A  158A  26FE  120A  118A  	fcall	_I2C_Master_Write
  2098                           
  2099                           ;main_mini2.c: 223:     I2C_Master_Write(8);
  2100  061C  3008               	movlw	8
  2101  061D  00F4               	movwf	I2C_Master_Write@d
  2102  061E  3000               	movlw	0
  2103  061F  00F5               	movwf	I2C_Master_Write@d+1
  2104  0620  120A  158A  26FE  120A  118A  	fcall	_I2C_Master_Write
  2105                           
  2106                           ;main_mini2.c: 224:     I2C_Master_Write(3);
  2107  0625  3003               	movlw	3
  2108  0626  00F4               	movwf	I2C_Master_Write@d
  2109  0627  3000               	movlw	0
  2110  0628  00F5               	movwf	I2C_Master_Write@d+1
  2111  0629  120A  158A  26FE  120A  118A  	fcall	_I2C_Master_Write
  2112                           
  2113                           ;main_mini2.c: 225:     I2C_Master_Write(27);
  2114  062E  301B               	movlw	27
  2115  062F  00F4               	movwf	I2C_Master_Write@d
  2116  0630  3000               	movlw	0
  2117  0631  00F5               	movwf	I2C_Master_Write@d+1
  2118  0632  120A  158A  26FE  120A  118A  	fcall	_I2C_Master_Write
  2119                           
  2120                           ;main_mini2.c: 226:     I2C_Master_Stop();
  2121  0637  120A  158A  26F5  120A  118A  	fcall	_I2C_Master_Stop
  2122  063C                     l139:
  2123  063C  0008               	return
  2124  063D                     __end_of_Write_to_RTC:
  2125                           
  2126                           	psect	text8
  2127  0EFE                     __ptext8:	
  2128 ;; *************** function _I2C_Master_Write *****************
  2129 ;; Defined at:
  2130 ;;		line 84 in file "I2C.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  d               2    4[COMMON] unsigned int 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0, pclath, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         2       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0
  2147 ;;      Totals:         2       0       0       0       0
  2148 ;;Total ram usage:        2 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:    3
  2151 ;; This function calls:
  2152 ;;		_I2C_Master_Wait
  2153 ;; This function is called by:
  2154 ;;		_main
  2155 ;;		_Write_to_RTC
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           
  2160                           ;psect for function _I2C_Master_Write
  2161  0EFE                     _I2C_Master_Write:
  2162  0EFE                     l2371:	
  2163                           ;incstack = 0
  2164                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2165                           
  2166                           
  2167                           ;I2C.c: 84: void I2C_Master_Write(unsigned d);I2C.c: 85: {;I2C.c: 86:     I2C_Master_Wai
      +                          t();
  2168  0EFE  120A  158A  2720  120A  158A  	fcall	_I2C_Master_Wait
  2169  0F03                     l2373:
  2170                           
  2171                           ;I2C.c: 87:     SSPBUF = d;
  2172  0F03  0874               	movf	I2C_Master_Write@d,w
  2173  0F04  1283               	bcf	3,5	;RP0=0, select bank0
  2174  0F05  1303               	bcf	3,6	;RP1=0, select bank0
  2175  0F06  0093               	movwf	19	;volatile
  2176  0F07                     l331:
  2177  0F07  0008               	return
  2178  0F08                     __end_of_I2C_Master_Write:
  2179                           
  2180                           	psect	text9
  2181  0EF5                     __ptext9:	
  2182 ;; *************** function _I2C_Master_Stop *****************
  2183 ;; Defined at:
  2184 ;;		line 73 in file "I2C.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, pclath, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2198 ;;      Params:         0       0       0       0       0
  2199 ;;      Locals:         0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0
  2201 ;;      Totals:         0       0       0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    3
  2205 ;; This function calls:
  2206 ;;		_I2C_Master_Wait
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;;		_Write_to_RTC
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           
  2214                           ;psect for function _I2C_Master_Stop
  2215  0EF5                     _I2C_Master_Stop:
  2216  0EF5                     l2375:	
  2217                           ;incstack = 0
  2218                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2219                           
  2220                           
  2221                           ;I2C.c: 75:     I2C_Master_Wait();
  2222  0EF5  120A  158A  2720  120A  158A  	fcall	_I2C_Master_Wait
  2223  0EFA                     l2377:
  2224                           
  2225                           ;I2C.c: 76:     SSPCON2bits.PEN = 1;
  2226  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  2227  0EFB  1303               	bcf	3,6	;RP1=0, select bank1
  2228  0EFC  1511               	bsf	17,2	;volatile
  2229  0EFD                     l328:
  2230  0EFD  0008               	return
  2231  0EFE                     __end_of_I2C_Master_Stop:
  2232                           
  2233                           	psect	text10
  2234  0EEC                     __ptext10:	
  2235 ;; *************** function _I2C_Master_Start *****************
  2236 ;; Defined at:
  2237 ;;		line 56 in file "I2C.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0, pclath, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         0       0       0       0       0
  2252 ;;      Locals:         0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0
  2254 ;;      Totals:         0       0       0       0       0
  2255 ;;Total ram usage:        0 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    3
  2258 ;; This function calls:
  2259 ;;		_I2C_Master_Wait
  2260 ;; This function is called by:
  2261 ;;		_main
  2262 ;;		_Write_to_RTC
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           
  2267                           ;psect for function _I2C_Master_Start
  2268  0EEC                     _I2C_Master_Start:
  2269  0EEC                     l2367:	
  2270                           ;incstack = 0
  2271                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2272                           
  2273                           
  2274                           ;I2C.c: 57:     I2C_Master_Wait();
  2275  0EEC  120A  158A  2720  120A  158A  	fcall	_I2C_Master_Wait
  2276  0EF1                     l2369:
  2277                           
  2278                           ;I2C.c: 58:     SSPCON2bits.SEN = 1;
  2279  0EF1  1683               	bsf	3,5	;RP0=1, select bank1
  2280  0EF2  1303               	bcf	3,6	;RP1=0, select bank1
  2281  0EF3  1411               	bsf	17,0	;volatile
  2282  0EF4                     l322:
  2283  0EF4  0008               	return
  2284  0EF5                     __end_of_I2C_Master_Start:
  2285                           
  2286                           	psect	text11
  2287  0FD3                     __ptext11:	
  2288 ;; *************** function _Write_USART_String *****************
  2289 ;; Defined at:
  2290 ;;		line 37 in file "USART.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  a               2    5[COMMON] PTR unsigned char 
  2293 ;;		 -> Date(15), STR_1(3), Time(15), 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  i               1    1[BANK0 ] unsigned char 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2305 ;;      Params:         2       0       0       0       0
  2306 ;;      Locals:         0       1       0       0       0
  2307 ;;      Temps:          0       1       0       0       0
  2308 ;;      Totals:         2       2       0       0       0
  2309 ;;Total ram usage:        4 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    3
  2312 ;; This function calls:
  2313 ;;		_Write_USART
  2314 ;; This function is called by:
  2315 ;;		_main
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _Write_USART_String
  2321  0FD3                     _Write_USART_String:
  2322  0FD3                     l2665:	
  2323                           ;incstack = 0
  2324                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2325                           
  2326                           
  2327                           ;USART.c: 38:     uint8_t i;;USART.c: 39:     for(i=0;a[i]!='\0';i++){
  2328  0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  2330  0FD5  01A1               	clrf	Write_USART_String@i
  2331  0FD6  2FEE               	goto	l2671
  2332  0FD7                     l2667:
  2333                           
  2334                           ;USART.c: 40:         Write_USART(a[i]);
  2335  0FD7  0821               	movf	Write_USART_String@i,w
  2336  0FD8  0775               	addwf	Write_USART_String@a,w
  2337  0FD9  0084               	movwf	4
  2338  0FDA  0876               	movf	Write_USART_String@a+1,w
  2339  0FDB  1803               	skipnc
  2340  0FDC  0A76               	incf	Write_USART_String@a+1,w
  2341  0FDD  00FF               	movwf	btemp+1
  2342  0FDE  120A  158A  2000  120A  158A  	fcall	stringtab
  2343  0FE3  120A  158A  2708  120A  158A  	fcall	_Write_USART
  2344  0FE8                     l2669:
  2345                           
  2346                           ;USART.c: 41:     }
  2347  0FE8  3001               	movlw	1
  2348  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  2350  0FEB  00A0               	movwf	??_Write_USART_String
  2351  0FEC  0820               	movf	??_Write_USART_String,w
  2352  0FED  07A1               	addwf	Write_USART_String@i,f
  2353  0FEE                     l2671:
  2354  0FEE  0821               	movf	Write_USART_String@i,w
  2355  0FEF  0775               	addwf	Write_USART_String@a,w
  2356  0FF0  0084               	movwf	4
  2357  0FF1  0876               	movf	Write_USART_String@a+1,w
  2358  0FF2  1803               	skipnc
  2359  0FF3  0A76               	incf	Write_USART_String@a+1,w
  2360  0FF4  00FF               	movwf	btemp+1
  2361  0FF5  120A  158A  2000  120A  158A  	fcall	stringtab
  2362  0FFA  3A00               	xorlw	0
  2363  0FFB  1D03               	skipz
  2364  0FFC  2FFE               	goto	u2521
  2365  0FFD  2FFF               	goto	u2520
  2366  0FFE                     u2521:
  2367  0FFE  2FD7               	goto	l2667
  2368  0FFF                     u2520:
  2369  0FFF                     l278:
  2370  0FFF  0008               	return
  2371  1000                     __end_of_Write_USART_String:
  2372                           
  2373                           	psect	text12
  2374  0F08                     __ptext12:	
  2375 ;; *************** function _Write_USART *****************
  2376 ;; Defined at:
  2377 ;;		line 33 in file "USART.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  a               1    wreg     unsigned char 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  a               1    4[COMMON] unsigned char 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		wreg
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         0       0       0       0       0
  2392 ;;      Locals:         1       0       0       0       0
  2393 ;;      Temps:          0       0       0       0       0
  2394 ;;      Totals:         1       0       0       0       0
  2395 ;;Total ram usage:        1 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    2
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;;		_Write_USART_String
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _Write_USART
  2408  0F08                     _Write_USART:
  2409                           
  2410                           ;incstack = 0
  2411                           ; Regs used in _Write_USART: [wreg]
  2412                           ;Write_USART@a stored from wreg
  2413  0F08  00F4               	movwf	Write_USART@a
  2414  0F09                     l2379:
  2415  0F09                     l269:	
  2416                           ;USART.c: 34:     while(!TRMT);
  2417                           
  2418  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  2420  0F0B  1C98               	btfss	24,1	;volatile
  2421  0F0C  2F0E               	goto	u2111
  2422  0F0D  2F0F               	goto	u2110
  2423  0F0E                     u2111:
  2424  0F0E  2F09               	goto	l269
  2425  0F0F                     u2110:
  2426  0F0F                     l2381:
  2427                           
  2428                           ;USART.c: 35:     TXREG=a;
  2429  0F0F  0874               	movf	Write_USART@a,w
  2430  0F10  1283               	bcf	3,5	;RP0=0, select bank0
  2431  0F11  1303               	bcf	3,6	;RP1=0, select bank0
  2432  0F12  0099               	movwf	25	;volatile
  2433  0F13                     l272:
  2434  0F13  0008               	return
  2435  0F14                     __end_of_Write_USART:
  2436                           
  2437                           	psect	text13
  2438  0208                     __ptext13:	
  2439 ;; *************** function _RTC_display *****************
  2440 ;; Defined at:
  2441 ;;		line 178 in file "main_mini2.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       0       0       0       0
  2456 ;;      Locals:         0       0       0       0       0
  2457 ;;      Temps:          0       3       0       0       0
  2458 ;;      Totals:         0       3       0       0       0
  2459 ;;Total ram usage:        3 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    4
  2462 ;; This function calls:
  2463 ;;		___awdiv
  2464 ;;		___awmod
  2465 ;;		_bcd_to_decimal
  2466 ;;		_sprintf
  2467 ;; This function is called by:
  2468 ;;		_main
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           
  2473                           ;psect for function _RTC_display
  2474  0208                     _RTC_display:
  2475  0208                     l2651:	
  2476                           ;incstack = 0
  2477                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2478                           
  2479                           
  2480                           ;main_mini2.c: 180:     second = bcd_to_decimal(second);
  2481  0208  1283               	bcf	3,5	;RP0=0, select bank0
  2482  0209  1303               	bcf	3,6	;RP1=0, select bank0
  2483  020A  0864               	movf	_second,w
  2484  020B  120A  158A  2769  120A  118A  	fcall	_bcd_to_decimal
  2485  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2487  0212  00BA               	movwf	??_RTC_display
  2488  0213  083A               	movf	??_RTC_display,w
  2489  0214  00E4               	movwf	_second
  2490                           
  2491                           ;main_mini2.c: 181:     minute = bcd_to_decimal(minute);
  2492  0215  0863               	movf	_minute,w
  2493  0216  120A  158A  2769  120A  118A  	fcall	_bcd_to_decimal
  2494  021B  1283               	bcf	3,5	;RP0=0, select bank0
  2495  021C  1303               	bcf	3,6	;RP1=0, select bank0
  2496  021D  00BA               	movwf	??_RTC_display
  2497  021E  083A               	movf	??_RTC_display,w
  2498  021F  00E3               	movwf	_minute
  2499                           
  2500                           ;main_mini2.c: 182:     hour = bcd_to_decimal(hour);
  2501  0220  0862               	movf	_hour,w
  2502  0221  120A  158A  2769  120A  118A  	fcall	_bcd_to_decimal
  2503  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0228  00BA               	movwf	??_RTC_display
  2506  0229  083A               	movf	??_RTC_display,w
  2507  022A  00E2               	movwf	_hour
  2508                           
  2509                           ;main_mini2.c: 183:     m_day = bcd_to_decimal(m_day);
  2510  022B  0861               	movf	_m_day,w
  2511  022C  120A  158A  2769  120A  118A  	fcall	_bcd_to_decimal
  2512  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2513  0232  1303               	bcf	3,6	;RP1=0, select bank0
  2514  0233  00BA               	movwf	??_RTC_display
  2515  0234  083A               	movf	??_RTC_display,w
  2516  0235  00E1               	movwf	_m_day
  2517                           
  2518                           ;main_mini2.c: 184:     month = bcd_to_decimal(month);
  2519  0236  0860               	movf	_month,w
  2520  0237  120A  158A  2769  120A  118A  	fcall	_bcd_to_decimal
  2521  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2522  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2523  023E  00BA               	movwf	??_RTC_display
  2524  023F  083A               	movf	??_RTC_display,w
  2525  0240  00E0               	movwf	_month
  2526                           
  2527                           ;main_mini2.c: 185:     year = bcd_to_decimal(year);
  2528  0241  085F               	movf	_year,w
  2529  0242  120A  158A  2769  120A  118A  	fcall	_bcd_to_decimal
  2530  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2532  0249  00BA               	movwf	??_RTC_display
  2533  024A  083A               	movf	??_RTC_display,w
  2534  024B  00DF               	movwf	_year
  2535                           
  2536                           ;main_mini2.c: 189:     Time[6] = hour / 10 + '0';
  2537  024C  300A               	movlw	10
  2538  024D  00A0               	movwf	___awdiv@divisor
  2539  024E  3000               	movlw	0
  2540  024F  00A1               	movwf	___awdiv@divisor+1
  2541  0250  0862               	movf	_hour,w
  2542  0251  00BA               	movwf	??_RTC_display
  2543  0252  01BB               	clrf	??_RTC_display+1
  2544  0253  083A               	movf	??_RTC_display,w
  2545  0254  00A2               	movwf	___awdiv@dividend
  2546  0255  083B               	movf	??_RTC_display+1,w
  2547  0256  00A3               	movwf	___awdiv@dividend+1
  2548  0257  120A  118A  24B7  120A  118A  	fcall	___awdiv
  2549  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2550  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2551  025E  0820               	movf	?___awdiv,w
  2552  025F  3E30               	addlw	48
  2553  0260  00BC               	movwf	??_RTC_display+2
  2554  0261  083C               	movf	??_RTC_display+2,w
  2555  0262  00D5               	movwf	_Time+6
  2556                           
  2557                           ;main_mini2.c: 190:     Time[7] = hour % 10 + '0';
  2558  0263  300A               	movlw	10
  2559  0264  00A0               	movwf	___awmod@divisor
  2560  0265  3000               	movlw	0
  2561  0266  00A1               	movwf	___awmod@divisor+1
  2562  0267  0862               	movf	_hour,w
  2563  0268  00BA               	movwf	??_RTC_display
  2564  0269  01BB               	clrf	??_RTC_display+1
  2565  026A  083A               	movf	??_RTC_display,w
  2566  026B  00A2               	movwf	___awmod@dividend
  2567  026C  083B               	movf	??_RTC_display+1,w
  2568  026D  00A3               	movwf	___awmod@dividend+1
  2569  026E  120A  118A  2588  120A  118A  	fcall	___awmod
  2570  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2571  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2572  0275  0820               	movf	?___awmod,w
  2573  0276  3E30               	addlw	48
  2574  0277  00BC               	movwf	??_RTC_display+2
  2575  0278  083C               	movf	??_RTC_display+2,w
  2576  0279  00D6               	movwf	_Time+7
  2577                           
  2578                           ;main_mini2.c: 191:     Time[9] = minute / 10 + '0';
  2579  027A  300A               	movlw	10
  2580  027B  00A0               	movwf	___awdiv@divisor
  2581  027C  3000               	movlw	0
  2582  027D  00A1               	movwf	___awdiv@divisor+1
  2583  027E  0863               	movf	_minute,w
  2584  027F  00BA               	movwf	??_RTC_display
  2585  0280  01BB               	clrf	??_RTC_display+1
  2586  0281  083A               	movf	??_RTC_display,w
  2587  0282  00A2               	movwf	___awdiv@dividend
  2588  0283  083B               	movf	??_RTC_display+1,w
  2589  0284  00A3               	movwf	___awdiv@dividend+1
  2590  0285  120A  118A  24B7  120A  118A  	fcall	___awdiv
  2591  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2592  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2593  028C  0820               	movf	?___awdiv,w
  2594  028D  3E30               	addlw	48
  2595  028E  00BC               	movwf	??_RTC_display+2
  2596  028F  083C               	movf	??_RTC_display+2,w
  2597  0290  00D8               	movwf	_Time+9
  2598                           
  2599                           ;main_mini2.c: 192:     Time[10] = minute % 10 + '0';
  2600  0291  300A               	movlw	10
  2601  0292  00A0               	movwf	___awmod@divisor
  2602  0293  3000               	movlw	0
  2603  0294  00A1               	movwf	___awmod@divisor+1
  2604  0295  0863               	movf	_minute,w
  2605  0296  00BA               	movwf	??_RTC_display
  2606  0297  01BB               	clrf	??_RTC_display+1
  2607  0298  083A               	movf	??_RTC_display,w
  2608  0299  00A2               	movwf	___awmod@dividend
  2609  029A  083B               	movf	??_RTC_display+1,w
  2610  029B  00A3               	movwf	___awmod@dividend+1
  2611  029C  120A  118A  2588  120A  118A  	fcall	___awmod
  2612  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2613  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2614  02A3  0820               	movf	?___awmod,w
  2615  02A4  3E30               	addlw	48
  2616  02A5  00BC               	movwf	??_RTC_display+2
  2617  02A6  083C               	movf	??_RTC_display+2,w
  2618  02A7  00D9               	movwf	_Time+10
  2619                           
  2620                           ;main_mini2.c: 193:     Time[12] = second / 10 + '0';
  2621  02A8  300A               	movlw	10
  2622  02A9  00A0               	movwf	___awdiv@divisor
  2623  02AA  3000               	movlw	0
  2624  02AB  00A1               	movwf	___awdiv@divisor+1
  2625  02AC  0864               	movf	_second,w
  2626  02AD  00BA               	movwf	??_RTC_display
  2627  02AE  01BB               	clrf	??_RTC_display+1
  2628  02AF  083A               	movf	??_RTC_display,w
  2629  02B0  00A2               	movwf	___awdiv@dividend
  2630  02B1  083B               	movf	??_RTC_display+1,w
  2631  02B2  00A3               	movwf	___awdiv@dividend+1
  2632  02B3  120A  118A  24B7  120A  118A  	fcall	___awdiv
  2633  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2634  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2635  02BA  0820               	movf	?___awdiv,w
  2636  02BB  3E30               	addlw	48
  2637  02BC  00BC               	movwf	??_RTC_display+2
  2638  02BD  083C               	movf	??_RTC_display+2,w
  2639  02BE  00DB               	movwf	_Time+12
  2640                           
  2641                           ;main_mini2.c: 194:     Time[13] = second % 10 + '0';
  2642  02BF  300A               	movlw	10
  2643  02C0  00A0               	movwf	___awmod@divisor
  2644  02C1  3000               	movlw	0
  2645  02C2  00A1               	movwf	___awmod@divisor+1
  2646  02C3  0864               	movf	_second,w
  2647  02C4  00BA               	movwf	??_RTC_display
  2648  02C5  01BB               	clrf	??_RTC_display+1
  2649  02C6  083A               	movf	??_RTC_display,w
  2650  02C7  00A2               	movwf	___awmod@dividend
  2651  02C8  083B               	movf	??_RTC_display+1,w
  2652  02C9  00A3               	movwf	___awmod@dividend+1
  2653  02CA  120A  118A  2588  120A  118A  	fcall	___awmod
  2654  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2655  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2656  02D1  0820               	movf	?___awmod,w
  2657  02D2  3E30               	addlw	48
  2658  02D3  00BC               	movwf	??_RTC_display+2
  2659  02D4  083C               	movf	??_RTC_display+2,w
  2660  02D5  00DC               	movwf	_Time+13
  2661                           
  2662                           ;main_mini2.c: 197:     Date[6] = m_day / 10 + '0';
  2663  02D6  300A               	movlw	10
  2664  02D7  00A0               	movwf	___awdiv@divisor
  2665  02D8  3000               	movlw	0
  2666  02D9  00A1               	movwf	___awdiv@divisor+1
  2667  02DA  0861               	movf	_m_day,w
  2668  02DB  00BA               	movwf	??_RTC_display
  2669  02DC  01BB               	clrf	??_RTC_display+1
  2670  02DD  083A               	movf	??_RTC_display,w
  2671  02DE  00A2               	movwf	___awdiv@dividend
  2672  02DF  083B               	movf	??_RTC_display+1,w
  2673  02E0  00A3               	movwf	___awdiv@dividend+1
  2674  02E1  120A  118A  24B7  120A  118A  	fcall	___awdiv
  2675  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2676  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2677  02E8  0820               	movf	?___awdiv,w
  2678  02E9  3E30               	addlw	48
  2679  02EA  00BC               	movwf	??_RTC_display+2
  2680  02EB  083C               	movf	??_RTC_display+2,w
  2681  02EC  00C6               	movwf	_Date+6
  2682                           
  2683                           ;main_mini2.c: 198:     Date[7] = m_day % 10 + '0';
  2684  02ED  300A               	movlw	10
  2685  02EE  00A0               	movwf	___awmod@divisor
  2686  02EF  3000               	movlw	0
  2687  02F0  00A1               	movwf	___awmod@divisor+1
  2688  02F1  0861               	movf	_m_day,w
  2689  02F2  00BA               	movwf	??_RTC_display
  2690  02F3  01BB               	clrf	??_RTC_display+1
  2691  02F4  083A               	movf	??_RTC_display,w
  2692  02F5  00A2               	movwf	___awmod@dividend
  2693  02F6  083B               	movf	??_RTC_display+1,w
  2694  02F7  00A3               	movwf	___awmod@dividend+1
  2695  02F8  120A  118A  2588  120A  118A  	fcall	___awmod
  2696  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2697  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2698  02FF  0820               	movf	?___awmod,w
  2699  0300  3E30               	addlw	48
  2700  0301  00BC               	movwf	??_RTC_display+2
  2701  0302  083C               	movf	??_RTC_display+2,w
  2702  0303  00C7               	movwf	_Date+7
  2703                           
  2704                           ;main_mini2.c: 199:     Date[9] = month / 10 + '0';
  2705  0304  300A               	movlw	10
  2706  0305  00A0               	movwf	___awdiv@divisor
  2707  0306  3000               	movlw	0
  2708  0307  00A1               	movwf	___awdiv@divisor+1
  2709  0308  0860               	movf	_month,w
  2710  0309  00BA               	movwf	??_RTC_display
  2711  030A  01BB               	clrf	??_RTC_display+1
  2712  030B  083A               	movf	??_RTC_display,w
  2713  030C  00A2               	movwf	___awdiv@dividend
  2714  030D  083B               	movf	??_RTC_display+1,w
  2715  030E  00A3               	movwf	___awdiv@dividend+1
  2716  030F  120A  118A  24B7  120A  118A  	fcall	___awdiv
  2717  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0316  0820               	movf	?___awdiv,w
  2720  0317  3E30               	addlw	48
  2721  0318  00BC               	movwf	??_RTC_display+2
  2722  0319  083C               	movf	??_RTC_display+2,w
  2723  031A  00C9               	movwf	_Date+9
  2724                           
  2725                           ;main_mini2.c: 200:     Date[10] = month % 10 + '0';
  2726  031B  300A               	movlw	10
  2727  031C  00A0               	movwf	___awmod@divisor
  2728  031D  3000               	movlw	0
  2729  031E  00A1               	movwf	___awmod@divisor+1
  2730  031F  0860               	movf	_month,w
  2731  0320  00BA               	movwf	??_RTC_display
  2732  0321  01BB               	clrf	??_RTC_display+1
  2733  0322  083A               	movf	??_RTC_display,w
  2734  0323  00A2               	movwf	___awmod@dividend
  2735  0324  083B               	movf	??_RTC_display+1,w
  2736  0325  00A3               	movwf	___awmod@dividend+1
  2737  0326  120A  118A  2588  120A  118A  	fcall	___awmod
  2738  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2739  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2740  032D  0820               	movf	?___awmod,w
  2741  032E  3E30               	addlw	48
  2742  032F  00BC               	movwf	??_RTC_display+2
  2743  0330  083C               	movf	??_RTC_display+2,w
  2744  0331  00CA               	movwf	_Date+10
  2745                           
  2746                           ;main_mini2.c: 201:     Date[12] = year / 10 + '0';
  2747  0332  300A               	movlw	10
  2748  0333  00A0               	movwf	___awdiv@divisor
  2749  0334  3000               	movlw	0
  2750  0335  00A1               	movwf	___awdiv@divisor+1
  2751  0336  085F               	movf	_year,w
  2752  0337  00BA               	movwf	??_RTC_display
  2753  0338  01BB               	clrf	??_RTC_display+1
  2754  0339  083A               	movf	??_RTC_display,w
  2755  033A  00A2               	movwf	___awdiv@dividend
  2756  033B  083B               	movf	??_RTC_display+1,w
  2757  033C  00A3               	movwf	___awdiv@dividend+1
  2758  033D  120A  118A  24B7  120A  118A  	fcall	___awdiv
  2759  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0344  0820               	movf	?___awdiv,w
  2762  0345  3E30               	addlw	48
  2763  0346  00BC               	movwf	??_RTC_display+2
  2764  0347  083C               	movf	??_RTC_display+2,w
  2765  0348  00CC               	movwf	_Date+12
  2766                           
  2767                           ;main_mini2.c: 202:     Date[13] = year % 10 + '0';
  2768  0349  300A               	movlw	10
  2769  034A  00A0               	movwf	___awmod@divisor
  2770  034B  3000               	movlw	0
  2771  034C  00A1               	movwf	___awmod@divisor+1
  2772  034D  085F               	movf	_year,w
  2773  034E  00BA               	movwf	??_RTC_display
  2774  034F  01BB               	clrf	??_RTC_display+1
  2775  0350  083A               	movf	??_RTC_display,w
  2776  0351  00A2               	movwf	___awmod@dividend
  2777  0352  083B               	movf	??_RTC_display+1,w
  2778  0353  00A3               	movwf	___awmod@dividend+1
  2779  0354  120A  118A  2588  120A  118A  	fcall	___awmod
  2780  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2781  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2782  035B  0820               	movf	?___awmod,w
  2783  035C  3E30               	addlw	48
  2784  035D  00BC               	movwf	??_RTC_display+2
  2785  035E  083C               	movf	??_RTC_display+2,w
  2786  035F  00CD               	movwf	_Date+13
  2787  0360                     l2653:
  2788                           
  2789                           ;main_mini2.c: 205:     sprintf(sec_send, "%d", second);
  2790  0360  3017               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2791  0361  00BA               	movwf	??_RTC_display
  2792  0362  083A               	movf	??_RTC_display,w
  2793  0363  00AB               	movwf	sprintf@f
  2794  0364  0864               	movf	_second,w
  2795  0365  00BB               	movwf	??_RTC_display+1
  2796  0366  01BC               	clrf	??_RTC_display+2
  2797  0367  083B               	movf	??_RTC_display+1,w
  2798  0368  00AC               	movwf	?_sprintf+1
  2799  0369  083C               	movf	??_RTC_display+2,w
  2800  036A  00AD               	movwf	?_sprintf+2
  2801  036B  3065               	movlw	(low (_sec_send| 0))& (0+255)
  2802  036C  120A  118A  2034  120A  118A  	fcall	_sprintf
  2803  0371                     l2655:
  2804                           
  2805                           ;main_mini2.c: 206:     sprintf(min_send, "%02d", minute);
  2806  0371  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2807  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0374  00BA               	movwf	??_RTC_display
  2810  0375  083A               	movf	??_RTC_display,w
  2811  0376  00AB               	movwf	sprintf@f
  2812  0377  0863               	movf	_minute,w
  2813  0378  00BB               	movwf	??_RTC_display+1
  2814  0379  01BC               	clrf	??_RTC_display+2
  2815  037A  083B               	movf	??_RTC_display+1,w
  2816  037B  00AC               	movwf	?_sprintf+1
  2817  037C  083C               	movf	??_RTC_display+2,w
  2818  037D  00AD               	movwf	?_sprintf+2
  2819  037E  30DC               	movlw	(low (_min_send| 0))& (0+255)
  2820  037F  120A  118A  2034  120A  118A  	fcall	_sprintf
  2821  0384                     l2657:
  2822                           
  2823                           ;main_mini2.c: 207:     sprintf(hour_send, "%02d", hour);
  2824  0384  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2825  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2826  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2827  0387  00BA               	movwf	??_RTC_display
  2828  0388  083A               	movf	??_RTC_display,w
  2829  0389  00AB               	movwf	sprintf@f
  2830  038A  0862               	movf	_hour,w
  2831  038B  00BB               	movwf	??_RTC_display+1
  2832  038C  01BC               	clrf	??_RTC_display+2
  2833  038D  083B               	movf	??_RTC_display+1,w
  2834  038E  00AC               	movwf	?_sprintf+1
  2835  038F  083C               	movf	??_RTC_display+2,w
  2836  0390  00AD               	movwf	?_sprintf+2
  2837  0391  30D4               	movlw	(low (_hour_send| 0))& (0+255)
  2838  0392  120A  118A  2034  120A  118A  	fcall	_sprintf
  2839  0397                     l2659:
  2840                           
  2841                           ;main_mini2.c: 208:     sprintf(day_send, "%02d", m_day);
  2842  0397  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2843  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2844  0399  1303               	bcf	3,6	;RP1=0, select bank0
  2845  039A  00BA               	movwf	??_RTC_display
  2846  039B  083A               	movf	??_RTC_display,w
  2847  039C  00AB               	movwf	sprintf@f
  2848  039D  0861               	movf	_m_day,w
  2849  039E  00BB               	movwf	??_RTC_display+1
  2850  039F  01BC               	clrf	??_RTC_display+2
  2851  03A0  083B               	movf	??_RTC_display+1,w
  2852  03A1  00AC               	movwf	?_sprintf+1
  2853  03A2  083C               	movf	??_RTC_display+2,w
  2854  03A3  00AD               	movwf	?_sprintf+2
  2855  03A4  30CC               	movlw	(low (_day_send| 0))& (0+255)
  2856  03A5  120A  118A  2034  120A  118A  	fcall	_sprintf
  2857  03AA                     l2661:
  2858                           
  2859                           ;main_mini2.c: 209:     sprintf(month_send, "%02d", month);
  2860  03AA  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2861  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2862  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2863  03AD  00BA               	movwf	??_RTC_display
  2864  03AE  083A               	movf	??_RTC_display,w
  2865  03AF  00AB               	movwf	sprintf@f
  2866  03B0  0860               	movf	_month,w
  2867  03B1  00BB               	movwf	??_RTC_display+1
  2868  03B2  01BC               	clrf	??_RTC_display+2
  2869  03B3  083B               	movf	??_RTC_display+1,w
  2870  03B4  00AC               	movwf	?_sprintf+1
  2871  03B5  083C               	movf	??_RTC_display+2,w
  2872  03B6  00AD               	movwf	?_sprintf+2
  2873  03B7  30C4               	movlw	(low (_month_send| 0))& (0+255)
  2874  03B8  120A  118A  2034  120A  118A  	fcall	_sprintf
  2875  03BD                     l2663:
  2876                           
  2877                           ;main_mini2.c: 210:     sprintf(year_send, "%2d", year);
  2878  03BD  3010               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2879  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2880  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2881  03C0  00BA               	movwf	??_RTC_display
  2882  03C1  083A               	movf	??_RTC_display,w
  2883  03C2  00AB               	movwf	sprintf@f
  2884  03C3  085F               	movf	_year,w
  2885  03C4  00BB               	movwf	??_RTC_display+1
  2886  03C5  01BC               	clrf	??_RTC_display+2
  2887  03C6  083B               	movf	??_RTC_display+1,w
  2888  03C7  00AC               	movwf	?_sprintf+1
  2889  03C8  083C               	movf	??_RTC_display+2,w
  2890  03C9  00AD               	movwf	?_sprintf+2
  2891  03CA  30BC               	movlw	(low (_year_send| 0))& (0+255)
  2892  03CB  120A  118A  2034  120A  118A  	fcall	_sprintf
  2893  03D0                     l136:
  2894  03D0  0008               	return
  2895  03D1                     __end_of_RTC_display:
  2896                           
  2897                           	psect	text14
  2898  0034                     __ptext14:	
  2899 ;; *************** function _sprintf *****************
  2900 ;; Defined at:
  2901 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  sp              1    wreg     PTR unsigned char 
  2904 ;;		 -> year_send(8), month_send(8), day_send(8), hour_send(8), 
  2905 ;;		 -> min_send(8), sec_send(8), 
  2906 ;;  f               1   11[BANK0 ] PTR const unsigned char 
  2907 ;;		 -> STR_7(4), STR_6(5), STR_5(5), STR_4(5), 
  2908 ;;		 -> STR_3(5), STR_2(3), 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  sp              1   25[BANK0 ] PTR unsigned char 
  2911 ;;		 -> year_send(8), month_send(8), day_send(8), hour_send(8), 
  2912 ;;		 -> min_send(8), sec_send(8), 
  2913 ;;  tmpval          4    0        struct .
  2914 ;;  width           2   22[BANK0 ] int 
  2915 ;;  val             2   19[BANK0 ] unsigned int 
  2916 ;;  cp              2    0        PTR const unsigned char 
  2917 ;;  len             2    0        unsigned int 
  2918 ;;  c               1   24[BANK0 ] unsigned char 
  2919 ;;  flag            1   21[BANK0 ] unsigned char 
  2920 ;;  prec            1   18[BANK0 ] char 
  2921 ;;  ap              1   17[BANK0 ] PTR void [1]
  2922 ;;		 -> ?_sprintf(2), 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  2   11[BANK0 ] int 
  2925 ;; Registers used:
  2926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2932 ;;      Params:         0       3       0       0       0
  2933 ;;      Locals:         0       9       0       0       0
  2934 ;;      Temps:          0       3       0       0       0
  2935 ;;      Totals:         0      15       0       0       0
  2936 ;;Total ram usage:       15 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:    3
  2939 ;; This function calls:
  2940 ;;		___lwdiv
  2941 ;;		___lwmod
  2942 ;;		___wmul
  2943 ;;		_isdigit
  2944 ;; This function is called by:
  2945 ;;		_RTC_display
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           
  2950                           ;psect for function _sprintf
  2951  0034                     _sprintf:
  2952                           
  2953                           ;incstack = 0
  2954                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2955                           ;sprintf@sp stored from wreg
  2956  0034  1283               	bcf	3,5	;RP0=0, select bank0
  2957  0035  1303               	bcf	3,6	;RP1=0, select bank0
  2958  0036  00B9               	movwf	sprintf@sp
  2959  0037                     l2387:
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  2962  0037  302C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2963  0038  00AE               	movwf	??_sprintf
  2964  0039  082E               	movf	??_sprintf,w
  2965  003A  00B1               	movwf	sprintf@ap
  2966                           
  2967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2968  003B  29F1               	goto	l2491
  2969  003C                     l2389:
  2970                           
  2971                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2972  003C  3025               	movlw	37
  2973  003D  0638               	xorwf	sprintf@c,w
  2974  003E  1903               	btfsc	3,2
  2975  003F  2841               	goto	u2131
  2976  0040  2842               	goto	u2130
  2977  0041                     u2131:
  2978  0041  284E               	goto	l2395
  2979  0042                     u2130:
  2980  0042                     l2391:
  2981                           
  2982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2983  0042  0838               	movf	sprintf@c,w
  2984  0043  00AE               	movwf	??_sprintf
  2985  0044  0839               	movf	sprintf@sp,w
  2986  0045  0084               	movwf	4
  2987  0046  082E               	movf	??_sprintf,w
  2988  0047  1383               	bcf	3,7	;select IRP bank0
  2989  0048  0080               	movwf	0
  2990  0049                     l2393:
  2991  0049  3001               	movlw	1
  2992  004A  00AE               	movwf	??_sprintf
  2993  004B  082E               	movf	??_sprintf,w
  2994  004C  07B9               	addwf	sprintf@sp,f
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2997  004D  29F1               	goto	l2491
  2998  004E                     l2395:
  2999                           
  3000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  3001  004E  01B6               	clrf	sprintf@width
  3002  004F  01B7               	clrf	sprintf@width+1
  3003                           
  3004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3005  0050  01B5               	clrf	sprintf@flag
  3006  0051  2857               	goto	l2401
  3007  0052                     l437:	
  3008                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 596:    case '0':
  3009                           
  3010                           
  3011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  3012  0052  1535               	bsf	sprintf@flag,2
  3013  0053                     l2397:
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 598:     f++;
  3016  0053  3001               	movlw	1
  3017  0054  00AE               	movwf	??_sprintf
  3018  0055  082E               	movf	??_sprintf,w
  3019  0056  07AB               	addwf	sprintf@f,f
  3020  0057                     l2401:	
  3021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  3022                           
  3023  0057  082B               	movf	sprintf@f,w
  3024  0058  0084               	movwf	4
  3025  0059  120A  158A  200A  120A  118A  	fcall	stringdir
  3026  005E  00AE               	movwf	??_sprintf
  3027  005F  01AF               	clrf	??_sprintf+1
  3028                           
  3029                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3030                           ; Switch size 1, requested type "simple"
  3031                           ; Number of cases is 1, Range of values is 0 to 0
  3032                           ; switch strategies available:
  3033                           ; Name         Instructions Cycles
  3034                           ; simple_byte            4     3 (average)
  3035                           ; direct_byte           11     8 (fixed)
  3036                           ; jumptable            260     6 (fixed)
  3037                           ;	Chosen strategy is simple_byte
  3038  0060  082F               	movf	??_sprintf+1,w
  3039  0061  3A00               	xorlw	0	; case 0
  3040  0062  1903               	skipnz
  3041  0063  2865               	goto	l2765
  3042  0064  286A               	goto	l2403
  3043  0065                     l2765:
  3044                           
  3045                           ; Switch size 1, requested type "simple"
  3046                           ; Number of cases is 1, Range of values is 48 to 48
  3047                           ; switch strategies available:
  3048                           ; Name         Instructions Cycles
  3049                           ; simple_byte            4     3 (average)
  3050                           ; direct_byte           14    11 (fixed)
  3051                           ; jumptable            263     9 (fixed)
  3052                           ;	Chosen strategy is simple_byte
  3053  0065  082E               	movf	??_sprintf,w
  3054  0066  3A30               	xorlw	48	; case 48
  3055  0067  1903               	skipnz
  3056  0068  2852               	goto	l437
  3057  0069  286A               	goto	l2403
  3058  006A                     l2403:
  3059                           
  3060                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  3061  006A  082B               	movf	sprintf@f,w
  3062  006B  0084               	movwf	4
  3063  006C  120A  158A  200A  120A  118A  	fcall	stringdir
  3064  0071  120A  158A  272D  120A  118A  	fcall	_isdigit
  3065  0076  1C03               	btfss	3,0
  3066  0077  2879               	goto	u2141
  3067  0078  287A               	goto	u2140
  3068  0079                     u2141:
  3069  0079  28BA               	goto	l2417
  3070  007A                     u2140:
  3071  007A                     l2405:
  3072                           
  3073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  3074  007A  1283               	bcf	3,5	;RP0=0, select bank0
  3075  007B  1303               	bcf	3,6	;RP1=0, select bank0
  3076  007C  01B6               	clrf	sprintf@width
  3077  007D  01B7               	clrf	sprintf@width+1
  3078  007E                     l2407:
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  3081  007E  300A               	movlw	10
  3082  007F  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0080  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0081  00A0               	movwf	___wmul@multiplier
  3085  0082  3000               	movlw	0
  3086  0083  00A1               	movwf	___wmul@multiplier+1
  3087  0084  0837               	movf	sprintf@width+1,w
  3088  0085  00A3               	movwf	___wmul@multiplicand+1
  3089  0086  0836               	movf	sprintf@width,w
  3090  0087  00A2               	movwf	___wmul@multiplicand
  3091  0088  120A  158A  27AC  120A  118A  	fcall	___wmul
  3092  008D  1283               	bcf	3,5	;RP0=0, select bank0
  3093  008E  1303               	bcf	3,6	;RP1=0, select bank0
  3094  008F  0821               	movf	?___wmul+1,w
  3095  0090  00B7               	movwf	sprintf@width+1
  3096  0091  0820               	movf	?___wmul,w
  3097  0092  00B6               	movwf	sprintf@width
  3098  0093                     l2409:
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  3101  0093  082B               	movf	sprintf@f,w
  3102  0094  0084               	movwf	4
  3103  0095  120A  158A  200A  120A  118A  	fcall	stringdir
  3104  009A  3ED0               	addlw	208
  3105  009B  00AE               	movwf	??_sprintf
  3106  009C  30FF               	movlw	255
  3107  009D  1803               	skipnc
  3108  009E  3000               	movlw	0
  3109  009F  00AF               	movwf	??_sprintf+1
  3110  00A0  082E               	movf	??_sprintf,w
  3111  00A1  07B6               	addwf	sprintf@width,f
  3112  00A2  1803               	skipnc
  3113  00A3  0AB7               	incf	sprintf@width+1,f
  3114  00A4  082F               	movf	??_sprintf+1,w
  3115  00A5  07B7               	addwf	sprintf@width+1,f
  3116  00A6                     l2411:
  3117  00A6  3001               	movlw	1
  3118  00A7  00AE               	movwf	??_sprintf
  3119  00A8  082E               	movf	??_sprintf,w
  3120  00A9  07AB               	addwf	sprintf@f,f
  3121  00AA                     l2413:
  3122                           
  3123                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  3124  00AA  082B               	movf	sprintf@f,w
  3125  00AB  0084               	movwf	4
  3126  00AC  120A  158A  200A  120A  118A  	fcall	stringdir
  3127  00B1  120A  158A  272D  120A  118A  	fcall	_isdigit
  3128  00B6  1803               	btfsc	3,0
  3129  00B7  28B9               	goto	u2151
  3130  00B8  28BA               	goto	u2150
  3131  00B9                     u2151:
  3132  00B9  287E               	goto	l2407
  3133  00BA                     u2150:
  3134  00BA                     l2417:
  3135  00BA  3001               	movlw	1
  3136  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  3137  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  3138  00BD  07AB               	addwf	sprintf@f,f
  3139  00BE  30FF               	movlw	-1
  3140  00BF  072B               	addwf	sprintf@f,w
  3141  00C0  0084               	movwf	4
  3142  00C1  120A  158A  200A  120A  118A  	fcall	stringdir
  3143  00C6  00B8               	movwf	sprintf@c
  3144  00C7  00AE               	movwf	??_sprintf
  3145  00C8  01AF               	clrf	??_sprintf+1
  3146                           
  3147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3148                           ; Switch size 1, requested type "simple"
  3149                           ; Number of cases is 1, Range of values is 0 to 0
  3150                           ; switch strategies available:
  3151                           ; Name         Instructions Cycles
  3152                           ; simple_byte            4     3 (average)
  3153                           ; direct_byte           11     8 (fixed)
  3154                           ; jumptable            260     6 (fixed)
  3155                           ;	Chosen strategy is simple_byte
  3156  00C9  082F               	movf	??_sprintf+1,w
  3157  00CA  3A00               	xorlw	0	; case 0
  3158  00CB  1903               	skipnz
  3159  00CC  28CE               	goto	l2767
  3160  00CD  29F1               	goto	l2491
  3161  00CE                     l2767:
  3162                           
  3163                           ; Switch size 1, requested type "simple"
  3164                           ; Number of cases is 3, Range of values is 0 to 105
  3165                           ; switch strategies available:
  3166                           ; Name         Instructions Cycles
  3167                           ; simple_byte           10     6 (average)
  3168                           ; jumptable            260     6 (fixed)
  3169                           ;	Chosen strategy is simple_byte
  3170  00CE  082E               	movf	??_sprintf,w
  3171  00CF  3A00               	xorlw	0	; case 0
  3172  00D0  1903               	skipnz
  3173  00D1  2A03               	goto	l2493
  3174  00D2  3A64               	xorlw	100	; case 100
  3175  00D3  1903               	skipnz
  3176  00D4  28D9               	goto	l2419
  3177  00D5  3A0D               	xorlw	13	; case 105
  3178  00D6  1903               	skipnz
  3179  00D7  28D9               	goto	l2419
  3180  00D8  29F1               	goto	l2491
  3181  00D9                     l2419:
  3182                           
  3183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3184  00D9  0831               	movf	sprintf@ap,w
  3185  00DA  0084               	movwf	4
  3186  00DB  1383               	bcf	3,7	;select IRP bank0
  3187  00DC  0800               	movf	0,w
  3188  00DD  00B3               	movwf	sprintf@val
  3189  00DE  0A84               	incf	4,f
  3190  00DF  0800               	movf	0,w
  3191  00E0  00B4               	movwf	sprintf@val+1
  3192  00E1                     l2421:
  3193  00E1  3002               	movlw	2
  3194  00E2  00AE               	movwf	??_sprintf
  3195  00E3  082E               	movf	??_sprintf,w
  3196  00E4  07B1               	addwf	sprintf@ap,f
  3197  00E5                     l2423:
  3198                           
  3199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3200  00E5  1FB4               	btfss	sprintf@val+1,7
  3201  00E6  28E8               	goto	u2161
  3202  00E7  28E9               	goto	u2160
  3203  00E8                     u2161:
  3204  00E8  28F2               	goto	l2429
  3205  00E9                     u2160:
  3206  00E9                     l2425:
  3207                           
  3208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3209  00E9  3003               	movlw	3
  3210  00EA  00AE               	movwf	??_sprintf
  3211  00EB  082E               	movf	??_sprintf,w
  3212  00EC  04B5               	iorwf	sprintf@flag,f
  3213  00ED                     l2427:
  3214                           
  3215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3216  00ED  09B3               	comf	sprintf@val,f
  3217  00EE  09B4               	comf	sprintf@val+1,f
  3218  00EF  0AB3               	incf	sprintf@val,f
  3219  00F0  1903               	skipnz
  3220  00F1  0AB4               	incf	sprintf@val+1,f
  3221  00F2                     l2429:
  3222                           
  3223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3224  00F2  01B8               	clrf	sprintf@c
  3225  00F3  0AB8               	incf	sprintf@c,f
  3226  00F4                     l2435:
  3227                           
  3228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3229  00F4  0838               	movf	sprintf@c,w
  3230  00F5  00AE               	movwf	??_sprintf
  3231  00F6  072E               	addwf	??_sprintf,w
  3232  00F7  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3233  00F8  0084               	movwf	4
  3234  00F9  120A  158A  200A  120A  118A  	fcall	stringdir
  3235  00FE  00AF               	movwf	??_sprintf+1
  3236  00FF  120A  158A  200A  120A  118A  	fcall	stringdir
  3237  0104  00B0               	movwf	??_sprintf+2
  3238  0105  0830               	movf	??_sprintf+2,w
  3239  0106  0234               	subwf	sprintf@val+1,w
  3240  0107  1D03               	skipz
  3241  0108  290B               	goto	u2175
  3242  0109  082F               	movf	??_sprintf+1,w
  3243  010A  0233               	subwf	sprintf@val,w
  3244  010B                     u2175:
  3245  010B  1803               	skipnc
  3246  010C  290E               	goto	u2171
  3247  010D  290F               	goto	u2170
  3248  010E                     u2171:
  3249  010E  2910               	goto	l2439
  3250  010F                     u2170:
  3251  010F  291A               	goto	l2441
  3252  0110                     l2439:
  3253  0110  3001               	movlw	1
  3254  0111  00AE               	movwf	??_sprintf
  3255  0112  082E               	movf	??_sprintf,w
  3256  0113  07B8               	addwf	sprintf@c,f
  3257  0114  3005               	movlw	5
  3258  0115  0638               	xorwf	sprintf@c,w
  3259  0116  1D03               	btfss	3,2
  3260  0117  2919               	goto	u2181
  3261  0118  291A               	goto	u2180
  3262  0119                     u2181:
  3263  0119  28F4               	goto	l2435
  3264  011A                     u2180:
  3265  011A                     l2441:
  3266                           
  3267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3268  011A  0836               	movf	sprintf@width,w
  3269  011B  0437               	iorwf	sprintf@width+1,w
  3270  011C  1903               	btfsc	3,2
  3271  011D  291F               	goto	u2191
  3272  011E  2920               	goto	u2190
  3273  011F                     u2191:
  3274  011F  292C               	goto	l455
  3275  0120                     u2190:
  3276  0120                     l2443:
  3277  0120  0835               	movf	sprintf@flag,w
  3278  0121  3903               	andlw	3
  3279  0122  1903               	btfsc	3,2
  3280  0123  2925               	goto	u2201
  3281  0124  2926               	goto	u2200
  3282  0125                     u2201:
  3283  0125  292C               	goto	l455
  3284  0126                     u2200:
  3285  0126                     l2445:
  3286                           
  3287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3288  0126  30FF               	movlw	255
  3289  0127  07B6               	addwf	sprintf@width,f
  3290  0128  1803               	skipnc
  3291  0129  0AB7               	incf	sprintf@width+1,f
  3292  012A  30FF               	movlw	255
  3293  012B  07B7               	addwf	sprintf@width+1,f
  3294  012C                     l455:
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3297  012C  0837               	movf	sprintf@width+1,w
  3298  012D  3A80               	xorlw	128
  3299  012E  3C80               	sublw	128
  3300  012F  1D03               	skipz
  3301  0130  2933               	goto	u2215
  3302  0131  0836               	movf	sprintf@width,w
  3303  0132  0238               	subwf	sprintf@c,w
  3304  0133                     u2215:
  3305  0133  1803               	skipnc
  3306  0134  2936               	goto	u2211
  3307  0135  2937               	goto	u2210
  3308  0136                     u2211:
  3309  0136  2943               	goto	l2449
  3310  0137                     u2210:
  3311  0137                     l2447:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3314  0137  1283               	bcf	3,5	;RP0=0, select bank0
  3315  0138  1303               	bcf	3,6	;RP1=0, select bank0
  3316  0139  0838               	movf	sprintf@c,w
  3317  013A  00AE               	movwf	??_sprintf
  3318  013B  01AF               	clrf	??_sprintf+1
  3319  013C  082E               	movf	??_sprintf,w
  3320  013D  02B6               	subwf	sprintf@width,f
  3321  013E  082F               	movf	??_sprintf+1,w
  3322  013F  1C03               	skipc
  3323  0140  03B7               	decf	sprintf@width+1,f
  3324  0141  02B7               	subwf	sprintf@width+1,f
  3325  0142  2947               	goto	l2451
  3326  0143                     l2449:
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3329  0143  1283               	bcf	3,5	;RP0=0, select bank0
  3330  0144  1303               	bcf	3,6	;RP1=0, select bank0
  3331  0145  01B6               	clrf	sprintf@width
  3332  0146  01B7               	clrf	sprintf@width+1
  3333  0147                     l2451:
  3334                           
  3335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  3336  0147  1D35               	btfss	sprintf@flag,2
  3337  0148  294A               	goto	u2221
  3338  0149  294B               	goto	u2220
  3339  014A                     u2221:
  3340  014A  297A               	goto	l2467
  3341  014B                     u2220:
  3342  014B                     l2453:
  3343                           
  3344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  3345  014B  0835               	movf	sprintf@flag,w
  3346  014C  3903               	andlw	3
  3347  014D  1903               	btfsc	3,2
  3348  014E  2950               	goto	u2231
  3349  014F  2951               	goto	u2230
  3350  0150                     u2231:
  3351  0150  295C               	goto	l2459
  3352  0151                     u2230:
  3353  0151                     l2455:
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  3356  0151  302D               	movlw	45
  3357  0152  00AE               	movwf	??_sprintf
  3358  0153  0839               	movf	sprintf@sp,w
  3359  0154  0084               	movwf	4
  3360  0155  082E               	movf	??_sprintf,w
  3361  0156  1383               	bcf	3,7	;select IRP bank0
  3362  0157  0080               	movwf	0
  3363  0158                     l2457:
  3364  0158  3001               	movlw	1
  3365  0159  00AE               	movwf	??_sprintf
  3366  015A  082E               	movf	??_sprintf,w
  3367  015B  07B9               	addwf	sprintf@sp,f
  3368  015C                     l2459:
  3369                           
  3370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  3371  015C  0836               	movf	sprintf@width,w
  3372  015D  0437               	iorwf	sprintf@width+1,w
  3373  015E  1903               	btfsc	3,2
  3374  015F  2961               	goto	u2241
  3375  0160  2962               	goto	u2240
  3376  0161                     u2241:
  3377  0161  29A8               	goto	l2481
  3378  0162                     u2240:
  3379  0162                     l2461:
  3380                           
  3381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  3382  0162  3030               	movlw	48
  3383  0163  00AE               	movwf	??_sprintf
  3384  0164  0839               	movf	sprintf@sp,w
  3385  0165  0084               	movwf	4
  3386  0166  082E               	movf	??_sprintf,w
  3387  0167  1383               	bcf	3,7	;select IRP bank0
  3388  0168  0080               	movwf	0
  3389  0169                     l2463:
  3390  0169  3001               	movlw	1
  3391  016A  00AE               	movwf	??_sprintf
  3392  016B  082E               	movf	??_sprintf,w
  3393  016C  07B9               	addwf	sprintf@sp,f
  3394  016D                     l2465:
  3395  016D  30FF               	movlw	255
  3396  016E  07B6               	addwf	sprintf@width,f
  3397  016F  1803               	skipnc
  3398  0170  0AB7               	incf	sprintf@width+1,f
  3399  0171  30FF               	movlw	255
  3400  0172  07B7               	addwf	sprintf@width+1,f
  3401  0173  0836               	movf	sprintf@width,w
  3402  0174  0437               	iorwf	sprintf@width+1,w
  3403  0175  1D03               	btfss	3,2
  3404  0176  2978               	goto	u2251
  3405  0177  2979               	goto	u2250
  3406  0178                     u2251:
  3407  0178  2962               	goto	l2461
  3408  0179                     u2250:
  3409  0179  29A8               	goto	l2481
  3410  017A                     l2467:
  3411                           
  3412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3413  017A  0836               	movf	sprintf@width,w
  3414  017B  0437               	iorwf	sprintf@width+1,w
  3415  017C  1903               	btfsc	3,2
  3416  017D  297F               	goto	u2261
  3417  017E  2980               	goto	u2260
  3418  017F                     u2261:
  3419  017F  2997               	goto	l2475
  3420  0180                     u2260:
  3421  0180                     l2469:
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3424  0180  3020               	movlw	32
  3425  0181  00AE               	movwf	??_sprintf
  3426  0182  0839               	movf	sprintf@sp,w
  3427  0183  0084               	movwf	4
  3428  0184  082E               	movf	??_sprintf,w
  3429  0185  1383               	bcf	3,7	;select IRP bank0
  3430  0186  0080               	movwf	0
  3431  0187                     l2471:
  3432  0187  3001               	movlw	1
  3433  0188  00AE               	movwf	??_sprintf
  3434  0189  082E               	movf	??_sprintf,w
  3435  018A  07B9               	addwf	sprintf@sp,f
  3436  018B                     l2473:
  3437  018B  30FF               	movlw	255
  3438  018C  07B6               	addwf	sprintf@width,f
  3439  018D  1803               	skipnc
  3440  018E  0AB7               	incf	sprintf@width+1,f
  3441  018F  30FF               	movlw	255
  3442  0190  07B7               	addwf	sprintf@width+1,f
  3443  0191  0836               	movf	sprintf@width,w
  3444  0192  0437               	iorwf	sprintf@width+1,w
  3445  0193  1D03               	btfss	3,2
  3446  0194  2996               	goto	u2271
  3447  0195  2997               	goto	u2270
  3448  0196                     u2271:
  3449  0196  2980               	goto	l2469
  3450  0197                     u2270:
  3451  0197                     l2475:
  3452                           
  3453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  3454  0197  0835               	movf	sprintf@flag,w
  3455  0198  3903               	andlw	3
  3456  0199  1903               	btfsc	3,2
  3457  019A  299C               	goto	u2281
  3458  019B  299D               	goto	u2280
  3459  019C                     u2281:
  3460  019C  29A8               	goto	l2481
  3461  019D                     u2280:
  3462  019D                     l2477:
  3463                           
  3464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3465  019D  302D               	movlw	45
  3466  019E  00AE               	movwf	??_sprintf
  3467  019F  0839               	movf	sprintf@sp,w
  3468  01A0  0084               	movwf	4
  3469  01A1  082E               	movf	??_sprintf,w
  3470  01A2  1383               	bcf	3,7	;select IRP bank0
  3471  01A3  0080               	movwf	0
  3472  01A4                     l2479:
  3473  01A4  3001               	movlw	1
  3474  01A5  00AE               	movwf	??_sprintf
  3475  01A6  082E               	movf	??_sprintf,w
  3476  01A7  07B9               	addwf	sprintf@sp,f
  3477  01A8                     l2481:
  3478                           
  3479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3480  01A8  0838               	movf	sprintf@c,w
  3481  01A9  00AE               	movwf	??_sprintf
  3482  01AA  082E               	movf	??_sprintf,w
  3483  01AB  00B2               	movwf	sprintf@prec
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3486  01AC  29E8               	goto	l2489
  3487  01AD                     l2483:
  3488                           
  3489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3490  01AD  300A               	movlw	10
  3491  01AE  00A7               	movwf	___lwmod@divisor
  3492  01AF  3000               	movlw	0
  3493  01B0  00A8               	movwf	___lwmod@divisor+1
  3494  01B1  0832               	movf	sprintf@prec,w
  3495  01B2  00AE               	movwf	??_sprintf
  3496  01B3  072E               	addwf	??_sprintf,w
  3497  01B4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3498  01B5  0084               	movwf	4
  3499  01B6  120A  158A  200A  120A  118A  	fcall	stringdir
  3500  01BB  00A0               	movwf	___lwdiv@divisor
  3501  01BC  120A  158A  200A  120A  118A  	fcall	stringdir
  3502  01C1  00A1               	movwf	___lwdiv@divisor+1
  3503  01C2  0834               	movf	sprintf@val+1,w
  3504  01C3  00A3               	movwf	___lwdiv@dividend+1
  3505  01C4  0833               	movf	sprintf@val,w
  3506  01C5  00A2               	movwf	___lwdiv@dividend
  3507  01C6  120A  118A  263D  120A  118A  	fcall	___lwdiv
  3508  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  3509  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  3510  01CD  0821               	movf	?___lwdiv+1,w
  3511  01CE  00AA               	movwf	___lwmod@dividend+1
  3512  01CF  0820               	movf	?___lwdiv,w
  3513  01D0  00A9               	movwf	___lwmod@dividend
  3514  01D1  120A  118A  270A  120A  118A  	fcall	___lwmod
  3515  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  3516  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  3517  01D8  0827               	movf	?___lwmod,w
  3518  01D9  3E30               	addlw	48
  3519  01DA  00AF               	movwf	??_sprintf+1
  3520  01DB  082F               	movf	??_sprintf+1,w
  3521  01DC  00B8               	movwf	sprintf@c
  3522  01DD                     l2485:
  3523                           
  3524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3525  01DD  0838               	movf	sprintf@c,w
  3526  01DE  00AE               	movwf	??_sprintf
  3527  01DF  0839               	movf	sprintf@sp,w
  3528  01E0  0084               	movwf	4
  3529  01E1  082E               	movf	??_sprintf,w
  3530  01E2  1383               	bcf	3,7	;select IRP bank0
  3531  01E3  0080               	movwf	0
  3532  01E4                     l2487:
  3533  01E4  3001               	movlw	1
  3534  01E5  00AE               	movwf	??_sprintf
  3535  01E6  082E               	movf	??_sprintf,w
  3536  01E7  07B9               	addwf	sprintf@sp,f
  3537  01E8                     l2489:
  3538                           
  3539                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3540  01E8  30FF               	movlw	255
  3541  01E9  00AE               	movwf	??_sprintf
  3542  01EA  082E               	movf	??_sprintf,w
  3543  01EB  07B2               	addwf	sprintf@prec,f
  3544  01EC  0A32               	incf	sprintf@prec,w
  3545  01ED  1D03               	btfss	3,2
  3546  01EE  29F0               	goto	u2291
  3547  01EF  29F1               	goto	u2290
  3548  01F0                     u2291:
  3549  01F0  29AD               	goto	l2483
  3550  01F1                     u2290:
  3551  01F1                     l2491:
  3552                           
  3553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3554  01F1  3001               	movlw	1
  3555  01F2  07AB               	addwf	sprintf@f,f
  3556  01F3  30FF               	movlw	-1
  3557  01F4  072B               	addwf	sprintf@f,w
  3558  01F5  0084               	movwf	4
  3559  01F6  120A  158A  200A  120A  118A  	fcall	stringdir
  3560  01FB  00AE               	movwf	??_sprintf
  3561  01FC  082E               	movf	??_sprintf,w
  3562  01FD  00B8               	movwf	sprintf@c
  3563  01FE  0838               	movf	sprintf@c,w
  3564  01FF  1D03               	btfss	3,2
  3565  0200  2A02               	goto	u2301
  3566  0201  2A03               	goto	u2300
  3567  0202                     u2301:
  3568  0202  283C               	goto	l2389
  3569  0203                     u2300:
  3570  0203                     l2493:
  3571                           
  3572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3573  0203  0839               	movf	sprintf@sp,w
  3574  0204  0084               	movwf	4
  3575  0205  1383               	bcf	3,7	;select IRP bank0
  3576  0206  0180               	clrf	0
  3577  0207                     l472:
  3578  0207  0008               	return
  3579  0208                     __end_of_sprintf:
  3580                           
  3581                           	psect	text15
  3582  0F2D                     __ptext15:	
  3583 ;; *************** function _isdigit *****************
  3584 ;; Defined at:
  3585 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  c               1    wreg     unsigned char 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  c               1    5[COMMON] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;		None               void
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, status,0
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3599 ;;      Params:         0       0       0       0       0
  3600 ;;      Locals:         2       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0
  3602 ;;      Totals:         2       0       0       0       0
  3603 ;;Total ram usage:        2 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    2
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_sprintf
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function _isdigit
  3615  0F2D                     _isdigit:
  3616                           
  3617                           ;incstack = 0
  3618                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3619                           ;isdigit@c stored from wreg
  3620  0F2D  00F5               	movwf	isdigit@c
  3621  0F2E                     l1695:
  3622  0F2E  01F4               	clrf	_isdigit$1076
  3623  0F2F                     l1697:
  3624  0F2F  303A               	movlw	58
  3625  0F30  0275               	subwf	isdigit@c,w
  3626  0F31  1803               	skipnc
  3627  0F32  2F34               	goto	u1011
  3628  0F33  2F35               	goto	u1010
  3629  0F34                     u1011:
  3630  0F34  2F3D               	goto	l1703
  3631  0F35                     u1010:
  3632  0F35                     l1699:
  3633  0F35  3030               	movlw	48
  3634  0F36  0275               	subwf	isdigit@c,w
  3635  0F37  1C03               	skipc
  3636  0F38  2F3A               	goto	u1021
  3637  0F39  2F3B               	goto	u1020
  3638  0F3A                     u1021:
  3639  0F3A  2F3D               	goto	l1703
  3640  0F3B                     u1020:
  3641  0F3B                     l1701:
  3642  0F3B  01F4               	clrf	_isdigit$1076
  3643  0F3C  0AF4               	incf	_isdigit$1076,f
  3644  0F3D                     l1703:
  3645  0F3D  0C74               	rrf	_isdigit$1076,w
  3646  0F3E                     l929:
  3647  0F3E  0008               	return
  3648  0F3F                     __end_of_isdigit:
  3649                           
  3650                           	psect	text16
  3651  0FAC                     __ptext16:	
  3652 ;; *************** function ___wmul *****************
  3653 ;; Defined at:
  3654 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3657 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  product         2    4[COMMON] unsigned int 
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  2    0[BANK0 ] unsigned int 
  3662 ;; Registers used:
  3663 ;;		wreg, status,2, status,0
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3669 ;;      Params:         0       4       0       0       0
  3670 ;;      Locals:         2       0       0       0       0
  3671 ;;      Temps:          0       0       0       0       0
  3672 ;;      Totals:         2       4       0       0       0
  3673 ;;Total ram usage:        6 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:    2
  3676 ;; This function calls:
  3677 ;;		Nothing
  3678 ;; This function is called by:
  3679 ;;		_sprintf
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           
  3684                           ;psect for function ___wmul
  3685  0FAC                     ___wmul:
  3686  0FAC                     l2267:	
  3687                           ;incstack = 0
  3688                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3689                           
  3690  0FAC  01F4               	clrf	___wmul@product
  3691  0FAD  01F5               	clrf	___wmul@product+1
  3692  0FAE                     l2269:
  3693  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  3694  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  3695  0FB0  1C20               	btfss	___wmul@multiplier,0
  3696  0FB1  2FB3               	goto	u1851
  3697  0FB2  2FB4               	goto	u1850
  3698  0FB3                     u1851:
  3699  0FB3  2FBA               	goto	l476
  3700  0FB4                     u1850:
  3701  0FB4                     l2271:
  3702  0FB4  0822               	movf	___wmul@multiplicand,w
  3703  0FB5  07F4               	addwf	___wmul@product,f
  3704  0FB6  1803               	skipnc
  3705  0FB7  0AF5               	incf	___wmul@product+1,f
  3706  0FB8  0823               	movf	___wmul@multiplicand+1,w
  3707  0FB9  07F5               	addwf	___wmul@product+1,f
  3708  0FBA                     l476:
  3709  0FBA  3001               	movlw	1
  3710  0FBB                     u1865:
  3711  0FBB  1003               	clrc
  3712  0FBC  0DA2               	rlf	___wmul@multiplicand,f
  3713  0FBD  0DA3               	rlf	___wmul@multiplicand+1,f
  3714  0FBE  3EFF               	addlw	-1
  3715  0FBF  1D03               	skipz
  3716  0FC0  2FBB               	goto	u1865
  3717  0FC1                     l2273:
  3718  0FC1  3001               	movlw	1
  3719  0FC2                     u1875:
  3720  0FC2  1003               	clrc
  3721  0FC3  0CA1               	rrf	___wmul@multiplier+1,f
  3722  0FC4  0CA0               	rrf	___wmul@multiplier,f
  3723  0FC5  3EFF               	addlw	-1
  3724  0FC6  1D03               	skipz
  3725  0FC7  2FC2               	goto	u1875
  3726  0FC8                     l2275:
  3727  0FC8  0820               	movf	___wmul@multiplier,w
  3728  0FC9  0421               	iorwf	___wmul@multiplier+1,w
  3729  0FCA  1D03               	btfss	3,2
  3730  0FCB  2FCD               	goto	u1881
  3731  0FCC  2FCE               	goto	u1880
  3732  0FCD                     u1881:
  3733  0FCD  2FAE               	goto	l2269
  3734  0FCE                     u1880:
  3735  0FCE                     l2277:
  3736  0FCE  0875               	movf	___wmul@product+1,w
  3737  0FCF  00A1               	movwf	?___wmul+1
  3738  0FD0  0874               	movf	___wmul@product,w
  3739  0FD1  00A0               	movwf	?___wmul
  3740  0FD2                     l478:
  3741  0FD2  0008               	return
  3742  0FD3                     __end_of___wmul:
  3743                           
  3744                           	psect	text17
  3745  070A                     __ptext17:	
  3746 ;; *************** function ___lwmod *****************
  3747 ;; Defined at:
  3748 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  divisor         2    7[BANK0 ] unsigned int 
  3751 ;;  dividend        2    9[BANK0 ] unsigned int 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  counter         1    6[COMMON] unsigned char 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  2    7[BANK0 ] unsigned int 
  3756 ;; Registers used:
  3757 ;;		wreg, status,2, status,0
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3763 ;;      Params:         0       4       0       0       0
  3764 ;;      Locals:         1       0       0       0       0
  3765 ;;      Temps:          1       0       0       0       0
  3766 ;;      Totals:         2       4       0       0       0
  3767 ;;Total ram usage:        6 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    2
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_sprintf
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           
  3778                           ;psect for function ___lwmod
  3779  070A                     ___lwmod:
  3780  070A                     l2345:	
  3781                           ;incstack = 0
  3782                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3783                           
  3784  070A  1283               	bcf	3,5	;RP0=0, select bank0
  3785  070B  1303               	bcf	3,6	;RP1=0, select bank0
  3786  070C  0827               	movf	___lwmod@divisor,w
  3787  070D  0428               	iorwf	___lwmod@divisor+1,w
  3788  070E  1903               	btfsc	3,2
  3789  070F  2F11               	goto	u2051
  3790  0710  2F12               	goto	u2050
  3791  0711                     u2051:
  3792  0711  2F41               	goto	l2363
  3793  0712                     u2050:
  3794  0712                     l2347:
  3795  0712  01F6               	clrf	___lwmod@counter
  3796  0713  0AF6               	incf	___lwmod@counter,f
  3797  0714  2F20               	goto	l2353
  3798  0715                     l2349:
  3799  0715  3001               	movlw	1
  3800  0716                     u2065:
  3801  0716  1003               	clrc
  3802  0717  0DA7               	rlf	___lwmod@divisor,f
  3803  0718  0DA8               	rlf	___lwmod@divisor+1,f
  3804  0719  3EFF               	addlw	-1
  3805  071A  1D03               	skipz
  3806  071B  2F16               	goto	u2065
  3807  071C                     l2351:
  3808  071C  3001               	movlw	1
  3809  071D  00F5               	movwf	??___lwmod
  3810  071E  0875               	movf	??___lwmod,w
  3811  071F  07F6               	addwf	___lwmod@counter,f
  3812  0720                     l2353:
  3813  0720  1FA8               	btfss	___lwmod@divisor+1,7
  3814  0721  2F23               	goto	u2071
  3815  0722  2F24               	goto	u2070
  3816  0723                     u2071:
  3817  0723  2F15               	goto	l2349
  3818  0724                     u2070:
  3819  0724                     l2355:
  3820  0724  0828               	movf	___lwmod@divisor+1,w
  3821  0725  022A               	subwf	___lwmod@dividend+1,w
  3822  0726  1D03               	skipz
  3823  0727  2F2A               	goto	u2085
  3824  0728  0827               	movf	___lwmod@divisor,w
  3825  0729  0229               	subwf	___lwmod@dividend,w
  3826  072A                     u2085:
  3827  072A  1C03               	skipc
  3828  072B  2F2D               	goto	u2081
  3829  072C  2F2E               	goto	u2080
  3830  072D                     u2081:
  3831  072D  2F34               	goto	l2359
  3832  072E                     u2080:
  3833  072E                     l2357:
  3834  072E  0827               	movf	___lwmod@divisor,w
  3835  072F  02A9               	subwf	___lwmod@dividend,f
  3836  0730  0828               	movf	___lwmod@divisor+1,w
  3837  0731  1C03               	skipc
  3838  0732  03AA               	decf	___lwmod@dividend+1,f
  3839  0733  02AA               	subwf	___lwmod@dividend+1,f
  3840  0734                     l2359:
  3841  0734  3001               	movlw	1
  3842  0735                     u2095:
  3843  0735  1003               	clrc
  3844  0736  0CA8               	rrf	___lwmod@divisor+1,f
  3845  0737  0CA7               	rrf	___lwmod@divisor,f
  3846  0738  3EFF               	addlw	-1
  3847  0739  1D03               	skipz
  3848  073A  2F35               	goto	u2095
  3849  073B                     l2361:
  3850  073B  3001               	movlw	1
  3851  073C  02F6               	subwf	___lwmod@counter,f
  3852  073D  1D03               	btfss	3,2
  3853  073E  2F40               	goto	u2101
  3854  073F  2F41               	goto	u2100
  3855  0740                     u2101:
  3856  0740  2F24               	goto	l2355
  3857  0741                     u2100:
  3858  0741                     l2363:
  3859  0741  082A               	movf	___lwmod@dividend+1,w
  3860  0742  00A8               	movwf	?___lwmod+1
  3861  0743  0829               	movf	___lwmod@dividend,w
  3862  0744  00A7               	movwf	?___lwmod
  3863  0745                     l758:
  3864  0745  0008               	return
  3865  0746                     __end_of___lwmod:
  3866                           
  3867                           	psect	text18
  3868  063D                     __ptext18:	
  3869 ;; *************** function ___lwdiv *****************
  3870 ;; Defined at:
  3871 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  divisor         2    0[BANK0 ] unsigned int 
  3874 ;;  dividend        2    2[BANK0 ] unsigned int 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  quotient        2    5[BANK0 ] unsigned int 
  3877 ;;  counter         1    4[BANK0 ] unsigned char 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  2    0[BANK0 ] unsigned int 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, status,0
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3887 ;;      Params:         0       4       0       0       0
  3888 ;;      Locals:         0       3       0       0       0
  3889 ;;      Temps:          1       0       0       0       0
  3890 ;;      Totals:         1       7       0       0       0
  3891 ;;Total ram usage:        8 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    2
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_sprintf
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           
  3902                           ;psect for function ___lwdiv
  3903  063D                     ___lwdiv:
  3904  063D                     l2319:	
  3905                           ;incstack = 0
  3906                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3907                           
  3908  063D  1283               	bcf	3,5	;RP0=0, select bank0
  3909  063E  1303               	bcf	3,6	;RP1=0, select bank0
  3910  063F  01A5               	clrf	___lwdiv@quotient
  3911  0640  01A6               	clrf	___lwdiv@quotient+1
  3912  0641                     l2321:
  3913  0641  0820               	movf	___lwdiv@divisor,w
  3914  0642  0421               	iorwf	___lwdiv@divisor+1,w
  3915  0643  1903               	btfsc	3,2
  3916  0644  2E46               	goto	u1981
  3917  0645  2E47               	goto	u1980
  3918  0646                     u1981:
  3919  0646  2E7E               	goto	l2341
  3920  0647                     u1980:
  3921  0647                     l2323:
  3922  0647  01A4               	clrf	___lwdiv@counter
  3923  0648  0AA4               	incf	___lwdiv@counter,f
  3924  0649  2E55               	goto	l2329
  3925  064A                     l2325:
  3926  064A  3001               	movlw	1
  3927  064B                     u1995:
  3928  064B  1003               	clrc
  3929  064C  0DA0               	rlf	___lwdiv@divisor,f
  3930  064D  0DA1               	rlf	___lwdiv@divisor+1,f
  3931  064E  3EFF               	addlw	-1
  3932  064F  1D03               	skipz
  3933  0650  2E4B               	goto	u1995
  3934  0651                     l2327:
  3935  0651  3001               	movlw	1
  3936  0652  00F4               	movwf	??___lwdiv
  3937  0653  0874               	movf	??___lwdiv,w
  3938  0654  07A4               	addwf	___lwdiv@counter,f
  3939  0655                     l2329:
  3940  0655  1FA1               	btfss	___lwdiv@divisor+1,7
  3941  0656  2E58               	goto	u2001
  3942  0657  2E59               	goto	u2000
  3943  0658                     u2001:
  3944  0658  2E4A               	goto	l2325
  3945  0659                     u2000:
  3946  0659                     l2331:
  3947  0659  3001               	movlw	1
  3948  065A                     u2015:
  3949  065A  1003               	clrc
  3950  065B  0DA5               	rlf	___lwdiv@quotient,f
  3951  065C  0DA6               	rlf	___lwdiv@quotient+1,f
  3952  065D  3EFF               	addlw	-1
  3953  065E  1D03               	skipz
  3954  065F  2E5A               	goto	u2015
  3955  0660  0821               	movf	___lwdiv@divisor+1,w
  3956  0661  0223               	subwf	___lwdiv@dividend+1,w
  3957  0662  1D03               	skipz
  3958  0663  2E66               	goto	u2025
  3959  0664  0820               	movf	___lwdiv@divisor,w
  3960  0665  0222               	subwf	___lwdiv@dividend,w
  3961  0666                     u2025:
  3962  0666  1C03               	skipc
  3963  0667  2E69               	goto	u2021
  3964  0668  2E6A               	goto	u2020
  3965  0669                     u2021:
  3966  0669  2E71               	goto	l2337
  3967  066A                     u2020:
  3968  066A                     l2333:
  3969  066A  0820               	movf	___lwdiv@divisor,w
  3970  066B  02A2               	subwf	___lwdiv@dividend,f
  3971  066C  0821               	movf	___lwdiv@divisor+1,w
  3972  066D  1C03               	skipc
  3973  066E  03A3               	decf	___lwdiv@dividend+1,f
  3974  066F  02A3               	subwf	___lwdiv@dividend+1,f
  3975  0670                     l2335:
  3976  0670  1425               	bsf	___lwdiv@quotient,0
  3977  0671                     l2337:
  3978  0671  3001               	movlw	1
  3979  0672                     u2035:
  3980  0672  1003               	clrc
  3981  0673  0CA1               	rrf	___lwdiv@divisor+1,f
  3982  0674  0CA0               	rrf	___lwdiv@divisor,f
  3983  0675  3EFF               	addlw	-1
  3984  0676  1D03               	skipz
  3985  0677  2E72               	goto	u2035
  3986  0678                     l2339:
  3987  0678  3001               	movlw	1
  3988  0679  02A4               	subwf	___lwdiv@counter,f
  3989  067A  1D03               	btfss	3,2
  3990  067B  2E7D               	goto	u2041
  3991  067C  2E7E               	goto	u2040
  3992  067D                     u2041:
  3993  067D  2E59               	goto	l2331
  3994  067E                     u2040:
  3995  067E                     l2341:
  3996  067E  0826               	movf	___lwdiv@quotient+1,w
  3997  067F  00A1               	movwf	?___lwdiv+1
  3998  0680  0825               	movf	___lwdiv@quotient,w
  3999  0681  00A0               	movwf	?___lwdiv
  4000  0682                     l748:
  4001  0682  0008               	return
  4002  0683                     __end_of___lwdiv:
  4003                           
  4004                           	psect	text19
  4005  0F69                     __ptext19:	
  4006 ;; *************** function _bcd_to_decimal *****************
  4007 ;; Defined at:
  4008 ;;		line 169 in file "main_mini2.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  number          1    wreg     unsigned char 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  number          1    6[COMMON] unsigned char 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      unsigned char 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0, pclath, cstack
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4022 ;;      Params:         0       0       0       0       0
  4023 ;;      Locals:         1       0       0       0       0
  4024 ;;      Temps:          0       3       0       0       0
  4025 ;;      Totals:         1       3       0       0       0
  4026 ;;Total ram usage:        4 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:    3
  4029 ;; This function calls:
  4030 ;;		___bmul
  4031 ;; This function is called by:
  4032 ;;		_RTC_display
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           
  4037                           ;psect for function _bcd_to_decimal
  4038  0F69                     _bcd_to_decimal:
  4039                           
  4040                           ;incstack = 0
  4041                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  4042                           ;bcd_to_decimal@number stored from wreg
  4043  0F69  00F6               	movwf	bcd_to_decimal@number
  4044  0F6A                     l2383:
  4045                           
  4046                           ;main_mini2.c: 170:   return((number >> 4) * 10 + (number & 0x0F));
  4047  0F6A  300F               	movlw	15
  4048  0F6B  0576               	andwf	bcd_to_decimal@number,w
  4049  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  4050  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  4051  0F6E  00A2               	movwf	??_bcd_to_decimal
  4052  0F6F  300A               	movlw	10
  4053  0F70  00A3               	movwf	??_bcd_to_decimal+1
  4054  0F71  0823               	movf	??_bcd_to_decimal+1,w
  4055  0F72  00F4               	movwf	___bmul@multiplicand
  4056  0F73  0876               	movf	bcd_to_decimal@number,w
  4057  0F74  00A4               	movwf	??_bcd_to_decimal+2
  4058  0F75  3004               	movlw	4
  4059  0F76                     u2125:
  4060  0F76  1003               	clrc
  4061  0F77  0CA4               	rrf	??_bcd_to_decimal+2,f
  4062  0F78  3EFF               	addlw	-1
  4063  0F79  1D03               	skipz
  4064  0F7A  2F76               	goto	u2125
  4065  0F7B  0824               	movf	??_bcd_to_decimal+2,w
  4066  0F7C  120A  158A  2752  120A  158A  	fcall	___bmul
  4067  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  4068  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  4069  0F83  0722               	addwf	??_bcd_to_decimal,w
  4070  0F84                     l130:
  4071  0F84  0008               	return
  4072  0F85                     __end_of_bcd_to_decimal:
  4073                           
  4074                           	psect	text20
  4075  0F52                     __ptext20:	
  4076 ;; *************** function ___bmul *****************
  4077 ;; Defined at:
  4078 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  multiplier      1    wreg     unsigned char 
  4081 ;;  multiplicand    1    4[COMMON] unsigned char 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  multiplier      1    1[BANK0 ] unsigned char 
  4084 ;;  product         1    0[BANK0 ] unsigned char 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      unsigned char 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2, status,0
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4094 ;;      Params:         1       0       0       0       0
  4095 ;;      Locals:         0       2       0       0       0
  4096 ;;      Temps:          1       0       0       0       0
  4097 ;;      Totals:         2       2       0       0       0
  4098 ;;Total ram usage:        4 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    2
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_bcd_to_decimal
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           
  4109                           ;psect for function ___bmul
  4110  0F52                     ___bmul:
  4111                           
  4112                           ;incstack = 0
  4113                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4114                           ;___bmul@multiplier stored from wreg
  4115  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  4116  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  4117  0F54  00A1               	movwf	___bmul@multiplier
  4118  0F55                     l2281:
  4119  0F55  01A0               	clrf	___bmul@product
  4120  0F56                     l2283:
  4121  0F56  1C21               	btfss	___bmul@multiplier,0
  4122  0F57  2F59               	goto	u1891
  4123  0F58  2F5A               	goto	u1890
  4124  0F59                     u1891:
  4125  0F59  2F5E               	goto	l2287
  4126  0F5A                     u1890:
  4127  0F5A                     l2285:
  4128  0F5A  0874               	movf	___bmul@multiplicand,w
  4129  0F5B  00F5               	movwf	??___bmul
  4130  0F5C  0875               	movf	??___bmul,w
  4131  0F5D  07A0               	addwf	___bmul@product,f
  4132  0F5E                     l2287:
  4133  0F5E  1003               	clrc
  4134  0F5F  0DF4               	rlf	___bmul@multiplicand,f
  4135  0F60                     l2289:
  4136  0F60  1003               	clrc
  4137  0F61  0CA1               	rrf	___bmul@multiplier,f
  4138  0F62  0821               	movf	___bmul@multiplier,w
  4139  0F63  1D03               	btfss	3,2
  4140  0F64  2F66               	goto	u1901
  4141  0F65  2F67               	goto	u1900
  4142  0F66                     u1901:
  4143  0F66  2F56               	goto	l2283
  4144  0F67                     u1900:
  4145  0F67                     l2291:
  4146  0F67  0820               	movf	___bmul@product,w
  4147  0F68                     l502:
  4148  0F68  0008               	return
  4149  0F69                     __end_of___bmul:
  4150                           
  4151                           	psect	text21
  4152  0588                     __ptext21:	
  4153 ;; *************** function ___awmod *****************
  4154 ;; Defined at:
  4155 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  divisor         2    0[BANK0 ] int 
  4158 ;;  dividend        2    2[BANK0 ] int 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  sign            1    6[COMMON] unsigned char 
  4161 ;;  counter         1    5[COMMON] unsigned char 
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  2    0[BANK0 ] int 
  4164 ;; Registers used:
  4165 ;;		wreg, status,2, status,0
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4171 ;;      Params:         0       4       0       0       0
  4172 ;;      Locals:         2       0       0       0       0
  4173 ;;      Temps:          1       0       0       0       0
  4174 ;;      Totals:         3       4       0       0       0
  4175 ;;Total ram usage:        7 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; Hardware stack levels required when called:    2
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_RTC_display
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           
  4186                           ;psect for function ___awmod
  4187  0588                     ___awmod:
  4188  0588                     l2561:	
  4189                           ;incstack = 0
  4190                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4191                           
  4192  0588  01F6               	clrf	___awmod@sign
  4193  0589                     l2563:
  4194  0589  1283               	bcf	3,5	;RP0=0, select bank0
  4195  058A  1303               	bcf	3,6	;RP1=0, select bank0
  4196  058B  1FA3               	btfss	___awmod@dividend+1,7
  4197  058C  2D8E               	goto	u2421
  4198  058D  2D8F               	goto	u2420
  4199  058E                     u2421:
  4200  058E  2D96               	goto	l2569
  4201  058F                     u2420:
  4202  058F                     l2565:
  4203  058F  09A2               	comf	___awmod@dividend,f
  4204  0590  09A3               	comf	___awmod@dividend+1,f
  4205  0591  0AA2               	incf	___awmod@dividend,f
  4206  0592  1903               	skipnz
  4207  0593  0AA3               	incf	___awmod@dividend+1,f
  4208  0594                     l2567:
  4209  0594  01F6               	clrf	___awmod@sign
  4210  0595  0AF6               	incf	___awmod@sign,f
  4211  0596                     l2569:
  4212  0596  1FA1               	btfss	___awmod@divisor+1,7
  4213  0597  2D99               	goto	u2431
  4214  0598  2D9A               	goto	u2430
  4215  0599                     u2431:
  4216  0599  2D9F               	goto	l2573
  4217  059A                     u2430:
  4218  059A                     l2571:
  4219  059A  09A0               	comf	___awmod@divisor,f
  4220  059B  09A1               	comf	___awmod@divisor+1,f
  4221  059C  0AA0               	incf	___awmod@divisor,f
  4222  059D  1903               	skipnz
  4223  059E  0AA1               	incf	___awmod@divisor+1,f
  4224  059F                     l2573:
  4225  059F  0820               	movf	___awmod@divisor,w
  4226  05A0  0421               	iorwf	___awmod@divisor+1,w
  4227  05A1  1903               	btfsc	3,2
  4228  05A2  2DA4               	goto	u2441
  4229  05A3  2DA5               	goto	u2440
  4230  05A4                     u2441:
  4231  05A4  2DD4               	goto	l2591
  4232  05A5                     u2440:
  4233  05A5                     l2575:
  4234  05A5  01F5               	clrf	___awmod@counter
  4235  05A6  0AF5               	incf	___awmod@counter,f
  4236  05A7  2DB3               	goto	l2581
  4237  05A8                     l2577:
  4238  05A8  3001               	movlw	1
  4239  05A9                     u2455:
  4240  05A9  1003               	clrc
  4241  05AA  0DA0               	rlf	___awmod@divisor,f
  4242  05AB  0DA1               	rlf	___awmod@divisor+1,f
  4243  05AC  3EFF               	addlw	-1
  4244  05AD  1D03               	skipz
  4245  05AE  2DA9               	goto	u2455
  4246  05AF                     l2579:
  4247  05AF  3001               	movlw	1
  4248  05B0  00F4               	movwf	??___awmod
  4249  05B1  0874               	movf	??___awmod,w
  4250  05B2  07F5               	addwf	___awmod@counter,f
  4251  05B3                     l2581:
  4252  05B3  1FA1               	btfss	___awmod@divisor+1,7
  4253  05B4  2DB6               	goto	u2461
  4254  05B5  2DB7               	goto	u2460
  4255  05B6                     u2461:
  4256  05B6  2DA8               	goto	l2577
  4257  05B7                     u2460:
  4258  05B7                     l2583:
  4259  05B7  0821               	movf	___awmod@divisor+1,w
  4260  05B8  0223               	subwf	___awmod@dividend+1,w
  4261  05B9  1D03               	skipz
  4262  05BA  2DBD               	goto	u2475
  4263  05BB  0820               	movf	___awmod@divisor,w
  4264  05BC  0222               	subwf	___awmod@dividend,w
  4265  05BD                     u2475:
  4266  05BD  1C03               	skipc
  4267  05BE  2DC0               	goto	u2471
  4268  05BF  2DC1               	goto	u2470
  4269  05C0                     u2471:
  4270  05C0  2DC7               	goto	l2587
  4271  05C1                     u2470:
  4272  05C1                     l2585:
  4273  05C1  0820               	movf	___awmod@divisor,w
  4274  05C2  02A2               	subwf	___awmod@dividend,f
  4275  05C3  0821               	movf	___awmod@divisor+1,w
  4276  05C4  1C03               	skipc
  4277  05C5  03A3               	decf	___awmod@dividend+1,f
  4278  05C6  02A3               	subwf	___awmod@dividend+1,f
  4279  05C7                     l2587:
  4280  05C7  3001               	movlw	1
  4281  05C8                     u2485:
  4282  05C8  1003               	clrc
  4283  05C9  0CA1               	rrf	___awmod@divisor+1,f
  4284  05CA  0CA0               	rrf	___awmod@divisor,f
  4285  05CB  3EFF               	addlw	-1
  4286  05CC  1D03               	skipz
  4287  05CD  2DC8               	goto	u2485
  4288  05CE                     l2589:
  4289  05CE  3001               	movlw	1
  4290  05CF  02F5               	subwf	___awmod@counter,f
  4291  05D0  1D03               	btfss	3,2
  4292  05D1  2DD3               	goto	u2491
  4293  05D2  2DD4               	goto	u2490
  4294  05D3                     u2491:
  4295  05D3  2DB7               	goto	l2583
  4296  05D4                     u2490:
  4297  05D4                     l2591:
  4298  05D4  0876               	movf	___awmod@sign,w
  4299  05D5  1903               	btfsc	3,2
  4300  05D6  2DD8               	goto	u2501
  4301  05D7  2DD9               	goto	u2500
  4302  05D8                     u2501:
  4303  05D8  2DDE               	goto	l2595
  4304  05D9                     u2500:
  4305  05D9                     l2593:
  4306  05D9  09A2               	comf	___awmod@dividend,f
  4307  05DA  09A3               	comf	___awmod@dividend+1,f
  4308  05DB  0AA2               	incf	___awmod@dividend,f
  4309  05DC  1903               	skipnz
  4310  05DD  0AA3               	incf	___awmod@dividend+1,f
  4311  05DE                     l2595:
  4312  05DE  0823               	movf	___awmod@dividend+1,w
  4313  05DF  00A1               	movwf	?___awmod+1
  4314  05E0  0822               	movf	___awmod@dividend,w
  4315  05E1  00A0               	movwf	?___awmod
  4316  05E2                     l642:
  4317  05E2  0008               	return
  4318  05E3                     __end_of___awmod:
  4319                           
  4320                           	psect	text22
  4321  04B7                     __ptext22:	
  4322 ;; *************** function ___awdiv *****************
  4323 ;; Defined at:
  4324 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  divisor         2    0[BANK0 ] int 
  4327 ;;  dividend        2    2[BANK0 ] int 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  quotient        2    6[BANK0 ] int 
  4330 ;;  sign            1    5[BANK0 ] unsigned char 
  4331 ;;  counter         1    4[BANK0 ] unsigned char 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  2    0[BANK0 ] int 
  4334 ;; Registers used:
  4335 ;;		wreg, status,2, status,0
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4341 ;;      Params:         0       4       0       0       0
  4342 ;;      Locals:         0       4       0       0       0
  4343 ;;      Temps:          1       0       0       0       0
  4344 ;;      Totals:         1       8       0       0       0
  4345 ;;Total ram usage:        9 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; Hardware stack levels required when called:    2
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_RTC_display
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           
  4356                           ;psect for function ___awdiv
  4357  04B7                     ___awdiv:
  4358  04B7                     l2517:	
  4359                           ;incstack = 0
  4360                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4361                           
  4362  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  4363  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  4364  04B9  01A5               	clrf	___awdiv@sign
  4365  04BA                     l2519:
  4366  04BA  1FA1               	btfss	___awdiv@divisor+1,7
  4367  04BB  2CBD               	goto	u2321
  4368  04BC  2CBE               	goto	u2320
  4369  04BD                     u2321:
  4370  04BD  2CC5               	goto	l2525
  4371  04BE                     u2320:
  4372  04BE                     l2521:
  4373  04BE  09A0               	comf	___awdiv@divisor,f
  4374  04BF  09A1               	comf	___awdiv@divisor+1,f
  4375  04C0  0AA0               	incf	___awdiv@divisor,f
  4376  04C1  1903               	skipnz
  4377  04C2  0AA1               	incf	___awdiv@divisor+1,f
  4378  04C3                     l2523:
  4379  04C3  01A5               	clrf	___awdiv@sign
  4380  04C4  0AA5               	incf	___awdiv@sign,f
  4381  04C5                     l2525:
  4382  04C5  1FA3               	btfss	___awdiv@dividend+1,7
  4383  04C6  2CC8               	goto	u2331
  4384  04C7  2CC9               	goto	u2330
  4385  04C8                     u2331:
  4386  04C8  2CD2               	goto	l2531
  4387  04C9                     u2330:
  4388  04C9                     l2527:
  4389  04C9  09A2               	comf	___awdiv@dividend,f
  4390  04CA  09A3               	comf	___awdiv@dividend+1,f
  4391  04CB  0AA2               	incf	___awdiv@dividend,f
  4392  04CC  1903               	skipnz
  4393  04CD  0AA3               	incf	___awdiv@dividend+1,f
  4394  04CE                     l2529:
  4395  04CE  3001               	movlw	1
  4396  04CF  00F4               	movwf	??___awdiv
  4397  04D0  0874               	movf	??___awdiv,w
  4398  04D1  06A5               	xorwf	___awdiv@sign,f
  4399  04D2                     l2531:
  4400  04D2  01A6               	clrf	___awdiv@quotient
  4401  04D3  01A7               	clrf	___awdiv@quotient+1
  4402  04D4                     l2533:
  4403  04D4  0820               	movf	___awdiv@divisor,w
  4404  04D5  0421               	iorwf	___awdiv@divisor+1,w
  4405  04D6  1903               	btfsc	3,2
  4406  04D7  2CD9               	goto	u2341
  4407  04D8  2CDA               	goto	u2340
  4408  04D9                     u2341:
  4409  04D9  2D11               	goto	l2553
  4410  04DA                     u2340:
  4411  04DA                     l2535:
  4412  04DA  01A4               	clrf	___awdiv@counter
  4413  04DB  0AA4               	incf	___awdiv@counter,f
  4414  04DC  2CE8               	goto	l2541
  4415  04DD                     l2537:
  4416  04DD  3001               	movlw	1
  4417  04DE                     u2355:
  4418  04DE  1003               	clrc
  4419  04DF  0DA0               	rlf	___awdiv@divisor,f
  4420  04E0  0DA1               	rlf	___awdiv@divisor+1,f
  4421  04E1  3EFF               	addlw	-1
  4422  04E2  1D03               	skipz
  4423  04E3  2CDE               	goto	u2355
  4424  04E4                     l2539:
  4425  04E4  3001               	movlw	1
  4426  04E5  00F4               	movwf	??___awdiv
  4427  04E6  0874               	movf	??___awdiv,w
  4428  04E7  07A4               	addwf	___awdiv@counter,f
  4429  04E8                     l2541:
  4430  04E8  1FA1               	btfss	___awdiv@divisor+1,7
  4431  04E9  2CEB               	goto	u2361
  4432  04EA  2CEC               	goto	u2360
  4433  04EB                     u2361:
  4434  04EB  2CDD               	goto	l2537
  4435  04EC                     u2360:
  4436  04EC                     l2543:
  4437  04EC  3001               	movlw	1
  4438  04ED                     u2375:
  4439  04ED  1003               	clrc
  4440  04EE  0DA6               	rlf	___awdiv@quotient,f
  4441  04EF  0DA7               	rlf	___awdiv@quotient+1,f
  4442  04F0  3EFF               	addlw	-1
  4443  04F1  1D03               	skipz
  4444  04F2  2CED               	goto	u2375
  4445  04F3  0821               	movf	___awdiv@divisor+1,w
  4446  04F4  0223               	subwf	___awdiv@dividend+1,w
  4447  04F5  1D03               	skipz
  4448  04F6  2CF9               	goto	u2385
  4449  04F7  0820               	movf	___awdiv@divisor,w
  4450  04F8  0222               	subwf	___awdiv@dividend,w
  4451  04F9                     u2385:
  4452  04F9  1C03               	skipc
  4453  04FA  2CFC               	goto	u2381
  4454  04FB  2CFD               	goto	u2380
  4455  04FC                     u2381:
  4456  04FC  2D04               	goto	l2549
  4457  04FD                     u2380:
  4458  04FD                     l2545:
  4459  04FD  0820               	movf	___awdiv@divisor,w
  4460  04FE  02A2               	subwf	___awdiv@dividend,f
  4461  04FF  0821               	movf	___awdiv@divisor+1,w
  4462  0500  1C03               	skipc
  4463  0501  03A3               	decf	___awdiv@dividend+1,f
  4464  0502  02A3               	subwf	___awdiv@dividend+1,f
  4465  0503                     l2547:
  4466  0503  1426               	bsf	___awdiv@quotient,0
  4467  0504                     l2549:
  4468  0504  3001               	movlw	1
  4469  0505                     u2395:
  4470  0505  1003               	clrc
  4471  0506  0CA1               	rrf	___awdiv@divisor+1,f
  4472  0507  0CA0               	rrf	___awdiv@divisor,f
  4473  0508  3EFF               	addlw	-1
  4474  0509  1D03               	skipz
  4475  050A  2D05               	goto	u2395
  4476  050B                     l2551:
  4477  050B  3001               	movlw	1
  4478  050C  02A4               	subwf	___awdiv@counter,f
  4479  050D  1D03               	btfss	3,2
  4480  050E  2D10               	goto	u2401
  4481  050F  2D11               	goto	u2400
  4482  0510                     u2401:
  4483  0510  2CEC               	goto	l2543
  4484  0511                     u2400:
  4485  0511                     l2553:
  4486  0511  0825               	movf	___awdiv@sign,w
  4487  0512  1903               	btfsc	3,2
  4488  0513  2D15               	goto	u2411
  4489  0514  2D16               	goto	u2410
  4490  0515                     u2411:
  4491  0515  2D1B               	goto	l2557
  4492  0516                     u2410:
  4493  0516                     l2555:
  4494  0516  09A6               	comf	___awdiv@quotient,f
  4495  0517  09A7               	comf	___awdiv@quotient+1,f
  4496  0518  0AA6               	incf	___awdiv@quotient,f
  4497  0519  1903               	skipnz
  4498  051A  0AA7               	incf	___awdiv@quotient+1,f
  4499  051B                     l2557:
  4500  051B  0827               	movf	___awdiv@quotient+1,w
  4501  051C  00A1               	movwf	?___awdiv+1
  4502  051D  0826               	movf	___awdiv@quotient,w
  4503  051E  00A0               	movwf	?___awdiv
  4504  051F                     l629:
  4505  051F  0008               	return
  4506  0520                     __end_of___awdiv:
  4507                           
  4508                           	psect	text23
  4509  0F85                     __ptext23:	
  4510 ;; *************** function _Piloto *****************
  4511 ;; Defined at:
  4512 ;;		line 256 in file "main_mini2.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;		None
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1    wreg      void 
  4519 ;; Registers used:
  4520 ;;		wreg, status,2, status,0
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4526 ;;      Params:         0       0       0       0       0
  4527 ;;      Locals:         0       0       0       0       0
  4528 ;;      Temps:          0       0       0       0       0
  4529 ;;      Totals:         0       0       0       0       0
  4530 ;;Total ram usage:        0 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:    2
  4533 ;; This function calls:
  4534 ;;		Nothing
  4535 ;; This function is called by:
  4536 ;;		_main
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           
  4541                           ;psect for function _Piloto
  4542  0F85                     _Piloto:
  4543  0F85                     l2147:	
  4544                           ;incstack = 0
  4545                           ; Regs used in _Piloto: [wreg+status,2+status,0]
  4546                           
  4547                           
  4548                           ;main_mini2.c: 257:     if (cont == 7){
  4549  0F85  3007               	movlw	7
  4550  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  4551  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  4552  0F88  065E               	xorwf	_cont,w
  4553  0F89  1D03               	btfss	3,2
  4554  0F8A  2F8C               	goto	u1781
  4555  0F8B  2F8D               	goto	u1780
  4556  0F8C                     u1781:
  4557  0F8C  2F90               	goto	l2151
  4558  0F8D                     u1780:
  4559  0F8D                     l2149:
  4560                           
  4561                           ;main_mini2.c: 258:         PORTAbits.RA6 = 1;
  4562  0F8D  1705               	bsf	5,6	;volatile
  4563                           
  4564                           ;main_mini2.c: 259:         PORTAbits.RA7 = 0;
  4565  0F8E  1385               	bcf	5,7	;volatile
  4566                           
  4567                           ;main_mini2.c: 260:     }
  4568  0F8F  2FAB               	goto	l167
  4569  0F90                     l2151:
  4570  0F90  3008               	movlw	8
  4571  0F91  065E               	xorwf	_cont,w
  4572  0F92  1D03               	btfss	3,2
  4573  0F93  2F95               	goto	u1791
  4574  0F94  2F96               	goto	u1790
  4575  0F95                     u1791:
  4576  0F95  2F99               	goto	l2155
  4577  0F96                     u1790:
  4578  0F96                     l2153:
  4579                           
  4580                           ;main_mini2.c: 262:         PORTAbits.RA6 = 1;
  4581  0F96  1705               	bsf	5,6	;volatile
  4582                           
  4583                           ;main_mini2.c: 263:         PORTAbits.RA7 = 1;
  4584  0F97  1785               	bsf	5,7	;volatile
  4585                           
  4586                           ;main_mini2.c: 264:     }
  4587  0F98  2FAB               	goto	l167
  4588  0F99                     l2155:
  4589  0F99  300B               	movlw	11
  4590  0F9A  065E               	xorwf	_cont,w
  4591  0F9B  1D03               	btfss	3,2
  4592  0F9C  2F9E               	goto	u1801
  4593  0F9D  2F9F               	goto	u1800
  4594  0F9E                     u1801:
  4595  0F9E  2FA2               	goto	l2159
  4596  0F9F                     u1800:
  4597  0F9F                     l2157:
  4598                           
  4599                           ;main_mini2.c: 266:         PORTAbits.RA6 = 0;
  4600  0F9F  1305               	bcf	5,6	;volatile
  4601                           
  4602                           ;main_mini2.c: 267:         PORTAbits.RA7 = 1;
  4603  0FA0  1785               	bsf	5,7	;volatile
  4604                           
  4605                           ;main_mini2.c: 268:     }
  4606  0FA1  2FAB               	goto	l167
  4607  0FA2                     l2159:
  4608  0FA2  300C               	movlw	12
  4609  0FA3  065E               	xorwf	_cont,w
  4610  0FA4  1D03               	btfss	3,2
  4611  0FA5  2FA7               	goto	u1811
  4612  0FA6  2FA8               	goto	u1810
  4613  0FA7                     u1811:
  4614  0FA7  2FAB               	goto	l163
  4615  0FA8                     u1810:
  4616  0FA8                     l2161:
  4617                           
  4618                           ;main_mini2.c: 270:         PORTAbits.RA6 = 0;
  4619  0FA8  1305               	bcf	5,6	;volatile
  4620                           
  4621                           ;main_mini2.c: 271:         PORTAbits.RA7 = 0;
  4622  0FA9  1385               	bcf	5,7	;volatile
  4623  0FAA  2FAB               	goto	l167
  4624  0FAB                     l163:
  4625  0FAB                     l167:
  4626  0FAB  0008               	return
  4627  0FAC                     __end_of_Piloto:
  4628                           
  4629                           	psect	text24
  4630  06C7                     __ptext24:	
  4631 ;; *************** function _Led_RTC *****************
  4632 ;; Defined at:
  4633 ;;		line 229 in file "main_mini2.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;		None
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;		None
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1    wreg      void 
  4640 ;; Registers used:
  4641 ;;		wreg, status,2, status,0
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4647 ;;      Params:         0       0       0       0       0
  4648 ;;      Locals:         0       0       0       0       0
  4649 ;;      Temps:          0       0       0       0       0
  4650 ;;      Totals:         0       0       0       0       0
  4651 ;;Total ram usage:        0 bytes
  4652 ;; Hardware stack levels used:    1
  4653 ;; Hardware stack levels required when called:    2
  4654 ;; This function calls:
  4655 ;;		Nothing
  4656 ;; This function is called by:
  4657 ;;		_main
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           
  4662                           ;psect for function _Led_RTC
  4663  06C7                     _Led_RTC:
  4664  06C7                     l2115:	
  4665                           ;incstack = 0
  4666                           ; Regs used in _Led_RTC: [wreg+status,2+status,0]
  4667                           
  4668                           
  4669                           ;main_mini2.c: 230:     if (second == 6){
  4670  06C7  3006               	movlw	6
  4671  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  4672  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  4673  06CA  0664               	xorwf	_second,w
  4674  06CB  1D03               	btfss	3,2
  4675  06CC  2ECE               	goto	u1701
  4676  06CD  2ECF               	goto	u1700
  4677  06CE                     u1701:
  4678  06CE  2ED1               	goto	l2119
  4679  06CF                     u1700:
  4680  06CF                     l2117:
  4681                           
  4682                           ;main_mini2.c: 231:         PORTDbits.RD0 = 1;
  4683  06CF  1408               	bsf	8,0	;volatile
  4684                           
  4685                           ;main_mini2.c: 232:     }
  4686  06D0  2F09               	goto	l157
  4687  06D1                     l2119:
  4688  06D1  3007               	movlw	7
  4689  06D2  0664               	xorwf	_second,w
  4690  06D3  1D03               	btfss	3,2
  4691  06D4  2ED6               	goto	u1711
  4692  06D5  2ED7               	goto	u1710
  4693  06D6                     u1711:
  4694  06D6  2ED9               	goto	l2123
  4695  06D7                     u1710:
  4696  06D7                     l2121:
  4697                           
  4698                           ;main_mini2.c: 234:         PORTDbits.RD1 = 1;
  4699  06D7  1488               	bsf	8,1	;volatile
  4700                           
  4701                           ;main_mini2.c: 235:     }
  4702  06D8  2F09               	goto	l157
  4703  06D9                     l2123:
  4704  06D9  3008               	movlw	8
  4705  06DA  0664               	xorwf	_second,w
  4706  06DB  1D03               	btfss	3,2
  4707  06DC  2EDE               	goto	u1721
  4708  06DD  2EDF               	goto	u1720
  4709  06DE                     u1721:
  4710  06DE  2EE1               	goto	l2127
  4711  06DF                     u1720:
  4712  06DF                     l2125:
  4713                           
  4714                           ;main_mini2.c: 237:         PORTDbits.RD2 = 1;
  4715  06DF  1508               	bsf	8,2	;volatile
  4716                           
  4717                           ;main_mini2.c: 238:     }
  4718  06E0  2F09               	goto	l157
  4719  06E1                     l2127:
  4720  06E1  3009               	movlw	9
  4721  06E2  0664               	xorwf	_second,w
  4722  06E3  1D03               	btfss	3,2
  4723  06E4  2EE6               	goto	u1731
  4724  06E5  2EE7               	goto	u1730
  4725  06E6                     u1731:
  4726  06E6  2EE9               	goto	l2131
  4727  06E7                     u1730:
  4728  06E7                     l2129:
  4729                           
  4730                           ;main_mini2.c: 240:         PORTDbits.RD3 = 1;
  4731  06E7  1588               	bsf	8,3	;volatile
  4732                           
  4733                           ;main_mini2.c: 241:     }
  4734  06E8  2F09               	goto	l157
  4735  06E9                     l2131:
  4736  06E9  300A               	movlw	10
  4737  06EA  0664               	xorwf	_second,w
  4738  06EB  1D03               	btfss	3,2
  4739  06EC  2EEE               	goto	u1741
  4740  06ED  2EEF               	goto	u1740
  4741  06EE                     u1741:
  4742  06EE  2EF1               	goto	l2135
  4743  06EF                     u1740:
  4744  06EF                     l2133:
  4745                           
  4746                           ;main_mini2.c: 243:         PORTDbits.RD4 = 1;
  4747  06EF  1608               	bsf	8,4	;volatile
  4748                           
  4749                           ;main_mini2.c: 244:     }
  4750  06F0  2F09               	goto	l157
  4751  06F1                     l2135:
  4752  06F1  300B               	movlw	11
  4753  06F2  0664               	xorwf	_second,w
  4754  06F3  1D03               	btfss	3,2
  4755  06F4  2EF6               	goto	u1751
  4756  06F5  2EF7               	goto	u1750
  4757  06F6                     u1751:
  4758  06F6  2EF9               	goto	l2139
  4759  06F7                     u1750:
  4760  06F7                     l2137:
  4761                           
  4762                           ;main_mini2.c: 246:         PORTDbits.RD5 = 1;
  4763  06F7  1688               	bsf	8,5	;volatile
  4764                           
  4765                           ;main_mini2.c: 247:     }
  4766  06F8  2F09               	goto	l157
  4767  06F9                     l2139:
  4768  06F9  300C               	movlw	12
  4769  06FA  0664               	xorwf	_second,w
  4770  06FB  1D03               	btfss	3,2
  4771  06FC  2EFE               	goto	u1761
  4772  06FD  2EFF               	goto	u1760
  4773  06FE                     u1761:
  4774  06FE  2F01               	goto	l2143
  4775  06FF                     u1760:
  4776  06FF                     l2141:
  4777                           
  4778                           ;main_mini2.c: 249:         PORTDbits.RD6 = 1;
  4779  06FF  1708               	bsf	8,6	;volatile
  4780                           
  4781                           ;main_mini2.c: 250:     }
  4782  0700  2F09               	goto	l157
  4783  0701                     l2143:
  4784  0701  301F               	movlw	31
  4785  0702  0663               	xorwf	_minute,w
  4786  0703  1D03               	btfss	3,2
  4787  0704  2F06               	goto	u1771
  4788  0705  2F07               	goto	u1770
  4789  0706                     u1771:
  4790  0706  2F09               	goto	l151
  4791  0707                     u1770:
  4792  0707                     l2145:
  4793                           
  4794                           ;main_mini2.c: 252:         PORTDbits.RD7 = 1;
  4795  0707  1788               	bsf	8,7	;volatile
  4796  0708  2F09               	goto	l157
  4797  0709                     l151:
  4798  0709                     l157:
  4799  0709  0008               	return
  4800  070A                     __end_of_Led_RTC:
  4801                           
  4802                           	psect	text25
  4803  0EE3                     __ptext25:	
  4804 ;; *************** function _I2C_Master_RepeatedStart *****************
  4805 ;; Defined at:
  4806 ;;		line 64 in file "I2C.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      void 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0, pclath, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4820 ;;      Params:         0       0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0
  4823 ;;      Totals:         0       0       0       0       0
  4824 ;;Total ram usage:        0 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:    3
  4827 ;; This function calls:
  4828 ;;		_I2C_Master_Wait
  4829 ;; This function is called by:
  4830 ;;		_main
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           
  4835                           ;psect for function _I2C_Master_RepeatedStart
  4836  0EE3                     _I2C_Master_RepeatedStart:
  4837  0EE3                     l2631:	
  4838                           ;incstack = 0
  4839                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  4840                           
  4841                           
  4842                           ;I2C.c: 66:     I2C_Master_Wait();
  4843  0EE3  120A  158A  2720  120A  158A  	fcall	_I2C_Master_Wait
  4844  0EE8                     l2633:
  4845                           
  4846                           ;I2C.c: 67:     SSPCON2bits.RSEN = 1;
  4847  0EE8  1683               	bsf	3,5	;RP0=1, select bank1
  4848  0EE9  1303               	bcf	3,6	;RP1=0, select bank1
  4849  0EEA  1491               	bsf	17,1	;volatile
  4850  0EEB                     l325:
  4851  0EEB  0008               	return
  4852  0EEC                     __end_of_I2C_Master_RepeatedStart:
  4853                           
  4854                           	psect	text26
  4855  07B1                     __ptext26:	
  4856 ;; *************** function _I2C_Master_Read *****************
  4857 ;; Defined at:
  4858 ;;		line 94 in file "I2C.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  a               2    4[COMMON] unsigned short 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  temp            2    2[BANK0 ] unsigned short 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  2    4[COMMON] unsigned short 
  4865 ;; Registers used:
  4866 ;;		wreg, status,2, status,0, pclath, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4872 ;;      Params:         2       0       0       0       0
  4873 ;;      Locals:         0       2       0       0       0
  4874 ;;      Temps:          0       2       0       0       0
  4875 ;;      Totals:         2       4       0       0       0
  4876 ;;Total ram usage:        6 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    3
  4879 ;; This function calls:
  4880 ;;		_I2C_Master_Wait
  4881 ;; This function is called by:
  4882 ;;		_main
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           
  4887                           ;psect for function _I2C_Master_Read
  4888  07B1                     _I2C_Master_Read:
  4889  07B1                     l2635:	
  4890                           ;incstack = 0
  4891                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4892                           
  4893                           
  4894                           ;I2C.c: 94: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 95: {;I2C.c: 96:    
      +                           unsigned short temp;;I2C.c: 97:     I2C_Master_Wait();
  4895  07B1  120A  158A  2720  120A  118A  	fcall	_I2C_Master_Wait
  4896  07B6                     l2637:
  4897                           
  4898                           ;I2C.c: 98:     SSPCON2bits.RCEN = 1;
  4899  07B6  1683               	bsf	3,5	;RP0=1, select bank1
  4900  07B7  1303               	bcf	3,6	;RP1=0, select bank1
  4901  07B8  1591               	bsf	17,3	;volatile
  4902                           
  4903                           ;I2C.c: 99:     I2C_Master_Wait();
  4904  07B9  120A  158A  2720  120A  118A  	fcall	_I2C_Master_Wait
  4905  07BE                     l2639:
  4906                           
  4907                           ;I2C.c: 100:     temp = SSPBUF;
  4908  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  4909  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  4910  07C0  0813               	movf	19,w	;volatile
  4911  07C1  00A0               	movwf	??_I2C_Master_Read
  4912  07C2  01A1               	clrf	??_I2C_Master_Read+1
  4913  07C3  0820               	movf	??_I2C_Master_Read,w
  4914  07C4  00A2               	movwf	I2C_Master_Read@temp
  4915  07C5  0821               	movf	??_I2C_Master_Read+1,w
  4916  07C6  00A3               	movwf	I2C_Master_Read@temp+1
  4917  07C7                     l2641:
  4918                           
  4919                           ;I2C.c: 101:     I2C_Master_Wait();
  4920  07C7  120A  158A  2720  120A  118A  	fcall	_I2C_Master_Wait
  4921  07CC                     l2643:
  4922                           
  4923                           ;I2C.c: 102:     if(a == 1){
  4924  07CC  0374               	decf	I2C_Master_Read@a,w
  4925  07CD  0475               	iorwf	I2C_Master_Read@a+1,w
  4926  07CE  1D03               	btfss	3,2
  4927  07CF  2FD1               	goto	u2511
  4928  07D0  2FD2               	goto	u2510
  4929  07D1                     u2511:
  4930  07D1  2FD6               	goto	l334
  4931  07D2                     u2510:
  4932  07D2                     l2645:
  4933                           
  4934                           ;I2C.c: 103:         SSPCON2bits.ACKDT = 0;
  4935  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  4936  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  4937  07D4  1291               	bcf	17,5	;volatile
  4938                           
  4939                           ;I2C.c: 104:     }else{
  4940  07D5  2FD9               	goto	l335
  4941  07D6                     l334:
  4942                           
  4943                           ;I2C.c: 105:         SSPCON2bits.ACKDT = 1;
  4944  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  4945  07D7  1303               	bcf	3,6	;RP1=0, select bank1
  4946  07D8  1691               	bsf	17,5	;volatile
  4947  07D9                     l335:	
  4948                           ;I2C.c: 106:     }
  4949                           
  4950                           
  4951                           ;I2C.c: 107:     SSPCON2bits.ACKEN = 1;
  4952  07D9  1611               	bsf	17,4	;volatile
  4953  07DA                     l2647:
  4954                           
  4955                           ;I2C.c: 108:     return temp;
  4956  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  4957  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  4958  07DC  0823               	movf	I2C_Master_Read@temp+1,w
  4959  07DD  00F5               	movwf	?_I2C_Master_Read+1
  4960  07DE  0822               	movf	I2C_Master_Read@temp,w
  4961  07DF  00F4               	movwf	?_I2C_Master_Read
  4962  07E0                     l336:
  4963  07E0  0008               	return
  4964  07E1                     __end_of_I2C_Master_Read:
  4965                           
  4966                           	psect	text27
  4967  0F20                     __ptext27:	
  4968 ;; *************** function _I2C_Master_Wait *****************
  4969 ;; Defined at:
  4970 ;;		line 48 in file "I2C.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;		None
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;		None
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  1    wreg      void 
  4977 ;; Registers used:
  4978 ;;		wreg, status,2
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4984 ;;      Params:         0       0       0       0       0
  4985 ;;      Locals:         0       0       0       0       0
  4986 ;;      Temps:          0       0       0       0       0
  4987 ;;      Totals:         0       0       0       0       0
  4988 ;;Total ram usage:        0 bytes
  4989 ;; Hardware stack levels used:    1
  4990 ;; Hardware stack levels required when called:    2
  4991 ;; This function calls:
  4992 ;;		Nothing
  4993 ;; This function is called by:
  4994 ;;		_I2C_Master_Start
  4995 ;;		_I2C_Master_RepeatedStart
  4996 ;;		_I2C_Master_Stop
  4997 ;;		_I2C_Master_Write
  4998 ;;		_I2C_Master_Read
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           
  5003                           ;psect for function _I2C_Master_Wait
  5004  0F20                     _I2C_Master_Wait:
  5005  0F20                     l2263:	
  5006                           ;incstack = 0
  5007                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5008                           
  5009  0F20                     l316:	
  5010                           ;I2C.c: 50:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5011                           
  5012  0F20  1683               	bsf	3,5	;RP0=1, select bank1
  5013  0F21  1303               	bcf	3,6	;RP1=0, select bank1
  5014  0F22  1914               	btfsc	20,2	;volatile
  5015  0F23  2F25               	goto	u1831
  5016  0F24  2F26               	goto	u1830
  5017  0F25                     u1831:
  5018  0F25  2F20               	goto	l316
  5019  0F26                     u1830:
  5020  0F26                     l2265:
  5021  0F26  0811               	movf	17,w	;volatile
  5022  0F27  391F               	andlw	31
  5023  0F28  1D03               	btfss	3,2
  5024  0F29  2F2B               	goto	u1841
  5025  0F2A  2F2C               	goto	u1840
  5026  0F2B                     u1841:
  5027  0F2B  2F20               	goto	l316
  5028  0F2C                     u1840:
  5029  0F2C                     l319:
  5030  0F2C  0008               	return
  5031  0F2D                     __end_of_I2C_Master_Wait:
  5032                           
  5033                           	psect	text28
  5034  0683                     __ptext28:	
  5035 ;; *************** function _ISR *****************
  5036 ;; Defined at:
  5037 ;;		line 99 in file "main_mini2.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;		None
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;		None
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		wreg, status,2, status,0, pclath, cstack
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5051 ;;      Params:         0       0       0       0       0
  5052 ;;      Locals:         0       0       0       0       0
  5053 ;;      Temps:          4       0       0       0       0
  5054 ;;      Totals:         4       0       0       0       0
  5055 ;;Total ram usage:        4 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; Hardware stack levels required when called:    1
  5058 ;; This function calls:
  5059 ;;		_Read_USART
  5060 ;; This function is called by:
  5061 ;;		Interrupt level 1
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           
  5066                           ;psect for function _ISR
  5067  0683                     _ISR:
  5068  0683                     i1l1511:
  5069                           
  5070                           ;main_mini2.c: 100:     if(PIR1bits.RCIF == 1){
  5071  0683  1283               	bcf	3,5	;RP0=0, select bank0
  5072  0684  1303               	bcf	3,6	;RP1=0, select bank0
  5073  0685  1E8C               	btfss	12,5	;volatile
  5074  0686  2E88               	goto	u90_21
  5075  0687  2E89               	goto	u90_20
  5076  0688                     u90_21:
  5077  0688  2EC0               	goto	i1l119
  5078  0689                     u90_20:
  5079  0689                     i1l1513:
  5080                           
  5081                           ;main_mini2.c: 101:         data_recive = Read_USART();
  5082  0689  120A  158A  26D3  120A  118A  	fcall	_Read_USART
  5083  068E  00F0               	movwf	??_ISR
  5084  068F  01F1               	clrf	??_ISR+1
  5085  0690  0870               	movf	??_ISR,w
  5086  0691  00F7               	movwf	_data_recive
  5087  0692  0871               	movf	??_ISR+1,w
  5088  0693  00F8               	movwf	_data_recive+1
  5089  0694                     i1l1515:
  5090                           
  5091                           ;main_mini2.c: 102:         if (data_recive == 1){
  5092  0694  0377               	decf	_data_recive,w
  5093  0695  0478               	iorwf	_data_recive+1,w
  5094  0696  1D03               	btfss	3,2
  5095  0697  2E99               	goto	u91_21
  5096  0698  2E9A               	goto	u91_20
  5097  0699                     u91_21:
  5098  0699  2E9E               	goto	i1l1519
  5099  069A                     u91_20:
  5100  069A                     i1l1517:
  5101                           
  5102                           ;main_mini2.c: 103:             PORTAbits.RA6 = 1;
  5103  069A  1283               	bcf	3,5	;RP0=0, select bank0
  5104  069B  1303               	bcf	3,6	;RP1=0, select bank0
  5105  069C  1705               	bsf	5,6	;volatile
  5106                           
  5107                           ;main_mini2.c: 104:         }
  5108  069D  2EBE               	goto	i1l1531
  5109  069E                     i1l1519:
  5110  069E  0877               	movf	_data_recive,w
  5111  069F  0478               	iorwf	_data_recive+1,w
  5112  06A0  1D03               	btfss	3,2
  5113  06A1  2EA3               	goto	u92_21
  5114  06A2  2EA4               	goto	u92_20
  5115  06A3                     u92_21:
  5116  06A3  2EA8               	goto	i1l1523
  5117  06A4                     u92_20:
  5118  06A4                     i1l1521:
  5119                           
  5120                           ;main_mini2.c: 106:             PORTAbits.RA6 = 0;
  5121  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  5122  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  5123  06A6  1305               	bcf	5,6	;volatile
  5124                           
  5125                           ;main_mini2.c: 107:         }
  5126  06A7  2EBE               	goto	i1l1531
  5127  06A8                     i1l1523:
  5128  06A8  3003               	movlw	3
  5129  06A9  0677               	xorwf	_data_recive,w
  5130  06AA  0478               	iorwf	_data_recive+1,w
  5131  06AB  1D03               	btfss	3,2
  5132  06AC  2EAE               	goto	u93_21
  5133  06AD  2EAF               	goto	u93_20
  5134  06AE                     u93_21:
  5135  06AE  2EB3               	goto	i1l1527
  5136  06AF                     u93_20:
  5137  06AF                     i1l1525:
  5138                           
  5139                           ;main_mini2.c: 109:             PORTAbits.RA7 = 1;
  5140  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  5141  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  5142  06B1  1785               	bsf	5,7	;volatile
  5143                           
  5144                           ;main_mini2.c: 110:         }
  5145  06B2  2EBE               	goto	i1l1531
  5146  06B3                     i1l1527:
  5147  06B3  3002               	movlw	2
  5148  06B4  0677               	xorwf	_data_recive,w
  5149  06B5  0478               	iorwf	_data_recive+1,w
  5150  06B6  1D03               	btfss	3,2
  5151  06B7  2EB9               	goto	u94_21
  5152  06B8  2EBA               	goto	u94_20
  5153  06B9                     u94_21:
  5154  06B9  2EBE               	goto	i1l115
  5155  06BA                     u94_20:
  5156  06BA                     i1l1529:
  5157                           
  5158                           ;main_mini2.c: 112:             PORTAbits.RA7 = 0;
  5159  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  5160  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  5161  06BC  1385               	bcf	5,7	;volatile
  5162  06BD  2EBE               	goto	i1l1531
  5163  06BE                     i1l115:
  5164  06BE                     i1l1531:
  5165                           
  5166                           ;main_mini2.c: 114:         data_recive = 0;
  5167  06BE  01F7               	clrf	_data_recive
  5168  06BF  01F8               	clrf	_data_recive+1
  5169  06C0                     i1l119:
  5170  06C0  0873               	movf	??_ISR+3,w
  5171  06C1  008A               	movwf	10
  5172  06C2  0E72               	swapf	??_ISR+2,w
  5173  06C3  0083               	movwf	3
  5174  06C4  0EFE               	swapf	btemp,f
  5175  06C5  0E7E               	swapf	btemp,w
  5176  06C6  0009               	retfie
  5177  06C7                     __end_of_ISR:
  5178                           
  5179                           	psect	intentry
  5180  0004                     __pintentry:	
  5181                           ;incstack = 0
  5182                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  5183                           
  5184  0004                     interrupt_function:
  5185  007E                     saved_w	set	btemp
  5186  0004  00FE               	movwf	btemp
  5187  0005  0E03               	swapf	3,w
  5188  0006  00F2               	movwf	??_ISR+2
  5189  0007  080A               	movf	10,w
  5190  0008  00F3               	movwf	??_ISR+3
  5191  0009  120A  118A  2E83   	ljmp	_ISR
  5192                           
  5193                           	psect	text29
  5194  0ED3                     __ptext29:	
  5195 ;; *************** function _Read_USART *****************
  5196 ;; Defined at:
  5197 ;;		line 43 in file "USART.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;		None
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;		None
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1    wreg      unsigned char 
  5204 ;; Registers used:
  5205 ;;		wreg
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5211 ;;      Params:         0       0       0       0       0
  5212 ;;      Locals:         0       0       0       0       0
  5213 ;;      Temps:          0       0       0       0       0
  5214 ;;      Totals:         0       0       0       0       0
  5215 ;;Total ram usage:        0 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		_ISR
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           
  5225                           ;psect for function _Read_USART
  5226  0ED3                     _Read_USART:
  5227  0ED3                     i1l1347:	
  5228                           ;incstack = 0
  5229                           ; Regs used in _Read_USART: [wreg]
  5230                           
  5231  0ED3                     i1l281:	
  5232                           ;USART.c: 44:   while(!RCIF);
  5233                           
  5234  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  5235  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  5236  0ED5  1E8C               	btfss	12,5	;volatile
  5237  0ED6  2ED8               	goto	u71_21
  5238  0ED7  2ED9               	goto	u71_20
  5239  0ED8                     u71_21:
  5240  0ED8  2ED3               	goto	i1l281
  5241  0ED9                     u71_20:
  5242  0ED9                     i1l1349:
  5243                           
  5244                           ;USART.c: 45:   return RCREG;
  5245  0ED9  081A               	movf	26,w	;volatile
  5246  0EDA                     i1l284:
  5247  0EDA  0008               	return
  5248  0EDB                     __end_of_Read_USART:
  5249  007E                     btemp	set	126	;btemp
  5250  007E                     wtemp0	set	126
  5251                           
  5252                           	psect	config
  5253                           
  5254                           ;Config register CONFIG1 @ 0x2007
  5255                           ;	Oscillator Selection bits
  5256                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5257                           ;	Watchdog Timer Enable bit
  5258                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5259                           ;	Power-up Timer Enable bit
  5260                           ;	PWRTE = OFF, PWRT disabled
  5261                           ;	RE3/MCLR pin function select bit
  5262                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5263                           ;	Code Protection bit
  5264                           ;	CP = OFF, Program memory code protection is disabled
  5265                           ;	Data Code Protection bit
  5266                           ;	CPD = OFF, Data memory code protection is disabled
  5267                           ;	Brown Out Reset Selection bits
  5268                           ;	BOREN = OFF, BOR disabled
  5269                           ;	Internal External Switchover bit
  5270                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5271                           ;	Fail-Safe Clock Monitor Enabled bit
  5272                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5273                           ;	Low Voltage Programming Enable bit
  5274                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5275                           ;	In-Circuit Debugger Mode bit
  5276                           ;	DEBUG = 0x1, unprogrammed default
  5277  2007                     	org	8199
  5278  2007  20D4               	dw	8404
  5279                           
  5280                           ;Config register CONFIG2 @ 0x2008
  5281                           ;	Brown-out Reset Selection bit
  5282                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  5283                           ;	Flash Program Memory Self Write Enable bits
  5284                           ;	WRT = OFF, Write protection off
  5285  2008                     	org	8200
  5286  2008  3EFF               	dw	16127

Data Sizes:
    Strings     15
    Constant    10
    Data        30
    BSS         86
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     32      77
    BANK1            80      0      68
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> year_send(BANK1[8]), month_send(BANK1[8]), day_send(BANK1[8]), hour_send(BANK1[8]), 
		 -> min_send(BANK1[8]), sec_send(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 15
		 -> Date(BANK0[15]), STR_1(CODE[3]), Time(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_Write_USART_String
    _I2C_Master_Init->___lldiv
    _Write_to_RTC->_I2C_Master_Write
    _Write_USART_String->_Write_USART
    _RTC_display->___awmod
    _RTC_display->_bcd_to_decimal
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _bcd_to_decimal->___bmul

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_RTC_display
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _RTC_display->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _bcd_to_decimal->___bmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10824
                                             29 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _Led_RTC
                             _Piloto
                        _RTC_display
                        _Write_USART
                 _Write_USART_String
                       _Write_to_RTC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
                    _USART_INTERRUPT
                         _USART_Init
                _USART_Init_BaudRate
 ---------------------------------------------------------------------------------
 (2) _USART_Init_BaudRate                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_INTERRUPT                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Write_to_RTC                                         0     0      0    1111
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1111
                                              4 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   4     2      2     431
                                              5 COMMON     2     0      2
                                              0 BANK0      2     2      0
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          3     3      0    6903
                                             26 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    20      3    3297
                                             11 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              5 COMMON     2     2      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     288
                                              6 COMMON     1     1      0
                                              2 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     226
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1653
                                              4 COMMON     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1665
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Piloto                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Led_RTC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              4 COMMON     2     0      2
                                              0 BANK0      4     4      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                         _Read_USART
 ---------------------------------------------------------------------------------
 (5) _Read_USART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Led_RTC
   _Piloto
   _RTC_display
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _Write_USART
   _Write_USART_String
     _Write_USART
   _Write_to_RTC
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _USART_INTERRUPT
     _USART_Init
     _USART_Init_BaudRate

 _ISR (ROOT)
   _Read_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      44       7       85.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     20      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9B      12        0.0%
ABS                  0      0      9B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 09:29:07 2021

                                _i 0079                                  pc 0002  
                   ___bmul@product 0020                       ___awdiv@sign 0025  
                               fsr 0004                ___wmul@multiplicand 0022  
             __size_of_Write_USART 000C                   ?_USART_INTERRUPT 0070  
                      _RTC_display 0208                                l130 0F84  
                              l151 0709                                l136 03D0  
                              l313 077F                                l322 0EF4  
                              l170 07B0                                l163 0FAB  
                              l331 0F07                                l139 063C  
                              l316 0F20                                l260 0F1F  
                              l325 0EEB                                l157 0709  
                              l334 07D6                                l502 0F68  
                              l319 0F2C                                l335 07D9  
                              l167 0FAB                                l263 0ED2  
                              l336 07E0                                l272 0F13  
                              l328 0EFD                                l512 0587  
                              l266 0ECC                                l437 0052  
                              l269 0F09                                l278 0FFF  
                              l455 012C                                l472 0207  
                              l642 05E2                                l476 0FBA  
                              l629 051F                                l478 0FD2  
                              l748 0682                                l758 0745  
                              l929 0F3E                                _GIE 005F  
                              _ISR 0683                                fsr0 0004  
                              indf 0000                       ___awmod@sign 0076  
      __size_of_Write_USART_String 002D                               ?_ISR 0070  
                             l2121 06D7                               l2131 06E9  
                             l2123 06D9                               l2115 06C7  
                             l2141 06FF                               l2133 06EF  
                             l2125 06DF                               l2117 06CF  
                             l2301 0542                               l2143 0701  
                             l2135 06F1                               l2127 06E1  
                             l2119 06D1                               l2151 0F90  
                             l2311 0570                               l2303 0546  
                             l2145 0707                               l2137 06F7  
                             l2129 06E7                               l2161 0FA8  
                             l2153 0F96                               l2321 0641  
                             l2401 0057                               l2313 0579  
                             l2305 054F                               l2139 06F9  
                             l2155 0F99                               l2147 0F85  
                             l2331 0659                               l2323 0647  
                             l2411 00A6                               l2403 006A  
                             l2307 0561                               l2315 057F  
                             l2157 0F9F                               l2149 0F8D  
                             l2333 066A                               l2325 064A  
                             l2341 067E                               l1701 0F3B  
                             l2421 00E1                               l2413 00AA  
                             l2405 007A                               l2309 056F  
                             l2263 0F20                               l2159 0FA2  
                             l2335 0670                               l2327 0651  
                             l2319 063D                               l2351 071C  
                             l2271 0FB4                               l1703 0F3D  
                             l2423 00E5                               l2407 007E  
                             l2511 077C                               l2265 0F26  
                             l2521 04BE                               l2281 0F55  
                             l2337 0671                               l2329 0655  
                             l2361 073B                               l2353 0720  
                             l2345 070A                               l2273 0FC1  
                             l2441 011A                               l2425 00E9  
                             l2409 0093                               l2417 00BA  
                             l2513 077D                               l2505 0746  
                             l2601 0787                               l2531 04D2  
                             l2523 04C3                               l2291 0F67  
                             l2283 0F56                               l2339 0678  
                             l2355 0724                               l2347 0712  
                             l2363 0741                               l2275 0FC8  
                             l2267 0FAC                               l2451 0147  
                             l2443 0120                               l2435 00F4  
                             l2427 00ED                               l2419 00D9  
                             l2371 0EFE                               l2515 077E  
                             l2507 074A                               l2611 078D  
                             l2603 0789                               l2541 04E8  
                             l2533 04D4                               l2525 04C5  
                             l2517 04B7                               l2285 0F5A  
                             l2357 072E                               l2349 0715  
                             l2277 0FCE                               l2269 0FAE  
                             l2461 0162                               l2453 014B  
                             l2445 0126                               l2429 00F2  
                             l2381 0F0F                               l2373 0F03  
                             l2509 074D                               l2621 0794  
                             l2613 0790                               l2605 078A  
                             l2701 0456                               l2631 0EE3  
                             l2551 050B                               l2543 04EC  
                             l2535 04DA                               l2527 04C9  
                             l2519 04BA                               l2287 0F5E  
                             l2383 0F6A                               l2359 0734  
                             l2471 0187                               l2463 0169  
                             l2455 0151                               l2447 0137  
                             l2439 0110                               l2391 0042  
                             l2367 0EEC                               l2375 0EF5  
                             l2295 0520                               l2623 07A1  
                             l2615 0791                               l2607 078B  
                             l2711 0478                               l2703 0464  
                             l2641 07C7                               l2633 0EE8  
                             l2545 04FD                               l2537 04DD  
                             l2553 0511                               l2529 04CE  
                             l2561 0588                               l2289 0F60  
                             l2473 018B                               l2465 016D  
                             l2481 01A8                               l2457 0158  
                             l2449 0143                               l2393 0049  
                             l2369 0EF1                               l2377 0EFA  
                             l2297 0532                               l2625 07A6  
                             l2617 0792                               l2609 078C  
                             l2721 049F                               l2713 047E  
                             l2705 0469                               l2643 07CC  
                             l2635 07B1                               l2555 0516  
                             l2547 0503                               l2539 04E4  
                             l2571 059A                               l2563 0589  
                             l2483 01AD                               l2475 0197  
                             l2459 015C                               l2467 017A  
                             l2395 004E                               l2491 01F1  
                             l2387 0037                               l2651 0208  
                             l2379 0F09                               l2299 0535  
                             l2627 07AB                               l2619 0793  
                             l2723 04A5                               l2715 0487  
                             l2707 046E                               l2645 07D2  
                             l2637 07B6                               l2557 051B  
                             l2549 0504                               l2581 05B3  
                             l2573 059F                               l2565 058F  
                             l2485 01DD                               l2477 019D  
                             l2469 0180                               l2493 0203  
                             l2397 0053                               l2389 003C  
                             l2661 03AA                               l2653 0360  
                             l2629 05E3                               l2717 0490  
                             l2709 0473                               l2647 07DA  
                             l2639 07BE                               l2583 05B7  
                             l2575 05A5                               l2591 05D4  
                             l2567 0594                               l1695 0F2E  
                             l2487 01E4                               l2479 01A4  
                             l2663 03BD                               l2655 0371  
                             l2671 0FEE                               l2719 0499  
                             l2593 05D9                               l2585 05C1  
                             l2577 05A8                               l2569 0596  
                             l1697 0F2F                               l2489 01E8  
                             l2657 0384                               l2665 0FD3  
                             l1961 0F14                               l2681 03E3  
                             l2673 03D1                               l2595 05DE  
                             l2587 05C7                               l2579 05AF  
                             l1699 0F35                               l2659 0397  
                             l2667 0FD7                               l1963 0F1E  
                             l2691 0411                               l2683 03EC  
                             l2675 03D6                               l2589 05CE  
                             l2765 0065                               l2669 0FE8  
                             l1965 0EC7                               l1957 0ECD  
                             l2693 0420                               l2685 03F4  
                             l2677 03D9                               l2767 00CE  
                             l1959 0ED0                               l2599 0780  
                             l2695 042F                               l2687 03F9  
                             l2679 03DE                               l2697 0438  
                             l2689 0402                               l2699 0447  
                             STR_1 0823                               STR_2 0826  
                             STR_3 081A                               STR_4 081A  
                             STR_5 081A                               STR_6 081A  
                             STR_7 081F                               u1010 0F35  
                             u1011 0F34                               u1020 0F3B  
                             u1021 0F3A                               u2000 0659  
                             u2001 0658                               u2020 066A  
                             u2100 0741                               u2021 0669  
                             u2101 0740                               u2110 0F0F  
                             u2015 065A                               u2111 0F0E  
                             u2040 067E                               u2200 0126  
                             u2041 067D                               u2025 0666  
                             u2201 0125                               u2050 0712  
                             u2210 0137                               u2130 0042  
                             u2035 0672                               u2051 0711  
                             u2211 0136                               u2131 0041  
                             u2300 0203                               u2220 014B  
                             u2140 007A                               u2125 0F76  
                             u2301 0202                               u2221 014A  
                             u2141 0079                               u2070 0724  
                             u2230 0151                               u2150 00BA  
                             u2310 075D                               u2071 0723  
                             u2231 0150                               u2215 0133  
                             u2151 00B9                               u2400 0511  
                             u2320 04BE                               u2080 072E  
                             u2240 0162                               u2160 00E9  
                             u2401 0510                               u2321 04BD  
                             u2081 072D                               u2065 0716  
                             u2241 0161                               u2161 00E8  
                             u2410 0516                               u2330 04C9  
                             u2250 0179                               u2170 010F  
                             u2411 0515                               u2331 04C8  
                             u2251 0178                               u2171 010E  
                             u2315 0758                               u1700 06CF  
                             u2340 04DA                               u2500 05D9  
                             u2420 058F                               u2260 0180  
                             u2180 011A                               u1701 06CE  
                             u2341 04D9                               u2501 05D8  
                             u2421 058E                               u2085 072A  
                             u2261 017F                               u2181 0119  
                             u2510 07D2                               u1710 06D7  
                             u2430 059A                               u2270 0197  
                             u2190 0120                               u2511 07D1  
                             u1711 06D6                               u2431 0599  
                             u2095 0735                               u2271 0196  
                             u2191 011F                               u2175 010B  
                             u1720 06DF                               u1800 0F9F  
                             u2360 04EC                               u2440 05A5  
                             u2280 019D                               u2520 0FFF  
                             u1721 06DE                               u1801 0F9E  
                             u2361 04EB                               u2441 05A4  
                             u2281 019C                               u2521 0FFE  
                             u1730 06E7                               u1810 0FA8  
                             u2290 01F1                               u1731 06E6  
                             u1811 0FA7                               u2355 04DE  
                             u2291 01F0                               u1740 06EF  
                             u2380 04FD                               u2460 05B7  
                             u1900 0F67                               u1741 06EE  
                             u2381 04FC                               u2461 05B6  
                             u1901 0F66                               u1830 0F26  
                             u1750 06F7                               u2470 05C1  
                             u1910 0532                               u1831 0F25  
                             u1751 06F6                               u2375 04ED  
                             u2471 05C0                               u2455 05A9  
                             u1911 0531                               u1840 0F2C  
                             u1760 06FF                               u1841 0F2B  
                             u1761 06FE                               u2385 04F9  
                             u2537 04AD                               u1770 0707  
                             u2490 05D4                               u1850 0FB4  
                             u1930 0546                               u1771 0706  
                             u2395 0505                               u2491 05D3  
                             u2475 05BD                               u1851 0FB3  
                             u1931 0545                               u1780 0F8D  
                             u1781 0F8C                               u2485 05C8  
                             u1925 0537                               u1790 0F96  
                             u1950 0561                               u1791 0F95  
                             u1951 0560                               u1880 0FCE  
                             u1881 0FCD                               u1865 0FBB  
                             u1945 0548                               u1890 0F5A  
                             u1970 057F                               u1891 0F59  
                             u1875 0FC2                               u1971 057E  
                             u1955 055D                               _PEIE 005E  
                             u1980 0647                               u1981 0646  
                             u1965 0571                               u1995 064B  
                             _RCIF 0065                               _TRMT 04C1  
                             _Date 0040                               _Time 004F  
 __end_of_I2C_Master_RepeatedStart 0EEC                               _cont 005E  
                             _main 03D1                               _hour 0062  
                             _year 005F                               btemp 007E  
                             start 000C                    __end_of_Led_RTC 070A  
                ___bmul@multiplier 0021              __size_of_Write_to_RTC 005A  
                            ??_ISR 0070                   ?_I2C_Master_Init 002D  
                 ?_I2C_Master_Read 0074                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                  __end_of___awdiv 0520                    __end_of___awmod 05E3  
                            _ANSEL 0188                    __end_of___lldiv 0588  
                  ___awdiv@divisor 0020                    __end_of___lwdiv 0683  
                            i1l115 06BE                              i1l119 06C0  
                            i1l281 0ED3                    __end_of___lwmod 0746  
                            i1l284 0EDA                    ___awdiv@counter 0024  
                            _RCREG 001A                              _SPBRG 0099  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009                              u71_20 0ED9  
                            u71_21 0ED8                              _TRISA 0085  
                            _TRISB 0086                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            u90_20 0689                              _SSPIF 0063  
                            u90_21 0688                              u91_20 069A  
                            u91_21 0699                              u92_20 06A4  
                            u92_21 06A3                              u93_20 06AF  
                            u93_21 06AE                              u94_20 06BA  
                            u94_21 06B9                              _TXREG 0019  
                            _m_day 0061                    __end_of_dpowers 081A  
                  __end_of_isdigit 0F3F                              _month 0060  
                            _setup 0780                              pclath 000A  
                     _Write_to_RTC 05E3                              status 0003  
                            wtemp0 007E                    __end_of_sprintf 0208  
                      ?_USART_Init 0070                    __initialization 000F  
                       _Read_USART 0ED3                       __end_of_main 04B7  
                           ??_main 003D                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0074                 ??_I2C_Master_Start 0074  
               ??_I2C_Master_Write 0076                   ___awdiv@dividend 0022  
              _USART_Init_BaudRate 0ECD                             ?_setup 0070  
                           _ANSELH 0189                             i1l1511 0683  
                           i1l1521 06A4                             i1l1513 0689  
                           i1l1347 0ED3                             i1l1523 06A8  
                           i1l1531 06BE                             i1l1515 0694  
                           i1l1349 0ED9                             i1l1525 06AF  
                           i1l1517 069A                             i1l1527 06B3  
                           i1l1519 069E                             i1l1529 06BA  
                        ??_Led_RTC 0074                             _SPBRGH 009A  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013                             _Piloto 0F85  
         _I2C_Master_RepeatedStart 0EE3                             ___bmul 0F52  
                           ___wmul 0FAC                          ??___awdiv 0074  
                        ??___awmod 0074               ?_USART_Init_BaudRate 0070  
                        ??___lldiv 0074                          ??___lwdiv 0074  
                        ??___lwmod 0075                   ___awdiv@quotient 0026  
                           _minute 0063                             _second 0064  
                  ___awmod@divisor 0020                    ___awmod@counter 0075  
                        ??_isdigit 0074                             saved_w 007E  
              __size_of_USART_Init 000C                          ??_sprintf 002E  
          __end_of__initialization 0030                ___bmul@multiplicand 0074  
                      ?_Read_USART 0070                     __pcstackCOMMON 0070  
            ??_USART_Init_BaudRate 0074                       __pidataBANK0 07E1  
                    __end_of_setup 07B1                       ?_RTC_display 0070  
                     sprintf@width 0036                            ??_setup 0075  
                     Write_USART@a 0074                         __pbssBANK0 005E  
                       __pbssBANK1 00A0                         _data_total 00A0  
                          ?_Piloto 0070                         __pmaintext 03D1  
                          ?___bmul 0074                            ?___wmul 0020  
                    ??_Write_USART 0074                         __pintentry 0004  
       __end_of_Write_USART_String 1000            __size_of_bcd_to_decimal 001C  
              __size_of_Read_USART 0008           __size_of_USART_INTERRUPT 0006  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 0800                            _Led_RTC 06C7  
                     ??_USART_Init 0074                    __size_of_Piloto 0027  
                  __size_of___bmul 0017                            ___awdiv 04B7  
                          ___awmod 0588                            ___lldiv 0520  
                  __size_of___wmul 0027                            ___lwdiv 063D  
                          ___lwmod 070A                            __ptext1 0780  
                          __ptext2 0ECD                            __ptext3 0F14  
                          __ptext4 0EC7                            __ptext5 0746  
                          __ptext6 0520                            __ptext7 05E3  
                          __ptext8 0EFE                            __ptext9 0EF5  
                     __size_of_ISR 0044                            _dpowers 0810  
              __end_of_Write_USART 0F14                            _isdigit 0F2D  
                 ___awmod@dividend 0022           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0030           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                 __end_of_USART_Init 0F20  
                          _sprintf 0034                            clrloop0 0EDC  
             end_of_initialization 0030         ??_I2C_Master_RepeatedStart 0074  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 0020                    ___lldiv@counter 002C  
                       _month_send 00C4                          _RCSTAbits 0018  
                 I2C_Master_Init@c 002D                   I2C_Master_Read@a 0074  
                        _PORTAbits 0005                          _PORTDbits 0008  
                        _PORTEbits 0009               __size_of_RTC_display 01C9  
                        _TRISCbits 0087                          _TXSTAbits 0098  
                ??_USART_INTERRUPT 0074                       ??_Read_USART 0070  
                   __end_of_Piloto 0FAC                     __end_of___bmul 0F69  
                      _Write_USART 0F08                     __end_of___wmul 0FD3  
              start_initialization 000F                     _bcd_to_decimal 0F69  
                      __end_of_ISR 06C7                 __end_of_Read_USART 0EDB  
                ??_I2C_Master_Init 0031                  ??_I2C_Master_Read 0020  
                ??_I2C_Master_Wait 0074                  ??_I2C_Master_Stop 0074  
      __end_of_USART_Init_BaudRate 0ED3                           ??_Piloto 0074  
                         ??___bmul 0075                           ??___wmul 0074  
                       init_fetch0 0F3F                        __pdataBANK0 0040  
           __end_of_bcd_to_decimal 0F85                        __pbssCOMMON 0077  
                        ___latbits 0002                      __pcstackBANK0 0020  
                     _isdigit$1076 0074                        _data_recive 0077  
                    ?_Write_to_RTC 0070                           ?_Led_RTC 0070  
                      sprintf@flag 0035                 _Write_USART_String 0FD3  
                      sprintf@prec 0032                   _I2C_Master_Start 0EEC  
                 _I2C_Master_Write 0EFE                   ___lwdiv@dividend 0022  
              ?_Write_USART_String 0075                           ?___awdiv 0020  
                         ?___awmod 0020                           ?___lldiv 0020  
                         ?___lwdiv 0020                           ?___lwmod 0027  
                        __pstrings 0800                          _cont_send 00B4  
                  ?_bcd_to_decimal 0070                           ?_isdigit 0070  
             ??_Write_USART_String 0020                   ___lwdiv@quotient 0025  
                         ?_sprintf 002B               bcd_to_decimal@number 0076  
                   ??_Write_to_RTC 0076                     __size_of_setup 0031  
                        _hour_send 00D4                  interrupt_function 0004  
                   ___wmul@product 0074                          clear_ram0 0EDB  
                         _PIE1bits 008C                           _PIR1bits 000C  
                        _year_send 00BC                        __stringbase 080F  
                ___wmul@multiplier 0020                    _USART_INTERRUPT 0EC7  
              I2C_Master_Read@temp 0022                   __size_of_Led_RTC 0043  
                     ?_Write_USART 0070  __size_of_I2C_Master_RepeatedStart 0009  
                 __size_of___awdiv 0069                   __size_of___awmod 005B  
        ?_I2C_Master_RepeatedStart 0070                   __size_of___lldiv 0068  
                 __size_of___lwdiv 0046                   __size_of___lwmod 003C  
                    ??_RTC_display 003A                 __end_of__stringtab 0810  
                       sprintf@val 0033                    _I2C_Master_Init 0746  
                  _I2C_Master_Read 07B1                    _I2C_Master_Wait 0F20  
                  _I2C_Master_Stop 0EF5                   __size_of_isdigit 0012  
                  ___lwdiv@divisor 0020                           _day_send 00CC  
                  ___lwdiv@counter 0024                           __ptext10 0EEC  
                         __ptext11 0FD3                           __ptext20 0F52  
                         __ptext12 0F08                           __ptext21 0588  
                         __ptext13 0208                           __ptext22 04B7  
                         __ptext14 0034                           __ptext23 0F85  
                         __ptext15 0F2D                           __ptext24 06C7  
                         __ptext16 0FAC                           __ptext25 0EE3  
                         __ptext17 070A                           __ptext26 07B1  
                         __ptext18 063D                           __ptext27 0F20  
                         __ptext19 0F69                           __ptext28 0683  
                         __ptext29 0ED3                   __size_of_sprintf 01D4  
                    __size_of_main 00E6                           _min_send 00DC  
                         _sec_send 0065               __end_of_Write_to_RTC 063D  
          __end_of_USART_INTERRUPT 0ECD           __end_of_I2C_Master_Start 0EF5  
         __end_of_I2C_Master_Write 0F08                         _INTCONbits 000B  
              Write_USART_String@a 0075                Write_USART_String@i 0021  
                         init_ram0 0F43                __end_of_RTC_display 03D1  
                         isdigit@c 0075                           intlevel1 0000  
                        sprintf@ap 0031                          sprintf@sp 0039  
                 ___lwmod@dividend 0029                   ___lldiv@dividend 0024  
                        stringcode 080A                         _OSCCONbits 008F  
                 ??_bcd_to_decimal 0022       __size_of_USART_Init_BaudRate 0006  
          __end_of_I2C_Master_Init 0780            __end_of_I2C_Master_Read 07E1  
          __end_of_I2C_Master_Wait 0F2D            __end_of_I2C_Master_Stop 0EFE  
                         sprintf@c 0038                           sprintf@f 002B  
                 ___lldiv@quotient 0028                  I2C_Master_Write@d 0074  
                  ___lwmod@divisor 0027                    ___lwmod@counter 0076  
                         stringdir 080A                           stringtab 0800  
                      _SSPCON2bits 0091                         _USART_Init 0F14  
