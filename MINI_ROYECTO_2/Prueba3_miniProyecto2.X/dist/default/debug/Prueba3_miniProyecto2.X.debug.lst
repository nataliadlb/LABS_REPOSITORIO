

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 21:00:35 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  0105                     	;# 
   223  0107                     	;# 
   224  0108                     	;# 
   225  0109                     	;# 
   226  010C                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  0185                     	;# 
   232  0187                     	;# 
   233  0188                     	;# 
   234  0189                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  008F                     	;# 
   282  0090                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0095                     	;# 
   290  0096                     	;# 
   291  0097                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009A                     	;# 
   295  009B                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  009F                     	;# 
   300  0105                     	;# 
   301  0107                     	;# 
   302  0108                     	;# 
   303  0109                     	;# 
   304  010C                     	;# 
   305  010C                     	;# 
   306  010D                     	;# 
   307  010E                     	;# 
   308  010F                     	;# 
   309  0185                     	;# 
   310  0187                     	;# 
   311  0188                     	;# 
   312  0189                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000D                     	;# 
   329  000E                     	;# 
   330  000E                     	;# 
   331  000F                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001B                     	;# 
   345  001B                     	;# 
   346  001C                     	;# 
   347  001D                     	;# 
   348  001E                     	;# 
   349  001F                     	;# 
   350  0081                     	;# 
   351  0085                     	;# 
   352  0086                     	;# 
   353  0087                     	;# 
   354  0088                     	;# 
   355  0089                     	;# 
   356  008C                     	;# 
   357  008D                     	;# 
   358  008E                     	;# 
   359  008F                     	;# 
   360  0090                     	;# 
   361  0091                     	;# 
   362  0092                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0093                     	;# 
   366  0094                     	;# 
   367  0095                     	;# 
   368  0096                     	;# 
   369  0097                     	;# 
   370  0098                     	;# 
   371  0099                     	;# 
   372  009A                     	;# 
   373  009B                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  0105                     	;# 
   379  0107                     	;# 
   380  0108                     	;# 
   381  0109                     	;# 
   382  010C                     	;# 
   383  010C                     	;# 
   384  010D                     	;# 
   385  010E                     	;# 
   386  010F                     	;# 
   387  0185                     	;# 
   388  0187                     	;# 
   389  0188                     	;# 
   390  0189                     	;# 
   391  018C                     	;# 
   392  018D                     	;# 
   393                           
   394                           	psect	idataBANK0
   395  0FE0                     __pidataBANK0:
   396                           
   397                           ;initializer for _Date
   398  0FE0  3444               	retlw	68
   399  0FE1  3441               	retlw	65
   400  0FE2  3454               	retlw	84
   401  0FE3  3445               	retlw	69
   402  0FE4  343A               	retlw	58
   403  0FE5  3420               	retlw	32
   404  0FE6  3430               	retlw	48
   405  0FE7  3436               	retlw	54
   406  0FE8  342F               	retlw	47
   407  0FE9  3430               	retlw	48
   408  0FEA  3433               	retlw	51
   409  0FEB  342F               	retlw	47
   410  0FEC  3432               	retlw	50
   411  0FED  3430               	retlw	48
   412  0FEE  3432               	retlw	50
   413  0FEF  3431               	retlw	49
   414  0FF0  3400               	retlw	0
   415                           
   416                           ;initializer for _Time
   417  0FF1  3454               	retlw	84
   418  0FF2  3449               	retlw	73
   419  0FF3  344D               	retlw	77
   420  0FF4  3445               	retlw	69
   421  0FF5  343A               	retlw	58
   422  0FF6  3420               	retlw	32
   423  0FF7  3432               	retlw	50
   424  0FF8  3430               	retlw	48
   425  0FF9  343A               	retlw	58
   426  0FFA  3433               	retlw	51
   427  0FFB  3437               	retlw	55
   428  0FFC  343A               	retlw	58
   429  0FFD  3430               	retlw	48
   430  0FFE  3430               	retlw	48
   431  0FFF  3400               	retlw	0
   432  0008                     _PORTDbits	set	8
   433  0009                     _PORTEbits	set	9
   434  0013                     _SSPBUF	set	19
   435  0014                     _SSPCON	set	20
   436  0009                     _PORTE	set	9
   437  0008                     _PORTD	set	8
   438  0007                     _PORTC	set	7
   439  0006                     _PORTB	set	6
   440  0005                     _PORTA	set	5
   441  0005                     _PORTAbits	set	5
   442  001A                     _RCREG	set	26
   443  000C                     _PIR1bits	set	12
   444  0063                     _SSPIF	set	99
   445  005E                     _PEIE	set	94
   446  005F                     _GIE	set	95
   447  0031                     _RB1	set	49
   448  0030                     _RB0	set	48
   449  0091                     _SSPCON2bits	set	145
   450  0094                     _SSPSTAT	set	148
   451  0093                     _SSPADD	set	147
   452  0091                     _SSPCON2	set	145
   453  0089                     _TRISE	set	137
   454  0087                     _TRISCbits	set	135
   455  0086                     _TRISB	set	134
   456  0085                     _TRISA	set	133
   457  0088                     _TRISD	set	136
   458  0463                     _SSPIE	set	1123
   459  043C                     _TRISC4	set	1084
   460  043B                     _TRISC3	set	1083
   461  0189                     _ANSELH	set	393
   462  0188                     _ANSEL	set	392
   463                           
   464                           	psect	strings
   465  07A7                     __pstrings:
   466  07A7                     stringtab:
   467  07A7                     __stringtab:
   468                           
   469                           ;	String table - string pointers are 1 byte each
   470  07A7  1BFF               	btfsc	btemp+1,7
   471  07A8  2FB1               	ljmp	stringcode
   472  07A9  1383               	bcf	3,7
   473  07AA  187F               	btfsc	btemp+1,0
   474  07AB  1783               	bsf	3,7
   475  07AC  0800               	movf	0,w
   476  07AD  0A84               	incf	4,f
   477  07AE  1903               	skipnz
   478  07AF  0AFF               	incf	btemp+1,f
   479  07B0  0008               	return
   480  07B1                     stringcode:
   481  07B1                     stringdir:
   482  07B1  3007               	movlw	high stringdir
   483  07B2  008A               	movwf	10
   484  07B3  0804               	movf	4,w
   485  07B4  0A84               	incf	4,f
   486  07B5  0782               	addwf	2,f
   487  07B6                     __stringbase:
   488  07B6  3400               	retlw	0
   489  07B7                     __end_of__stringtab:
   490  07B7                     STR_2:
   491  07B7  3448               	retlw	72	;'H'
   492  07B8  344F               	retlw	79	;'O'
   493  07B9  344C               	retlw	76	;'L'
   494  07BA  3441               	retlw	65	;'A'
   495  07BB  3420               	retlw	32	;' '
   496  07BC  3450               	retlw	80	;'P'
   497  07BD  3449               	retlw	73	;'I'
   498  07BE  344E               	retlw	78	;'N'
   499  07BF  3443               	retlw	67	;'C'
   500  07C0  3448               	retlw	72	;'H'
   501  07C1  3445               	retlw	69	;'E'
   502  07C2  3400               	retlw	0
   503  07C3                     STR_1:
   504  07C3  3420               	retlw	32	;' '
   505  07C4  3425               	retlw	37	;'%'
   506  07C5  3464               	retlw	100	;'d'
   507  07C6  3400               	retlw	0
   508  07C7                     STR_3:
   509  07C7  3420               	retlw	32	;' '
   510  07C8  3420               	retlw	32	;' '
   511  07C9  3400               	retlw	0
   512                           
   513                           	psect	cinit
   514  000F                     start_initialization:	
   515                           ; #config settings
   516                           
   517  000F                     __initialization:
   518                           
   519                           ; Initialize objects allocated to BANK0
   520  000F  1383               	bcf	3,7	;select IRP bank0
   521  0010  3040               	movlw	low (__pdataBANK0+32)
   522  0011  00FD               	movwf	btemp+-1
   523  0012  300F               	movlw	high __pidataBANK0
   524  0013  00FE               	movwf	btemp
   525  0014  30E0               	movlw	low __pidataBANK0
   526  0015  00FF               	movwf	btemp+1
   527  0016  3020               	movlw	low __pdataBANK0
   528  0017  0084               	movwf	4
   529  0018  120A  118A  27F0  120A  118A  	fcall	init_ram0
   530                           
   531                           ; Clear objects allocated to BANK0
   532  001D  3040               	movlw	low __pbssBANK0
   533  001E  0084               	movwf	4
   534  001F  305A               	movlw	low (__pbssBANK0+26)
   535  0020  120A  158A  26ED  120A  118A  	fcall	clear_ram0
   536                           
   537                           ; Clear objects allocated to COMMON
   538  0025  01F8               	clrf	__pbssCOMMON& (0+127)
   539  0026  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   540  0027  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   541  0028                     end_of_initialization:	
   542                           ;End of C runtime variable initialization code
   543                           
   544  0028                     __end_of__initialization:
   545  0028  0183               	clrf	3
   546  0029  120A  118A  282C   	ljmp	_main	;jump to C main() function
   547                           
   548                           	psect	bssCOMMON
   549  0078                     __pbssCOMMON:
   550  0078                     _data_recive:
   551  0078                     	ds	1
   552  0079                     _cont:
   553  0079                     	ds	1
   554  007A                     _second:
   555  007A                     	ds	1
   556                           
   557                           	psect	bssBANK0
   558  0040                     __pbssBANK0:
   559  0040                     _year:
   560  0040                     	ds	1
   561  0041                     _month:
   562  0041                     	ds	1
   563  0042                     _m_day:
   564  0042                     	ds	1
   565  0043                     _hour:
   566  0043                     	ds	1
   567  0044                     _minute:
   568  0044                     	ds	1
   569  0045                     _i:
   570  0045                     	ds	1
   571  0046                     _data_total:
   572  0046                     	ds	20
   573                           
   574                           	psect	dataBANK0
   575  0020                     __pdataBANK0:
   576  0020                     _Date:
   577  0020                     	ds	17
   578  0031                     _Time:
   579  0031                     	ds	15
   580                           
   581                           	psect	inittext
   582  07EC                     init_fetch0:	
   583                           ;	Called with low address in FSR and high address in W
   584                           
   585  07EC  087E               	movf	btemp,w
   586  07ED  008A               	movwf	10
   587  07EE  087F               	movf	btemp+1,w
   588  07EF  0082               	movwf	2
   589  07F0                     init_ram0:	
   590                           ;Called with:
   591                           ;	high address of idata address in btemp 
   592                           ;	low address of idata address in btemp+1 
   593                           ;	low address of data in FSR
   594                           ;	high address + 1 of data in btemp-1
   595                           
   596  07F0  120A  118A  27EC  120A  118A  	fcall	init_fetch0
   597  07F5  0080               	movwf	0
   598  07F6  0A84               	incf	4,f
   599  07F7  0804               	movf	4,w
   600  07F8  067D               	xorwf	btemp+-1,w
   601  07F9  1903               	btfsc	3,2
   602  07FA  3400               	retlw	0
   603  07FB  0AFF               	incf	btemp+1,f
   604  07FC  1903               	btfsc	3,2
   605  07FD  0AFE               	incf	btemp,f
   606  07FE  2FF0               	goto	init_ram0
   607                           
   608                           	psect	clrtext
   609  0EED                     clear_ram0:	
   610                           ;	Called with FSR containing the base address, and
   611                           ;	W with the last address+1
   612                           
   613  0EED  0064               	clrwdt	;clear the watchdog before getting into this loop
   614  0EEE                     clrloop0:
   615  0EEE  0180               	clrf	0	;clear RAM location pointed to by FSR
   616  0EEF  0A84               	incf	4,f	;increment pointer
   617  0EF0  0604               	xorwf	4,w	;XOR with final address
   618  0EF1  1903               	btfsc	3,2	;have we reached the end yet?
   619  0EF2  3400               	retlw	0	;all done for this memory range, return
   620  0EF3  0604               	xorwf	4,w	;XOR again to restore value
   621  0EF4  2EEE               	goto	clrloop0	;do the next byte
   622                           
   623                           	psect	cstackCOMMON
   624  0070                     __pcstackCOMMON:
   625  0070                     ?_debounce:
   626  0070                     ?_setup:	
   627                           ; 1 bit 
   628                           
   629  0070                     ?_Lcd_Init:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_Lcd_Clear:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_decimal_to_bcd:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_I2C_Master_Start:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_I2C_Master_Stop:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_I2C_Master_RepeatedStart:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_RTC_display:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_LCD_PutC:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_Lcd_Port:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_Lcd_Cmd:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_ISR:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ??_ISR:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_main:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_bcd_to_decimal:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_blink:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_I2C_Master_Wait:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_Lcd_Write_Char:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_LCD_Write_Nibble:	
   681                           ; 1 bytes @ 0x0
   682                           
   683                           
   684                           ; 1 bytes @ 0x0
   685  0070                     	ds	3
   686  0073                     ??_debounce:
   687  0073                     ??_I2C_Master_Start:	
   688                           ; 1 bytes @ 0x3
   689                           
   690  0073                     ?_I2C_Master_Write:	
   691                           ; 1 bytes @ 0x3
   692                           
   693  0073                     ??_I2C_Master_Stop:	
   694                           ; 1 bytes @ 0x3
   695                           
   696  0073                     ??_I2C_Master_RepeatedStart:	
   697                           ; 1 bytes @ 0x3
   698                           
   699  0073                     ??_Lcd_Port:	
   700                           ; 1 bytes @ 0x3
   701                           
   702  0073                     ??_blink:	
   703                           ; 1 bytes @ 0x3
   704                           
   705  0073                     ??_I2C_Master_Wait:	
   706                           ; 1 bytes @ 0x3
   707                           
   708  0073                     ??_LCD_Write_Nibble:	
   709                           ; 1 bytes @ 0x3
   710                           
   711  0073                     ?___bmul:	
   712                           ; 1 bytes @ 0x3
   713                           
   714  0073                     ??___lldiv:	
   715                           ; 1 bytes @ 0x3
   716                           
   717  0073                     ?_I2C_Master_Read:	
   718                           ; 1 bytes @ 0x3
   719                           
   720  0073                     ?___awdiv:	
   721                           ; 2 bytes @ 0x3
   722                           
   723  0073                     ?___awmod:	
   724                           ; 2 bytes @ 0x3
   725                           
   726  0073                     Lcd_Port@a:	
   727                           ; 2 bytes @ 0x3
   728                           
   729  0073                     ___bmul@multiplicand:	
   730                           ; 1 bytes @ 0x3
   731                           
   732  0073                     I2C_Master_Write@d:	
   733                           ; 1 bytes @ 0x3
   734                           
   735  0073                     I2C_Master_Read@a:	
   736                           ; 2 bytes @ 0x3
   737                           
   738  0073                     ___awdiv@divisor:	
   739                           ; 2 bytes @ 0x3
   740                           
   741  0073                     ___awmod@divisor:	
   742                           ; 2 bytes @ 0x3
   743                           
   744                           
   745                           ; 2 bytes @ 0x3
   746  0073                     	ds	1
   747  0074                     ??_I2C_Master_Init:
   748  0074                     ??_Lcd_Cmd:	
   749                           ; 1 bytes @ 0x4
   750                           
   751  0074                     ??_Lcd_Write_Char:	
   752                           ; 1 bytes @ 0x4
   753                           
   754  0074                     ??___bmul:	
   755                           ; 1 bytes @ 0x4
   756                           
   757                           
   758                           ; 1 bytes @ 0x4
   759  0074                     	ds	1
   760  0075                     ??_I2C_Master_Write:
   761  0075                     ??_I2C_Master_Read:	
   762                           ; 1 bytes @ 0x5
   763                           
   764  0075                     debounce@count:	
   765                           ; 1 bytes @ 0x5
   766                           
   767  0075                     blink@j:	
   768                           ; 1 bytes @ 0x5
   769                           
   770  0075                     Lcd_Write_Char@a:	
   771                           ; 1 bytes @ 0x5
   772                           
   773  0075                     LCD_Write_Nibble@n:	
   774                           ; 1 bytes @ 0x5
   775                           
   776  0075                     ___bmul@product:	
   777                           ; 1 bytes @ 0x5
   778                           
   779  0075                     ___awdiv@dividend:	
   780                           ; 1 bytes @ 0x5
   781                           
   782  0075                     ___awmod@dividend:	
   783                           ; 2 bytes @ 0x5
   784                           
   785                           
   786                           ; 2 bytes @ 0x5
   787  0075                     	ds	1
   788  0076                     ?_Lcd_Write_String:
   789  0076                     ??_LCD_PutC:	
   790                           ; 1 bytes @ 0x6
   791                           
   792  0076                     debounce@i:	
   793                           ; 1 bytes @ 0x6
   794                           
   795  0076                     Lcd_Cmd@a:	
   796                           ; 1 bytes @ 0x6
   797                           
   798  0076                     ___bmul@multiplier:	
   799                           ; 1 bytes @ 0x6
   800                           
   801  0076                     Lcd_Write_String@a:	
   802                           ; 1 bytes @ 0x6
   803                           
   804                           
   805                           ; 2 bytes @ 0x6
   806  0076                     	ds	1
   807  0077                     ??_Lcd_Clear:
   808  0077                     ?_Lcd_Set_Cursor:	
   809                           ; 1 bytes @ 0x7
   810                           
   811  0077                     ??___awdiv:	
   812                           ; 1 bytes @ 0x7
   813                           
   814  0077                     ??___awmod:	
   815                           ; 1 bytes @ 0x7
   816                           
   817  0077                     bcd_to_decimal@number:	
   818                           ; 1 bytes @ 0x7
   819                           
   820  0077                     Lcd_Set_Cursor@b:	
   821                           ; 1 bytes @ 0x7
   822                           
   823  0077                     LCD_PutC@LCD_Char:	
   824                           ; 1 bytes @ 0x7
   825                           
   826                           
   827                           ; 1 bytes @ 0x7
   828  0077                     	ds	1
   829  0078                     ??_setup:
   830                           
   831                           	psect	cstackBANK0
   832  005A                     __pcstackBANK0:	
   833                           ; 1 bytes @ 0x8
   834                           
   835  005A                     ??_Lcd_Init:
   836  005A                     ??_Lcd_Set_Cursor:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  005A                     ??_Lcd_Write_String:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  005A                     ??_bcd_to_decimal:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  005A                     ?___lldiv:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  005A                     ___awdiv@counter:	
   849                           ; 4 bytes @ 0x0
   850                           
   851  005A                     ___awmod@counter:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  005A                     I2C_Master_Read@temp:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  005A                     ___lldiv@divisor:	
   858                           ; 2 bytes @ 0x0
   859                           
   860                           
   861                           ; 4 bytes @ 0x0
   862  005A                     	ds	1
   863  005B                     Lcd_Set_Cursor@a:
   864  005B                     ___awdiv@sign:	
   865                           ; 1 bytes @ 0x1
   866                           
   867  005B                     ___awmod@sign:	
   868                           ; 1 bytes @ 0x1
   869                           
   870                           
   871                           ; 1 bytes @ 0x1
   872  005B                     	ds	1
   873  005C                     Lcd_Set_Cursor@temp:
   874  005C                     ___awdiv@quotient:	
   875                           ; 1 bytes @ 0x2
   876                           
   877                           
   878                           ; 2 bytes @ 0x2
   879  005C                     	ds	1
   880  005D                     Lcd_Write_String@i:
   881                           
   882                           ; 2 bytes @ 0x3
   883  005D                     	ds	1
   884  005E                     ??_decimal_to_bcd:
   885  005E                     ___lldiv@dividend:	
   886                           ; 1 bytes @ 0x4
   887                           
   888                           
   889                           ; 4 bytes @ 0x4
   890  005E                     	ds	1
   891  005F                     ?_edit:
   892  005F                     ??_RTC_display:	
   893                           ; 1 bytes @ 0x5
   894                           
   895  005F                     edit@y:	
   896                           ; 1 bytes @ 0x5
   897                           
   898                           
   899                           ; 1 bytes @ 0x5
   900  005F                     	ds	1
   901  0060                     edit@parameter:
   902                           
   903                           ; 1 bytes @ 0x6
   904  0060                     	ds	1
   905  0061                     ??_edit:
   906                           
   907                           ; 1 bytes @ 0x7
   908  0061                     	ds	1
   909  0062                     ___lldiv@quotient:
   910                           
   911                           ; 4 bytes @ 0x8
   912  0062                     	ds	1
   913  0063                     decimal_to_bcd@number:
   914                           
   915                           ; 1 bytes @ 0x9
   916  0063                     	ds	1
   917  0064                     edit@x:
   918                           
   919                           ; 1 bytes @ 0xA
   920  0064                     	ds	2
   921  0066                     ___lldiv@counter:
   922                           
   923                           ; 1 bytes @ 0xC
   924  0066                     	ds	1
   925  0067                     ?_I2C_Master_Init:
   926  0067                     I2C_Master_Init@c:	
   927                           ; 1 bytes @ 0xD
   928                           
   929                           
   930                           ; 4 bytes @ 0xD
   931  0067                     	ds	4
   932  006B                     ??_main:
   933                           
   934                           ; 1 bytes @ 0x11
   935  006B                     	ds	3
   936                           
   937                           	psect	maintext
   938  002C                     __pmaintext:	
   939 ;;
   940 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   941 ;;
   942 ;; *************** function _main *****************
   943 ;; Defined at:
   944 ;;		line 114 in file "main_prueba3_mini2.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : B00/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   958 ;;      Params:         0       0       0       0       0
   959 ;;      Locals:         0       0       0       0       0
   960 ;;      Temps:          0       3       0       0       0
   961 ;;      Totals:         0       3       0       0       0
   962 ;;Total ram usage:        3 bytes
   963 ;; Hardware stack levels required when called:    5
   964 ;; This function calls:
   965 ;;		_I2C_Master_Read
   966 ;;		_I2C_Master_RepeatedStart
   967 ;;		_I2C_Master_Start
   968 ;;		_I2C_Master_Stop
   969 ;;		_I2C_Master_Write
   970 ;;		_Lcd_Clear
   971 ;;		_Lcd_Init
   972 ;;		_RTC_display
   973 ;;		_debounce
   974 ;;		_decimal_to_bcd
   975 ;;		_edit
   976 ;;		_setup
   977 ;; This function is called by:
   978 ;;		Startup code after reset
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           
   983                           ;psect for function _main
   984  002C                     _main:
   985  002C                     l2133:	
   986                           ;incstack = 0
   987                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   988                           
   989                           
   990                           ;main_prueba3_mini2.c: 115:     setup();
   991  002C  120A  118A  27CA  120A  118A  	fcall	_setup
   992  0031                     l2135:
   993                           
   994                           ;main_prueba3_mini2.c: 116:     TRISD = 0x00;
   995  0031  1683               	bsf	3,5	;RP0=1, select bank1
   996  0032  1303               	bcf	3,6	;RP1=0, select bank1
   997  0033  0188               	clrf	8	;volatile
   998  0034                     l2137:
   999                           
  1000                           ;main_prueba3_mini2.c: 117:     Lcd_Init();
  1001  0034  120A  118A  2626  120A  118A  	fcall	_Lcd_Init
  1002  0039                     l2139:
  1003                           
  1004                           ;main_prueba3_mini2.c: 118:     Lcd_Clear();
  1005  0039  120A  158A  2727  120A  118A  	fcall	_Lcd_Clear
  1006  003E                     l2141:
  1007                           
  1008                           ;main_prueba3_mini2.c: 124:         if(!RB0)
  1009  003E  1283               	bcf	3,5	;RP0=0, select bank0
  1010  003F  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0040  1806               	btfsc	6,0	;volatile
  1012  0041  2843               	goto	u1871
  1013  0042  2844               	goto	u1870
  1014  0043                     u1871:
  1015  0043  296E               	goto	l2163
  1016  0044                     u1870:
  1017  0044                     l2143:
  1018                           
  1019                           ;main_prueba3_mini2.c: 125:         if(debounce()){
  1020  0044  120A  118A  2758  120A  118A  	fcall	_debounce
  1021  0049  1C03               	btfss	3,0
  1022  004A  284C               	goto	u1881
  1023  004B  284D               	goto	u1880
  1024  004C                     u1881:
  1025  004C  296E               	goto	l2163
  1026  004D                     u1880:
  1027  004D                     l2145:
  1028                           
  1029                           ;main_prueba3_mini2.c: 126:           i = 0;
  1030  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1031  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1032  004F  01C5               	clrf	_i
  1033  0050                     l2147:
  1034                           
  1035                           ;main_prueba3_mini2.c: 127:           hour = edit(7, 1, hour);
  1036  0050  01DF               	clrf	edit@y
  1037  0051  0ADF               	incf	edit@y,f
  1038  0052  0843               	movf	_hour,w
  1039  0053  00EB               	movwf	??_main
  1040  0054  086B               	movf	??_main,w
  1041  0055  00E0               	movwf	edit@parameter
  1042  0056  3007               	movlw	7
  1043  0057  120A  118A  238E  120A  118A  	fcall	_edit
  1044  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1045  005D  1303               	bcf	3,6	;RP1=0, select bank0
  1046  005E  00EC               	movwf	??_main+1
  1047  005F  086C               	movf	??_main+1,w
  1048  0060  00C3               	movwf	_hour
  1049  0061                     l2149:
  1050                           
  1051                           ;main_prueba3_mini2.c: 128:           minute = edit(10, 1, minute);
  1052  0061  01DF               	clrf	edit@y
  1053  0062  0ADF               	incf	edit@y,f
  1054  0063  0844               	movf	_minute,w
  1055  0064  00EB               	movwf	??_main
  1056  0065  086B               	movf	??_main,w
  1057  0066  00E0               	movwf	edit@parameter
  1058  0067  300A               	movlw	10
  1059  0068  120A  118A  238E  120A  118A  	fcall	_edit
  1060  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1061  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1062  006F  00EC               	movwf	??_main+1
  1063  0070  086C               	movf	??_main+1,w
  1064  0071  00C4               	movwf	_minute
  1065  0072                     l2151:
  1066                           
  1067                           ;main_prueba3_mini2.c: 129:           m_day = edit(7, 2, m_day);
  1068  0072  3002               	movlw	2
  1069  0073  00EB               	movwf	??_main
  1070  0074  086B               	movf	??_main,w
  1071  0075  00DF               	movwf	edit@y
  1072  0076  0842               	movf	_m_day,w
  1073  0077  00EC               	movwf	??_main+1
  1074  0078  086C               	movf	??_main+1,w
  1075  0079  00E0               	movwf	edit@parameter
  1076  007A  3007               	movlw	7
  1077  007B  120A  118A  238E  120A  118A  	fcall	_edit
  1078  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0082  00ED               	movwf	??_main+2
  1081  0083  086D               	movf	??_main+2,w
  1082  0084  00C2               	movwf	_m_day
  1083  0085                     l2153:
  1084                           
  1085                           ;main_prueba3_mini2.c: 130:           month = edit(10, 2, month);
  1086  0085  3002               	movlw	2
  1087  0086  00EB               	movwf	??_main
  1088  0087  086B               	movf	??_main,w
  1089  0088  00DF               	movwf	edit@y
  1090  0089  0841               	movf	_month,w
  1091  008A  00EC               	movwf	??_main+1
  1092  008B  086C               	movf	??_main+1,w
  1093  008C  00E0               	movwf	edit@parameter
  1094  008D  300A               	movlw	10
  1095  008E  120A  118A  238E  120A  118A  	fcall	_edit
  1096  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0095  00ED               	movwf	??_main+2
  1099  0096  086D               	movf	??_main+2,w
  1100  0097  00C1               	movwf	_month
  1101  0098                     l2155:
  1102                           
  1103                           ;main_prueba3_mini2.c: 131:           year = edit(15, 2, year);
  1104  0098  3002               	movlw	2
  1105  0099  00EB               	movwf	??_main
  1106  009A  086B               	movf	??_main,w
  1107  009B  00DF               	movwf	edit@y
  1108  009C  0840               	movf	_year,w
  1109  009D  00EC               	movwf	??_main+1
  1110  009E  086C               	movf	??_main+1,w
  1111  009F  00E0               	movwf	edit@parameter
  1112  00A0  300F               	movlw	15
  1113  00A1  120A  118A  238E  120A  118A  	fcall	_edit
  1114  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1115  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1116  00A8  00ED               	movwf	??_main+2
  1117  00A9  086D               	movf	??_main+2,w
  1118  00AA  00C0               	movwf	_year
  1119  00AB                     l2157:	
  1120                           ;main_prueba3_mini2.c: 133:           while(debounce());
  1121                           
  1122  00AB  120A  118A  2758  120A  118A  	fcall	_debounce
  1123  00B0  1803               	btfsc	3,0
  1124  00B1  28B3               	goto	u1891
  1125  00B2  28B4               	goto	u1890
  1126  00B3                     u1891:
  1127  00B3  28AB               	goto	l2157
  1128  00B4                     u1890:
  1129  00B4                     l2159:
  1130                           
  1131                           ;main_prueba3_mini2.c: 136:           minute = decimal_to_bcd(minute);
  1132  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1133  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1134  00B6  0844               	movf	_minute,w
  1135  00B7  120A  118A  26F6  120A  118A  	fcall	_decimal_to_bcd
  1136  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1137  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1138  00BE  00EB               	movwf	??_main
  1139  00BF  086B               	movf	??_main,w
  1140  00C0  00C4               	movwf	_minute
  1141                           
  1142                           ;main_prueba3_mini2.c: 137:           hour = decimal_to_bcd(hour);
  1143  00C1  0843               	movf	_hour,w
  1144  00C2  120A  118A  26F6  120A  118A  	fcall	_decimal_to_bcd
  1145  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1146  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1147  00C9  00EB               	movwf	??_main
  1148  00CA  086B               	movf	??_main,w
  1149  00CB  00C3               	movwf	_hour
  1150                           
  1151                           ;main_prueba3_mini2.c: 138:           m_day = decimal_to_bcd(m_day);
  1152  00CC  0842               	movf	_m_day,w
  1153  00CD  120A  118A  26F6  120A  118A  	fcall	_decimal_to_bcd
  1154  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1155  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1156  00D4  00EB               	movwf	??_main
  1157  00D5  086B               	movf	??_main,w
  1158  00D6  00C2               	movwf	_m_day
  1159                           
  1160                           ;main_prueba3_mini2.c: 139:           month = decimal_to_bcd(month);
  1161  00D7  0841               	movf	_month,w
  1162  00D8  120A  118A  26F6  120A  118A  	fcall	_decimal_to_bcd
  1163  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1164  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1165  00DF  00EB               	movwf	??_main
  1166  00E0  086B               	movf	??_main,w
  1167  00E1  00C1               	movwf	_month
  1168                           
  1169                           ;main_prueba3_mini2.c: 140:           year = decimal_to_bcd(year);
  1170  00E2  0840               	movf	_year,w
  1171  00E3  120A  118A  26F6  120A  118A  	fcall	_decimal_to_bcd
  1172  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1173  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1174  00EA  00EB               	movwf	??_main
  1175  00EB  086B               	movf	??_main,w
  1176  00EC  00C0               	movwf	_year
  1177                           
  1178                           ;main_prueba3_mini2.c: 144:           I2C_Master_Start();
  1179  00ED  120A  158A  26FE  120A  118A  	fcall	_I2C_Master_Start
  1180                           
  1181                           ;main_prueba3_mini2.c: 145:           I2C_Master_Write(0xD0);
  1182  00F2  30D0               	movlw	208
  1183  00F3  00F3               	movwf	I2C_Master_Write@d
  1184  00F4  3000               	movlw	0
  1185  00F5  00F4               	movwf	I2C_Master_Write@d+1
  1186  00F6  120A  158A  2710  120A  118A  	fcall	_I2C_Master_Write
  1187                           
  1188                           ;main_prueba3_mini2.c: 146:           I2C_Master_Write(0);
  1189  00FB  3000               	movlw	0
  1190  00FC  00F3               	movwf	I2C_Master_Write@d
  1191  00FD  00F4               	movwf	I2C_Master_Write@d+1
  1192  00FE  120A  158A  2710  120A  118A  	fcall	_I2C_Master_Write
  1193                           
  1194                           ;main_prueba3_mini2.c: 147:           I2C_Master_Write(0);
  1195  0103  3000               	movlw	0
  1196  0104  00F3               	movwf	I2C_Master_Write@d
  1197  0105  00F4               	movwf	I2C_Master_Write@d+1
  1198  0106  120A  158A  2710  120A  118A  	fcall	_I2C_Master_Write
  1199                           
  1200                           ;main_prueba3_mini2.c: 148:           I2C_Master_Write(minute);
  1201  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1202  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1203  010D  0844               	movf	_minute,w
  1204  010E  00EB               	movwf	??_main
  1205  010F  01EC               	clrf	??_main+1
  1206  0110  086B               	movf	??_main,w
  1207  0111  00F3               	movwf	I2C_Master_Write@d
  1208  0112  086C               	movf	??_main+1,w
  1209  0113  00F4               	movwf	I2C_Master_Write@d+1
  1210  0114  120A  158A  2710  120A  118A  	fcall	_I2C_Master_Write
  1211                           
  1212                           ;main_prueba3_mini2.c: 149:           I2C_Master_Write(hour);
  1213  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1214  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1215  011B  0843               	movf	_hour,w
  1216  011C  00EB               	movwf	??_main
  1217  011D  01EC               	clrf	??_main+1
  1218  011E  086B               	movf	??_main,w
  1219  011F  00F3               	movwf	I2C_Master_Write@d
  1220  0120  086C               	movf	??_main+1,w
  1221  0121  00F4               	movwf	I2C_Master_Write@d+1
  1222  0122  120A  158A  2710  120A  118A  	fcall	_I2C_Master_Write
  1223                           
  1224                           ;main_prueba3_mini2.c: 150:           I2C_Master_Write(1);
  1225  0127  3001               	movlw	1
  1226  0128  00F3               	movwf	I2C_Master_Write@d
  1227  0129  3000               	movlw	0
  1228  012A  00F4               	movwf	I2C_Master_Write@d+1
  1229  012B  120A  158A  2710  120A  118A  	fcall	_I2C_Master_Write
  1230                           
  1231                           ;main_prueba3_mini2.c: 151:           I2C_Master_Write(m_day);
  1232  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1233  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1234  0132  0842               	movf	_m_day,w
  1235  0133  00EB               	movwf	??_main
  1236  0134  01EC               	clrf	??_main+1
  1237  0135  086B               	movf	??_main,w
  1238  0136  00F3               	movwf	I2C_Master_Write@d
  1239  0137  086C               	movf	??_main+1,w
  1240  0138  00F4               	movwf	I2C_Master_Write@d+1
  1241  0139  120A  158A  2710  120A  118A  	fcall	_I2C_Master_Write
  1242                           
  1243                           ;main_prueba3_mini2.c: 152:           I2C_Master_Write(month);
  1244  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1245  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0140  0841               	movf	_month,w
  1247  0141  00EB               	movwf	??_main
  1248  0142  01EC               	clrf	??_main+1
  1249  0143  086B               	movf	??_main,w
  1250  0144  00F3               	movwf	I2C_Master_Write@d
  1251  0145  086C               	movf	??_main+1,w
  1252  0146  00F4               	movwf	I2C_Master_Write@d+1
  1253  0147  120A  158A  2710  120A  118A  	fcall	_I2C_Master_Write
  1254                           
  1255                           ;main_prueba3_mini2.c: 153:           I2C_Master_Write(year);
  1256  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1257  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1258  014E  0840               	movf	_year,w
  1259  014F  00EB               	movwf	??_main
  1260  0150  01EC               	clrf	??_main+1
  1261  0151  086B               	movf	??_main,w
  1262  0152  00F3               	movwf	I2C_Master_Write@d
  1263  0153  086C               	movf	??_main+1,w
  1264  0154  00F4               	movwf	I2C_Master_Write@d+1
  1265  0155  120A  158A  2710  120A  118A  	fcall	_I2C_Master_Write
  1266                           
  1267                           ;main_prueba3_mini2.c: 154:           I2C_Master_Stop();
  1268  015A  120A  158A  2707  120A  118A  	fcall	_I2C_Master_Stop
  1269  015F                     l2161:
  1270                           
  1271                           ;main_prueba3_mini2.c: 156:       _delay((unsigned long)((200)*(8000000/4000.0)));
  1272  015F  3003               	movlw	3
  1273  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1274  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1275  0162  00ED               	movwf	??_main+2
  1276  0163  3008               	movlw	8
  1277  0164  00EC               	movwf	??_main+1
  1278  0165  3076               	movlw	118
  1279  0166  00EB               	movwf	??_main
  1280  0167                     u1907:
  1281  0167  0BEB               	decfsz	??_main,f
  1282  0168  2967               	goto	u1907
  1283  0169  0BEC               	decfsz	??_main+1,f
  1284  016A  2967               	goto	u1907
  1285  016B  0BED               	decfsz	??_main+2,f
  1286  016C  2967               	goto	u1907
  1287  016D  0000               	nop
  1288  016E                     l2163:
  1289                           
  1290                           ;main_prueba3_mini2.c: 159:         I2C_Master_Start();
  1291  016E  120A  158A  26FE  120A  118A  	fcall	_I2C_Master_Start
  1292  0173                     l2165:
  1293                           
  1294                           ;main_prueba3_mini2.c: 160:         I2C_Master_Write(0xD0);
  1295  0173  30D0               	movlw	208
  1296  0174  00F3               	movwf	I2C_Master_Write@d
  1297  0175  3000               	movlw	0
  1298  0176  00F4               	movwf	I2C_Master_Write@d+1
  1299  0177  120A  158A  2710  120A  118A  	fcall	_I2C_Master_Write
  1300  017C                     l2167:
  1301                           
  1302                           ;main_prueba3_mini2.c: 161:         I2C_Master_Write(0);
  1303  017C  3000               	movlw	0
  1304  017D  00F3               	movwf	I2C_Master_Write@d
  1305  017E  00F4               	movwf	I2C_Master_Write@d+1
  1306  017F  120A  158A  2710  120A  118A  	fcall	_I2C_Master_Write
  1307  0184                     l2169:
  1308                           
  1309                           ;main_prueba3_mini2.c: 162:         I2C_Master_RepeatedStart();
  1310  0184  120A  158A  26F5  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1311  0189                     l2171:
  1312                           
  1313                           ;main_prueba3_mini2.c: 163:         I2C_Master_Write(0xD1);
  1314  0189  30D1               	movlw	209
  1315  018A  00F3               	movwf	I2C_Master_Write@d
  1316  018B  3000               	movlw	0
  1317  018C  00F4               	movwf	I2C_Master_Write@d+1
  1318  018D  120A  158A  2710  120A  118A  	fcall	_I2C_Master_Write
  1319  0192                     l2173:
  1320                           
  1321                           ;main_prueba3_mini2.c: 164:         second = I2C_Master_Read(1);
  1322  0192  3001               	movlw	1
  1323  0193  00F3               	movwf	I2C_Master_Read@a
  1324  0194  3000               	movlw	0
  1325  0195  00F4               	movwf	I2C_Master_Read@a+1
  1326  0196  120A  118A  2728  120A  118A  	fcall	_I2C_Master_Read
  1327  019B  0873               	movf	?_I2C_Master_Read,w
  1328  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1329  019D  1303               	bcf	3,6	;RP1=0, select bank0
  1330  019E  00EB               	movwf	??_main
  1331  019F  086B               	movf	??_main,w
  1332  01A0  00FA               	movwf	_second
  1333  01A1                     l2175:
  1334                           
  1335                           ;main_prueba3_mini2.c: 165:         minute = I2C_Master_Read(1);
  1336  01A1  3001               	movlw	1
  1337  01A2  00F3               	movwf	I2C_Master_Read@a
  1338  01A3  3000               	movlw	0
  1339  01A4  00F4               	movwf	I2C_Master_Read@a+1
  1340  01A5  120A  118A  2728  120A  118A  	fcall	_I2C_Master_Read
  1341  01AA  0873               	movf	?_I2C_Master_Read,w
  1342  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1343  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1344  01AD  00EB               	movwf	??_main
  1345  01AE  086B               	movf	??_main,w
  1346  01AF  00C4               	movwf	_minute
  1347  01B0                     l2177:
  1348                           
  1349                           ;main_prueba3_mini2.c: 166:         hour = I2C_Master_Read(1);
  1350  01B0  3001               	movlw	1
  1351  01B1  00F3               	movwf	I2C_Master_Read@a
  1352  01B2  3000               	movlw	0
  1353  01B3  00F4               	movwf	I2C_Master_Read@a+1
  1354  01B4  120A  118A  2728  120A  118A  	fcall	_I2C_Master_Read
  1355  01B9  0873               	movf	?_I2C_Master_Read,w
  1356  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1357  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1358  01BC  00EB               	movwf	??_main
  1359  01BD  086B               	movf	??_main,w
  1360  01BE  00C3               	movwf	_hour
  1361  01BF                     l2179:
  1362                           
  1363                           ;main_prueba3_mini2.c: 167:         I2C_Master_Read(1);
  1364  01BF  3001               	movlw	1
  1365  01C0  00F3               	movwf	I2C_Master_Read@a
  1366  01C1  3000               	movlw	0
  1367  01C2  00F4               	movwf	I2C_Master_Read@a+1
  1368  01C3  120A  118A  2728  120A  118A  	fcall	_I2C_Master_Read
  1369  01C8                     l2181:
  1370                           
  1371                           ;main_prueba3_mini2.c: 168:         m_day = I2C_Master_Read(1);
  1372  01C8  3001               	movlw	1
  1373  01C9  00F3               	movwf	I2C_Master_Read@a
  1374  01CA  3000               	movlw	0
  1375  01CB  00F4               	movwf	I2C_Master_Read@a+1
  1376  01CC  120A  118A  2728  120A  118A  	fcall	_I2C_Master_Read
  1377  01D1  0873               	movf	?_I2C_Master_Read,w
  1378  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1379  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1380  01D4  00EB               	movwf	??_main
  1381  01D5  086B               	movf	??_main,w
  1382  01D6  00C2               	movwf	_m_day
  1383  01D7                     l2183:
  1384                           
  1385                           ;main_prueba3_mini2.c: 169:         month = I2C_Master_Read(1);
  1386  01D7  3001               	movlw	1
  1387  01D8  00F3               	movwf	I2C_Master_Read@a
  1388  01D9  3000               	movlw	0
  1389  01DA  00F4               	movwf	I2C_Master_Read@a+1
  1390  01DB  120A  118A  2728  120A  118A  	fcall	_I2C_Master_Read
  1391  01E0  0873               	movf	?_I2C_Master_Read,w
  1392  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1393  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1394  01E3  00EB               	movwf	??_main
  1395  01E4  086B               	movf	??_main,w
  1396  01E5  00C1               	movwf	_month
  1397  01E6                     l2185:
  1398                           
  1399                           ;main_prueba3_mini2.c: 170:         year = I2C_Master_Read(0);
  1400  01E6  3000               	movlw	0
  1401  01E7  00F3               	movwf	I2C_Master_Read@a
  1402  01E8  00F4               	movwf	I2C_Master_Read@a+1
  1403  01E9  120A  118A  2728  120A  118A  	fcall	_I2C_Master_Read
  1404  01EE  0873               	movf	?_I2C_Master_Read,w
  1405  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1406  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1407  01F1  00EB               	movwf	??_main
  1408  01F2  086B               	movf	??_main,w
  1409  01F3  00C0               	movwf	_year
  1410  01F4                     l2187:
  1411                           
  1412                           ;main_prueba3_mini2.c: 171:         I2C_Master_Stop();
  1413  01F4  120A  158A  2707  120A  118A  	fcall	_I2C_Master_Stop
  1414  01F9                     l2189:
  1415                           
  1416                           ;main_prueba3_mini2.c: 173:         RTC_display();
  1417  01F9  120A  118A  2211  120A  118A  	fcall	_RTC_display
  1418  01FE                     l2191:
  1419                           
  1420                           ;main_prueba3_mini2.c: 178:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1421  01FE  3002               	movlw	2
  1422  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1423  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1424  0201  00ED               	movwf	??_main+2
  1425  0202  3004               	movlw	4
  1426  0203  00EC               	movwf	??_main+1
  1427  0204  30B9               	movlw	185
  1428  0205  00EB               	movwf	??_main
  1429  0206                     u1917:
  1430  0206  0BEB               	decfsz	??_main,f
  1431  0207  2A06               	goto	u1917
  1432  0208  0BEC               	decfsz	??_main+1,f
  1433  0209  2A06               	goto	u1917
  1434  020A  0BED               	decfsz	??_main+2,f
  1435  020B  2A06               	goto	u1917
  1436  020C  2A0D               	nop2
  1437  020D  283E               	goto	l2141
  1438  020E  120A  118A  280C   	ljmp	start
  1439  0211                     __end_of_main:
  1440                           
  1441                           	psect	text1
  1442  07CA                     __ptext1:	
  1443 ;; *************** function _setup *****************
  1444 ;; Defined at:
  1445 ;;		line 308 in file "main_prueba3_mini2.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, status,2, status,0, pclath, cstack
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1459 ;;      Params:         0       0       0       0       0
  1460 ;;      Locals:         0       0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0
  1462 ;;      Totals:         0       0       0       0       0
  1463 ;;Total ram usage:        0 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    3
  1466 ;; This function calls:
  1467 ;;		_I2C_Master_Init
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function _setup
  1475  07CA                     _setup:
  1476  07CA                     l1987:	
  1477                           ;incstack = 0
  1478                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1479                           
  1480                           
  1481                           ;main_prueba3_mini2.c: 310:     ANSEL = 0;
  1482  07CA  1683               	bsf	3,5	;RP0=1, select bank3
  1483  07CB  1703               	bsf	3,6	;RP1=1, select bank3
  1484  07CC  0188               	clrf	8	;volatile
  1485                           
  1486                           ;main_prueba3_mini2.c: 311:     ANSELH = 0;
  1487  07CD  0189               	clrf	9	;volatile
  1488                           
  1489                           ;main_prueba3_mini2.c: 312:     TRISA = 0;
  1490  07CE  1683               	bsf	3,5	;RP0=1, select bank1
  1491  07CF  1303               	bcf	3,6	;RP1=0, select bank1
  1492  07D0  0185               	clrf	5	;volatile
  1493  07D1                     l1989:
  1494                           
  1495                           ;main_prueba3_mini2.c: 313:     TRISB = 0b00000011;
  1496  07D1  3003               	movlw	3
  1497  07D2  0086               	movwf	6	;volatile
  1498  07D3                     l1991:
  1499                           
  1500                           ;main_prueba3_mini2.c: 314:     TRISCbits.TRISC6 = 0;
  1501  07D3  1307               	bcf	7,6	;volatile
  1502  07D4                     l1993:
  1503                           
  1504                           ;main_prueba3_mini2.c: 315:     TRISCbits.TRISC7 = 1;
  1505  07D4  1787               	bsf	7,7	;volatile
  1506  07D5                     l1995:
  1507                           
  1508                           ;main_prueba3_mini2.c: 316:     TRISD = 0;
  1509  07D5  0188               	clrf	8	;volatile
  1510  07D6                     l1997:
  1511                           
  1512                           ;main_prueba3_mini2.c: 317:     TRISE = 0;
  1513  07D6  0189               	clrf	9	;volatile
  1514  07D7                     l1999:
  1515                           
  1516                           ;main_prueba3_mini2.c: 318:     PORTA = 0;
  1517  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1518  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1519  07D9  0185               	clrf	5	;volatile
  1520  07DA                     l2001:
  1521                           
  1522                           ;main_prueba3_mini2.c: 319:     PORTB = 0;
  1523  07DA  0186               	clrf	6	;volatile
  1524  07DB                     l2003:
  1525                           
  1526                           ;main_prueba3_mini2.c: 320:     PORTC = 0;
  1527  07DB  0187               	clrf	7	;volatile
  1528  07DC                     l2005:
  1529                           
  1530                           ;main_prueba3_mini2.c: 321:     PORTD = 0;
  1531  07DC  0188               	clrf	8	;volatile
  1532  07DD                     l2007:
  1533                           
  1534                           ;main_prueba3_mini2.c: 322:     PORTE = 0;
  1535  07DD  0189               	clrf	9	;volatile
  1536  07DE                     l2009:
  1537                           
  1538                           ;main_prueba3_mini2.c: 323:     I2C_Master_Init(100000);
  1539  07DE  3000               	movlw	0
  1540  07DF  00EA               	movwf	I2C_Master_Init@c+3
  1541  07E0  3001               	movlw	1
  1542  07E1  00E9               	movwf	I2C_Master_Init@c+2
  1543  07E2  3086               	movlw	134
  1544  07E3  00E8               	movwf	I2C_Master_Init@c+1
  1545  07E4  30A0               	movlw	160
  1546  07E5  00E7               	movwf	I2C_Master_Init@c
  1547  07E6  120A  118A  26BC  120A  118A  	fcall	_I2C_Master_Init
  1548  07EB                     l170:
  1549  07EB  0008               	return
  1550  07EC                     __end_of_setup:
  1551                           
  1552                           	psect	text2
  1553  06BC                     __ptext2:	
  1554 ;; *************** function _I2C_Master_Init *****************
  1555 ;; Defined at:
  1556 ;;		line 21 in file "I2C.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  c               4   13[BANK0 ] const unsigned long 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0, pclath, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1570 ;;      Params:         0       4       0       0       0
  1571 ;;      Locals:         0       0       0       0       0
  1572 ;;      Temps:          4       0       0       0       0
  1573 ;;      Totals:         4       4       0       0       0
  1574 ;;Total ram usage:        8 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    2
  1577 ;; This function calls:
  1578 ;;		___lldiv
  1579 ;; This function is called by:
  1580 ;;		_setup
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           
  1585                           ;psect for function _I2C_Master_Init
  1586  06BC                     _I2C_Master_Init:
  1587  06BC                     l1889:	
  1588                           ;incstack = 0
  1589                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1590                           
  1591                           
  1592                           ;I2C.c: 21: void I2C_Master_Init(const unsigned long c);I2C.c: 22: {;I2C.c: 23:     SSPC
      +                          ON = 0b00101000;
  1593  06BC  3028               	movlw	40
  1594  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1595  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1596  06BF  0094               	movwf	20	;volatile
  1597  06C0                     l1891:
  1598                           
  1599                           ;I2C.c: 28:     SSPCON2 = 0;
  1600  06C0  1683               	bsf	3,5	;RP0=1, select bank1
  1601  06C1  1303               	bcf	3,6	;RP1=0, select bank1
  1602  06C2  0191               	clrf	17	;volatile
  1603  06C3                     l1893:
  1604                           
  1605                           ;I2C.c: 35:     SSPADD = (8000000/(4*c))-1;
  1606  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  1607  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  1608  06C5  0867               	movf	I2C_Master_Init@c,w
  1609  06C6  00F4               	movwf	??_I2C_Master_Init
  1610  06C7  0868               	movf	I2C_Master_Init@c+1,w
  1611  06C8  00F5               	movwf	??_I2C_Master_Init+1
  1612  06C9  0869               	movf	I2C_Master_Init@c+2,w
  1613  06CA  00F6               	movwf	??_I2C_Master_Init+2
  1614  06CB  086A               	movf	I2C_Master_Init@c+3,w
  1615  06CC  00F7               	movwf	??_I2C_Master_Init+3
  1616  06CD  3002               	movlw	2
  1617  06CE                     u1495:
  1618  06CE  1003               	clrc
  1619  06CF  0DF4               	rlf	??_I2C_Master_Init,f
  1620  06D0  0DF5               	rlf	??_I2C_Master_Init+1,f
  1621  06D1  0DF6               	rlf	??_I2C_Master_Init+2,f
  1622  06D2  0DF7               	rlf	??_I2C_Master_Init+3,f
  1623  06D3                     u1490:
  1624  06D3  3EFF               	addlw	-1
  1625  06D4  1D03               	skipz
  1626  06D5  2ECE               	goto	u1495
  1627  06D6  0877               	movf	??_I2C_Master_Init+3,w
  1628  06D7  00DD               	movwf	___lldiv@divisor+3
  1629  06D8  0876               	movf	??_I2C_Master_Init+2,w
  1630  06D9  00DC               	movwf	___lldiv@divisor+2
  1631  06DA  0875               	movf	??_I2C_Master_Init+1,w
  1632  06DB  00DB               	movwf	___lldiv@divisor+1
  1633  06DC  0874               	movf	??_I2C_Master_Init,w
  1634  06DD  00DA               	movwf	___lldiv@divisor
  1635  06DE  3000               	movlw	0
  1636  06DF  00E1               	movwf	___lldiv@dividend+3
  1637  06E0  307A               	movlw	122
  1638  06E1  00E0               	movwf	___lldiv@dividend+2
  1639  06E2  3012               	movlw	18
  1640  06E3  00DF               	movwf	___lldiv@dividend+1
  1641  06E4  3000               	movlw	0
  1642  06E5  00DE               	movwf	___lldiv@dividend
  1643  06E6  120A  118A  250C  120A  118A  	fcall	___lldiv
  1644  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1645  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1646  06ED  085A               	movf	?___lldiv,w
  1647  06EE  3EFF               	addlw	255
  1648  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  1649  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  1650  06F1  0093               	movwf	19	;volatile
  1651  06F2                     l1895:
  1652                           
  1653                           ;I2C.c: 36:     SSPSTAT = 0;
  1654  06F2  0194               	clrf	20	;volatile
  1655  06F3                     l1897:
  1656                           
  1657                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  1658  06F3  1587               	bsf	7,3	;volatile
  1659  06F4                     l1899:
  1660                           
  1661                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  1662  06F4  1607               	bsf	7,4	;volatile
  1663  06F5                     l199:
  1664  06F5  0008               	return
  1665  06F6                     __end_of_I2C_Master_Init:
  1666                           
  1667                           	psect	text3
  1668  050C                     __ptext3:	
  1669 ;; *************** function ___lldiv *****************
  1670 ;; Defined at:
  1671 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  divisor         4    0[BANK0 ] unsigned long 
  1674 ;;  dividend        4    4[BANK0 ] unsigned long 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  quotient        4    8[BANK0 ] unsigned long 
  1677 ;;  counter         1   12[BANK0 ] unsigned char 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  4    0[BANK0 ] unsigned long 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1687 ;;      Params:         0       8       0       0       0
  1688 ;;      Locals:         0       5       0       0       0
  1689 ;;      Temps:          1       0       0       0       0
  1690 ;;      Totals:         1      13       0       0       0
  1691 ;;Total ram usage:       14 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    1
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_I2C_Master_Init
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           
  1702                           ;psect for function ___lldiv
  1703  050C                     ___lldiv:
  1704  050C                     l1841:	
  1705                           ;incstack = 0
  1706                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1707                           
  1708  050C  3000               	movlw	0
  1709  050D  1283               	bcf	3,5	;RP0=0, select bank0
  1710  050E  1303               	bcf	3,6	;RP1=0, select bank0
  1711  050F  00E5               	movwf	___lldiv@quotient+3
  1712  0510  3000               	movlw	0
  1713  0511  00E4               	movwf	___lldiv@quotient+2
  1714  0512  3000               	movlw	0
  1715  0513  00E3               	movwf	___lldiv@quotient+1
  1716  0514  3000               	movlw	0
  1717  0515  00E2               	movwf	___lldiv@quotient
  1718  0516  085D               	movf	___lldiv@divisor+3,w
  1719  0517  045C               	iorwf	___lldiv@divisor+2,w
  1720  0518  045B               	iorwf	___lldiv@divisor+1,w
  1721  0519  045A               	iorwf	___lldiv@divisor,w
  1722  051A  1903               	skipnz
  1723  051B  2D1D               	goto	u1361
  1724  051C  2D1E               	goto	u1360
  1725  051D                     u1361:
  1726  051D  2D6B               	goto	l1861
  1727  051E                     u1360:
  1728  051E                     l1843:
  1729  051E  01E6               	clrf	___lldiv@counter
  1730  051F  0AE6               	incf	___lldiv@counter,f
  1731  0520  2D2E               	goto	l1847
  1732  0521                     l1845:
  1733  0521  3001               	movlw	1
  1734  0522  00F3               	movwf	??___lldiv
  1735  0523                     u1375:
  1736  0523  1003               	clrc
  1737  0524  0DDA               	rlf	___lldiv@divisor,f
  1738  0525  0DDB               	rlf	___lldiv@divisor+1,f
  1739  0526  0DDC               	rlf	___lldiv@divisor+2,f
  1740  0527  0DDD               	rlf	___lldiv@divisor+3,f
  1741  0528  0BF3               	decfsz	??___lldiv,f
  1742  0529  2D23               	goto	u1375
  1743  052A  3001               	movlw	1
  1744  052B  00F3               	movwf	??___lldiv
  1745  052C  0873               	movf	??___lldiv,w
  1746  052D  07E6               	addwf	___lldiv@counter,f
  1747  052E                     l1847:
  1748  052E  1FDD               	btfss	___lldiv@divisor+3,7
  1749  052F  2D31               	goto	u1381
  1750  0530  2D32               	goto	u1380
  1751  0531                     u1381:
  1752  0531  2D21               	goto	l1845
  1753  0532                     u1380:
  1754  0532                     l1849:
  1755  0532  3001               	movlw	1
  1756  0533  00F3               	movwf	??___lldiv
  1757  0534                     u1395:
  1758  0534  1003               	clrc
  1759  0535  0DE2               	rlf	___lldiv@quotient,f
  1760  0536  0DE3               	rlf	___lldiv@quotient+1,f
  1761  0537  0DE4               	rlf	___lldiv@quotient+2,f
  1762  0538  0DE5               	rlf	___lldiv@quotient+3,f
  1763  0539  0BF3               	decfsz	??___lldiv,f
  1764  053A  2D34               	goto	u1395
  1765  053B                     l1851:
  1766  053B  085D               	movf	___lldiv@divisor+3,w
  1767  053C  0261               	subwf	___lldiv@dividend+3,w
  1768  053D  1D03               	skipz
  1769  053E  2D49               	goto	u1405
  1770  053F  085C               	movf	___lldiv@divisor+2,w
  1771  0540  0260               	subwf	___lldiv@dividend+2,w
  1772  0541  1D03               	skipz
  1773  0542  2D49               	goto	u1405
  1774  0543  085B               	movf	___lldiv@divisor+1,w
  1775  0544  025F               	subwf	___lldiv@dividend+1,w
  1776  0545  1D03               	skipz
  1777  0546  2D49               	goto	u1405
  1778  0547  085A               	movf	___lldiv@divisor,w
  1779  0548  025E               	subwf	___lldiv@dividend,w
  1780  0549                     u1405:
  1781  0549  1C03               	skipc
  1782  054A  2D4C               	goto	u1401
  1783  054B  2D4D               	goto	u1400
  1784  054C                     u1401:
  1785  054C  2D5C               	goto	l1857
  1786  054D                     u1400:
  1787  054D                     l1853:
  1788  054D  085A               	movf	___lldiv@divisor,w
  1789  054E  02DE               	subwf	___lldiv@dividend,f
  1790  054F  085B               	movf	___lldiv@divisor+1,w
  1791  0550  1C03               	skipc
  1792  0551  0F5B               	incfsz	___lldiv@divisor+1,w
  1793  0552  02DF               	subwf	___lldiv@dividend+1,f
  1794  0553  085C               	movf	___lldiv@divisor+2,w
  1795  0554  1C03               	skipc
  1796  0555  0F5C               	incfsz	___lldiv@divisor+2,w
  1797  0556  02E0               	subwf	___lldiv@dividend+2,f
  1798  0557  085D               	movf	___lldiv@divisor+3,w
  1799  0558  1C03               	skipc
  1800  0559  0F5D               	incfsz	___lldiv@divisor+3,w
  1801  055A  02E1               	subwf	___lldiv@dividend+3,f
  1802  055B                     l1855:
  1803  055B  1462               	bsf	___lldiv@quotient,0
  1804  055C                     l1857:
  1805  055C  3001               	movlw	1
  1806  055D                     u1415:
  1807  055D  1003               	clrc
  1808  055E  0CDD               	rrf	___lldiv@divisor+3,f
  1809  055F  0CDC               	rrf	___lldiv@divisor+2,f
  1810  0560  0CDB               	rrf	___lldiv@divisor+1,f
  1811  0561  0CDA               	rrf	___lldiv@divisor,f
  1812  0562  3EFF               	addlw	-1
  1813  0563  1D03               	skipz
  1814  0564  2D5D               	goto	u1415
  1815  0565                     l1859:
  1816  0565  3001               	movlw	1
  1817  0566  02E6               	subwf	___lldiv@counter,f
  1818  0567  1D03               	btfss	3,2
  1819  0568  2D6A               	goto	u1421
  1820  0569  2D6B               	goto	u1420
  1821  056A                     u1421:
  1822  056A  2D32               	goto	l1849
  1823  056B                     u1420:
  1824  056B                     l1861:
  1825  056B  0865               	movf	___lldiv@quotient+3,w
  1826  056C  00DD               	movwf	?___lldiv+3
  1827  056D  0864               	movf	___lldiv@quotient+2,w
  1828  056E  00DC               	movwf	?___lldiv+2
  1829  056F  0863               	movf	___lldiv@quotient+1,w
  1830  0570  00DB               	movwf	?___lldiv+1
  1831  0571  0862               	movf	___lldiv@quotient,w
  1832  0572  00DA               	movwf	?___lldiv
  1833  0573                     l398:
  1834  0573  0008               	return
  1835  0574                     __end_of___lldiv:
  1836                           
  1837                           	psect	text4
  1838  038E                     __ptext4:	
  1839 ;; *************** function _edit *****************
  1840 ;; Defined at:
  1841 ;;		line 261 in file "main_prueba3_mini2.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  x               1    wreg     unsigned char 
  1844 ;;  y               1    5[BANK0 ] unsigned char 
  1845 ;;  parameter       1    6[BANK0 ] unsigned char 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  x               1   10[BANK0 ] unsigned char 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      unsigned char 
  1850 ;; Registers used:
  1851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1857 ;;      Params:         0       2       0       0       0
  1858 ;;      Locals:         0       1       0       0       0
  1859 ;;      Temps:          0       3       0       0       0
  1860 ;;      Totals:         0       6       0       0       0
  1861 ;;Total ram usage:        6 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    4
  1864 ;; This function calls:
  1865 ;;		_LCD_PutC
  1866 ;;		_Lcd_Set_Cursor
  1867 ;;		_Lcd_Write_String
  1868 ;;		___awdiv
  1869 ;;		___awmod
  1870 ;;		_blink
  1871 ;;		_debounce
  1872 ;; This function is called by:
  1873 ;;		_main
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           
  1878                           ;psect for function _edit
  1879  038E                     _edit:
  1880                           
  1881                           ;incstack = 0
  1882                           ; Regs used in _edit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1883                           ;edit@x stored from wreg
  1884  038E  1283               	bcf	3,5	;RP0=0, select bank0
  1885  038F  1303               	bcf	3,6	;RP1=0, select bank0
  1886  0390  00E4               	movwf	edit@x
  1887  0391                     l2023:
  1888  0391                     l2025:	
  1889                           ;main_prueba3_mini2.c: 262:   while(debounce());
  1890                           
  1891  0391  120A  118A  2758  120A  118A  	fcall	_debounce
  1892  0396  1803               	btfsc	3,0
  1893  0397  2B99               	goto	u1711
  1894  0398  2B9A               	goto	u1710
  1895  0399                     u1711:
  1896  0399  2B91               	goto	l2025
  1897  039A                     u1710:
  1898  039A  2C2B               	goto	l2065
  1899  039B                     l2027:
  1900                           
  1901                           ;main_prueba3_mini2.c: 267:     {;main_prueba3_mini2.c: 268:       parameter++;
  1902  039B  3001               	movlw	1
  1903  039C  00E1               	movwf	??_edit
  1904  039D  0861               	movf	??_edit,w
  1905  039E  07E0               	addwf	edit@parameter,f
  1906                           
  1907                           ;main_prueba3_mini2.c: 269:       if(i == 0 && parameter > 23)
  1908  039F  0845               	movf	_i,w
  1909  03A0  1D03               	btfss	3,2
  1910  03A1  2BA3               	goto	u1721
  1911  03A2  2BA4               	goto	u1720
  1912  03A3                     u1721:
  1913  03A3  2BAB               	goto	l2033
  1914  03A4                     u1720:
  1915  03A4                     l2029:
  1916  03A4  3018               	movlw	24
  1917  03A5  0260               	subwf	edit@parameter,w
  1918  03A6  1C03               	skipc
  1919  03A7  2BA9               	goto	u1731
  1920  03A8  2BAA               	goto	u1730
  1921  03A9                     u1731:
  1922  03A9  2BAB               	goto	l2033
  1923  03AA                     u1730:
  1924  03AA                     l2031:
  1925                           
  1926                           ;main_prueba3_mini2.c: 270:         parameter = 0;
  1927  03AA  01E0               	clrf	edit@parameter
  1928  03AB                     l2033:
  1929                           
  1930                           ;main_prueba3_mini2.c: 271:       if(i == 1 && parameter > 59)
  1931  03AB  0345               	decf	_i,w
  1932  03AC  1D03               	btfss	3,2
  1933  03AD  2BAF               	goto	u1741
  1934  03AE  2BB0               	goto	u1740
  1935  03AF                     u1741:
  1936  03AF  2BB7               	goto	l2039
  1937  03B0                     u1740:
  1938  03B0                     l2035:
  1939  03B0  303C               	movlw	60
  1940  03B1  0260               	subwf	edit@parameter,w
  1941  03B2  1C03               	skipc
  1942  03B3  2BB5               	goto	u1751
  1943  03B4  2BB6               	goto	u1750
  1944  03B5                     u1751:
  1945  03B5  2BB7               	goto	l2039
  1946  03B6                     u1750:
  1947  03B6                     l2037:
  1948                           
  1949                           ;main_prueba3_mini2.c: 272:         parameter = 0;
  1950  03B6  01E0               	clrf	edit@parameter
  1951  03B7                     l2039:
  1952                           
  1953                           ;main_prueba3_mini2.c: 273:       if(i == 2 && parameter > 31)
  1954  03B7  3002               	movlw	2
  1955  03B8  0645               	xorwf	_i,w
  1956  03B9  1D03               	btfss	3,2
  1957  03BA  2BBC               	goto	u1761
  1958  03BB  2BBD               	goto	u1760
  1959  03BC                     u1761:
  1960  03BC  2BC5               	goto	l2045
  1961  03BD                     u1760:
  1962  03BD                     l2041:
  1963  03BD  3020               	movlw	32
  1964  03BE  0260               	subwf	edit@parameter,w
  1965  03BF  1C03               	skipc
  1966  03C0  2BC2               	goto	u1771
  1967  03C1  2BC3               	goto	u1770
  1968  03C2                     u1771:
  1969  03C2  2BC5               	goto	l2045
  1970  03C3                     u1770:
  1971  03C3                     l2043:
  1972                           
  1973                           ;main_prueba3_mini2.c: 274:         parameter = 1;
  1974  03C3  01E0               	clrf	edit@parameter
  1975  03C4  0AE0               	incf	edit@parameter,f
  1976  03C5                     l2045:
  1977                           
  1978                           ;main_prueba3_mini2.c: 275:       if(i == 3 && parameter > 12)
  1979  03C5  3003               	movlw	3
  1980  03C6  0645               	xorwf	_i,w
  1981  03C7  1D03               	btfss	3,2
  1982  03C8  2BCA               	goto	u1781
  1983  03C9  2BCB               	goto	u1780
  1984  03CA                     u1781:
  1985  03CA  2BD3               	goto	l2051
  1986  03CB                     u1780:
  1987  03CB                     l2047:
  1988  03CB  300D               	movlw	13
  1989  03CC  0260               	subwf	edit@parameter,w
  1990  03CD  1C03               	skipc
  1991  03CE  2BD0               	goto	u1791
  1992  03CF  2BD1               	goto	u1790
  1993  03D0                     u1791:
  1994  03D0  2BD3               	goto	l2051
  1995  03D1                     u1790:
  1996  03D1                     l2049:
  1997                           
  1998                           ;main_prueba3_mini2.c: 276:         parameter = 1;
  1999  03D1  01E0               	clrf	edit@parameter
  2000  03D2  0AE0               	incf	edit@parameter,f
  2001  03D3                     l2051:
  2002                           
  2003                           ;main_prueba3_mini2.c: 277:       if(i == 4 && parameter > 99)
  2004  03D3  3004               	movlw	4
  2005  03D4  0645               	xorwf	_i,w
  2006  03D5  1D03               	btfss	3,2
  2007  03D6  2BD8               	goto	u1801
  2008  03D7  2BD9               	goto	u1800
  2009  03D8                     u1801:
  2010  03D8  2BE0               	goto	l2057
  2011  03D9                     u1800:
  2012  03D9                     l2053:
  2013  03D9  3064               	movlw	100
  2014  03DA  0260               	subwf	edit@parameter,w
  2015  03DB  1C03               	skipc
  2016  03DC  2BDE               	goto	u1811
  2017  03DD  2BDF               	goto	u1810
  2018  03DE                     u1811:
  2019  03DE  2BE0               	goto	l2057
  2020  03DF                     u1810:
  2021  03DF                     l2055:
  2022                           
  2023                           ;main_prueba3_mini2.c: 278:         parameter = 0;
  2024  03DF  01E0               	clrf	edit@parameter
  2025  03E0                     l2057:
  2026                           
  2027                           ;main_prueba3_mini2.c: 280:       Lcd_Set_Cursor(x, y);
  2028  03E0  085F               	movf	edit@y,w
  2029  03E1  00E1               	movwf	??_edit
  2030  03E2  0861               	movf	??_edit,w
  2031  03E3  00F7               	movwf	Lcd_Set_Cursor@b
  2032  03E4  0864               	movf	edit@x,w
  2033  03E5  120A  118A  2781  120A  118A  	fcall	_Lcd_Set_Cursor
  2034  03EA                     l2059:
  2035                           
  2036                           ;main_prueba3_mini2.c: 281:       LCD_PutC(parameter / 10 + '0');
  2037  03EA  300A               	movlw	10
  2038  03EB  00F3               	movwf	___awdiv@divisor
  2039  03EC  3000               	movlw	0
  2040  03ED  00F4               	movwf	___awdiv@divisor+1
  2041  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2042  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2043  03F0  0860               	movf	edit@parameter,w
  2044  03F1  00E1               	movwf	??_edit
  2045  03F2  01E2               	clrf	??_edit+1
  2046  03F3  0861               	movf	??_edit,w
  2047  03F4  00F5               	movwf	___awdiv@dividend
  2048  03F5  0862               	movf	??_edit+1,w
  2049  03F6  00F6               	movwf	___awdiv@dividend+1
  2050  03F7  120A  118A  24A3  120A  118A  	fcall	___awdiv
  2051  03FC  0873               	movf	?___awdiv,w
  2052  03FD  3E30               	addlw	48
  2053  03FE  120A  158A  2771  120A  118A  	fcall	_LCD_PutC
  2054  0403                     l2061:
  2055                           
  2056                           ;main_prueba3_mini2.c: 282:       LCD_PutC(parameter % 10 + '0');
  2057  0403  300A               	movlw	10
  2058  0404  00F3               	movwf	___awmod@divisor
  2059  0405  3000               	movlw	0
  2060  0406  00F4               	movwf	___awmod@divisor+1
  2061  0407  1283               	bcf	3,5	;RP0=0, select bank0
  2062  0408  1303               	bcf	3,6	;RP1=0, select bank0
  2063  0409  0860               	movf	edit@parameter,w
  2064  040A  00E1               	movwf	??_edit
  2065  040B  01E2               	clrf	??_edit+1
  2066  040C  0861               	movf	??_edit,w
  2067  040D  00F5               	movwf	___awmod@dividend
  2068  040E  0862               	movf	??_edit+1,w
  2069  040F  00F6               	movwf	___awmod@dividend+1
  2070  0410  120A  118A  2574  120A  118A  	fcall	___awmod
  2071  0415  0873               	movf	?___awmod,w
  2072  0416  3E30               	addlw	48
  2073  0417  120A  158A  2771  120A  118A  	fcall	_LCD_PutC
  2074  041C                     l2063:
  2075                           
  2076                           ;main_prueba3_mini2.c: 283:       _delay((unsigned long)((200)*(8000000/4000.0)));
  2077  041C  3003               	movlw	3
  2078  041D  1283               	bcf	3,5	;RP0=0, select bank0
  2079  041E  1303               	bcf	3,6	;RP1=0, select bank0
  2080  041F  00E3               	movwf	??_edit+2
  2081  0420  3008               	movlw	8
  2082  0421  00E2               	movwf	??_edit+1
  2083  0422  3076               	movlw	118
  2084  0423  00E1               	movwf	??_edit
  2085  0424                     u1927:
  2086  0424  0BE1               	decfsz	??_edit,f
  2087  0425  2C24               	goto	u1927
  2088  0426  0BE2               	decfsz	??_edit+1,f
  2089  0427  2C24               	goto	u1927
  2090  0428  0BE3               	decfsz	??_edit+2,f
  2091  0429  2C24               	goto	u1927
  2092  042A  0000               	nop
  2093  042B                     l2065:
  2094                           
  2095                           ;main_prueba3_mini2.c: 266:     while(!RB1)
  2096  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2097  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2098  042D  1C86               	btfss	6,1	;volatile
  2099  042E  2C30               	goto	u1821
  2100  042F  2C31               	goto	u1820
  2101  0430                     u1821:
  2102  0430  2B9B               	goto	l2027
  2103  0431                     u1820:
  2104  0431                     l2067:
  2105                           
  2106                           ;main_prueba3_mini2.c: 287:     Lcd_Set_Cursor(x, y);
  2107  0431  085F               	movf	edit@y,w
  2108  0432  00E1               	movwf	??_edit
  2109  0433  0861               	movf	??_edit,w
  2110  0434  00F7               	movwf	Lcd_Set_Cursor@b
  2111  0435  0864               	movf	edit@x,w
  2112  0436  120A  118A  2781  120A  118A  	fcall	_Lcd_Set_Cursor
  2113  043B                     l2069:
  2114                           
  2115                           ;main_prueba3_mini2.c: 288:     Lcd_Write_String("  ");
  2116  043B  3011               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2117  043C  00F6               	movwf	Lcd_Write_String@a
  2118  043D  3080               	movlw	128
  2119  043E  00F7               	movwf	Lcd_Write_String@a+1
  2120  043F  120A  118A  2676  120A  118A  	fcall	_Lcd_Write_String
  2121  0444                     l2071:
  2122                           
  2123                           ;main_prueba3_mini2.c: 289:     blink();
  2124  0444  120A  158A  27C0  120A  118A  	fcall	_blink
  2125  0449                     l2073:
  2126                           
  2127                           ;main_prueba3_mini2.c: 291:     Lcd_Set_Cursor(x, y);
  2128  0449  1283               	bcf	3,5	;RP0=0, select bank0
  2129  044A  1303               	bcf	3,6	;RP1=0, select bank0
  2130  044B  085F               	movf	edit@y,w
  2131  044C  00E1               	movwf	??_edit
  2132  044D  0861               	movf	??_edit,w
  2133  044E  00F7               	movwf	Lcd_Set_Cursor@b
  2134  044F  0864               	movf	edit@x,w
  2135  0450  120A  118A  2781  120A  118A  	fcall	_Lcd_Set_Cursor
  2136  0455                     l2075:
  2137                           
  2138                           ;main_prueba3_mini2.c: 292:     LCD_PutC(parameter / 10 + '0');
  2139  0455  300A               	movlw	10
  2140  0456  00F3               	movwf	___awdiv@divisor
  2141  0457  3000               	movlw	0
  2142  0458  00F4               	movwf	___awdiv@divisor+1
  2143  0459  1283               	bcf	3,5	;RP0=0, select bank0
  2144  045A  1303               	bcf	3,6	;RP1=0, select bank0
  2145  045B  0860               	movf	edit@parameter,w
  2146  045C  00E1               	movwf	??_edit
  2147  045D  01E2               	clrf	??_edit+1
  2148  045E  0861               	movf	??_edit,w
  2149  045F  00F5               	movwf	___awdiv@dividend
  2150  0460  0862               	movf	??_edit+1,w
  2151  0461  00F6               	movwf	___awdiv@dividend+1
  2152  0462  120A  118A  24A3  120A  118A  	fcall	___awdiv
  2153  0467  0873               	movf	?___awdiv,w
  2154  0468  3E30               	addlw	48
  2155  0469  120A  158A  2771  120A  118A  	fcall	_LCD_PutC
  2156  046E                     l2077:
  2157                           
  2158                           ;main_prueba3_mini2.c: 293:     LCD_PutC(parameter % 10 + '0');
  2159  046E  300A               	movlw	10
  2160  046F  00F3               	movwf	___awmod@divisor
  2161  0470  3000               	movlw	0
  2162  0471  00F4               	movwf	___awmod@divisor+1
  2163  0472  1283               	bcf	3,5	;RP0=0, select bank0
  2164  0473  1303               	bcf	3,6	;RP1=0, select bank0
  2165  0474  0860               	movf	edit@parameter,w
  2166  0475  00E1               	movwf	??_edit
  2167  0476  01E2               	clrf	??_edit+1
  2168  0477  0861               	movf	??_edit,w
  2169  0478  00F5               	movwf	___awmod@dividend
  2170  0479  0862               	movf	??_edit+1,w
  2171  047A  00F6               	movwf	___awmod@dividend+1
  2172  047B  120A  118A  2574  120A  118A  	fcall	___awmod
  2173  0480  0873               	movf	?___awmod,w
  2174  0481  3E30               	addlw	48
  2175  0482  120A  158A  2771  120A  118A  	fcall	_LCD_PutC
  2176  0487                     l2079:
  2177                           
  2178                           ;main_prueba3_mini2.c: 294:     blink();
  2179  0487  120A  158A  27C0  120A  118A  	fcall	_blink
  2180  048C                     l2081:
  2181                           
  2182                           ;main_prueba3_mini2.c: 296:     if(!RB0)
  2183  048C  1283               	bcf	3,5	;RP0=0, select bank0
  2184  048D  1303               	bcf	3,6	;RP1=0, select bank0
  2185  048E  1806               	btfsc	6,0	;volatile
  2186  048F  2C91               	goto	u1831
  2187  0490  2C92               	goto	u1830
  2188  0491                     u1831:
  2189  0491  2C2B               	goto	l2065
  2190  0492                     u1830:
  2191  0492                     l2083:
  2192                           
  2193                           ;main_prueba3_mini2.c: 297:     if(debounce())
  2194  0492  120A  118A  2758  120A  118A  	fcall	_debounce
  2195  0497  1C03               	btfss	3,0
  2196  0498  2C9A               	goto	u1841
  2197  0499  2C9B               	goto	u1840
  2198  049A                     u1841:
  2199  049A  2C2B               	goto	l2065
  2200  049B                     u1840:
  2201  049B                     l2085:
  2202                           
  2203                           ;main_prueba3_mini2.c: 298:     {;main_prueba3_mini2.c: 299:       i++;
  2204  049B  3001               	movlw	1
  2205  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2206  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2207  049E  00E1               	movwf	??_edit
  2208  049F  0861               	movf	??_edit,w
  2209  04A0  07C5               	addwf	_i,f
  2210  04A1                     l2087:
  2211                           
  2212                           ;main_prueba3_mini2.c: 300:       return parameter;
  2213  04A1  0860               	movf	edit@parameter,w
  2214  04A2                     l165:
  2215  04A2  0008               	return
  2216  04A3                     __end_of_edit:
  2217                           
  2218                           	psect	text5
  2219  0758                     __ptext5:	
  2220 ;; *************** function _debounce *****************
  2221 ;; Defined at:
  2222 ;;		line 239 in file "main_prueba3_mini2.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  i               1    6[COMMON] unsigned char 
  2227 ;;  count           1    5[COMMON] unsigned char 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;		None               void
  2230 ;; Registers used:
  2231 ;;		wreg, status,2, status,0
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2237 ;;      Params:         0       0       0       0       0
  2238 ;;      Locals:         2       0       0       0       0
  2239 ;;      Temps:          2       0       0       0       0
  2240 ;;      Totals:         4       0       0       0       0
  2241 ;;Total ram usage:        4 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    1
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_main
  2248 ;;		_edit
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _debounce
  2254  0758                     _debounce:
  2255  0758                     l1437:	
  2256                           ;incstack = 0
  2257                           ; Regs used in _debounce: [wreg+status,2+status,0]
  2258                           
  2259                           
  2260                           ;main_prueba3_mini2.c: 240:   uint8_t count = 0;
  2261  0758  01F5               	clrf	debounce@count
  2262                           
  2263                           ;main_prueba3_mini2.c: 241:   for(uint8_t i = 0; i < 5; i++) {
  2264  0759  01F6               	clrf	debounce@i
  2265  075A                     l135:
  2266                           
  2267                           ;main_prueba3_mini2.c: 242:     if (RB0 == 0)
  2268  075A  1283               	bcf	3,5	;RP0=0, select bank0
  2269  075B  1303               	bcf	3,6	;RP1=0, select bank0
  2270  075C  1806               	btfsc	6,0	;volatile
  2271  075D  2F5F               	goto	u821
  2272  075E  2F60               	goto	u820
  2273  075F                     u821:
  2274  075F  2F64               	goto	l1445
  2275  0760                     u820:
  2276  0760                     l1443:
  2277                           
  2278                           ;main_prueba3_mini2.c: 243:       count++;
  2279  0760  3001               	movlw	1
  2280  0761  00F3               	movwf	??_debounce
  2281  0762  0873               	movf	??_debounce,w
  2282  0763  07F5               	addwf	debounce@count,f
  2283  0764                     l1445:
  2284                           
  2285                           ;main_prueba3_mini2.c: 244:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2286  0764  301A               	movlw	26
  2287  0765  00F4               	movwf	??_debounce+1
  2288  0766  30F8               	movlw	248
  2289  0767  00F3               	movwf	??_debounce
  2290  0768                     u1937:
  2291  0768  0BF3               	decfsz	??_debounce,f
  2292  0769  2F68               	goto	u1937
  2293  076A  0BF4               	decfsz	??_debounce+1,f
  2294  076B  2F68               	goto	u1937
  2295  076C  0000               	nop
  2296  076D                     l1447:
  2297                           
  2298                           ;main_prueba3_mini2.c: 245:   }
  2299  076D  3001               	movlw	1
  2300  076E  00F3               	movwf	??_debounce
  2301  076F  0873               	movf	??_debounce,w
  2302  0770  07F6               	addwf	debounce@i,f
  2303  0771  3005               	movlw	5
  2304  0772  0276               	subwf	debounce@i,w
  2305  0773  1C03               	skipc
  2306  0774  2F76               	goto	u831
  2307  0775  2F77               	goto	u830
  2308  0776                     u831:
  2309  0776  2F5A               	goto	l135
  2310  0777                     u830:
  2311  0777                     l1449:
  2312                           
  2313                           ;main_prueba3_mini2.c: 246:   if(count > 2) return 1;
  2314  0777  3003               	movlw	3
  2315  0778  0275               	subwf	debounce@count,w
  2316  0779  1C03               	skipc
  2317  077A  2F7C               	goto	u841
  2318  077B  2F7D               	goto	u840
  2319  077C                     u841:
  2320  077C  2F7F               	goto	l1457
  2321  077D                     u840:
  2322  077D                     l1451:
  2323  077D  1403               	setc
  2324  077E  2F80               	goto	l139
  2325  077F                     l1457:
  2326  077F  1003               	clrc
  2327  0780                     l139:
  2328  0780  0008               	return
  2329  0781                     __end_of_debounce:
  2330                           
  2331                           	psect	text6
  2332  0FC0                     __ptext6:	
  2333 ;; *************** function _blink *****************
  2334 ;; Defined at:
  2335 ;;		line 251 in file "main_prueba3_mini2.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;		None
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  j               1    5[COMMON] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         0       0       0       0       0
  2350 ;;      Locals:         1       0       0       0       0
  2351 ;;      Temps:          2       0       0       0       0
  2352 ;;      Totals:         3       0       0       0       0
  2353 ;;Total ram usage:        3 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    1
  2356 ;; This function calls:
  2357 ;;		Nothing
  2358 ;; This function is called by:
  2359 ;;		_edit
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363                           
  2364                           ;psect for function _blink
  2365  0FC0                     _blink:
  2366  0FC0                     l1485:	
  2367                           ;incstack = 0
  2368                           ; Regs used in _blink: [wreg+status,2+status,0]
  2369                           
  2370                           
  2371                           ;main_prueba3_mini2.c: 253:   uint8_t j = 0;
  2372  0FC0  01F5               	clrf	blink@j
  2373                           
  2374                           ;main_prueba3_mini2.c: 254:   while(j < 100 && RB0 && RB1) {
  2375  0FC1  2FCF               	goto	l1491
  2376  0FC2                     l1487:
  2377                           
  2378                           ;main_prueba3_mini2.c: 255:     j++;
  2379  0FC2  3001               	movlw	1
  2380  0FC3  00F3               	movwf	??_blink
  2381  0FC4  0873               	movf	??_blink,w
  2382  0FC5  07F5               	addwf	blink@j,f
  2383  0FC6                     l1489:
  2384                           
  2385                           ;main_prueba3_mini2.c: 256:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2386  0FC6  300D               	movlw	13
  2387  0FC7  00F4               	movwf	??_blink+1
  2388  0FC8  30FB               	movlw	251
  2389  0FC9  00F3               	movwf	??_blink
  2390  0FCA                     u1947:
  2391  0FCA  0BF3               	decfsz	??_blink,f
  2392  0FCB  2FCA               	goto	u1947
  2393  0FCC  0BF4               	decfsz	??_blink+1,f
  2394  0FCD  2FCA               	goto	u1947
  2395  0FCE  2FCF               	nop2
  2396  0FCF                     l1491:
  2397                           
  2398                           ;main_prueba3_mini2.c: 254:   while(j < 100 && RB0 && RB1) {
  2399  0FCF  3064               	movlw	100
  2400  0FD0  0275               	subwf	blink@j,w
  2401  0FD1  1803               	skipnc
  2402  0FD2  2FD4               	goto	u911
  2403  0FD3  2FD5               	goto	u910
  2404  0FD4                     u911:
  2405  0FD4  2FDF               	goto	l148
  2406  0FD5                     u910:
  2407  0FD5                     l1493:
  2408  0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  2409  0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  2410  0FD7  1C06               	btfss	6,0	;volatile
  2411  0FD8  2FDA               	goto	u921
  2412  0FD9  2FDB               	goto	u920
  2413  0FDA                     u921:
  2414  0FDA  2FDF               	goto	l148
  2415  0FDB                     u920:
  2416  0FDB                     l1495:
  2417  0FDB  1886               	btfsc	6,1	;volatile
  2418  0FDC  2FDE               	goto	u931
  2419  0FDD  2FDF               	goto	u930
  2420  0FDE                     u931:
  2421  0FDE  2FC2               	goto	l1487
  2422  0FDF                     u930:
  2423  0FDF                     l148:
  2424  0FDF  0008               	return
  2425  0FE0                     __end_of_blink:
  2426                           
  2427                           	psect	text7
  2428  0F71                     __ptext7:	
  2429 ;; *************** function _LCD_PutC *****************
  2430 ;; Defined at:
  2431 ;;		line 105 in file "LCD.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  LCD_Char        1    wreg     unsigned char 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  LCD_Char        1    7[COMMON] unsigned char 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, status,2, status,0, pclath, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2445 ;;      Params:         0       0       0       0       0
  2446 ;;      Locals:         1       0       0       0       0
  2447 ;;      Temps:          1       0       0       0       0
  2448 ;;      Totals:         2       0       0       0       0
  2449 ;;Total ram usage:        2 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    2
  2452 ;; This function calls:
  2453 ;;		_LCD_Write_Nibble
  2454 ;; This function is called by:
  2455 ;;		_edit
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           
  2460                           ;psect for function _LCD_PutC
  2461  0F71                     _LCD_PutC:
  2462                           
  2463                           ;incstack = 0
  2464                           ; Regs used in _LCD_PutC: [wreg+status,2+status,0+pclath+cstack]
  2465                           ;LCD_PutC@LCD_Char stored from wreg
  2466  0F71  00F7               	movwf	LCD_PutC@LCD_Char
  2467  0F72                     l1497:
  2468                           
  2469                           ;LCD.c: 106:   PORTEbits.RE0 = 1;
  2470  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0F74  1409               	bsf	9,0	;volatile
  2473  0F75                     l1499:
  2474                           
  2475                           ;LCD.c: 107:   LCD_Write_Nibble(LCD_Char >> 4);
  2476  0F75  0877               	movf	LCD_PutC@LCD_Char,w
  2477  0F76  00F6               	movwf	??_LCD_PutC
  2478  0F77  3004               	movlw	4
  2479  0F78                     u945:
  2480  0F78  1003               	clrc
  2481  0F79  0CF6               	rrf	??_LCD_PutC,f
  2482  0F7A  3EFF               	addlw	-1
  2483  0F7B  1D03               	skipz
  2484  0F7C  2F78               	goto	u945
  2485  0F7D  0876               	movf	??_LCD_PutC,w
  2486  0F7E  120A  118A  25CF  120A  158A  	fcall	_LCD_Write_Nibble
  2487                           
  2488                           ;LCD.c: 108:   LCD_Write_Nibble(LCD_Char );
  2489  0F83  0877               	movf	LCD_PutC@LCD_Char,w
  2490  0F84  120A  118A  25CF  120A  158A  	fcall	_LCD_Write_Nibble
  2491  0F89                     l276:
  2492  0F89  0008               	return
  2493  0F8A                     __end_of_LCD_PutC:
  2494                           
  2495                           	psect	text8
  2496  05CF                     __ptext8:	
  2497 ;; *************** function _LCD_Write_Nibble *****************
  2498 ;; Defined at:
  2499 ;;		line 89 in file "LCD.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  n               1    wreg     unsigned char 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  n               1    5[COMMON] unsigned char 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg, status,2, status,0
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2513 ;;      Params:         0       0       0       0       0
  2514 ;;      Locals:         1       0       0       0       0
  2515 ;;      Temps:          2       0       0       0       0
  2516 ;;      Totals:         3       0       0       0       0
  2517 ;;Total ram usage:        3 bytes
  2518 ;; Hardware stack levels used:    1
  2519 ;; Hardware stack levels required when called:    1
  2520 ;; This function calls:
  2521 ;;		Nothing
  2522 ;; This function is called by:
  2523 ;;		_LCD_PutC
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           
  2528                           ;psect for function _LCD_Write_Nibble
  2529  05CF                     _LCD_Write_Nibble:
  2530                           
  2531                           ;incstack = 0
  2532                           ; Regs used in _LCD_Write_Nibble: [wreg+status,2+status,0]
  2533                           ;LCD_Write_Nibble@n stored from wreg
  2534  05CF  00F5               	movwf	LCD_Write_Nibble@n
  2535  05D0                     l1383:
  2536                           
  2537                           ;LCD.c: 90:   PORTEbits.RE0 = PORTEbits.RE0;
  2538  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  2539  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  2540  05D2  1809               	btfsc	9,0	;volatile
  2541  05D3  2DD5               	goto	u691
  2542  05D4  2DD9               	goto	u690
  2543  05D5                     u691:
  2544  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  2545  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  2546  05D7  1409               	bsf	9,0	;volatile
  2547  05D8  2DDC               	goto	u704
  2548  05D9                     u690:
  2549  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  2550  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  2551  05DB  1009               	bcf	9,0	;volatile
  2552  05DC                     u704:
  2553  05DC                     l1385:
  2554                           
  2555                           ;LCD.c: 91:   PORTDbits.RD4 = n & 0x01;
  2556  05DC  0875               	movf	LCD_Write_Nibble@n,w
  2557  05DD  3901               	andlw	1
  2558  05DE  00F3               	movwf	??_LCD_Write_Nibble
  2559  05DF  0EF3               	swapf	??_LCD_Write_Nibble,f
  2560  05E0  0808               	movf	8,w	;volatile
  2561  05E1  0673               	xorwf	??_LCD_Write_Nibble,w
  2562  05E2  39EF               	andlw	-17
  2563  05E3  0673               	xorwf	??_LCD_Write_Nibble,w
  2564  05E4  0088               	movwf	8	;volatile
  2565                           
  2566                           ;LCD.c: 92:   PORTDbits.RD5 = (n >> 1) & 0x01;
  2567  05E5  0875               	movf	LCD_Write_Nibble@n,w
  2568  05E6  00F3               	movwf	??_LCD_Write_Nibble
  2569  05E7  1003               	clrc
  2570  05E8  0C73               	rrf	??_LCD_Write_Nibble,w
  2571  05E9  3901               	andlw	1
  2572  05EA  00F4               	movwf	??_LCD_Write_Nibble+1
  2573  05EB  0EF4               	swapf	??_LCD_Write_Nibble+1,f
  2574  05EC  0DF4               	rlf	??_LCD_Write_Nibble+1,f
  2575  05ED  0808               	movf	8,w	;volatile
  2576  05EE  0674               	xorwf	??_LCD_Write_Nibble+1,w
  2577  05EF  39DF               	andlw	-33
  2578  05F0  0674               	xorwf	??_LCD_Write_Nibble+1,w
  2579  05F1  0088               	movwf	8	;volatile
  2580                           
  2581                           ;LCD.c: 93:   PORTDbits.RD6 = (n >> 2) & 0x01;
  2582  05F2  0875               	movf	LCD_Write_Nibble@n,w
  2583  05F3  00F3               	movwf	??_LCD_Write_Nibble
  2584  05F4  3002               	movlw	2
  2585  05F5                     u715:
  2586  05F5  1003               	clrc
  2587  05F6  0CF3               	rrf	??_LCD_Write_Nibble,f
  2588  05F7  3EFF               	addlw	-1
  2589  05F8  1D03               	skipz
  2590  05F9  2DF5               	goto	u715
  2591  05FA  0873               	movf	??_LCD_Write_Nibble,w
  2592  05FB  3901               	andlw	1
  2593  05FC  00F4               	movwf	??_LCD_Write_Nibble+1
  2594  05FD  0EF4               	swapf	??_LCD_Write_Nibble+1,f
  2595  05FE  0DF4               	rlf	??_LCD_Write_Nibble+1,f
  2596  05FF  0DF4               	rlf	??_LCD_Write_Nibble+1,f
  2597  0600  0808               	movf	8,w	;volatile
  2598  0601  0674               	xorwf	??_LCD_Write_Nibble+1,w
  2599  0602  39BF               	andlw	-65
  2600  0603  0674               	xorwf	??_LCD_Write_Nibble+1,w
  2601  0604  0088               	movwf	8	;volatile
  2602                           
  2603                           ;LCD.c: 94:   PORTDbits.RD7 = (n >> 3) & 0x01;
  2604  0605  0875               	movf	LCD_Write_Nibble@n,w
  2605  0606  00F3               	movwf	??_LCD_Write_Nibble
  2606  0607  3003               	movlw	3
  2607  0608                     u725:
  2608  0608  1003               	clrc
  2609  0609  0CF3               	rrf	??_LCD_Write_Nibble,f
  2610  060A  3EFF               	addlw	-1
  2611  060B  1D03               	skipz
  2612  060C  2E08               	goto	u725
  2613  060D  0873               	movf	??_LCD_Write_Nibble,w
  2614  060E  3901               	andlw	1
  2615  060F  00F4               	movwf	??_LCD_Write_Nibble+1
  2616  0610  0CF4               	rrf	??_LCD_Write_Nibble+1,f
  2617  0611  0CF4               	rrf	??_LCD_Write_Nibble+1,f
  2618  0612  0808               	movf	8,w	;volatile
  2619  0613  0674               	xorwf	??_LCD_Write_Nibble+1,w
  2620  0614  397F               	andlw	-129
  2621  0615  0674               	xorwf	??_LCD_Write_Nibble+1,w
  2622  0616  0088               	movwf	8	;volatile
  2623  0617                     l1387:
  2624                           
  2625                           ;LCD.c: 97:   PORTEbits.RE2 = 0;
  2626  0617  1109               	bcf	9,2	;volatile
  2627  0618                     l1389:
  2628                           
  2629                           ;LCD.c: 98:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  2630  0618  2E19               	nop2	;2 cycle nop
  2631  0619                     l1391:
  2632                           
  2633                           ;LCD.c: 99:   PORTEbits.RE2 = 1;
  2634  0619  1283               	bcf	3,5	;RP0=0, select bank0
  2635  061A  1303               	bcf	3,6	;RP1=0, select bank0
  2636  061B  1509               	bsf	9,2	;volatile
  2637  061C                     l1393:
  2638                           
  2639                           ;LCD.c: 100:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  2640  061C  2E1D               	nop2	;2 cycle nop
  2641  061D                     l1395:
  2642                           
  2643                           ;LCD.c: 101:   PORTEbits.RE2 = 0;
  2644  061D  1283               	bcf	3,5	;RP0=0, select bank0
  2645  061E  1303               	bcf	3,6	;RP1=0, select bank0
  2646  061F  1109               	bcf	9,2	;volatile
  2647  0620                     l1397:
  2648                           
  2649                           ;LCD.c: 102:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  2650  0620  3042               	movlw	66
  2651  0621  00F3               	movwf	??_LCD_Write_Nibble
  2652  0622                     u1957:
  2653  0622  0BF3               	decfsz	??_LCD_Write_Nibble,f
  2654  0623  2E22               	goto	u1957
  2655  0624  0000               	nop
  2656  0625                     l273:
  2657  0625  0008               	return
  2658  0626                     __end_of_LCD_Write_Nibble:
  2659                           
  2660                           	psect	text9
  2661  06F6                     __ptext9:	
  2662 ;; *************** function _decimal_to_bcd *****************
  2663 ;; Defined at:
  2664 ;;		line 204 in file "main_prueba3_mini2.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  number          1    wreg     unsigned char 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  number          1    9[BANK0 ] unsigned char 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      unsigned char 
  2671 ;; Registers used:
  2672 ;;		wreg, status,2, status,0, pclath, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2678 ;;      Params:         0       0       0       0       0
  2679 ;;      Locals:         0       1       0       0       0
  2680 ;;      Temps:          0       5       0       0       0
  2681 ;;      Totals:         0       6       0       0       0
  2682 ;;Total ram usage:        6 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    2
  2685 ;; This function calls:
  2686 ;;		___awdiv
  2687 ;;		___awmod
  2688 ;; This function is called by:
  2689 ;;		_main
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           
  2694                           ;psect for function _decimal_to_bcd
  2695  06F6                     _decimal_to_bcd:
  2696                           
  2697                           ;incstack = 0
  2698                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  2699                           ;decimal_to_bcd@number stored from wreg
  2700  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  2701  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  2702  06F8  00E3               	movwf	decimal_to_bcd@number
  2703  06F9                     l2091:
  2704                           
  2705                           ;main_prueba3_mini2.c: 205:   return(((number / 10) << 4) + (number % 10));
  2706  06F9  300A               	movlw	10
  2707  06FA  00F3               	movwf	___awdiv@divisor
  2708  06FB  3000               	movlw	0
  2709  06FC  00F4               	movwf	___awdiv@divisor+1
  2710  06FD  0863               	movf	decimal_to_bcd@number,w
  2711  06FE  00DE               	movwf	??_decimal_to_bcd
  2712  06FF  01DF               	clrf	??_decimal_to_bcd+1
  2713  0700  085E               	movf	??_decimal_to_bcd,w
  2714  0701  00F5               	movwf	___awdiv@dividend
  2715  0702  085F               	movf	??_decimal_to_bcd+1,w
  2716  0703  00F6               	movwf	___awdiv@dividend+1
  2717  0704  120A  118A  24A3  120A  118A  	fcall	___awdiv
  2718  0709  0873               	movf	?___awdiv,w
  2719  070A  1283               	bcf	3,5	;RP0=0, select bank0
  2720  070B  1303               	bcf	3,6	;RP1=0, select bank0
  2721  070C  00E0               	movwf	??_decimal_to_bcd+2
  2722  070D  3004               	movlw	4
  2723  070E                     u1855:
  2724  070E  1003               	clrc
  2725  070F  0DE0               	rlf	??_decimal_to_bcd+2,f
  2726  0710  3EFF               	addlw	-1
  2727  0711  1D03               	skipz
  2728  0712  2F0E               	goto	u1855
  2729  0713  300A               	movlw	10
  2730  0714  00F3               	movwf	___awmod@divisor
  2731  0715  3000               	movlw	0
  2732  0716  00F4               	movwf	___awmod@divisor+1
  2733  0717  0863               	movf	decimal_to_bcd@number,w
  2734  0718  00E1               	movwf	??_decimal_to_bcd+3
  2735  0719  01E2               	clrf	??_decimal_to_bcd+4
  2736  071A  0861               	movf	??_decimal_to_bcd+3,w
  2737  071B  00F5               	movwf	___awmod@dividend
  2738  071C  0862               	movf	??_decimal_to_bcd+4,w
  2739  071D  00F6               	movwf	___awmod@dividend+1
  2740  071E  120A  118A  2574  120A  118A  	fcall	___awmod
  2741  0723  0873               	movf	?___awmod,w
  2742  0724  1283               	bcf	3,5	;RP0=0, select bank0
  2743  0725  1303               	bcf	3,6	;RP1=0, select bank0
  2744  0726  0760               	addwf	??_decimal_to_bcd+2,w
  2745  0727                     l129:
  2746  0727  0008               	return
  2747  0728                     __end_of_decimal_to_bcd:
  2748                           
  2749                           	psect	text10
  2750  0211                     __ptext10:	
  2751 ;; *************** function _RTC_display *****************
  2752 ;; Defined at:
  2753 ;;		line 208 in file "main_prueba3_mini2.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;		None
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;		None
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      void 
  2760 ;; Registers used:
  2761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2767 ;;      Params:         0       0       0       0       0
  2768 ;;      Locals:         0       0       0       0       0
  2769 ;;      Temps:          0       3       0       0       0
  2770 ;;      Totals:         0       3       0       0       0
  2771 ;;Total ram usage:        3 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    4
  2774 ;; This function calls:
  2775 ;;		_Lcd_Set_Cursor
  2776 ;;		_Lcd_Write_String
  2777 ;;		___awdiv
  2778 ;;		___awmod
  2779 ;;		_bcd_to_decimal
  2780 ;; This function is called by:
  2781 ;;		_main
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           
  2786                           ;psect for function _RTC_display
  2787  0211                     _RTC_display:
  2788  0211                     l2127:	
  2789                           ;incstack = 0
  2790                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2791                           
  2792                           
  2793                           ;main_prueba3_mini2.c: 210:     second = bcd_to_decimal(second);
  2794  0211  087A               	movf	_second,w
  2795  0212  120A  158A  27A4  120A  118A  	fcall	_bcd_to_decimal
  2796  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2797  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2798  0219  00DF               	movwf	??_RTC_display
  2799  021A  085F               	movf	??_RTC_display,w
  2800  021B  00FA               	movwf	_second
  2801                           
  2802                           ;main_prueba3_mini2.c: 211:     minute = bcd_to_decimal(minute);
  2803  021C  0844               	movf	_minute,w
  2804  021D  120A  158A  27A4  120A  118A  	fcall	_bcd_to_decimal
  2805  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2806  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2807  0224  00DF               	movwf	??_RTC_display
  2808  0225  085F               	movf	??_RTC_display,w
  2809  0226  00C4               	movwf	_minute
  2810                           
  2811                           ;main_prueba3_mini2.c: 212:     hour = bcd_to_decimal(hour);
  2812  0227  0843               	movf	_hour,w
  2813  0228  120A  158A  27A4  120A  118A  	fcall	_bcd_to_decimal
  2814  022D  1283               	bcf	3,5	;RP0=0, select bank0
  2815  022E  1303               	bcf	3,6	;RP1=0, select bank0
  2816  022F  00DF               	movwf	??_RTC_display
  2817  0230  085F               	movf	??_RTC_display,w
  2818  0231  00C3               	movwf	_hour
  2819                           
  2820                           ;main_prueba3_mini2.c: 213:     m_day = bcd_to_decimal(m_day);
  2821  0232  0842               	movf	_m_day,w
  2822  0233  120A  158A  27A4  120A  118A  	fcall	_bcd_to_decimal
  2823  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2824  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2825  023A  00DF               	movwf	??_RTC_display
  2826  023B  085F               	movf	??_RTC_display,w
  2827  023C  00C2               	movwf	_m_day
  2828                           
  2829                           ;main_prueba3_mini2.c: 214:     month = bcd_to_decimal(month);
  2830  023D  0841               	movf	_month,w
  2831  023E  120A  158A  27A4  120A  118A  	fcall	_bcd_to_decimal
  2832  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2833  0244  1303               	bcf	3,6	;RP1=0, select bank0
  2834  0245  00DF               	movwf	??_RTC_display
  2835  0246  085F               	movf	??_RTC_display,w
  2836  0247  00C1               	movwf	_month
  2837                           
  2838                           ;main_prueba3_mini2.c: 215:     year = bcd_to_decimal(year);
  2839  0248  0840               	movf	_year,w
  2840  0249  120A  158A  27A4  120A  118A  	fcall	_bcd_to_decimal
  2841  024E  1283               	bcf	3,5	;RP0=0, select bank0
  2842  024F  1303               	bcf	3,6	;RP1=0, select bank0
  2843  0250  00DF               	movwf	??_RTC_display
  2844  0251  085F               	movf	??_RTC_display,w
  2845  0252  00C0               	movwf	_year
  2846                           
  2847                           ;main_prueba3_mini2.c: 219:     Time[6] = hour / 10 + '0';
  2848  0253  300A               	movlw	10
  2849  0254  00F3               	movwf	___awdiv@divisor
  2850  0255  3000               	movlw	0
  2851  0256  00F4               	movwf	___awdiv@divisor+1
  2852  0257  0843               	movf	_hour,w
  2853  0258  00DF               	movwf	??_RTC_display
  2854  0259  01E0               	clrf	??_RTC_display+1
  2855  025A  085F               	movf	??_RTC_display,w
  2856  025B  00F5               	movwf	___awdiv@dividend
  2857  025C  0860               	movf	??_RTC_display+1,w
  2858  025D  00F6               	movwf	___awdiv@dividend+1
  2859  025E  120A  118A  24A3  120A  118A  	fcall	___awdiv
  2860  0263  0873               	movf	?___awdiv,w
  2861  0264  3E30               	addlw	48
  2862  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2863  0266  1303               	bcf	3,6	;RP1=0, select bank0
  2864  0267  00E1               	movwf	??_RTC_display+2
  2865  0268  0861               	movf	??_RTC_display+2,w
  2866  0269  00B7               	movwf	_Time+6
  2867                           
  2868                           ;main_prueba3_mini2.c: 220:     Time[7] = hour % 10 + '0';
  2869  026A  300A               	movlw	10
  2870  026B  00F3               	movwf	___awmod@divisor
  2871  026C  3000               	movlw	0
  2872  026D  00F4               	movwf	___awmod@divisor+1
  2873  026E  0843               	movf	_hour,w
  2874  026F  00DF               	movwf	??_RTC_display
  2875  0270  01E0               	clrf	??_RTC_display+1
  2876  0271  085F               	movf	??_RTC_display,w
  2877  0272  00F5               	movwf	___awmod@dividend
  2878  0273  0860               	movf	??_RTC_display+1,w
  2879  0274  00F6               	movwf	___awmod@dividend+1
  2880  0275  120A  118A  2574  120A  118A  	fcall	___awmod
  2881  027A  0873               	movf	?___awmod,w
  2882  027B  3E30               	addlw	48
  2883  027C  1283               	bcf	3,5	;RP0=0, select bank0
  2884  027D  1303               	bcf	3,6	;RP1=0, select bank0
  2885  027E  00E1               	movwf	??_RTC_display+2
  2886  027F  0861               	movf	??_RTC_display+2,w
  2887  0280  00B8               	movwf	_Time+7
  2888                           
  2889                           ;main_prueba3_mini2.c: 221:     Time[9] = minute / 10 + '0';
  2890  0281  300A               	movlw	10
  2891  0282  00F3               	movwf	___awdiv@divisor
  2892  0283  3000               	movlw	0
  2893  0284  00F4               	movwf	___awdiv@divisor+1
  2894  0285  0844               	movf	_minute,w
  2895  0286  00DF               	movwf	??_RTC_display
  2896  0287  01E0               	clrf	??_RTC_display+1
  2897  0288  085F               	movf	??_RTC_display,w
  2898  0289  00F5               	movwf	___awdiv@dividend
  2899  028A  0860               	movf	??_RTC_display+1,w
  2900  028B  00F6               	movwf	___awdiv@dividend+1
  2901  028C  120A  118A  24A3  120A  118A  	fcall	___awdiv
  2902  0291  0873               	movf	?___awdiv,w
  2903  0292  3E30               	addlw	48
  2904  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2905  0294  1303               	bcf	3,6	;RP1=0, select bank0
  2906  0295  00E1               	movwf	??_RTC_display+2
  2907  0296  0861               	movf	??_RTC_display+2,w
  2908  0297  00BA               	movwf	_Time+9
  2909                           
  2910                           ;main_prueba3_mini2.c: 222:     Time[10] = minute % 10 + '0';
  2911  0298  300A               	movlw	10
  2912  0299  00F3               	movwf	___awmod@divisor
  2913  029A  3000               	movlw	0
  2914  029B  00F4               	movwf	___awmod@divisor+1
  2915  029C  0844               	movf	_minute,w
  2916  029D  00DF               	movwf	??_RTC_display
  2917  029E  01E0               	clrf	??_RTC_display+1
  2918  029F  085F               	movf	??_RTC_display,w
  2919  02A0  00F5               	movwf	___awmod@dividend
  2920  02A1  0860               	movf	??_RTC_display+1,w
  2921  02A2  00F6               	movwf	___awmod@dividend+1
  2922  02A3  120A  118A  2574  120A  118A  	fcall	___awmod
  2923  02A8  0873               	movf	?___awmod,w
  2924  02A9  3E30               	addlw	48
  2925  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2926  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  2927  02AC  00E1               	movwf	??_RTC_display+2
  2928  02AD  0861               	movf	??_RTC_display+2,w
  2929  02AE  00BB               	movwf	_Time+10
  2930                           
  2931                           ;main_prueba3_mini2.c: 223:     Time[12] = second / 10 + '0';
  2932  02AF  300A               	movlw	10
  2933  02B0  00F3               	movwf	___awdiv@divisor
  2934  02B1  3000               	movlw	0
  2935  02B2  00F4               	movwf	___awdiv@divisor+1
  2936  02B3  087A               	movf	_second,w
  2937  02B4  00DF               	movwf	??_RTC_display
  2938  02B5  01E0               	clrf	??_RTC_display+1
  2939  02B6  085F               	movf	??_RTC_display,w
  2940  02B7  00F5               	movwf	___awdiv@dividend
  2941  02B8  0860               	movf	??_RTC_display+1,w
  2942  02B9  00F6               	movwf	___awdiv@dividend+1
  2943  02BA  120A  118A  24A3  120A  118A  	fcall	___awdiv
  2944  02BF  0873               	movf	?___awdiv,w
  2945  02C0  3E30               	addlw	48
  2946  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2947  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2948  02C3  00E1               	movwf	??_RTC_display+2
  2949  02C4  0861               	movf	??_RTC_display+2,w
  2950  02C5  00BD               	movwf	_Time+12
  2951                           
  2952                           ;main_prueba3_mini2.c: 224:     Time[13] = second % 10 + '0';
  2953  02C6  300A               	movlw	10
  2954  02C7  00F3               	movwf	___awmod@divisor
  2955  02C8  3000               	movlw	0
  2956  02C9  00F4               	movwf	___awmod@divisor+1
  2957  02CA  087A               	movf	_second,w
  2958  02CB  00DF               	movwf	??_RTC_display
  2959  02CC  01E0               	clrf	??_RTC_display+1
  2960  02CD  085F               	movf	??_RTC_display,w
  2961  02CE  00F5               	movwf	___awmod@dividend
  2962  02CF  0860               	movf	??_RTC_display+1,w
  2963  02D0  00F6               	movwf	___awmod@dividend+1
  2964  02D1  120A  118A  2574  120A  118A  	fcall	___awmod
  2965  02D6  0873               	movf	?___awmod,w
  2966  02D7  3E30               	addlw	48
  2967  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2968  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2969  02DA  00E1               	movwf	??_RTC_display+2
  2970  02DB  0861               	movf	??_RTC_display+2,w
  2971  02DC  00BE               	movwf	_Time+13
  2972                           
  2973                           ;main_prueba3_mini2.c: 226:     Date[6] = m_day / 10 + '0';
  2974  02DD  300A               	movlw	10
  2975  02DE  00F3               	movwf	___awdiv@divisor
  2976  02DF  3000               	movlw	0
  2977  02E0  00F4               	movwf	___awdiv@divisor+1
  2978  02E1  0842               	movf	_m_day,w
  2979  02E2  00DF               	movwf	??_RTC_display
  2980  02E3  01E0               	clrf	??_RTC_display+1
  2981  02E4  085F               	movf	??_RTC_display,w
  2982  02E5  00F5               	movwf	___awdiv@dividend
  2983  02E6  0860               	movf	??_RTC_display+1,w
  2984  02E7  00F6               	movwf	___awdiv@dividend+1
  2985  02E8  120A  118A  24A3  120A  118A  	fcall	___awdiv
  2986  02ED  0873               	movf	?___awdiv,w
  2987  02EE  3E30               	addlw	48
  2988  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2989  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2990  02F1  00E1               	movwf	??_RTC_display+2
  2991  02F2  0861               	movf	??_RTC_display+2,w
  2992  02F3  00A6               	movwf	_Date+6
  2993                           
  2994                           ;main_prueba3_mini2.c: 227:     Date[7] = m_day % 10 + '0';
  2995  02F4  300A               	movlw	10
  2996  02F5  00F3               	movwf	___awmod@divisor
  2997  02F6  3000               	movlw	0
  2998  02F7  00F4               	movwf	___awmod@divisor+1
  2999  02F8  0842               	movf	_m_day,w
  3000  02F9  00DF               	movwf	??_RTC_display
  3001  02FA  01E0               	clrf	??_RTC_display+1
  3002  02FB  085F               	movf	??_RTC_display,w
  3003  02FC  00F5               	movwf	___awmod@dividend
  3004  02FD  0860               	movf	??_RTC_display+1,w
  3005  02FE  00F6               	movwf	___awmod@dividend+1
  3006  02FF  120A  118A  2574  120A  118A  	fcall	___awmod
  3007  0304  0873               	movf	?___awmod,w
  3008  0305  3E30               	addlw	48
  3009  0306  1283               	bcf	3,5	;RP0=0, select bank0
  3010  0307  1303               	bcf	3,6	;RP1=0, select bank0
  3011  0308  00E1               	movwf	??_RTC_display+2
  3012  0309  0861               	movf	??_RTC_display+2,w
  3013  030A  00A7               	movwf	_Date+7
  3014                           
  3015                           ;main_prueba3_mini2.c: 228:     Date[9] = month / 10 + '0';
  3016  030B  300A               	movlw	10
  3017  030C  00F3               	movwf	___awdiv@divisor
  3018  030D  3000               	movlw	0
  3019  030E  00F4               	movwf	___awdiv@divisor+1
  3020  030F  0841               	movf	_month,w
  3021  0310  00DF               	movwf	??_RTC_display
  3022  0311  01E0               	clrf	??_RTC_display+1
  3023  0312  085F               	movf	??_RTC_display,w
  3024  0313  00F5               	movwf	___awdiv@dividend
  3025  0314  0860               	movf	??_RTC_display+1,w
  3026  0315  00F6               	movwf	___awdiv@dividend+1
  3027  0316  120A  118A  24A3  120A  118A  	fcall	___awdiv
  3028  031B  0873               	movf	?___awdiv,w
  3029  031C  3E30               	addlw	48
  3030  031D  1283               	bcf	3,5	;RP0=0, select bank0
  3031  031E  1303               	bcf	3,6	;RP1=0, select bank0
  3032  031F  00E1               	movwf	??_RTC_display+2
  3033  0320  0861               	movf	??_RTC_display+2,w
  3034  0321  00A9               	movwf	_Date+9
  3035                           
  3036                           ;main_prueba3_mini2.c: 229:     Date[10] = month % 10 + '0';
  3037  0322  300A               	movlw	10
  3038  0323  00F3               	movwf	___awmod@divisor
  3039  0324  3000               	movlw	0
  3040  0325  00F4               	movwf	___awmod@divisor+1
  3041  0326  0841               	movf	_month,w
  3042  0327  00DF               	movwf	??_RTC_display
  3043  0328  01E0               	clrf	??_RTC_display+1
  3044  0329  085F               	movf	??_RTC_display,w
  3045  032A  00F5               	movwf	___awmod@dividend
  3046  032B  0860               	movf	??_RTC_display+1,w
  3047  032C  00F6               	movwf	___awmod@dividend+1
  3048  032D  120A  118A  2574  120A  118A  	fcall	___awmod
  3049  0332  0873               	movf	?___awmod,w
  3050  0333  3E30               	addlw	48
  3051  0334  1283               	bcf	3,5	;RP0=0, select bank0
  3052  0335  1303               	bcf	3,6	;RP1=0, select bank0
  3053  0336  00E1               	movwf	??_RTC_display+2
  3054  0337  0861               	movf	??_RTC_display+2,w
  3055  0338  00AA               	movwf	_Date+10
  3056                           
  3057                           ;main_prueba3_mini2.c: 230:     Date[14] = year / 10 + '0';
  3058  0339  300A               	movlw	10
  3059  033A  00F3               	movwf	___awdiv@divisor
  3060  033B  3000               	movlw	0
  3061  033C  00F4               	movwf	___awdiv@divisor+1
  3062  033D  0840               	movf	_year,w
  3063  033E  00DF               	movwf	??_RTC_display
  3064  033F  01E0               	clrf	??_RTC_display+1
  3065  0340  085F               	movf	??_RTC_display,w
  3066  0341  00F5               	movwf	___awdiv@dividend
  3067  0342  0860               	movf	??_RTC_display+1,w
  3068  0343  00F6               	movwf	___awdiv@dividend+1
  3069  0344  120A  118A  24A3  120A  118A  	fcall	___awdiv
  3070  0349  0873               	movf	?___awdiv,w
  3071  034A  3E30               	addlw	48
  3072  034B  1283               	bcf	3,5	;RP0=0, select bank0
  3073  034C  1303               	bcf	3,6	;RP1=0, select bank0
  3074  034D  00E1               	movwf	??_RTC_display+2
  3075  034E  0861               	movf	??_RTC_display+2,w
  3076  034F  00AE               	movwf	_Date+14
  3077                           
  3078                           ;main_prueba3_mini2.c: 231:     Date[15] = year % 10 + '0';
  3079  0350  300A               	movlw	10
  3080  0351  00F3               	movwf	___awmod@divisor
  3081  0352  3000               	movlw	0
  3082  0353  00F4               	movwf	___awmod@divisor+1
  3083  0354  0840               	movf	_year,w
  3084  0355  00DF               	movwf	??_RTC_display
  3085  0356  01E0               	clrf	??_RTC_display+1
  3086  0357  085F               	movf	??_RTC_display,w
  3087  0358  00F5               	movwf	___awmod@dividend
  3088  0359  0860               	movf	??_RTC_display+1,w
  3089  035A  00F6               	movwf	___awmod@dividend+1
  3090  035B  120A  118A  2574  120A  118A  	fcall	___awmod
  3091  0360  0873               	movf	?___awmod,w
  3092  0361  3E30               	addlw	48
  3093  0362  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0363  1303               	bcf	3,6	;RP1=0, select bank0
  3095  0364  00E1               	movwf	??_RTC_display+2
  3096  0365  0861               	movf	??_RTC_display+2,w
  3097  0366  00AF               	movwf	_Date+15
  3098                           
  3099                           ;main_prueba3_mini2.c: 233:     Lcd_Set_Cursor(1,1);
  3100  0367  01F7               	clrf	Lcd_Set_Cursor@b
  3101  0368  0AF7               	incf	Lcd_Set_Cursor@b,f
  3102  0369  3001               	movlw	1
  3103  036A  120A  118A  2781  120A  118A  	fcall	_Lcd_Set_Cursor
  3104  036F                     l2129:
  3105                           
  3106                           ;main_prueba3_mini2.c: 234:     Lcd_Write_String(Time);
  3107  036F  3031               	movlw	(low (_Time| 0))& (0+255)
  3108  0370  00F6               	movwf	Lcd_Write_String@a
  3109  0371  3000               	movlw	0
  3110  0372  00F7               	movwf	Lcd_Write_String@a+1
  3111  0373  120A  118A  2676  120A  118A  	fcall	_Lcd_Write_String
  3112  0378                     l2131:
  3113                           
  3114                           ;main_prueba3_mini2.c: 235:     Lcd_Set_Cursor(1,2);
  3115  0378  3002               	movlw	2
  3116  0379  1283               	bcf	3,5	;RP0=0, select bank0
  3117  037A  1303               	bcf	3,6	;RP1=0, select bank0
  3118  037B  00DF               	movwf	??_RTC_display
  3119  037C  085F               	movf	??_RTC_display,w
  3120  037D  00F7               	movwf	Lcd_Set_Cursor@b
  3121  037E  3001               	movlw	1
  3122  037F  120A  118A  2781  120A  118A  	fcall	_Lcd_Set_Cursor
  3123                           
  3124                           ;main_prueba3_mini2.c: 236:     Lcd_Write_String(Date);
  3125  0384  3020               	movlw	(low (_Date| 0))& (0+255)
  3126  0385  00F6               	movwf	Lcd_Write_String@a
  3127  0386  3000               	movlw	0
  3128  0387  00F7               	movwf	Lcd_Write_String@a+1
  3129  0388  120A  118A  2676  120A  118A  	fcall	_Lcd_Write_String
  3130  038D                     l132:
  3131  038D  0008               	return
  3132  038E                     __end_of_RTC_display:
  3133                           
  3134                           	psect	text11
  3135  0FA4                     __ptext11:	
  3136 ;; *************** function _bcd_to_decimal *****************
  3137 ;; Defined at:
  3138 ;;		line 199 in file "main_prueba3_mini2.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  number          1    wreg     unsigned char 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  number          1    7[COMMON] unsigned char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      unsigned char 
  3145 ;; Registers used:
  3146 ;;		wreg, status,2, status,0, pclath, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3152 ;;      Params:         0       0       0       0       0
  3153 ;;      Locals:         1       0       0       0       0
  3154 ;;      Temps:          0       3       0       0       0
  3155 ;;      Totals:         1       3       0       0       0
  3156 ;;Total ram usage:        4 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    2
  3159 ;; This function calls:
  3160 ;;		___bmul
  3161 ;; This function is called by:
  3162 ;;		_RTC_display
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           
  3167                           ;psect for function _bcd_to_decimal
  3168  0FA4                     _bcd_to_decimal:
  3169                           
  3170                           ;incstack = 0
  3171                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  3172                           ;bcd_to_decimal@number stored from wreg
  3173  0FA4  00F7               	movwf	bcd_to_decimal@number
  3174  0FA5                     l1885:
  3175                           
  3176                           ;main_prueba3_mini2.c: 200:   return((number >> 4) * 10 + (number & 0x0F));
  3177  0FA5  300F               	movlw	15
  3178  0FA6  0577               	andwf	bcd_to_decimal@number,w
  3179  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  3181  0FA9  00DA               	movwf	??_bcd_to_decimal
  3182  0FAA  300A               	movlw	10
  3183  0FAB  00DB               	movwf	??_bcd_to_decimal+1
  3184  0FAC  085B               	movf	??_bcd_to_decimal+1,w
  3185  0FAD  00F3               	movwf	___bmul@multiplicand
  3186  0FAE  0877               	movf	bcd_to_decimal@number,w
  3187  0FAF  00DC               	movwf	??_bcd_to_decimal+2
  3188  0FB0  3004               	movlw	4
  3189  0FB1                     u1485:
  3190  0FB1  1003               	clrc
  3191  0FB2  0CDC               	rrf	??_bcd_to_decimal+2,f
  3192  0FB3  3EFF               	addlw	-1
  3193  0FB4  1D03               	skipz
  3194  0FB5  2FB1               	goto	u1485
  3195  0FB6  085C               	movf	??_bcd_to_decimal+2,w
  3196  0FB7  120A  158A  2746  120A  158A  	fcall	___bmul
  3197  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0FBE  075A               	addwf	??_bcd_to_decimal,w
  3200  0FBF                     l126:
  3201  0FBF  0008               	return
  3202  0FC0                     __end_of_bcd_to_decimal:
  3203                           
  3204                           	psect	text12
  3205  0F46                     __ptext12:	
  3206 ;; *************** function ___bmul *****************
  3207 ;; Defined at:
  3208 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  multiplier      1    wreg     unsigned char 
  3211 ;;  multiplicand    1    3[COMMON] unsigned char 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  multiplier      1    6[COMMON] unsigned char 
  3214 ;;  product         1    5[COMMON] unsigned char 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      unsigned char 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3224 ;;      Params:         1       0       0       0       0
  3225 ;;      Locals:         2       0       0       0       0
  3226 ;;      Temps:          1       0       0       0       0
  3227 ;;      Totals:         4       0       0       0       0
  3228 ;;Total ram usage:        4 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:    1
  3231 ;; This function calls:
  3232 ;;		Nothing
  3233 ;; This function is called by:
  3234 ;;		_bcd_to_decimal
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function ___bmul
  3240  0F46                     ___bmul:
  3241                           
  3242                           ;incstack = 0
  3243                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3244                           ;___bmul@multiplier stored from wreg
  3245  0F46  00F6               	movwf	___bmul@multiplier
  3246  0F47                     l1399:
  3247  0F47  01F5               	clrf	___bmul@product
  3248  0F48                     l1401:
  3249  0F48  1C76               	btfss	___bmul@multiplier,0
  3250  0F49  2F4B               	goto	u731
  3251  0F4A  2F4C               	goto	u730
  3252  0F4B                     u731:
  3253  0F4B  2F50               	goto	l1405
  3254  0F4C                     u730:
  3255  0F4C                     l1403:
  3256  0F4C  0873               	movf	___bmul@multiplicand,w
  3257  0F4D  00F4               	movwf	??___bmul
  3258  0F4E  0874               	movf	??___bmul,w
  3259  0F4F  07F5               	addwf	___bmul@product,f
  3260  0F50                     l1405:
  3261  0F50  1003               	clrc
  3262  0F51  0DF3               	rlf	___bmul@multiplicand,f
  3263  0F52                     l1407:
  3264  0F52  1003               	clrc
  3265  0F53  0CF6               	rrf	___bmul@multiplier,f
  3266  0F54  0876               	movf	___bmul@multiplier,w
  3267  0F55  1D03               	btfss	3,2
  3268  0F56  2F58               	goto	u741
  3269  0F57  2F59               	goto	u740
  3270  0F58                     u741:
  3271  0F58  2F48               	goto	l1401
  3272  0F59                     u740:
  3273  0F59                     l1409:
  3274  0F59  0875               	movf	___bmul@product,w
  3275  0F5A                     l388:
  3276  0F5A  0008               	return
  3277  0F5B                     __end_of___bmul:
  3278                           
  3279                           	psect	text13
  3280  0574                     __ptext13:	
  3281 ;; *************** function ___awmod *****************
  3282 ;; Defined at:
  3283 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  divisor         2    3[COMMON] int 
  3286 ;;  dividend        2    5[COMMON] int 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  sign            1    1[BANK0 ] unsigned char 
  3289 ;;  counter         1    0[BANK0 ] unsigned char 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  2    3[COMMON] int 
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3299 ;;      Params:         4       0       0       0       0
  3300 ;;      Locals:         0       2       0       0       0
  3301 ;;      Temps:          1       0       0       0       0
  3302 ;;      Totals:         5       2       0       0       0
  3303 ;;Total ram usage:        7 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_decimal_to_bcd
  3310 ;;		_RTC_display
  3311 ;;		_edit
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           
  3316                           ;psect for function ___awmod
  3317  0574                     ___awmod:
  3318  0574                     l1949:	
  3319                           ;incstack = 0
  3320                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3321                           
  3322  0574  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0575  1303               	bcf	3,6	;RP1=0, select bank0
  3324  0576  01DB               	clrf	___awmod@sign
  3325  0577                     l1951:
  3326  0577  1FF6               	btfss	___awmod@dividend+1,7
  3327  0578  2D7A               	goto	u1621
  3328  0579  2D7B               	goto	u1620
  3329  057A                     u1621:
  3330  057A  2D82               	goto	l1957
  3331  057B                     u1620:
  3332  057B                     l1953:
  3333  057B  09F5               	comf	___awmod@dividend,f
  3334  057C  09F6               	comf	___awmod@dividend+1,f
  3335  057D  0AF5               	incf	___awmod@dividend,f
  3336  057E  1903               	skipnz
  3337  057F  0AF6               	incf	___awmod@dividend+1,f
  3338  0580                     l1955:
  3339  0580  01DB               	clrf	___awmod@sign
  3340  0581  0ADB               	incf	___awmod@sign,f
  3341  0582                     l1957:
  3342  0582  1FF4               	btfss	___awmod@divisor+1,7
  3343  0583  2D85               	goto	u1631
  3344  0584  2D86               	goto	u1630
  3345  0585                     u1631:
  3346  0585  2D8B               	goto	l1961
  3347  0586                     u1630:
  3348  0586                     l1959:
  3349  0586  09F3               	comf	___awmod@divisor,f
  3350  0587  09F4               	comf	___awmod@divisor+1,f
  3351  0588  0AF3               	incf	___awmod@divisor,f
  3352  0589  1903               	skipnz
  3353  058A  0AF4               	incf	___awmod@divisor+1,f
  3354  058B                     l1961:
  3355  058B  0873               	movf	___awmod@divisor,w
  3356  058C  0474               	iorwf	___awmod@divisor+1,w
  3357  058D  1903               	btfsc	3,2
  3358  058E  2D90               	goto	u1641
  3359  058F  2D91               	goto	u1640
  3360  0590                     u1641:
  3361  0590  2DC0               	goto	l1979
  3362  0591                     u1640:
  3363  0591                     l1963:
  3364  0591  01DA               	clrf	___awmod@counter
  3365  0592  0ADA               	incf	___awmod@counter,f
  3366  0593  2D9F               	goto	l1969
  3367  0594                     l1965:
  3368  0594  3001               	movlw	1
  3369  0595                     u1655:
  3370  0595  1003               	clrc
  3371  0596  0DF3               	rlf	___awmod@divisor,f
  3372  0597  0DF4               	rlf	___awmod@divisor+1,f
  3373  0598  3EFF               	addlw	-1
  3374  0599  1D03               	skipz
  3375  059A  2D95               	goto	u1655
  3376  059B                     l1967:
  3377  059B  3001               	movlw	1
  3378  059C  00F7               	movwf	??___awmod
  3379  059D  0877               	movf	??___awmod,w
  3380  059E  07DA               	addwf	___awmod@counter,f
  3381  059F                     l1969:
  3382  059F  1FF4               	btfss	___awmod@divisor+1,7
  3383  05A0  2DA2               	goto	u1661
  3384  05A1  2DA3               	goto	u1660
  3385  05A2                     u1661:
  3386  05A2  2D94               	goto	l1965
  3387  05A3                     u1660:
  3388  05A3                     l1971:
  3389  05A3  0874               	movf	___awmod@divisor+1,w
  3390  05A4  0276               	subwf	___awmod@dividend+1,w
  3391  05A5  1D03               	skipz
  3392  05A6  2DA9               	goto	u1675
  3393  05A7  0873               	movf	___awmod@divisor,w
  3394  05A8  0275               	subwf	___awmod@dividend,w
  3395  05A9                     u1675:
  3396  05A9  1C03               	skipc
  3397  05AA  2DAC               	goto	u1671
  3398  05AB  2DAD               	goto	u1670
  3399  05AC                     u1671:
  3400  05AC  2DB3               	goto	l1975
  3401  05AD                     u1670:
  3402  05AD                     l1973:
  3403  05AD  0873               	movf	___awmod@divisor,w
  3404  05AE  02F5               	subwf	___awmod@dividend,f
  3405  05AF  0874               	movf	___awmod@divisor+1,w
  3406  05B0  1C03               	skipc
  3407  05B1  03F6               	decf	___awmod@dividend+1,f
  3408  05B2  02F6               	subwf	___awmod@dividend+1,f
  3409  05B3                     l1975:
  3410  05B3  3001               	movlw	1
  3411  05B4                     u1685:
  3412  05B4  1003               	clrc
  3413  05B5  0CF4               	rrf	___awmod@divisor+1,f
  3414  05B6  0CF3               	rrf	___awmod@divisor,f
  3415  05B7  3EFF               	addlw	-1
  3416  05B8  1D03               	skipz
  3417  05B9  2DB4               	goto	u1685
  3418  05BA                     l1977:
  3419  05BA  3001               	movlw	1
  3420  05BB  02DA               	subwf	___awmod@counter,f
  3421  05BC  1D03               	btfss	3,2
  3422  05BD  2DBF               	goto	u1691
  3423  05BE  2DC0               	goto	u1690
  3424  05BF                     u1691:
  3425  05BF  2DA3               	goto	l1971
  3426  05C0                     u1690:
  3427  05C0                     l1979:
  3428  05C0  085B               	movf	___awmod@sign,w
  3429  05C1  1903               	btfsc	3,2
  3430  05C2  2DC4               	goto	u1701
  3431  05C3  2DC5               	goto	u1700
  3432  05C4                     u1701:
  3433  05C4  2DCA               	goto	l1983
  3434  05C5                     u1700:
  3435  05C5                     l1981:
  3436  05C5  09F5               	comf	___awmod@dividend,f
  3437  05C6  09F6               	comf	___awmod@dividend+1,f
  3438  05C7  0AF5               	incf	___awmod@dividend,f
  3439  05C8  1903               	skipnz
  3440  05C9  0AF6               	incf	___awmod@dividend+1,f
  3441  05CA                     l1983:
  3442  05CA  0876               	movf	___awmod@dividend+1,w
  3443  05CB  00F4               	movwf	?___awmod+1
  3444  05CC  0875               	movf	___awmod@dividend,w
  3445  05CD  00F3               	movwf	?___awmod
  3446  05CE                     l528:
  3447  05CE  0008               	return
  3448  05CF                     __end_of___awmod:
  3449                           
  3450                           	psect	text14
  3451  04A3                     __ptext14:	
  3452 ;; *************** function ___awdiv *****************
  3453 ;; Defined at:
  3454 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  divisor         2    3[COMMON] int 
  3457 ;;  dividend        2    5[COMMON] int 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  quotient        2    2[BANK0 ] int 
  3460 ;;  sign            1    1[BANK0 ] unsigned char 
  3461 ;;  counter         1    0[BANK0 ] unsigned char 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  2    3[COMMON] int 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3471 ;;      Params:         4       0       0       0       0
  3472 ;;      Locals:         0       4       0       0       0
  3473 ;;      Temps:          1       0       0       0       0
  3474 ;;      Totals:         5       4       0       0       0
  3475 ;;Total ram usage:        9 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    1
  3478 ;; This function calls:
  3479 ;;		Nothing
  3480 ;; This function is called by:
  3481 ;;		_decimal_to_bcd
  3482 ;;		_RTC_display
  3483 ;;		_edit
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           
  3488                           ;psect for function ___awdiv
  3489  04A3                     ___awdiv:
  3490  04A3                     l1905:	
  3491                           ;incstack = 0
  3492                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3493                           
  3494  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  3495  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  3496  04A5  01DB               	clrf	___awdiv@sign
  3497  04A6                     l1907:
  3498  04A6  1FF4               	btfss	___awdiv@divisor+1,7
  3499  04A7  2CA9               	goto	u1521
  3500  04A8  2CAA               	goto	u1520
  3501  04A9                     u1521:
  3502  04A9  2CB1               	goto	l1913
  3503  04AA                     u1520:
  3504  04AA                     l1909:
  3505  04AA  09F3               	comf	___awdiv@divisor,f
  3506  04AB  09F4               	comf	___awdiv@divisor+1,f
  3507  04AC  0AF3               	incf	___awdiv@divisor,f
  3508  04AD  1903               	skipnz
  3509  04AE  0AF4               	incf	___awdiv@divisor+1,f
  3510  04AF                     l1911:
  3511  04AF  01DB               	clrf	___awdiv@sign
  3512  04B0  0ADB               	incf	___awdiv@sign,f
  3513  04B1                     l1913:
  3514  04B1  1FF6               	btfss	___awdiv@dividend+1,7
  3515  04B2  2CB4               	goto	u1531
  3516  04B3  2CB5               	goto	u1530
  3517  04B4                     u1531:
  3518  04B4  2CBE               	goto	l1919
  3519  04B5                     u1530:
  3520  04B5                     l1915:
  3521  04B5  09F5               	comf	___awdiv@dividend,f
  3522  04B6  09F6               	comf	___awdiv@dividend+1,f
  3523  04B7  0AF5               	incf	___awdiv@dividend,f
  3524  04B8  1903               	skipnz
  3525  04B9  0AF6               	incf	___awdiv@dividend+1,f
  3526  04BA                     l1917:
  3527  04BA  3001               	movlw	1
  3528  04BB  00F7               	movwf	??___awdiv
  3529  04BC  0877               	movf	??___awdiv,w
  3530  04BD  06DB               	xorwf	___awdiv@sign,f
  3531  04BE                     l1919:
  3532  04BE  01DC               	clrf	___awdiv@quotient
  3533  04BF  01DD               	clrf	___awdiv@quotient+1
  3534  04C0                     l1921:
  3535  04C0  0873               	movf	___awdiv@divisor,w
  3536  04C1  0474               	iorwf	___awdiv@divisor+1,w
  3537  04C2  1903               	btfsc	3,2
  3538  04C3  2CC5               	goto	u1541
  3539  04C4  2CC6               	goto	u1540
  3540  04C5                     u1541:
  3541  04C5  2CFD               	goto	l1941
  3542  04C6                     u1540:
  3543  04C6                     l1923:
  3544  04C6  01DA               	clrf	___awdiv@counter
  3545  04C7  0ADA               	incf	___awdiv@counter,f
  3546  04C8  2CD4               	goto	l1929
  3547  04C9                     l1925:
  3548  04C9  3001               	movlw	1
  3549  04CA                     u1555:
  3550  04CA  1003               	clrc
  3551  04CB  0DF3               	rlf	___awdiv@divisor,f
  3552  04CC  0DF4               	rlf	___awdiv@divisor+1,f
  3553  04CD  3EFF               	addlw	-1
  3554  04CE  1D03               	skipz
  3555  04CF  2CCA               	goto	u1555
  3556  04D0                     l1927:
  3557  04D0  3001               	movlw	1
  3558  04D1  00F7               	movwf	??___awdiv
  3559  04D2  0877               	movf	??___awdiv,w
  3560  04D3  07DA               	addwf	___awdiv@counter,f
  3561  04D4                     l1929:
  3562  04D4  1FF4               	btfss	___awdiv@divisor+1,7
  3563  04D5  2CD7               	goto	u1561
  3564  04D6  2CD8               	goto	u1560
  3565  04D7                     u1561:
  3566  04D7  2CC9               	goto	l1925
  3567  04D8                     u1560:
  3568  04D8                     l1931:
  3569  04D8  3001               	movlw	1
  3570  04D9                     u1575:
  3571  04D9  1003               	clrc
  3572  04DA  0DDC               	rlf	___awdiv@quotient,f
  3573  04DB  0DDD               	rlf	___awdiv@quotient+1,f
  3574  04DC  3EFF               	addlw	-1
  3575  04DD  1D03               	skipz
  3576  04DE  2CD9               	goto	u1575
  3577  04DF  0874               	movf	___awdiv@divisor+1,w
  3578  04E0  0276               	subwf	___awdiv@dividend+1,w
  3579  04E1  1D03               	skipz
  3580  04E2  2CE5               	goto	u1585
  3581  04E3  0873               	movf	___awdiv@divisor,w
  3582  04E4  0275               	subwf	___awdiv@dividend,w
  3583  04E5                     u1585:
  3584  04E5  1C03               	skipc
  3585  04E6  2CE8               	goto	u1581
  3586  04E7  2CE9               	goto	u1580
  3587  04E8                     u1581:
  3588  04E8  2CF0               	goto	l1937
  3589  04E9                     u1580:
  3590  04E9                     l1933:
  3591  04E9  0873               	movf	___awdiv@divisor,w
  3592  04EA  02F5               	subwf	___awdiv@dividend,f
  3593  04EB  0874               	movf	___awdiv@divisor+1,w
  3594  04EC  1C03               	skipc
  3595  04ED  03F6               	decf	___awdiv@dividend+1,f
  3596  04EE  02F6               	subwf	___awdiv@dividend+1,f
  3597  04EF                     l1935:
  3598  04EF  145C               	bsf	___awdiv@quotient,0
  3599  04F0                     l1937:
  3600  04F0  3001               	movlw	1
  3601  04F1                     u1595:
  3602  04F1  1003               	clrc
  3603  04F2  0CF4               	rrf	___awdiv@divisor+1,f
  3604  04F3  0CF3               	rrf	___awdiv@divisor,f
  3605  04F4  3EFF               	addlw	-1
  3606  04F5  1D03               	skipz
  3607  04F6  2CF1               	goto	u1595
  3608  04F7                     l1939:
  3609  04F7  3001               	movlw	1
  3610  04F8  02DA               	subwf	___awdiv@counter,f
  3611  04F9  1D03               	btfss	3,2
  3612  04FA  2CFC               	goto	u1601
  3613  04FB  2CFD               	goto	u1600
  3614  04FC                     u1601:
  3615  04FC  2CD8               	goto	l1931
  3616  04FD                     u1600:
  3617  04FD                     l1941:
  3618  04FD  085B               	movf	___awdiv@sign,w
  3619  04FE  1903               	btfsc	3,2
  3620  04FF  2D01               	goto	u1611
  3621  0500  2D02               	goto	u1610
  3622  0501                     u1611:
  3623  0501  2D07               	goto	l1945
  3624  0502                     u1610:
  3625  0502                     l1943:
  3626  0502  09DC               	comf	___awdiv@quotient,f
  3627  0503  09DD               	comf	___awdiv@quotient+1,f
  3628  0504  0ADC               	incf	___awdiv@quotient,f
  3629  0505  1903               	skipnz
  3630  0506  0ADD               	incf	___awdiv@quotient+1,f
  3631  0507                     l1945:
  3632  0507  085D               	movf	___awdiv@quotient+1,w
  3633  0508  00F4               	movwf	?___awdiv+1
  3634  0509  085C               	movf	___awdiv@quotient,w
  3635  050A  00F3               	movwf	?___awdiv
  3636  050B                     l515:
  3637  050B  0008               	return
  3638  050C                     __end_of___awdiv:
  3639                           
  3640                           	psect	text15
  3641  0676                     __ptext15:	
  3642 ;; *************** function _Lcd_Write_String *****************
  3643 ;; Defined at:
  3644 ;;		line 71 in file "LCD.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;  a               2    6[COMMON] PTR unsigned char 
  3647 ;;		 -> STR_3(3), Date(17), Time(15), STR_2(12), 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  i               2    3[BANK0 ] int 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3659 ;;      Params:         2       0       0       0       0
  3660 ;;      Locals:         0       2       0       0       0
  3661 ;;      Temps:          0       3       0       0       0
  3662 ;;      Totals:         2       5       0       0       0
  3663 ;;Total ram usage:        7 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    3
  3666 ;; This function calls:
  3667 ;;		_Lcd_Write_Char
  3668 ;; This function is called by:
  3669 ;;		_RTC_display
  3670 ;;		_edit
  3671 ;;		_Show_val_LCD
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           
  3676                           ;psect for function _Lcd_Write_String
  3677  0676                     _Lcd_Write_String:
  3678  0676                     l1877:	
  3679                           ;incstack = 0
  3680                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3681                           
  3682                           
  3683                           ;LCD.c: 72:  int i;;LCD.c: 73:  for(i=0;a[i]!='\0';i++)
  3684  0676  1283               	bcf	3,5	;RP0=0, select bank0
  3685  0677  1303               	bcf	3,6	;RP1=0, select bank0
  3686  0678  01DD               	clrf	Lcd_Write_String@i
  3687  0679  01DE               	clrf	Lcd_Write_String@i+1
  3688  067A  2E9F               	goto	l1883
  3689  067B                     l1879:
  3690                           
  3691                           ;LCD.c: 74:     Lcd_Write_Char(a[i]);
  3692  067B  085D               	movf	Lcd_Write_String@i,w
  3693  067C  0776               	addwf	Lcd_Write_String@a,w
  3694  067D  00DB               	movwf	??_Lcd_Write_String+1
  3695  067E  0877               	movf	Lcd_Write_String@a+1,w
  3696  067F  00DA               	movwf	??_Lcd_Write_String
  3697  0680  1803               	skipnc
  3698  0681  0ADA               	incf	??_Lcd_Write_String,f
  3699  0682  1FDD               	btfss	Lcd_Write_String@i,7
  3700  0683  2E85               	goto	u1450
  3701  0684  03DA               	decf	??_Lcd_Write_String,f
  3702  0685                     u1450:
  3703  0685  1283               	bcf	3,5	;RP0=0, select bank0
  3704  0686  1303               	bcf	3,6	;RP1=0, select bank0
  3705  0687  085A               	movf	??_Lcd_Write_String,w
  3706  0688  00DC               	movwf	??_Lcd_Write_String+2
  3707  0689  085C               	movf	??_Lcd_Write_String+2,w
  3708  068A  00FF               	movwf	btemp+1
  3709  068B  085B               	movf	??_Lcd_Write_String+1,w
  3710  068C  0084               	movwf	4
  3711  068D  120A  118A  27A7  120A  118A  	fcall	stringtab
  3712  0692  120A  158A  275B  120A  118A  	fcall	_Lcd_Write_Char
  3713  0697                     l1881:
  3714  0697  3001               	movlw	1
  3715  0698  1283               	bcf	3,5	;RP0=0, select bank0
  3716  0699  1303               	bcf	3,6	;RP1=0, select bank0
  3717  069A  07DD               	addwf	Lcd_Write_String@i,f
  3718  069B  1803               	skipnc
  3719  069C  0ADE               	incf	Lcd_Write_String@i+1,f
  3720  069D  3000               	movlw	0
  3721  069E  07DE               	addwf	Lcd_Write_String@i+1,f
  3722  069F                     l1883:
  3723  069F  085D               	movf	Lcd_Write_String@i,w
  3724  06A0  0776               	addwf	Lcd_Write_String@a,w
  3725  06A1  00DB               	movwf	??_Lcd_Write_String+1
  3726  06A2  0877               	movf	Lcd_Write_String@a+1,w
  3727  06A3  00DA               	movwf	??_Lcd_Write_String
  3728  06A4  1803               	skipnc
  3729  06A5  0ADA               	incf	??_Lcd_Write_String,f
  3730  06A6  1FDD               	btfss	Lcd_Write_String@i,7
  3731  06A7  2EA9               	goto	u1460
  3732  06A8  03DA               	decf	??_Lcd_Write_String,f
  3733  06A9                     u1460:
  3734  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  3735  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  3736  06AB  085A               	movf	??_Lcd_Write_String,w
  3737  06AC  00DC               	movwf	??_Lcd_Write_String+2
  3738  06AD  085C               	movf	??_Lcd_Write_String+2,w
  3739  06AE  00FF               	movwf	btemp+1
  3740  06AF  085B               	movf	??_Lcd_Write_String+1,w
  3741  06B0  0084               	movwf	4
  3742  06B1  120A  118A  27A7  120A  118A  	fcall	stringtab
  3743  06B6  3A00               	xorlw	0
  3744  06B7  1D03               	skipz
  3745  06B8  2EBA               	goto	u1471
  3746  06B9  2EBB               	goto	u1470
  3747  06BA                     u1471:
  3748  06BA  2E7B               	goto	l1879
  3749  06BB                     u1470:
  3750  06BB                     l264:
  3751  06BB  0008               	return
  3752  06BC                     __end_of_Lcd_Write_String:
  3753                           
  3754                           	psect	text16
  3755  0F5B                     __ptext16:	
  3756 ;; *************** function _Lcd_Write_Char *****************
  3757 ;; Defined at:
  3758 ;;		line 62 in file "LCD.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  a               1    wreg     unsigned char 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  a               1    5[COMMON] unsigned char 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0, pclath, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3772 ;;      Params:         0       0       0       0       0
  3773 ;;      Locals:         1       0       0       0       0
  3774 ;;      Temps:          1       0       0       0       0
  3775 ;;      Totals:         2       0       0       0       0
  3776 ;;Total ram usage:        2 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    2
  3779 ;; This function calls:
  3780 ;;		_Lcd_Port
  3781 ;; This function is called by:
  3782 ;;		_Lcd_Write_String
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           
  3787                           ;psect for function _Lcd_Write_Char
  3788  0F5B                     _Lcd_Write_Char:
  3789                           
  3790                           ;incstack = 0
  3791                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3792                           ;Lcd_Write_Char@a stored from wreg
  3793  0F5B  00F5               	movwf	Lcd_Write_Char@a
  3794  0F5C                     l1831:
  3795                           
  3796                           ;LCD.c: 63:    PORTEbits.RE0 = 1;
  3797  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  3798  0F5D  1303               	bcf	3,6	;RP1=0, select bank0
  3799  0F5E  1409               	bsf	9,0	;volatile
  3800  0F5F                     l1833:
  3801                           
  3802                           ;LCD.c: 64:    Lcd_Port(a);
  3803  0F5F  0875               	movf	Lcd_Write_Char@a,w
  3804  0F60  120A  158A  26E7  120A  158A  	fcall	_Lcd_Port
  3805  0F65                     l1835:
  3806                           
  3807                           ;LCD.c: 65:    PORTEbits.RE2 = 1;
  3808  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  3809  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  3810  0F67  1509               	bsf	9,2	;volatile
  3811  0F68                     l1837:
  3812                           
  3813                           ;LCD.c: 66:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3814  0F68  301A               	movlw	26
  3815  0F69  00F4               	movwf	??_Lcd_Write_Char
  3816  0F6A                     u1967:
  3817  0F6A  0BF4               	decfsz	??_Lcd_Write_Char,f
  3818  0F6B  2F6A               	goto	u1967
  3819  0F6C  0000               	nop
  3820  0F6D                     l1839:
  3821                           
  3822                           ;LCD.c: 67:    PORTEbits.RE2 = 0;
  3823  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  3824  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  3825  0F6F  1109               	bcf	9,2	;volatile
  3826  0F70                     l258:
  3827  0F70  0008               	return
  3828  0F71                     __end_of_Lcd_Write_Char:
  3829                           
  3830                           	psect	text17
  3831  0781                     __ptext17:	
  3832 ;; *************** function _Lcd_Set_Cursor *****************
  3833 ;; Defined at:
  3834 ;;		line 49 in file "LCD.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  a               1    wreg     unsigned char 
  3837 ;;  b               1    7[COMMON] unsigned char 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  a               1    1[BANK0 ] unsigned char 
  3840 ;;  temp            1    2[BANK0 ] unsigned char 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0, pclath, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3850 ;;      Params:         1       0       0       0       0
  3851 ;;      Locals:         0       2       0       0       0
  3852 ;;      Temps:          0       1       0       0       0
  3853 ;;      Totals:         1       3       0       0       0
  3854 ;;Total ram usage:        4 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    3
  3857 ;; This function calls:
  3858 ;;		_Lcd_Cmd
  3859 ;; This function is called by:
  3860 ;;		_RTC_display
  3861 ;;		_edit
  3862 ;;		_Show_val_LCD
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           
  3867                           ;psect for function _Lcd_Set_Cursor
  3868  0781                     _Lcd_Set_Cursor:
  3869                           
  3870                           ;incstack = 0
  3871                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3872                           ;Lcd_Set_Cursor@a stored from wreg
  3873  0781  1283               	bcf	3,5	;RP0=0, select bank0
  3874  0782  1303               	bcf	3,6	;RP1=0, select bank0
  3875  0783  00DB               	movwf	Lcd_Set_Cursor@a
  3876  0784                     l1865:
  3877                           
  3878                           ;LCD.c: 50:  char temp;;LCD.c: 51:  if(a == 1){
  3879  0784  035B               	decf	Lcd_Set_Cursor@a,w
  3880  0785  1D03               	btfss	3,2
  3881  0786  2F88               	goto	u1431
  3882  0787  2F89               	goto	u1430
  3883  0788                     u1431:
  3884  0788  2F95               	goto	l1871
  3885  0789                     u1430:
  3886  0789                     l1867:
  3887                           
  3888                           ;LCD.c: 52:         temp = 0x80 + b - 1;
  3889  0789  0877               	movf	Lcd_Set_Cursor@b,w
  3890  078A  3E7F               	addlw	127
  3891  078B  00DA               	movwf	??_Lcd_Set_Cursor
  3892  078C  085A               	movf	??_Lcd_Set_Cursor,w
  3893  078D  00DC               	movwf	Lcd_Set_Cursor@temp
  3894  078E                     l1869:
  3895                           
  3896                           ;LCD.c: 53:         Lcd_Cmd(temp);
  3897  078E  085C               	movf	Lcd_Set_Cursor@temp,w
  3898  078F  120A  158A  278A  120A  118A  	fcall	_Lcd_Cmd
  3899                           
  3900                           ;LCD.c: 54:  }
  3901  0794  2FA6               	goto	l255
  3902  0795                     l1871:
  3903  0795  3002               	movlw	2
  3904  0796  065B               	xorwf	Lcd_Set_Cursor@a,w
  3905  0797  1D03               	btfss	3,2
  3906  0798  2F9A               	goto	u1441
  3907  0799  2F9B               	goto	u1440
  3908  079A                     u1441:
  3909  079A  2FA6               	goto	l255
  3910  079B                     u1440:
  3911  079B                     l1873:
  3912                           
  3913                           ;LCD.c: 56:   temp = 0xC0 + b - 1;
  3914  079B  0877               	movf	Lcd_Set_Cursor@b,w
  3915  079C  3EBF               	addlw	191
  3916  079D  00DA               	movwf	??_Lcd_Set_Cursor
  3917  079E  085A               	movf	??_Lcd_Set_Cursor,w
  3918  079F  00DC               	movwf	Lcd_Set_Cursor@temp
  3919  07A0                     l1875:
  3920                           
  3921                           ;LCD.c: 57:   Lcd_Cmd(temp);
  3922  07A0  085C               	movf	Lcd_Set_Cursor@temp,w
  3923  07A1  120A  158A  278A  120A  118A  	fcall	_Lcd_Cmd
  3924  07A6                     l255:
  3925  07A6  0008               	return
  3926  07A7                     __end_of_Lcd_Set_Cursor:
  3927                           
  3928                           	psect	text18
  3929  0626                     __ptext18:	
  3930 ;; *************** function _Lcd_Init *****************
  3931 ;; Defined at:
  3932 ;;		line 15 in file "LCD.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;		None
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;		None
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      void 
  3939 ;; Registers used:
  3940 ;;		wreg, status,2, status,0, pclath, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3946 ;;      Params:         0       0       0       0       0
  3947 ;;      Locals:         0       0       0       0       0
  3948 ;;      Temps:          0       2       0       0       0
  3949 ;;      Totals:         0       2       0       0       0
  3950 ;;Total ram usage:        2 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    3
  3953 ;; This function calls:
  3954 ;;		_Lcd_Cmd
  3955 ;;		_Lcd_Port
  3956 ;; This function is called by:
  3957 ;;		_main
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           
  3962                           ;psect for function _Lcd_Init
  3963  0626                     _Lcd_Init:
  3964  0626                     l2011:	
  3965                           ;incstack = 0
  3966                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3967                           
  3968                           
  3969                           ;LCD.c: 16:   Lcd_Port(0x00);
  3970  0626  3000               	movlw	0
  3971  0627  120A  158A  26E7  120A  118A  	fcall	_Lcd_Port
  3972  062C                     l2013:
  3973                           
  3974                           ;LCD.c: 17:    _delay((unsigned long)((20)*(8000000/4000.0)));
  3975  062C  3034               	movlw	52
  3976  062D  1283               	bcf	3,5	;RP0=0, select bank0
  3977  062E  1303               	bcf	3,6	;RP1=0, select bank0
  3978  062F  00DB               	movwf	??_Lcd_Init+1
  3979  0630  30F1               	movlw	241
  3980  0631  00DA               	movwf	??_Lcd_Init
  3981  0632                     u1977:
  3982  0632  0BDA               	decfsz	??_Lcd_Init,f
  3983  0633  2E32               	goto	u1977
  3984  0634  0BDB               	decfsz	??_Lcd_Init+1,f
  3985  0635  2E32               	goto	u1977
  3986  0636                     l2015:
  3987                           
  3988                           ;LCD.c: 18:   Lcd_Cmd(0x30);
  3989  0636  3030               	movlw	48
  3990  0637  120A  158A  278A  120A  118A  	fcall	_Lcd_Cmd
  3991                           
  3992                           ;LCD.c: 19:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3993  063C  300D               	movlw	13
  3994  063D  1283               	bcf	3,5	;RP0=0, select bank0
  3995  063E  1303               	bcf	3,6	;RP1=0, select bank0
  3996  063F  00DB               	movwf	??_Lcd_Init+1
  3997  0640  30FB               	movlw	251
  3998  0641  00DA               	movwf	??_Lcd_Init
  3999  0642                     u1987:
  4000  0642  0BDA               	decfsz	??_Lcd_Init,f
  4001  0643  2E42               	goto	u1987
  4002  0644  0BDB               	decfsz	??_Lcd_Init+1,f
  4003  0645  2E42               	goto	u1987
  4004  0646                     l2017:
  4005                           
  4006                           ;LCD.c: 20:   Lcd_Cmd(0x30);
  4007  0646  3030               	movlw	48
  4008  0647  120A  158A  278A  120A  118A  	fcall	_Lcd_Cmd
  4009  064C                     l2019:
  4010                           
  4011                           ;LCD.c: 21:     _delay((unsigned long)((11)*(8000000/4000.0)));
  4012  064C  301D               	movlw	29
  4013  064D  1283               	bcf	3,5	;RP0=0, select bank0
  4014  064E  1303               	bcf	3,6	;RP1=0, select bank0
  4015  064F  00DB               	movwf	??_Lcd_Init+1
  4016  0650  3090               	movlw	144
  4017  0651  00DA               	movwf	??_Lcd_Init
  4018  0652                     u1997:
  4019  0652  0BDA               	decfsz	??_Lcd_Init,f
  4020  0653  2E52               	goto	u1997
  4021  0654  0BDB               	decfsz	??_Lcd_Init+1,f
  4022  0655  2E52               	goto	u1997
  4023  0656  0000               	nop
  4024                           
  4025                           ;LCD.c: 22:   Lcd_Cmd(0x30);
  4026  0657  3030               	movlw	48
  4027  0658  120A  158A  278A  120A  118A  	fcall	_Lcd_Cmd
  4028                           
  4029                           ;LCD.c: 23:   Lcd_Cmd(0x38);
  4030  065D  3038               	movlw	56
  4031  065E  120A  158A  278A  120A  118A  	fcall	_Lcd_Cmd
  4032                           
  4033                           ;LCD.c: 24:   Lcd_Cmd(0x0C);
  4034  0663  300C               	movlw	12
  4035  0664  120A  158A  278A  120A  118A  	fcall	_Lcd_Cmd
  4036                           
  4037                           ;LCD.c: 25:   Lcd_Cmd(0x01);
  4038  0669  3001               	movlw	1
  4039  066A  120A  158A  278A  120A  118A  	fcall	_Lcd_Cmd
  4040                           
  4041                           ;LCD.c: 26:   Lcd_Cmd(0x06);
  4042  066F  3006               	movlw	6
  4043  0670  120A  158A  278A  120A  118A  	fcall	_Lcd_Cmd
  4044  0675                     l240:
  4045  0675  0008               	return
  4046  0676                     __end_of_Lcd_Init:
  4047                           
  4048                           	psect	text19
  4049  0F27                     __ptext19:	
  4050 ;; *************** function _Lcd_Clear *****************
  4051 ;; Defined at:
  4052 ;;		line 43 in file "LCD.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		wreg, status,2, status,0, pclath, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4066 ;;      Params:         0       0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0
  4069 ;;      Totals:         0       0       0       0       0
  4070 ;;Total ram usage:        0 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    3
  4073 ;; This function calls:
  4074 ;;		_Lcd_Cmd
  4075 ;; This function is called by:
  4076 ;;		_main
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           
  4081                           ;psect for function _Lcd_Clear
  4082  0F27                     _Lcd_Clear:
  4083  0F27                     l2021:	
  4084                           ;incstack = 0
  4085                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4086                           
  4087                           
  4088                           ;LCD.c: 44:  Lcd_Cmd(0);
  4089  0F27  3000               	movlw	0
  4090  0F28  120A  158A  278A  120A  158A  	fcall	_Lcd_Cmd
  4091                           
  4092                           ;LCD.c: 45:  Lcd_Cmd(1);
  4093  0F2D  3001               	movlw	1
  4094  0F2E  120A  158A  278A  120A  158A  	fcall	_Lcd_Cmd
  4095  0F33                     l249:
  4096  0F33  0008               	return
  4097  0F34                     __end_of_Lcd_Clear:
  4098                           
  4099                           	psect	text20
  4100  0F8A                     __ptext20:	
  4101 ;; *************** function _Lcd_Cmd *****************
  4102 ;; Defined at:
  4103 ;;		line 34 in file "LCD.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  a               1    wreg     unsigned char 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  a               1    6[COMMON] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, status,0, pclath, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4117 ;;      Params:         0       0       0       0       0
  4118 ;;      Locals:         1       0       0       0       0
  4119 ;;      Temps:          2       0       0       0       0
  4120 ;;      Totals:         3       0       0       0       0
  4121 ;;Total ram usage:        3 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:    2
  4124 ;; This function calls:
  4125 ;;		_Lcd_Port
  4126 ;; This function is called by:
  4127 ;;		_Lcd_Init
  4128 ;;		_Lcd_Clear
  4129 ;;		_Lcd_Set_Cursor
  4130 ;;		_Lcd_Shift_Right
  4131 ;;		_Lcd_Shift_Left
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           
  4136                           ;psect for function _Lcd_Cmd
  4137  0F8A                     _Lcd_Cmd:
  4138                           
  4139                           ;incstack = 0
  4140                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4141                           ;Lcd_Cmd@a stored from wreg
  4142  0F8A  00F6               	movwf	Lcd_Cmd@a
  4143  0F8B                     l1821:
  4144                           
  4145                           ;LCD.c: 35:  PORTEbits.RE0 = 0;
  4146  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  4147  0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  4148  0F8D  1009               	bcf	9,0	;volatile
  4149  0F8E                     l1823:
  4150                           
  4151                           ;LCD.c: 36:  Lcd_Port(a);
  4152  0F8E  0876               	movf	Lcd_Cmd@a,w
  4153  0F8F  120A  158A  26E7  120A  158A  	fcall	_Lcd_Port
  4154  0F94                     l1825:
  4155                           
  4156                           ;LCD.c: 37:  PORTEbits.RE2 = 1;
  4157  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  4158  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  4159  0F96  1509               	bsf	9,2	;volatile
  4160  0F97                     l1827:
  4161                           
  4162                           ;LCD.c: 38:         _delay((unsigned long)((4)*(8000000/4000.0)));
  4163  0F97  300B               	movlw	11
  4164  0F98  00F5               	movwf	??_Lcd_Cmd+1
  4165  0F99  3062               	movlw	98
  4166  0F9A  00F4               	movwf	??_Lcd_Cmd
  4167  0F9B                     u2007:
  4168  0F9B  0BF4               	decfsz	??_Lcd_Cmd,f
  4169  0F9C  2F9B               	goto	u2007
  4170  0F9D  0BF5               	decfsz	??_Lcd_Cmd+1,f
  4171  0F9E  2F9B               	goto	u2007
  4172  0F9F  0000               	nop
  4173  0FA0                     l1829:
  4174                           
  4175                           ;LCD.c: 39:         PORTEbits.RE2 = 0;
  4176  0FA0  1283               	bcf	3,5	;RP0=0, select bank0
  4177  0FA1  1303               	bcf	3,6	;RP1=0, select bank0
  4178  0FA2  1109               	bcf	9,2	;volatile
  4179  0FA3                     l246:
  4180  0FA3  0008               	return
  4181  0FA4                     __end_of_Lcd_Cmd:
  4182                           
  4183                           	psect	text21
  4184  0EE7                     __ptext21:	
  4185 ;; *************** function _Lcd_Port *****************
  4186 ;; Defined at:
  4187 ;;		line 30 in file "LCD.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  a               1    wreg     unsigned char 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  a               1    3[COMMON] unsigned char 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  1    wreg      void 
  4194 ;; Registers used:
  4195 ;;		wreg
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4201 ;;      Params:         0       0       0       0       0
  4202 ;;      Locals:         1       0       0       0       0
  4203 ;;      Temps:          0       0       0       0       0
  4204 ;;      Totals:         1       0       0       0       0
  4205 ;;Total ram usage:        1 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; Hardware stack levels required when called:    1
  4208 ;; This function calls:
  4209 ;;		Nothing
  4210 ;; This function is called by:
  4211 ;;		_Lcd_Init
  4212 ;;		_Lcd_Cmd
  4213 ;;		_Lcd_Write_Char
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           
  4218                           ;psect for function _Lcd_Port
  4219  0EE7                     _Lcd_Port:
  4220                           
  4221                           ;incstack = 0
  4222                           ; Regs used in _Lcd_Port: [wreg]
  4223                           ;Lcd_Port@a stored from wreg
  4224  0EE7  00F3               	movwf	Lcd_Port@a
  4225  0EE8                     l1819:
  4226                           
  4227                           ;LCD.c: 31:     PORTD = a;
  4228  0EE8  0873               	movf	Lcd_Port@a,w
  4229  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  4230  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  4231  0EEB  0088               	movwf	8	;volatile
  4232  0EEC                     l243:
  4233  0EEC  0008               	return
  4234  0EED                     __end_of_Lcd_Port:
  4235                           
  4236                           	psect	text22
  4237  0F10                     __ptext22:	
  4238 ;; *************** function _I2C_Master_Write *****************
  4239 ;; Defined at:
  4240 ;;		line 84 in file "I2C.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  d               2    3[COMMON] unsigned int 
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;		None
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg, status,2, status,0, pclath, cstack
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4254 ;;      Params:         2       0       0       0       0
  4255 ;;      Locals:         0       0       0       0       0
  4256 ;;      Temps:          0       0       0       0       0
  4257 ;;      Totals:         2       0       0       0       0
  4258 ;;Total ram usage:        2 bytes
  4259 ;; Hardware stack levels used:    1
  4260 ;; Hardware stack levels required when called:    2
  4261 ;; This function calls:
  4262 ;;		_I2C_Master_Wait
  4263 ;; This function is called by:
  4264 ;;		_main
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           
  4269                           ;psect for function _I2C_Master_Write
  4270  0F10                     _I2C_Master_Write:
  4271  0F10                     l2099:	
  4272                           ;incstack = 0
  4273                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4274                           
  4275                           
  4276                           ;I2C.c: 84: void I2C_Master_Write(unsigned d);I2C.c: 85: {;I2C.c: 86:     I2C_Master_Wai
      +                          t();
  4277  0F10  120A  158A  271A  120A  158A  	fcall	_I2C_Master_Wait
  4278  0F15                     l2101:
  4279                           
  4280                           ;I2C.c: 87:     SSPBUF = d;
  4281  0F15  0873               	movf	I2C_Master_Write@d,w
  4282  0F16  1283               	bcf	3,5	;RP0=0, select bank0
  4283  0F17  1303               	bcf	3,6	;RP1=0, select bank0
  4284  0F18  0093               	movwf	19	;volatile
  4285  0F19                     l217:
  4286  0F19  0008               	return
  4287  0F1A                     __end_of_I2C_Master_Write:
  4288                           
  4289                           	psect	text23
  4290  0F07                     __ptext23:	
  4291 ;; *************** function _I2C_Master_Stop *****************
  4292 ;; Defined at:
  4293 ;;		line 73 in file "I2C.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;		None
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;		None
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  1    wreg      void 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0, pclath, cstack
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4307 ;;      Params:         0       0       0       0       0
  4308 ;;      Locals:         0       0       0       0       0
  4309 ;;      Temps:          0       0       0       0       0
  4310 ;;      Totals:         0       0       0       0       0
  4311 ;;Total ram usage:        0 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    2
  4314 ;; This function calls:
  4315 ;;		_I2C_Master_Wait
  4316 ;; This function is called by:
  4317 ;;		_main
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           
  4322                           ;psect for function _I2C_Master_Stop
  4323  0F07                     _I2C_Master_Stop:
  4324  0F07                     l2103:	
  4325                           ;incstack = 0
  4326                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4327                           
  4328                           
  4329                           ;I2C.c: 75:     I2C_Master_Wait();
  4330  0F07  120A  158A  271A  120A  158A  	fcall	_I2C_Master_Wait
  4331  0F0C                     l2105:
  4332                           
  4333                           ;I2C.c: 76:     SSPCON2bits.PEN = 1;
  4334  0F0C  1683               	bsf	3,5	;RP0=1, select bank1
  4335  0F0D  1303               	bcf	3,6	;RP1=0, select bank1
  4336  0F0E  1511               	bsf	17,2	;volatile
  4337  0F0F                     l214:
  4338  0F0F  0008               	return
  4339  0F10                     __end_of_I2C_Master_Stop:
  4340                           
  4341                           	psect	text24
  4342  0EFE                     __ptext24:	
  4343 ;; *************** function _I2C_Master_Start *****************
  4344 ;; Defined at:
  4345 ;;		line 56 in file "I2C.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;		None
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;		None
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      void 
  4352 ;; Registers used:
  4353 ;;		wreg, status,2, status,0, pclath, cstack
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4359 ;;      Params:         0       0       0       0       0
  4360 ;;      Locals:         0       0       0       0       0
  4361 ;;      Temps:          0       0       0       0       0
  4362 ;;      Totals:         0       0       0       0       0
  4363 ;;Total ram usage:        0 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:    2
  4366 ;; This function calls:
  4367 ;;		_I2C_Master_Wait
  4368 ;; This function is called by:
  4369 ;;		_main
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           
  4374                           ;psect for function _I2C_Master_Start
  4375  0EFE                     _I2C_Master_Start:
  4376  0EFE                     l2095:	
  4377                           ;incstack = 0
  4378                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4379                           
  4380                           
  4381                           ;I2C.c: 57:     I2C_Master_Wait();
  4382  0EFE  120A  158A  271A  120A  158A  	fcall	_I2C_Master_Wait
  4383  0F03                     l2097:
  4384                           
  4385                           ;I2C.c: 58:     SSPCON2bits.SEN = 1;
  4386  0F03  1683               	bsf	3,5	;RP0=1, select bank1
  4387  0F04  1303               	bcf	3,6	;RP1=0, select bank1
  4388  0F05  1411               	bsf	17,0	;volatile
  4389  0F06                     l208:
  4390  0F06  0008               	return
  4391  0F07                     __end_of_I2C_Master_Start:
  4392                           
  4393                           	psect	text25
  4394  0EF5                     __ptext25:	
  4395 ;; *************** function _I2C_Master_RepeatedStart *****************
  4396 ;; Defined at:
  4397 ;;		line 64 in file "I2C.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;		None
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      void 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2, status,0, pclath, cstack
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4411 ;;      Params:         0       0       0       0       0
  4412 ;;      Locals:         0       0       0       0       0
  4413 ;;      Temps:          0       0       0       0       0
  4414 ;;      Totals:         0       0       0       0       0
  4415 ;;Total ram usage:        0 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:    2
  4418 ;; This function calls:
  4419 ;;		_I2C_Master_Wait
  4420 ;; This function is called by:
  4421 ;;		_main
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           
  4426                           ;psect for function _I2C_Master_RepeatedStart
  4427  0EF5                     _I2C_Master_RepeatedStart:
  4428  0EF5                     l2107:	
  4429                           ;incstack = 0
  4430                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  4431                           
  4432                           
  4433                           ;I2C.c: 66:     I2C_Master_Wait();
  4434  0EF5  120A  158A  271A  120A  158A  	fcall	_I2C_Master_Wait
  4435  0EFA                     l2109:
  4436                           
  4437                           ;I2C.c: 67:     SSPCON2bits.RSEN = 1;
  4438  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  4439  0EFB  1303               	bcf	3,6	;RP1=0, select bank1
  4440  0EFC  1491               	bsf	17,1	;volatile
  4441  0EFD                     l211:
  4442  0EFD  0008               	return
  4443  0EFE                     __end_of_I2C_Master_RepeatedStart:
  4444                           
  4445                           	psect	text26
  4446  0728                     __ptext26:	
  4447 ;; *************** function _I2C_Master_Read *****************
  4448 ;; Defined at:
  4449 ;;		line 94 in file "I2C.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  a               2    3[COMMON] unsigned short 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  temp            2    0[BANK0 ] unsigned short 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  2    3[COMMON] unsigned short 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2, status,0, pclath, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4463 ;;      Params:         2       0       0       0       0
  4464 ;;      Locals:         0       2       0       0       0
  4465 ;;      Temps:          2       0       0       0       0
  4466 ;;      Totals:         4       2       0       0       0
  4467 ;;Total ram usage:        6 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:    2
  4470 ;; This function calls:
  4471 ;;		_I2C_Master_Wait
  4472 ;; This function is called by:
  4473 ;;		_main
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           
  4478                           ;psect for function _I2C_Master_Read
  4479  0728                     _I2C_Master_Read:
  4480  0728                     l2111:	
  4481                           ;incstack = 0
  4482                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4483                           
  4484                           
  4485                           ;I2C.c: 94: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 95: {;I2C.c: 96:    
      +                           unsigned short temp;;I2C.c: 97:     I2C_Master_Wait();
  4486  0728  120A  158A  271A  120A  118A  	fcall	_I2C_Master_Wait
  4487  072D                     l2113:
  4488                           
  4489                           ;I2C.c: 98:     SSPCON2bits.RCEN = 1;
  4490  072D  1683               	bsf	3,5	;RP0=1, select bank1
  4491  072E  1303               	bcf	3,6	;RP1=0, select bank1
  4492  072F  1591               	bsf	17,3	;volatile
  4493                           
  4494                           ;I2C.c: 99:     I2C_Master_Wait();
  4495  0730  120A  158A  271A  120A  118A  	fcall	_I2C_Master_Wait
  4496  0735                     l2115:
  4497                           
  4498                           ;I2C.c: 100:     temp = SSPBUF;
  4499  0735  1283               	bcf	3,5	;RP0=0, select bank0
  4500  0736  1303               	bcf	3,6	;RP1=0, select bank0
  4501  0737  0813               	movf	19,w	;volatile
  4502  0738  00F5               	movwf	??_I2C_Master_Read
  4503  0739  01F6               	clrf	??_I2C_Master_Read+1
  4504  073A  0875               	movf	??_I2C_Master_Read,w
  4505  073B  00DA               	movwf	I2C_Master_Read@temp
  4506  073C  0876               	movf	??_I2C_Master_Read+1,w
  4507  073D  00DB               	movwf	I2C_Master_Read@temp+1
  4508  073E                     l2117:
  4509                           
  4510                           ;I2C.c: 101:     I2C_Master_Wait();
  4511  073E  120A  158A  271A  120A  118A  	fcall	_I2C_Master_Wait
  4512  0743                     l2119:
  4513                           
  4514                           ;I2C.c: 102:     if(a == 1){
  4515  0743  0373               	decf	I2C_Master_Read@a,w
  4516  0744  0474               	iorwf	I2C_Master_Read@a+1,w
  4517  0745  1D03               	btfss	3,2
  4518  0746  2F48               	goto	u1861
  4519  0747  2F49               	goto	u1860
  4520  0748                     u1861:
  4521  0748  2F4D               	goto	l220
  4522  0749                     u1860:
  4523  0749                     l2121:
  4524                           
  4525                           ;I2C.c: 103:         SSPCON2bits.ACKDT = 0;
  4526  0749  1683               	bsf	3,5	;RP0=1, select bank1
  4527  074A  1303               	bcf	3,6	;RP1=0, select bank1
  4528  074B  1291               	bcf	17,5	;volatile
  4529                           
  4530                           ;I2C.c: 104:     }else{
  4531  074C  2F50               	goto	l221
  4532  074D                     l220:
  4533                           
  4534                           ;I2C.c: 105:         SSPCON2bits.ACKDT = 1;
  4535  074D  1683               	bsf	3,5	;RP0=1, select bank1
  4536  074E  1303               	bcf	3,6	;RP1=0, select bank1
  4537  074F  1691               	bsf	17,5	;volatile
  4538  0750                     l221:	
  4539                           ;I2C.c: 106:     }
  4540                           
  4541                           
  4542                           ;I2C.c: 107:     SSPCON2bits.ACKEN = 1;
  4543  0750  1611               	bsf	17,4	;volatile
  4544  0751                     l2123:
  4545                           
  4546                           ;I2C.c: 108:     return temp;
  4547  0751  1283               	bcf	3,5	;RP0=0, select bank0
  4548  0752  1303               	bcf	3,6	;RP1=0, select bank0
  4549  0753  085B               	movf	I2C_Master_Read@temp+1,w
  4550  0754  00F4               	movwf	?_I2C_Master_Read+1
  4551  0755  085A               	movf	I2C_Master_Read@temp,w
  4552  0756  00F3               	movwf	?_I2C_Master_Read
  4553  0757                     l222:
  4554  0757  0008               	return
  4555  0758                     __end_of_I2C_Master_Read:
  4556                           
  4557                           	psect	text27
  4558  0F1A                     __ptext27:	
  4559 ;; *************** function _I2C_Master_Wait *****************
  4560 ;; Defined at:
  4561 ;;		line 48 in file "I2C.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;		None
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg, status,2
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4575 ;;      Params:         0       0       0       0       0
  4576 ;;      Locals:         0       0       0       0       0
  4577 ;;      Temps:          0       0       0       0       0
  4578 ;;      Totals:         0       0       0       0       0
  4579 ;;Total ram usage:        0 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:    1
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_I2C_Master_Start
  4586 ;;		_I2C_Master_RepeatedStart
  4587 ;;		_I2C_Master_Stop
  4588 ;;		_I2C_Master_Write
  4589 ;;		_I2C_Master_Read
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           
  4594                           ;psect for function _I2C_Master_Wait
  4595  0F1A                     _I2C_Master_Wait:
  4596  0F1A                     l1901:	
  4597                           ;incstack = 0
  4598                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4599                           
  4600  0F1A                     l202:	
  4601                           ;I2C.c: 50:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4602                           
  4603  0F1A  1683               	bsf	3,5	;RP0=1, select bank1
  4604  0F1B  1303               	bcf	3,6	;RP1=0, select bank1
  4605  0F1C  1914               	btfsc	20,2	;volatile
  4606  0F1D  2F1F               	goto	u1501
  4607  0F1E  2F20               	goto	u1500
  4608  0F1F                     u1501:
  4609  0F1F  2F1A               	goto	l202
  4610  0F20                     u1500:
  4611  0F20                     l1903:
  4612  0F20  0811               	movf	17,w	;volatile
  4613  0F21  391F               	andlw	31
  4614  0F22  1D03               	btfss	3,2
  4615  0F23  2F25               	goto	u1511
  4616  0F24  2F26               	goto	u1510
  4617  0F25                     u1511:
  4618  0F25  2F1A               	goto	l202
  4619  0F26                     u1510:
  4620  0F26                     l205:
  4621  0F26  0008               	return
  4622  0F27                     __end_of_I2C_Master_Wait:
  4623                           
  4624                           	psect	text28
  4625  0F34                     __ptext28:	
  4626 ;; *************** function _ISR *****************
  4627 ;; Defined at:
  4628 ;;		line 91 in file "main_prueba3_mini2.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;		None
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg, status,2
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4642 ;;      Params:         0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0
  4644 ;;      Temps:          3       0       0       0       0
  4645 ;;      Totals:         3       0       0       0       0
  4646 ;;Total ram usage:        3 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		Interrupt level 1
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           
  4656                           ;psect for function _ISR
  4657  0F34                     _ISR:
  4658  0F34                     i1l1259:
  4659                           
  4660                           ;main_prueba3_mini2.c: 92:     if(PIR1bits.RCIF == 1){
  4661  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  4662  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  4663  0F36  1E8C               	btfss	12,5	;volatile
  4664  0F37  2F39               	goto	u65_21
  4665  0F38  2F3A               	goto	u65_20
  4666  0F39                     u65_21:
  4667  0F39  2F3F               	goto	i1l107
  4668  0F3A                     u65_20:
  4669  0F3A                     i1l1261:
  4670                           
  4671                           ;main_prueba3_mini2.c: 93:         data_recive = RCREG;
  4672  0F3A  081A               	movf	26,w	;volatile
  4673  0F3B  00F0               	movwf	??_ISR
  4674  0F3C  0870               	movf	??_ISR,w
  4675  0F3D  00F8               	movwf	_data_recive
  4676  0F3E                     i1l1271:	
  4677                           ;main_prueba3_mini2.c: 94:         if (data_recive == 'P11'){
  4678                           
  4679                           
  4680                           ;main_prueba3_mini2.c: 106:         data_recive = 0;
  4681  0F3E  01F8               	clrf	_data_recive
  4682  0F3F                     i1l107:
  4683  0F3F  0872               	movf	??_ISR+2,w
  4684  0F40  008A               	movwf	10
  4685  0F41  0E71               	swapf	??_ISR+1,w
  4686  0F42  0083               	movwf	3
  4687  0F43  0EFE               	swapf	btemp,f
  4688  0F44  0E7E               	swapf	btemp,w
  4689  0F45  0009               	retfie
  4690  0F46                     __end_of_ISR:
  4691  007E                     btemp	set	126	;btemp
  4692  007E                     wtemp0	set	126
  4693                           
  4694                           	psect	intentry
  4695  0004                     __pintentry:	
  4696                           ;incstack = 0
  4697                           ; Regs used in _ISR: [wreg+status,2]
  4698                           
  4699  0004                     interrupt_function:
  4700  007E                     saved_w	set	btemp
  4701  0004  00FE               	movwf	btemp
  4702  0005  0E03               	swapf	3,w
  4703  0006  00F1               	movwf	??_ISR+1
  4704  0007  080A               	movf	10,w
  4705  0008  00F2               	movwf	??_ISR+2
  4706  0009  120A  158A  2F34   	ljmp	_ISR
  4707                           
  4708                           	psect	config
  4709                           
  4710                           ;Config register CONFIG1 @ 0x2007
  4711                           ;	Oscillator Selection bits
  4712                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4713                           ;	Watchdog Timer Enable bit
  4714                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4715                           ;	Power-up Timer Enable bit
  4716                           ;	PWRTE = OFF, PWRT disabled
  4717                           ;	RE3/MCLR pin function select bit
  4718                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4719                           ;	Code Protection bit
  4720                           ;	CP = OFF, Program memory code protection is disabled
  4721                           ;	Data Code Protection bit
  4722                           ;	CPD = OFF, Data memory code protection is disabled
  4723                           ;	Brown Out Reset Selection bits
  4724                           ;	BOREN = OFF, BOR disabled
  4725                           ;	Internal External Switchover bit
  4726                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4727                           ;	Fail-Safe Clock Monitor Enabled bit
  4728                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4729                           ;	Low Voltage Programming Enable bit
  4730                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4731                           ;	In-Circuit Debugger Mode bit
  4732                           ;	DEBUG = 0x1, unprogrammed default
  4733  2007                     	org	8199
  4734  2007  20D4               	dw	8404
  4735                           
  4736                           ;Config register CONFIG2 @ 0x2008
  4737                           ;	Brown-out Reset Selection bit
  4738                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4739                           ;	Flash Program Memory Self Write Enable bits
  4740                           ;	WRT = OFF, Write protection off
  4741  2008                     	org	8200
  4742  2008  3FFF               	dw	16383

Data Sizes:
    Strings     19
    Constant    0
    Data        32
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     20      78
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(COMMON[2]), 

    S840__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    S840__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> data_total(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> data_total(BANK0[20]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[3]), Date(BANK0[17]), Time(BANK0[15]), STR_2(CODE[12]), 


Critical Paths under _main in COMMON

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _edit->_LCD_PutC
    _edit->_Lcd_Set_Cursor
    _edit->_Lcd_Write_String
    _edit->___awdiv
    _edit->___awmod
    _LCD_PutC->_LCD_Write_Nibble
    _decimal_to_bcd->___awdiv
    _decimal_to_bcd->___awmod
    _RTC_display->_Lcd_Set_Cursor
    _RTC_display->_Lcd_Write_String
    _RTC_display->___awdiv
    _RTC_display->___awmod
    _RTC_display->_bcd_to_decimal
    _bcd_to_decimal->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _edit->_Lcd_Write_String
    _decimal_to_bcd->___awdiv
    _RTC_display->_Lcd_Write_String

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   19911
                                             17 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                        _RTC_display
                           _debounce
                     _decimal_to_bcd
                               _edit
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _edit                                                 6     4      2    7284
                                              5 BANK0      6     4      2
                           _LCD_PutC
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                              _blink
                           _debounce
 ---------------------------------------------------------------------------------
 (2) _debounce                                             4     4      0      70
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _blink                                                3     3      0      24
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_PutC                                             2     2      0     132
                                              6 COMMON     2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Nibble                                     3     3      0      88
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _decimal_to_bcd                                       6     6      0    4180
                                              4 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          3     3      0    5874
                                              5 BANK0      3     3      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     230
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    2053
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    2065
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     642
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      62
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       4     3      1     884
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1111
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _RTC_display
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _debounce
   _decimal_to_bcd
     ___awdiv
     ___awmod
   _edit
     _LCD_PutC
       _LCD_Write_Nibble
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___awmod
     _blink
     _debounce
   _setup
     _I2C_Master_Init
       ___lldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      59      12        0.0%
ABS                  0      0      59       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 21:00:35 2021

                                _i 0045                                  pc 0002  
                   ___bmul@product 0075                       ___awdiv@sign 005B  
                               fsr 0004                     _decimal_to_bcd 06F6  
                      _RTC_display 0211                                l202 0F1A  
                              l211 0EFD                                l220 074D  
                              l132 038D                                l205 0F26  
                              l221 0750                                l222 0757  
                              l214 0F0F                                l126 0FBF  
                              l135 075A                                l208 0F06  
                              l240 0675                                l217 0F19  
                              l129 0727                                l170 07EB  
                              l243 0EEC                                l139 0780  
                              l148 0FDF                                l165 04A2  
                              l246 0FA3                                l255 07A6  
                              l264 06BB                                l249 0F33  
                              l273 0625                                l258 0F70  
                              l515 050B                                l276 0F89  
                              l199 06F5                                l528 05CE  
                              l388 0F5A                                l398 0573  
                              _GIE 005F                                _RB0 0030  
                              _RB1 0031                                _ISR 0F34  
                              u704 05DC                                u730 0F4C  
                              u731 0F4B                                u715 05F5  
                              u740 0F59                                u820 0760  
                              u741 0F58                                u725 0608  
                              u821 075F                                u910 0FD5  
                              u830 0777                                u911 0FD4  
                              u831 0776                                u920 0FDB  
                              u840 077D                                u921 0FDA  
                              u841 077C                                u690 05D9  
                              u930 0FDF                                u691 05D5  
                              u931 0FDE                                u945 0F78  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 005B                               ?_ISR 0070  
                             l2001 07DA                               l2011 0626  
                             l2003 07DB                               l2101 0F15  
                             l2021 0F27                               l2013 062C  
                             l2005 07DC                               l2111 0728  
                             l2103 0F07                               l2015 0636  
                             l2031 03AA                               l2023 0391  
                             l2007 07DD                               l2121 0749  
                             l2113 072D                               l2105 0F0C  
                             l2017 0646                               l1401 0F48  
                             l2041 03BD                               l2033 03AB  
                             l2025 0391                               l2009 07DE  
                             l2123 0751                               l2115 0735  
                             l2107 0EF5                               l2019 064C  
                             l1403 0F4C                               l2131 0378  
                             l2051 03D3                               l2043 03C3  
                             l2035 03B0                               l2027 039B  
                             l2117 073E                               l2109 0EFA  
                             l1405 0F50                               l2061 0403  
                             l2053 03D9                               l2045 03C5  
                             l2037 03B6                               l2029 03A4  
                             l2141 003E                               l2133 002C  
                             l2119 0743                               l1407 0F52  
                             l2127 0211                               l2071 0444  
                             l2063 041C                               l2055 03DF  
                             l2047 03CB                               l2039 03B7  
                             l2151 0072                               l2143 0044  
                             l2135 0031                               l1409 0F59  
                             l2129 036F                               l2081 048C  
                             l2073 0449                               l2057 03E0  
                             l2049 03D1                               l2065 042B  
                             l2161 015F                               l2153 0085  
                             l2145 004D                               l2137 0034  
                             l2091 06F9                               l1451 077D  
                             l1443 0760                               l2083 0492  
                             l2075 0455                               l2067 0431  
                             l2059 03EA                               l2171 0189  
                             l2155 0098                               l2147 0050  
                             l2163 016E                               l2139 0039  
                             l1445 0764                               l1437 0758  
                             l2085 049B                               l2077 046E  
                             l2069 043B                               l2181 01C8  
                             l2173 0192                               l2165 0173  
                             l2157 00AB                               l2149 0061  
                             l2095 0EFE                               l1391 0619  
                             l1383 05D0                               l1447 076D  
                             l2087 04A1                               l2079 0487  
                             l2191 01FE                               l2183 01D7  
                             l2175 01A1                               l2167 017C  
                             l2159 00B4                               l2097 0F03  
                             l1393 061C                               l1385 05DC  
                             l1457 077F                               l1449 0777  
                             l2185 01E6                               l2177 01B0  
                             l2169 0184                               l2099 0F10  
                             l1395 061D                               l1387 0617  
                             l1491 0FCF                               l2187 01F4  
                             l2179 01BF                               l1901 0F1A  
                             l1821 0F8B                               l1397 0620  
                             l1389 0618                               l1493 0FD5  
                             l1485 0FC0                               l2189 01F9  
                             l1903 0F20                               l1823 0F8E  
                             l1831 0F5C                               l1911 04AF  
                             l1399 0F47                               l1495 0FDB  
                             l1487 0FC2                               l1825 0F94  
                             l1833 0F5F                               l1921 04C0  
                             l1913 04B1                               l1905 04A3  
                             l1497 0F72                               l1489 0FC6  
                             l1841 050C                               l1819 0EE8  
                             l1827 0F97                               l1835 0F65  
                             l1931 04D8                               l1923 04C6  
                             l1915 04B5                               l1907 04A6  
                             l1499 0F75                               l1851 053B  
                             l1843 051E                               l1829 0FA0  
                             l1837 0F68                               l1933 04E9  
                             l1925 04C9                               l1941 04FD  
                             l1917 04BA                               l1909 04AA  
                             l1853 054D                               l1845 0521  
                             l1861 056B                               l1871 0795  
                             l1839 0F6D                               l1943 0502  
                             l1935 04EF                               l1927 04D0  
                             l1919 04BE                               l1951 0577  
                             l1855 055B                               l1847 052E  
                             l1873 079B                               l1865 0784  
                             l1881 0697                               l1945 0507  
                             l1937 04F0                               l1929 04D4  
                             l1961 058B                               l1953 057B  
                             l1857 055C                               l1849 0532  
                             l1875 07A0                               l1867 0789  
                             l1883 069F                               l1939 04F7  
                             l1971 05A3                               l1963 0591  
                             l1955 0580                               l1859 0565  
                             l1891 06C0                               l1869 078E  
                             l1877 0676                               l1981 05C5  
                             l1973 05AD                               l1965 0594  
                             l1957 0582                               l1949 0574  
                             l1885 0FA5                               l1893 06C3  
                             l1879 067B                               l1983 05CA  
                             l1975 05B3                               l1967 059B  
                             l1959 0586                               l1895 06F2  
                             l1991 07D3                               l1977 05BA  
                             l1969 059F                               l1897 06F3  
                             l1889 06BC                               l1993 07D4  
                             l1979 05C0                               l1899 06F4  
                             l1995 07D5                               l1987 07CA  
                             l1997 07D6                               l1989 07D1  
                             l1999 07D7                  ?_LCD_Write_Nibble 0070  
                             STR_1 07C3                               STR_2 07B7  
                             STR_3 07C7                               u2007 0F9B  
                             u1400 054D                               u1401 054C  
                             u1500 0F20                               u1420 056B  
                             u1501 0F1F                               u1421 056A  
                             u1405 0549                               u1510 0F26  
                             u1430 0789                               u1511 0F25  
                             u1431 0788                               u1415 055D  
                             u1440 079B                               u1600 04FD  
                             u1520 04AA                               u1360 051E  
                             u1441 079A                               u1601 04FC  
                             u1521 04A9                               u1361 051D  
                             u1450 0685                               u1610 0502  
                             u1530 04B5                               u1611 0501  
                             u1531 04B4                               u1460 06A9  
                             u1540 04C6                               u1700 05C5  
                             u1620 057B                               u1380 0532  
                             u1541 04C5                               u1701 05C4  
                             u1621 057A                               u1381 0531  
                             u1470 06BB                               u1630 0586  
                             u1710 039A                               u1471 06BA  
                             u1631 0585                               u1711 0399  
                             u1375 0523                               u1560 04D8  
                             u1640 0591                               u1800 03D9  
                             u1720 03A4                               u1561 04D7  
                             u1641 0590                               u1801 03D8  
                             u1721 03A3                               u1810 03DF  
                             u1730 03AA                               u1490 06D3  
                             u1555 04CA                               u1811 03DE  
                             u1731 03A9                               u1395 0534  
                             u1580 04E9                               u1660 05A3  
                             u1820 0431                               u1740 03B0  
                             u1581 04E8                               u1661 05A2  
                             u1485 0FB1                               u1821 0430  
                             u1741 03AF                               u1670 05AD  
                             u1830 0492                               u1750 03B6  
                             u1575 04D9                               u1671 05AC  
                             u1655 0595                               u1831 0491  
                             u1751 03B5                               u1495 06CE  
                             u1840 049B                               u1760 03BD  
                             u1585 04E5                               u1841 049A  
                             u1761 03BC                               u1690 05C0  
                             u1770 03C3                               u1595 04F1  
                             u1691 05BF                               u1675 05A9  
                             u1771 03C2                               u1907 0167  
                             u1860 0749                               u1780 03CB  
                             u1861 0748                               u1685 05B4  
                             u1781 03CA                               u1917 0206  
                             u1790 03D1                               u1870 0044  
                             u1855 070E                               u1927 0424  
                             u1791 03D0                               u1871 0043  
                             u1880 004D                               u1937 0768  
                             u1881 004C                               u1890 00B4  
                             u1947 0FCA                               u1891 00B3  
                             _PEIE 005E                               u1957 0622  
                             u1967 0F6A                               u1977 0632  
                             u1987 0642                               u1997 0652  
                             _Date 0020                               _Time 0031  
               ??_LCD_Write_Nibble 0073                  ?_Lcd_Write_String 0076  
                             _edit 038E   __end_of_I2C_Master_RepeatedStart 0EFE  
                             _cont 0079                               _main 002C  
                             _hour 0043                               _year 0040  
                             btemp 007E                               start 000C  
               ??_Lcd_Write_String 005A                    __end_of_Lcd_Cmd 0FA4  
                ___bmul@multiplier 0076                              ??_ISR 0070  
           __end_of_decimal_to_bcd 0728                   ?_I2C_Master_Init 0067  
                 ?_I2C_Master_Read 0073                   __end_of_LCD_PutC 0F8A  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                            ?_edit 005F                              ?_main 0070  
                  __end_of___awdiv 050C                    __end_of___awmod 05CF  
                            _ANSEL 0188                    __end_of___lldiv 0574  
                  ___awdiv@divisor 0073                              i1l107 0F3F  
                  ___awdiv@counter 005A                              _RCREG 001A  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009                              u65_20 0F3A  
                            u65_21 0F39            __size_of_Lcd_Set_Cursor 0026  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISD 0088                              _SSPIE 0463  
                            _TRISE 0089                              _SSPIF 0063  
                            _blink 0FC0                              _m_day 0042  
                            edit@x 0064                              edit@y 005F  
                            _month 0041                              _setup 07CA  
                            pclath 000A                              status 0003  
                            wtemp0 007E                   __end_of_Lcd_Init 0676  
                 __end_of_Lcd_Port 0EED                    __initialization 000F  
                     __end_of_edit 04A3                       __end_of_main 0211  
                  ?_decimal_to_bcd 0070                             ??_edit 0061  
                           ??_main 006B                 __size_of_Lcd_Clear 000D  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0073  
               ??_I2C_Master_Start 0073                             ?_blink 0070  
               ??_I2C_Master_Write 0075                   ___awdiv@dividend 0075  
                           ?_setup 0070                             _ANSELH 0189  
                           i1l1261 0F3A                             i1l1271 0F3E  
                           i1l1259 0F34                          ??_Lcd_Cmd 0074  
          __size_of_Lcd_Write_Char 0016                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
                 __end_of_debounce 0781           _I2C_Master_RepeatedStart 0EF5  
                           ___bmul 0F46                          ??___awdiv 0077  
                        ??___awmod 0077                          ??___lldiv 0073  
                 ___awdiv@quotient 005C                             _minute 0044  
                           _second 007A                             blink@j 0075  
                  ___awmod@divisor 0073                    ___awmod@counter 005A  
                           saved_w 007E                    Lcd_Set_Cursor@a 005B  
                  Lcd_Set_Cursor@b 0077            __end_of__initialization 0028  
                        ?_LCD_PutC 0070                  __end_of_Lcd_Clear 0F34  
              ___bmul@multiplicand 0073                     __pcstackCOMMON 0070  
                     __pidataBANK0 0FE0                      __end_of_blink 0FE0  
                    __end_of_setup 07EC                       ?_RTC_display 0070  
                   _Lcd_Set_Cursor 0781                          ?_Lcd_Init 0070  
                        ?_Lcd_Port 0070                            ??_blink 0073  
                          ??_setup 0078                         __pbssBANK0 0040  
                       ??_LCD_PutC 0076                         _data_total 0046  
                       __pmaintext 002C                            ?___bmul 0073  
        __size_of_LCD_Write_Nibble 0057                         __pintentry 0004  
        __size_of_Lcd_Write_String 0046             __end_of_Lcd_Set_Cursor 07A7  
                        ?_debounce 0070            __size_of_bcd_to_decimal 001C  
                       ??_Lcd_Init 005A                         ??_Lcd_Port 0073  
                          _SSPCON2 0091                            _SSPSTAT 0094  
                       __stringtab 07A7                     _Lcd_Write_Char 0F5B  
                          _Lcd_Cmd 0F8A                   ??_decimal_to_bcd 005E  
                 LCD_PutC@LCD_Char 0077                    __size_of___bmul 0015  
                          ___awdiv 04A3                            ___awmod 0574  
                          ___lldiv 050C                      edit@parameter 0060  
                  ?_Lcd_Set_Cursor 0077                            __ptext1 07CA  
                          __ptext2 06BC                            __ptext3 050C  
                          __ptext4 038E                            __ptext5 0758  
                          __ptext6 0FC0                            __ptext7 0F71  
                          __ptext8 05CF                            __ptext9 06F6  
                     __size_of_ISR 0012                   ___awmod@dividend 0075  
                       ??_debounce 0073           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0030           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                      debounce@count 0075  
                          clrloop0 0EEE             __end_of_Lcd_Write_Char 0F71  
             end_of_initialization 0028         ??_I2C_Master_RepeatedStart 0073  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 005A                    ___lldiv@counter 0066  
                 I2C_Master_Init@c 0067                   I2C_Master_Read@a 0073  
                        Lcd_Port@a 0073                  LCD_Write_Nibble@n 0075  
                        _PORTAbits 0005                          _PORTDbits 0008  
                        _PORTEbits 0009               __size_of_RTC_display 017D  
                        _TRISCbits 0087                    ?_Lcd_Write_Char 0070  
                Lcd_Write_String@a 0076                  Lcd_Write_String@i 005D  
                __size_of_LCD_PutC 0019                          _Lcd_Clear 0F27  
                 _LCD_Write_Nibble 05CF                     __end_of___bmul 0F5B  
                 _Lcd_Write_String 0676                start_initialization 000F  
                   _bcd_to_decimal 0FA4                        __end_of_ISR 0F46  
                __size_of_Lcd_Init 0050                  __size_of_Lcd_Port 0006  
                ??_I2C_Master_Init 0074                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                  ??_I2C_Master_Stop 0073  
                       ?_Lcd_Clear 0070                           ??___bmul 0074  
                       init_fetch0 07EC                        __pdataBANK0 0020  
                  Lcd_Write_Char@a 0075             __end_of_bcd_to_decimal 0FC0  
                      __pbssCOMMON 0078                          ___latbits 0002  
                    __pcstackBANK0 005A                  __size_of_debounce 0029  
                      _data_recive 0078                           ?_Lcd_Cmd 0070  
                 _I2C_Master_Start 0EFE                   _I2C_Master_Write 0F10  
                 ??_Lcd_Set_Cursor 005A                           ?___awdiv 0073  
                         ?___awmod 0073                           ?___lldiv 005A  
                        __pstrings 07A7                    ?_bcd_to_decimal 0070  
                   __size_of_blink 0020               bcd_to_decimal@number 0077  
                   __size_of_setup 0022                          debounce@i 0076  
                interrupt_function 0004                           _LCD_PutC 0F71  
                        clear_ram0 0EED                           Lcd_Cmd@a 0076  
                         _PIR1bits 000C                        ??_Lcd_Clear 0077  
                      __stringbase 07B6                   ??_Lcd_Write_Char 0074  
                         _Lcd_Init 0626                           _Lcd_Port 0EE7  
              I2C_Master_Read@temp 005A           __end_of_LCD_Write_Nibble 0626  
         __end_of_Lcd_Write_String 06BC                   __size_of_Lcd_Cmd 001A  
__size_of_I2C_Master_RepeatedStart 0009                   __size_of___awdiv 0069  
                 __size_of___awmod 005B          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068                      ??_RTC_display 005F  
               __end_of__stringtab 07B7            __size_of_decimal_to_bcd 0032  
                  _I2C_Master_Init 06BC                    _I2C_Master_Read 0728  
                  _I2C_Master_Wait 0F1A                    _I2C_Master_Stop 0F07  
                         _debounce 0758                           __ptext10 0211  
                         __ptext11 0FA4                           __ptext20 0F8A  
                         __ptext12 0F46                           __ptext21 0EE7  
                         __ptext13 0574                           __ptext22 0F10  
                         __ptext14 04A3                           __ptext23 0F07  
                         __ptext15 0676                           __ptext24 0EFE  
                         __ptext16 0F5B                           __ptext25 0EF5  
                         __ptext17 0781                           __ptext26 0728  
                         __ptext18 0626                           __ptext27 0F1A  
                         __ptext19 0F27                           __ptext28 0F34  
                    __size_of_edit 0115                      __size_of_main 01E5  
             decimal_to_bcd@number 0063           __end_of_I2C_Master_Start 0F07  
         __end_of_I2C_Master_Write 0F1A                           init_ram0 07F0  
              __end_of_RTC_display 038E                           intlevel1 0000  
                 ___lldiv@dividend 005E                          stringcode 07B1  
                 ??_bcd_to_decimal 005A            __end_of_I2C_Master_Init 06F6  
          __end_of_I2C_Master_Read 0758            __end_of_I2C_Master_Wait 0F27  
          __end_of_I2C_Master_Stop 0F10                 Lcd_Set_Cursor@temp 005C  
                 ___lldiv@quotient 0062                  I2C_Master_Write@d 0073  
                         stringdir 07B1                           stringtab 07A7  
                      _SSPCON2bits 0091  
