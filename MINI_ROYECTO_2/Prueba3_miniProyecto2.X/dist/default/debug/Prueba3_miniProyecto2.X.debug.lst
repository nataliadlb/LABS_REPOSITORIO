

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Mar 07 10:27:35 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  0081                     	;# 
   113  0085                     	;# 
   114  0086                     	;# 
   115  0087                     	;# 
   116  0088                     	;# 
   117  0089                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008F                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  0105                     	;# 
   141  0107                     	;# 
   142  0108                     	;# 
   143  0109                     	;# 
   144  010C                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  0185                     	;# 
   150  0187                     	;# 
   151  0188                     	;# 
   152  0189                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  000E                     	;# 
   171  000F                     	;# 
   172  0010                     	;# 
   173  0011                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0015                     	;# 
   178  0015                     	;# 
   179  0016                     	;# 
   180  0017                     	;# 
   181  0018                     	;# 
   182  0019                     	;# 
   183  001A                     	;# 
   184  001B                     	;# 
   185  001B                     	;# 
   186  001C                     	;# 
   187  001D                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  0081                     	;# 
   191  0085                     	;# 
   192  0086                     	;# 
   193  0087                     	;# 
   194  0088                     	;# 
   195  0089                     	;# 
   196  008C                     	;# 
   197  008D                     	;# 
   198  008E                     	;# 
   199  008F                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0094                     	;# 
   207  0095                     	;# 
   208  0096                     	;# 
   209  0097                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0105                     	;# 
   219  0107                     	;# 
   220  0108                     	;# 
   221  0109                     	;# 
   222  010C                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  0185                     	;# 
   228  0187                     	;# 
   229  0188                     	;# 
   230  0189                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0088                     	;# 
   273  0089                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  008E                     	;# 
   277  008F                     	;# 
   278  0090                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009C                     	;# 
   293  009D                     	;# 
   294  009E                     	;# 
   295  009F                     	;# 
   296  0105                     	;# 
   297  0107                     	;# 
   298  0108                     	;# 
   299  0109                     	;# 
   300  010C                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  0185                     	;# 
   306  0187                     	;# 
   307  0188                     	;# 
   308  0189                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  0000                     	;# 
   312  0001                     	;# 
   313  0002                     	;# 
   314  0003                     	;# 
   315  0004                     	;# 
   316  0005                     	;# 
   317  0006                     	;# 
   318  0007                     	;# 
   319  0008                     	;# 
   320  0009                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000D                     	;# 
   325  000E                     	;# 
   326  000E                     	;# 
   327  000F                     	;# 
   328  0010                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0014                     	;# 
   333  0015                     	;# 
   334  0015                     	;# 
   335  0016                     	;# 
   336  0017                     	;# 
   337  0018                     	;# 
   338  0019                     	;# 
   339  001A                     	;# 
   340  001B                     	;# 
   341  001B                     	;# 
   342  001C                     	;# 
   343  001D                     	;# 
   344  001E                     	;# 
   345  001F                     	;# 
   346  0081                     	;# 
   347  0085                     	;# 
   348  0086                     	;# 
   349  0087                     	;# 
   350  0088                     	;# 
   351  0089                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  008F                     	;# 
   356  0090                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0094                     	;# 
   363  0095                     	;# 
   364  0096                     	;# 
   365  0097                     	;# 
   366  0098                     	;# 
   367  0099                     	;# 
   368  009A                     	;# 
   369  009B                     	;# 
   370  009C                     	;# 
   371  009D                     	;# 
   372  009E                     	;# 
   373  009F                     	;# 
   374  0105                     	;# 
   375  0107                     	;# 
   376  0108                     	;# 
   377  0109                     	;# 
   378  010C                     	;# 
   379  010C                     	;# 
   380  010D                     	;# 
   381  010E                     	;# 
   382  010F                     	;# 
   383  0185                     	;# 
   384  0187                     	;# 
   385  0188                     	;# 
   386  0189                     	;# 
   387  018C                     	;# 
   388  018D                     	;# 
   389  0000                     	;# 
   390  0001                     	;# 
   391  0002                     	;# 
   392  0003                     	;# 
   393  0004                     	;# 
   394  0005                     	;# 
   395  0006                     	;# 
   396  0007                     	;# 
   397  0008                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  000E                     	;# 
   404  000E                     	;# 
   405  000F                     	;# 
   406  0010                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0014                     	;# 
   411  0015                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0017                     	;# 
   415  0018                     	;# 
   416  0019                     	;# 
   417  001A                     	;# 
   418  001B                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001D                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  0081                     	;# 
   425  0085                     	;# 
   426  0086                     	;# 
   427  0087                     	;# 
   428  0088                     	;# 
   429  0089                     	;# 
   430  008C                     	;# 
   431  008D                     	;# 
   432  008E                     	;# 
   433  008F                     	;# 
   434  0090                     	;# 
   435  0091                     	;# 
   436  0092                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0094                     	;# 
   441  0095                     	;# 
   442  0096                     	;# 
   443  0097                     	;# 
   444  0098                     	;# 
   445  0099                     	;# 
   446  009A                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  009F                     	;# 
   452  0105                     	;# 
   453  0107                     	;# 
   454  0108                     	;# 
   455  0109                     	;# 
   456  010C                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  010F                     	;# 
   461  0185                     	;# 
   462  0187                     	;# 
   463  0188                     	;# 
   464  0189                     	;# 
   465  018C                     	;# 
   466  018D                     	;# 
   467  0000                     	;# 
   468  0001                     	;# 
   469  0002                     	;# 
   470  0003                     	;# 
   471  0004                     	;# 
   472  0005                     	;# 
   473  0006                     	;# 
   474  0007                     	;# 
   475  0008                     	;# 
   476  0009                     	;# 
   477  000A                     	;# 
   478  000B                     	;# 
   479  000C                     	;# 
   480  000D                     	;# 
   481  000E                     	;# 
   482  000E                     	;# 
   483  000F                     	;# 
   484  0010                     	;# 
   485  0011                     	;# 
   486  0012                     	;# 
   487  0013                     	;# 
   488  0014                     	;# 
   489  0015                     	;# 
   490  0015                     	;# 
   491  0016                     	;# 
   492  0017                     	;# 
   493  0018                     	;# 
   494  0019                     	;# 
   495  001A                     	;# 
   496  001B                     	;# 
   497  001B                     	;# 
   498  001C                     	;# 
   499  001D                     	;# 
   500  001E                     	;# 
   501  001F                     	;# 
   502  0081                     	;# 
   503  0085                     	;# 
   504  0086                     	;# 
   505  0087                     	;# 
   506  0088                     	;# 
   507  0089                     	;# 
   508  008C                     	;# 
   509  008D                     	;# 
   510  008E                     	;# 
   511  008F                     	;# 
   512  0090                     	;# 
   513  0091                     	;# 
   514  0092                     	;# 
   515  0093                     	;# 
   516  0093                     	;# 
   517  0093                     	;# 
   518  0094                     	;# 
   519  0095                     	;# 
   520  0096                     	;# 
   521  0097                     	;# 
   522  0098                     	;# 
   523  0099                     	;# 
   524  009A                     	;# 
   525  009B                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  009F                     	;# 
   530  0105                     	;# 
   531  0107                     	;# 
   532  0108                     	;# 
   533  0109                     	;# 
   534  010C                     	;# 
   535  010C                     	;# 
   536  010D                     	;# 
   537  010E                     	;# 
   538  010F                     	;# 
   539  0185                     	;# 
   540  0187                     	;# 
   541  0188                     	;# 
   542  0189                     	;# 
   543  018C                     	;# 
   544  018D                     	;# 
   545                           
   546                           	psect	idataBANK0
   547  049B                     __pidataBANK0:
   548                           
   549                           ;initializer for _Date
   550  049B  3444               	retlw	68
   551  049C  3441               	retlw	65
   552  049D  3454               	retlw	84
   553  049E  3445               	retlw	69
   554  049F  343A               	retlw	58
   555  04A0  3420               	retlw	32
   556  04A1  3430               	retlw	48
   557  04A2  3430               	retlw	48
   558  04A3  342F               	retlw	47
   559  04A4  3430               	retlw	48
   560  04A5  3430               	retlw	48
   561  04A6  342F               	retlw	47
   562  04A7  3432               	retlw	50
   563  04A8  3430               	retlw	48
   564  04A9  3430               	retlw	48
   565  04AA  3430               	retlw	48
   566  04AB  3400               	retlw	0
   567                           
   568                           ;initializer for _Time
   569  04AC  3454               	retlw	84
   570  04AD  3449               	retlw	73
   571  04AE  344D               	retlw	77
   572  04AF  3445               	retlw	69
   573  04B0  343A               	retlw	58
   574  04B1  3420               	retlw	32
   575  04B2  3430               	retlw	48
   576  04B3  3430               	retlw	48
   577  04B4  343A               	retlw	58
   578  04B5  3430               	retlw	48
   579  04B6  3430               	retlw	48
   580  04B7  343A               	retlw	58
   581  04B8  3430               	retlw	48
   582  04B9  3430               	retlw	48
   583  04BA  3400               	retlw	0
   584                           
   585                           	psect	strings
   586  04D5                     __pstrings:
   587  04D5                     stringtab:
   588  04D5                     __stringtab:
   589  04D5                     stringcode:	
   590                           ;	String table - string pointers are 1 byte each
   591                           
   592  04D5                     stringdir:
   593  04D5  3004               	movlw	high stringdir
   594  04D6  008A               	movwf	10
   595  04D7  0804               	movf	4,w
   596  04D8  0A84               	incf	4,f
   597  04D9  0782               	addwf	2,f
   598  04DA                     __stringbase:
   599  04DA  3400               	retlw	0
   600  04DB                     __end_of__stringtab:
   601  04DB                     _dpowers:
   602  04DB  3401               	retlw	1
   603  04DC  3400               	retlw	0
   604  04DD  340A               	retlw	10
   605  04DE  3400               	retlw	0
   606  04DF  3464               	retlw	100
   607  04E0  3400               	retlw	0
   608  04E1  34E8               	retlw	232
   609  04E2  3403               	retlw	3
   610  04E3  3410               	retlw	16
   611  04E4  3427               	retlw	39
   612  04E5                     __end_of_dpowers:
   613  0019                     _TXREG	set	25
   614  000B                     _INTCONbits	set	11
   615  0018                     _RCSTAbits	set	24
   616  0008                     _PORTDbits	set	8
   617  0009                     _PORTEbits	set	9
   618  0013                     _SSPBUF	set	19
   619  0014                     _SSPCON	set	20
   620  0009                     _PORTE	set	9
   621  0008                     _PORTD	set	8
   622  0007                     _PORTC	set	7
   623  0006                     _PORTB	set	6
   624  0005                     _PORTA	set	5
   625  0005                     _PORTAbits	set	5
   626  001A                     _RCREG	set	26
   627  000C                     _PIR1bits	set	12
   628  0065                     _RCIF	set	101
   629  0063                     _SSPIF	set	99
   630  005E                     _PEIE	set	94
   631  005F                     _GIE	set	95
   632  008C                     _PIE1bits	set	140
   633  0099                     _SPBRG	set	153
   634  009A                     _SPBRGH	set	154
   635  0098                     _TXSTAbits	set	152
   636  008F                     _OSCCONbits	set	143
   637  0091                     _SSPCON2bits	set	145
   638  0094                     _SSPSTAT	set	148
   639  0093                     _SSPADD	set	147
   640  0091                     _SSPCON2	set	145
   641  0089                     _TRISE	set	137
   642  0087                     _TRISCbits	set	135
   643  0086                     _TRISB	set	134
   644  0085                     _TRISA	set	133
   645  0088                     _TRISD	set	136
   646  04C1                     _TRMT	set	1217
   647  0463                     _SSPIE	set	1123
   648  043C                     _TRISC4	set	1084
   649  043B                     _TRISC3	set	1083
   650  0189                     _ANSELH	set	393
   651  0188                     _ANSEL	set	392
   652  04E5                     STR_1:
   653  04E5  3425               	retlw	37	;'%'
   654  04E6  3464               	retlw	100	;'d'
   655  04E7  3400               	retlw	0
   656                           
   657                           	psect	cinit
   658  000F                     start_initialization:	
   659                           ; #config settings
   660                           
   661  000F                     __initialization:
   662                           
   663                           ; Initialize objects allocated to BANK0
   664  000F  1383               	bcf	3,7	;select IRP bank0
   665  0010  3040               	movlw	low (__pdataBANK0+32)
   666  0011  00FD               	movwf	btemp+-1
   667  0012  3004               	movlw	high __pidataBANK0
   668  0013  00FE               	movwf	btemp
   669  0014  309B               	movlw	low __pidataBANK0
   670  0015  00FF               	movwf	btemp+1
   671  0016  3020               	movlw	low __pdataBANK0
   672  0017  0084               	movwf	4
   673  0018  120A  118A  24EC  120A  118A  	fcall	init_ram0
   674                           
   675                           ; Clear objects allocated to BANK1
   676  001D  30A0               	movlw	low __pbssBANK1
   677  001E  0084               	movwf	4
   678  001F  30B4               	movlw	low (__pbssBANK1+20)
   679  0020  120A  118A  2552  120A  118A  	fcall	clear_ram0
   680                           
   681                           ; Clear objects allocated to BANK0
   682  0025  01DA               	clrf	__pbssBANK0& (0+127)
   683  0026  01DB               	clrf	(__pbssBANK0+1)& (0+127)
   684  0027  01DC               	clrf	(__pbssBANK0+2)& (0+127)
   685  0028  01DD               	clrf	(__pbssBANK0+3)& (0+127)
   686  0029  01DE               	clrf	(__pbssBANK0+4)& (0+127)
   687  002A  01DF               	clrf	(__pbssBANK0+5)& (0+127)
   688  002B  01E0               	clrf	(__pbssBANK0+6)& (0+127)
   689                           
   690                           ; Clear objects allocated to COMMON
   691  002C  01F8               	clrf	__pbssCOMMON& (0+127)
   692  002D  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   693  002E  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   694  002F                     end_of_initialization:	
   695                           ;End of C runtime variable initialization code
   696                           
   697  002F                     __end_of__initialization:
   698  002F  0183               	clrf	3
   699  0030  120A  118A  292A   	ljmp	_main	;jump to C main() function
   700                           
   701                           	psect	bssCOMMON
   702  0078                     __pbssCOMMON:
   703  0078                     _data_recive:
   704  0078                     	ds	1
   705  0079                     _minute:
   706  0079                     	ds	1
   707  007A                     _second:
   708  007A                     	ds	1
   709                           
   710                           	psect	bssBANK0
   711  005A                     __pbssBANK0:
   712  005A                     _cont_send:
   713  005A                     	ds	1
   714  005B                     _cont:
   715  005B                     	ds	1
   716  005C                     _year:
   717  005C                     	ds	1
   718  005D                     _month:
   719  005D                     	ds	1
   720  005E                     _m_day:
   721  005E                     	ds	1
   722  005F                     _hour:
   723  005F                     	ds	1
   724  0060                     _i:
   725  0060                     	ds	1
   726                           
   727                           	psect	dataBANK0
   728  0020                     __pdataBANK0:
   729  0020                     _Date:
   730  0020                     	ds	17
   731  0031                     _Time:
   732  0031                     	ds	15
   733                           
   734                           	psect	bssBANK1
   735  00A0                     __pbssBANK1:
   736  00A0                     _data_total:
   737  00A0                     	ds	20
   738                           
   739                           	psect	inittext
   740  04E8                     init_fetch0:	
   741                           ;	Called with low address in FSR and high address in W
   742                           
   743  04E8  087E               	movf	btemp,w
   744  04E9  008A               	movwf	10
   745  04EA  087F               	movf	btemp+1,w
   746  04EB  0082               	movwf	2
   747  04EC                     init_ram0:	
   748                           ;Called with:
   749                           ;	high address of idata address in btemp 
   750                           ;	low address of idata address in btemp+1 
   751                           ;	low address of data in FSR
   752                           ;	high address + 1 of data in btemp-1
   753                           
   754  04EC  120A  118A  24E8  120A  118A  	fcall	init_fetch0
   755  04F1  0080               	movwf	0
   756  04F2  0A84               	incf	4,f
   757  04F3  0804               	movf	4,w
   758  04F4  067D               	xorwf	btemp+-1,w
   759  04F5  1903               	btfsc	3,2
   760  04F6  3400               	retlw	0
   761  04F7  0AFF               	incf	btemp+1,f
   762  04F8  1903               	btfsc	3,2
   763  04F9  0AFE               	incf	btemp,f
   764  04FA  2CEC               	goto	init_ram0
   765                           
   766                           	psect	clrtext
   767  0552                     clear_ram0:	
   768                           ;	Called with FSR containing the base address, and
   769                           ;	W with the last address+1
   770                           
   771  0552  0064               	clrwdt	;clear the watchdog before getting into this loop
   772  0553                     clrloop0:
   773  0553  0180               	clrf	0	;clear RAM location pointed to by FSR
   774  0554  0A84               	incf	4,f	;increment pointer
   775  0555  0604               	xorwf	4,w	;XOR with final address
   776  0556  1903               	btfsc	3,2	;have we reached the end yet?
   777  0557  3400               	retlw	0	;all done for this memory range, return
   778  0558  0604               	xorwf	4,w	;XOR again to restore value
   779  0559  2D53               	goto	clrloop0	;do the next byte
   780                           
   781                           	psect	cstackCOMMON
   782  0070                     __pcstackCOMMON:
   783  0070                     ?_setup:
   784  0070                     ?_Lcd_Init:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ?_Lcd_Clear:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ?_Write_to_RTC:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     ?_I2C_Master_Start:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ?_I2C_Master_RepeatedStart:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ?_I2C_Master_Stop:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ?_Write_USART:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ?_USART_Init_BaudRate:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ?_USART_Init:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_USART_INTERRUPT:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_Lcd_Port:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ?_Lcd_Cmd:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ?_ISR:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ??_ISR:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ?_main:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ?_I2C_Master_Wait:	
   830                           ; 1 bytes @ 0x0
   831                           
   832                           
   833                           ; 1 bytes @ 0x0
   834  0070                     	ds	3
   835  0073                     ??_I2C_Master_Start:
   836  0073                     ?_I2C_Master_Write:	
   837                           ; 1 bytes @ 0x3
   838                           
   839  0073                     ??_I2C_Master_RepeatedStart:	
   840                           ; 1 bytes @ 0x3
   841                           
   842  0073                     ??_I2C_Master_Stop:	
   843                           ; 1 bytes @ 0x3
   844                           
   845  0073                     ??_Write_USART:	
   846                           ; 1 bytes @ 0x3
   847                           
   848  0073                     ??_USART_Init_BaudRate:	
   849                           ; 1 bytes @ 0x3
   850                           
   851  0073                     ??_USART_Init:	
   852                           ; 1 bytes @ 0x3
   853                           
   854  0073                     ??_USART_INTERRUPT:	
   855                           ; 1 bytes @ 0x3
   856                           
   857  0073                     ??_Lcd_Port:	
   858                           ; 1 bytes @ 0x3
   859                           
   860  0073                     ??_I2C_Master_Wait:	
   861                           ; 1 bytes @ 0x3
   862                           
   863  0073                     ??___lldiv:	
   864                           ; 1 bytes @ 0x3
   865                           
   866  0073                     ?_I2C_Master_Read:	
   867                           ; 1 bytes @ 0x3
   868                           
   869  0073                     ?___lwdiv:	
   870                           ; 2 bytes @ 0x3
   871                           
   872  0073                     Lcd_Port@a:	
   873                           ; 2 bytes @ 0x3
   874                           
   875  0073                     Write_USART@a:	
   876                           ; 1 bytes @ 0x3
   877                           
   878  0073                     I2C_Master_Write@d:	
   879                           ; 1 bytes @ 0x3
   880                           
   881  0073                     I2C_Master_Read@a:	
   882                           ; 2 bytes @ 0x3
   883                           
   884  0073                     ___lwdiv@divisor:	
   885                           ; 2 bytes @ 0x3
   886                           
   887                           
   888                           ; 2 bytes @ 0x3
   889  0073                     	ds	1
   890  0074                     ?_Write_USART_String:
   891  0074                     ??_I2C_Master_Init:	
   892                           ; 1 bytes @ 0x4
   893                           
   894  0074                     ??_Lcd_Cmd:	
   895                           ; 1 bytes @ 0x4
   896                           
   897  0074                     Write_USART_String@a:	
   898                           ; 1 bytes @ 0x4
   899                           
   900                           
   901                           ; 2 bytes @ 0x4
   902  0074                     	ds	1
   903  0075                     ??_Write_to_RTC:
   904  0075                     ??_I2C_Master_Write:	
   905                           ; 1 bytes @ 0x5
   906                           
   907  0075                     ??_I2C_Master_Read:	
   908                           ; 1 bytes @ 0x5
   909                           
   910  0075                     ___lwdiv@dividend:	
   911                           ; 1 bytes @ 0x5
   912                           
   913                           
   914                           ; 2 bytes @ 0x5
   915  0075                     	ds	1
   916  0076                     ??_Write_USART_String:
   917  0076                     Lcd_Cmd@a:	
   918                           ; 1 bytes @ 0x6
   919                           
   920                           
   921                           ; 1 bytes @ 0x6
   922  0076                     	ds	1
   923  0077                     ??_Lcd_Clear:
   924  0077                     ??___lwdiv:	
   925                           ; 1 bytes @ 0x7
   926                           
   927                           
   928                           ; 1 bytes @ 0x7
   929  0077                     	ds	1
   930  0078                     ??_setup:
   931                           
   932                           	psect	cstackBANK0
   933  0040                     __pcstackBANK0:	
   934                           ; 1 bytes @ 0x8
   935                           
   936  0040                     ??_Lcd_Init:
   937  0040                     ?___lldiv:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0040                     Write_USART_String@i:	
   941                           ; 4 bytes @ 0x0
   942                           
   943  0040                     ___lwdiv@counter:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0040                     I2C_Master_Read@temp:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0040                     ___lldiv@divisor:	
   950                           ; 2 bytes @ 0x0
   951                           
   952                           
   953                           ; 4 bytes @ 0x0
   954  0040                     	ds	1
   955  0041                     ___lwdiv@quotient:
   956                           
   957                           ; 2 bytes @ 0x1
   958  0041                     	ds	2
   959  0043                     ?___lwmod:
   960  0043                     ___lwmod@divisor:	
   961                           ; 2 bytes @ 0x3
   962                           
   963                           
   964                           ; 2 bytes @ 0x3
   965  0043                     	ds	1
   966  0044                     ___lldiv@dividend:
   967                           
   968                           ; 4 bytes @ 0x4
   969  0044                     	ds	1
   970  0045                     ___lwmod@dividend:
   971                           
   972                           ; 2 bytes @ 0x5
   973  0045                     	ds	2
   974  0047                     ??___lwmod:
   975                           
   976                           ; 1 bytes @ 0x7
   977  0047                     	ds	1
   978  0048                     ___lwmod@counter:
   979  0048                     ___lldiv@quotient:	
   980                           ; 1 bytes @ 0x8
   981                           
   982                           
   983                           ; 4 bytes @ 0x8
   984  0048                     	ds	1
   985  0049                     ?_sprintf:
   986  0049                     sprintf@sp:	
   987                           ; 2 bytes @ 0x9
   988                           
   989                           
   990                           ; 2 bytes @ 0x9
   991  0049                     	ds	2
   992  004B                     sprintf@f:
   993                           
   994                           ; 1 bytes @ 0xB
   995  004B                     	ds	1
   996  004C                     ___lldiv@counter:
   997                           
   998                           ; 1 bytes @ 0xC
   999  004C                     	ds	1
  1000  004D                     ?_I2C_Master_Init:
  1001  004D                     I2C_Master_Init@c:	
  1002                           ; 1 bytes @ 0xD
  1003                           
  1004                           
  1005                           ; 4 bytes @ 0xD
  1006  004D                     	ds	1
  1007  004E                     ??_sprintf:
  1008                           
  1009                           ; 1 bytes @ 0xE
  1010  004E                     	ds	3
  1011  0051                     sprintf@ap:
  1012                           
  1013                           ; 1 bytes @ 0x11
  1014  0051                     	ds	1
  1015  0052                     sprintf@flag:
  1016                           
  1017                           ; 1 bytes @ 0x12
  1018  0052                     	ds	1
  1019  0053                     sprintf@prec:
  1020                           
  1021                           ; 1 bytes @ 0x13
  1022  0053                     	ds	1
  1023  0054                     sprintf@val:
  1024                           
  1025                           ; 2 bytes @ 0x14
  1026  0054                     	ds	2
  1027  0056                     sprintf@c:
  1028                           
  1029                           ; 1 bytes @ 0x16
  1030  0056                     	ds	1
  1031  0057                     ??_main:
  1032                           
  1033                           ; 1 bytes @ 0x17
  1034  0057                     	ds	3
  1035                           
  1036                           	psect	maintext
  1037  012A                     __pmaintext:	
  1038 ;;
  1039 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1040 ;;
  1041 ;; *************** function _main *****************
  1042 ;; Defined at:
  1043 ;;		line 114 in file "main_prueba3_mini2.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : B00/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1057 ;;      Params:         0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0
  1059 ;;      Temps:          0       3       0       0       0
  1060 ;;      Totals:         0       3       0       0       0
  1061 ;;Total ram usage:        3 bytes
  1062 ;; Hardware stack levels required when called:    4
  1063 ;; This function calls:
  1064 ;;		_I2C_Master_Read
  1065 ;;		_I2C_Master_RepeatedStart
  1066 ;;		_I2C_Master_Start
  1067 ;;		_I2C_Master_Stop
  1068 ;;		_I2C_Master_Write
  1069 ;;		_Lcd_Clear
  1070 ;;		_Lcd_Init
  1071 ;;		_Write_USART
  1072 ;;		_Write_USART_String
  1073 ;;		_Write_to_RTC
  1074 ;;		_setup
  1075 ;;		_sprintf
  1076 ;; This function is called by:
  1077 ;;		Startup code after reset
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           
  1082                           ;psect for function _main
  1083  012A                     _main:
  1084  012A                     l2043:	
  1085                           ;incstack = 0
  1086                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1087                           
  1088                           
  1089                           ;main_prueba3_mini2.c: 115:     setup();
  1090  012A  120A  118A  240A  120A  118A  	fcall	_setup
  1091  012F                     l2045:
  1092                           
  1093                           ;main_prueba3_mini2.c: 116:     TRISD = 0x00;
  1094  012F  1683               	bsf	3,5	;RP0=1, select bank1
  1095  0130  1303               	bcf	3,6	;RP1=0, select bank1
  1096  0131  0188               	clrf	8	;volatile
  1097  0132                     l2047:
  1098                           
  1099                           ;main_prueba3_mini2.c: 117:     Lcd_Init();
  1100  0132  120A  118A  22CC  120A  118A  	fcall	_Lcd_Init
  1101  0137                     l2049:
  1102                           
  1103                           ;main_prueba3_mini2.c: 118:     Lcd_Clear();
  1104  0137  120A  118A  24FB  120A  118A  	fcall	_Lcd_Clear
  1105  013C                     l2051:
  1106                           
  1107                           ;main_prueba3_mini2.c: 119:     Write_to_RTC();
  1108  013C  120A  118A  2272  120A  118A  	fcall	_Write_to_RTC
  1109  0141                     l2053:
  1110                           
  1111                           ;main_prueba3_mini2.c: 125:         I2C_Master_Start();
  1112  0141  120A  118A  2540  120A  118A  	fcall	_I2C_Master_Start
  1113  0146                     l2055:
  1114                           
  1115                           ;main_prueba3_mini2.c: 126:         I2C_Master_Write(0xD0);
  1116  0146  30D0               	movlw	208
  1117  0147  00F3               	movwf	I2C_Master_Write@d
  1118  0148  3000               	movlw	0
  1119  0149  00F4               	movwf	I2C_Master_Write@d+1
  1120  014A  120A  118A  252D  120A  118A  	fcall	_I2C_Master_Write
  1121  014F                     l2057:
  1122                           
  1123                           ;main_prueba3_mini2.c: 127:         I2C_Master_Write(0);
  1124  014F  3000               	movlw	0
  1125  0150  00F3               	movwf	I2C_Master_Write@d
  1126  0151  00F4               	movwf	I2C_Master_Write@d+1
  1127  0152  120A  118A  252D  120A  118A  	fcall	_I2C_Master_Write
  1128  0157                     l2059:
  1129                           
  1130                           ;main_prueba3_mini2.c: 128:         I2C_Master_RepeatedStart();
  1131  0157  120A  118A  2549  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1132  015C                     l2061:
  1133                           
  1134                           ;main_prueba3_mini2.c: 129:         I2C_Master_Write(0xD1);
  1135  015C  30D1               	movlw	209
  1136  015D  00F3               	movwf	I2C_Master_Write@d
  1137  015E  3000               	movlw	0
  1138  015F  00F4               	movwf	I2C_Master_Write@d+1
  1139  0160  120A  118A  252D  120A  118A  	fcall	_I2C_Master_Write
  1140  0165                     l2063:
  1141                           
  1142                           ;main_prueba3_mini2.c: 130:         second = I2C_Master_Read(1);
  1143  0165  3001               	movlw	1
  1144  0166  00F3               	movwf	I2C_Master_Read@a
  1145  0167  3000               	movlw	0
  1146  0168  00F4               	movwf	I2C_Master_Read@a+1
  1147  0169  120A  118A  246B  120A  118A  	fcall	_I2C_Master_Read
  1148  016E  0873               	movf	?_I2C_Master_Read,w
  1149  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0171  00D7               	movwf	??_main
  1152  0172  0857               	movf	??_main,w
  1153  0173  00FA               	movwf	_second
  1154  0174                     l2065:
  1155                           
  1156                           ;main_prueba3_mini2.c: 131:         minute = I2C_Master_Read(1);
  1157  0174  3001               	movlw	1
  1158  0175  00F3               	movwf	I2C_Master_Read@a
  1159  0176  3000               	movlw	0
  1160  0177  00F4               	movwf	I2C_Master_Read@a+1
  1161  0178  120A  118A  246B  120A  118A  	fcall	_I2C_Master_Read
  1162  017D  0873               	movf	?_I2C_Master_Read,w
  1163  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1164  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0180  00D7               	movwf	??_main
  1166  0181  0857               	movf	??_main,w
  1167  0182  00F9               	movwf	_minute
  1168  0183                     l2067:
  1169                           
  1170                           ;main_prueba3_mini2.c: 132:         hour = I2C_Master_Read(1);
  1171  0183  3001               	movlw	1
  1172  0184  00F3               	movwf	I2C_Master_Read@a
  1173  0185  3000               	movlw	0
  1174  0186  00F4               	movwf	I2C_Master_Read@a+1
  1175  0187  120A  118A  246B  120A  118A  	fcall	_I2C_Master_Read
  1176  018C  0873               	movf	?_I2C_Master_Read,w
  1177  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1178  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1179  018F  00D7               	movwf	??_main
  1180  0190  0857               	movf	??_main,w
  1181  0191  00DF               	movwf	_hour
  1182  0192                     l2069:
  1183                           
  1184                           ;main_prueba3_mini2.c: 133:         I2C_Master_Read(1);
  1185  0192  3001               	movlw	1
  1186  0193  00F3               	movwf	I2C_Master_Read@a
  1187  0194  3000               	movlw	0
  1188  0195  00F4               	movwf	I2C_Master_Read@a+1
  1189  0196  120A  118A  246B  120A  118A  	fcall	_I2C_Master_Read
  1190  019B                     l2071:
  1191                           
  1192                           ;main_prueba3_mini2.c: 134:         m_day = I2C_Master_Read(1);
  1193  019B  3001               	movlw	1
  1194  019C  00F3               	movwf	I2C_Master_Read@a
  1195  019D  3000               	movlw	0
  1196  019E  00F4               	movwf	I2C_Master_Read@a+1
  1197  019F  120A  118A  246B  120A  118A  	fcall	_I2C_Master_Read
  1198  01A4  0873               	movf	?_I2C_Master_Read,w
  1199  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1200  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  1201  01A7  00D7               	movwf	??_main
  1202  01A8  0857               	movf	??_main,w
  1203  01A9  00DE               	movwf	_m_day
  1204  01AA                     l2073:
  1205                           
  1206                           ;main_prueba3_mini2.c: 135:         month = I2C_Master_Read(1);
  1207  01AA  3001               	movlw	1
  1208  01AB  00F3               	movwf	I2C_Master_Read@a
  1209  01AC  3000               	movlw	0
  1210  01AD  00F4               	movwf	I2C_Master_Read@a+1
  1211  01AE  120A  118A  246B  120A  118A  	fcall	_I2C_Master_Read
  1212  01B3  0873               	movf	?_I2C_Master_Read,w
  1213  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1214  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1215  01B6  00D7               	movwf	??_main
  1216  01B7  0857               	movf	??_main,w
  1217  01B8  00DD               	movwf	_month
  1218  01B9                     l2075:
  1219                           
  1220                           ;main_prueba3_mini2.c: 136:         year = I2C_Master_Read(0);
  1221  01B9  3000               	movlw	0
  1222  01BA  00F3               	movwf	I2C_Master_Read@a
  1223  01BB  00F4               	movwf	I2C_Master_Read@a+1
  1224  01BC  120A  118A  246B  120A  118A  	fcall	_I2C_Master_Read
  1225  01C1  0873               	movf	?_I2C_Master_Read,w
  1226  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1227  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1228  01C4  00D7               	movwf	??_main
  1229  01C5  0857               	movf	??_main,w
  1230  01C6  00DC               	movwf	_year
  1231  01C7                     l2077:
  1232                           
  1233                           ;main_prueba3_mini2.c: 137:         I2C_Master_Stop();
  1234  01C7  120A  118A  2537  120A  118A  	fcall	_I2C_Master_Stop
  1235  01CC                     l2079:
  1236                           
  1237                           ;main_prueba3_mini2.c: 147:         sprintf(cont_send, "%d", cont);
  1238  01CC  3000               	movlw	0
  1239  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1240  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1241  01CF  00C9               	movwf	sprintf@sp
  1242  01D0  3000               	movlw	0
  1243  01D1  00CA               	movwf	sprintf@sp+1
  1244  01D2  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1245  01D3  00D7               	movwf	??_main
  1246  01D4  0857               	movf	??_main,w
  1247  01D5  00CB               	movwf	sprintf@f
  1248  01D6  085B               	movf	_cont,w
  1249  01D7  00D8               	movwf	??_main+1
  1250  01D8  01D9               	clrf	??_main+2
  1251  01D9  0858               	movf	??_main+1,w
  1252  01DA  00CC               	movwf	?_sprintf+3
  1253  01DB  0859               	movf	??_main+2,w
  1254  01DC  00CD               	movwf	?_sprintf+4
  1255  01DD  120A  118A  2033  120A  118A  	fcall	_sprintf
  1256  01E2                     l2081:
  1257                           
  1258                           ;main_prueba3_mini2.c: 148:         Write_USART_String(cont_send);
  1259  01E2  3000               	movlw	0
  1260  01E3  00F4               	movwf	Write_USART_String@a
  1261  01E4  3000               	movlw	0
  1262  01E5  00F5               	movwf	Write_USART_String@a+1
  1263  01E6  120A  118A  243B  120A  118A  	fcall	_Write_USART_String
  1264  01EB                     l2083:
  1265                           
  1266                           ;main_prueba3_mini2.c: 149:         Write_USART(13);
  1267  01EB  300D               	movlw	13
  1268  01EC  120A  118A  2521  120A  118A  	fcall	_Write_USART
  1269  01F1                     l2085:
  1270                           
  1271                           ;main_prueba3_mini2.c: 151:         cont++;
  1272  01F1  3001               	movlw	1
  1273  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1274  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1275  01F4  00D7               	movwf	??_main
  1276  01F5  0857               	movf	??_main,w
  1277  01F6  07DB               	addwf	_cont,f
  1278  01F7                     l2087:
  1279                           
  1280                           ;main_prueba3_mini2.c: 152:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1281  01F7  3002               	movlw	2
  1282  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1283  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1284  01FA  00D9               	movwf	??_main+2
  1285  01FB  3004               	movlw	4
  1286  01FC  00D8               	movwf	??_main+1
  1287  01FD  30B9               	movlw	185
  1288  01FE  00D7               	movwf	??_main
  1289  01FF                     u1347:
  1290  01FF  0BD7               	decfsz	??_main,f
  1291  0200  29FF               	goto	u1347
  1292  0201  0BD8               	decfsz	??_main+1,f
  1293  0202  29FF               	goto	u1347
  1294  0203  0BD9               	decfsz	??_main+2,f
  1295  0204  29FF               	goto	u1347
  1296  0205  2A06               	nop2
  1297  0206  2941               	goto	l2053
  1298  0207  120A  118A  280C   	ljmp	start
  1299  020A                     __end_of_main:
  1300                           
  1301                           	psect	text1
  1302  0033                     __ptext1:	
  1303 ;; *************** function _sprintf *****************
  1304 ;; Defined at:
  1305 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  sp              2    9[BANK0 ] PTR unsigned char 
  1308 ;;		 -> NULL(0), RAM(512), 
  1309 ;;  f               1   11[BANK0 ] PTR const unsigned char 
  1310 ;;		 -> STR_1(3), 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  tmpval          4    0        struct .
  1313 ;;  val             2   20[BANK0 ] unsigned int 
  1314 ;;  cp              2    0        PTR const unsigned char 
  1315 ;;  len             2    0        unsigned int 
  1316 ;;  c               1   22[BANK0 ] unsigned char 
  1317 ;;  prec            1   19[BANK0 ] char 
  1318 ;;  flag            1   18[BANK0 ] unsigned char 
  1319 ;;  ap              1   17[BANK0 ] PTR void [1]
  1320 ;;		 -> ?_sprintf(2), 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  2    9[BANK0 ] int 
  1323 ;; Registers used:
  1324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1330 ;;      Params:         0       5       0       0       0
  1331 ;;      Locals:         0       6       0       0       0
  1332 ;;      Temps:          0       3       0       0       0
  1333 ;;      Totals:         0      14       0       0       0
  1334 ;;Total ram usage:       14 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; Hardware stack levels required when called:    2
  1337 ;; This function calls:
  1338 ;;		___lwdiv
  1339 ;;		___lwmod
  1340 ;; This function is called by:
  1341 ;;		_main
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           
  1346                           ;psect for function _sprintf
  1347  0033                     _sprintf:
  1348  0033                     l1973:	
  1349                           ;incstack = 0
  1350                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1351                           
  1352                           
  1353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1354  0033  304C               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  1355  0034  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0035  1303               	bcf	3,6	;RP1=0, select bank0
  1357  0036  00CE               	movwf	??_sprintf
  1358  0037  084E               	movf	??_sprintf,w
  1359  0038  00D1               	movwf	sprintf@ap
  1360                           
  1361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1362  0039  2911               	goto	l2025
  1363  003A                     l1975:
  1364                           
  1365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1366  003A  3025               	movlw	37
  1367  003B  0656               	xorwf	sprintf@c,w
  1368  003C  1903               	btfsc	3,2
  1369  003D  283F               	goto	u1261
  1370  003E  2840               	goto	u1260
  1371  003F                     u1261:
  1372  003F  2850               	goto	l1981
  1373  0040                     u1260:
  1374  0040                     l1977:
  1375                           
  1376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1377  0040  0856               	movf	sprintf@c,w
  1378  0041  00CE               	movwf	??_sprintf
  1379  0042  0849               	movf	sprintf@sp,w
  1380  0043  0084               	movwf	4
  1381  0044  1783               	bsf	3,7
  1382  0045  1C4A               	btfss	sprintf@sp+1,0
  1383  0046  1383               	bcf	3,7
  1384  0047  084E               	movf	??_sprintf,w
  1385  0048  0080               	movwf	0
  1386  0049                     l1979:
  1387  0049  3001               	movlw	1
  1388  004A  07C9               	addwf	sprintf@sp,f
  1389  004B  1803               	skipnc
  1390  004C  0ACA               	incf	sprintf@sp+1,f
  1391  004D  3000               	movlw	0
  1392  004E  07CA               	addwf	sprintf@sp+1,f
  1393                           
  1394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1395  004F  2911               	goto	l2025
  1396  0050                     l1981:
  1397                           
  1398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1399  0050  01D2               	clrf	sprintf@flag
  1400  0051                     l1985:	
  1401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1402                           
  1403  0051  3001               	movlw	1
  1404  0052  07CB               	addwf	sprintf@f,f
  1405  0053  30FF               	movlw	-1
  1406  0054  074B               	addwf	sprintf@f,w
  1407  0055  0084               	movwf	4
  1408  0056  120A  118A  24D5  120A  118A  	fcall	stringdir
  1409  005B  00D6               	movwf	sprintf@c
  1410  005C  00CE               	movwf	??_sprintf
  1411  005D  01CF               	clrf	??_sprintf+1
  1412                           
  1413                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1414                           ; Switch size 1, requested type "simple"
  1415                           ; Number of cases is 1, Range of values is 0 to 0
  1416                           ; switch strategies available:
  1417                           ; Name         Instructions Cycles
  1418                           ; simple_byte            4     3 (average)
  1419                           ; direct_byte           11     8 (fixed)
  1420                           ; jumptable            260     6 (fixed)
  1421                           ;	Chosen strategy is simple_byte
  1422  005E  084F               	movf	??_sprintf+1,w
  1423  005F  3A00               	xorlw	0	; case 0
  1424  0060  1903               	skipnz
  1425  0061  2863               	goto	l2109
  1426  0062  2911               	goto	l2025
  1427  0063                     l2109:
  1428                           
  1429                           ; Switch size 1, requested type "simple"
  1430                           ; Number of cases is 3, Range of values is 0 to 105
  1431                           ; switch strategies available:
  1432                           ; Name         Instructions Cycles
  1433                           ; simple_byte           10     6 (average)
  1434                           ; jumptable            260     6 (fixed)
  1435                           ;	Chosen strategy is simple_byte
  1436  0063  084E               	movf	??_sprintf,w
  1437  0064  3A00               	xorlw	0	; case 0
  1438  0065  1903               	skipnz
  1439  0066  2923               	goto	l2027
  1440  0067  3A64               	xorlw	100	; case 100
  1441  0068  1903               	skipnz
  1442  0069  286E               	goto	l1987
  1443  006A  3A0D               	xorlw	13	; case 105
  1444  006B  1903               	skipnz
  1445  006C  286E               	goto	l1987
  1446  006D  2911               	goto	l2025
  1447  006E                     l1987:
  1448                           
  1449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1450  006E  0851               	movf	sprintf@ap,w
  1451  006F  0084               	movwf	4
  1452  0070  1383               	bcf	3,7	;select IRP bank0
  1453  0071  0800               	movf	0,w
  1454  0072  00D4               	movwf	sprintf@val
  1455  0073  0A84               	incf	4,f
  1456  0074  0800               	movf	0,w
  1457  0075  00D5               	movwf	sprintf@val+1
  1458  0076                     l1989:
  1459  0076  3002               	movlw	2
  1460  0077  00CE               	movwf	??_sprintf
  1461  0078  084E               	movf	??_sprintf,w
  1462  0079  07D1               	addwf	sprintf@ap,f
  1463  007A                     l1991:
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1466  007A  1FD5               	btfss	sprintf@val+1,7
  1467  007B  287D               	goto	u1271
  1468  007C  287E               	goto	u1270
  1469  007D                     u1271:
  1470  007D  2887               	goto	l1997
  1471  007E                     u1270:
  1472  007E                     l1993:
  1473                           
  1474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1475  007E  3003               	movlw	3
  1476  007F  00CE               	movwf	??_sprintf
  1477  0080  084E               	movf	??_sprintf,w
  1478  0081  04D2               	iorwf	sprintf@flag,f
  1479  0082                     l1995:
  1480                           
  1481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1482  0082  09D4               	comf	sprintf@val,f
  1483  0083  09D5               	comf	sprintf@val+1,f
  1484  0084  0AD4               	incf	sprintf@val,f
  1485  0085  1903               	skipnz
  1486  0086  0AD5               	incf	sprintf@val+1,f
  1487  0087                     l1997:
  1488                           
  1489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1490  0087  01D6               	clrf	sprintf@c
  1491  0088  0AD6               	incf	sprintf@c,f
  1492  0089                     l2003:
  1493                           
  1494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1495  0089  0856               	movf	sprintf@c,w
  1496  008A  00CE               	movwf	??_sprintf
  1497  008B  074E               	addwf	??_sprintf,w
  1498  008C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1499  008D  0084               	movwf	4
  1500  008E  120A  118A  24D5  120A  118A  	fcall	stringdir
  1501  0093  00CF               	movwf	??_sprintf+1
  1502  0094  120A  118A  24D5  120A  118A  	fcall	stringdir
  1503  0099  00D0               	movwf	??_sprintf+2
  1504  009A  0850               	movf	??_sprintf+2,w
  1505  009B  0255               	subwf	sprintf@val+1,w
  1506  009C  1D03               	skipz
  1507  009D  28A0               	goto	u1285
  1508  009E  084F               	movf	??_sprintf+1,w
  1509  009F  0254               	subwf	sprintf@val,w
  1510  00A0                     u1285:
  1511  00A0  1803               	skipnc
  1512  00A1  28A3               	goto	u1281
  1513  00A2  28A4               	goto	u1280
  1514  00A3                     u1281:
  1515  00A3  28A5               	goto	l2007
  1516  00A4                     u1280:
  1517  00A4  28AF               	goto	l2009
  1518  00A5                     l2007:
  1519  00A5  3001               	movlw	1
  1520  00A6  00CE               	movwf	??_sprintf
  1521  00A7  084E               	movf	??_sprintf,w
  1522  00A8  07D6               	addwf	sprintf@c,f
  1523  00A9  3005               	movlw	5
  1524  00AA  0656               	xorwf	sprintf@c,w
  1525  00AB  1D03               	btfss	3,2
  1526  00AC  28AE               	goto	u1291
  1527  00AD  28AF               	goto	u1290
  1528  00AE                     u1291:
  1529  00AE  2889               	goto	l2003
  1530  00AF                     u1290:
  1531  00AF                     l2009:
  1532                           
  1533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1534  00AF  0852               	movf	sprintf@flag,w
  1535  00B0  3903               	andlw	3
  1536  00B1  1903               	btfsc	3,2
  1537  00B2  28B4               	goto	u1301
  1538  00B3  28B5               	goto	u1300
  1539  00B4                     u1301:
  1540  00B4  28C4               	goto	l2015
  1541  00B5                     u1300:
  1542  00B5                     l2011:
  1543                           
  1544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1545  00B5  302D               	movlw	45
  1546  00B6  00CE               	movwf	??_sprintf
  1547  00B7  0849               	movf	sprintf@sp,w
  1548  00B8  0084               	movwf	4
  1549  00B9  1783               	bsf	3,7
  1550  00BA  1C4A               	btfss	sprintf@sp+1,0
  1551  00BB  1383               	bcf	3,7
  1552  00BC  084E               	movf	??_sprintf,w
  1553  00BD  0080               	movwf	0
  1554  00BE                     l2013:
  1555  00BE  3001               	movlw	1
  1556  00BF  07C9               	addwf	sprintf@sp,f
  1557  00C0  1803               	skipnc
  1558  00C1  0ACA               	incf	sprintf@sp+1,f
  1559  00C2  3000               	movlw	0
  1560  00C3  07CA               	addwf	sprintf@sp+1,f
  1561  00C4                     l2015:
  1562                           
  1563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1564  00C4  0856               	movf	sprintf@c,w
  1565  00C5  00CE               	movwf	??_sprintf
  1566  00C6  084E               	movf	??_sprintf,w
  1567  00C7  00D3               	movwf	sprintf@prec
  1568                           
  1569                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1570  00C8  2908               	goto	l2023
  1571  00C9                     l2017:
  1572                           
  1573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1574  00C9  300A               	movlw	10
  1575  00CA  00C3               	movwf	___lwmod@divisor
  1576  00CB  3000               	movlw	0
  1577  00CC  00C4               	movwf	___lwmod@divisor+1
  1578  00CD  0853               	movf	sprintf@prec,w
  1579  00CE  00CE               	movwf	??_sprintf
  1580  00CF  074E               	addwf	??_sprintf,w
  1581  00D0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1582  00D1  0084               	movwf	4
  1583  00D2  120A  118A  24D5  120A  118A  	fcall	stringdir
  1584  00D7  00F3               	movwf	___lwdiv@divisor
  1585  00D8  120A  118A  24D5  120A  118A  	fcall	stringdir
  1586  00DD  00F4               	movwf	___lwdiv@divisor+1
  1587  00DE  0855               	movf	sprintf@val+1,w
  1588  00DF  00F6               	movwf	___lwdiv@dividend+1
  1589  00E0  0854               	movf	sprintf@val,w
  1590  00E1  00F5               	movwf	___lwdiv@dividend
  1591  00E2  120A  118A  231C  120A  118A  	fcall	___lwdiv
  1592  00E7  0874               	movf	?___lwdiv+1,w
  1593  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1594  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1595  00EA  00C6               	movwf	___lwmod@dividend+1
  1596  00EB  0873               	movf	?___lwdiv,w
  1597  00EC  00C5               	movwf	___lwmod@dividend
  1598  00ED  120A  118A  2362  120A  118A  	fcall	___lwmod
  1599  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1600  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1601  00F4  0843               	movf	?___lwmod,w
  1602  00F5  3E30               	addlw	48
  1603  00F6  00CF               	movwf	??_sprintf+1
  1604  00F7  084F               	movf	??_sprintf+1,w
  1605  00F8  00D6               	movwf	sprintf@c
  1606  00F9                     l2019:
  1607                           
  1608                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1609  00F9  0856               	movf	sprintf@c,w
  1610  00FA  00CE               	movwf	??_sprintf
  1611  00FB  0849               	movf	sprintf@sp,w
  1612  00FC  0084               	movwf	4
  1613  00FD  1783               	bsf	3,7
  1614  00FE  1C4A               	btfss	sprintf@sp+1,0
  1615  00FF  1383               	bcf	3,7
  1616  0100  084E               	movf	??_sprintf,w
  1617  0101  0080               	movwf	0
  1618  0102                     l2021:
  1619  0102  3001               	movlw	1
  1620  0103  07C9               	addwf	sprintf@sp,f
  1621  0104  1803               	skipnc
  1622  0105  0ACA               	incf	sprintf@sp+1,f
  1623  0106  3000               	movlw	0
  1624  0107  07CA               	addwf	sprintf@sp+1,f
  1625  0108                     l2023:
  1626                           
  1627                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1628  0108  30FF               	movlw	255
  1629  0109  00CE               	movwf	??_sprintf
  1630  010A  084E               	movf	??_sprintf,w
  1631  010B  07D3               	addwf	sprintf@prec,f
  1632  010C  0A53               	incf	sprintf@prec,w
  1633  010D  1D03               	btfss	3,2
  1634  010E  2910               	goto	u1311
  1635  010F  2911               	goto	u1310
  1636  0110                     u1311:
  1637  0110  28C9               	goto	l2017
  1638  0111                     u1310:
  1639  0111                     l2025:
  1640                           
  1641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1642  0111  3001               	movlw	1
  1643  0112  07CB               	addwf	sprintf@f,f
  1644  0113  30FF               	movlw	-1
  1645  0114  074B               	addwf	sprintf@f,w
  1646  0115  0084               	movwf	4
  1647  0116  120A  118A  24D5  120A  118A  	fcall	stringdir
  1648  011B  00CE               	movwf	??_sprintf
  1649  011C  084E               	movf	??_sprintf,w
  1650  011D  00D6               	movwf	sprintf@c
  1651  011E  0856               	movf	sprintf@c,w
  1652  011F  1D03               	btfss	3,2
  1653  0120  2922               	goto	u1321
  1654  0121  2923               	goto	u1320
  1655  0122                     u1321:
  1656  0122  283A               	goto	l1975
  1657  0123                     u1320:
  1658  0123                     l2027:
  1659                           
  1660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1661  0123  0849               	movf	sprintf@sp,w
  1662  0124  0084               	movwf	4
  1663  0125  1783               	bsf	3,7
  1664  0126  1C4A               	btfss	sprintf@sp+1,0
  1665  0127  1383               	bcf	3,7
  1666  0128  0180               	clrf	0
  1667  0129                     l409:
  1668  0129  0008               	return
  1669  012A                     __end_of_sprintf:
  1670                           
  1671                           	psect	text2
  1672  0362                     __ptext2:	
  1673 ;; *************** function ___lwmod *****************
  1674 ;; Defined at:
  1675 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  divisor         2    3[BANK0 ] unsigned int 
  1678 ;;  dividend        2    5[BANK0 ] unsigned int 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  counter         1    8[BANK0 ] unsigned char 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  2    3[BANK0 ] unsigned int 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1690 ;;      Params:         0       4       0       0       0
  1691 ;;      Locals:         0       1       0       0       0
  1692 ;;      Temps:          0       1       0       0       0
  1693 ;;      Totals:         0       6       0       0       0
  1694 ;;Total ram usage:        6 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    1
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_sprintf
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           
  1705                           ;psect for function ___lwmod
  1706  0362                     ___lwmod:
  1707  0362                     l1463:	
  1708                           ;incstack = 0
  1709                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1710                           
  1711  0362  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0363  1303               	bcf	3,6	;RP1=0, select bank0
  1713  0364  0843               	movf	___lwmod@divisor,w
  1714  0365  0444               	iorwf	___lwmod@divisor+1,w
  1715  0366  1903               	btfsc	3,2
  1716  0367  2B69               	goto	u671
  1717  0368  2B6A               	goto	u670
  1718  0369                     u671:
  1719  0369  2B99               	goto	l1481
  1720  036A                     u670:
  1721  036A                     l1465:
  1722  036A  01C8               	clrf	___lwmod@counter
  1723  036B  0AC8               	incf	___lwmod@counter,f
  1724  036C  2B78               	goto	l1471
  1725  036D                     l1467:
  1726  036D  3001               	movlw	1
  1727  036E                     u685:
  1728  036E  1003               	clrc
  1729  036F  0DC3               	rlf	___lwmod@divisor,f
  1730  0370  0DC4               	rlf	___lwmod@divisor+1,f
  1731  0371  3EFF               	addlw	-1
  1732  0372  1D03               	skipz
  1733  0373  2B6E               	goto	u685
  1734  0374                     l1469:
  1735  0374  3001               	movlw	1
  1736  0375  00C7               	movwf	??___lwmod
  1737  0376  0847               	movf	??___lwmod,w
  1738  0377  07C8               	addwf	___lwmod@counter,f
  1739  0378                     l1471:
  1740  0378  1FC4               	btfss	___lwmod@divisor+1,7
  1741  0379  2B7B               	goto	u691
  1742  037A  2B7C               	goto	u690
  1743  037B                     u691:
  1744  037B  2B6D               	goto	l1467
  1745  037C                     u690:
  1746  037C                     l1473:
  1747  037C  0844               	movf	___lwmod@divisor+1,w
  1748  037D  0246               	subwf	___lwmod@dividend+1,w
  1749  037E  1D03               	skipz
  1750  037F  2B82               	goto	u705
  1751  0380  0843               	movf	___lwmod@divisor,w
  1752  0381  0245               	subwf	___lwmod@dividend,w
  1753  0382                     u705:
  1754  0382  1C03               	skipc
  1755  0383  2B85               	goto	u701
  1756  0384  2B86               	goto	u700
  1757  0385                     u701:
  1758  0385  2B8C               	goto	l1477
  1759  0386                     u700:
  1760  0386                     l1475:
  1761  0386  0843               	movf	___lwmod@divisor,w
  1762  0387  02C5               	subwf	___lwmod@dividend,f
  1763  0388  0844               	movf	___lwmod@divisor+1,w
  1764  0389  1C03               	skipc
  1765  038A  03C6               	decf	___lwmod@dividend+1,f
  1766  038B  02C6               	subwf	___lwmod@dividend+1,f
  1767  038C                     l1477:
  1768  038C  3001               	movlw	1
  1769  038D                     u715:
  1770  038D  1003               	clrc
  1771  038E  0CC4               	rrf	___lwmod@divisor+1,f
  1772  038F  0CC3               	rrf	___lwmod@divisor,f
  1773  0390  3EFF               	addlw	-1
  1774  0391  1D03               	skipz
  1775  0392  2B8D               	goto	u715
  1776  0393                     l1479:
  1777  0393  3001               	movlw	1
  1778  0394  02C8               	subwf	___lwmod@counter,f
  1779  0395  1D03               	btfss	3,2
  1780  0396  2B98               	goto	u721
  1781  0397  2B99               	goto	u720
  1782  0398                     u721:
  1783  0398  2B7C               	goto	l1473
  1784  0399                     u720:
  1785  0399                     l1481:
  1786  0399  0846               	movf	___lwmod@dividend+1,w
  1787  039A  00C4               	movwf	?___lwmod+1
  1788  039B  0845               	movf	___lwmod@dividend,w
  1789  039C  00C3               	movwf	?___lwmod
  1790  039D                     l695:
  1791  039D  0008               	return
  1792  039E                     __end_of___lwmod:
  1793                           
  1794                           	psect	text3
  1795  031C                     __ptext3:	
  1796 ;; *************** function ___lwdiv *****************
  1797 ;; Defined at:
  1798 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  divisor         2    3[COMMON] unsigned int 
  1801 ;;  dividend        2    5[COMMON] unsigned int 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  quotient        2    1[BANK0 ] unsigned int 
  1804 ;;  counter         1    0[BANK0 ] unsigned char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  2    3[COMMON] unsigned int 
  1807 ;; Registers used:
  1808 ;;		wreg, status,2, status,0
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1814 ;;      Params:         4       0       0       0       0
  1815 ;;      Locals:         0       3       0       0       0
  1816 ;;      Temps:          1       0       0       0       0
  1817 ;;      Totals:         5       3       0       0       0
  1818 ;;Total ram usage:        8 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    1
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_sprintf
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           
  1829                           ;psect for function ___lwdiv
  1830  031C                     ___lwdiv:
  1831  031C                     l1885:	
  1832                           ;incstack = 0
  1833                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1834                           
  1835  031C  1283               	bcf	3,5	;RP0=0, select bank0
  1836  031D  1303               	bcf	3,6	;RP1=0, select bank0
  1837  031E  01C1               	clrf	___lwdiv@quotient
  1838  031F  01C2               	clrf	___lwdiv@quotient+1
  1839  0320                     l1887:
  1840  0320  0873               	movf	___lwdiv@divisor,w
  1841  0321  0474               	iorwf	___lwdiv@divisor+1,w
  1842  0322  1903               	btfsc	3,2
  1843  0323  2B25               	goto	u1181
  1844  0324  2B26               	goto	u1180
  1845  0325                     u1181:
  1846  0325  2B5D               	goto	l1907
  1847  0326                     u1180:
  1848  0326                     l1889:
  1849  0326  01C0               	clrf	___lwdiv@counter
  1850  0327  0AC0               	incf	___lwdiv@counter,f
  1851  0328  2B34               	goto	l1895
  1852  0329                     l1891:
  1853  0329  3001               	movlw	1
  1854  032A                     u1195:
  1855  032A  1003               	clrc
  1856  032B  0DF3               	rlf	___lwdiv@divisor,f
  1857  032C  0DF4               	rlf	___lwdiv@divisor+1,f
  1858  032D  3EFF               	addlw	-1
  1859  032E  1D03               	skipz
  1860  032F  2B2A               	goto	u1195
  1861  0330                     l1893:
  1862  0330  3001               	movlw	1
  1863  0331  00F7               	movwf	??___lwdiv
  1864  0332  0877               	movf	??___lwdiv,w
  1865  0333  07C0               	addwf	___lwdiv@counter,f
  1866  0334                     l1895:
  1867  0334  1FF4               	btfss	___lwdiv@divisor+1,7
  1868  0335  2B37               	goto	u1201
  1869  0336  2B38               	goto	u1200
  1870  0337                     u1201:
  1871  0337  2B29               	goto	l1891
  1872  0338                     u1200:
  1873  0338                     l1897:
  1874  0338  3001               	movlw	1
  1875  0339                     u1215:
  1876  0339  1003               	clrc
  1877  033A  0DC1               	rlf	___lwdiv@quotient,f
  1878  033B  0DC2               	rlf	___lwdiv@quotient+1,f
  1879  033C  3EFF               	addlw	-1
  1880  033D  1D03               	skipz
  1881  033E  2B39               	goto	u1215
  1882  033F  0874               	movf	___lwdiv@divisor+1,w
  1883  0340  0276               	subwf	___lwdiv@dividend+1,w
  1884  0341  1D03               	skipz
  1885  0342  2B45               	goto	u1225
  1886  0343  0873               	movf	___lwdiv@divisor,w
  1887  0344  0275               	subwf	___lwdiv@dividend,w
  1888  0345                     u1225:
  1889  0345  1C03               	skipc
  1890  0346  2B48               	goto	u1221
  1891  0347  2B49               	goto	u1220
  1892  0348                     u1221:
  1893  0348  2B50               	goto	l1903
  1894  0349                     u1220:
  1895  0349                     l1899:
  1896  0349  0873               	movf	___lwdiv@divisor,w
  1897  034A  02F5               	subwf	___lwdiv@dividend,f
  1898  034B  0874               	movf	___lwdiv@divisor+1,w
  1899  034C  1C03               	skipc
  1900  034D  03F6               	decf	___lwdiv@dividend+1,f
  1901  034E  02F6               	subwf	___lwdiv@dividend+1,f
  1902  034F                     l1901:
  1903  034F  1441               	bsf	___lwdiv@quotient,0
  1904  0350                     l1903:
  1905  0350  3001               	movlw	1
  1906  0351                     u1235:
  1907  0351  1003               	clrc
  1908  0352  0CF4               	rrf	___lwdiv@divisor+1,f
  1909  0353  0CF3               	rrf	___lwdiv@divisor,f
  1910  0354  3EFF               	addlw	-1
  1911  0355  1D03               	skipz
  1912  0356  2B51               	goto	u1235
  1913  0357                     l1905:
  1914  0357  3001               	movlw	1
  1915  0358  02C0               	subwf	___lwdiv@counter,f
  1916  0359  1D03               	btfss	3,2
  1917  035A  2B5C               	goto	u1241
  1918  035B  2B5D               	goto	u1240
  1919  035C                     u1241:
  1920  035C  2B38               	goto	l1897
  1921  035D                     u1240:
  1922  035D                     l1907:
  1923  035D  0842               	movf	___lwdiv@quotient+1,w
  1924  035E  00F4               	movwf	?___lwdiv+1
  1925  035F  0841               	movf	___lwdiv@quotient,w
  1926  0360  00F3               	movwf	?___lwdiv
  1927  0361                     l685:
  1928  0361  0008               	return
  1929  0362                     __end_of___lwdiv:
  1930                           
  1931                           	psect	text4
  1932  040A                     __ptext4:	
  1933 ;; *************** function _setup *****************
  1934 ;; Defined at:
  1935 ;;		line 221 in file "main_prueba3_mini2.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0, pclath, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1949 ;;      Params:         0       0       0       0       0
  1950 ;;      Locals:         0       0       0       0       0
  1951 ;;      Temps:          0       0       0       0       0
  1952 ;;      Totals:         0       0       0       0       0
  1953 ;;Total ram usage:        0 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    3
  1956 ;; This function calls:
  1957 ;;		_I2C_Master_Init
  1958 ;;		_USART_INTERRUPT
  1959 ;;		_USART_Init
  1960 ;;		_USART_Init_BaudRate
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           
  1967                           ;psect for function _setup
  1968  040A                     _setup:
  1969  040A                     l1911:	
  1970                           ;incstack = 0
  1971                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1972                           
  1973                           
  1974                           ;main_prueba3_mini2.c: 223:     ANSEL = 0;
  1975  040A  1683               	bsf	3,5	;RP0=1, select bank3
  1976  040B  1703               	bsf	3,6	;RP1=1, select bank3
  1977  040C  0188               	clrf	8	;volatile
  1978                           
  1979                           ;main_prueba3_mini2.c: 224:     ANSELH = 0;
  1980  040D  0189               	clrf	9	;volatile
  1981                           
  1982                           ;main_prueba3_mini2.c: 225:     TRISA = 0;
  1983  040E  1683               	bsf	3,5	;RP0=1, select bank1
  1984  040F  1303               	bcf	3,6	;RP1=0, select bank1
  1985  0410  0185               	clrf	5	;volatile
  1986  0411                     l1913:
  1987                           
  1988                           ;main_prueba3_mini2.c: 226:     TRISB = 0b00000011;
  1989  0411  3003               	movlw	3
  1990  0412  0086               	movwf	6	;volatile
  1991  0413                     l1915:
  1992                           
  1993                           ;main_prueba3_mini2.c: 227:     TRISCbits.TRISC6 = 0;
  1994  0413  1307               	bcf	7,6	;volatile
  1995  0414                     l1917:
  1996                           
  1997                           ;main_prueba3_mini2.c: 228:     TRISCbits.TRISC7 = 1;
  1998  0414  1787               	bsf	7,7	;volatile
  1999  0415                     l1919:
  2000                           
  2001                           ;main_prueba3_mini2.c: 229:     TRISD = 0;
  2002  0415  0188               	clrf	8	;volatile
  2003  0416                     l1921:
  2004                           
  2005                           ;main_prueba3_mini2.c: 230:     TRISE = 0;
  2006  0416  0189               	clrf	9	;volatile
  2007  0417                     l1923:
  2008                           
  2009                           ;main_prueba3_mini2.c: 231:     PORTA = 0;
  2010  0417  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0418  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0419  0185               	clrf	5	;volatile
  2013  041A                     l1925:
  2014                           
  2015                           ;main_prueba3_mini2.c: 232:     PORTB = 0;
  2016  041A  0186               	clrf	6	;volatile
  2017  041B                     l1927:
  2018                           
  2019                           ;main_prueba3_mini2.c: 233:     PORTC = 0;
  2020  041B  0187               	clrf	7	;volatile
  2021  041C                     l1929:
  2022                           
  2023                           ;main_prueba3_mini2.c: 234:     PORTD = 0;
  2024  041C  0188               	clrf	8	;volatile
  2025  041D                     l1931:
  2026                           
  2027                           ;main_prueba3_mini2.c: 235:     PORTE = 0;
  2028  041D  0189               	clrf	9	;volatile
  2029  041E                     l1933:
  2030                           
  2031                           ;main_prueba3_mini2.c: 236:     I2C_Master_Init(100000);
  2032  041E  3000               	movlw	0
  2033  041F  00D0               	movwf	I2C_Master_Init@c+3
  2034  0420  3001               	movlw	1
  2035  0421  00CF               	movwf	I2C_Master_Init@c+2
  2036  0422  3086               	movlw	134
  2037  0423  00CE               	movwf	I2C_Master_Init@c+1
  2038  0424  30A0               	movlw	160
  2039  0425  00CD               	movwf	I2C_Master_Init@c
  2040  0426  120A  118A  239E  120A  118A  	fcall	_I2C_Master_Init
  2041  042B                     l1935:
  2042                           
  2043                           ;main_prueba3_mini2.c: 237:     USART_Init_BaudRate();
  2044  042B  120A  118A  255A  120A  118A  	fcall	_USART_Init_BaudRate
  2045  0430                     l1937:
  2046                           
  2047                           ;main_prueba3_mini2.c: 238:     USART_Init();
  2048  0430  120A  118A  2515  120A  118A  	fcall	_USART_Init
  2049  0435                     l1939:
  2050                           
  2051                           ;main_prueba3_mini2.c: 239:     USART_INTERRUPT();
  2052  0435  120A  118A  2560  120A  118A  	fcall	_USART_INTERRUPT
  2053  043A                     l130:
  2054  043A  0008               	return
  2055  043B                     __end_of_setup:
  2056                           
  2057                           	psect	text5
  2058  055A                     __ptext5:	
  2059 ;; *************** function _USART_Init_BaudRate *****************
  2060 ;; Defined at:
  2061 ;;		line 19 in file "USART.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;		None
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;		None
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg, status,2
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2075 ;;      Params:         0       0       0       0       0
  2076 ;;      Locals:         0       0       0       0       0
  2077 ;;      Temps:          0       0       0       0       0
  2078 ;;      Totals:         0       0       0       0       0
  2079 ;;Total ram usage:        0 bytes
  2080 ;; Hardware stack levels used:    1
  2081 ;; Hardware stack levels required when called:    1
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_setup
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           
  2090                           ;psect for function _USART_Init_BaudRate
  2091  055A                     _USART_Init_BaudRate:
  2092  055A                     l1417:	
  2093                           ;incstack = 0
  2094                           ; Regs used in _USART_Init_BaudRate: [wreg+status,2]
  2095                           
  2096                           
  2097                           ;USART.c: 20:     SPBRGH = 0;
  2098  055A  1683               	bsf	3,5	;RP0=1, select bank1
  2099  055B  1303               	bcf	3,6	;RP1=0, select bank1
  2100  055C  019A               	clrf	26	;volatile
  2101  055D                     l1419:
  2102                           
  2103                           ;USART.c: 21:     SPBRG = 12;
  2104  055D  300C               	movlw	12
  2105  055E  0099               	movwf	25	;volatile
  2106  055F                     l278:
  2107  055F  0008               	return
  2108  0560                     __end_of_USART_Init_BaudRate:
  2109                           
  2110                           	psect	text6
  2111  0515                     __ptext6:	
  2112 ;; *************** function _USART_Init *****************
  2113 ;; Defined at:
  2114 ;;		line 8 in file "USART.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;		None
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;		None
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		status,2
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2128 ;;      Params:         0       0       0       0       0
  2129 ;;      Locals:         0       0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0
  2131 ;;      Totals:         0       0       0       0       0
  2132 ;;Total ram usage:        0 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    1
  2135 ;; This function calls:
  2136 ;;		Nothing
  2137 ;; This function is called by:
  2138 ;;		_setup
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           
  2143                           ;psect for function _USART_Init
  2144  0515                     _USART_Init:
  2145  0515                     l1421:	
  2146                           ;incstack = 0
  2147                           ; Regs used in _USART_Init: [status,2]
  2148                           
  2149                           
  2150                           ;USART.c: 10:     RCSTAbits.SPEN = 1;
  2151  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2152  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2153  0517  1798               	bsf	24,7	;volatile
  2154                           
  2155                           ;USART.c: 11:     TXSTAbits.SYNC = 0;
  2156  0518  1683               	bsf	3,5	;RP0=1, select bank1
  2157  0519  1303               	bcf	3,6	;RP1=0, select bank1
  2158  051A  1218               	bcf	24,4	;volatile
  2159                           
  2160                           ;USART.c: 13:     TXSTAbits.TXEN = 1;
  2161  051B  1698               	bsf	24,5	;volatile
  2162                           
  2163                           ;USART.c: 15:     RCSTAbits.CREN = 1;
  2164  051C  1283               	bcf	3,5	;RP0=0, select bank0
  2165  051D  1303               	bcf	3,6	;RP1=0, select bank0
  2166  051E  1618               	bsf	24,4	;volatile
  2167  051F                     l1423:
  2168                           
  2169                           ;USART.c: 16:     RCREG = 0;
  2170  051F  019A               	clrf	26	;volatile
  2171  0520                     l275:
  2172  0520  0008               	return
  2173  0521                     __end_of_USART_Init:
  2174                           
  2175                           	psect	text7
  2176  0560                     __ptext7:	
  2177 ;; *************** function _USART_INTERRUPT *****************
  2178 ;; Defined at:
  2179 ;;		line 24 in file "USART.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		None
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2193 ;;      Params:         0       0       0       0       0
  2194 ;;      Locals:         0       0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0
  2196 ;;      Totals:         0       0       0       0       0
  2197 ;;Total ram usage:        0 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    1
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_setup
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           
  2208                           ;psect for function _USART_INTERRUPT
  2209  0560                     _USART_INTERRUPT:
  2210  0560                     l1425:	
  2211                           ;incstack = 0
  2212                           ; Regs used in _USART_INTERRUPT: []
  2213                           
  2214                           
  2215                           ;USART.c: 25:     INTCONbits.GIE = 1;
  2216  0560  178B               	bsf	11,7	;volatile
  2217                           
  2218                           ;USART.c: 26:     INTCONbits.PEIE = 1;
  2219  0561  170B               	bsf	11,6	;volatile
  2220                           
  2221                           ;USART.c: 27:     PIE1bits.RCIE = 1;
  2222  0562  1683               	bsf	3,5	;RP0=1, select bank1
  2223  0563  1303               	bcf	3,6	;RP1=0, select bank1
  2224  0564  168C               	bsf	12,5	;volatile
  2225  0565                     l281:
  2226  0565  0008               	return
  2227  0566                     __end_of_USART_INTERRUPT:
  2228                           
  2229                           	psect	text8
  2230  039E                     __ptext8:	
  2231 ;; *************** function _I2C_Master_Init *****************
  2232 ;; Defined at:
  2233 ;;		line 21 in file "I2C.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  c               4   13[BANK0 ] const unsigned long 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, status,2, status,0, pclath, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2247 ;;      Params:         0       4       0       0       0
  2248 ;;      Locals:         0       0       0       0       0
  2249 ;;      Temps:          4       0       0       0       0
  2250 ;;      Totals:         4       4       0       0       0
  2251 ;;Total ram usage:        8 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    2
  2254 ;; This function calls:
  2255 ;;		___lldiv
  2256 ;; This function is called by:
  2257 ;;		_setup
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           
  2262                           ;psect for function _I2C_Master_Init
  2263  039E                     _I2C_Master_Init:
  2264  039E                     l1873:	
  2265                           ;incstack = 0
  2266                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2267                           
  2268                           
  2269                           ;I2C.c: 21: void I2C_Master_Init(const unsigned long c);I2C.c: 22: {;I2C.c: 23:     SSPC
      +                          ON = 0b00101000;
  2270  039E  3028               	movlw	40
  2271  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2272  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2273  03A1  0094               	movwf	20	;volatile
  2274  03A2                     l1875:
  2275                           
  2276                           ;I2C.c: 28:     SSPCON2 = 0;
  2277  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  2278  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  2279  03A4  0191               	clrf	17	;volatile
  2280  03A5                     l1877:
  2281                           
  2282                           ;I2C.c: 35:     SSPADD = (8000000/(4*c))-1;
  2283  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2284  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2285  03A7  084D               	movf	I2C_Master_Init@c,w
  2286  03A8  00F4               	movwf	??_I2C_Master_Init
  2287  03A9  084E               	movf	I2C_Master_Init@c+1,w
  2288  03AA  00F5               	movwf	??_I2C_Master_Init+1
  2289  03AB  084F               	movf	I2C_Master_Init@c+2,w
  2290  03AC  00F6               	movwf	??_I2C_Master_Init+2
  2291  03AD  0850               	movf	I2C_Master_Init@c+3,w
  2292  03AE  00F7               	movwf	??_I2C_Master_Init+3
  2293  03AF  3002               	movlw	2
  2294  03B0                     u1175:
  2295  03B0  1003               	clrc
  2296  03B1  0DF4               	rlf	??_I2C_Master_Init,f
  2297  03B2  0DF5               	rlf	??_I2C_Master_Init+1,f
  2298  03B3  0DF6               	rlf	??_I2C_Master_Init+2,f
  2299  03B4  0DF7               	rlf	??_I2C_Master_Init+3,f
  2300  03B5                     u1170:
  2301  03B5  3EFF               	addlw	-1
  2302  03B6  1D03               	skipz
  2303  03B7  2BB0               	goto	u1175
  2304  03B8  0877               	movf	??_I2C_Master_Init+3,w
  2305  03B9  00C3               	movwf	___lldiv@divisor+3
  2306  03BA  0876               	movf	??_I2C_Master_Init+2,w
  2307  03BB  00C2               	movwf	___lldiv@divisor+2
  2308  03BC  0875               	movf	??_I2C_Master_Init+1,w
  2309  03BD  00C1               	movwf	___lldiv@divisor+1
  2310  03BE  0874               	movf	??_I2C_Master_Init,w
  2311  03BF  00C0               	movwf	___lldiv@divisor
  2312  03C0  3000               	movlw	0
  2313  03C1  00C7               	movwf	___lldiv@dividend+3
  2314  03C2  307A               	movlw	122
  2315  03C3  00C6               	movwf	___lldiv@dividend+2
  2316  03C4  3012               	movlw	18
  2317  03C5  00C5               	movwf	___lldiv@dividend+1
  2318  03C6  3000               	movlw	0
  2319  03C7  00C4               	movwf	___lldiv@dividend
  2320  03C8  120A  118A  220A  120A  118A  	fcall	___lldiv
  2321  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2322  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2323  03CF  0840               	movf	?___lldiv,w
  2324  03D0  3EFF               	addlw	255
  2325  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  2326  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  2327  03D3  0093               	movwf	19	;volatile
  2328  03D4                     l1879:
  2329                           
  2330                           ;I2C.c: 36:     SSPSTAT = 0;
  2331  03D4  0194               	clrf	20	;volatile
  2332  03D5                     l1881:
  2333                           
  2334                           ;I2C.c: 37:     TRISCbits.TRISC3 = 1;
  2335  03D5  1587               	bsf	7,3	;volatile
  2336  03D6                     l1883:
  2337                           
  2338                           ;I2C.c: 38:     TRISCbits.TRISC4 = 1;
  2339  03D6  1607               	bsf	7,4	;volatile
  2340  03D7                     l159:
  2341  03D7  0008               	return
  2342  03D8                     __end_of_I2C_Master_Init:
  2343                           
  2344                           	psect	text9
  2345  020A                     __ptext9:	
  2346 ;; *************** function ___lldiv *****************
  2347 ;; Defined at:
  2348 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  divisor         4    0[BANK0 ] unsigned long 
  2351 ;;  dividend        4    4[BANK0 ] unsigned long 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  quotient        4    8[BANK0 ] unsigned long 
  2354 ;;  counter         1   12[BANK0 ] unsigned char 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  4    0[BANK0 ] unsigned long 
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2364 ;;      Params:         0       8       0       0       0
  2365 ;;      Locals:         0       5       0       0       0
  2366 ;;      Temps:          1       0       0       0       0
  2367 ;;      Totals:         1      13       0       0       0
  2368 ;;Total ram usage:       14 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    1
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_I2C_Master_Init
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function ___lldiv
  2380  020A                     ___lldiv:
  2381  020A                     l1833:	
  2382                           ;incstack = 0
  2383                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2384                           
  2385  020A  3000               	movlw	0
  2386  020B  1283               	bcf	3,5	;RP0=0, select bank0
  2387  020C  1303               	bcf	3,6	;RP1=0, select bank0
  2388  020D  00CB               	movwf	___lldiv@quotient+3
  2389  020E  3000               	movlw	0
  2390  020F  00CA               	movwf	___lldiv@quotient+2
  2391  0210  3000               	movlw	0
  2392  0211  00C9               	movwf	___lldiv@quotient+1
  2393  0212  3000               	movlw	0
  2394  0213  00C8               	movwf	___lldiv@quotient
  2395  0214  0843               	movf	___lldiv@divisor+3,w
  2396  0215  0442               	iorwf	___lldiv@divisor+2,w
  2397  0216  0441               	iorwf	___lldiv@divisor+1,w
  2398  0217  0440               	iorwf	___lldiv@divisor,w
  2399  0218  1903               	skipnz
  2400  0219  2A1B               	goto	u1091
  2401  021A  2A1C               	goto	u1090
  2402  021B                     u1091:
  2403  021B  2A69               	goto	l1853
  2404  021C                     u1090:
  2405  021C                     l1835:
  2406  021C  01CC               	clrf	___lldiv@counter
  2407  021D  0ACC               	incf	___lldiv@counter,f
  2408  021E  2A2C               	goto	l1839
  2409  021F                     l1837:
  2410  021F  3001               	movlw	1
  2411  0220  00F3               	movwf	??___lldiv
  2412  0221                     u1105:
  2413  0221  1003               	clrc
  2414  0222  0DC0               	rlf	___lldiv@divisor,f
  2415  0223  0DC1               	rlf	___lldiv@divisor+1,f
  2416  0224  0DC2               	rlf	___lldiv@divisor+2,f
  2417  0225  0DC3               	rlf	___lldiv@divisor+3,f
  2418  0226  0BF3               	decfsz	??___lldiv,f
  2419  0227  2A21               	goto	u1105
  2420  0228  3001               	movlw	1
  2421  0229  00F3               	movwf	??___lldiv
  2422  022A  0873               	movf	??___lldiv,w
  2423  022B  07CC               	addwf	___lldiv@counter,f
  2424  022C                     l1839:
  2425  022C  1FC3               	btfss	___lldiv@divisor+3,7
  2426  022D  2A2F               	goto	u1111
  2427  022E  2A30               	goto	u1110
  2428  022F                     u1111:
  2429  022F  2A1F               	goto	l1837
  2430  0230                     u1110:
  2431  0230                     l1841:
  2432  0230  3001               	movlw	1
  2433  0231  00F3               	movwf	??___lldiv
  2434  0232                     u1125:
  2435  0232  1003               	clrc
  2436  0233  0DC8               	rlf	___lldiv@quotient,f
  2437  0234  0DC9               	rlf	___lldiv@quotient+1,f
  2438  0235  0DCA               	rlf	___lldiv@quotient+2,f
  2439  0236  0DCB               	rlf	___lldiv@quotient+3,f
  2440  0237  0BF3               	decfsz	??___lldiv,f
  2441  0238  2A32               	goto	u1125
  2442  0239                     l1843:
  2443  0239  0843               	movf	___lldiv@divisor+3,w
  2444  023A  0247               	subwf	___lldiv@dividend+3,w
  2445  023B  1D03               	skipz
  2446  023C  2A47               	goto	u1135
  2447  023D  0842               	movf	___lldiv@divisor+2,w
  2448  023E  0246               	subwf	___lldiv@dividend+2,w
  2449  023F  1D03               	skipz
  2450  0240  2A47               	goto	u1135
  2451  0241  0841               	movf	___lldiv@divisor+1,w
  2452  0242  0245               	subwf	___lldiv@dividend+1,w
  2453  0243  1D03               	skipz
  2454  0244  2A47               	goto	u1135
  2455  0245  0840               	movf	___lldiv@divisor,w
  2456  0246  0244               	subwf	___lldiv@dividend,w
  2457  0247                     u1135:
  2458  0247  1C03               	skipc
  2459  0248  2A4A               	goto	u1131
  2460  0249  2A4B               	goto	u1130
  2461  024A                     u1131:
  2462  024A  2A5A               	goto	l1849
  2463  024B                     u1130:
  2464  024B                     l1845:
  2465  024B  0840               	movf	___lldiv@divisor,w
  2466  024C  02C4               	subwf	___lldiv@dividend,f
  2467  024D  0841               	movf	___lldiv@divisor+1,w
  2468  024E  1C03               	skipc
  2469  024F  0F41               	incfsz	___lldiv@divisor+1,w
  2470  0250  02C5               	subwf	___lldiv@dividend+1,f
  2471  0251  0842               	movf	___lldiv@divisor+2,w
  2472  0252  1C03               	skipc
  2473  0253  0F42               	incfsz	___lldiv@divisor+2,w
  2474  0254  02C6               	subwf	___lldiv@dividend+2,f
  2475  0255  0843               	movf	___lldiv@divisor+3,w
  2476  0256  1C03               	skipc
  2477  0257  0F43               	incfsz	___lldiv@divisor+3,w
  2478  0258  02C7               	subwf	___lldiv@dividend+3,f
  2479  0259                     l1847:
  2480  0259  1448               	bsf	___lldiv@quotient,0
  2481  025A                     l1849:
  2482  025A  3001               	movlw	1
  2483  025B                     u1145:
  2484  025B  1003               	clrc
  2485  025C  0CC3               	rrf	___lldiv@divisor+3,f
  2486  025D  0CC2               	rrf	___lldiv@divisor+2,f
  2487  025E  0CC1               	rrf	___lldiv@divisor+1,f
  2488  025F  0CC0               	rrf	___lldiv@divisor,f
  2489  0260  3EFF               	addlw	-1
  2490  0261  1D03               	skipz
  2491  0262  2A5B               	goto	u1145
  2492  0263                     l1851:
  2493  0263  3001               	movlw	1
  2494  0264  02CC               	subwf	___lldiv@counter,f
  2495  0265  1D03               	btfss	3,2
  2496  0266  2A68               	goto	u1151
  2497  0267  2A69               	goto	u1150
  2498  0268                     u1151:
  2499  0268  2A30               	goto	l1841
  2500  0269                     u1150:
  2501  0269                     l1853:
  2502  0269  084B               	movf	___lldiv@quotient+3,w
  2503  026A  00C3               	movwf	?___lldiv+3
  2504  026B  084A               	movf	___lldiv@quotient+2,w
  2505  026C  00C2               	movwf	?___lldiv+2
  2506  026D  0849               	movf	___lldiv@quotient+1,w
  2507  026E  00C1               	movwf	?___lldiv+1
  2508  026F  0848               	movf	___lldiv@quotient,w
  2509  0270  00C0               	movwf	?___lldiv
  2510  0271                     l449:
  2511  0271  0008               	return
  2512  0272                     __end_of___lldiv:
  2513                           
  2514                           	psect	text10
  2515  0272                     __ptext10:	
  2516 ;; *************** function _Write_to_RTC *****************
  2517 ;; Defined at:
  2518 ;;		line 206 in file "main_prueba3_mini2.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0, pclath, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         0       0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0
  2535 ;;      Totals:         0       0       0       0       0
  2536 ;;Total ram usage:        0 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    3
  2539 ;; This function calls:
  2540 ;;		_I2C_Master_Start
  2541 ;;		_I2C_Master_Stop
  2542 ;;		_I2C_Master_Write
  2543 ;; This function is called by:
  2544 ;;		_main
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           
  2549                           ;psect for function _Write_to_RTC
  2550  0272                     _Write_to_RTC:
  2551  0272                     l1951:	
  2552                           ;incstack = 0
  2553                           ; Regs used in _Write_to_RTC: [wreg+status,2+status,0+pclath+cstack]
  2554                           
  2555                           
  2556                           ;main_prueba3_mini2.c: 207:     I2C_Master_Start();
  2557  0272  120A  118A  2540  120A  118A  	fcall	_I2C_Master_Start
  2558                           
  2559                           ;main_prueba3_mini2.c: 208:     I2C_Master_Write(0xD0);
  2560  0277  30D0               	movlw	208
  2561  0278  00F3               	movwf	I2C_Master_Write@d
  2562  0279  3000               	movlw	0
  2563  027A  00F4               	movwf	I2C_Master_Write@d+1
  2564  027B  120A  118A  252D  120A  118A  	fcall	_I2C_Master_Write
  2565                           
  2566                           ;main_prueba3_mini2.c: 209:     I2C_Master_Write(0);
  2567  0280  3000               	movlw	0
  2568  0281  00F3               	movwf	I2C_Master_Write@d
  2569  0282  00F4               	movwf	I2C_Master_Write@d+1
  2570  0283  120A  118A  252D  120A  118A  	fcall	_I2C_Master_Write
  2571                           
  2572                           ;main_prueba3_mini2.c: 210:     I2C_Master_Write(0);
  2573  0288  3000               	movlw	0
  2574  0289  00F3               	movwf	I2C_Master_Write@d
  2575  028A  00F4               	movwf	I2C_Master_Write@d+1
  2576  028B  120A  118A  252D  120A  118A  	fcall	_I2C_Master_Write
  2577                           
  2578                           ;main_prueba3_mini2.c: 211:     I2C_Master_Write(3);
  2579  0290  3003               	movlw	3
  2580  0291  00F3               	movwf	I2C_Master_Write@d
  2581  0292  3000               	movlw	0
  2582  0293  00F4               	movwf	I2C_Master_Write@d+1
  2583  0294  120A  118A  252D  120A  118A  	fcall	_I2C_Master_Write
  2584                           
  2585                           ;main_prueba3_mini2.c: 212:     I2C_Master_Write(10);
  2586  0299  300A               	movlw	10
  2587  029A  00F3               	movwf	I2C_Master_Write@d
  2588  029B  3000               	movlw	0
  2589  029C  00F4               	movwf	I2C_Master_Write@d+1
  2590  029D  120A  118A  252D  120A  118A  	fcall	_I2C_Master_Write
  2591                           
  2592                           ;main_prueba3_mini2.c: 213:     I2C_Master_Write(1);
  2593  02A2  3001               	movlw	1
  2594  02A3  00F3               	movwf	I2C_Master_Write@d
  2595  02A4  3000               	movlw	0
  2596  02A5  00F4               	movwf	I2C_Master_Write@d+1
  2597  02A6  120A  118A  252D  120A  118A  	fcall	_I2C_Master_Write
  2598                           
  2599                           ;main_prueba3_mini2.c: 214:     I2C_Master_Write(6);
  2600  02AB  3006               	movlw	6
  2601  02AC  00F3               	movwf	I2C_Master_Write@d
  2602  02AD  3000               	movlw	0
  2603  02AE  00F4               	movwf	I2C_Master_Write@d+1
  2604  02AF  120A  118A  252D  120A  118A  	fcall	_I2C_Master_Write
  2605                           
  2606                           ;main_prueba3_mini2.c: 215:     I2C_Master_Write(3);
  2607  02B4  3003               	movlw	3
  2608  02B5  00F3               	movwf	I2C_Master_Write@d
  2609  02B6  3000               	movlw	0
  2610  02B7  00F4               	movwf	I2C_Master_Write@d+1
  2611  02B8  120A  118A  252D  120A  118A  	fcall	_I2C_Master_Write
  2612                           
  2613                           ;main_prueba3_mini2.c: 216:     I2C_Master_Write(27);
  2614  02BD  301B               	movlw	27
  2615  02BE  00F3               	movwf	I2C_Master_Write@d
  2616  02BF  3000               	movlw	0
  2617  02C0  00F4               	movwf	I2C_Master_Write@d+1
  2618  02C1  120A  118A  252D  120A  118A  	fcall	_I2C_Master_Write
  2619                           
  2620                           ;main_prueba3_mini2.c: 217:     I2C_Master_Stop();
  2621  02C6  120A  118A  2537  120A  118A  	fcall	_I2C_Master_Stop
  2622  02CB                     l127:
  2623  02CB  0008               	return
  2624  02CC                     __end_of_Write_to_RTC:
  2625                           
  2626                           	psect	text11
  2627  052D                     __ptext11:	
  2628 ;; *************** function _I2C_Master_Write *****************
  2629 ;; Defined at:
  2630 ;;		line 84 in file "I2C.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;  d               2    3[COMMON] unsigned int 
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2, status,0, pclath, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2644 ;;      Params:         2       0       0       0       0
  2645 ;;      Locals:         0       0       0       0       0
  2646 ;;      Temps:          0       0       0       0       0
  2647 ;;      Totals:         2       0       0       0       0
  2648 ;;Total ram usage:        2 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    2
  2651 ;; This function calls:
  2652 ;;		_I2C_Master_Wait
  2653 ;; This function is called by:
  2654 ;;		_main
  2655 ;;		_Write_to_RTC
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           
  2660                           ;psect for function _I2C_Master_Write
  2661  052D                     _I2C_Master_Write:
  2662  052D                     l1861:	
  2663                           ;incstack = 0
  2664                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2665                           
  2666                           
  2667                           ;I2C.c: 84: void I2C_Master_Write(unsigned d);I2C.c: 85: {;I2C.c: 86:     I2C_Master_Wai
      +                          t();
  2668  052D  120A  118A  2508  120A  118A  	fcall	_I2C_Master_Wait
  2669  0532                     l1863:
  2670                           
  2671                           ;I2C.c: 87:     SSPBUF = d;
  2672  0532  0873               	movf	I2C_Master_Write@d,w
  2673  0533  1283               	bcf	3,5	;RP0=0, select bank0
  2674  0534  1303               	bcf	3,6	;RP1=0, select bank0
  2675  0535  0093               	movwf	19	;volatile
  2676  0536                     l177:
  2677  0536  0008               	return
  2678  0537                     __end_of_I2C_Master_Write:
  2679                           
  2680                           	psect	text12
  2681  0537                     __ptext12:	
  2682 ;; *************** function _I2C_Master_Stop *****************
  2683 ;; Defined at:
  2684 ;;		line 73 in file "I2C.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;		None
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, status,2, status,0, pclath, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2698 ;;      Params:         0       0       0       0       0
  2699 ;;      Locals:         0       0       0       0       0
  2700 ;;      Temps:          0       0       0       0       0
  2701 ;;      Totals:         0       0       0       0       0
  2702 ;;Total ram usage:        0 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    2
  2705 ;; This function calls:
  2706 ;;		_I2C_Master_Wait
  2707 ;; This function is called by:
  2708 ;;		_main
  2709 ;;		_Write_to_RTC
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           
  2714                           ;psect for function _I2C_Master_Stop
  2715  0537                     _I2C_Master_Stop:
  2716  0537                     l1865:	
  2717                           ;incstack = 0
  2718                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2719                           
  2720                           
  2721                           ;I2C.c: 75:     I2C_Master_Wait();
  2722  0537  120A  118A  2508  120A  118A  	fcall	_I2C_Master_Wait
  2723  053C                     l1867:
  2724                           
  2725                           ;I2C.c: 76:     SSPCON2bits.PEN = 1;
  2726  053C  1683               	bsf	3,5	;RP0=1, select bank1
  2727  053D  1303               	bcf	3,6	;RP1=0, select bank1
  2728  053E  1511               	bsf	17,2	;volatile
  2729  053F                     l174:
  2730  053F  0008               	return
  2731  0540                     __end_of_I2C_Master_Stop:
  2732                           
  2733                           	psect	text13
  2734  0540                     __ptext13:	
  2735 ;; *************** function _I2C_Master_Start *****************
  2736 ;; Defined at:
  2737 ;;		line 56 in file "I2C.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;		None
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;		None
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      void 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0, pclath, cstack
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2751 ;;      Params:         0       0       0       0       0
  2752 ;;      Locals:         0       0       0       0       0
  2753 ;;      Temps:          0       0       0       0       0
  2754 ;;      Totals:         0       0       0       0       0
  2755 ;;Total ram usage:        0 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    2
  2758 ;; This function calls:
  2759 ;;		_I2C_Master_Wait
  2760 ;; This function is called by:
  2761 ;;		_main
  2762 ;;		_Write_to_RTC
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           
  2767                           ;psect for function _I2C_Master_Start
  2768  0540                     _I2C_Master_Start:
  2769  0540                     l1857:	
  2770                           ;incstack = 0
  2771                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2772                           
  2773                           
  2774                           ;I2C.c: 57:     I2C_Master_Wait();
  2775  0540  120A  118A  2508  120A  118A  	fcall	_I2C_Master_Wait
  2776  0545                     l1859:
  2777                           
  2778                           ;I2C.c: 58:     SSPCON2bits.SEN = 1;
  2779  0545  1683               	bsf	3,5	;RP0=1, select bank1
  2780  0546  1303               	bcf	3,6	;RP1=0, select bank1
  2781  0547  1411               	bsf	17,0	;volatile
  2782  0548                     l168:
  2783  0548  0008               	return
  2784  0549                     __end_of_I2C_Master_Start:
  2785                           
  2786                           	psect	text14
  2787  043B                     __ptext14:	
  2788 ;; *************** function _Write_USART_String *****************
  2789 ;; Defined at:
  2790 ;;		line 37 in file "USART.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  a               2    4[COMMON] PTR unsigned char 
  2793 ;;		 -> NULL(0), RAM(512), 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  i               1    0[BANK0 ] unsigned char 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2805 ;;      Params:         2       0       0       0       0
  2806 ;;      Locals:         0       1       0       0       0
  2807 ;;      Temps:          2       0       0       0       0
  2808 ;;      Totals:         4       1       0       0       0
  2809 ;;Total ram usage:        5 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    2
  2812 ;; This function calls:
  2813 ;;		_Write_USART
  2814 ;; This function is called by:
  2815 ;;		_main
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           
  2820                           ;psect for function _Write_USART_String
  2821  043B                     _Write_USART_String:
  2822  043B                     l2035:	
  2823                           ;incstack = 0
  2824                           ; Regs used in _Write_USART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2825                           
  2826                           
  2827                           ;USART.c: 38:     uint8_t i;;USART.c: 39:     for(i=0;a[i]!='\0';i++){
  2828  043B  1283               	bcf	3,5	;RP0=0, select bank0
  2829  043C  1303               	bcf	3,6	;RP1=0, select bank0
  2830  043D  01C0               	clrf	Write_USART_String@i
  2831  043E  2C58               	goto	l2041
  2832  043F                     l2037:
  2833                           
  2834                           ;USART.c: 40:         Write_USART(a[i]);
  2835  043F  0840               	movf	Write_USART_String@i,w
  2836  0440  0774               	addwf	Write_USART_String@a,w
  2837  0441  00F6               	movwf	??_Write_USART_String
  2838  0442  3000               	movlw	0
  2839  0443  1803               	skipnc
  2840  0444  3001               	movlw	1
  2841  0445  0775               	addwf	Write_USART_String@a+1,w
  2842  0446  00F7               	movwf	??_Write_USART_String+1
  2843  0447  0876               	movf	??_Write_USART_String,w
  2844  0448  0084               	movwf	4
  2845  0449  1783               	bsf	3,7
  2846  044A  1C77               	btfss	??_Write_USART_String+1,0
  2847  044B  1383               	bcf	3,7
  2848  044C  0800               	movf	0,w
  2849  044D  120A  118A  2521  120A  118A  	fcall	_Write_USART
  2850  0452                     l2039:
  2851                           
  2852                           ;USART.c: 41:     }
  2853  0452  3001               	movlw	1
  2854  0453  00F6               	movwf	??_Write_USART_String
  2855  0454  0876               	movf	??_Write_USART_String,w
  2856  0455  1283               	bcf	3,5	;RP0=0, select bank0
  2857  0456  1303               	bcf	3,6	;RP1=0, select bank0
  2858  0457  07C0               	addwf	Write_USART_String@i,f
  2859  0458                     l2041:
  2860  0458  0840               	movf	Write_USART_String@i,w
  2861  0459  0774               	addwf	Write_USART_String@a,w
  2862  045A  00F6               	movwf	??_Write_USART_String
  2863  045B  3000               	movlw	0
  2864  045C  1803               	skipnc
  2865  045D  3001               	movlw	1
  2866  045E  0775               	addwf	Write_USART_String@a+1,w
  2867  045F  00F7               	movwf	??_Write_USART_String+1
  2868  0460  0876               	movf	??_Write_USART_String,w
  2869  0461  0084               	movwf	4
  2870  0462  1783               	bsf	3,7
  2871  0463  1C77               	btfss	??_Write_USART_String+1,0
  2872  0464  1383               	bcf	3,7
  2873  0465  0800               	movf	0,w
  2874  0466  1D03               	btfss	3,2
  2875  0467  2C69               	goto	u1331
  2876  0468  2C6A               	goto	u1330
  2877  0469                     u1331:
  2878  0469  2C3F               	goto	l2037
  2879  046A                     u1330:
  2880  046A                     l293:
  2881  046A  0008               	return
  2882  046B                     __end_of_Write_USART_String:
  2883                           
  2884                           	psect	text15
  2885  0521                     __ptext15:	
  2886 ;; *************** function _Write_USART *****************
  2887 ;; Defined at:
  2888 ;;		line 33 in file "USART.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  a               1    wreg     unsigned char 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  a               1    3[COMMON] unsigned char 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		wreg
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2902 ;;      Params:         0       0       0       0       0
  2903 ;;      Locals:         1       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0
  2905 ;;      Totals:         1       0       0       0       0
  2906 ;;Total ram usage:        1 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    1
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_main
  2913 ;;		_Write_USART_String
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           
  2918                           ;psect for function _Write_USART
  2919  0521                     _Write_USART:
  2920                           
  2921                           ;incstack = 0
  2922                           ; Regs used in _Write_USART: [wreg]
  2923                           ;Write_USART@a stored from wreg
  2924  0521  00F3               	movwf	Write_USART@a
  2925  0522                     l1869:
  2926  0522                     l284:	
  2927                           ;USART.c: 34:     while(!TRMT);
  2928                           
  2929  0522  1683               	bsf	3,5	;RP0=1, select bank1
  2930  0523  1303               	bcf	3,6	;RP1=0, select bank1
  2931  0524  1C98               	btfss	24,1	;volatile
  2932  0525  2D27               	goto	u1161
  2933  0526  2D28               	goto	u1160
  2934  0527                     u1161:
  2935  0527  2D22               	goto	l284
  2936  0528                     u1160:
  2937  0528                     l1871:
  2938                           
  2939                           ;USART.c: 35:     TXREG=a;
  2940  0528  0873               	movf	Write_USART@a,w
  2941  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2942  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2943  052B  0099               	movwf	25	;volatile
  2944  052C                     l287:
  2945  052C  0008               	return
  2946  052D                     __end_of_Write_USART:
  2947                           
  2948                           	psect	text16
  2949  02CC                     __ptext16:	
  2950 ;; *************** function _Lcd_Init *****************
  2951 ;; Defined at:
  2952 ;;		line 15 in file "LCD.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0, pclath, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2966 ;;      Params:         0       0       0       0       0
  2967 ;;      Locals:         0       0       0       0       0
  2968 ;;      Temps:          0       2       0       0       0
  2969 ;;      Totals:         0       2       0       0       0
  2970 ;;Total ram usage:        2 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    3
  2973 ;; This function calls:
  2974 ;;		_Lcd_Cmd
  2975 ;;		_Lcd_Port
  2976 ;; This function is called by:
  2977 ;;		_main
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           
  2982                           ;psect for function _Lcd_Init
  2983  02CC                     _Lcd_Init:
  2984  02CC                     l1941:	
  2985                           ;incstack = 0
  2986                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2987                           
  2988                           
  2989                           ;LCD.c: 16:   Lcd_Port(0x00);
  2990  02CC  3000               	movlw	0
  2991  02CD  120A  118A  2566  120A  118A  	fcall	_Lcd_Port
  2992  02D2                     l1943:
  2993                           
  2994                           ;LCD.c: 17:    _delay((unsigned long)((20)*(8000000/4000.0)));
  2995  02D2  3034               	movlw	52
  2996  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  2997  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  2998  02D5  00C1               	movwf	??_Lcd_Init+1
  2999  02D6  30F1               	movlw	241
  3000  02D7  00C0               	movwf	??_Lcd_Init
  3001  02D8                     u1357:
  3002  02D8  0BC0               	decfsz	??_Lcd_Init,f
  3003  02D9  2AD8               	goto	u1357
  3004  02DA  0BC1               	decfsz	??_Lcd_Init+1,f
  3005  02DB  2AD8               	goto	u1357
  3006  02DC                     l1945:
  3007                           
  3008                           ;LCD.c: 18:   Lcd_Cmd(0x30);
  3009  02DC  3030               	movlw	48
  3010  02DD  120A  118A  24BB  120A  118A  	fcall	_Lcd_Cmd
  3011                           
  3012                           ;LCD.c: 19:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3013  02E2  300D               	movlw	13
  3014  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  3015  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  3016  02E5  00C1               	movwf	??_Lcd_Init+1
  3017  02E6  30FB               	movlw	251
  3018  02E7  00C0               	movwf	??_Lcd_Init
  3019  02E8                     u1367:
  3020  02E8  0BC0               	decfsz	??_Lcd_Init,f
  3021  02E9  2AE8               	goto	u1367
  3022  02EA  0BC1               	decfsz	??_Lcd_Init+1,f
  3023  02EB  2AE8               	goto	u1367
  3024  02EC                     l1947:
  3025                           
  3026                           ;LCD.c: 20:   Lcd_Cmd(0x30);
  3027  02EC  3030               	movlw	48
  3028  02ED  120A  118A  24BB  120A  118A  	fcall	_Lcd_Cmd
  3029  02F2                     l1949:
  3030                           
  3031                           ;LCD.c: 21:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3032  02F2  301D               	movlw	29
  3033  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  3034  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  3035  02F5  00C1               	movwf	??_Lcd_Init+1
  3036  02F6  3090               	movlw	144
  3037  02F7  00C0               	movwf	??_Lcd_Init
  3038  02F8                     u1377:
  3039  02F8  0BC0               	decfsz	??_Lcd_Init,f
  3040  02F9  2AF8               	goto	u1377
  3041  02FA  0BC1               	decfsz	??_Lcd_Init+1,f
  3042  02FB  2AF8               	goto	u1377
  3043  02FC  0000               	nop
  3044                           
  3045                           ;LCD.c: 22:   Lcd_Cmd(0x30);
  3046  02FD  3030               	movlw	48
  3047  02FE  120A  118A  24BB  120A  118A  	fcall	_Lcd_Cmd
  3048                           
  3049                           ;LCD.c: 23:   Lcd_Cmd(0x38);
  3050  0303  3038               	movlw	56
  3051  0304  120A  118A  24BB  120A  118A  	fcall	_Lcd_Cmd
  3052                           
  3053                           ;LCD.c: 24:   Lcd_Cmd(0x0C);
  3054  0309  300C               	movlw	12
  3055  030A  120A  118A  24BB  120A  118A  	fcall	_Lcd_Cmd
  3056                           
  3057                           ;LCD.c: 25:   Lcd_Cmd(0x01);
  3058  030F  3001               	movlw	1
  3059  0310  120A  118A  24BB  120A  118A  	fcall	_Lcd_Cmd
  3060                           
  3061                           ;LCD.c: 26:   Lcd_Cmd(0x06);
  3062  0315  3006               	movlw	6
  3063  0316  120A  118A  24BB  120A  118A  	fcall	_Lcd_Cmd
  3064  031B                     l200:
  3065  031B  0008               	return
  3066  031C                     __end_of_Lcd_Init:
  3067                           
  3068                           	psect	text17
  3069  04FB                     __ptext17:	
  3070 ;; *************** function _Lcd_Clear *****************
  3071 ;; Defined at:
  3072 ;;		line 43 in file "LCD.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0, pclath, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3086 ;;      Params:         0       0       0       0       0
  3087 ;;      Locals:         0       0       0       0       0
  3088 ;;      Temps:          0       0       0       0       0
  3089 ;;      Totals:         0       0       0       0       0
  3090 ;;Total ram usage:        0 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    3
  3093 ;; This function calls:
  3094 ;;		_Lcd_Cmd
  3095 ;; This function is called by:
  3096 ;;		_main
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           
  3101                           ;psect for function _Lcd_Clear
  3102  04FB                     _Lcd_Clear:
  3103  04FB                     l1525:	
  3104                           ;incstack = 0
  3105                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3106                           
  3107                           
  3108                           ;LCD.c: 44:  Lcd_Cmd(0);
  3109  04FB  3000               	movlw	0
  3110  04FC  120A  118A  24BB  120A  118A  	fcall	_Lcd_Cmd
  3111                           
  3112                           ;LCD.c: 45:  Lcd_Cmd(1);
  3113  0501  3001               	movlw	1
  3114  0502  120A  118A  24BB  120A  118A  	fcall	_Lcd_Cmd
  3115  0507                     l209:
  3116  0507  0008               	return
  3117  0508                     __end_of_Lcd_Clear:
  3118                           
  3119                           	psect	text18
  3120  04BB                     __ptext18:	
  3121 ;; *************** function _Lcd_Cmd *****************
  3122 ;; Defined at:
  3123 ;;		line 34 in file "LCD.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  a               1    wreg     unsigned char 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  a               1    6[COMMON] unsigned char 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg, status,2, status,0, pclath, cstack
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3137 ;;      Params:         0       0       0       0       0
  3138 ;;      Locals:         1       0       0       0       0
  3139 ;;      Temps:          2       0       0       0       0
  3140 ;;      Totals:         3       0       0       0       0
  3141 ;;Total ram usage:        3 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; Hardware stack levels required when called:    2
  3144 ;; This function calls:
  3145 ;;		_Lcd_Port
  3146 ;; This function is called by:
  3147 ;;		_Lcd_Init
  3148 ;;		_Lcd_Clear
  3149 ;;		_Lcd_Set_Cursor
  3150 ;;		_Lcd_Shift_Right
  3151 ;;		_Lcd_Shift_Left
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _Lcd_Cmd
  3157  04BB                     _Lcd_Cmd:
  3158                           
  3159                           ;incstack = 0
  3160                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3161                           ;Lcd_Cmd@a stored from wreg
  3162  04BB  00F6               	movwf	Lcd_Cmd@a
  3163  04BC                     l1427:
  3164                           
  3165                           ;LCD.c: 35:  PORTEbits.RE0 = 0;
  3166  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  3167  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  3168  04BE  1009               	bcf	9,0	;volatile
  3169  04BF                     l1429:
  3170                           
  3171                           ;LCD.c: 36:  Lcd_Port(a);
  3172  04BF  0876               	movf	Lcd_Cmd@a,w
  3173  04C0  120A  118A  2566  120A  118A  	fcall	_Lcd_Port
  3174  04C5                     l1431:
  3175                           
  3176                           ;LCD.c: 37:  PORTEbits.RE2 = 1;
  3177  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  3178  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  3179  04C7  1509               	bsf	9,2	;volatile
  3180  04C8                     l1433:
  3181                           
  3182                           ;LCD.c: 38:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3183  04C8  300B               	movlw	11
  3184  04C9  00F5               	movwf	??_Lcd_Cmd+1
  3185  04CA  3062               	movlw	98
  3186  04CB  00F4               	movwf	??_Lcd_Cmd
  3187  04CC                     u1387:
  3188  04CC  0BF4               	decfsz	??_Lcd_Cmd,f
  3189  04CD  2CCC               	goto	u1387
  3190  04CE  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3191  04CF  2CCC               	goto	u1387
  3192  04D0  0000               	nop
  3193  04D1                     l1435:
  3194                           
  3195                           ;LCD.c: 39:         PORTEbits.RE2 = 0;
  3196  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  3197  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  3198  04D3  1109               	bcf	9,2	;volatile
  3199  04D4                     l206:
  3200  04D4  0008               	return
  3201  04D5                     __end_of_Lcd_Cmd:
  3202                           
  3203                           	psect	text19
  3204  0566                     __ptext19:	
  3205 ;; *************** function _Lcd_Port *****************
  3206 ;; Defined at:
  3207 ;;		line 30 in file "LCD.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  a               1    wreg     unsigned char 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  a               1    3[COMMON] unsigned char 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      void 
  3214 ;; Registers used:
  3215 ;;		wreg
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3221 ;;      Params:         0       0       0       0       0
  3222 ;;      Locals:         1       0       0       0       0
  3223 ;;      Temps:          0       0       0       0       0
  3224 ;;      Totals:         1       0       0       0       0
  3225 ;;Total ram usage:        1 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    1
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_Lcd_Init
  3232 ;;		_Lcd_Cmd
  3233 ;;		_Lcd_Write_Char
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           
  3238                           ;psect for function _Lcd_Port
  3239  0566                     _Lcd_Port:
  3240                           
  3241                           ;incstack = 0
  3242                           ; Regs used in _Lcd_Port: [wreg]
  3243                           ;Lcd_Port@a stored from wreg
  3244  0566  00F3               	movwf	Lcd_Port@a
  3245  0567                     l1363:
  3246                           
  3247                           ;LCD.c: 31:     PORTD = a;
  3248  0567  0873               	movf	Lcd_Port@a,w
  3249  0568  1283               	bcf	3,5	;RP0=0, select bank0
  3250  0569  1303               	bcf	3,6	;RP1=0, select bank0
  3251  056A  0088               	movwf	8	;volatile
  3252  056B                     l203:
  3253  056B  0008               	return
  3254  056C                     __end_of_Lcd_Port:
  3255                           
  3256                           	psect	text20
  3257  0549                     __ptext20:	
  3258 ;; *************** function _I2C_Master_RepeatedStart *****************
  3259 ;; Defined at:
  3260 ;;		line 64 in file "I2C.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0, pclath, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3274 ;;      Params:         0       0       0       0       0
  3275 ;;      Locals:         0       0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0
  3277 ;;      Totals:         0       0       0       0       0
  3278 ;;Total ram usage:        0 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:    2
  3281 ;; This function calls:
  3282 ;;		_I2C_Master_Wait
  3283 ;; This function is called by:
  3284 ;;		_main
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           
  3289                           ;psect for function _I2C_Master_RepeatedStart
  3290  0549                     _I2C_Master_RepeatedStart:
  3291  0549                     l1953:	
  3292                           ;incstack = 0
  3293                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3294                           
  3295                           
  3296                           ;I2C.c: 66:     I2C_Master_Wait();
  3297  0549  120A  118A  2508  120A  118A  	fcall	_I2C_Master_Wait
  3298  054E                     l1955:
  3299                           
  3300                           ;I2C.c: 67:     SSPCON2bits.RSEN = 1;
  3301  054E  1683               	bsf	3,5	;RP0=1, select bank1
  3302  054F  1303               	bcf	3,6	;RP1=0, select bank1
  3303  0550  1491               	bsf	17,1	;volatile
  3304  0551                     l171:
  3305  0551  0008               	return
  3306  0552                     __end_of_I2C_Master_RepeatedStart:
  3307                           
  3308                           	psect	text21
  3309  046B                     __ptext21:	
  3310 ;; *************** function _I2C_Master_Read *****************
  3311 ;; Defined at:
  3312 ;;		line 94 in file "I2C.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  a               2    3[COMMON] unsigned short 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  temp            2    0[BANK0 ] unsigned short 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  2    3[COMMON] unsigned short 
  3319 ;; Registers used:
  3320 ;;		wreg, status,2, status,0, pclath, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3326 ;;      Params:         2       0       0       0       0
  3327 ;;      Locals:         0       2       0       0       0
  3328 ;;      Temps:          2       0       0       0       0
  3329 ;;      Totals:         4       2       0       0       0
  3330 ;;Total ram usage:        6 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    2
  3333 ;; This function calls:
  3334 ;;		_I2C_Master_Wait
  3335 ;; This function is called by:
  3336 ;;		_main
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           
  3341                           ;psect for function _I2C_Master_Read
  3342  046B                     _I2C_Master_Read:
  3343  046B                     l1957:	
  3344                           ;incstack = 0
  3345                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3346                           
  3347                           
  3348                           ;I2C.c: 94: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 95: {;I2C.c: 96:    
      +                           unsigned short temp;;I2C.c: 97:     I2C_Master_Wait();
  3349  046B  120A  118A  2508  120A  118A  	fcall	_I2C_Master_Wait
  3350  0470                     l1959:
  3351                           
  3352                           ;I2C.c: 98:     SSPCON2bits.RCEN = 1;
  3353  0470  1683               	bsf	3,5	;RP0=1, select bank1
  3354  0471  1303               	bcf	3,6	;RP1=0, select bank1
  3355  0472  1591               	bsf	17,3	;volatile
  3356                           
  3357                           ;I2C.c: 99:     I2C_Master_Wait();
  3358  0473  120A  118A  2508  120A  118A  	fcall	_I2C_Master_Wait
  3359  0478                     l1961:
  3360                           
  3361                           ;I2C.c: 100:     temp = SSPBUF;
  3362  0478  1283               	bcf	3,5	;RP0=0, select bank0
  3363  0479  1303               	bcf	3,6	;RP1=0, select bank0
  3364  047A  0813               	movf	19,w	;volatile
  3365  047B  00F5               	movwf	??_I2C_Master_Read
  3366  047C  01F6               	clrf	??_I2C_Master_Read+1
  3367  047D  0875               	movf	??_I2C_Master_Read,w
  3368  047E  00C0               	movwf	I2C_Master_Read@temp
  3369  047F  0876               	movf	??_I2C_Master_Read+1,w
  3370  0480  00C1               	movwf	I2C_Master_Read@temp+1
  3371  0481                     l1963:
  3372                           
  3373                           ;I2C.c: 101:     I2C_Master_Wait();
  3374  0481  120A  118A  2508  120A  118A  	fcall	_I2C_Master_Wait
  3375  0486                     l1965:
  3376                           
  3377                           ;I2C.c: 102:     if(a == 1){
  3378  0486  0373               	decf	I2C_Master_Read@a,w
  3379  0487  0474               	iorwf	I2C_Master_Read@a+1,w
  3380  0488  1D03               	btfss	3,2
  3381  0489  2C8B               	goto	u1251
  3382  048A  2C8C               	goto	u1250
  3383  048B                     u1251:
  3384  048B  2C90               	goto	l180
  3385  048C                     u1250:
  3386  048C                     l1967:
  3387                           
  3388                           ;I2C.c: 103:         SSPCON2bits.ACKDT = 0;
  3389  048C  1683               	bsf	3,5	;RP0=1, select bank1
  3390  048D  1303               	bcf	3,6	;RP1=0, select bank1
  3391  048E  1291               	bcf	17,5	;volatile
  3392                           
  3393                           ;I2C.c: 104:     }else{
  3394  048F  2C93               	goto	l181
  3395  0490                     l180:
  3396                           
  3397                           ;I2C.c: 105:         SSPCON2bits.ACKDT = 1;
  3398  0490  1683               	bsf	3,5	;RP0=1, select bank1
  3399  0491  1303               	bcf	3,6	;RP1=0, select bank1
  3400  0492  1691               	bsf	17,5	;volatile
  3401  0493                     l181:	
  3402                           ;I2C.c: 106:     }
  3403                           
  3404                           
  3405                           ;I2C.c: 107:     SSPCON2bits.ACKEN = 1;
  3406  0493  1611               	bsf	17,4	;volatile
  3407  0494                     l1969:
  3408                           
  3409                           ;I2C.c: 108:     return temp;
  3410  0494  1283               	bcf	3,5	;RP0=0, select bank0
  3411  0495  1303               	bcf	3,6	;RP1=0, select bank0
  3412  0496  0841               	movf	I2C_Master_Read@temp+1,w
  3413  0497  00F4               	movwf	?_I2C_Master_Read+1
  3414  0498  0840               	movf	I2C_Master_Read@temp,w
  3415  0499  00F3               	movwf	?_I2C_Master_Read
  3416  049A                     l182:
  3417  049A  0008               	return
  3418  049B                     __end_of_I2C_Master_Read:
  3419                           
  3420                           	psect	text22
  3421  0508                     __ptext22:	
  3422 ;; *************** function _I2C_Master_Wait *****************
  3423 ;; Defined at:
  3424 ;;		line 48 in file "I2C.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;		None
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;		None
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3438 ;;      Params:         0       0       0       0       0
  3439 ;;      Locals:         0       0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0
  3441 ;;      Totals:         0       0       0       0       0
  3442 ;;Total ram usage:        0 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; Hardware stack levels required when called:    1
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_I2C_Master_Start
  3449 ;;		_I2C_Master_RepeatedStart
  3450 ;;		_I2C_Master_Stop
  3451 ;;		_I2C_Master_Write
  3452 ;;		_I2C_Master_Read
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           
  3457                           ;psect for function _I2C_Master_Wait
  3458  0508                     _I2C_Master_Wait:
  3459  0508                     l1829:	
  3460                           ;incstack = 0
  3461                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3462                           
  3463  0508                     l162:	
  3464                           ;I2C.c: 50:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3465                           
  3466  0508  1683               	bsf	3,5	;RP0=1, select bank1
  3467  0509  1303               	bcf	3,6	;RP1=0, select bank1
  3468  050A  1914               	btfsc	20,2	;volatile
  3469  050B  2D0D               	goto	u1071
  3470  050C  2D0E               	goto	u1070
  3471  050D                     u1071:
  3472  050D  2D08               	goto	l162
  3473  050E                     u1070:
  3474  050E                     l1831:
  3475  050E  0811               	movf	17,w	;volatile
  3476  050F  391F               	andlw	31
  3477  0510  1D03               	btfss	3,2
  3478  0511  2D13               	goto	u1081
  3479  0512  2D14               	goto	u1080
  3480  0513                     u1081:
  3481  0513  2D08               	goto	l162
  3482  0514                     u1080:
  3483  0514                     l165:
  3484  0514  0008               	return
  3485  0515                     __end_of_I2C_Master_Wait:
  3486                           
  3487                           	psect	text23
  3488  03D8                     __ptext23:	
  3489 ;; *************** function _ISR *****************
  3490 ;; Defined at:
  3491 ;;		line 91 in file "main_prueba3_mini2.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;		None
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;		None
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      void 
  3498 ;; Registers used:
  3499 ;;		wreg, status,2, status,0
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3505 ;;      Params:         0       0       0       0       0
  3506 ;;      Locals:         0       0       0       0       0
  3507 ;;      Temps:          3       0       0       0       0
  3508 ;;      Totals:         3       0       0       0       0
  3509 ;;Total ram usage:        3 bytes
  3510 ;; Hardware stack levels used:    1
  3511 ;; This function calls:
  3512 ;;		Nothing
  3513 ;; This function is called by:
  3514 ;;		Interrupt level 1
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           
  3519                           ;psect for function _ISR
  3520  03D8                     _ISR:
  3521  03D8                     i1l1209:
  3522                           
  3523                           ;main_prueba3_mini2.c: 92:     if(PIR1bits.RCIF == 1){
  3524  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  3525  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  3526  03DA  1E8C               	btfss	12,5	;volatile
  3527  03DB  2BDD               	goto	u39_21
  3528  03DC  2BDE               	goto	u39_20
  3529  03DD                     u39_21:
  3530  03DD  2C03               	goto	i1l107
  3531  03DE                     u39_20:
  3532  03DE                     i1l1211:
  3533                           
  3534                           ;main_prueba3_mini2.c: 93:         data_recive = RCREG;
  3535  03DE  081A               	movf	26,w	;volatile
  3536  03DF  00F0               	movwf	??_ISR
  3537  03E0  0870               	movf	??_ISR,w
  3538  03E1  00F8               	movwf	_data_recive
  3539  03E2                     i1l1213:
  3540                           
  3541                           ;main_prueba3_mini2.c: 94:         if (data_recive == '1'){
  3542  03E2  3031               	movlw	49
  3543  03E3  0678               	xorwf	_data_recive,w
  3544  03E4  1D03               	btfss	3,2
  3545  03E5  2BE7               	goto	u40_21
  3546  03E6  2BE8               	goto	u40_20
  3547  03E7                     u40_21:
  3548  03E7  2BEA               	goto	i1l1217
  3549  03E8                     u40_20:
  3550  03E8                     i1l1215:
  3551                           
  3552                           ;main_prueba3_mini2.c: 95:             PORTAbits.RA6 = 1;
  3553  03E8  1705               	bsf	5,6	;volatile
  3554                           
  3555                           ;main_prueba3_mini2.c: 96:         }
  3556  03E9  2C02               	goto	i1l1229
  3557  03EA                     i1l1217:
  3558  03EA  3032               	movlw	50
  3559  03EB  0678               	xorwf	_data_recive,w
  3560  03EC  1D03               	btfss	3,2
  3561  03ED  2BEF               	goto	u41_21
  3562  03EE  2BF0               	goto	u41_20
  3563  03EF                     u41_21:
  3564  03EF  2BF2               	goto	i1l1221
  3565  03F0                     u41_20:
  3566  03F0                     i1l1219:
  3567                           
  3568                           ;main_prueba3_mini2.c: 98:             PORTAbits.RA6 = 0;
  3569  03F0  1305               	bcf	5,6	;volatile
  3570                           
  3571                           ;main_prueba3_mini2.c: 99:         }
  3572  03F1  2C02               	goto	i1l1229
  3573  03F2                     i1l1221:
  3574  03F2  3033               	movlw	51
  3575  03F3  0678               	xorwf	_data_recive,w
  3576  03F4  1D03               	btfss	3,2
  3577  03F5  2BF7               	goto	u42_21
  3578  03F6  2BF8               	goto	u42_20
  3579  03F7                     u42_21:
  3580  03F7  2BFA               	goto	i1l1225
  3581  03F8                     u42_20:
  3582  03F8                     i1l1223:
  3583                           
  3584                           ;main_prueba3_mini2.c: 101:             PORTAbits.RA7 = 1;
  3585  03F8  1785               	bsf	5,7	;volatile
  3586                           
  3587                           ;main_prueba3_mini2.c: 102:         }
  3588  03F9  2C02               	goto	i1l1229
  3589  03FA                     i1l1225:
  3590  03FA  3034               	movlw	52
  3591  03FB  0678               	xorwf	_data_recive,w
  3592  03FC  1D03               	btfss	3,2
  3593  03FD  2BFF               	goto	u43_21
  3594  03FE  2C00               	goto	u43_20
  3595  03FF                     u43_21:
  3596  03FF  2C02               	goto	i1l103
  3597  0400                     u43_20:
  3598  0400                     i1l1227:
  3599                           
  3600                           ;main_prueba3_mini2.c: 104:             PORTAbits.RA7 = 0;
  3601  0400  1385               	bcf	5,7	;volatile
  3602  0401  2C02               	goto	i1l1229
  3603  0402                     i1l103:
  3604  0402                     i1l1229:
  3605                           
  3606                           ;main_prueba3_mini2.c: 106:         data_recive = 0;
  3607  0402  01F8               	clrf	_data_recive
  3608  0403                     i1l107:
  3609  0403  0872               	movf	??_ISR+2,w
  3610  0404  008A               	movwf	10
  3611  0405  0E71               	swapf	??_ISR+1,w
  3612  0406  0083               	movwf	3
  3613  0407  0EFE               	swapf	btemp,f
  3614  0408  0E7E               	swapf	btemp,w
  3615  0409  0009               	retfie
  3616  040A                     __end_of_ISR:
  3617  007E                     btemp	set	126	;btemp
  3618  007E                     wtemp0	set	126
  3619                           
  3620                           	psect	intentry
  3621  0004                     __pintentry:	
  3622                           ;incstack = 0
  3623                           ; Regs used in _ISR: [wreg+status,2+status,0]
  3624                           
  3625  0004                     interrupt_function:
  3626  007E                     saved_w	set	btemp
  3627  0004  00FE               	movwf	btemp
  3628  0005  0E03               	swapf	3,w
  3629  0006  00F1               	movwf	??_ISR+1
  3630  0007  080A               	movf	10,w
  3631  0008  00F2               	movwf	??_ISR+2
  3632  0009  120A  118A  2BD8   	ljmp	_ISR
  3633                           
  3634                           	psect	config
  3635                           
  3636                           ;Config register CONFIG1 @ 0x2007
  3637                           ;	Oscillator Selection bits
  3638                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3639                           ;	Watchdog Timer Enable bit
  3640                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3641                           ;	Power-up Timer Enable bit
  3642                           ;	PWRTE = OFF, PWRT disabled
  3643                           ;	RE3/MCLR pin function select bit
  3644                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3645                           ;	Code Protection bit
  3646                           ;	CP = OFF, Program memory code protection is disabled
  3647                           ;	Data Code Protection bit
  3648                           ;	CPD = OFF, Data memory code protection is disabled
  3649                           ;	Brown Out Reset Selection bits
  3650                           ;	BOREN = OFF, BOR disabled
  3651                           ;	Internal External Switchover bit
  3652                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3653                           ;	Fail-Safe Clock Monitor Enabled bit
  3654                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3655                           ;	Low Voltage Programming Enable bit
  3656                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3657                           ;	In-Circuit Debugger Mode bit
  3658                           ;	DEBUG = 0x1, unprogrammed default
  3659  2007                     	org	8199
  3660  2007  20D4               	dw	8404
  3661                           
  3662                           ;Config register CONFIG2 @ 0x2008
  3663                           ;	Brown-out Reset Selection bit
  3664                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3665                           ;	Flash Program Memory Self Write Enable bits
  3666                           ;	WRT = OFF, Write protection off
  3667  2008                     	org	8200
  3668  2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    10
    Data        32
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     26      65
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), RAM(DATA[512]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Write_USART_String@a	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _main->_Write_USART_String
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _Write_to_RTC->_I2C_Master_Write
    _Write_USART_String->_Write_USART
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5459
                                             23 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                        _Write_USART
                 _Write_USART_String
                       _Write_to_RTC
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    17      5    1608
                                              9 BANK0     14     9      5
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
                    _USART_INTERRUPT
                         _USART_Init
                _USART_Init_BaudRate
 ---------------------------------------------------------------------------------
 (2) _USART_Init_BaudRate                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USART_INTERRUPT                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Write_to_RTC                                         0     0      0    1111
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1111
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _Write_USART_String                                   5     3      2     251
                                              4 COMMON     4     2      2
                                              0 BANK0      1     1      0
                        _Write_USART
 ---------------------------------------------------------------------------------
 (2) _Write_USART                                          1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Write_USART
   _Write_USART_String
     _Write_USART
   _Write_to_RTC
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _USART_INTERRUPT
     _USART_Init
     _USART_Init_BaudRate
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      41       5       81.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      60      12        0.0%
ABS                  0      0      60       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Mar 07 10:27:35 2021

                                _i 0060                                  pc 0002  
                               fsr 0004               __size_of_Write_USART 000C  
                 ?_USART_INTERRUPT 0070                                l200 031B  
                              l130 043A                                l203 056B  
                              l206 04D4                                l127 02CB  
                              l209 0507                                l162 0508  
                              l171 0551                                l180 0490  
                              l165 0514                                l181 0493  
                              l182 049A                                l174 053F  
                              l159 03D7                                l168 0548  
                              l177 0536                                l281 0565  
                              l409 0129                                l275 0520  
                              l284 0522                                l293 046A  
                              l278 055F                                l287 052C  
                              l449 0271                                l685 0361  
                              l695 039D                                _GIE 005F  
                              u700 0386                                _ISR 03D8  
                              u701 0385                                u720 0399  
                              u721 0398                                u705 0382  
                              u715 038D                                u670 036A  
                              u671 0369                                u690 037C  
                              u691 037B                                u685 036E  
                              fsr0 0004                                indf 0000  
      __size_of_Write_USART_String 0030                               ?_ISR 0070  
                             l2011 00B5                               l2003 0089  
                             l2021 0102                               l2013 00BE  
                             l2023 0108                               l2015 00C4  
                             l2007 00A5                               l2041 0458  
                             l2017 00C9                               l2009 00AF  
                             l2025 0111                               l2035 043B  
                             l2019 00F9                               l2027 0123  
                             l2051 013C                               l2043 012A  
                             l2037 043F                               l1421 0515  
                             l2109 0063                               l2061 015C  
                             l2053 0141                               l2045 012F  
                             l1431 04C5                               l2039 0452  
                             l1423 051F                               l2071 019B  
                             l2063 0165                               l2055 0146  
                             l2047 0132                               l1433 04C8  
                             l1425 0560                               l1417 055A  
                             l2081 01E2                               l2073 01AA  
                             l2065 0174                               l2057 014F  
                             l2049 0137                               l1363 0567  
                             l1435 04D1                               l1427 04BC  
                             l1419 055D                               l2083 01EB  
                             l2075 01B9                               l2067 0183  
                             l2059 0157                               l1429 04BF  
                             l1525 04FB                               l2085 01F1  
                             l2077 01C7                               l2069 0192  
                             l1471 0378                               l1463 0362  
                             l2087 01F7                               l2079 01CC  
                             l1473 037C                               l1465 036A  
                             l1481 0399                               l1475 0386  
                             l1467 036D                               l1901 034F  
                             l1477 038C                               l1469 0374  
                             l1831 050E                               l1911 040A  
                             l1903 0350                               l1479 0393  
                             l1841 0230                               l1833 020A  
                             l1921 0416                               l1913 0411  
                             l1905 0357                               l1851 0263  
                             l1843 0239                               l1835 021C  
                             l1931 041D                               l1923 0417  
                             l1915 0413                               l1907 035D  
                             l1829 0508                               l1941 02CC  
                             l1861 052D                               l1845 024B  
                             l1837 021F                               l1853 0269  
                             l1933 041E                               l1925 041A  
                             l1917 0414                               l1943 02D2  
                             l1871 0528                               l1863 0532  
                             l1951 0272                               l1847 0259  
                             l1839 022C                               l1935 042B  
                             l1927 041B                               l1919 0415  
                             l1961 0478                               l1953 0549  
                             l1945 02DC                               l1857 0540  
                             l1865 0537                               l1849 025A  
                             l1881 03D5                               l1873 039E  
                             l1937 0430                               l1929 041C  
                             l1963 0481                               l1955 054E  
                             l1947 02EC                               l1859 0545  
                             l1867 053C                               l1883 03D6  
                             l1875 03A2                               l1939 0435  
                             l1891 0329                               l1965 0486  
                             l1957 046B                               l1949 02F2  
                             l1869 0522                               l1877 03A5  
                             l1893 0330                               l1885 031C  
                             l1981 0050                               l1973 0033  
                             l1967 048C                               l1959 0470  
                             l1879 03D4                               l1895 0334  
                             l1887 0320                               l1991 007A  
                             l1975 003A                               l1969 0494  
                             l1897 0338                               l1889 0326  
                             l1993 007E                               l1985 0051  
                             l1977 0040                               l1899 0349  
                             l1995 0082                               l1987 006E  
                             l1979 0049                               l1997 0087  
                             l1989 0076                               STR_1 04E5  
                             u1110 0230                               u1111 022F  
                             u1200 0338                               u1105 0221  
                             u1201 0337                               u1130 024B  
                             u1131 024A                               u1220 0349  
                             u1300 00B5                               u1125 0232  
                             u1221 0348                               u1301 00B4  
                             u1070 050E                               u1150 0269  
                             u1310 0111                               u1071 050D  
                             u1151 0268                               u1135 0247  
                             u1215 0339                               u1311 0110  
                             u1080 0514                               u1160 0528  
                             u1240 035D                               u1320 0123  
                             u1081 0513                               u1161 0527  
                             u1145 025B                               u1241 035C  
                             u1225 0345                               u1321 0122  
                             u1250 048C                               u1330 046A  
                             u1090 021C                               u1170 03B5  
                             u1251 048B                               u1331 0469  
                             u1091 021B                               u1235 0351  
                             u1180 0326                               u1260 0040  
                             u1181 0325                               u1261 003F  
                             u1270 007E                               u1175 03B0  
                             u1271 007D                               u1280 00A4  
                             u1281 00A3                               u1290 00AF  
                             u1195 032A                               u1291 00AE  
                             u1347 01FF                               u1357 02D8  
                             u1285 00A0                               u1367 02E8  
                             u1377 02F8                               u1387 04CC  
                             _PEIE 005E                               _RCIF 0065  
                             _TRMT 04C1                               _Date 0020  
                             _Time 0031   __end_of_I2C_Master_RepeatedStart 0552  
                             _cont 005B                               _main 012A  
                             _hour 005F                               _year 005C  
                             btemp 007E                               start 000C  
                  __end_of_Lcd_Cmd 04D5              __size_of_Write_to_RTC 005A  
                            ??_ISR 0070                   ?_I2C_Master_Init 004D  
                 ?_I2C_Master_Read 0073                   ?_I2C_Master_Wait 0070  
                 ?_I2C_Master_Stop 0070                              ?_main 0070  
                            _ANSEL 0188                    __end_of___lldiv 0272  
                  __end_of___lwdiv 0362                              i1l103 0402  
                            i1l107 0403                    __end_of___lwmod 039E  
                            _RCREG 001A                              u40_20 03E8  
                            u40_21 03E7                              u41_20 03F0  
                            u41_21 03EF                              u42_20 03F8  
                            u42_21 03F7                              _SPBRG 0099  
                            u43_20 0400                              u43_21 03FF  
                            _PORTA 0005                              _PORTB 0006  
                            _PORTC 0007                              _PORTD 0008  
                            _PORTE 0009                              u39_20 03DE  
                            u39_21 03DD                              _TRISA 0085  
                            _TRISB 0086                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            _SSPIF 0063                              _TXREG 0019  
                            _m_day 005E                    __end_of_dpowers 04E5  
                            _month 005D                              _setup 040A  
                            pclath 000A                       _Write_to_RTC 0272  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 012A                        ?_USART_Init 0070  
                 __end_of_Lcd_Init 031C                   __end_of_Lcd_Port 056C  
                  __initialization 000F                       __end_of_main 020A  
                           ??_main 0057                 __size_of_Lcd_Clear 000D  
                ?_I2C_Master_Start 0070                  ?_I2C_Master_Write 0073  
               ??_I2C_Master_Start 0073                 ??_I2C_Master_Write 0075  
              _USART_Init_BaudRate 055A                             ?_setup 0070  
                           _ANSELH 0189                             i1l1211 03DE  
                           i1l1221 03F2                             i1l1213 03E2  
                           i1l1223 03F8                             i1l1215 03E8  
                           i1l1225 03FA                             i1l1217 03EA  
                           i1l1209 03D8                             i1l1227 0400  
                           i1l1219 03F0                             i1l1229 0402  
                        ??_Lcd_Cmd 0074                             _SPBRGH 009A  
                           _SSPADD 0093                             _TRISC3 043B  
                           _TRISC4 043C                             _SSPCON 0014  
                           _SSPBUF 0013           _I2C_Master_RepeatedStart 0549  
             ?_USART_Init_BaudRate 0070                          ??___lldiv 0073  
                        ??___lwdiv 0077                          ??___lwmod 0047  
                           _minute 0079                             _second 007A  
                           saved_w 007E                __size_of_USART_Init 000C  
                        ??_sprintf 004E            __end_of__initialization 002F  
                __end_of_Lcd_Clear 0508                     __pcstackCOMMON 0070  
            ??_USART_Init_BaudRate 0073                       __pidataBANK0 049B  
                    __end_of_setup 043B                          ?_Lcd_Init 0070  
                        ?_Lcd_Port 0070                            ??_setup 0078  
                     Write_USART@a 0073                         __pbssBANK0 005A  
                       __pbssBANK1 00A0                         _data_total 00A0  
                       __pmaintext 012A                      ??_Write_USART 0073  
                       __pintentry 0004         __end_of_Write_USART_String 046B  
                       ??_Lcd_Init 0040                         ??_Lcd_Port 0073  
         __size_of_USART_INTERRUPT 0006                            _SSPCON2 0091  
                          _SSPSTAT 0094                         __stringtab 04D5  
                          _Lcd_Cmd 04BB                       ??_USART_Init 0073  
                          ___lldiv 020A                            ___lwdiv 031C  
                          ___lwmod 0362                            __ptext1 0033  
                          __ptext2 0362                            __ptext3 031C  
                          __ptext4 040A                            __ptext5 055A  
                          __ptext6 0515                            __ptext7 0560  
                          __ptext8 039E                            __ptext9 020A  
                     __size_of_ISR 0032                            _dpowers 04DB  
              __end_of_Write_USART 052D           __size_of_I2C_Master_Init 003A  
         __size_of_I2C_Master_Read 0030           __size_of_I2C_Master_Wait 000D  
         __size_of_I2C_Master_Stop 0009                 __end_of_USART_Init 0521  
                          _sprintf 0033                            clrloop0 0553  
             end_of_initialization 002F         ??_I2C_Master_RepeatedStart 0073  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 0040                    ___lldiv@counter 004C  
                        _RCSTAbits 0018                   I2C_Master_Init@c 004D  
                 I2C_Master_Read@a 0073                          Lcd_Port@a 0073  
                        _PORTAbits 0005                          _PORTDbits 0008  
                        _PORTEbits 0009                          _TRISCbits 0087  
                        _TXSTAbits 0098                  ??_USART_INTERRUPT 0073  
                        _Lcd_Clear 04FB                        _Write_USART 0521  
              start_initialization 000F                        __end_of_ISR 040A  
                __size_of_Lcd_Init 0050                  __size_of_Lcd_Port 0006  
                ??_I2C_Master_Init 0074                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                  ??_I2C_Master_Stop 0073  
      __end_of_USART_Init_BaudRate 0560                         ?_Lcd_Clear 0070  
                       init_fetch0 04E8                        __pdataBANK0 0020  
                      __pbssCOMMON 0078                          ___latbits 0002  
                    __pcstackBANK0 0040                        _data_recive 0078  
                    ?_Write_to_RTC 0070                           ?_Lcd_Cmd 0070  
                      sprintf@flag 0052                 _Write_USART_String 043B  
                      sprintf@prec 0053                   _I2C_Master_Start 0540  
                 _I2C_Master_Write 052D                   ___lwdiv@dividend 0075  
              ?_Write_USART_String 0074                           ?___lldiv 0040  
                         ?___lwdiv 0073                           ?___lwmod 0043  
                        __pstrings 04D5                          _cont_send 005A  
             ??_Write_USART_String 0076                   ___lwdiv@quotient 0041  
                         ?_sprintf 0049                     ??_Write_to_RTC 0075  
                   __size_of_setup 0031                  interrupt_function 0004  
                        clear_ram0 0552                           _PIE1bits 008C  
                         Lcd_Cmd@a 0076                           _PIR1bits 000C  
                      ??_Lcd_Clear 0077                        __stringbase 04DA  
                  _USART_INTERRUPT 0560                           _Lcd_Init 02CC  
                         _Lcd_Port 0566                I2C_Master_Read@temp 0040  
                 __size_of_Lcd_Cmd 001A                       ?_Write_USART 0070  
__size_of_I2C_Master_RepeatedStart 0009          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068                   __size_of___lwdiv 0046  
                 __size_of___lwmod 003C                 __end_of__stringtab 04DB  
                       sprintf@val 0054                    _I2C_Master_Init 039E  
                  _I2C_Master_Read 046B                    _I2C_Master_Wait 0508  
                  _I2C_Master_Stop 0537                    ___lwdiv@divisor 0073  
                  ___lwdiv@counter 0040                           __ptext10 0272  
                         __ptext11 052D                           __ptext20 0549  
                         __ptext12 0537                           __ptext21 046B  
                         __ptext13 0540                           __ptext22 0508  
                         __ptext14 043B                           __ptext23 03D8  
                         __ptext15 0521                           __ptext16 02CC  
                         __ptext17 04FB                           __ptext18 04BB  
                         __ptext19 0566                   __size_of_sprintf 00F7  
                    __size_of_main 00E0               __end_of_Write_to_RTC 02CC  
          __end_of_USART_INTERRUPT 0566           __end_of_I2C_Master_Start 0549  
         __end_of_I2C_Master_Write 0537                         _INTCONbits 000B  
              Write_USART_String@a 0074                Write_USART_String@i 0040  
                         init_ram0 04EC                           intlevel1 0000  
                        sprintf@ap 0051                          sprintf@sp 0049  
                 ___lwmod@dividend 0045                   ___lldiv@dividend 0044  
                        stringcode 04D5                         _OSCCONbits 008F  
     __size_of_USART_Init_BaudRate 0006            __end_of_I2C_Master_Init 03D8  
          __end_of_I2C_Master_Read 049B            __end_of_I2C_Master_Wait 0515  
          __end_of_I2C_Master_Stop 0540                           sprintf@c 0056  
                         sprintf@f 004B                   ___lldiv@quotient 0048  
                I2C_Master_Write@d 0073                    ___lwmod@divisor 0043  
                  ___lwmod@counter 0048                           stringdir 04D5  
                         stringtab 04D5                        _SSPCON2bits 0091  
                       _USART_Init 0515  
